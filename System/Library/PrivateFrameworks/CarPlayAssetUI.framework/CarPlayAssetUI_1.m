id WidgetHostViewControllerWrapperView.updateUIViewController(_:context:)(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  double v5;
  double v6;
  int v7;
  uint64_t (*v8)(void *);
  id v9;
  id result;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  double v16;

  v3 = *(void **)(v1 + 40);
  v4 = *(unsigned __int8 *)(v1 + 48);
  v5 = *(double *)(v1 + 56);
  v6 = *(double *)(v1 + 64);
  v7 = *(unsigned __int8 *)(v1 + 72);
  v8 = *(uint64_t (**)(void *))(v1 + 80);
  objc_msgSend(a1, sel_setWidget_, *(_QWORD *)(v1 + 16));
  objc_msgSend(a1, sel_setVisibleEntryShouldSnapshot_, 1);
  objc_msgSend(a1, sel_setContentType_, 0);
  objc_msgSend(a1, sel_setCanAppearInSecureEnvironment_, 1);
  objc_msgSend(a1, sel_setColorScheme_, 2);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16AA0]), sel_initWithRenderingMode_backgroundViewPolicy_, 1, 1);
  objc_msgSend(a1, sel_setRenderScheme_, v9);

  objc_msgSend(a1, sel_setMetricsDefineSize_, v4);
  objc_msgSend(a1, sel_setVisibility_, 2);
  objc_msgSend(a1, sel_setInteractionDisabled_, 1);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v11 = result;
  objc_msgSend(result, sel_setFrame_, 0.0, 0.0, v5, v6);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v12 = result;
  v13 = objc_msgSend(result, sel_layer);

  objc_msgSend(v13, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v14 = result;
  v15 = objc_msgSend(result, sel_layer);

  v16 = 0.0;
  if ((v7 & v4) == 1)
    objc_msgSend(v3, sel__effectiveCornerRadius, 0.0);
  objc_msgSend(v15, sel_setCornerRadius_, v16);

  result = objc_msgSend(a1, sel_setPresentationMode_, 2);
  if (v8)
    return (id)v8(a1);
  return result;
}

uint64_t sub_2378E0638()
{
  return sub_237A86EB8();
}

uint64_t sub_2378E0670()
{
  sub_2378E0B2C();
  return sub_237A86EF4();
}

uint64_t sub_2378E06C0()
{
  sub_2378E0B2C();
  return sub_237A86EC4();
}

void sub_2378E0710()
{
  sub_2378E0B2C();
  sub_237A86EE8();
  __break(1u);
}

unint64_t sub_2378E0738()
{
  unint64_t result;

  result = qword_256820860;
  if (!qword_256820860)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for WidgetHostViewControllerWrapperView, &type metadata for WidgetHostViewControllerWrapperView);
    atomic_store(result, (unint64_t *)&qword_256820860);
  }
  return result;
}

uint64_t sub_2378E077C()
{
  return MEMORY[0x24BDF5560];
}

void destroy for WidgetHostViewControllerWrapperView(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
    swift_release();
}

uint64_t initializeWithCopy for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  id v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = (_OWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  v11 = v7;
  if (v8)
  {
    v12 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a1 + 80);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  if (!v10)
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 80);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHostViewControllerWrapperView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetHostViewControllerWrapperView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetHostViewControllerWrapperView()
{
  return &type metadata for WidgetHostViewControllerWrapperView;
}

unint64_t sub_2378E0B2C()
{
  unint64_t result;

  result = qword_256820868;
  if (!qword_256820868)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for WidgetHostViewControllerWrapperView, &type metadata for WidgetHostViewControllerWrapperView);
    atomic_store(result, (unint64_t *)&qword_256820868);
  }
  return result;
}

uint64_t sub_2378E0B70()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ZoneModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2378DE6A4(v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ZoneModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2378DE6A4(v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2378E0CAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ZoneModel();
  result = sub_237A866A8();
  *a1 = result;
  return result;
}

uint64_t ZoneView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v2);
  v45 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820888);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820890);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820898);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208A0);
  MEMORY[0x24BDAC7A8](v42);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1[1];
  v47 = *v1;
  v18 = v47;
  v48 = v19;
  sub_2378E1144((uint64_t)v12);
  v20 = sub_237A874AC();
  sub_2378E18E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v20, v21, (uint64_t)&qword_256820890, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820898);
  sub_2378BC024((uint64_t)v12, &qword_256820890);
  v22 = v19 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone;
  sub_2378D07D8(v19 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  swift_retain();
  v23 = Zone.overlayComponents.getter();
  sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v47 = v23;
  swift_getKeyPath();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v18;
  *(_QWORD *)(v24 + 24) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820588);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568208A8);
  sub_2378B70D4(&qword_2568208B0, &qword_256820588, MEMORY[0x24BEE12D8]);
  sub_2378E2E74();
  sub_2378E2EF0();
  sub_237A87404();
  v25 = sub_237A874AC();
  v27 = v26;
  v28 = v43;
  v29 = &v17[*(int *)(v42 + 36)];
  v30 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v29, v9, v44);
  v31 = (uint64_t *)&v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568208D8) + 36)];
  *v31 = v25;
  v31[1] = v27;
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v17, &qword_256820898);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v30);
  sub_2378BC024((uint64_t)v15, &qword_256820898);
  KeyPath = swift_getKeyPath();
  v33 = v22;
  v34 = v45;
  sub_2378BBFE0(v33, v45, &qword_25681E8E0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208E0);
  v37 = v46;
  v38 = (uint64_t *)(v46 + *(int *)(v36 + 36));
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208E8);
  sub_2378BBFE0(v34, (uint64_t)v38 + *(int *)(v39 + 28), &qword_256820880);
  *v38 = KeyPath;
  sub_2378BBFE0((uint64_t)v17, v37, &qword_2568208A0);
  sub_2378BC024(v34, &qword_256820880);
  return sub_2378BC024((uint64_t)v17, &qword_2568208A0);
}

uint64_t sub_2378E1144@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  double v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;

  v74 = a1;
  v68 = type metadata accessor for Component();
  v71 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v70 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v63 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208A8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t *)((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v63 - v10;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A38);
  v12 = MEMORY[0x24BDAC7A8](v73);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v63 - v15;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B28);
  MEMORY[0x24BDAC7A8](v76);
  v72 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Zone();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v63 - v22;
  v24 = v1[1];
  *(_QWORD *)&v75 = *v1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  if ((_QWORD)v77)
  {
    sub_2378D07D8(v24 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v25 = &v23[*(int *)(v18 + 36)];
    if ((v25[9] & 1) != 0)
    {
      v26 = &v23[*(int *)(v18 + 32)];
      v27 = v75;
      v28 = v72;
      if (v26[16])
      {
        v29 = 0;
        v30 = 0;
        v31 = 0.0;
      }
      else
      {
        v31 = -*((double *)v26 + 1);
        v30 = 1;
        v29 = 0x4022000000000000;
      }
    }
    else
    {
      v40 = *(_QWORD *)v25;
      v41 = v25[8] & 1;
      if (v41)
        v29 = 0;
      else
        v29 = v40;
      v30 = 2 * v41;
      v31 = 0.0;
      v27 = v75;
      v28 = v72;
    }
    swift_retain();
    sub_2378DE6A4((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v27;
    *(_QWORD *)(v59 + 24) = v24;
    KeyPath = swift_getKeyPath();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820B30);
    sub_2378B70D4(&qword_256820B38, &qword_256820B30, (uint64_t)&protocol conformance descriptor for CarouselModel<A>);
    v61 = sub_237A86984();
    *(_QWORD *)v28 = KeyPath;
    *((_WORD *)v28 + 4) = 0;
    *((_QWORD *)v28 + 2) = v61;
    *((_QWORD *)v28 + 3) = v62;
    *((_QWORD *)v28 + 4) = sub_2378E38A4;
    *((_QWORD *)v28 + 5) = v59;
    *((_QWORD *)v28 + 6) = v29;
    *((double *)v28 + 7) = v31;
    v28[64] = v30;
    *((_QWORD *)v28 + 9) = 0x4024000000000000;
    swift_storeEnumTagMultiPayload();
    sub_2378E38B4(KeyPath, 0, 0);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820A28);
    sub_2378B70D4(&qword_256820A20, &qword_256820A28, (uint64_t)&protocol conformance descriptor for Carousel<A, B>);
    sub_2378E3378();
    sub_237A86D44();
    swift_release();
    sub_2378E38C0(KeyPath, 0, 0);
    swift_release();
    return swift_release();
  }
  else
  {
    v32 = v70;
    v33 = v71;
    v65 = v14;
    v34 = (uint64_t)v69;
    sub_2378D07D8(v24 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v35 = Zone.primaryComponents.getter();
    sub_2378DE6A4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v36 = *(_QWORD *)(v35 + 16);
    v64 = v16;
    if (v36)
    {
      v37 = v34;
      sub_2378D07D8(v35 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v34, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v38 = 0;
      v39 = (uint64_t)v11;
    }
    else
    {
      v38 = 1;
      v39 = (uint64_t)v11;
      v37 = v34;
    }
    v42 = (uint64_t)v72;
    v43 = (uint64_t)v32;
    v45 = v67;
    v44 = v68;
    v46 = (uint64_t)v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v37, v38, 1, v68);
    swift_bridgeObjectRelease();
    sub_2378BBFE0(v37, v46, &qword_2568207A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v46, 1, v44) == 1)
    {
      sub_2378BC024(v46, &qword_2568207A8);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v45, 1, 1, v47);
    }
    else
    {
      sub_2378D0858(v46, v43, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      *v45 = sub_237A874AC();
      v45[1] = v49;
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AA0);
      sub_2378E2564(v43, v24, (char *)v45 + *(int *)(v50 + 44));
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v45, 0, 1, v51);
      sub_2378DE6A4(v43, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    }
    v48 = v73;
    sub_237870370((uint64_t)v45, v39, &qword_2568208A8);
    sub_2378BC024(v37, &qword_2568207A8);
    v52 = sub_237A874AC();
    v54 = v53;
    sub_2378E22E8(v24, (uint64_t *)&v77);
    v75 = v77;
    v55 = (uint64_t)v65;
    sub_2378BBFE0(v39, (uint64_t)v65, &qword_2568208A8);
    v56 = v55 + *(int *)(v48 + 36);
    *(_OWORD *)v56 = v75;
    *(_QWORD *)(v56 + 16) = v52;
    *(_QWORD *)(v56 + 24) = v54;
    sub_2378BC024(v39, &qword_2568208A8);
    v57 = (uint64_t)v64;
    sub_237870370(v55, (uint64_t)v64, &qword_256820A38);
    sub_2378BBFE0(v57, v42, &qword_256820A38);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820A28);
    sub_2378B70D4(&qword_256820A20, &qword_256820A28, (uint64_t)&protocol conformance descriptor for Carousel<A, B>);
    sub_2378E3378();
    sub_237A86D44();
    return sub_2378BC024(v57, &qword_256820A38);
  }
}

double sub_2378E187C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for NotificationView, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378D07D8, &qword_256820B68).n128_u64[0];
  return result;
}

__n128 sub_2378E18E0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t *v21;
  int v24;
  void *v31;
  _OWORD *v32;
  __n128 result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v20 = a17;
  v21 = a18;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  v24 = a8 & 1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if (v24)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_237A87D4C();
    v31 = (void *)sub_237A86F0C();
    sub_237A86600();

    v21 = a18;
    v20 = a17;
  }
  sub_237A86A08();
  v20(v18, a9, a16);
  v32 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  *v32 = v34;
  v32[1] = v35;
  result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_2378E1ABC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for UserInteractiveView, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378D07D8, &qword_256820A90).n128_u64[0];
  return result;
}

double sub_2378E1B20@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820A70, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820A78).n128_u64[0];
  return result;
}

double sub_2378E1B84@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820A60, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820A68).n128_u64[0];
  return result;
}

double sub_2378E1BE8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820A80, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820A88).n128_u64[0];
  return result;
}

double sub_2378E1C4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820B98, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820BA0).n128_u64[0];
  return result;
}

double sub_2378E1CB0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820B78, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820B80).n128_u64[0];
  return result;
}

double sub_2378E1D14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256820B88, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378BBFE0, &qword_256820B90).n128_u64[0];
  return result;
}

double sub_2378E1D78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2378E18E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for SingleSelectMenuView, (void (*)(uint64_t, uint64_t, uint64_t))sub_2378D07D8, &qword_256820B70).n128_u64[0];
  return result;
}

uint64_t sub_2378E1DDC()
{
  sub_2378E3690();
  return sub_237A86B88();
}

uint64_t sub_2378E1E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2378BBFE0(a1, (uint64_t)&v9 - v6, &qword_256820880);
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v5, &qword_256820880);
  sub_2378E3690();
  sub_237A86B94();
  return sub_2378BC024((uint64_t)v7, &qword_256820880);
}

uint64_t sub_2378E1EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char v32;
  char *v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35[0] = a2;
  v37 = a1;
  v40 = a4;
  v36 = sub_237A8747C();
  MEMORY[0x24BDAC7A8](v36);
  v35[1] = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Component();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v35 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208A8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (_QWORD *)((char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v35 - v22;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B40);
  MEMORY[0x24BDAC7A8](v38);
  v25 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378D07D8(v37, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
  sub_2378BBFE0((uint64_t)v17, (uint64_t)v15, &qword_2568207A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    sub_2378BC024((uint64_t)v15, &qword_2568207A8);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v21, 1, 1, v26);
  }
  else
  {
    sub_2378D0858((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    *v21 = sub_237A874AC();
    v21[1] = v27;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AA0);
    sub_2378E2564((uint64_t)v11, a3, (char *)v21 + *(int *)(v28 + 44));
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v21, 0, 1, v29);
    sub_2378DE6A4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
  sub_237870370((uint64_t)v21, (uint64_t)v23, &qword_2568208A8);
  sub_2378BC024((uint64_t)v17, &qword_2568207A8);
  sub_2378D07D8(a3 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v30 = v7[*(int *)(v39 + 44)];
  swift_retain();
  sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  if (v30 == 1)
    sub_237A87470();
  else
    v41 = sub_237A87200();
  v31 = sub_237A86888();
  swift_release();
  v32 = sub_237A86F3C();
  sub_2378BBFE0((uint64_t)v23, (uint64_t)v25, &qword_2568208A8);
  v33 = &v25[*(int *)(v38 + 36)];
  *(_QWORD *)v33 = v31;
  v33[8] = v32;
  sub_2378BC024((uint64_t)v23, &qword_2568208A8);
  return sub_237870370((uint64_t)v25, v40, &qword_256820B40);
}

uint64_t sub_2378E22E8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  uint64_t v23;

  v4 = sub_237A8747C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t **)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone;
  v12 = a1 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone + *(int *)(v5 + 36);
  if ((*(_BYTE *)(v12 + 9) & 1) != 0)
  {
    sub_2378E38CC();
    swift_retain();
  }
  else
  {
    if ((*(_BYTE *)(v12 + 8) & 1) != 0)
    {
      sub_2378E3910();
    }
    else
    {
      v13 = *(_QWORD *)v12;
      v14 = *(int *)(v8 + 20);
      v22 = a2;
      v15 = (char *)v10 + v14;
      v16 = *MEMORY[0x24BDEEB68];
      v17 = sub_237A86C54();
      a2 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
      *v10 = v13;
      v10[1] = v13;
      sub_23786FAA0(&qword_256820B60, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    }
    swift_retain();
    v23 = sub_237A87428();
    sub_2378E3954();
  }
  v18 = sub_237A87428();
  sub_2378D07D8(v11, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v19 = v7[*(int *)(v5 + 44)];
  sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  if (v19 == 1)
    sub_237A87470();
  else
    v23 = sub_237A87200();
  v20 = sub_237A86888();
  result = swift_release();
  *a2 = v18;
  a2[1] = v20;
  return result;
}

uint64_t sub_2378E2564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  int v15;
  void *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  void (*v20)(char *, uint64_t);
  id v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;

  v28 = a2;
  v30 = a3;
  v4 = sub_237A86594();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AA8);
  v29 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v31 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820AB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820AB8);
  sub_2378B70D4(&qword_256820AC0, &qword_256820AB0, MEMORY[0x24BEE12D8]);
  sub_2378E36D4();
  sub_23786FAA0(&qword_256820B10, (uint64_t (*)(uint64_t))type metadata accessor for Slot, (uint64_t)&protocol conformance descriptor for Slot);
  sub_237A87410();
  v14 = 0;
  if ((sub_23798143C() & 1) != 0)
  {
    sub_2378D07D8(v28 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v15 = v7[*(int *)(v27 + 32) + 16];
    sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    if (v15 == 1)
    {
      v31 = 0x3A706D6F63;
      v32 = 0xE500000000000000;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, a1, v26);
      sub_237A87854();
      sub_237A878E4();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5650]), sel_init);
      v16 = (void *)sub_237A877F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setIdentifier_, v16);

      objc_msgSend(v14, sel_setCornerRadius_, 0.0);
    }
    else
    {
      v14 = 0;
    }
  }
  v17 = v29;
  v18 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v18(v11, v13, v8);
  v19 = v30;
  v18(v30, v11, v8);
  *(_QWORD *)&v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820B18) + 48)] = v14;
  v20 = *(void (**)(char *, uint64_t))(v17 + 8);
  v21 = v14;
  v20(v13, v8);

  return ((uint64_t (*)(char *, uint64_t))v20)(v11, v8);
}

uint64_t sub_2378E28C0@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  char *v23;
  __int128 v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat MidX;
  CGFloat MidY;
  CGFloat *v31;
  double v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v36 = a2;
  v3 = type metadata accessor for Slot();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SlotView();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v35 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AE8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AD8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378D07D8((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
  *(_QWORD *)v9 = swift_getKeyPath();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  *((_QWORD *)v9 + 3) = swift_getKeyPath();
  v9[32] = 0;
  v18 = (uint64_t *)&v9[*(int *)(v6 + 24)];
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  swift_storeEnumTagMultiPayload();
  sub_2378D0858((uint64_t)v5, (uint64_t)&v9[*(int *)(v6 + 28)], (uint64_t (*)(_QWORD))type metadata accessor for Slot);
  sub_2378D0858((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SlotView);
  v19 = a1[6];
  v20 = a1[7];
  v21 = a1[8];
  v22 = a1[9];
  v40.origin.x = v19;
  v40.origin.y = v20;
  v40.size.width = v21;
  v40.size.height = v22;
  CGRectGetWidth(v40);
  v41.origin.x = v19;
  v41.origin.y = v20;
  v41.size.width = v21;
  v41.size.height = v22;
  CGRectGetHeight(v41);
  sub_237A874AC();
  sub_237A8687C();
  sub_2378D07D8((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SlotView);
  v23 = &v14[*(int *)(v12 + 36)];
  v24 = v38;
  *(_OWORD *)v23 = v37;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v39;
  sub_2378DE6A4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SlotView);
  v25 = a1[6];
  v26 = a1[7];
  v27 = a1[8];
  v28 = a1[9];
  v42.origin.x = v25;
  v42.origin.y = v26;
  v42.size.width = v27;
  v42.size.height = v28;
  MidX = CGRectGetMidX(v42);
  v43.origin.x = v25;
  v43.origin.y = v26;
  v43.size.width = v27;
  v43.size.height = v28;
  MidY = CGRectGetMidY(v43);
  sub_2378BBFE0((uint64_t)v14, (uint64_t)v17, &qword_256820AE8);
  v31 = (CGFloat *)&v17[*(int *)(v15 + 36)];
  *v31 = MidX;
  v31[1] = MidY;
  sub_2378BC024((uint64_t)v14, &qword_256820AE8);
  v32 = (double)*((uint64_t *)a1 + 14);
  v33 = v36;
  sub_2378BBFE0((uint64_t)v17, v36, &qword_256820AD8);
  *(double *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820AB8) + 36)) = v32;
  return sub_2378BC024((uint64_t)v17, &qword_256820AD8);
}

uint64_t sub_2378E2C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v23 = a3;
  v4 = type metadata accessor for Component();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  sub_2378D07D8(a1, (uint64_t)&v22 - v15, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  sub_2378BBFE0((uint64_t)v16, (uint64_t)v14, &qword_2568207A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_2378BC024((uint64_t)v14, &qword_2568207A8);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  }
  else
  {
    sub_2378D0858((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    *v10 = sub_237A874AC();
    v10[1] = v18;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820AA0);
    sub_2378E2564((uint64_t)v7, v22, (char *)v10 + *(int *)(v19 + 44));
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568208D0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 0, 1, v20);
    sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
  sub_237870370((uint64_t)v10, v23, &qword_2568208A8);
  return sub_2378BC024((uint64_t)v16, &qword_2568207A8);
}

uint64_t sub_2378E2E48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2378E2E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2378E2C00(a1, *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_2378E2E74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2568208B8;
  if (!qword_2568208B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2568207C8);
    v2 = sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568208B8);
  }
  return result;
}

unint64_t sub_2378E2EF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2568208C0;
  if (!qword_2568208C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568208A8);
    v2 = sub_2378B70D4(&qword_2568208C8, &qword_2568208D0, MEMORY[0x24BDF4750]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568208C0);
  }
  return result;
}

uint64_t sub_2378E2F6C()
{
  sub_2378E3690();
  return sub_237A86B88();
}

uint64_t sub_2378E2FAC()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_2378E2FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2378E2FCC()
{
  return type metadata accessor for ZoneModel();
}

uint64_t type metadata accessor for ZoneModel()
{
  uint64_t result;

  result = qword_256820918;
  if (!qword_256820918)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2378E3010()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Zone();
  if (v0 <= 0x3F)
  {
    sub_2378E30A4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ZoneModel()
{
  return swift_lookUpClassMethod();
}

void sub_2378E30A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256820928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256820930);
    v0 = sub_237A86720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256820928);
  }
}

_QWORD *assignWithCopy for ZoneView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for ZoneView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ZoneView()
{
  return &type metadata for ZoneView;
}

unint64_t sub_2378E3180()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820A00;
  if (!qword_256820A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568208E0);
    v2[0] = sub_2378E3204();
    v2[1] = sub_2378B70D4(&qword_256820A58, &qword_2568208E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820A00);
  }
  return result;
}

unint64_t sub_2378E3204()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820A08;
  if (!qword_256820A08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568208A0);
    v2[0] = sub_2378E3288();
    v2[1] = sub_2378B70D4(&qword_256820A50, &qword_2568208D8, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820A08);
  }
  return result;
}

unint64_t sub_2378E3288()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820A10;
  if (!qword_256820A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820898);
    v2[0] = sub_2378E32F4();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820A10);
  }
  return result;
}

unint64_t sub_2378E32F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820A18;
  if (!qword_256820A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820890);
    v2[0] = sub_2378B70D4(&qword_256820A20, &qword_256820A28, (uint64_t)&protocol conformance descriptor for Carousel<A, B>);
    v2[1] = sub_2378E3378();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820A18);
  }
  return result;
}

unint64_t sub_2378E3378()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820A30;
  if (!qword_256820A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820A38);
    v2[0] = sub_2378E2EF0();
    v2[1] = sub_2378B70D4(&qword_256820A40, &qword_256820A48, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820A30);
  }
  return result;
}

uint64_t sub_2378E33FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2378E347C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378E34F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820878);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_256820930);
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  sub_2378D07D8(a1, v3 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_2378D3230(a1), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(v11 + 56) + 32 * v12;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_BYTE *)(v14 + 24);
    swift_retain();
    sub_2378D0664(v16, v17, v18);
    sub_2378724B0(v16, v17, v18);
  }
  else
  {
    v15 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v21 = v15;
  swift_retain();
  sub_237A86708();
  sub_2378DE6A4(a1, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  return v3;
}

unint64_t sub_2378E3690()
{
  unint64_t result;

  result = qword_256820A98;
  if (!qword_256820A98)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98E4C, &type metadata for ZoneIdentifierKey);
    atomic_store(result, (unint64_t *)&qword_256820A98);
  }
  return result;
}

unint64_t sub_2378E36D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820AC8;
  if (!qword_256820AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820AB8);
    v2[0] = sub_2378E3758();
    v2[1] = sub_2378B70D4(&qword_256820B00, &qword_256820B08, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820AC8);
  }
  return result;
}

unint64_t sub_2378E3758()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820AD0;
  if (!qword_256820AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820AD8);
    v2[0] = sub_2378E37C4();
    v2[1] = sub_2378E3848();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820AD0);
  }
  return result;
}

unint64_t sub_2378E37C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820AE0;
  if (!qword_256820AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820AE8);
    v2[0] = sub_23786FAA0(&qword_256820AF0, (uint64_t (*)(uint64_t))type metadata accessor for SlotView, (uint64_t)&protocol conformance descriptor for SlotView);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820AE0);
  }
  return result;
}

unint64_t sub_2378E3848()
{
  unint64_t result;

  result = qword_256820AF8;
  if (!qword_256820AF8)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED5C0], MEMORY[0x24BDED5D0]);
    atomic_store(result, (unint64_t *)&qword_256820AF8);
  }
  return result;
}

uint64_t sub_2378E38A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2378E1EEC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2378E38B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_2378E38C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_2378E38CC()
{
  unint64_t result;

  result = qword_256820B48;
  if (!qword_256820B48)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF52E0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_256820B48);
  }
  return result;
}

unint64_t sub_2378E3910()
{
  unint64_t result;

  result = qword_256820B50;
  if (!qword_256820B50)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF4440], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_256820B50);
  }
  return result;
}

unint64_t sub_2378E3954()
{
  unint64_t result;

  result = qword_256820B58;
  if (!qword_256820B58)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF4BA0], MEMORY[0x24BDF4BC0]);
    atomic_store(result, (unint64_t *)&qword_256820B58);
  }
  return result;
}

uint64_t static Color.multiGaugePrimary.getter()
{
  return sub_2378E39D4(&qword_25681E058);
}

uint64_t static Color.multiGaugeSecondary.getter()
{
  return sub_2378E39D4(&qword_25681E060);
}

uint64_t sub_2378E39D4(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static Color.multiGaugeClear.getter()
{
  return sub_2378E39D4(&qword_25681E080);
}

uint64_t sub_2378E3A28(uint64_t a1)
{
  return sub_2378E3B20(a1, &qword_256820BA8);
}

uint64_t sub_2378E3A3C(uint64_t a1)
{
  return sub_2378E3EA8(0.207843137, 0.196078431, 0.2, a1, &qword_256820BB0);
}

uint64_t sub_2378E3A60(uint64_t a1)
{
  return sub_2378E3EA8(0.0980392157, 0.0980392157, 0.101960784, a1, &qword_256820BB8);
}

uint64_t static Color.multiGaugeTertiary.getter()
{
  return sub_2378E39D4(&qword_25681E068);
}

uint64_t sub_2378E3A9C(uint64_t a1)
{
  return sub_2378E3EA8(0.0666666667, 0.0666666667, 0.0705882353, a1, &qword_256820BC0);
}

uint64_t static Color.multiGaugeBackground.getter()
{
  return sub_2378E39D4(&qword_25681E070);
}

uint64_t sub_2378E3ADC(uint64_t a1)
{
  return sub_2378E3B20(a1, &qword_256820BC8);
}

uint64_t static Color.multiGaugeBlack.getter()
{
  return sub_2378E39D4(&qword_25681E078);
}

uint64_t sub_2378E3B0C(uint64_t a1)
{
  return sub_2378E3B20(a1, &qword_256820BD0);
}

uint64_t sub_2378E3B20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = sub_237A871B8();
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, _QWORD))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDF3C28]);
  result = sub_237A8726C();
  *a2 = result;
  return result;
}

uint64_t sub_2378E3BB4(uint64_t a1)
{
  return sub_2378E3EA8(0.0, 0.48627451, 1.0, a1, &qword_256820BD8);
}

uint64_t static Color.multiGaugeBlue.getter()
{
  return sub_2378E39D4(&qword_25681E088);
}

uint64_t sub_2378E3BF0(uint64_t a1)
{
  return sub_2378E3EA8(0.0, 0.890196078, 0.447058824, a1, &qword_256820BE0);
}

uint64_t static Color.multiGaugeGreen.getter()
{
  return sub_2378E39D4(&qword_25681E090);
}

uint64_t sub_2378E3C30(uint64_t a1)
{
  return sub_2378E3EA8(0.337254902, 0.792156863, 0.992156863, a1, &qword_256820BE8);
}

uint64_t static Color.multiGaugeCyan.getter()
{
  return sub_2378E39D4(&qword_25681E098);
}

uint64_t sub_2378E3C70(uint64_t a1)
{
  return sub_2378E3EA8(1.0, 0.592156863, 0.0, a1, &qword_256820BF0);
}

uint64_t static Color.multiGaugeOrange.getter()
{
  return sub_2378E39D4(&qword_25681E0A0);
}

uint64_t sub_2378E3CA8(uint64_t a1)
{
  return sub_2378E3EA8(1.0, 0.176470588, 0.345098039, a1, &qword_256820BF8);
}

uint64_t static Color.multiGaugePink.getter()
{
  return sub_2378E39D4(&qword_25681E0A8);
}

uint64_t sub_2378E3CE4(uint64_t a1)
{
  return sub_2378E3EA8(0.478431373, 0.490196078, 1.0, a1, &qword_256820C00);
}

uint64_t static Color.multiGaugePurple.getter()
{
  return sub_2378E39D4(&qword_25681E0B0);
}

uint64_t sub_2378E3D20(uint64_t a1)
{
  return sub_2378E3EA8(1.0, 0.215686275, 0.168627451, a1, &qword_256820C08);
}

uint64_t static Color.multiGaugeRed.getter()
{
  return sub_2378E39D4(&qword_25681E0B8);
}

uint64_t sub_2378E3D5C(uint64_t a1)
{
  return sub_2378E3EA8(0.0, 0.980392157, 0.937254902, a1, &qword_256820C10);
}

uint64_t static Color.multiGaugeTeal.getter()
{
  return sub_2378E39D4(&qword_25681E0C0);
}

uint64_t sub_2378E3D98(uint64_t a1)
{
  return sub_2378E3EA8(1.0, 0.91372549, 0.105882353, a1, &qword_256820C18);
}

uint64_t static Color.multiGaugeYellow.getter()
{
  return sub_2378E39D4(&qword_25681E0C8);
}

uint64_t sub_2378E3DD4(uint64_t a1)
{
  return sub_2378E3EA8(0.0, 0.82745098, 0.294117647, a1, &qword_256820C20);
}

uint64_t static Color.gaugeGreen.getter()
{
  return sub_2378E39D4(&qword_25681E0D0);
}

uint64_t sub_2378E3E10(uint64_t a1)
{
  return sub_2378E3EA8(0.22745098, 0.22745098, 0.235294118, a1, &qword_256820C28);
}

uint64_t static Color.gaugeSecondary.getter()
{
  return sub_2378E39D4(&qword_25681E0D8);
}

uint64_t sub_2378E3E50(uint64_t a1)
{
  return sub_2378E3EA8(0.819607843, 0.819607843, 0.839215686, a1, &qword_256820C30);
}

uint64_t static Color.gaugeLightGray.getter()
{
  return sub_2378E39D4(&qword_25681E0E0);
}

uint64_t sub_2378E3E8C(uint64_t a1)
{
  return sub_2378E3EA8(0.62745098, 0.62745098, 0.62745098, a1, &qword_256820C38);
}

uint64_t sub_2378E3EA8(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = sub_237A871B8();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v12 + 104))(v11, *MEMORY[0x24BDF3C28]);
  result = MEMORY[0x23B81DEC0](v11, a1, a2, a3, 1.0);
  *a5 = result;
  return result;
}

uint64_t static Color.gaugeGray.getter()
{
  return sub_2378E39D4(&qword_25681E0E8);
}

uint64_t sub_2378E3F6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2378BC024(a1, &qword_256820C60);
    sub_237903D30(a2, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel, (void (*)(unint64_t, uint64_t))sub_2379044E4, (void (*)(void))sub_2378C55CC, (uint64_t)v8);
    sub_2378BC024(a2, &qword_25681E8E0);
    v13 = (uint64_t)v8;
    v14 = &qword_256820C60;
  }
  else
  {
    sub_2378D0858(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_237871708((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v14 = &qword_25681E8E0;
    v13 = a2;
  }
  return sub_2378BC024(v13, v14);
}

uint64_t sub_2378E40E8(uint64_t a1)
{
  return sub_2378E40FC(a1);
}

uint64_t sub_2378E40FC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v1, 0);
    v2 = v13;
    v4 = *(_QWORD *)(type metadata accessor for Slot() - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + a1
                   + 128);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_2379D62F4(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2378E41F0(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_2379D6508(0, v1, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2378E4770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  _QWORD *v75;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v2);
  v69 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for Component();
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
  v5 = MEMORY[0x24BDAC7A8](v66);
  v65 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)&v59 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v59 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v59 - v11;
  v12 = *(_QWORD *)(a1 + 64);
  v60 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v61 = (unint64_t)(v13 + 63) >> 6;
  v70 = a1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v19 = (uint64_t)v63;
  v75 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v73 = (v15 - 1) & v15;
  v74 = v17;
  for (i = __clz(__rbit64(v15)) | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    v25 = v70;
    v26 = *(_QWORD *)(v70 + 48);
    v27 = v26
        + *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8) + 72) * i;
    v28 = v62;
    sub_2378BBFE0(v27, v62, &qword_25681E8E0);
    v29 = *(_QWORD *)(v25 + 56) + 32 * i;
    v30 = *(_QWORD *)(v29 + 8);
    v31 = *(_QWORD *)(v29 + 16);
    v32 = v66;
    v33 = v28 + *(int *)(v66 + 48);
    v34 = *(_BYTE *)(v29 + 24);
    *(_QWORD *)v33 = *(_QWORD *)v29;
    *(_QWORD *)(v33 + 8) = v30;
    *(_QWORD *)(v33 + 16) = v31;
    *(_BYTE *)(v33 + 24) = v34;
    sub_237870370(v28, v19, &qword_2568213C0);
    v35 = *(int *)(v32 + 48);
    v36 = v64;
    v37 = v64 + v35;
    v38 = v19 + v35;
    sub_2378BBFE0(v19, v64, &qword_25681E8E0);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v39 = *(_BYTE *)(v38 + 24);
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
    *(_BYTE *)(v37 + 24) = v39;
    swift_retain();
    sub_2378D0664(v30, v31, v34);
    v40 = sub_237A86570();
    v71 = v41;
    v72 = v40;
    sub_2378BC024(v36, &qword_25681E8E0);
    v42 = *(int *)(v32 + 48);
    v43 = v65;
    v44 = v65 + v42;
    v45 = sub_2378BBFE0(v19, v65, &qword_25681E8E0);
    *(_QWORD *)v44 = *(_QWORD *)v38;
    v46 = *(_BYTE *)(v38 + 24);
    *(_OWORD *)(v44 + 8) = *(_OWORD *)(v38 + 8);
    *(_BYTE *)(v44 + 24) = v46;
    MEMORY[0x24BDAC7A8](v45);
    v47 = v68;
    *(&v59 - 2) = v68;
    v48 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
    *(&v59 - 1) = v48;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v59 - 2) = v47;
    *(&v59 - 1) = v48;
    swift_getKeyPath();
    swift_retain();
    v50 = (uint64_t)v67;
    sub_237A866FC();
    swift_release();
    swift_release();
    swift_release();
    v51 = v69;
    sub_2378BBFE0(v50, v69, qword_2568207C8);
    sub_2378DE6A4(v50, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v52 = sub_237A86570();
    v54 = v53;
    sub_2378BC024(v51, qword_2568207C8);
    sub_2378BC024(v43, &qword_25681E8E0);
    sub_2378BC024(v19, &qword_2568213C0);
    v18 = v75;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_237895E04(0, v18[2] + 1, 1, v18);
      v18 = (_QWORD *)result;
    }
    v56 = v18[2];
    v55 = v18[3];
    if (v56 >= v55 >> 1)
    {
      result = (uint64_t)sub_237895E04((_QWORD *)(v55 > 1), v56 + 1, 1, v18);
      v18 = (_QWORD *)result;
    }
    v18[2] = v56 + 1;
    v57 = &v18[4 * v56];
    v15 = v73;
    v58 = v71;
    v57[4] = v72;
    v57[5] = v58;
    v57[6] = v52;
    v57[7] = v54;
    v17 = v74;
    v75 = v18;
    if (v15)
      goto LABEL_4;
LABEL_5:
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v61)
      goto LABEL_27;
    v22 = *(_QWORD *)(v60 + 8 * v21);
    v23 = v17 + 1;
    if (!v22)
    {
      v23 = v17 + 2;
      if (v17 + 2 >= v61)
        goto LABEL_27;
      v22 = *(_QWORD *)(v60 + 8 * v23);
      if (!v22)
      {
        v23 = v17 + 3;
        if (v17 + 3 >= v61)
          goto LABEL_27;
        v22 = *(_QWORD *)(v60 + 8 * v23);
        if (!v22)
        {
          v23 = v17 + 4;
          if (v17 + 4 >= v61)
            goto LABEL_27;
          v22 = *(_QWORD *)(v60 + 8 * v23);
          if (!v22)
            break;
        }
      }
    }
LABEL_20:
    v73 = (v22 - 1) & v22;
    v74 = v23;
  }
  v24 = v17 + 5;
  if (v17 + 5 >= v61)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v18;
  }
  v22 = *(_QWORD *)(v60 + 8 * v24);
  if (v22)
  {
    v23 = v17 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v61)
      goto LABEL_27;
    v22 = *(_QWORD *)(v60 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_2378E4D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_237A86594();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v1, (uint64_t)v12, &qword_256820D50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    return 0xD000000000000028;
  }
  else
  {
    sub_237870370((uint64_t)v12, (uint64_t)v9, &qword_256820D58);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
    v13 = sub_237A87854();
    sub_2378BC024((uint64_t)v9, &qword_256820D58);
  }
  return v13;
}

uint64_t sub_2378E4EBC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for Zone();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_2378D07D8(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v17 = a1(v12);
      if (v3)
      {
        sub_2378DE6A4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_2378D0858((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2379D64EC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_2379D64EC(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_2378D0858(v23, v15 + v16 + v19 * v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_2378DE6A4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_2378E50D4()
{
  uint64_t v0;

  v0 = sub_237A86654();
  __swift_allocate_value_buffer(v0, qword_2568705E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568705E8);
  return sub_237A86648();
}

uint64_t sub_2378E514C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2378E6B44(a1);
}

uint64_t sub_2378E5160()
{
  return sub_2378E6BD0();
}

uint64_t sub_2378E5174()
{
  return sub_2378E6C58();
}

uint64_t sub_2378E5190()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_256820C48);
}

uint64_t sub_2378E51A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2378E6B44(a1);
}

uint64_t sub_2378E51B8()
{
  return sub_2378E6BD0();
}

uint64_t sub_2378E51CC()
{
  return sub_2378E6C58();
}

uint64_t sub_2378E51E8()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_256820C58);
}

uint64_t sub_2378E51FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Zone();
  v12 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v12 != 2)
  {
    v13 = result;
    if ((v12 & 1) != 0)
    {
      v14 = sub_237A8840C();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        return result;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v15 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15))
    {
      sub_2378BC024((uint64_t)v10, &qword_256820CF0);
      v16 = 0;
    }
    else
    {
      v17 = *(_QWORD *)&v10[*(int *)(v15 + 24)];
      swift_bridgeObjectRetain();
      sub_2378BC024((uint64_t)v10, &qword_256820CF0);
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v23[5] = v2;
        v19 = *(_QWORD *)(v13 - 8);
        v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        sub_237A86594();
        v21 = *(_QWORD *)(v19 + 72);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        swift_bridgeObjectRetain();
        while ((sub_237A877DC() & 1) == 0)
        {
          v20 += v21;
          if (!--v18)
          {
            swift_bridgeObjectRelease_n();
            v16 = 0;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease_n();
        v16 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v16 = 0;
      }
    }
LABEL_14:
    v22 = a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
    swift_beginAccess();
    sub_2378BBFE0(v22, (uint64_t)v7, &qword_256820C60);
    sub_2378EEF94((uint64_t)v7, a1, v16);
    return sub_2378BC024((uint64_t)v7, &qword_256820C60);
  }
  return result;
}

uint64_t sub_2378E54D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2378E58F4(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, a1);
}

uint64_t sub_2378E54DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v12, &qword_256820C60);
  v13 = *a2;
  v14 = v13 + *a5;
  swift_beginAccess();
  sub_237907DEC((uint64_t)v12, v14);
  swift_endAccess();
  v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = *(_QWORD *)(type metadata accessor for Zone() - 8);
    v18 = v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v19 = *(_QWORD *)(v17 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a6(v18, v13);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  return sub_2378BC024((uint64_t)v12, &qword_256820C60);
}

uint64_t sub_2378E5614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Zone();
  v12 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v12 != 2)
  {
    v13 = result;
    if ((v12 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = sub_237A8840C();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        return result;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v15 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15))
    {
      sub_2378BC024((uint64_t)v10, &qword_256820CF0);
      v16 = 0;
    }
    else
    {
      v17 = *(_QWORD *)&v10[*(int *)(v15 + 24)];
      swift_bridgeObjectRetain();
      sub_2378BC024((uint64_t)v10, &qword_256820CF0);
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v23[5] = v2;
        v19 = *(_QWORD *)(v13 - 8);
        v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        sub_237A86594();
        v21 = *(_QWORD *)(v19 + 72);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        swift_bridgeObjectRetain();
        while ((sub_237A877DC() & 1) == 0)
        {
          v20 += v21;
          if (!--v18)
          {
            swift_bridgeObjectRelease_n();
            v16 = 0;
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease_n();
        v16 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v16 = 0;
      }
    }
LABEL_15:
    v22 = a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent;
    swift_beginAccess();
    sub_2378BBFE0(v22, (uint64_t)v7, &qword_256820C60);
    sub_2378EEF94((uint64_t)v7, a1, v16);
    return sub_2378BC024((uint64_t)v7, &qword_256820C60);
  }
  return result;
}

uint64_t sub_2378E58E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2378E58F4(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, a1);
}

uint64_t sub_2378E58F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_2378BBFE0(v4, a2, &qword_256820C60);
}

uint64_t sub_2378E5948@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378E64C8(a1);
}

uint64_t sub_2378E595C()
{
  return sub_2378E6554();
}

uint64_t sub_2378E5970()
{
  return sub_2378E65D4();
}

uint64_t sub_2378E598C()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_256820C70);
}

uint64_t sub_2378E59A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2378E6B44(a1);
}

uint64_t sub_2378E59B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E5B48(a1, a2, a3, a4, (uint64_t)&unk_237A920E8, (uint64_t)&unk_237A92110, (uint64_t (*)(uint64_t))sub_2378E59D0);
}

uint64_t sub_2378E59D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378E5A90()
{
  return sub_2378E6C58();
}

uint64_t sub_2378E5AAC()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_256820C80);
}

uint64_t sub_2378E5AC0@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378E64C8(a1);
}

uint64_t sub_2378E5AD4()
{
  return sub_2378E6554();
}

uint64_t sub_2378E5AE8()
{
  return sub_2378E65D4();
}

uint64_t sub_2378E5B04()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_256820C70);
}

uint64_t sub_2378E5B18@<X0>(_QWORD *a1@<X8>)
{
  return sub_2378E6B44(a1);
}

uint64_t sub_2378E5B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E5B48(a1, a2, a3, a4, (uint64_t)&unk_237A92178, (uint64_t)&unk_237A921A0, (uint64_t (*)(uint64_t))sub_2378E5BD0);
}

uint64_t sub_2378E5B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v8;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_237A86708();
  return a7(v8);
}

uint64_t sub_2378E5BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A86708();
  v1 = sub_2378E81BC();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(type metadata accessor for Zone() - 8);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_2378E5CEC(v4, v0);
      v4 += v5;
      --v2;
    }
    while (v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378E5CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  void (*v57)(_QWORD *, _QWORD);
  uint64_t *v58;
  uint64_t *v59;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[4];
  uint64_t v71;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v9);
  v65 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Component();
  v67 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v63 = (uint64_t)v61 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  v19 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (uint64_t)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  v66 = a2;
  sub_237A866FC();
  swift_release();
  swift_release();
  v21 = v70[0];
  if (*(_QWORD *)(v70[0] + 16) && (v22 = sub_2378D3230(a1), (v23 & 1) != 0))
  {
    sub_2378D07D8(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v19 + 72) * v22, (uint64_t)v18, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  v25 = v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, v24, 1, v69);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v25) == 1)
  {
    v26 = &qword_2568213E8;
    v27 = (uint64_t)v18;
  }
  else
  {
    v28 = v68;
    sub_2378D0858((uint64_t)v18, v68, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    v29 = *(_QWORD *)(v66 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    if (*(_QWORD *)(v29 + 16) && (v30 = sub_2378D3230(a1), (v31 & 1) != 0))
    {
      v62 = a1;
      v32 = *(_QWORD *)(v29 + 56) + 32 * v30;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_QWORD *)(v32 + 16);
      v36 = *(_BYTE *)(v32 + 24);
      swift_retain();
      sub_2378D0664(v34, v35, v36);
      sub_2378724B0(v34, v35, v36);
      v37 = (uint64_t *)(v33 + *(_QWORD *)(*(_QWORD *)v33 + 144));
      swift_beginAccess();
      v38 = *v37;
      swift_bridgeObjectRetain();
      swift_release();
      v39 = *(_QWORD *)(v38 + 16);
      if (v39)
      {
        v40 = v38 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
        v41 = *(_QWORD *)(v67 + 72);
        v61[1] = v38;
        swift_bridgeObjectRetain();
        do
        {
          sub_2378D07D8(v40, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v42 = *(_QWORD *)&v14[*(int *)(v11 + 32)];
          if (*(_QWORD *)(v42 + 16))
          {
            v43 = type metadata accessor for Slot();
            v44 = *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80);
            sub_2378BBFE0(v42 + *(int *)(v43 + 36) + ((v44 + 32) & ~v44), (uint64_t)v8, &qword_25681F430);
            v45 = type metadata accessor for Instrument();
            v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v8, 1, v45);
            sub_2378BC024((uint64_t)v8, &qword_25681F430);
            if (v46 == 1)
            {
              swift_bridgeObjectRelease();
              v47 = v65;
              sub_2378D0858((uint64_t)v14, v65, (uint64_t (*)(_QWORD))type metadata accessor for Component);
              v48 = 0;
              goto LABEL_20;
            }
          }
          sub_2378DE6A4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v40 += v41;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease();
        v48 = 1;
        v50 = (uint64_t)v64;
        v47 = v65;
      }
      else
      {
        v48 = 1;
        v47 = v65;
LABEL_20:
        v50 = (uint64_t)v64;
      }
      v51 = v67;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v47, v48, 1, v11);
      swift_bridgeObjectRelease();
      v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v47, 1, v11);
      v28 = v68;
      if (v52 != 1)
      {
        v53 = v63;
        sub_2378D0858(v47, v63, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_2378BBFE0(v62, v50, &qword_25681E8E0);
        v54 = v50;
        sub_237A86594();
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v55 = sub_237A877DC();
        swift_getKeyPath();
        swift_getKeyPath();
        v56 = v28;
        v57 = (void (*)(_QWORD *, _QWORD))sub_237A866F0();
        v59 = v58;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v71 = *v59;
        *v59 = 0x8000000000000000;
        sub_23787172C((v55 & 1) == 0, v54, isUniquelyReferenced_nonNull_native);
        *v59 = v71;
        swift_bridgeObjectRelease();
        sub_2378BC024(v54, &qword_25681E8E0);
        v57(v70, 0);
        swift_release();
        swift_release();
        sub_2378DE6A4(v53, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        return sub_2378DE6A4(v56, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      }
    }
    else
    {
      v47 = v65;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v65, 1, 1, v11);
    }
    sub_2378DE6A4(v28, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    v26 = &qword_2568207A8;
    v27 = v47;
  }
  return sub_2378BC024(v27, v26);
}

uint64_t sub_2378E6348()
{
  return sub_2378E6C58();
}

uint64_t sub_2378E6364()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_256820C98);
}

uint64_t sub_2378E6378()
{
  return sub_2378E666C();
}

uint64_t sub_2378E638C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2378BBFE0(a1, (uint64_t)&v9 - v6, &qword_256820CF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v5, &qword_256820CF0);
  swift_retain();
  sub_237A86708();
  return sub_2378BC024((uint64_t)v7, &qword_256820CF0);
}

uint64_t sub_2378E6484()
{
  return sub_2378E6AB8();
}

uint64_t sub_2378E64A0()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_256820CA8);
}

uint64_t sub_2378E64B4@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378E64C8(a1);
}

uint64_t sub_2378E64C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2378E6540()
{
  return sub_2378E6554();
}

uint64_t sub_2378E6554()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378E65C0()
{
  return sub_2378E65D4();
}

uint64_t sub_2378E65D4()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2378E6644()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_256820C70);
}

uint64_t sub_2378E6658()
{
  return sub_2378E666C();
}

uint64_t sub_2378E666C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  return swift_release();
}

uint64_t sub_2378E66D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2378BBFE0(a1, (uint64_t)&v9 - v6, &qword_256820CE8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v5, &qword_256820CE8);
  swift_retain();
  sub_237A86708();
  sub_2378E67CC();
  return sub_2378BC024((uint64_t)v7, &qword_256820CE8);
}

uint64_t sub_2378E67CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, uint64_t);
  int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v0 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v19[-v11];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v1 + 48);
  v14 = v13(v12, 1, v0);
  sub_2378BC024((uint64_t)v12, &qword_256820CE8);
  if (v14 == 1)
  {
    v15 = 0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    if (v13(v10, 1, v0))
    {
      sub_2378BC024((uint64_t)v10, &qword_256820CE8);
      v16 = type metadata accessor for Layout();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
      v15 = 0;
    }
    else
    {
      sub_2378D07D8((uint64_t)v10, (uint64_t)v3, type metadata accessor for ClusterTransitionCoordinator.LayoutTransition);
      sub_2378BC024((uint64_t)v10, &qword_256820CE8);
      sub_2378BBFE0((uint64_t)&v3[*(int *)(v0 + 24)], (uint64_t)v6, &qword_256820CF0);
      sub_2378DE6A4((uint64_t)v3, type metadata accessor for ClusterTransitionCoordinator.LayoutTransition);
      v17 = type metadata accessor for Layout();
      v15 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17) != 1;
    }
    sub_2378BC024((uint64_t)v6, &qword_256820CF0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v19[15] = v15;
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378E6AA4()
{
  return sub_2378E6AB8();
}

uint64_t sub_2378E6AB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  return swift_release();
}

uint64_t sub_2378E6B1C()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_256820CC0);
}

uint64_t sub_2378E6B30@<X0>(_QWORD *a1@<X8>)
{
  return sub_2378E6B44(a1);
}

uint64_t sub_2378E6B44@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2378E6BBC()
{
  return sub_2378E6BD0();
}

uint64_t sub_2378E6BD0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378E6C44()
{
  return sub_2378E6C58();
}

uint64_t sub_2378E6C58()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2378E6CC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

void (*sub_2378E6D34(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_237A866F0();
  return sub_2378E6DAC;
}

void sub_2378E6DAC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_2378E6DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_237A866D8();
  return swift_endAccess();
}

uint64_t sub_2378E6E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_237A866E4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_2378E6F7C()
{
  return sub_2378E6F90((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_256820CD0);
}

uint64_t sub_2378E6F90(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_237A866D8();
  return swift_endAccess();
}

uint64_t sub_2378E6FF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD0);
  sub_237A866E4();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_2378E70C8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD0);
  sub_237A866D8();
  swift_endAccess();
  return sub_2378E7190;
}

void sub_2378E7190(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_237A866E4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_237A866E4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_2378E72A8@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23790C304;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2378A2BF4(v4);
}

uint64_t sub_2378E733C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_23790C304;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2378A2BF4(v3);
  sub_2378A2BF4((uint64_t)v6);
  sub_2378A2C04(v8);
  sub_2378E7410();
  return sub_2378A2C04((uint64_t)v6);
}

uint64_t sub_2378E7410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821410);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v39 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  v8 = *(_QWORD *)(v7 + 64);
  v40 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v39 = v41 - 1;
  v42 = v7;
  v43 = v0;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v11)
    goto LABEL_8;
LABEL_6:
  v23 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v24 = v23 | (v13 << 6);
  while (2)
  {
    v25 = v42;
    v26 = *(_QWORD *)(v42 + 48);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    sub_2378BBFE0(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v24, (uint64_t)v4, &qword_25681E8E0);
    v28 = *(_QWORD *)(v25 + 56) + 32 * v24;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
    v30 = &v4[*(int *)(v29 + 48)];
    v31 = *(_QWORD *)(v28 + 8);
    v32 = *(_QWORD *)(v28 + 16);
    v33 = *(_BYTE *)(v28 + 24);
    *(_QWORD *)v30 = *(_QWORD *)v28;
    *((_QWORD *)v30 + 1) = v31;
    *((_QWORD *)v30 + 2) = v32;
    v30[24] = v33;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 0, 1, v29);
    swift_retain();
    sub_2378D0664(v31, v32, v33);
    while (1)
    {
      sub_237870370((uint64_t)v4, (uint64_t)v6, &qword_256821410);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v6, 1, v38) == 1)
        return swift_release();
      v14 = &v6[*(int *)(v38 + 48)];
      v16 = *(_QWORD *)v14;
      v15 = *((_QWORD *)v14 + 1);
      v17 = *((_QWORD *)v14 + 2);
      v18 = v14[24];
      swift_retain();
      sub_2378D0664(v15, v17, v18);
      sub_2378724B0(v15, v17, v18);
      swift_retain();
      sub_2378D0664(v15, v17, v18);
      swift_release();
      v19 = swift_allocObject();
      swift_weakInit();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = v15;
      *(_QWORD *)(v20 + 32) = v17;
      *(_BYTE *)(v20 + 40) = v18;
      v21 = (uint64_t *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 128));
      swift_beginAccess();
      v22 = *v21;
      *v21 = (uint64_t)sub_23790C2B8;
      v21[1] = v20;
      sub_2378A2C04(v22);
      swift_release();
      sub_2378724B0(v15, v17, v18);
      swift_release();
      result = sub_2378BC024((uint64_t)v6, &qword_25681E8E0);
      if (v11)
        goto LABEL_6;
LABEL_8:
      v34 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v34 < v41)
      {
        v35 = *(_QWORD *)(v40 + 8 * v34);
        if (v35)
          goto LABEL_11;
        v36 = v13 + 2;
        ++v13;
        if (v34 + 1 < v41)
        {
          v35 = *(_QWORD *)(v40 + 8 * v36);
          if (v35)
            goto LABEL_14;
          v13 = v34 + 1;
          if (v34 + 2 < v41)
          {
            v35 = *(_QWORD *)(v40 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_11;
            }
            v36 = v34 + 3;
            v13 = v34 + 2;
            if (v34 + 3 < v41)
              break;
          }
        }
      }
LABEL_25:
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v4, 1, 1, v37);
      v11 = 0;
    }
    v35 = *(_QWORD *)(v40 + 8 * v36);
    if (v35)
    {
LABEL_14:
      v34 = v36;
LABEL_11:
      v11 = (v35 - 1) & v35;
      v24 = __clz(__rbit64(v35)) + (v34 << 6);
      v13 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v41)
    {
      v13 = v39;
      goto LABEL_25;
    }
    v35 = *(_QWORD *)(v40 + 8 * v34);
    ++v36;
    if (v35)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2378E7824()
{
  return sub_2378E8024(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
}

uint64_t sub_2378E7830(uint64_t a1, uint64_t a2)
{
  return sub_2378E808C(a1, a2, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear, (void (*)(uint64_t))sub_2378E7410);
}

uint64_t (*sub_2378E7844(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2378E788C;
}

uint64_t sub_2378E788C(uint64_t a1, char a2)
{
  return sub_2378E8170(a1, a2, (uint64_t (*)(uint64_t))sub_2378E7410);
}

uint64_t sub_2378E7898@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_2378A3110;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2378A2BF4(v4);
}

uint64_t sub_2378E792C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2378A3110;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2378A2BF4(v3);
  sub_2378A2BF4((uint64_t)v6);
  sub_2378A2C04(v8);
  sub_2378E7A00();
  return sub_2378A2C04((uint64_t)v6);
}

uint64_t sub_2378E7A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821410);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v39 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  v8 = *(_QWORD *)(v7 + 64);
  v40 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v39 = v41 - 1;
  v42 = v7;
  v43 = v0;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v11)
    goto LABEL_8;
LABEL_6:
  v23 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v24 = v23 | (v13 << 6);
  while (2)
  {
    v25 = v42;
    v26 = *(_QWORD *)(v42 + 48);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    sub_2378BBFE0(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v24, (uint64_t)v4, &qword_25681E8E0);
    v28 = *(_QWORD *)(v25 + 56) + 32 * v24;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
    v30 = &v4[*(int *)(v29 + 48)];
    v31 = *(_QWORD *)(v28 + 8);
    v32 = *(_QWORD *)(v28 + 16);
    v33 = *(_BYTE *)(v28 + 24);
    *(_QWORD *)v30 = *(_QWORD *)v28;
    *((_QWORD *)v30 + 1) = v31;
    *((_QWORD *)v30 + 2) = v32;
    v30[24] = v33;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 0, 1, v29);
    swift_retain();
    sub_2378D0664(v31, v32, v33);
    while (1)
    {
      sub_237870370((uint64_t)v4, (uint64_t)v6, &qword_256821410);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v6, 1, v38) == 1)
        return swift_release();
      v14 = &v6[*(int *)(v38 + 48)];
      v16 = *(_QWORD *)v14;
      v15 = *((_QWORD *)v14 + 1);
      v17 = *((_QWORD *)v14 + 2);
      v18 = v14[24];
      swift_retain();
      sub_2378D0664(v15, v17, v18);
      sub_2378724B0(v15, v17, v18);
      swift_retain();
      sub_2378D0664(v15, v17, v18);
      swift_release();
      v19 = swift_allocObject();
      swift_weakInit();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = v15;
      *(_QWORD *)(v20 + 32) = v17;
      *(_BYTE *)(v20 + 40) = v18;
      v21 = (uint64_t *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 136));
      swift_beginAccess();
      v22 = *v21;
      *v21 = (uint64_t)sub_23790C25C;
      v21[1] = v20;
      sub_2378A2C04(v22);
      swift_release();
      sub_2378724B0(v15, v17, v18);
      swift_release();
      result = sub_2378BC024((uint64_t)v6, &qword_25681E8E0);
      if (v11)
        goto LABEL_6;
LABEL_8:
      v34 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v34 < v41)
      {
        v35 = *(_QWORD *)(v40 + 8 * v34);
        if (v35)
          goto LABEL_11;
        v36 = v13 + 2;
        ++v13;
        if (v34 + 1 < v41)
        {
          v35 = *(_QWORD *)(v40 + 8 * v36);
          if (v35)
            goto LABEL_14;
          v13 = v34 + 1;
          if (v34 + 2 < v41)
          {
            v35 = *(_QWORD *)(v40 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_11;
            }
            v36 = v34 + 3;
            v13 = v34 + 2;
            if (v34 + 3 < v41)
              break;
          }
        }
      }
LABEL_25:
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v4, 1, 1, v37);
      v11 = 0;
    }
    v35 = *(_QWORD *)(v40 + 8 * v36);
    if (v35)
    {
LABEL_14:
      v34 = v36;
LABEL_11:
      v11 = (v35 - 1) & v35;
      v24 = __clz(__rbit64(v35)) + (v34 << 6);
      v13 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v41)
    {
      v13 = v39;
      goto LABEL_25;
    }
    v35 = *(_QWORD *)(v40 + 8 * v34);
    ++v36;
    if (v35)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2378E7E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t *v22;
  void (*v23)(char *, _QWORD *);
  _QWORD v26[2];
  char v27;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Instrument();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(_QWORD *)(v18 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    return sub_2378BC024((uint64_t)v13, &qword_25681F430);
  }
  v19 = type metadata accessor for Slot();
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80);
  sub_2378BBFE0(v18 + *(int *)(v19 + 36) + ((v20 + 32) & ~v20), (uint64_t)v13, &qword_25681F430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_2378BC024((uint64_t)v13, &qword_25681F430);
  sub_2378D0858((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v22 = (uint64_t *)(Strong + *a6);
    swift_beginAccess();
    v23 = (void (*)(char *, _QWORD *))*v22;
    sub_2378A2BF4(*v22);
    swift_release();
    if (v23)
    {
      v26[0] = a3;
      v26[1] = a4;
      v27 = a5;
      v23(v17, v26);
      sub_2378A2C04((uint64_t)v23);
    }
  }
  return sub_2378DE6A4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
}

uint64_t sub_2378E8018()
{
  return sub_2378E8024(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
}

uint64_t sub_2378E8024(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  sub_2378A2BF4(*v2);
  return v3;
}

uint64_t sub_2378E8078(uint64_t a1, uint64_t a2)
{
  return sub_2378E808C(a1, a2, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear, (void (*)(uint64_t))sub_2378E7A00);
}

uint64_t sub_2378E808C(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  v9 = *v8;
  *v8 = a1;
  v8[1] = a2;
  sub_2378A2BF4(a1);
  v10 = sub_2378A2C04(v9);
  a4(v10);
  return sub_2378A2C04(a1);
}

uint64_t (*sub_2378E811C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2378E8164;
}

uint64_t sub_2378E8164(uint64_t a1, char a2)
{
  return sub_2378E8170(a1, a2, (uint64_t (*)(uint64_t))sub_2378E7A00);
}

uint64_t sub_2378E8170(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t ClusterTransitionCoordinator.carouselModels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2378E81BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones);
  }
  else
  {
    v3 = swift_bridgeObjectRetain();
    v2 = sub_237906178(v3);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ClusterTransitionCoordinator.__allocating_init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ClusterTransitionCoordinator.init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(a1);
  return v2;
}

uint64_t ClusterTransitionCoordinator.init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  void (**v137)(uint64_t, char *, uint64_t);
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t *, uint64_t, uint64_t, uint64_t);
  void (*v149)(_QWORD, _QWORD);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t KeyPath;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  char *v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(_QWORD, _QWORD);
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int *v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  unsigned __int8 v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (**v230)(uint64_t, char *, uint64_t);
  void (*v231)(_QWORD, _QWORD);
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  char v256;
  char *v257;
  unsigned int v258;
  void (*v259)(_QWORD, _QWORD);
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int *v284;
  _QWORD *v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  NSObject *v289;
  os_signpost_type_t v290;
  uint64_t v291;
  uint64_t v292;
  void *v293;
  id v294;
  void *v295;
  id v296;
  unint64_t v297;
  unint64_t v298;
  unint64_t v299;
  id v300;
  void *v301;
  id v302;
  unint64_t v303;
  unint64_t v304;
  unint64_t v305;
  char *v306;
  os_signpost_id_t v307;
  uint64_t v308;
  void (*v309)(char *, uint64_t);
  void *v310;
  id v311;
  void *v312;
  id v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  id v319;
  void *v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  char v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unsigned __int8 v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  int v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  uint64_t *v357;
  uint64_t *v358;
  int v359;
  uint64_t v360;
  char v361;
  unint64_t v362;
  uint64_t v363;
  _BOOL8 v364;
  uint64_t v365;
  char v366;
  unint64_t v367;
  char v368;
  _QWORD *v369;
  uint64_t v370;
  BOOL v371;
  uint64_t v372;
  uint64_t result;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  __int128 v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  char *v400;
  __int128 v401;
  _QWORD *v402;
  char *v403;
  _QWORD *v404;
  uint64_t v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  void (**v415)(uint64_t, char *, uint64_t);
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t *v425;
  uint64_t v426;
  __int128 v427;
  uint64_t v428;
  __int128 v429;
  uint64_t v430;
  uint64_t v431;
  _BYTE v432[512];
  _BYTE v433[512];
  _BYTE v434[512];
  _BYTE v435[512];
  _BYTE v436[528];
  uint64_t v437;
  unint64_t v438;
  _BYTE v439[512];
  _QWORD v440[64];
  uint64_t v441;
  unint64_t v442;
  uint64_t v443[64];

  v2 = MEMORY[0x24BDAC7A8](a1);
  v3 = v1;
  v383 = v4;
  v384 = v5;
  v417 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE0);
  MEMORY[0x24BDAC7A8](v6);
  v390 = (uint64_t)&v374 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A86624();
  v378 = *(_QWORD *)(v8 - 8);
  v379 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v376 = (char *)&v374 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v412 = (char *)&v374 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v411 = (uint64_t)&v374 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v410 = (uint64_t)&v374 - v15;
  v428 = type metadata accessor for Component();
  v423 = *(_QWORD *)(v428 - 8);
  v16 = MEMORY[0x24BDAC7A8](v428);
  v386 = (char *)&v374 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v399 = (uint64_t)&v374 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v397 = (uint64_t)&v374 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v21);
  v398 = (char *)&v374 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v418 = (uint64_t)&v374 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v422 = (char *)&v374 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v426 = (uint64_t)&v374 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v395 = (uint64_t)&v374 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v425 = (uint64_t *)((char *)&v374 - v32);
  v33 = type metadata accessor for Slot();
  v430 = *(_QWORD *)(v33 - 8);
  v431 = v33;
  v34 = MEMORY[0x24BDAC7A8](v33);
  v385 = (uint64_t)&v374 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v421 = (uint64_t)&v374 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v419 = (char *)&v374 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v420 = (uint64_t)&v374 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v41);
  v413 = (char *)&v374 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v380 = *(_QWORD *)(v374 - 8);
  v43 = MEMORY[0x24BDAC7A8](v374);
  v389 = (uint64_t)&v374 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)&v429 = (char *)&v374 - v45;
  v414 = type metadata accessor for Zone();
  v381 = *(_QWORD *)(v414 - 8);
  MEMORY[0x24BDAC7A8](v414);
  *(_QWORD *)&v427 = (char *)&v374 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD0);
  v415 = *(void (***)(uint64_t, char *, uint64_t))(v47 - 8);
  v416 = v47;
  MEMORY[0x24BDAC7A8](v47);
  v409 = (char *)&v374 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CC0);
  v407 = *(_QWORD *)(v49 - 8);
  v408 = v49;
  MEMORY[0x24BDAC7A8](v49);
  v406 = (char *)&v374 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v405 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE8);
  v51 = MEMORY[0x24BDAC7A8](v405);
  v404 = (uint64_t *)((char *)&v374 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v51);
  v403 = (char *)&v374 - v53;
  v402 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_256820CA8);
  *(_QWORD *)&v401 = *(v402 - 1);
  MEMORY[0x24BDAC7A8](v402);
  v400 = (char *)&v374 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v396 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v55 = MEMORY[0x24BDAC7A8](v396);
  v394 = (uint64_t)&v374 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v393 = (char *)&v374 - v57;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C98);
  v391 = *(_QWORD *)(v58 - 8);
  v392 = v58;
  MEMORY[0x24BDAC7A8](v58);
  v388 = (char *)&v374 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C80);
  v382 = *(_QWORD *)(v387 - 8);
  MEMORY[0x24BDAC7A8](v387);
  v377 = (uint64_t)&v374 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v424 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C70);
  v375 = *(_QWORD *)(v424 - 8);
  MEMORY[0x24BDAC7A8](v424);
  v62 = (char *)&v374 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C58);
  v64 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v66 = (char *)&v374 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C48);
  v68 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v70 = (char *)&v374 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent;
  v437 = sub_2378D1568(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF8);
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v71, v70, v67);
  v72 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder;
  v73 = MEMORY[0x24BEE4AF8];
  v437 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820D00);
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v72, v66, v63);
  v74 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
  v75 = v3;
  v76 = type metadata accessor for RequestContentModel();
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
  v77(v74, 1, 1, v76);
  v78 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent;
  v79 = v417;
  v77(v78, 1, 1, v76);
  v80 = v75;
  v81 = v75 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent;
  LOBYTE(v437) = 0;
  sub_237A866CC();
  v82 = *(void (**)(uint64_t, char *, uint64_t))(v375 + 32);
  v83 = v424;
  v82(v81, v62, v424);
  v84 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions;
  v437 = sub_2378D1584(v73);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820D08);
  v85 = v377;
  sub_237A866CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v382 + 32))(v84, v85, v387);
  v86 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent;
  LOBYTE(v437) = 0;
  sub_237A866CC();
  v82(v86, v62, v83);
  v87 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions;
  v437 = sub_2378D167C(v73);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820D10);
  v88 = v388;
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v391 + 32))(v87, v88, v392);
  v89 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout;
  v90 = type metadata accessor for Layout();
  v91 = (uint64_t)v393;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v393, 1, 1, v90);
  sub_2378BBFE0(v91, v394, &qword_256820CF0);
  v92 = (uint64_t)v400;
  sub_237A866CC();
  sub_2378BC024(v91, &qword_256820CF0);
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(v401 + 32))(v89, v92, v402);
  v93 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout;
  LOBYTE(v437) = 0;
  sub_237A866CC();
  v82(v93, v62, v424);
  v94 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition;
  v95 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  v96 = (uint64_t)v403;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v403, 1, 1, v95);
  sub_2378BBFE0(v96, (uint64_t)v404, &qword_256820CE8);
  v97 = v406;
  sub_237A866CC();
  sub_2378BC024(v96, &qword_256820CE8);
  (*(void (**)(uint64_t, char *, uint64_t))(v407 + 32))(v94, v97, v408);
  v98 = v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  v437 = sub_2378D1840(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820D18);
  v99 = v409;
  sub_237A866CC();
  v415[4](v98, v99, v416);
  v100 = v381;
  v101 = (_QWORD *)(v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  *v101 = 0;
  v101[1] = 0;
  v102 = (_QWORD *)(v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  *v102 = 0;
  v102[1] = 0;
  *(_QWORD *)(v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones) = 0;
  v394 = v80;
  *(_QWORD *)(v80 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones) = v79;
  v103 = *(_QWORD *)(v79 + 16);
  if (v103)
  {
    v104 = v79 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    v105 = *(_QWORD *)(v100 + 72);
    swift_bridgeObjectRetain_n();
    v106 = MEMORY[0x24BEE4B00];
    v107 = v427;
    v424 = v105;
    do
    {
      sub_2378D07D8(v104, v107, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v109 = v107 + *(int *)(v414 + 32);
      v110 = *(_QWORD *)v109;
      v111 = *(_QWORD *)(v109 + 8);
      v112 = *(unsigned __int8 *)(v109 + 16);
      v113 = v111 | *(_QWORD *)v109;
      if (v112 == 2 && v113 == 0)
      {
        swift_bridgeObjectRetain();
        v108 = v106;
      }
      else
      {
        sub_2378BBFE0(v107, v429, &qword_25681E8E0);
        swift_bridgeObjectRetain();
        v115 = Zone.primaryComponents.getter();
        v116 = v413;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v423 + 56))(v413, 1, 1, v428);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256820B30);
        swift_allocObject();
        v117 = (uint64_t)v116;
        v107 = v427;
        v118 = sub_2378F7148(v115, v117, v112 == 0);
        sub_2378D0664(v110, v111, v112);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v437 = v106;
        v120 = v118;
        v105 = v424;
        v121 = v110;
        v122 = v429;
        sub_23787187C(v120, v121, v111, v112, v429, isUniquelyReferenced_nonNull_native);
        v108 = v437;
        swift_bridgeObjectRelease();
        sub_2378BC024(v122, &qword_25681E8E0);
      }
      sub_2378DE6A4(v107, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      swift_bridgeObjectRelease();
      v104 += v105;
      v106 = v108;
      --v103;
    }
    while (v103);
    v79 = v417;
    v123 = swift_bridgeObjectRelease();
  }
  else
  {
    v123 = swift_bridgeObjectRetain();
    v108 = MEMORY[0x24BEE4B00];
  }
  *(_QWORD *)(v394 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels) = v108;
  MEMORY[0x24BDAC7A8](v123);
  v124 = swift_bridgeObjectRetain();
  v125 = 0;
  sub_237905DB0(v124, (void (*)(char *, uint64_t, char *))sub_237905DA8);
  swift_bridgeObjectRelease();
  v126 = sub_237906334(v79);
  swift_bridgeObjectRelease();
  v127 = (uint64_t)v412;
  v128 = (uint64_t)v422;
  v129 = v419;
  v377 = v126;
  if (!v383)
    goto LABEL_67;
  v392 = *(_QWORD *)(v126 + 16);
  if (!v392)
    goto LABEL_66;
  v388 = (char *)(v126 + ((*(unsigned __int8 *)(v381 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80)));
  v391 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
  v387 = *(_QWORD *)(v381 + 72);
  v402 = v419 + 48;
  *(_QWORD *)&v401 = v419 + 80;
  *(_QWORD *)&v429 = v439;
  swift_bridgeObjectRetain();
  v130 = 0;
  v396 = xmmword_237A8A9F0;
  v131 = v394;
LABEL_19:
  v132 = *(_QWORD *)(v131 + v391);
  if (!*(_QWORD *)(v132 + 16))
    goto LABEL_18;
  v393 = v130;
  v400 = &v388[(_QWORD)v130 * v387];
  v133 = sub_2378D3230((uint64_t)v400);
  if ((v134 & 1) == 0)
  {
LABEL_16:
    v131 = v394;
    goto LABEL_17;
  }
  v135 = *(_QWORD *)(v132 + 56) + 32 * v133;
  v137 = *(void (***)(uint64_t, char *, uint64_t))v135;
  v136 = *(_QWORD *)(v135 + 8);
  v138 = *(_QWORD *)(v135 + 16);
  v139 = *(unsigned __int8 *)(v135 + 24);
  swift_retain();
  sub_2378D0664(v136, v138, v139);
  v140 = sub_2378E41F0(v383);
  v408 = *(_QWORD *)(v140 + 16);
  if (!v408)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_2378724B0(v136, v138, v139);
    goto LABEL_16;
  }
  v415 = v137;
  LODWORD(v405) = v139;
  v406 = (char *)v138;
  v407 = v136;
  v424 = v125;
  v403 = &v400[*(int *)(v414 + 24)];
  v404 = (_QWORD *)(v140 + 32);
  v382 = v140;
  swift_bridgeObjectRetain();
  v141 = 0;
  while (1)
  {
    v417 = v141;
    sub_237870370((uint64_t)&v404[64 * v141], (uint64_t)v443, &qword_25681EF58);
    v145 = *((_QWORD *)v403 + 2);
    v146 = *((_QWORD *)v403 + 3);
    v147 = type metadata accessor for Instrument();
    *(_QWORD *)&v427 = *(_QWORD *)(v147 - 8);
    v148 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v427 + 56);
    v149 = (void (*)(_QWORD, _QWORD))v425;
    v148(v425, 1, 1, v147);
    v150 = v431;
    v151 = (uint64_t)&v129[*(int *)(v431 + 36)];
    v416 = v147;
    v409 = (char *)v148;
    v148((uint64_t *)v151, 1, 1, v147);
    v152 = (uint64_t)v129;
    v153 = &v129[*(int *)(v150 + 40)];
    *(_QWORD *)v153 = 0;
    *((_QWORD *)v153 + 1) = 0;
    v154 = *(int *)(v150 + 44);
    sub_237907D00(v443, sub_2378DD44C);
    sub_237A86588();
    v155 = v418;
    sub_2378BBFE0(v128, v418, &qword_2568202F8);
    if (qword_25681E410 != -1)
      swift_once();
    v156 = v152 + v154;
    v157 = qword_256825198;
    sub_2378BC024(v128, &qword_2568202F8);
    sub_237870370(v155, v156, &qword_2568202F8);
    *(_QWORD *)(v156 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v157;
    *(_QWORD *)(v152 + 120) = 12620;
    *(_QWORD *)(v152 + 128) = 0xE200000000000000;
    *(_OWORD *)v152 = 0u;
    *(_OWORD *)(v152 + 16) = 0u;
    *(_QWORD *)(v152 + 32) = 0;
    *(_QWORD *)(v152 + 40) = 1;
    v158 = v402;
    *v402 = 0;
    v158[1] = 0;
    *(_QWORD *)(v152 + 64) = v145;
    *(_QWORD *)(v152 + 72) = v146;
    v159 = v401;
    *(_OWORD *)v401 = 0u;
    *(_OWORD *)(v159 + 16) = 0u;
    *(_QWORD *)(v159 + 32) = 0;
    sub_23790760C((uint64_t)v149, v151);
    swift_bridgeObjectRelease();
    *(_QWORD *)v153 = 0;
    *((_QWORD *)v153 + 1) = 0;
    v160 = v152;
    v161 = v420;
    v162 = sub_2378D0858(v160, v420, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    MEMORY[0x24BDAC7A8](v162);
    sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v164 = *(_QWORD *)(v437 + 16);
    if (v164)
    {
      v165 = v423;
      v166 = v437 + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
      swift_bridgeObjectRetain();
      v167 = *(_QWORD *)(v165 + 72);
      v168 = v164 - 1;
      v169 = v428;
      v170 = v395;
      v171 = v416;
      while (1)
      {
        v172 = *(_QWORD *)(v166 + *(int *)(v169 + 32));
        if (!*(_QWORD *)(v172 + 16))
          goto LABEL_35;
        sub_2378BBFE0(v172+ ((*(unsigned __int8 *)(v430 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80))+ *(int *)(v431 + 36), v170, &qword_25681F430);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v427 + 48))(v170, 1, v171) == 1)
          break;
        sub_23788F46C((const void *)(v170 + *(int *)(v171 + 20)), v436);
        sub_2378DE6E0(v436, sub_2378DD44C);
        sub_2378DE6A4(v170, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
        sub_23788F46C(v436, v440);
        nullsub_1(v440);
        sub_237870370((uint64_t)v440, (uint64_t)v435, &qword_25681EF58);
        sub_237870370((uint64_t)v443, (uint64_t)&v437, &qword_25681EF58);
        if (sub_2379076BC((uint64_t)&v437) == 1)
        {
          sub_23788F46C(v435, v434);
          sub_2378DE6E0(v436, sub_2378DD44C);
          sub_2378DE6E0(v434, sub_2378DE7AC);
          sub_237870370((uint64_t)v440, (uint64_t)&v441, &qword_25681EF58);
          goto LABEL_30;
        }
        sub_237870370((uint64_t)v443, (uint64_t)v433, &qword_25681EF58);
        sub_23788F46C(v433, v432);
        sub_2378DE6E0(v436, sub_2378DD44C);
        _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v435);
        v174 = v173;
        sub_23788F46C(v435, v434);
        sub_2378DE6E0(v434, sub_2378DE7AC);
        sub_2378DE6E0(v436, sub_2378DE7AC);
        if ((v174 & 1) != 0)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          v128 = (uint64_t)v422;
          goto LABEL_24;
        }
        v169 = v428;
        if (!v168)
        {
LABEL_40:
          swift_bridgeObjectRelease_n();
          v161 = v420;
          goto LABEL_42;
        }
LABEL_31:
        v166 += v167;
        --v168;
      }
      sub_2378BC024(v170, &qword_25681F430);
LABEL_35:
      sub_237870370((uint64_t)v443, (uint64_t)&v437, &qword_25681EF58);
      if (sub_2379076BC((uint64_t)&v437) == 1)
        goto LABEL_23;
      sub_23788F2D4((uint64_t)v440);
      sub_237870370((uint64_t)v440, (uint64_t)&v441, &qword_25681EF58);
LABEL_30:
      sub_237870370((uint64_t)&v441, (uint64_t)&v437, &qword_25681EF58);
      sub_237870370((uint64_t)v443, v429, &qword_25681EF58);
      sub_237907D00(v443, sub_2378DD44C);
      sub_2379076D4(&v437);
      if (!v168)
        goto LABEL_40;
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    v171 = v416;
LABEL_42:
    v175 = &v400[*(int *)(v414 + 32)];
    v176 = v175[16];
    v128 = (uint64_t)v422;
    if (v176 >= 2)
    {
      sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
      if (sub_2379076BC((uint64_t)&v441) == 1)
      {
LABEL_51:
        v187 = v430;
        goto LABEL_57;
      }
      v188 = &v441;
      goto LABEL_55;
    }
    v177 = *(_QWORD *)v175;
    v178 = *((_QWORD *)v175 + 1);
    sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
    if (sub_2379076BC((uint64_t)&v441) == 1)
      goto LABEL_51;
    sub_23788F46C(&v441, v440);
    if (sub_2378A1BDC((uint64_t)v440) == 6)
    {
      v179 = (uint64_t *)sub_2378A1BF8((uint64_t)v440);
      if (!v177)
      {
        sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
        sub_2378D0664(0, v178, v176);
        goto LABEL_54;
      }
      if (*(_QWORD *)(v177 + 16))
      {
        v181 = *v179;
        v180 = v179[1];
        sub_2378D0664(v177, v178, v176);
        swift_bridgeObjectRetain();
        v182 = sub_2378D2DB8(v181, v180);
        if ((v183 & 1) == 0)
        {
          sub_2378724B0(v177, v178, v176);
          swift_bridgeObjectRelease();
          sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
          sub_23788F46C(v436, &v437);
          v187 = v430;
          v161 = v420;
          goto LABEL_56;
        }
        v184 = *(_QWORD *)(v177 + 56) + 32 * v182;
        v427 = *(_OWORD *)v184;
        v185 = *(_QWORD *)(v184 + 16);
        v186 = *(_QWORD *)(v184 + 24);
        sub_2378724B0(v177, v178, v176);
        swift_bridgeObjectRelease();
        v161 = v420;
        *(_OWORD *)(v420 + 80) = v427;
        *(_QWORD *)(v161 + 96) = v185;
        *(_QWORD *)(v161 + 104) = v186;
      }
    }
    sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
LABEL_54:
    v188 = (uint64_t *)v436;
LABEL_55:
    sub_23788F46C(v188, &v437);
    v187 = v430;
LABEL_56:
    sub_23788F46C(&v437, v440);
    sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
    sub_2378DE6E0(&v441, sub_2378DD44C);
    v189 = (uint64_t)v398;
    sub_237A86588();
    v190 = sub_237A871F4();
    v191 = (void (*)(_QWORD, _QWORD))v425;
    Instrument.init(id:kind:backgroundColor:shadowID:)(v189, v440, v190, 0, 0, (uint64_t)v425);
    ((void (*)(void (*)(_QWORD, _QWORD), _QWORD, uint64_t, uint64_t))v409)(v191, 0, 1, v171);
    sub_23790760C((uint64_t)v191, v161 + *(int *)(v431 + 36));
LABEL_57:
    sub_237A86588();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
    v192 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
    v193 = swift_allocObject();
    *(_OWORD *)(v193 + 16) = v396;
    sub_2378D07D8(v161, v193 + v192, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    v194 = v424;
    v195 = sub_2378E40FC(v193);
    v424 = v194;
    v196 = *(_QWORD *)(v195 + 16);
    v197 = sub_237A87BF0();
    v440[0] = v197;
    if (v196)
    {
      v198 = (uint64_t *)(v195 + 40);
      do
      {
        v199 = *(v198 - 1);
        v200 = *v198;
        swift_bridgeObjectRetain();
        sub_2378FE1F0(&v441, v199, v200);
        swift_bridgeObjectRelease();
        v198 += 2;
        --v196;
      }
      while (v196);
      v197 = v440[0];
      v128 = (uint64_t)v422;
    }
    v201 = *(_QWORD *)(v197 + 16);
    swift_bridgeObjectRelease();
    v202 = *(_QWORD *)(v195 + 16);
    swift_bridgeObjectRelease();
    if (v201 != v202)
      break;
    v203 = v397;
    sub_237870370(v410, v397, qword_2568207C8);
    v204 = (int *)v428;
    *(_BYTE *)(v203 + *(int *)(v428 + 20)) = 0;
    v205 = (_QWORD *)(v203 + v204[6]);
    *v205 = 0x746E65746E6F43;
    v205[1] = 0xE700000000000000;
    v206 = (_QWORD *)(v203 + v204[7]);
    *v206 = v145;
    v206[1] = v146;
    *(_QWORD *)(v203 + v204[8]) = v193;
    v207 = (uint64_t)v413;
    (*(void (**)(char *, uint64_t, uint64_t))(v423 + 56))(v413, 1, 1);
    sub_2378F8484(v203, v207);
    sub_2378BC024(v207, &qword_2568207A8);
    sub_2378DE6A4(v203, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_24:
    v129 = v419;
    v141 = v417 + 1;
    sub_2378DE6A4(v420, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    sub_237907D00(v443, sub_2378DE7AC);
    v142 = v407;
    v143 = (uint64_t)v406;
    v144 = v405;
    if (v141 == v408)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_2378724B0(v142, v143, v144);
      v131 = v394;
      v125 = v424;
LABEL_17:
      v130 = v393;
LABEL_18:
      if (++v130 != (char *)v392)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      v127 = (uint64_t)v412;
LABEL_66:
      swift_bridgeObjectRelease();
LABEL_67:
      if (v384)
      {
        v208 = sub_2378E81BC();
        v209 = *(_QWORD *)(v208 + 16);
        if (v209)
        {
          v210 = 0;
          v211 = (*(unsigned __int8 *)(v381 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80);
          v388 = (char *)v208;
          *(_QWORD *)&v396 = v208 + v211;
          v397 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
          v395 = *(_QWORD *)(v381 + 72);
          v403 = v129 + 80;
          v404 = v129 + 48;
          v400 = v439;
          v401 = xmmword_237A8A9F0;
          v212 = v394;
          v391 = v209;
          while (1)
          {
            v213 = *(_QWORD *)(v212 + v397);
            if (!*(_QWORD *)(v213 + 16))
              goto LABEL_71;
            v402 = (_QWORD *)(v396 + (_QWORD)v210 * v395);
            v214 = sub_2378D3230((uint64_t)v402);
            if ((v215 & 1) == 0)
            {
              v212 = v394;
              goto LABEL_71;
            }
            v216 = *(_QWORD *)(v213 + 56) + 32 * v214;
            v218 = *(_QWORD *)v216;
            v217 = *(_QWORD *)(v216 + 8);
            v219 = *(_QWORD *)(v216 + 16);
            v220 = *(unsigned __int8 *)(v216 + 24);
            swift_retain();
            sub_2378D0664(v217, v219, v220);
            v221 = sub_2378E41F0(v384);
            v409 = *(char **)(v221 + 16);
            if (v409)
              break;
            swift_bridgeObjectRelease();
            swift_release();
            sub_2378724B0(v217, v219, v220);
            v212 = v394;
            v209 = v391;
LABEL_71:
            if (++v210 == (char *)v209)
              goto LABEL_120;
          }
          v417 = v218;
          LODWORD(v416) = v220;
          v407 = v219;
          v408 = v217;
          v392 = v221;
          v393 = v210;
          v424 = v125;
          v405 = (uint64_t)v402 + *(int *)(v414 + 24);
          v406 = (char *)(v221 + 32);
          swift_bridgeObjectRetain();
          v222 = 0;
LABEL_78:
          *(_QWORD *)&v427 = v222;
          sub_237870370((uint64_t)&v406[512 * (_QWORD)v222], (uint64_t)v443, &qword_25681EF58);
          v227 = *(_QWORD *)(v405 + 16);
          v228 = *(_QWORD *)(v405 + 24);
          v229 = type metadata accessor for Instrument();
          *(_QWORD *)&v429 = *(_QWORD *)(v229 - 8);
          v230 = *(void (***)(uint64_t, char *, uint64_t))(v429 + 56);
          v231 = (void (*)(_QWORD, _QWORD))v425;
          ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v230)(v425, 1, 1, v229);
          v232 = v431;
          v233 = (uint64_t)&v129[*(int *)(v431 + 36)];
          v420 = v229;
          v415 = v230;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v230)(v233, 1, 1, v229);
          v234 = &v129[*(int *)(v232 + 40)];
          *(_QWORD *)v234 = 0;
          *((_QWORD *)v234 + 1) = 0;
          v235 = *(int *)(v232 + 44);
          sub_237907D00(v443, sub_2378DD44C);
          v236 = (uint64_t)v422;
          sub_237A86588();
          v237 = v418;
          sub_2378BBFE0(v236, v418, &qword_2568202F8);
          if (qword_25681E410 != -1)
            swift_once();
          v238 = (uint64_t)&v129[v235];
          v239 = (uint64_t)v129;
          v240 = qword_256825198;
          sub_2378BC024(v236, &qword_2568202F8);
          sub_237870370(v237, v238, &qword_2568202F8);
          *(_QWORD *)(v238 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v240;
          *(_QWORD *)(v239 + 120) = 12620;
          *(_QWORD *)(v239 + 128) = 0xE200000000000000;
          *(_OWORD *)v239 = 0u;
          *(_OWORD *)(v239 + 16) = 0u;
          *(_QWORD *)(v239 + 32) = 0;
          *(_QWORD *)(v239 + 40) = 1;
          v241 = v404;
          *v404 = 0;
          v241[1] = 0;
          *(_QWORD *)(v239 + 64) = v227;
          *(_QWORD *)(v239 + 72) = v228;
          v242 = v403;
          *(_OWORD *)v403 = 0u;
          *((_OWORD *)v242 + 1) = 0u;
          *((_QWORD *)v242 + 4) = 0;
          sub_23790760C((uint64_t)v231, v233);
          swift_bridgeObjectRelease();
          *(_QWORD *)v234 = 0;
          *((_QWORD *)v234 + 1) = 0;
          v243 = sub_2378D0858(v239, v421, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
          MEMORY[0x24BDAC7A8](v243);
          sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
          v244 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v244);
          swift_getKeyPath();
          sub_237A866FC();
          swift_release();
          swift_release();
          v245 = *(_QWORD *)(v437 + 16);
          if (v245)
          {
            v246 = v423;
            v247 = v437
                 + ((*(unsigned __int8 *)(v423 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v423 + 80));
            v410 = v437;
            swift_bridgeObjectRetain();
            v248 = *(_QWORD *)(v246 + 72);
            v249 = v245 - 1;
            v250 = v428;
            v251 = (uint64_t)v400;
            v252 = v420;
            while (1)
            {
              v253 = *(_QWORD *)(v247 + *(int *)(v250 + 32));
              if (!*(_QWORD *)(v253 + 16))
                goto LABEL_88;
              v254 = v426;
              sub_2378BBFE0(v253+ ((*(unsigned __int8 *)(v430 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80))+ *(int *)(v431 + 36), v426, &qword_25681F430);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v429 + 48))(v254, 1, v252) == 1)
                break;
              sub_23788F46C((const void *)(v254 + *(int *)(v252 + 20)), v436);
              sub_2378DE6E0(v436, sub_2378DD44C);
              sub_2378DE6A4(v254, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              sub_23788F46C(v436, v440);
              nullsub_1(v440);
              sub_237870370((uint64_t)v440, (uint64_t)v435, &qword_25681EF58);
              sub_237870370((uint64_t)v443, (uint64_t)&v437, &qword_25681EF58);
              if (sub_2379076BC((uint64_t)&v437) == 1)
              {
                sub_23788F46C(v435, v434);
                sub_2378DE6E0(v436, sub_2378DD44C);
                sub_2378DE6E0(v434, sub_2378DE7AC);
                goto LABEL_83;
              }
              sub_237870370((uint64_t)v443, (uint64_t)v433, &qword_25681EF58);
              sub_23788F46C(v433, v432);
              sub_2378DE6E0(v436, sub_2378DD44C);
              _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v435);
              v256 = v255;
              sub_23788F46C(v435, v434);
              sub_2378DE6E0(v434, sub_2378DE7AC);
              sub_2378DE6E0(v436, sub_2378DE7AC);
              if ((v256 & 1) != 0)
              {
LABEL_76:
                swift_bridgeObjectRelease_n();
                v127 = (uint64_t)v412;
                v223 = v421;
                v129 = v419;
                v224 = v416;
                goto LABEL_77;
              }
              v250 = v428;
              if (!v249)
              {
LABEL_93:
                swift_bridgeObjectRelease_n();
                goto LABEL_95;
              }
LABEL_84:
              v247 += v248;
              --v249;
            }
            sub_2378BC024(v254, &qword_25681F430);
LABEL_88:
            sub_237870370((uint64_t)v443, (uint64_t)&v437, &qword_25681EF58);
            if (sub_2379076BC((uint64_t)&v437) == 1)
              goto LABEL_76;
            sub_23788F2D4((uint64_t)v440);
LABEL_83:
            sub_237870370((uint64_t)v440, (uint64_t)&v441, &qword_25681EF58);
            sub_237870370((uint64_t)&v441, (uint64_t)&v437, &qword_25681EF58);
            sub_237870370((uint64_t)v443, v251, &qword_25681EF58);
            sub_237907D00(v443, sub_2378DD44C);
            sub_2379076D4(&v437);
            if (!v249)
              goto LABEL_93;
            goto LABEL_84;
          }
          swift_bridgeObjectRelease();
          v252 = v420;
LABEL_95:
          v257 = (char *)v402 + *(int *)(v414 + 32);
          v258 = v257[16];
          v127 = (uint64_t)v412;
          v259 = (void (*)(_QWORD, _QWORD))v425;
          v223 = v421;
          v224 = v416;
          if (v258 >= 2)
          {
            sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
            if (sub_2379076BC((uint64_t)&v441) != 1)
            {
              v270 = &v441;
              goto LABEL_108;
            }
          }
          else
          {
            v260 = *(_QWORD *)v257;
            v261 = *((_QWORD *)v257 + 1);
            sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
            if (sub_2379076BC((uint64_t)&v441) != 1)
            {
              sub_23788F46C(&v441, v440);
              if (sub_2378A1BDC((uint64_t)v440) != 6)
                goto LABEL_105;
              v262 = (_QWORD *)sub_2378A1BF8((uint64_t)v440);
              if (v260)
              {
                if (*(_QWORD *)(v260 + 16))
                {
                  v263 = v262[1];
                  *(_QWORD *)&v429 = *v262;
                  sub_2378D0664(v260, v261, v258);
                  swift_bridgeObjectRetain();
                  v264 = sub_2378D2DB8(v429, v263);
                  if ((v265 & 1) != 0)
                  {
                    v266 = *(_QWORD *)(v260 + 56) + 32 * v264;
                    v429 = *(_OWORD *)v266;
                    v267 = *(_QWORD *)(v266 + 16);
                    v268 = *(_QWORD *)(v266 + 24);
                    sub_2378724B0(v260, v261, v258);
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v223 + 80) = v429;
                    *(_QWORD *)(v223 + 96) = v267;
                    *(_QWORD *)(v223 + 104) = v268;
                  }
                  else
                  {
                    sub_2378724B0(v260, v261, v258);
                    swift_bridgeObjectRelease();
                  }
                  sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
                  sub_23788F46C(v436, &v437);
                  v269 = v430;
                  v259 = (void (*)(_QWORD, _QWORD))v425;
LABEL_109:
                  sub_23788F46C(&v437, v440);
                  sub_237870370((uint64_t)v443, (uint64_t)&v441, &qword_25681EF58);
                  sub_2378DE6E0(&v441, sub_2378DD44C);
                  v271 = (uint64_t)v398;
                  sub_237A86588();
                  v272 = sub_237A871F4();
                  Instrument.init(id:kind:backgroundColor:shadowID:)(v271, v440, v272, 0, 0, (uint64_t)v259);
                  ((void (*)(void (*)(_QWORD, _QWORD), _QWORD, uint64_t, uint64_t))v415)(v259, 0, 1, v252);
                  sub_23790760C((uint64_t)v259, v223 + *(int *)(v431 + 36));
LABEL_110:
                  sub_237A86588();
                  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
                  v273 = (*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80);
                  v193 = swift_allocObject();
                  *(_OWORD *)(v193 + 16) = v401;
                  sub_2378D07D8(v223, v193 + v273, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                  v274 = v424;
                  v275 = sub_2378E40FC(v193);
                  v424 = v274;
                  v276 = *(_QWORD *)(v275 + 16);
                  v277 = sub_237A87BF0();
                  v440[0] = v277;
                  if (v276)
                  {
                    v278 = (uint64_t *)(v275 + 40);
                    do
                    {
                      v280 = *(v278 - 1);
                      v279 = *v278;
                      swift_bridgeObjectRetain();
                      sub_2378FE1F0(&v441, v280, v279);
                      swift_bridgeObjectRelease();
                      v278 += 2;
                      --v276;
                    }
                    while (v276);
                    v277 = v440[0];
                    v127 = (uint64_t)v412;
                    v223 = v421;
                    v224 = v416;
                  }
                  v281 = *(_QWORD *)(v277 + 16);
                  swift_bridgeObjectRelease();
                  v282 = *(_QWORD *)(v275 + 16);
                  swift_bridgeObjectRelease();
                  if (v281 != v282)
                    break;
                  v283 = v399;
                  sub_237870370(v411, v399, qword_2568207C8);
                  v284 = (int *)v428;
                  *(_BYTE *)(v283 + *(int *)(v428 + 20)) = 0;
                  v285 = (_QWORD *)(v283 + v284[6]);
                  *v285 = 0x746E65746E6F43;
                  v285[1] = 0xE700000000000000;
                  v286 = (_QWORD *)(v283 + v284[7]);
                  *v286 = v227;
                  v286[1] = v228;
                  *(_QWORD *)(v283 + v284[8]) = v193;
                  v287 = (uint64_t)v413;
                  (*(void (**)(char *, uint64_t, uint64_t))(v423 + 56))(v413, 1, 1);
                  sub_2378F8484(v283, v287);
                  sub_2378BC024(v287, &qword_2568207A8);
                  sub_2378DE6A4(v283, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                  v129 = v419;
LABEL_77:
                  v222 = (char *)(v427 + 1);
                  sub_2378DE6A4(v223, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                  sub_237907D00(v443, sub_2378DE7AC);
                  v225 = v408;
                  v226 = v407;
                  if (v222 == v409)
                  {
                    swift_bridgeObjectRelease_n();
                    swift_release();
                    sub_2378724B0(v225, v226, v224);
                    v210 = v393;
                    v212 = v394;
                    v125 = v424;
                    v209 = v391;
                    goto LABEL_71;
                  }
                  goto LABEL_78;
                }
LABEL_105:
                sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
              }
              else
              {
                sub_237870370((uint64_t)v443, (uint64_t)v436, &qword_25681EF58);
                sub_2378D0664(0, v261, v258);
              }
              v270 = (uint64_t *)v436;
LABEL_108:
              sub_23788F46C(v270, &v437);
              v269 = v430;
              goto LABEL_109;
            }
          }
          v269 = v430;
          goto LABEL_110;
        }
LABEL_120:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (qword_25681E0F0 != -1)
        goto LABEL_162;
      while (2)
      {
        v288 = sub_237A86654();
        __swift_project_value_buffer(v288, (uint64_t)qword_2568705E8);
        swift_retain_n();
        sub_237A86618();
        v289 = sub_237A8663C();
        v290 = sub_237A87D88();
        if ((sub_237A87DF4() & 1) != 0)
        {
          v424 = v125;
          (*(void (**)(char *, uint64_t, uint64_t))(v378 + 16))(v376, v127, v379);
          v291 = swift_slowAlloc();
          v292 = swift_slowAlloc();
          v443[0] = v292;
          *(_DWORD *)v291 = 136315394;
          v293 = (void *)objc_opt_self();
          v294 = objc_msgSend(v293, sel_standardUserDefaults);
          v295 = (void *)sub_237A877F4();
          v296 = objc_msgSend(v294, (SEL)0x250986A48, v295);

          if (v296)
          {
            v297 = sub_237A87818();
            v299 = v298;

          }
          else
          {
            v437 = 0;
            v438 = 0xE000000000000000;
            sub_237A87F44();
            swift_bridgeObjectRelease();
            v299 = 0x8000000237AB0330;
            v297 = 0xD000000000000015;
          }
          v437 = sub_2378FD9C8(v297, v299, v443);
          sub_237A87E24();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v291 + 12) = 2080;
          v300 = objc_msgSend(v293, sel_standardUserDefaults);
          v301 = (void *)sub_237A877F4();
          v302 = objc_msgSend(v300, sel_stringForKey_, v301);

          if (v302)
          {
            v303 = sub_237A87818();
            v305 = v304;

          }
          else
          {
            v437 = 0;
            v438 = 0xE000000000000000;
            sub_237A87F44();
            swift_bridgeObjectRelease();
            v305 = 0x8000000237AB0330;
            v303 = 0xD000000000000015;
          }
          v437 = sub_2378FD9C8(v303, v305, v443);
          sub_237A87E24();
          swift_bridgeObjectRelease();
          swift_release_n();
          v306 = v376;
          v307 = sub_237A8660C();
          _os_signpost_emit_with_name_impl(&dword_237866000, v289, v290, v307, "Selecting previous session active carousel items: ", "DCA: %s, MapsMedia: %s", (uint8_t *)v291, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B81FB7C](v292, -1, -1);
          MEMORY[0x23B81FB7C](v291, -1, -1);

          v308 = v379;
          v309 = *(void (**)(char *, uint64_t))(v378 + 8);
          v309(v412, v379);
          v309(v306, v308);
        }
        else
        {

          swift_release_n();
          (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v127, v379);
        }
        v310 = (void *)objc_opt_self();
        v311 = objc_msgSend(v310, sel_standardUserDefaults);
        v312 = (void *)sub_237A877F4();
        v313 = objc_msgSend(v311, sel_stringForKey_, v312);

        if (v313)
        {
          v314 = sub_237A87818();
          v316 = v315;

        }
        else
        {
          v314 = 0;
          v316 = 0;
        }
        v317 = v394;
        swift_retain();
        v318 = sub_237906020(v377, v317);
        swift_release();
        swift_bridgeObjectRelease();
        sub_237906B2C(v314, v316, v318, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v319 = objc_msgSend(v310, sel_standardUserDefaults);
        v320 = (void *)sub_237A877F4();
        v321 = objc_msgSend(v319, sel_stringForKey_, v320);

        if (v321)
        {
          v322 = sub_237A87818();
          v324 = v323;

        }
        else
        {
          v322 = 0;
          v324 = 0;
        }
        v325 = v394;
        v326 = sub_2378E81BC();
        swift_retain();
        v327 = sub_237906020(v326, v325);
        swift_release();
        swift_bridgeObjectRelease();
        sub_237906B2C(v322, v324, v327, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v328 = sub_2378E81BC();
        v329 = *(_QWORD *)(v328 + 16);
        if (!v329)
        {
LABEL_159:
          swift_bridgeObjectRelease();
          return v394;
        }
        v330 = *(unsigned __int8 *)(v381 + 80);
        v424 = v328;
        v331 = v328 + ((v330 + 32) & ~v330);
        v332 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
        v333 = *(_QWORD *)(v381 + 72);
        v334 = v394;
        v335 = v390;
        v336 = v430;
        *(_QWORD *)&v429 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
        *(_QWORD *)&v427 = v333;
LABEL_142:
        v337 = *(_QWORD *)(v334 + v332);
        if (*(_QWORD *)(v337 + 16) && (v338 = sub_2378D3230(v331), (v339 & 1) != 0))
        {
          v340 = *(_QWORD *)(v337 + 56) + 32 * v338;
          v341 = *(_QWORD *)(v340 + 8);
          v342 = *(_QWORD *)(v340 + 16);
          v343 = *(_BYTE *)(v340 + 24);
          swift_retain();
          sub_2378D0664(v341, v342, v343);
          v344 = sub_2378724B0(v341, v342, v343);
          MEMORY[0x24BDAC7A8](v344);
          v345 = v428;
          sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
          v346 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v346);
          swift_getKeyPath();
          v347 = (uint64_t)v386;
          sub_237A866FC();
          swift_release();
          swift_release();
          swift_release();
          v348 = *(_QWORD *)(v347 + *(int *)(v345 + 32));
          swift_bridgeObjectRetain();
          sub_2378DE6A4(v347, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          if (*(_QWORD *)(v348 + 16))
          {
            v336 = v430;
            v335 = v390;
            sub_2378D07D8(v348 + ((*(unsigned __int8 *)(v430 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80)), v390, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
            v349 = 0;
          }
          else
          {
            v349 = 1;
            v335 = v390;
            v336 = v430;
          }
          v350 = v431;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v336 + 56))(v335, v349, 1, v431);
          swift_bridgeObjectRelease();
          v351 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v336 + 48))(v335, 1, v350);
          v333 = v427;
          v332 = v429;
          if (v351 != 1)
          {
            v352 = v385;
            sub_2378D0858(v335, v385, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
            v127 = v389;
            sub_2378BBFE0(v331, v389, &qword_25681E8E0);
            v353 = v352 + *(int *)(v431 + 36);
            v354 = type metadata accessor for Instrument();
            v355 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v354 - 8) + 48))(v353, 1, v354);
            v356 = swift_getKeyPath();
            v125 = swift_getKeyPath();
            v426 = v356;
            v425 = (uint64_t *)sub_237A866F0();
            v358 = v357;
            v359 = swift_isUniquelyReferenced_nonNull_native();
            v443[0] = *v358;
            v360 = v443[0];
            *v358 = 0x8000000000000000;
            v362 = sub_2378D3230(v127);
            v363 = *(_QWORD *)(v360 + 16);
            v364 = (v361 & 1) == 0;
            v365 = v363 + v364;
            if (__OFADD__(v363, v364))
            {
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              swift_once();
              continue;
            }
            v366 = v361;
            if (*(_QWORD *)(v360 + 24) >= v365)
            {
              if ((v359 & 1) == 0)
                sub_2378C55E0();
            }
            else
            {
              sub_2378C9EFC(v365, v359);
              v367 = sub_2378D3230(v389);
              if ((v366 & 1) != (v368 & 1))
                goto LABEL_164;
              v362 = v367;
            }
            v332 = v429;
            v369 = (_QWORD *)v443[0];
            if ((v366 & 1) != 0)
            {
              *(_BYTE *)(*(_QWORD *)(v443[0] + 56) + v362) = v355 != 1;
            }
            else
            {
              v127 = v355 != 1;
              *(_QWORD *)(v443[0] + 8 * (v362 >> 6) + 64) |= 1 << v362;
              sub_2378BBFE0(v389, v369[6] + *(_QWORD *)(v380 + 72) * v362, &qword_25681E8E0);
              *(_BYTE *)(v369[7] + v362) = v127;
              v370 = v369[2];
              v371 = __OFADD__(v370, 1);
              v372 = v370 + 1;
              if (v371)
                goto LABEL_161;
              v369[2] = v372;
            }
            *v358 = (uint64_t)v369;
            swift_bridgeObjectRelease();
            sub_2378BC024(v389, &qword_25681E8E0);
            ((void (*)(uint64_t *, _QWORD))v425)(&v437, 0);
            swift_release();
            swift_release();
            sub_2378DE6A4(v385, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
            v335 = v390;
            v336 = v430;
            v333 = v427;
            goto LABEL_141;
          }
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v336 + 56))(v335, 1, 1, v431);
        }
        break;
      }
      sub_2378BC024(v335, &qword_256820CE0);
LABEL_141:
      v331 += v333;
      --v329;
      v334 = v394;
      if (!v329)
        goto LABEL_159;
      goto LABEL_142;
    }
  }
  v441 = 0;
  v442 = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v441 = 0xD000000000000023;
  v442 = 0x8000000237AB0350;
  sub_2378E40FC(v193);
  MEMORY[0x23B81E700]();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237A880AC();
  __break(1u);
LABEL_164:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2378EB104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a4;
  v26 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)a3;
  v14 = *(_QWORD *)(a3 + 8);
  LOBYTE(a3) = *(_BYTE *)(a3 + 16);
  swift_retain();
  sub_2378D0664(v13, v14, a3);
  sub_2378724B0(v13, v14, a3);
  v15 = swift_allocObject();
  swift_weakInit();
  sub_2378BBFE0(a1, (uint64_t)v12, &qword_25681E8E0);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  sub_237870370((uint64_t)v12, v17 + v16, &qword_25681E8E0);
  *(_QWORD *)(v17 + ((v16 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
  v18 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 112));
  v19 = *v18;
  *v18 = (uint64_t)sub_23790BF80;
  v18[1] = v17;
  swift_bridgeObjectRetain();
  sub_2378A2C04(v19);
  v20 = swift_allocObject();
  swift_weakInit();
  sub_2378BBFE0(v26, (uint64_t)v12, &qword_25681E8E0);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  sub_237870370((uint64_t)v12, v21 + v16, &qword_25681E8E0);
  v22 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 120));
  v23 = *v22;
  *v22 = (uint64_t)sub_23790C054;
  v22[1] = v21;
  sub_2378A2C04(v23);
  return swift_release();
}

uint64_t sub_2378EB308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = type metadata accessor for Zone();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v51 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v52 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v21 = type metadata accessor for Layout();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v18, 1, v21);
    v53 = a1;
    v56 = a4;
    if (v22)
    {
      sub_2378BC024((uint64_t)v18, &qword_256820CF0);
      v23 = *(_QWORD *)(a4 + 16);
      if (v23)
        goto LABEL_4;
    }
    else
    {
      v28 = *(_QWORD *)&v18[*(int *)(v21 + 24)];
      swift_bridgeObjectRetain();
      sub_2378BC024((uint64_t)v18, &qword_256820CF0);
      v29 = *(_QWORD *)(v28 + 16);
      if (v29)
      {
        v54 = v20;
        v30 = v28 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        sub_237A86594();
        v31 = *(_QWORD *)(v8 + 72);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        swift_bridgeObjectRetain();
        while ((sub_237A877DC() & 1) == 0)
        {
          v30 += v31;
          if (!--v29)
          {
            swift_bridgeObjectRelease_n();
            v20 = v54;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease_n();
        v20 = v54;
        sub_2378EB8C4(a3, v53);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_19:
      a4 = v56;
      v23 = *(_QWORD *)(v56 + 16);
      if (v23)
      {
LABEL_4:
        v54 = v20;
        v51 = v15;
        v24 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        sub_237A86594();
        v25 = *(_QWORD *)(v8 + 72);
        swift_bridgeObjectRetain();
        v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
        v27 = MEMORY[0x24BDCEA98];
        while (1)
        {
          sub_2378D07D8(v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
          sub_23786FAA0((unint64_t *)&qword_256820458, v26, v27);
          if ((sub_237A877DC() & 1) != 0)
            break;
          sub_2378DE6A4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
          v24 += v25;
          if (!--v23)
          {
            swift_bridgeObjectRelease();
            return swift_release();
          }
        }
        v32 = v56;
        swift_bridgeObjectRelease();
        v33 = v55;
        sub_2378D0858((uint64_t)v11, v55, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        v34 = (uint64_t)v51;
        sub_2378D0858(v33, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        if (*(_BYTE *)(v34 + *(int *)(v52 + 32) + 16))
        {
          v35 = v54;
          if (*(_BYTE *)(v34 + *(int *)(v52 + 32) + 16) == 1)
          {
            Component.stableIdentifier.getter();
            v37 = v36;
            v38 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
            if (v37)
            {
              v39 = sub_237A877F4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v39 = 0;
            }
            v44 = (void *)sub_237A877F4();
            objc_msgSend(v38, sel_setObject_forKey_, v39, v44);

            swift_unknownObjectRelease();
            MEMORY[0x24BDAC7A8](v45);
            *(&v51 - 2) = (char *)v34;
            swift_bridgeObjectRetain();
            v46 = sub_2378E4EBC((uint64_t (*)(char *))sub_23790C23C, (uint64_t)(&v51 - 4), v32);
            swift_retain();
            v47 = sub_237906020(v46, v35);
            swift_release();
            swift_bridgeObjectRelease();
            v48 = Component.stableIdentifier.getter();
            sub_237906B2C(v48, v49, v47, 0);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return sub_2378DE6A4(v34, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
          }
        }
        else
        {
          Component.stableIdentifier.getter();
          v41 = v40;
          v42 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
          if (v41)
          {
            v43 = sub_237A877F4();
            swift_bridgeObjectRelease();
          }
          else
          {
            v43 = 0;
          }
          v50 = (void *)sub_237A877F4();
          objc_msgSend(v42, sel_setObject_forKey_, v43, v50);

          swift_unknownObjectRelease();
        }
        swift_release();
        return sub_2378DE6A4(v34, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2378EB8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v57[2];
  os_log_t v58;
  int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v64 = (uint64_t)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (uint64_t)v57 - v7;
  v8 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v57 - v11;
  v13 = sub_237A86594();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v69 = (uint64_t)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v62 = (uint64_t)v57 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v57 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v57 - v28;
  if (qword_25681E300 != -1)
    swift_once();
  v30 = sub_237A86678();
  __swift_project_value_buffer(v30, (uint64_t)qword_256870670);
  v65 = a2;
  sub_2378BBFE0(a2, (uint64_t)v29, qword_2568207C8);
  v66 = a1;
  sub_2378BBFE0(a1, (uint64_t)v23, &qword_25681E8E0);
  v31 = sub_237A86660();
  v32 = sub_237A87D58();
  v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    v34 = swift_slowAlloc();
    v61 = v12;
    v35 = v34;
    v60 = swift_slowAlloc();
    v72 = v60;
    *(_DWORD *)v35 = 136315394;
    v57[1] = v35 + 4;
    v58 = v31;
    sub_2378BBFE0((uint64_t)v29, (uint64_t)v27, qword_2568207C8);
    v59 = v33;
    v36 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v36(v16, v27, v13);
    v37 = sub_237A87854();
    v39 = v38;
    sub_2378BC024((uint64_t)v27, qword_2568207C8);
    v71 = sub_2378FD9C8(v37, v39, &v72);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378BC024((uint64_t)v29, qword_2568207C8);
    *(_WORD *)(v35 + 12) = 2080;
    v40 = v62;
    sub_2378BBFE0((uint64_t)v23, v62, &qword_25681E8E0);
    v36(v16, (char *)v40, v13);
    v41 = sub_237A87854();
    v43 = v42;
    sub_2378BC024(v40, &qword_25681E8E0);
    v71 = sub_2378FD9C8(v41, v43, &v72);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378BC024((uint64_t)v23, &qword_25681E8E0);
    v31 = v58;
    _os_log_impl(&dword_237866000, v58, (os_log_type_t)v59, "Starting component %s transition on zone %s", (uint8_t *)v35, 0x16u);
    v44 = v60;
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v44, -1, -1);
    v45 = v35;
    v12 = v61;
    MEMORY[0x23B81FB7C](v45, -1, -1);
  }
  else
  {
    sub_2378BC024((uint64_t)v29, qword_2568207C8);
    sub_2378BC024((uint64_t)v23, &qword_25681E8E0);
  }

  v46 = v68;
  sub_2378BBFE0(v65, (uint64_t)&v12[*(int *)(v68 + 20)], qword_2568207C8);
  sub_237A86588();
  v47 = v69;
  sub_2378BBFE0(v66, v69, &qword_25681E8E0);
  v48 = v70;
  sub_2378D07D8((uint64_t)v12, v70, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  v49 = v67;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v48, 0, 1, v46);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v50 = v72;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v48, 1, v46) == 1)
  {
    sub_2378BC024(v48, &qword_2568213E8);
    v51 = v64;
    sub_237903D30(v47, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, (void (*)(unint64_t, uint64_t))sub_2379047D8, (void (*)(void))sub_2378C5AB0, v64);
    sub_2378BC024(v47, &qword_25681E8E0);
    sub_2378BC024(v51, &qword_2568213E8);
    v52 = v72;
  }
  else
  {
    v53 = v48;
    v54 = v63;
    sub_2378D0858(v53, v63, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71 = v50;
    sub_237871A18(v54, v47, isUniquelyReferenced_nonNull_native);
    v52 = v71;
    swift_bridgeObjectRelease();
    sub_2378BC024(v47, &qword_25681E8E0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v71 = v52;
  swift_retain();
  sub_237A86708();
  sub_2378E5BD0();
  return sub_2378DE6A4((uint64_t)v12, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_2378EBF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _QWORD v19[2];

  v4 = type metadata accessor for Zone();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v19 - v9;
  v11 = *(int *)(v8 + 40);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 2)
  {
    if (v13 == 2)
      goto LABEL_14;
  }
  else if (v13 != 2)
  {
    if ((v12 & 1) != 0)
      v15 = 0x32656E6F7ALL;
    else
      v15 = 0x31656E6F7ALL;
    if ((v13 & 1) != 0)
      v16 = 0x32656E6F7ALL;
    else
      v16 = 0x31656E6F7ALL;
    if (v15 != v16)
    {
      v18 = sub_237A8840C();
      swift_bridgeObjectRelease_n();
      sub_2378D07D8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      sub_2378D07D8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v14 = 0;
      if ((v18 & 1) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    swift_bridgeObjectRelease_n();
LABEL_14:
    sub_2378D07D8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    sub_2378D07D8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
LABEL_15:
    sub_237A86594();
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v14 = sub_237A877DC() ^ 1;
    goto LABEL_16;
  }
  sub_2378D07D8(a1, (uint64_t)v19 - v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  sub_2378D07D8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v14 = 0;
LABEL_16:
  sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  sub_2378DE6A4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  return v14 & 1;
}

uint64_t sub_2378EC13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v9 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
    {
      sub_2378BC024((uint64_t)v7, &qword_256820CF0);
    }
    else
    {
      v10 = *(_QWORD *)&v7[*(int *)(v9 + 24)];
      swift_bridgeObjectRetain();
      sub_2378BC024((uint64_t)v7, &qword_256820CF0);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        v12 = *(_QWORD *)(type metadata accessor for Zone() - 8);
        v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        sub_237A86594();
        v14 = *(_QWORD *)(v12 + 72);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        swift_bridgeObjectRetain();
        while ((sub_237A877DC() & 1) == 0)
        {
          v13 += v14;
          if (!--v11)
          {
            swift_bridgeObjectRelease_n();
            return swift_release();
          }
        }
        swift_bridgeObjectRelease_n();
        sub_2378EC348(a3, a1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2378EC348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  _QWORD v70[2];
  os_log_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t aBlock[6];

  v4 = sub_237A87578();
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237A87590();
  v85 = *(_QWORD *)(v6 - 8);
  v86 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_237A875A8();
  v79 = *(_QWORD *)(v93 - 8);
  v8 = MEMORY[0x24BDAC7A8](v93);
  v78 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v83 = (char *)v70 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  v92 = *(_QWORD **)(v90 - 8);
  v14 = MEMORY[0x24BDAC7A8](v90);
  v81 = (uint64_t)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v82 = (uint64_t)v70 - v16;
  v17 = sub_237A86594();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v76 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v91 = (uint64_t)v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v70 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v70 - v30;
  if (qword_25681E300 != -1)
    swift_once();
  v32 = sub_237A86678();
  __swift_project_value_buffer(v32, (uint64_t)qword_256870670);
  sub_2378BBFE0(a2, (uint64_t)v31, qword_2568207C8);
  sub_2378BBFE0(a1, (uint64_t)v25, &qword_25681E8E0);
  v33 = sub_237A86660();
  v34 = sub_237A87D58();
  v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    v36 = swift_slowAlloc();
    v72 = v35;
    v37 = v36;
    v73 = swift_slowAlloc();
    aBlock[0] = v73;
    *(_DWORD *)v37 = 136315394;
    v70[1] = v37 + 4;
    v71 = v33;
    sub_2378BBFE0((uint64_t)v31, (uint64_t)v29, qword_2568207C8);
    v75 = a1;
    v38 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    v38(v20, v29, v17);
    v39 = sub_237A87854();
    v74 = v13;
    v41 = v40;
    sub_2378BC024((uint64_t)v29, qword_2568207C8);
    v94 = sub_2378FD9C8(v39, v41, aBlock);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378BC024((uint64_t)v31, qword_2568207C8);
    *(_WORD *)(v37 + 12) = 2080;
    v42 = v91;
    sub_2378BBFE0((uint64_t)v25, v91, &qword_25681E8E0);
    v38(v20, (char *)v42, v17);
    a1 = v75;
    v43 = sub_237A87854();
    v45 = v44;
    v46 = v42;
    v13 = v74;
    sub_2378BC024(v46, &qword_25681E8E0);
    v94 = sub_2378FD9C8(v43, v45, aBlock);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378BC024((uint64_t)v25, &qword_25681E8E0);
    v33 = v71;
    _os_log_impl(&dword_237866000, v71, (os_log_type_t)v72, "Ending component %s transition on zone %s", (uint8_t *)v37, 0x16u);
    v47 = v73;
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v47, -1, -1);
    MEMORY[0x23B81FB7C](v37, -1, -1);
  }
  else
  {
    sub_2378BC024((uint64_t)v31, qword_2568207C8);
    sub_2378BC024((uint64_t)v25, &qword_25681E8E0);
  }

  v48 = v92;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v49 = aBlock[0];
  if (*(_QWORD *)(aBlock[0] + 16) && (v50 = sub_2378D3230(a1), (v51 & 1) != 0))
  {
    sub_2378D07D8(*(_QWORD *)(v49 + 56) + v48[9] * v50, (uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    v52 = 0;
  }
  else
  {
    v52 = 1;
  }
  v53 = v90;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48[7])(v13, v52, 1, v90);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v48[6])(v13, 1, v53) == 1)
    return sub_2378BC024((uint64_t)v13, &qword_2568213E8);
  v55 = (uint64_t)v13;
  v56 = v82;
  sub_2378D0858(v55, v82, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  sub_2378BFF5C(0, (unint64_t *)&qword_2568213F0);
  v90 = sub_237A87D70();
  v57 = v78;
  sub_237A8759C();
  v58 = v83;
  MEMORY[0x23B81E214](v57, 0.1);
  v92 = *(_QWORD **)(v79 + 8);
  ((void (*)(char *, uint64_t))v92)(v57, v93);
  v59 = swift_allocObject();
  swift_weakInit();
  v60 = v91;
  sub_2378BBFE0(a1, v91, &qword_25681E8E0);
  v61 = v81;
  sub_2378D07D8(v56, v81, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  v62 = (*(unsigned __int8 *)(v76 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v63 = (v77 + *((unsigned __int8 *)v48 + 80) + v62) & ~(unint64_t)*((unsigned __int8 *)v48 + 80);
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = v59;
  sub_237870370(v60, v64 + v62, &qword_25681E8E0);
  sub_2378D0858(v61, v64 + v63, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  aBlock[4] = (uint64_t)sub_23790C170;
  aBlock[5] = v64;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_237A44D44;
  aBlock[3] = (uint64_t)&block_descriptor;
  v65 = _Block_copy(aBlock);
  swift_release();
  v66 = v84;
  sub_237A87584();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23786FAA0((unint64_t *)&qword_256828FE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213F8);
  sub_23790C1F0();
  v67 = v87;
  v68 = v89;
  sub_237A87E9C();
  v69 = (void *)v90;
  MEMORY[0x23B81E9C4](v58, v66, v67, v65);
  _Block_release(v65);

  (*(void (**)(char *, uint64_t))(v88 + 8))(v67, v68);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v66, v86);
  ((void (*)(char *, uint64_t))v92)(v58, v93);
  return sub_2378DE6A4(v56, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_2378ECC14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[16];
  uint64_t v29;
  _QWORD *v30;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  v29 = a1;
  swift_bridgeObjectRetain();
  v3 = sub_2378FE080((uint64_t)sub_237907DD0, (uint64_t)v28, v2);
  swift_bridgeObjectRelease();
  v4 = sub_2378E4770(v3);
  swift_release();
  v5 = (_QWORD *)sub_2378D19D4(MEMORY[0x24BEE4AF8]);
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(v4 + 56);
  while (1)
  {
    v10 = *(v7 - 3);
    v9 = *(v7 - 2);
    v11 = *(v7 - 1);
    v12 = *v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = v5;
    v15 = sub_2378D2DB8(v10, v9);
    v16 = v5[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      break;
    v19 = v14;
    if (v5[3] >= v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v5 = v30;
        if ((v14 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2378C5D58();
        v5 = v30;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2378CAAAC(v18, isUniquelyReferenced_nonNull_native);
      v20 = sub_2378D2DB8(v10, v9);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_20;
      v15 = v20;
      v5 = v30;
      if ((v19 & 1) != 0)
      {
LABEL_3:
        v8 = (_QWORD *)(v5[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *v8 = v11;
        v8[1] = v12;
        goto LABEL_4;
      }
    }
    v5[(v15 >> 6) + 8] |= 1 << v15;
    v22 = (uint64_t *)(v5[6] + 16 * v15);
    *v22 = v10;
    v22[1] = v9;
    v23 = (_QWORD *)(v5[7] + 16 * v15);
    *v23 = v11;
    v23[1] = v12;
    v24 = v5[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_19;
    v5[2] = v26;
    swift_bridgeObjectRetain();
LABEL_4:
    v7 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

BOOL sub_2378ECE50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v41 = (char *)a3;
  v39 = type metadata accessor for Zone();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D38);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  v15 = *a2;
  v16 = a2[1];
  v17 = a2[2];
  v18 = *((_BYTE *)a2 + 24);
  sub_2378BBFE0(a1, (uint64_t)&v36 - v13, &qword_25681E8E0);
  v19 = *(int *)(v9 + 48);
  v20 = &v14[v19];
  *(_QWORD *)v20 = v15;
  *((_QWORD *)v20 + 1) = v16;
  *((_QWORD *)v20 + 2) = v17;
  v20[24] = v18;
  v21 = *(_QWORD *)&v41[*(int *)(type metadata accessor for Layout() + 24)];
  v22 = &v12[v19];
  v37 = v14;
  v41 = v12;
  sub_2378BBFE0((uint64_t)v14, (uint64_t)v12, &qword_25681E8E0);
  *(_QWORD *)v22 = v15;
  *((_QWORD *)v22 + 1) = v16;
  v23 = v17;
  *((_QWORD *)v22 + 2) = v17;
  v22[24] = v18;
  v24 = *(_QWORD *)(v21 + 16);
  if (v24)
  {
    v25 = v21 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    sub_237A86594();
    swift_retain();
    sub_2378D0664(v16, v23, v18);
    swift_retain();
    sub_2378D0664(v16, v23, v18);
    v26 = *(_QWORD *)(v40 + 72);
    v36 = v21;
    swift_bridgeObjectRetain();
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v28 = MEMORY[0x24BDCEA98];
    while (1)
    {
      sub_2378D07D8(v25, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      sub_23786FAA0((unint64_t *)&qword_256820458, v27, v28);
      if ((sub_237A877DC() & 1) != 0)
        break;
      sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v25 += v26;
      if (!--v24)
      {
        v29 = 1;
        v30 = v39;
        v31 = v40;
        v32 = v38;
        goto LABEL_8;
      }
    }
    v32 = v38;
    sub_2378D0858((uint64_t)v6, v38, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v29 = 0;
    v30 = v39;
    v31 = v40;
LABEL_8:
    v33 = (uint64_t)v37;
  }
  else
  {
    swift_retain();
    sub_2378D0664(v16, v17, v18);
    swift_retain();
    sub_2378D0664(v16, v17, v18);
    swift_bridgeObjectRetain();
    v29 = 1;
    v32 = v38;
    v30 = v39;
    v31 = v40;
    v33 = (uint64_t)v37;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, v29, 1, v30);
  swift_bridgeObjectRelease();
  sub_2378BC024(v33, &qword_2568213C0);
  sub_2378BC024((uint64_t)v41, &qword_2568213C0);
  v34 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) != 1;
  sub_2378BC024(v32, &qword_256820D38);
  return v34;
}

uint64_t sub_2378ED1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  unsigned int v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t, uint64_t, uint64_t);
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t *v154;
  uint64_t v155;
  _BYTE v156[512];
  _BYTE v157[512];
  _BYTE v158[512];
  _BYTE v159[528];
  _QWORD v160[64];
  uint64_t v161;
  _QWORD v162[64];
  uint64_t v163;
  unint64_t v164;
  _BYTE v165[512];

  v2 = MEMORY[0x24BDAC7A8](a1);
  v4 = v3;
  v117 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v5);
  v127 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v7);
  v143 = (uint64_t)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for Component();
  v140 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v126 = (uint64_t)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v10);
  v123 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v115 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v124 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v115 - v21;
  v149 = type metadata accessor for Slot();
  v152 = *(_QWORD *)(v149 - 8);
  v23 = MEMORY[0x24BDAC7A8](v149);
  v25 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v115 - v27;
  v119 = *(_QWORD *)(v4 + 16);
  if (v119)
  {
    v142 = v22;
    v128 = type metadata accessor for Zone();
    v29 = *(_QWORD *)(v128 - 8);
    v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    v31 = v4 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v120 = *(_QWORD *)(v29 + 72);
    v121 = v31;
    v130 = v25 + 80;
    v131 = v25 + 48;
    v154 = &v161;
    v115 = v4;
    swift_bridgeObjectRetain();
    v32 = 0;
    v145 = 0;
    v125 = xmmword_237A8A9F0;
    v33 = v119;
    v144 = v15;
    v132 = v25;
    v133 = v17;
    v150 = v28;
    v116 = v30;
    do
    {
      if (*(_QWORD *)(v30 + 16))
      {
        v122 = v32;
        v129 = v121 + v120 * v32;
        v34 = sub_2378D3230(v129);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(v30 + 56) + 32 * v34;
          v38 = *(_QWORD *)v36;
          v37 = *(_QWORD *)(v36 + 8);
          v39 = *(_QWORD *)(v36 + 16);
          v40 = *(unsigned __int8 *)(v36 + 24);
          swift_retain();
          sub_2378D0664(v37, v39, v40);
          v41 = v145;
          v42 = sub_2378E41F0(v117);
          v145 = v41;
          v138 = *(_QWORD *)(v42 + 16);
          if (v138)
          {
            v146 = v38;
            v135 = v40;
            v136 = v39;
            v137 = v37;
            v134 = v42 + 32;
            v43 = v129 + *(int *)(v128 + 24);
            v44 = *(_QWORD *)(v43 + 16);
            v45 = *(_QWORD *)(v43 + 24);
            v118 = v42;
            swift_bridgeObjectRetain();
            v46 = 0;
            while (1)
            {
              v147 = v46;
              sub_237870370(v134 + (v46 << 9), (uint64_t)v165, &qword_25681EF58);
              v51 = type metadata accessor for Instrument();
              *(_QWORD *)&v153 = *(_QWORD *)(v51 - 8);
              v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v153 + 56);
              v53 = (uint64_t)v142;
              v52(v142, 1, 1, v51);
              v54 = v149;
              v55 = (uint64_t)v132;
              v56 = (uint64_t)&v132[*(int *)(v149 + 36)];
              v148 = v51;
              v141 = v52;
              v52((char *)v56, 1, 1, v51);
              v57 = (_QWORD *)(v55 + *(int *)(v54 + 40));
              *v57 = 0;
              v57[1] = 0;
              v58 = *(int *)(v54 + 44);
              sub_237907D00(v165, sub_2378DD44C);
              sub_237A86588();
              v59 = (uint64_t)v15;
              sub_2378BBFE0((uint64_t)v17, (uint64_t)v15, &qword_2568202F8);
              if (qword_25681E410 != -1)
                swift_once();
              v60 = v55 + v58;
              v61 = v55;
              v62 = qword_256825198;
              sub_2378BC024((uint64_t)v17, &qword_2568202F8);
              sub_237870370(v59, v60, &qword_2568202F8);
              *(_QWORD *)(v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v62;
              *(_QWORD *)(v61 + 120) = 12620;
              *(_QWORD *)(v61 + 128) = 0xE200000000000000;
              *(_OWORD *)v61 = 0u;
              *(_OWORD *)(v61 + 16) = 0u;
              *(_QWORD *)(v61 + 32) = 0;
              *(_QWORD *)(v61 + 40) = 1;
              v63 = v131;
              *v131 = 0;
              v63[1] = 0;
              *(_QWORD *)(v61 + 64) = v44;
              *(_QWORD *)(v61 + 72) = v45;
              v64 = v130;
              *v130 = 0u;
              v64[1] = 0u;
              *((_QWORD *)v64 + 4) = 0;
              sub_23790760C(v53, v56);
              swift_bridgeObjectRelease();
              *v57 = 0;
              v57[1] = 0;
              v65 = sub_2378D0858(v61, (uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
              MEMORY[0x24BDAC7A8](v65);
              sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
              KeyPath = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](KeyPath);
              swift_getKeyPath();
              sub_237A866FC();
              swift_release();
              swift_release();
              v67 = *(_QWORD *)(v160[0] + 16);
              if (v67)
              {
                v68 = v140;
                v69 = v160[0]
                    + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
                v139 = v160[0];
                swift_bridgeObjectRetain();
                v70 = *(_QWORD *)(v68 + 72);
                v71 = v67 - 1;
                v72 = v151;
                v74 = v148;
                v73 = v149;
                v75 = (uint64_t)v124;
                while (1)
                {
                  v76 = *(_QWORD *)(v69 + *(int *)(v72 + 32));
                  if (!*(_QWORD *)(v76 + 16))
                    goto LABEL_21;
                  sub_2378BBFE0(v76+ ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80))+ *(int *)(v73 + 36), v75, &qword_25681F430);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v75, 1, v74) == 1)
                    break;
                  sub_23788F46C((const void *)(v75 + *(int *)(v74 + 20)), v159);
                  sub_2378DE6E0(v159, sub_2378DD44C);
                  sub_2378DE6A4(v75, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                  sub_23788F46C(v159, v162);
                  nullsub_1(v162);
                  sub_237870370((uint64_t)v162, (uint64_t)v158, &qword_25681EF58);
                  sub_237870370((uint64_t)v165, (uint64_t)v160, &qword_25681EF58);
                  if (sub_2379076BC((uint64_t)v160) == 1)
                  {
                    sub_23788F46C(v158, v157);
                    sub_2378DE6E0(v159, sub_2378DD44C);
                    sub_2378DE6E0(v157, sub_2378DE7AC);
                    sub_237870370((uint64_t)v162, (uint64_t)&v163, &qword_25681EF58);
                    goto LABEL_16;
                  }
                  sub_237870370((uint64_t)v165, (uint64_t)v156, &qword_25681EF58);
                  sub_23788F46C(v156, &v155);
                  sub_2378DE6E0(v159, sub_2378DD44C);
                  _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v158);
                  v78 = v77;
                  sub_23788F46C(v158, v157);
                  sub_2378DE6E0(v157, sub_2378DE7AC);
                  sub_2378DE6E0(v159, sub_2378DE7AC);
                  if ((v78 & 1) != 0)
                  {
LABEL_9:
                    swift_bridgeObjectRelease_n();
                    v15 = v144;
                    v17 = v133;
                    v47 = (uint64_t)v150;
                    goto LABEL_10;
                  }
                  v72 = v151;
                  if (!v71)
                  {
LABEL_26:
                    swift_bridgeObjectRelease_n();
                    goto LABEL_28;
                  }
LABEL_17:
                  v69 += v70;
                  --v71;
                }
                sub_2378BC024(v75, &qword_25681F430);
LABEL_21:
                sub_237870370((uint64_t)v165, (uint64_t)v160, &qword_25681EF58);
                if (sub_2379076BC((uint64_t)v160) == 1)
                  goto LABEL_9;
                sub_23788F2D4((uint64_t)v162);
                sub_237870370((uint64_t)v162, (uint64_t)&v163, &qword_25681EF58);
LABEL_16:
                sub_237870370((uint64_t)&v163, (uint64_t)v160, &qword_25681EF58);
                sub_237870370((uint64_t)v165, (uint64_t)v154, &qword_25681EF58);
                sub_237907D00(v165, sub_2378DD44C);
                sub_2379076D4(v160);
                if (!v71)
                  goto LABEL_26;
                goto LABEL_17;
              }
              swift_bridgeObjectRelease();
              v74 = v148;
              v73 = v149;
LABEL_28:
              v79 = v129 + *(int *)(v128 + 32);
              v80 = *(unsigned __int8 *)(v79 + 16);
              v81 = v144;
              v47 = (uint64_t)v150;
              if (v80 < 2)
                break;
              sub_237870370((uint64_t)v165, (uint64_t)&v163, &qword_25681EF58);
              v85 = sub_2379076BC((uint64_t)&v163);
              v84 = v145;
              if (v85 == 1)
                goto LABEL_43;
              sub_23788F46C(&v163, v160);
LABEL_42:
              sub_23788F46C(v160, v162);
              sub_237870370((uint64_t)v165, (uint64_t)&v163, &qword_25681EF58);
              sub_2378DE6E0(&v163, sub_2378DD44C);
              v94 = (uint64_t)v123;
              sub_237A86588();
              v95 = sub_237A871F4();
              v96 = (uint64_t)v142;
              Instrument.init(id:kind:backgroundColor:shadowID:)(v94, v162, v95, 0, 0, (uint64_t)v142);
              v141((char *)v96, 0, 1, v74);
              sub_23790760C(v96, v47 + *(int *)(v73 + 36));
LABEL_43:
              sub_237A86588();
              __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
              v97 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
              v98 = swift_allocObject();
              *(_OWORD *)(v98 + 16) = v125;
              sub_2378D07D8(v47, v98 + v97, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
              v99 = sub_2378E40FC(v98);
              v145 = v84;
              v100 = *(_QWORD *)(v99 + 16);
              v101 = sub_237A87BF0();
              v162[0] = v101;
              if (v100)
              {
                v102 = (uint64_t *)(v99 + 40);
                do
                {
                  v103 = *(v102 - 1);
                  v104 = *v102;
                  swift_bridgeObjectRetain();
                  sub_2378FE1F0(&v163, v103, v104);
                  swift_bridgeObjectRelease();
                  v102 += 2;
                  --v100;
                }
                while (v100);
                v101 = v162[0];
                v81 = v144;
                v47 = (uint64_t)v150;
              }
              v105 = *(_QWORD *)(v101 + 16);
              swift_bridgeObjectRelease();
              v106 = *(_QWORD *)(v99 + 16);
              swift_bridgeObjectRelease();
              if (v105 != v106)
              {
                v163 = 0;
                v164 = 0xE000000000000000;
                sub_237A87F44();
                swift_bridgeObjectRelease();
                v163 = 0xD000000000000023;
                v164 = 0x8000000237AB0350;
                sub_2378E40FC(v98);
                MEMORY[0x23B81E700]();
                sub_237A878E4();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                result = sub_237A880AC();
                __break(1u);
                return result;
              }
              v15 = v81;
              v107 = v126;
              sub_237870370(v143, v126, qword_2568207C8);
              v108 = (int *)v151;
              *(_BYTE *)(v107 + *(int *)(v151 + 20)) = 0;
              v109 = (_QWORD *)(v107 + v108[6]);
              *v109 = 0x746E65746E6F43;
              v109[1] = 0xE700000000000000;
              v110 = (_QWORD *)(v107 + v108[7]);
              *v110 = v44;
              v110[1] = v45;
              *(_QWORD *)(v107 + v108[8]) = v98;
              v111 = (uint64_t)v127;
              (*(void (**)(char *, uint64_t, uint64_t))(v140 + 56))(v127, 1, 1);
              sub_2378F8484(v107, v111);
              sub_2378BC024(v111, &qword_2568207A8);
              sub_2378DE6A4(v107, (uint64_t (*)(_QWORD))type metadata accessor for Component);
              v17 = v133;
LABEL_10:
              v46 = v147 + 1;
              sub_2378DE6A4(v47, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
              sub_237907D00(v165, sub_2378DE7AC);
              v48 = v137;
              v49 = v136;
              v50 = v135;
              if (v46 == v138)
              {
                swift_release();
                swift_bridgeObjectRelease_n();
                v112 = v48;
                v113 = v49;
                v114 = v50;
                goto LABEL_53;
              }
            }
            v82 = *(_QWORD *)v79;
            v83 = *(_QWORD *)(v79 + 8);
            sub_237870370((uint64_t)v165, (uint64_t)&v163, &qword_25681EF58);
            if (sub_2379076BC((uint64_t)&v163) == 1)
            {
              v84 = v145;
              goto LABEL_43;
            }
            sub_23788F46C(&v163, v162);
            if (sub_2378A1BDC((uint64_t)v162) != 6)
              goto LABEL_38;
            v86 = (uint64_t *)sub_2378A1BF8((uint64_t)v162);
            if (v82)
            {
              if (*(_QWORD *)(v82 + 16))
              {
                v87 = *v86;
                v88 = v86[1];
                sub_2378D0664(v82, v83, v80);
                swift_bridgeObjectRetain();
                v89 = sub_2378D2DB8(v87, v88);
                if ((v90 & 1) != 0)
                {
                  v91 = *(_QWORD *)(v82 + 56) + 32 * v89;
                  v153 = *(_OWORD *)v91;
                  v92 = *(_QWORD *)(v91 + 16);
                  v93 = *(_QWORD *)(v91 + 24);
                  sub_2378724B0(v82, v83, v80);
                  swift_bridgeObjectRelease();
                  *(_OWORD *)(v47 + 80) = v153;
                  *(_QWORD *)(v47 + 96) = v92;
                  *(_QWORD *)(v47 + 104) = v93;
                }
                else
                {
                  sub_2378724B0(v82, v83, v80);
                  swift_bridgeObjectRelease();
                }
                sub_237870370((uint64_t)v165, (uint64_t)v159, &qword_25681EF58);
                sub_23788F46C(v159, v160);
                v73 = v149;
                goto LABEL_41;
              }
LABEL_38:
              sub_237870370((uint64_t)v165, (uint64_t)v159, &qword_25681EF58);
            }
            else
            {
              sub_237870370((uint64_t)v165, (uint64_t)v159, &qword_25681EF58);
              sub_2378D0664(0, v83, v80);
            }
            sub_23788F46C(v159, v160);
LABEL_41:
            v84 = v145;
            goto LABEL_42;
          }
          swift_release();
          swift_bridgeObjectRelease();
          v112 = v37;
          v113 = v39;
          v114 = v40;
LABEL_53:
          sub_2378724B0(v112, v113, v114);
          v33 = v119;
          v30 = v116;
        }
        v32 = v122;
      }
      ++v32;
    }
    while (v32 != v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2378EDFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[9];

  v6[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v4);
  v6[7] = (char *)v6 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __asm { BR              X10 }
}

uint64_t sub_2378EE0C0()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v0[33] = v5;
  v0[34] = v1;
  v0[35] = v6;
  v0[36] = v3;
  sub_23788F4A8(v0 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23788F46C(v0 + 33, v0 + 97);
  sub_23788F46C(v0 + 97, v0 + 33);
  v7 = v0[1];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v0[2] = v4;
    v9 = *(_QWORD *)(type metadata accessor for Zone() - 8);
    v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    *v0 = v10;
    v11 = v7 + v10;
    v12 = *(_QWORD *)(v0[9] + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    v13 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    v14 = 0;
    v0[5] = v11;
    v0[6] = v8;
    v0[3] = v13;
    v0[4] = v12;
    do
    {
      if (*(_QWORD *)(v12 + 16))
      {
        v15 = sub_2378D3230(v11 + v14 * v13);
        if ((v16 & 1) != 0)
        {
          v0[11] = v2;
          v17 = *(_QWORD *)(v12 + 56) + 32 * v15;
          v18 = *(_QWORD *)(v17 + 8);
          v19 = *(_QWORD *)(v17 + 16);
          v20 = *(_BYTE *)(v17 + 24);
          swift_retain();
          sub_2378D0664(v18, v19, v20);
          sub_2378724B0(v18, v19, v20);
          swift_getKeyPath();
          swift_getKeyPath();
          v21 = v0[7];
          sub_237A866FC();
          swift_release();
          swift_release();
          v22 = type metadata accessor for Layout();
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22);
          v0[10] = v14;
          if (v23)
          {
            sub_2378BC024(v21, &qword_256820CF0);
            LODWORD(v24) = 0;
          }
          else
          {
            v36 = *(_QWORD *)(v21 + *(int *)(v22 + 24));
            swift_bridgeObjectRetain();
            sub_2378BC024(v21, &qword_256820CF0);
            v24 = *(_QWORD *)(v36 + 16);
            if (v24)
            {
              v37 = v36 + *v0;
              sub_237A86594();
              sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              swift_bridgeObjectRetain();
              while ((sub_237A877DC() & 1) == 0)
              {
                v37 += v13;
                if (!--v24)
                {
                  swift_bridgeObjectRelease_n();
                  v14 = v0[10];
                  goto LABEL_10;
                }
              }
              swift_bridgeObjectRelease_n();
              LODWORD(v24) = 1;
              v14 = v0[10];
            }
            else
            {
              swift_bridgeObjectRelease();
              v14 = v0[10];
            }
          }
LABEL_10:
          v2 = v0[11];
          swift_beginAccess();
          sub_2378DE6E0(v0 + 97, sub_2378DD44C);
          v25 = swift_bridgeObjectRetain();
          v26 = sub_237906510(v25, v0 + 33);
          sub_2378DE6E0(v0 + 97, sub_2378DE7AC);
          swift_bridgeObjectRelease();
          v27 = *(_QWORD *)(v26 + 16);
          if (v27)
          {
            v0[11] = v2;
            v28 = type metadata accessor for Component();
            v29 = *(_QWORD *)(v28 - 8);
            v30 = *(unsigned __int8 *)(v29 + 80);
            v0[8] = v26;
            v31 = v26 + ((v30 + 32) & ~v30);
            v32 = v24;
            v33 = *(_QWORD *)(v29 + 72);
            v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
            v35 = v0[2];
            do
            {
              v34(v35, 1, 1, v28);
              sub_2378FA2B0(v31, v35, v32);
              sub_2378BC024(v35, &qword_2568207A8);
              v31 += v33;
              --v27;
            }
            while (v27);
            swift_bridgeObjectRelease();
            v14 = v0[10];
            v2 = v0[11];
            v11 = v0[5];
            v8 = v0[6];
            v13 = v0[3];
            v12 = v0[4];
          }
          else
          {
            swift_bridgeObjectRelease();
            v11 = v0[5];
            v8 = v0[6];
            v13 = v0[3];
            v12 = v0[4];
          }
          swift_release();
        }
      }
      ++v14;
    }
    while (v14 != v8);
    swift_bridgeObjectRelease();
  }
  return sub_2378DE6E0(v0 + 97, sub_2378DE7AC);
}

uint64_t sub_2378EE59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D38);
  MEMORY[0x24BDAC7A8](v2);
  v38 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Zone();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (uint64_t)&v35 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Layout();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  v36 = v1;
  sub_237A866FC();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_2378BC024((uint64_t)v12, &qword_256820CF0);
  sub_2378D0858((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  v18 = *(_QWORD *)&v16[*(int *)(v13 + 24)];
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2378D07D8(v20, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v22 = &v8[*(int *)(v4 + 32)];
      if (v22[16] != 2 || *(_OWORD *)v22 != 0)
        break;
      sub_2378DE6A4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v20 += v21;
      if (!--v19)
        goto LABEL_11;
    }
    v23 = v38;
    sub_2378D0858((uint64_t)v8, v38, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v24 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    v24 = 1;
    v23 = v38;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v23, v24, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v23, 1, v4) == 1)
  {
    sub_2378DE6A4((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    return sub_2378BC024(v23, &qword_256820D38);
  }
  else
  {
    v25 = (uint64_t)v16;
    v26 = v23;
    v27 = v37;
    sub_2378D0858(v26, v37, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v28 = *(_QWORD *)(v36 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    if (*(_QWORD *)(v28 + 16))
    {
      v29 = sub_2378D3230(v27);
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(v28 + 56) + 32 * v29;
        v32 = *(_QWORD *)(v31 + 8);
        v33 = *(_QWORD *)(v31 + 16);
        v34 = *(_BYTE *)(v31 + 24);
        swift_retain();
        sub_2378D0664(v32, v33, v34);
        sub_2378724B0(v32, v33, v34);
        sub_2378FD348();
        swift_release();
      }
    }
    sub_2378DE6A4(v27, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    return sub_2378DE6A4(v25, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  }
}

uint64_t sub_2378EE924(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v65 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (uint64_t)&v58 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v58 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v58 - v16;
  if ((*a2 & 1) != 0)
  {
    sub_2378BBFE0(a1, (uint64_t)v12, &qword_256820C60);
    v18 = v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent;
    swift_beginAccess();
    v66 = v18;
    sub_237907DEC((uint64_t)v12, v18);
    swift_endAccess();
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
    v20 = *(_QWORD *)(v19 + 16);
    if (!v20)
    {
      v17 = v12;
      return sub_2378BC024((uint64_t)v17, &qword_256820C60);
    }
    v59 = v12;
    v21 = type metadata accessor for Zone();
    v22 = *(_QWORD *)(v21 - 8);
    v60 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v61 = v19;
    v23 = v19 + v60;
    v24 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    v25 = 0;
    v62 = v15;
    v63 = v2;
    v64 = v23;
    while (1)
    {
      v26 = v23 + v25 * v24;
      v27 = *(unsigned __int8 *)(v26 + *(int *)(v21 + 40));
      if (v27 != 2)
      {
        if ((v27 & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_10:
          v29 = v21;
          v30 = v20;
          swift_getKeyPath();
          swift_getKeyPath();
          v31 = v65;
          sub_237A866FC();
          swift_release();
          swift_release();
          v32 = type metadata accessor for Layout();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
          {
            sub_2378BC024(v31, &qword_256820CF0);
            LODWORD(v33) = 0;
          }
          else
          {
            v34 = *(int *)(v32 + 24);
            v35 = v31;
            v36 = *(_QWORD *)(v31 + v34);
            swift_bridgeObjectRetain();
            sub_2378BC024(v35, &qword_256820CF0);
            v33 = *(_QWORD *)(v36 + 16);
            if (v33)
            {
              v37 = v36 + v60;
              sub_237A86594();
              sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              swift_bridgeObjectRetain();
              while ((sub_237A877DC() & 1) == 0)
              {
                v37 += v24;
                if (!--v33)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_19;
                }
              }
              swift_bridgeObjectRelease_n();
              LODWORD(v33) = 1;
LABEL_19:
              v15 = v62;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          v20 = v30;
          v21 = v29;
          v23 = v64;
          sub_2378BBFE0(v66, (uint64_t)v15, &qword_256820C60);
          sub_2378EEF94((uint64_t)v15, v26, v33);
          sub_2378BC024((uint64_t)v15, &qword_256820C60);
          goto LABEL_4;
        }
        v28 = sub_237A8840C();
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
          goto LABEL_10;
      }
LABEL_4:
      if (++v25 == v20)
        goto LABEL_39;
    }
  }
  sub_2378BBFE0(a1, (uint64_t)&v58 - v16, &qword_256820C60);
  v38 = v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
  swift_beginAccess();
  v65 = v38;
  sub_237907DEC((uint64_t)v17, v38);
  swift_endAccess();
  v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
  v40 = *(_QWORD *)(v39 + 16);
  if (v40)
  {
    v59 = v17;
    v41 = type metadata accessor for Zone();
    v42 = *(_QWORD *)(v41 - 8);
    v60 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v61 = v39;
    v43 = v39 + v60;
    v44 = *(_QWORD *)(v42 + 72);
    swift_bridgeObjectRetain();
    v45 = 0;
    v62 = v15;
    v63 = v2;
    v64 = v43;
    while (1)
    {
      v46 = v43 + v45 * v44;
      v47 = *(unsigned __int8 *)(v46 + *(int *)(v41 + 40));
      if (v47 != 2)
      {
        if ((v47 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_28:
          v49 = v41;
          swift_getKeyPath();
          swift_getKeyPath();
          v50 = v66;
          sub_237A866FC();
          swift_release();
          swift_release();
          v51 = type metadata accessor for Layout();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51))
          {
            sub_2378BC024(v50, &qword_256820CF0);
            LODWORD(v52) = 0;
          }
          else
          {
            v53 = *(int *)(v51 + 24);
            v54 = v50;
            v55 = *(_QWORD *)(v50 + v53);
            swift_bridgeObjectRetain();
            sub_2378BC024(v54, &qword_256820CF0);
            v52 = *(_QWORD *)(v55 + 16);
            if (v52)
            {
              v56 = v55 + v60;
              sub_237A86594();
              sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              swift_bridgeObjectRetain();
              while ((sub_237A877DC() & 1) == 0)
              {
                v56 += v44;
                if (!--v52)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_37;
                }
              }
              swift_bridgeObjectRelease_n();
              LODWORD(v52) = 1;
LABEL_37:
              v15 = v62;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          v41 = v49;
          v43 = v64;
          sub_2378BBFE0(v65, (uint64_t)v15, &qword_256820C60);
          sub_2378EEF94((uint64_t)v15, v46, v52);
          sub_2378BC024((uint64_t)v15, &qword_256820C60);
          goto LABEL_23;
        }
        v48 = sub_237A8840C();
        swift_bridgeObjectRelease();
        if ((v48 & 1) != 0)
          goto LABEL_28;
      }
LABEL_23:
      if (++v45 == v40)
      {
LABEL_39:
        v17 = v59;
        swift_bridgeObjectRelease();
        return sub_2378BC024((uint64_t)v17, &qword_256820C60);
      }
    }
  }
  return sub_2378BC024((uint64_t)v17, &qword_256820C60);
}

uint64_t sub_2378EEF94(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)();
  void (*v28)(uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;

  v99 = a2;
  v98 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821330);
  MEMORY[0x24BDAC7A8](v4);
  v96 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for PopoverModel(0);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v85 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Zone();
  v88 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v87 = v8;
  v86 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Component();
  v94 = *(_QWORD *)(v92 - 8);
  v11 = *(_QWORD *)(v94 + 64);
  v12 = MEMORY[0x24BDAC7A8](v92);
  v89 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v63 - v13;
  v14 = type metadata accessor for RequestContentModel();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v63 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v97 = (uint64_t)&v63 - v26;
  sub_2378BBFE0(a1, (uint64_t)&v63 - v26, &qword_256820C60);
  sub_2378BBFE0(a1, (uint64_t)v25, &qword_256820C60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v25, 1, v14) == 1)
  {
    sub_2378BC024((uint64_t)v25, &qword_256820C60);
    v27 = 0;
    v28 = 0;
    v29 = v99;
    v30 = v98;
LABEL_3:
    v31 = v97;
    goto LABEL_9;
  }
  v81 = v19;
  v82 = v20;
  v32 = (uint64_t)v95;
  v33 = (uint64_t)v93;
  v80 = v22;
  v83 = v15;
  v34 = v94;
  v84 = v11;
  v79 = a1;
  v35 = (uint64_t)v96;
  sub_2378D07D8((uint64_t)v25, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2378DE6A4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
LABEL_8:
    v30 = v98;
    v31 = v97;
    sub_2378DE6A4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v27 = 0;
    v28 = 0;
    v29 = v99;
    goto LABEL_9;
  }
  v36 = *((_QWORD *)v17 + 1);
  v69 = *((_QWORD *)v17 + 3);
  v70 = *((_QWORD *)v17 + 4);
  v74 = *((_QWORD *)v17 + 5);
  v75 = *((_QWORD *)v17 + 6);
  v76 = *((_QWORD *)v17 + 7);
  v72 = *((_QWORD *)v17 + 8);
  v77 = *((_QWORD *)v17 + 9);
  v73 = *((_QWORD *)v17 + 10);
  v37 = *((_QWORD *)v17 + 12);
  v78 = *((_QWORD *)v17 + 11);
  v71 = *((_QWORD *)v17 + 13);
  if ((v17[112] & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_2378A2C04(v69);
    sub_2378902DC(v74, v75, v76, v72, v77, v73, v78);
    goto LABEL_8;
  }
  v66 = v14;
  v39 = *(_QWORD *)v17;
  v40 = v17[17];
  v41 = v17[16];
  v42 = v36;
  sub_2378DE6A4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  v64 = v39;
  v100 = v39;
  v101 = v42;
  v67 = v42;
  v102 = v41;
  v65 = v40;
  v103 = v40;
  v104 = v69;
  v105 = v70;
  v106 = v74;
  v107 = v75;
  v108 = v76;
  v109 = v72;
  v110 = v77;
  v111 = v73;
  v112 = v78;
  v113 = v37;
  v68 = v37;
  v114 = v71;
  v115 = 0;
  v29 = v99;
  sub_2378F3B4C(v99, (uint64_t)&v100, v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v92) != 1)
  {
    swift_bridgeObjectRelease();
    sub_2378A2C04(v69);
    sub_2378902DC(v74, v75, v76, v72, v77, v73, v78);
    v48 = v33;
    sub_2378D0858(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v49 = v34;
    v50 = swift_allocObject();
    swift_weakInit();
    v51 = (uint64_t)v80;
    sub_2378BBFE0(v79, (uint64_t)v80, &qword_256820C60);
    v52 = v86;
    sub_2378D07D8(v99, v86, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v53 = v89;
    sub_2378D0858(v48, v89, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v54 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    v55 = (v82 + *(unsigned __int8 *)(v88 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    v56 = (v87 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    v57 = (*(unsigned __int8 *)(v49 + 80) + v56 + 8) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v58 = v57 + v84;
    v28 = (void (*)(uint64_t))swift_allocObject();
    sub_237870370(v51, (uint64_t)v28 + v54, &qword_256820C60);
    v59 = v52;
    v29 = v99;
    sub_2378D0858(v59, (uint64_t)v28 + v55, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    *(_QWORD *)((char *)v28 + v56) = v50;
    sub_2378D0858(v53, (uint64_t)v28 + v57, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v30 = v98;
    *((_BYTE *)v28 + v58) = v98 & 1;
    v27 = sub_23790BD64;
    goto LABEL_3;
  }
  sub_2378BC024(v32, &qword_2568207A8);
  v100 = v64;
  v101 = v67;
  v102 = v41;
  v103 = v65;
  v43 = v69;
  v104 = v69;
  v105 = v70;
  v106 = v74;
  v107 = v75;
  v44 = v72;
  v108 = v76;
  v109 = v72;
  v45 = v73;
  v110 = v77;
  v111 = v73;
  v112 = v78;
  v113 = v68;
  v114 = v71;
  v115 = 0;
  sub_2378F40A4((uint64_t)&v100);
  v31 = v97;
  sub_2378BC024(v97, &qword_256820C60);
  swift_bridgeObjectRelease();
  sub_2378A2C04(v43);
  sub_2378902DC(v74, v75, v76, v44, v77, v45, v78);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v35, 1, v91);
  v30 = v98;
  v47 = v83;
  if (v46 == 1)
  {
    sub_2378BC024(v35, &qword_256821330);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v31, 1, 1, v66);
  }
  else
  {
    v60 = v35;
    v61 = v85;
    sub_2378D0858(v60, v85, type metadata accessor for PopoverModel);
    sub_2378D0858(v61, v31, type metadata accessor for PopoverModel);
    v62 = v66;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v31, 0, 1, v62);
  }
  v27 = 0;
  v28 = 0;
LABEL_9:
  sub_2378F1B10(v31, v29, (void (*)(uint64_t))v27, v28, v30 & 1);
  sub_2378A2C04((uint64_t)v27);
  return sub_2378BC024(v31, &qword_256820C60);
}

uint64_t sub_2378EF904(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  os_signpost_id_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  LODWORD(v5) = a5;
  v46 = a4;
  v9 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_237A86624();
  v50 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v42 - v23;
  v48 = a3 + 16;
  if (qword_25681E0F0 != -1)
    swift_once();
  v25 = sub_237A86654();
  __swift_project_value_buffer(v25, (uint64_t)qword_2568705E8);
  sub_2378BBFE0(a1, (uint64_t)v24, &qword_256820C60);
  sub_2378D07D8((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  sub_237A86618();
  v26 = sub_237A8663C();
  v45 = sub_237A87D88();
  if ((sub_237A87DF4() & 1) == 0)
  {

    sub_2378DE6A4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    sub_2378BC024((uint64_t)v24, &qword_256820C60);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v11);
    goto LABEL_16;
  }
  v43 = a2;
  v44 = v5;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v15, v11);
  v5 = swift_slowAlloc();
  v42 = swift_slowAlloc();
  v51 = v42;
  *(_DWORD *)v5 = 136315394;
  sub_2378BBFE0((uint64_t)v24, (uint64_t)v22, &qword_256820C60);
  v27 = type metadata accessor for RequestContentModel();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v22, 1, v27) == 1)
  {
    sub_2378BC024((uint64_t)v22, &qword_256820C60);
LABEL_8:
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v31 = 0x8000000237AB0330;
    v29 = 0xD000000000000015;
    goto LABEL_9;
  }
  RequestContentModel.displayName.getter();
  v29 = v28;
  v31 = v30;
  sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  if (!v31)
    goto LABEL_8;
LABEL_9:
  v52 = sub_2378FD9C8(v29, v31, &v51);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  sub_2378BC024((uint64_t)v24, &qword_256820C60);
  *(_WORD *)(v5 + 12) = 2080;
  v32 = v18[*(int *)(v16 + 40)];
  if (v32 == 2)
  {
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v33 = 0x8000000237AB0330;
    v34 = 0xD000000000000015;
  }
  else
  {
    if ((v32 & 1) != 0)
      v34 = 0x32656E6F7ALL;
    else
      v34 = 0x31656E6F7ALL;
    v33 = 0xE500000000000000;
  }
  v52 = sub_2378FD9C8(v34, v33, &v51);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  sub_2378DE6A4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v35 = v49;
  v36 = sub_237A8660C();
  _os_signpost_emit_with_name_impl(&dword_237866000, v26, (os_signpost_type_t)v45, v36, "RequestContent transition - rotation: ", "newContent: %s, ZoneRegion: %s", (uint8_t *)v5, 0x16u);
  v37 = v42;
  swift_arrayDestroy();
  MEMORY[0x23B81FB7C](v37, -1, -1);
  MEMORY[0x23B81FB7C](v5, -1, -1);

  v38 = *(void (**)(char *, uint64_t))(v50 + 8);
  v38(v15, v11);
  v38(v35, v11);
  LOBYTE(v5) = v44;
  a2 = v43;
LABEL_16:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v40 = v47;
    sub_2378BBFE0(v46, v47, qword_2568207C8);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 2, v41);
    ClusterTransitionCoordinator.rotateCarousel(zone:direction:dismissRequestContent:animated:)(a2, v40, 0, v5 & 1);
    swift_release();
    return sub_2378DE6A4(v40, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  }
  return result;
}

uint64_t ClusterTransitionCoordinator.rotateCarousel(zone:direction:dismissRequestContent:animated:)(NSObject *a1, uint64_t a2, int a3, int a4)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(_BYTE *, uint64_t, uint64_t);
  int v79;
  void (*v80)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t *v81;
  uint64_t v82;
  uint64_t v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t KeyPath;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  NSObject *v101;
  uint64_t v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  NSObject *v128;
  int v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _BYTE *v140;
  char *v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  _BYTE *v152;
  uint64_t v153;
  _BYTE *v154;
  os_signpost_id_t v155;
  os_log_t v156;
  uint64_t v157;
  void (*v158)(_BYTE *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  _BYTE *v172;
  _BYTE v173[40];
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  _BYTE *v177;
  _BYTE *v178;
  int v179;
  _BYTE *v180;
  _BYTE *v181;
  _BYTE *v182;
  _BYTE *v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  int v187;
  _BYTE *v188;
  _BYTE *v189;
  _BYTE *v190;
  uint64_t v191;
  _BYTE *v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  _BYTE *v201;
  _BYTE *v202;
  _BYTE *v203;
  _BYTE *v204;
  _BYTE *v205;
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  os_log_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;

  v187 = a4;
  v179 = a3;
  v209 = a2;
  v210 = a1;
  v5 = sub_237A86624();
  v195 = *(_QWORD *)(v5 - 8);
  v196 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v190 = &v173[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v194 = &v173[-v8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v9);
  v205 = &v173[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for RequestContentModel();
  v198 = *(_QWORD *)(v11 - 8);
  v199 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v178 = &v173[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v180 = &v173[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v181 = &v173[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v183 = &v173[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v182 = &v173[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v188 = &v173[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v193 = &v173[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v192 = &v173[-v26];
  v208 = sub_237A86594();
  v191 = *(_QWORD *)(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v201 = &v173[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v28);
  v200 = &v173[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v185 = &v173[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v31);
  v34 = &v173[-v33];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v184 = &v173[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = MEMORY[0x24BDAC7A8](v36);
  v186 = &v173[-v39];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = &v173[-v41];
  MEMORY[0x24BDAC7A8](v40);
  v44 = &v173[-v43];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v45);
  v47 = &v173[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v48 = type metadata accessor for Component();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v202 = &v173[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = MEMORY[0x24BDAC7A8](v50);
  v203 = &v173[-v53];
  v54 = MEMORY[0x24BDAC7A8](v52);
  v189 = &v173[-v55];
  v56 = MEMORY[0x24BDAC7A8](v54);
  v204 = &v173[-v57];
  v58 = MEMORY[0x24BDAC7A8](v56);
  v197 = &v173[-v59];
  v60 = MEMORY[0x24BDAC7A8](v58);
  v206 = &v173[-v61];
  v62 = MEMORY[0x24BDAC7A8](v60);
  v207 = &v173[-v63];
  MEMORY[0x24BDAC7A8](v62);
  v65 = &v173[-v64];
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v66);
  v68 = &v173[-((v67 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2378BBFE0((uint64_t)v210, (uint64_t)v68, &qword_25681E8E0);
  v210 = v4;
  v69 = *(uint64_t *)((char *)&v4->isa + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (!*(_QWORD *)(v69 + 16) || (v70 = sub_2378D3230((uint64_t)v68), (v71 & 1) == 0))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v47, 1, 1, v48);
LABEL_7:
    sub_2378BC024((uint64_t)v68, &qword_25681E8E0);
    v81 = &qword_2568207A8;
    v82 = (uint64_t)v47;
    return sub_2378BC024(v82, v81);
  }
  v177 = v65;
  v176 = v68;
  v175 = v69;
  v72 = *(_QWORD *)(v69 + 56) + 32 * v70;
  v73 = *(_QWORD *)(v72 + 8);
  v74 = *(_QWORD *)(v72 + 16);
  v75 = *(_BYTE *)(v72 + 24);
  swift_retain();
  sub_2378D0664(v73, v74, v75);
  sub_2378724B0(v73, v74, v75);
  sub_2378D07D8(v209, (uint64_t)v34, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v77 = *(_QWORD *)(v76 - 8);
  v78 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v77 + 48);
  v79 = v78(v34, 2, v76);
  v174 = v76;
  if (v79)
  {
    v80 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    if (v79 == 1)
      v80(v42, 1, 2, v76);
    else
      v80(v42, 2, 2, v76);
  }
  else
  {
    sub_237870370((uint64_t)v34, (uint64_t)v42, qword_2568207C8);
    v80 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    v80(v42, 0, 2, v76);
  }
  v84 = (uint64_t)v177;
  sub_237870370((uint64_t)v42, (uint64_t)v44, &qword_256820D40);
  sub_2378F7B88((uint64_t)v44, (uint64_t)v47);
  swift_release();
  sub_2378BC024((uint64_t)v44, &qword_256820D40);
  v85 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
  v68 = v176;
  if (v85 == 1)
    goto LABEL_7;
  sub_2378D0858((uint64_t)v47, v84, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v86 = v175;
  if (*(_QWORD *)(v175 + 16) && (v87 = sub_2378D3230((uint64_t)v68), (v88 & 1) != 0))
  {
    v89 = *(_QWORD *)(v86 + 56) + 32 * v87;
    v90 = *(_QWORD *)(v89 + 8);
    v91 = *(_QWORD *)(v89 + 16);
    v92 = *(_BYTE *)(v89 + 24);
    swift_retain();
    sub_2378D0664(v90, v91, v92);
    v93 = sub_2378724B0(v90, v91, v92);
    MEMORY[0x24BDAC7A8](v93);
    sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    v95 = (uint64_t)v206;
    sub_237A866FC();
    v96 = (uint64_t)v177;
    swift_release();
    swift_release();
    swift_release();
    v97 = v207;
    sub_2378D0858(v95, (uint64_t)v207, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    if ((sub_237A877DC() & 1) != 0)
    {
      sub_2378DE6A4((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v98 = v96;
LABEL_48:
      sub_2378DE6A4(v98, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v81 = &qword_25681E8E0;
      v82 = (uint64_t)v176;
      return sub_2378BC024(v82, v81);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    if (v211 == 1)
    {
      if (qword_25681E300 != -1)
        swift_once();
      v99 = sub_237A86678();
      __swift_project_value_buffer(v99, (uint64_t)qword_256870670);
      v100 = v197;
      sub_2378D07D8(v96, (uint64_t)v197, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v101 = sub_237A86660();
      v102 = v96;
      v103 = sub_237A87D40();
      if (!os_log_type_enabled(v101, v103))
      {

        sub_2378DE6A4((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_2378DE6A4((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v98 = v102;
        goto LABEL_48;
      }
      v104 = swift_slowAlloc();
      v105 = swift_slowAlloc();
      *(_DWORD *)v104 = 136315138;
      v210 = (os_log_t)(v104 + 4);
      v211 = v105;
      v106 = v200;
      sub_2378BBFE0((uint64_t)v100, (uint64_t)v200, qword_2568207C8);
      v107 = (uint64_t)v100;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v191 + 16))(v201, v106, v208);
      v108 = sub_237A87854();
      v110 = v109;
      sub_2378BC024((uint64_t)v106, qword_2568207C8);
      v213 = sub_2378FD9C8(v108, v110, &v211);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378DE6A4(v107, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      _os_log_impl(&dword_237866000, v101, v103, "In an active layout transition. Preventing component transition %s", (uint8_t *)v104, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v105, -1, -1);
      MEMORY[0x23B81FB7C](v104, -1, -1);

      v172 = v207;
LABEL_47:
      sub_2378DE6A4((uint64_t)v172, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v98 = (uint64_t)v177;
      goto LABEL_48;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v111 = v211;
    if (*(_QWORD *)(v211 + 16))
    {
      v112 = sub_2378D3230((uint64_t)v176);
      v113 = v202;
      v114 = v203;
      v116 = v204;
      v115 = v205;
      v117 = v198;
      if ((v118 & 1) != 0)
      {
        sub_2378D07D8(*(_QWORD *)(v111 + 56) + *(_QWORD *)(v198 + 72) * v112, (uint64_t)v205, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        v119 = 0;
      }
      else
      {
        v119 = 1;
      }
    }
    else
    {
      v119 = 1;
      v113 = v202;
      v114 = v203;
      v116 = v204;
      v115 = v205;
      v117 = v198;
    }
    v120 = v115;
    v121 = v199;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v120, v119, 1, v199);
    v122 = v121;
    v123 = v205;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v117 + 48))(v123, 1, v122) != 1)
    {
      v140 = v192;
      sub_2378D0858((uint64_t)v123, (uint64_t)v192, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      sub_2378D07D8((uint64_t)v140, (uint64_t)v193, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      v141 = (char *)&loc_2378F0C70 + 4 * word_237A91FFC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_2378BC024((uint64_t)v123, &qword_256820C60);
    v124 = (uint64_t)v113;
    v125 = v194;
    if (qword_25681E0F0 != -1)
      swift_once();
    v126 = sub_237A86654();
    __swift_project_value_buffer(v126, (uint64_t)qword_2568705E8);
    sub_2378D07D8((uint64_t)v97, (uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v127 = v189;
    sub_2378D07D8((uint64_t)v97, (uint64_t)v189, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_2378D07D8(v96, (uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_2378D07D8(v96, v124, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_237A86618();
    v128 = sub_237A8663C();
    v129 = sub_237A87D88();
    if ((sub_237A87DF4() & 1) != 0)
    {
      LODWORD(v206) = v129;
      v210 = v128;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v195 + 16))(v190, v125, v196);
      v130 = swift_slowAlloc();
      v198 = swift_slowAlloc();
      v213 = v198;
      *(_DWORD *)v130 = 136315906;
      v199 = v130 + 4;
      v131 = v204;
      v132 = v200;
      sub_2378BBFE0((uint64_t)v204, (uint64_t)v200, qword_2568207C8);
      v205 = *(_BYTE **)(v191 + 16);
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v205)(v201, v132, v208);
      v133 = sub_237A87854();
      v135 = v134;
      sub_2378BC024((uint64_t)v132, qword_2568207C8);
      v211 = sub_2378FD9C8(v133, v135, &v213);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378DE6A4((uint64_t)v131, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      *(_WORD *)(v130 + 12) = 2080;
      v136 = Component.stableIdentifier.getter();
      if (v137)
      {
        v138 = v136;
        v139 = v137;
      }
      else
      {
        v138 = 0xD000000000000015;
        v211 = 0;
        v212 = 0xE000000000000000;
        sub_237A87F44();
        swift_bridgeObjectRelease();
        v139 = 0x8000000237AB0330;
      }
      v211 = sub_2378FD9C8(v138, v139, &v213);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378DE6A4((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      *(_WORD *)(v130 + 22) = 2080;
      v142 = v203;
      v143 = v200;
      sub_2378BBFE0((uint64_t)v203, (uint64_t)v200, qword_2568207C8);
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v205)(v201, v143, v208);
      v144 = sub_237A87854();
      v146 = v145;
      sub_2378BC024((uint64_t)v143, qword_2568207C8);
      v211 = sub_2378FD9C8(v144, v146, &v213);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378DE6A4((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      *(_WORD *)(v130 + 32) = 2080;
      v147 = (uint64_t)v202;
      v148 = Component.stableIdentifier.getter();
      if (v149)
      {
        v150 = v148;
        v151 = v149;
      }
      else
      {
        v150 = 0xD000000000000015;
        v211 = 0;
        v212 = 0xE000000000000000;
        sub_237A87F44();
        swift_bridgeObjectRelease();
        v151 = 0x8000000237AB0330;
      }
      v96 = (uint64_t)v177;
      v152 = v194;
      v153 = v198;
      v211 = sub_2378FD9C8(v150, v151, &v213);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378DE6A4(v147, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v154 = v190;
      v155 = sub_237A8660C();
      v156 = v210;
      _os_signpost_emit_with_name_impl(&dword_237866000, v210, (os_signpost_type_t)v206, v155, "Dynamic Content area transition started.", "Starting Component: %s, Starting Instrument kind: %s, Target Component: %s, Target Instrument kind: %s", (uint8_t *)v130, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v153, -1, -1);
      MEMORY[0x23B81FB7C](v130, -1, -1);

      v157 = v196;
      v158 = *(void (**)(_BYTE *, uint64_t))(v195 + 8);
      v158(v152, v196);
      v158(v154, v157);
      v97 = v207;
    }
    else
    {

      sub_2378DE6A4(v124, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_2378DE6A4((uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_2378DE6A4((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_2378DE6A4((uint64_t)v204, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      (*(void (**)(_BYTE *, uint64_t))(v195 + 8))(v125, v196);
    }
    v159 = v175;
    v160 = (uint64_t)v176;
    if (*(_QWORD *)(v175 + 16))
    {
      v161 = sub_2378D3230((uint64_t)v176);
      if ((v162 & 1) != 0)
      {
        v163 = *(_QWORD *)(v159 + 56) + 32 * v161;
        v164 = *(_QWORD *)(v163 + 8);
        v165 = *(_QWORD *)(v163 + 16);
        v166 = *(_BYTE *)(v163 + 24);
        swift_retain();
        sub_2378D0664(v164, v165, v166);
        sub_2378724B0(v164, v165, v166);
        v167 = v185;
        sub_2378D07D8(v209, (uint64_t)v185, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
        v168 = v174;
        v169 = v78(v167, 2, v174);
        v170 = v184;
        if (!(_DWORD)v169)
          sub_237870370((uint64_t)v167, (uint64_t)v184, qword_2568207C8);
        v80(v170, v169, 2, v168);
        v171 = v186;
        sub_237870370((uint64_t)v170, (uint64_t)v186, &qword_256820D40);
        sub_2378FCA9C((uint64_t)v171, v187 & 1);
        swift_release();
        sub_2378BC024((uint64_t)v171, &qword_256820D40);
        v172 = v97;
        goto LABEL_47;
      }
    }
    sub_2378DE6A4((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_2378DE6A4(v96, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v81 = &qword_25681E8E0;
    v82 = v160;
  }
  else
  {
    sub_2378DE6A4(v84, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v81 = &qword_25681E8E0;
    v82 = (uint64_t)v68;
  }
  return sub_2378BC024(v82, v81);
}

uint64_t sub_2378F1B10(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t), int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v53;
  void (**v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  _BOOL4 v77;
  uint64_t v78;
  uint8_t *v79;
  uint8_t *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  int EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  int v87;
  char v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t *, _QWORD);
  uint64_t v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  void (**v115)(uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t);
  uint64_t v132;
  void (*v133)(uint64_t);
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v125 = a5;
  v131 = (void (*)(uint64_t))a4;
  v133 = a3;
  v144 = (uint64_t *)a2;
  v146 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v6);
  v130 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for Zone();
  v119 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v120 = v8;
  v121 = (uint64_t)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_237A86E94();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821330);
  MEMORY[0x24BDAC7A8](v10);
  v141 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for PopoverModel(0);
  v134 = *(_QWORD *)(v140 - 8);
  v12 = MEMORY[0x24BDAC7A8](v140);
  v118 = (uint64_t)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v126 = (uint64_t)&v117 - v14;
  v15 = type metadata accessor for RequestContentModel();
  v16 = *(_QWORD **)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v127 = (uint64_t)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v139 = (char *)&v117 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v117 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821338);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v128 = (uint64_t)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v143 = (uint64_t)&v117 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v136 = (uint64_t)&v117 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v137 = (char *)&v117 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v138 = (uint64_t)&v117 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v142 = (uint64_t)&v117 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v117 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v117 - v42;
  swift_getKeyPath();
  swift_getKeyPath();
  v145 = v5;
  sub_237A866FC();
  swift_release();
  swift_release();
  v44 = v147;
  if (*(_QWORD *)(v147 + 16) && (v45 = sub_2378D3230((uint64_t)v144), (v46 & 1) != 0))
  {
    sub_2378D07D8(*(_QWORD *)(v44 + 56) + v16[9] * v45, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16[7];
    v48 = v43;
    v49 = 0;
  }
  else
  {
    v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16[7];
    v48 = v43;
    v49 = 1;
  }
  v135 = v47;
  v47((uint64_t)v48, v49, 1, v15);
  swift_bridgeObjectRelease();
  v50 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_2378BBFE0((uint64_t)v43, (uint64_t)v25, &qword_256820C60);
  sub_2378BBFE0(v146, v50, &qword_256820C60);
  v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v16[6];
  if (v51((uint64_t)v25, 1, v15) == 1)
  {
    sub_2378BC024((uint64_t)v43, &qword_256820C60);
    if (v51(v50, 1, v15) == 1)
      return sub_2378BC024((uint64_t)v25, &qword_256820C60);
    goto LABEL_10;
  }
  sub_2378BBFE0((uint64_t)v25, (uint64_t)v41, &qword_256820C60);
  if (v51(v50, 1, v15) == 1)
  {
    sub_2378BC024((uint64_t)v43, &qword_256820C60);
    sub_2378DE6A4((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
LABEL_10:
    sub_2378BC024((uint64_t)v25, &qword_256821338);
    goto LABEL_11;
  }
  sub_2378D0858(v50, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  _s14CarPlayAssetUI19RequestContentModelO2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v22);
  v64 = v63;
  sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  sub_2378BC024((uint64_t)v43, &qword_256820C60);
  sub_2378DE6A4((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  result = sub_2378BC024((uint64_t)v25, &qword_256820C60);
  if ((v64 & 1) != 0)
    return result;
LABEL_11:
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = 0;
  v54 = (void (**)(uint64_t))(v53 + 16);
  v132 = v53;
  *(_QWORD *)(v53 + 24) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v55 = v147;
  if (*(_QWORD *)(v147 + 16))
  {
    v56 = (uint64_t)v144;
    v57 = sub_2378D3230((uint64_t)v144);
    v58 = v142;
    v59 = (uint64_t)v137;
    v60 = v135;
    if ((v61 & 1) != 0)
    {
      sub_2378D07D8(*(_QWORD *)(v55 + 56) + v16[9] * v57, v142, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      v62 = 0;
    }
    else
    {
      v62 = 1;
    }
    v60(v58, v62, 1, v15);
  }
  else
  {
    v56 = (uint64_t)v144;
    v58 = v142;
    v59 = (uint64_t)v137;
    v60 = v135;
    v135(v142, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  sub_2378BBFE0(v58, v59, &qword_256820C60);
  v65 = v136;
  sub_2378BBFE0(v146, v136, &qword_256820C60);
  v66 = v51(v59, 1, v15);
  v67 = v143;
  if (v66 == 1)
  {
    v68 = v65;
    v69 = v138;
    sub_237870370(v68, v138, &qword_256820C60);
    v70 = v69;
    sub_2378BC024(v59, &qword_256820C60);
    v71 = v51(v69, 1, v15);
    v72 = (uint64_t)v139;
    if (v71 == 1)
    {
      sub_2378BC024(v70, &qword_256820C60);
LABEL_30:
      v81 = 0;
      v78 = (uint64_t)v141;
      goto LABEL_31;
    }
  }
  else
  {
    sub_2378BC024(v65, &qword_256820C60);
    v70 = v138;
    sub_2378D0858(v59, v138, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v60(v70, 0, 1, v15);
    v72 = (uint64_t)v139;
  }
  sub_2378D07D8(v70, v72, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  v73 = swift_getEnumCaseMultiPayload() - 1;
  if (v73 >= 3)
  {
    sub_2378DE6A4(v72, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    sub_2378DE6A4(v70, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    goto LABEL_30;
  }
  sub_2378DE6A4(v72, (uint64_t (*)(_QWORD))off_250971F18[v73]);
  sub_2378DE6A4(v70, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  if (qword_25681E300 != -1)
    swift_once();
  v74 = sub_237A86678();
  __swift_project_value_buffer(v74, (uint64_t)qword_256870670);
  v75 = sub_237A86660();
  v76 = sub_237A87D58();
  v77 = os_log_type_enabled(v75, v76);
  v78 = (uint64_t)v141;
  if (v77)
  {
    v79 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v79 = 0;
    _os_log_impl(&dword_237866000, v75, v76, "RequestContent - Either presenting or dismissing floating content.", v79, 2u);
    v80 = v79;
    v67 = v143;
    MEMORY[0x23B81FB7C](v80, -1, -1);
  }

  v81 = v125;
LABEL_31:
  sub_2378BBFE0(v58, v67, &qword_256820C60);
  if (v51(v67, 1, v15) == 1)
  {
    sub_2378BC024(v67, &qword_256820C60);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v78, 1, 1, v140);
  }
  else
  {
    v82 = v67;
    v83 = v127;
    sub_2378D07D8(v82, v127, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v85 = v140;
    if (EnumCaseMultiPayload == 1)
    {
      sub_2378D0858(v83, v78, type metadata accessor for PopoverModel);
      v86 = v134;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v134 + 56))(v78, 0, 1, v85);
    }
    else
    {
      v86 = v134;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v78, 1, 1, v140);
      sub_2378DE6A4(v83, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    }
    sub_2378DE6A4(v143, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v78, 1, v85) != 1)
    {
      v88 = v81;
      sub_2378D0858(v78, v126, type metadata accessor for PopoverModel);
      if (qword_25681E300 != -1)
        swift_once();
      v89 = sub_237A86678();
      __swift_project_value_buffer(v89, (uint64_t)qword_256870670);
      v90 = sub_237A86660();
      v91 = sub_237A87D58();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v92 = 0;
        _os_log_impl(&dword_237866000, v90, v91, "RequestContent - dismissing remote popover.", v92, 2u);
        MEMORY[0x23B81FB7C](v92, -1, -1);
      }

      v93 = v118;
      sub_2378D0858(v126, v118, type metadata accessor for PopoverModel);
      v94 = (*(unsigned __int8 *)(v86 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      v95 = swift_allocObject();
      *(_QWORD *)(v95 + 16) = v145;
      sub_2378D0858(v93, v95 + v94, type metadata accessor for PopoverModel);
      v96 = v132;
      v97 = *(_QWORD *)(v132 + 16);
      *(_QWORD *)(v132 + 16) = sub_23790B65C;
      *(_QWORD *)(v96 + 24) = v95;
      swift_retain();
      sub_2378A2C04(v97);
      if ((v88 & 1) != 0)
        goto LABEL_38;
LABEL_45:
      v98 = v130;
      sub_2378BBFE0(v56, v130, &qword_25681E8E0);
      v99 = v128;
      sub_2378BBFE0(v146, v128, &qword_256820C60);
      swift_getKeyPath();
      swift_getKeyPath();
      v100 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
      sub_2378E3F6C(v99, v98);
      v100(&v147, 0);
      swift_release();
      v101 = swift_release();
      v102 = *v54;
      if (*v54)
      {
        v103 = swift_retain();
        v102(v103);
        v101 = sub_2378A2C04((uint64_t)v102);
      }
      if (v133)
        v133(v101);
      goto LABEL_49;
    }
  }
  sub_2378BC024(v78, &qword_256821330);
  if ((v81 & 1) == 0)
    goto LABEL_45;
LABEL_38:
  v87 = *(unsigned __int8 *)(v56 + *(int *)(v129 + 40));
  if (v87 == 2)
  {
LABEL_49:
    sub_2378BC024(v58, &qword_256820C60);
    return swift_release();
  }
  v104 = v87 & 1;
  if (qword_25681E500 != -1)
    swift_once();
  v143 = qword_256870710;
  v105 = v122;
  v106 = sub_237A86E88();
  v144 = &v117;
  MEMORY[0x24BDAC7A8](v106);
  v108 = v145;
  v107 = v146;
  *(&v117 - 4) = v145;
  *((_BYTE *)&v117 - 24) = v104;
  *(&v117 - 2) = v107;
  *(&v117 - 1) = v56;
  v109 = v121;
  sub_2378D07D8(v56, v121, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v110 = (*(unsigned __int8 *)(v119 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
  v111 = v110 + v120;
  v112 = (v110 + v120) & 0xFFFFFFFFFFFFFFF8;
  v113 = swift_allocObject();
  *(_QWORD *)(v113 + 16) = v108;
  sub_2378D0858(v109, v113 + v110, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  *(_BYTE *)(v113 + v111) = v104;
  v114 = v131;
  *(_QWORD *)(v112 + v113 + 8) = v132;
  v115 = (void (**)(uint64_t))(v113 + ((v112 + 23) & 0xFFFFFFFFFFFFFFF8));
  v116 = (uint64_t)v133;
  *v115 = v133;
  v115[1] = v114;
  swift_retain();
  swift_retain();
  sub_2378A2BF4(v116);
  sub_237A8690C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v105, v124);
  sub_2378BC024(v142, &qword_256820C60);
  return swift_release();
}

uint64_t sub_2378F2914(uint64_t a1, uint64_t a2)
{
  void (**v3)(uint64_t, _QWORD *);
  uint64_t result;
  void (*v5)(uint64_t, _QWORD *);
  _QWORD v6[2];
  char v7;

  v3 = (void (**)(uint64_t, _QWORD *))(a1
                                               + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  result = swift_beginAccess();
  v5 = *v3;
  if (*v3)
  {
    v6[0] = 0;
    v6[1] = 0;
    v7 = 2;
    swift_retain();
    v5(a2, v6);
    return sub_2378A2C04((uint64_t)v5);
  }
  return result;
}

uint64_t sub_2378F2998(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  char **v31;
  char **v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int64_t v39;
  char *v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  char isUniquelyReferenced_nonNull_native;
  BOOL v51;
  uint64_t v52;
  char v53;
  char **v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_signpost_type_t v60;
  os_signpost_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  os_signpost_id_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t *, _QWORD);
  uint64_t v93;
  unsigned int (*v94)(_QWORD, _QWORD, _QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t *, _QWORD);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v110 = a4;
  v108 = a3;
  v5 = 0x32656E6F7ALL;
  v6 = a2 & 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v7);
  v101 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A86624();
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v99 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v104 = (char *)&v93 - v12;
  v13 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v13);
  v109 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v100 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v96 = (uint64_t)&v93 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v95 = (uint64_t)&v93 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v103 = (char *)&v93 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v93 - v24;
  v111 = type metadata accessor for RequestContentModel();
  v107 = *(_QWORD *)(v111 - 8);
  v26 = MEMORY[0x24BDAC7A8](v111);
  v93 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v97 = (uint64_t)&v93 - v28;
  KeyPath = swift_getKeyPath();
  v30 = swift_getKeyPath();
  v112 = a1;
  v98 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
  v32 = v31;
  v33 = *v31;
  v34 = *((_QWORD *)*v31 + 2);
  v102 = v6;
  if (v34)
  {
    v94 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))KeyPath;
    if (v6)
      v35 = 0x32656E6F7ALL;
    else
      v35 = 0x31656E6F7ALL;
    swift_bridgeObjectRetain();
    v36 = 0;
    while (1)
    {
      if (v33[v36 + 32])
        v37 = 0x32656E6F7ALL;
      else
        v37 = 0x31656E6F7ALL;
      if (v37 == v35)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = (char *)0xE500000000000000;
        goto LABEL_16;
      }
      v38 = sub_237A8840C();
      swift_bridgeObjectRelease_n();
      if ((v38 & 1) != 0)
        break;
      ++v36;
      v5 = 0x32656E6F7ALL;
      if (v34 == v36)
      {
        swift_bridgeObjectRelease();
        v39 = *((_QWORD *)*v32 + 2);
        goto LABEL_40;
      }
    }
    v5 = 0x32656E6F7ALL;
LABEL_16:
    swift_bridgeObjectRelease();
    v39 = v36 + 1;
    if (__OFADD__(v36, 1))
      goto LABEL_78;
    v40 = *v32;
    v41 = *((_QWORD *)*v32 + 2);
    if (v39 != v41)
    {
      v42 = (char *)(v36 + 33);
      v33 = v112;
      while (1)
      {
        v45 = v42 - 32;
        if ((unint64_t)(v42 - 32) >= v41)
        {
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        if (v42[(_QWORD)v40])
          v46 = 0x32656E6F7ALL;
        else
          v46 = 0x31656E6F7ALL;
        if (v46 == v35)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v5 = sub_237A8840C();
          swift_bridgeObjectRelease_n();
          if ((v5 & 1) != 0)
          {
            v5 = 0x32656E6F7ALL;
          }
          else
          {
            if (v45 != (char *)v36)
            {
              if (v36 < 0)
              {
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                v33 = sub_23789601C(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
                *(_QWORD *)v5 = v33;
LABEL_45:
                v57 = *((_QWORD *)v33 + 2);
                v56 = *((_QWORD *)v33 + 3);
                if (v57 >= v56 >> 1)
                {
                  v33 = sub_23789601C((char *)(v56 > 1), v57 + 1, 1, v33);
                  *(_QWORD *)v5 = v33;
                }
                *((_QWORD *)v33 + 2) = v57 + 1;
                v33[v57 + 32] = v102;
                ((void (*)(uint64_t *, _QWORD))v35)(&v113, 0);
                swift_release();
                swift_release();
                sub_2378DE6A4(v97, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
                v30 = v108;
                goto LABEL_49;
              }
              v33 = *v32;
              v47 = *((_QWORD *)*v32 + 2);
              if (v36 >= v47)
                goto LABEL_76;
              if ((unint64_t)v45 >= v47)
                goto LABEL_77;
              v48 = v33[v36 + 32];
              v49 = v42[(_QWORD)v33];
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *v32 = v33;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v33 = sub_23793E894((uint64_t)v33);
                *v32 = v33;
              }
              v33[v36 + 32] = v49;
              v42[(_QWORD)*v32] = v48;
              v33 = v112;
            }
            v51 = __OFADD__(v36++, 1);
            v5 = 0x32656E6F7ALL;
            if (v51)
              goto LABEL_72;
          }
        }
        v40 = *v32;
        v41 = *((_QWORD *)*v32 + 2);
        v43 = v42 + 1;
        v44 = v42 - 31;
        ++v42;
        if (v44 == (char *)v41)
        {
          v39 = (int64_t)(v43 - 32);
          v34 = v36;
          goto LABEL_40;
        }
      }
    }
    v34 = v36;
LABEL_40:
    v36 = (uint64_t)v94;
    if (v39 < v34)
    {
LABEL_73:
      __break(1u);
LABEL_74:
      swift_once();
      goto LABEL_50;
    }
  }
  else
  {
    v39 = 0;
  }
  sub_23790B68C(v34, v39);
  v98(&v113, 0);
  swift_release();
  swift_release();
  v30 = v108;
  sub_2378BBFE0(v108, (uint64_t)v25, &qword_256820C60);
  v36 = *(_QWORD *)(v107 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v36)(v25, 1, v111) == 1)
  {
    sub_2378BC024((uint64_t)v25, &qword_256820C60);
  }
  else
  {
    v52 = v97;
    sub_2378D0858((uint64_t)v25, v97, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    RequestContentModel.isFocusable.getter();
    if ((v53 & 1) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v35 = sub_237A866F0();
      v5 = (uint64_t)v54;
      v33 = *v54;
      v55 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v5 = v33;
      if ((v55 & 1) == 0)
        goto LABEL_79;
      goto LABEL_45;
    }
    sub_2378DE6A4(v52, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  }
LABEL_49:
  v25 = v103;
  v35 = (uint64_t)v104;
  v5 = v109;
  if (qword_25681E0F0 != -1)
    goto LABEL_74;
LABEL_50:
  v58 = sub_237A86654();
  __swift_project_value_buffer(v58, (uint64_t)qword_2568705E8);
  sub_2378BBFE0(v30, (uint64_t)v25, &qword_256820C60);
  sub_2378D07D8(v110, v5, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  swift_retain_n();
  sub_237A86618();
  v59 = sub_237A8663C();
  v60 = sub_237A87D88();
  if ((sub_237A87DF4() & 1) == 0)
  {

    swift_release_n();
    sub_2378DE6A4(v5, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    sub_2378BC024((uint64_t)v25, &qword_256820C60);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v35, v106);
    LOBYTE(v67) = v102;
    goto LABEL_70;
  }
  v61 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v99, v35, v106);
  v62 = swift_slowAlloc();
  v63 = swift_slowAlloc();
  v64 = (uint64_t)v25;
  v65 = v63;
  v115 = v63;
  *(_DWORD *)v62 = 136315650;
  v66 = v95;
  sub_2378BBFE0(v64, v95, &qword_256820C60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v36)(v66, 1, v111) == 1)
  {
    sub_2378BC024(v66, &qword_256820C60);
  }
  else
  {
    RequestContentModel.displayName.getter();
    v69 = v68;
    v71 = v70;
    sub_2378DE6A4(v66, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    if (v71)
      goto LABEL_56;
  }
  v113 = 0;
  v114 = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v71 = 0x8000000237AB0330;
  v69 = 0xD000000000000015;
LABEL_56:
  v113 = sub_2378FD9C8(v69, v71, &v115);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  sub_2378BC024((uint64_t)v103, &qword_256820C60);
  *(_WORD *)(v62 + 12) = 2080;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v72 = v113;
  if (*(_QWORD *)(v113 + 16))
  {
    v73 = sub_2378D3230(v109);
    v74 = v96;
    if ((v75 & 1) != 0)
    {
      sub_2378D07D8(*(_QWORD *)(v72 + 56) + *(_QWORD *)(v107 + 72) * v73, v96, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      v76 = 0;
    }
    else
    {
      v76 = 1;
    }
  }
  else
  {
    v76 = 1;
    v74 = v96;
  }
  v77 = v111;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v74, v76, 1, v111);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v36)(v74, 1, v77))
  {
    sub_2378BC024(v74, &qword_256820C60);
    v67 = v102;
  }
  else
  {
    v80 = v93;
    sub_2378D07D8(v74, v93, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    sub_2378BC024(v74, &qword_256820C60);
    RequestContentModel.displayName.getter();
    v82 = v81;
    v78 = v83;
    sub_2378DE6A4(v80, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v67 = v102;
    if (v78)
    {
      v79 = v82;
      goto LABEL_66;
    }
  }
  v113 = 0;
  v114 = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v78 = 0x8000000237AB0330;
  v79 = 0xD000000000000015;
LABEL_66:
  v113 = sub_2378FD9C8(v79, v78, &v115);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_2378DE6A4(v109, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  *(_WORD *)(v62 + 22) = 2080;
  if (v67)
    v84 = 0x32656E6F7ALL;
  else
    v84 = 0x31656E6F7ALL;
  v113 = sub_2378FD9C8(v84, 0xE500000000000000, &v115);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  v85 = v99;
  v86 = sub_237A8660C();
  _os_signpost_emit_with_name_impl(&dword_237866000, v59, v61, v86, "RequestContent transition started: ", "newContent: %s activeContent: %s, ZoneRegion: %s", (uint8_t *)v62, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x23B81FB7C](v65, -1, -1);
  MEMORY[0x23B81FB7C](v62, -1, -1);

  v87 = *(void (**)(char *, uint64_t))(v105 + 8);
  v88 = v106;
  v87(v104, v106);
  v87(v85, v88);
  v30 = v108;
LABEL_70:
  v89 = v101;
  sub_2378BBFE0(v110, v101, &qword_25681E8E0);
  v90 = v100;
  sub_2378BBFE0(v30, v100, &qword_256820C60);
  swift_getKeyPath();
  swift_getKeyPath();
  v91 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
  sub_2378E3F6C(v90, v89);
  v91(&v113, 0);
  swift_release();
  swift_release();
  LOBYTE(v113) = v67;
  return sub_2378F4820((unsigned __int8 *)&v113, 0);
}

uint64_t sub_2378F35A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  void (**v32)(uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  os_signpost_id_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t result;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(uint64_t);
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];

  v53 = a6;
  v55 = a3 & 1;
  v9 = type metadata accessor for RequestContentModel();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v51 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_237A86624();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v56 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - v18;
  v20 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25681E0F0 != -1)
    swift_once();
  v52 = a4;
  v54 = (void (**)(uint64_t))(a4 + 16);
  v23 = sub_237A86654();
  __swift_project_value_buffer(v23, (uint64_t)qword_2568705E8);
  sub_2378D07D8(a2, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  swift_retain_n();
  sub_237A86618();
  v24 = sub_237A8663C();
  v25 = sub_237A87D88();
  if ((sub_237A87DF4() & 1) == 0)
  {

    swift_release_n();
    sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v58);
    LOBYTE(v31) = v55;
    v32 = v54;
    goto LABEL_17;
  }
  v49 = v25;
  v50 = a5;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v19, v58);
  v26 = swift_slowAlloc();
  v48 = swift_slowAlloc();
  v59 = v48;
  *(_DWORD *)v26 = 136315394;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v27 = v60[0];
  if (*(_QWORD *)(v60[0] + 16) && (v28 = sub_2378D3230((uint64_t)v22), (v29 & 1) != 0))
  {
    sub_2378D07D8(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v10 + 72) * v28, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, v30, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    sub_2378BC024((uint64_t)v14, &qword_256820C60);
    v31 = v55;
  }
  else
  {
    v35 = v51;
    sub_2378D07D8((uint64_t)v14, v51, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    sub_2378BC024((uint64_t)v14, &qword_256820C60);
    RequestContentModel.displayName.getter();
    v34 = v36;
    v33 = v37;
    sub_2378DE6A4(v35, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    v31 = v55;
    if (v33)
      goto LABEL_13;
  }
  v60[0] = 0;
  v60[1] = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v33 = 0x8000000237AB0330;
  v34 = 0xD000000000000015;
LABEL_13:
  v32 = v54;
  v60[0] = sub_2378FD9C8(v34, v33, &v59);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  *(_WORD *)(v26 + 12) = 2080;
  if (v31)
    v38 = 0x32656E6F7ALL;
  else
    v38 = 0x31656E6F7ALL;
  v60[0] = sub_2378FD9C8(v38, 0xE500000000000000, &v59);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  v39 = v56;
  v40 = sub_237A8660C();
  _os_signpost_emit_with_name_impl(&dword_237866000, v24, (os_signpost_type_t)v49, v40, "RequestContent transition ended: ", "activeContent: %s, ZoneRegion: %s", (uint8_t *)v26, 0x16u);
  v41 = v48;
  swift_arrayDestroy();
  MEMORY[0x23B81FB7C](v41, -1, -1);
  MEMORY[0x23B81FB7C](v26, -1, -1);

  v42 = v58;
  v43 = *(void (**)(char *, uint64_t))(v57 + 8);
  v43(v19, v58);
  v43(v39, v42);
  a5 = v50;
LABEL_17:
  LOBYTE(v60[0]) = v31;
  sub_2378F4820((unsigned __int8 *)v60, 1);
  result = swift_beginAccess();
  v45 = *v32;
  if (*v32)
  {
    v46 = swift_retain();
    v45(v46);
    result = sub_2378A2C04((uint64_t)v45);
  }
  if (a5)
    return a5(result);
  return result;
}

Swift::Void __swiftcall ClusterTransitionCoordinator.settleRequestContentTransition(zoneRegion:)(CarPlayAssetUI::Zone::ZoneRegion zoneRegion)
{
  unsigned __int8 v1;

  v1 = *(_BYTE *)zoneRegion;
  sub_2378F4820(&v1, 1);
}

uint64_t sub_2378F3B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[7];

  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v48 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Component();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v48 - v20;
  v22 = *(unsigned __int8 *)(a2 + 17);
  v23 = *(_QWORD *)(a2 + 88) >> 62;
  if ((_DWORD)v23 == 1)
  {
    v24 = (uint64_t *)(a2 + 96);
    v25 = *(_QWORD *)(a2 + 104);
    if (v25)
      goto LABEL_4;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, 1, 1, v15);
  }
  if ((_DWORD)v23)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, 1, 1, v15);
  v24 = (uint64_t *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 64);
  if (!v25)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, 1, 1, v15);
LABEL_4:
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (*(_QWORD *)(v26 + 16))
  {
    v50 = v22;
    v51 = *v24;
    swift_bridgeObjectRetain();
    v27 = sub_2378D3230(a1);
    if ((v28 & 1) != 0)
    {
      v48[0] = v11;
      v49 = a3;
      v29 = *(_QWORD *)(v26 + 56) + 32 * v27;
      v31 = *(_QWORD *)v29;
      v30 = *(_QWORD *)(v29 + 8);
      v32 = *(_QWORD *)(v29 + 16);
      v33 = *(_BYTE *)(v29 + 24);
      swift_retain();
      sub_2378D0664(v30, v32, v33);
      sub_2378724B0(v30, v32, v33);
      v34 = *(_QWORD *)(*(_QWORD *)v31 + 144);
      v48[1] = v31;
      v35 = (uint64_t *)(v31 + v34);
      swift_beginAccess();
      v54[0] = *v35;
      v54[1] = (uint64_t)sub_2378DA07C;
      v54[2] = 0;
      v54[3] = (uint64_t)sub_2378DADE0;
      v54[4] = 0;
      v54[5] = (uint64_t)sub_2378DAE28;
      v54[6] = 0;
      v53 = MEMORY[0x24BEE4B00];
      swift_bridgeObjectRetain_n();
      sub_2378DA54C(v54, 1, &v53);
      swift_bridgeObjectRelease();
      v36 = v53;
      v37 = v48[0];
      if (*(_QWORD *)(v53 + 16) && (v38 = sub_2378D2DB8(v51, v25), (v39 & 1) != 0))
      {
        sub_2378D07D8(*(_QWORD *)(v36 + 56) + *(_QWORD *)(v16 + 72) * v38, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v40(v14, 0, 1, v15);
      }
      else
      {
        v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v40(v14, 1, 1, v15);
      }
      swift_bridgeObjectRelease();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        swift_release();
        sub_2378BC024((uint64_t)v14, &qword_2568207A8);
      }
      else
      {
        sub_2378D0858((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v42 = sub_2378BBFE0((uint64_t)v21, v37, qword_2568207C8);
        MEMORY[0x24BDAC7A8](v42);
        v48[-2] = v15;
        v43 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
        v48[-1] = v43;
        KeyPath = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](KeyPath);
        v48[-2] = v15;
        v48[-1] = v43;
        swift_getKeyPath();
        sub_237A866FC();
        swift_release();
        swift_release();
        v45 = v52;
        sub_2378BBFE0((uint64_t)v19, v52, qword_2568207C8);
        sub_2378DE6A4((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_237A86594();
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v46 = sub_237A877DC();
        swift_release();
        sub_2378BC024(v45, qword_2568207C8);
        sub_2378BC024(v37, qword_2568207C8);
        if ((v46 & 1) != 0 || (v50 & 1) == 0)
        {
          v47 = v49;
          sub_2378D0858((uint64_t)v21, v49, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v40)(v47, 0, 1, v15);
        }
        sub_2378DE6A4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      }
      a3 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a3, 1, 1, v15);
}

void sub_2378F40A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for Instrument();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_2378F41A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t (**v23)(uint64_t);
  uint64_t (**v24)();

  v3[70] = v8;
  v3[71] = v6;
  v3[72] = v9;
  v3[73] = v10;
  *v3 = v0;
  v3[1] = v1;
  v3[2] = v2;
  sub_23788F4A8(v3 + 70);
  sub_23788F46C(v3 + 70, v3 + 6);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_237A86588();
  v13 = sub_237A871F4();
  Instrument.init(id:kind:backgroundColor:shadowID:)(v4, v3 + 6, v13, 0, 0, v7);
  sub_2378902DC(v8, v6, v9, v10, *v3, v3[1], v5);
  v14 = *(_BYTE *)(v12 - 208);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  v17 = v11[5];
  *(_OWORD *)(v16 + 80) = v11[4];
  *(_OWORD *)(v16 + 96) = v17;
  *(_OWORD *)(v16 + 112) = v11[6];
  *(_BYTE *)(v16 + 128) = *(_BYTE *)(v12 - 112);
  v18 = v11[1];
  *(_OWORD *)(v16 + 16) = *v11;
  *(_OWORD *)(v16 + 32) = v18;
  v19 = v11[3];
  *(_OWORD *)(v16 + 48) = v11[2];
  *(_OWORD *)(v16 + 64) = v19;
  v20 = v7;
  v21 = v3[4];
  sub_2378D0858(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  v22 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(v21 + v22[5]) = v14;
  v23 = (uint64_t (**)(uint64_t))(v21 + v22[6]);
  *v23 = sub_23790B23C;
  v23[1] = (uint64_t (*)(uint64_t))v15;
  v24 = (uint64_t (**)())(v21 + v22[7]);
  *v24 = sub_23790B29C;
  v24[1] = (uint64_t (*)())v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v22 - 1) + 56))(v21, 0, 1, v22);
  return sub_23790B2C4((_QWORD *)(v12 - 224));
}

uint64_t sub_2378F44D4(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  void (*v4)(uint64_t, _QWORD *);
  _QWORD v5[2];
  char v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (uint64_t *)(result + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
    swift_beginAccess();
    v4 = (void (*)(uint64_t, _QWORD *))*v3;
    sub_2378A2BF4(*v3);
    result = swift_release();
    if (v4)
    {
      v5[0] = 0;
      v5[1] = 0;
      v6 = 2;
      v4(a1, v5);
      return sub_2378A2C04((uint64_t)v4);
    }
  }
  return result;
}

uint64_t ClusterTransitionCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_2378BC024(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, &qword_256820C60);
  sub_2378BC024(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, &qword_256820C60);
  v5 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C70);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v7(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, v6);
  v10 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v7(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, v6);
  v14 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  sub_2378A2C04(*(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear));
  sub_2378A2C04(*(_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClusterTransitionCoordinator.__deallocating_deinit()
{
  ClusterTransitionCoordinator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2378F47E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ClusterTransitionCoordinator(0);
  result = sub_237A866A8();
  *a1 = result;
  return result;
}

uint64_t sub_2378F4820(unsigned __int8 *a1, char a2)
{
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;

  v3 = *a1;
  if (qword_25681E300 != -1)
    swift_once();
  v4 = sub_237A86678();
  __swift_project_value_buffer(v4, (uint64_t)qword_256870670);
  v5 = sub_237A86660();
  v6 = sub_237A87D58();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v28 = v8;
    *(_DWORD *)v7 = 136315394;
    if ((a2 & 1) != 0)
      v9 = 0x64656C74746573;
    else
      v9 = 0x64657472617473;
    sub_2378FD9C8(v9, 0xE700000000000000, &v28);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = sub_237A87854();
    sub_2378FD9C8(v10, v11, &v28);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_237866000, v5, v6, "RequestContent - %s transition on zone: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v8, -1, -1);
    MEMORY[0x23B81FB7C](v7, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v12 = v28;
  if (*(_QWORD *)(v28 + 16))
  {
    v13 = sub_2378D32B8(v3);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      if ((a2 & 1) == 0)
      {
        v16 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
LABEL_16:
        swift_getKeyPath();
        swift_getKeyPath();
        if (v16 > 0)
        {
          sub_237A866FC();
          swift_release();
          swift_release();
          v20 = v28;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v28 = v20;
          sub_237871BB8(v16, v3, isUniquelyReferenced_nonNull_native);
          v22 = v28;
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          swift_getKeyPath();
          v28 = v22;
          goto LABEL_18;
        }
        sub_237A866FC();
        swift_release();
        swift_release();
        v24 = v28;
        swift_bridgeObjectRetain();
        v3 = sub_2378D32B8(v3);
        v26 = v25;
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
LABEL_23:
          swift_getKeyPath();
          swift_getKeyPath();
          v28 = v24;
          swift_retain();
          goto LABEL_19;
        }
        v27 = swift_isUniquelyReferenced_nonNull_native();
        v28 = v24;
        if ((v27 & 1) != 0)
        {
LABEL_22:
          sub_237904ACC(v3, v24);
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
LABEL_25:
        sub_2378C5F10();
        v24 = v28;
        goto LABEL_22;
      }
      v16 = v15 - 1;
      if (!__OFSUB__(v15, 1))
        goto LABEL_16;
      __break(1u);
    }
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v17 = v28;
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v28 = v17;
  sub_237871BB8(1, v3, v18);
  v19 = v28;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v28 = v19;
LABEL_18:
  swift_retain();
LABEL_19:
  sub_237A86708();
  return sub_2378E59D0();
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237A86594();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0x203A74756F79614CLL;
  v12[1] = 0xE800000000000000;
  v7 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  sub_2378BBFE0(v0 + *(int *)(v7 + 24), (uint64_t)v3, &qword_256820CF0);
  v8 = type metadata accessor for Layout();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v3, 1, v8) == 1)
  {
    sub_2378BC024((uint64_t)v3, &qword_256820CF0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_2378BBFE0((uint64_t)v3, (uint64_t)v6, &qword_256820D58);
    sub_2378DE6A4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  sub_2378E4D10();
  sub_2378BC024((uint64_t)v6, &qword_256820D50);
  sub_237A878E4();
  swift_bridgeObjectRelease();
  return v12[0];
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.oldLayout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378F5F1C(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition, &qword_256820CF0, a1);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.newLayout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  return sub_2378BBFE0(v1 + *(int *)(v3 + 24), a1, &qword_256820CF0);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.fadeInNewLayout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0) + 28));
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.fadeOutOldLayout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0) + 32));
}

uint64_t sub_2378F4F30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237A86594();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void ClusterTransitionCoordinator.startLayoutTransition(to:fadeInNewLayout:fadeOutOldLayout:)(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  int v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  os_signpost_id_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v64 = a3;
  LODWORD(v63) = a2;
  v67 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86624();
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v56 - v8;
  v9 = type metadata accessor for Layout();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v59 = (uint64_t)&v56 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v56 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v65 = (uint64_t)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v56 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v66 = (uint64_t)&v56 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v56 - v28;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  if ((v69 & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_237A866FC(),
        swift_release(),
        swift_release(),
        v69 == 1))
  {
    if (qword_25681E300 != -1)
      swift_once();
    v30 = sub_237A86678();
    __swift_project_value_buffer(v30, (uint64_t)qword_256870670);
    sub_2378BBFE0(v67, (uint64_t)v29, &qword_256820CF0);
    v31 = sub_237A86660();
    v32 = sub_237A87D58();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v69 = v34;
      *(_DWORD *)v33 = 136315138;
      sub_2378BBFE0((uint64_t)v29, v66, &qword_256820CF0);
      v35 = sub_237A87854();
      v68 = sub_2378FD9C8(v35, v36, &v69);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      sub_2378BC024((uint64_t)v29, &qword_256820CF0);
      _os_log_impl(&dword_237866000, v31, v32, "In an active transition. Preventing layout change to: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v34, -1, -1);
      MEMORY[0x23B81FB7C](v33, -1, -1);
    }
    else
    {
      sub_2378BC024((uint64_t)v29, &qword_256820CF0);
    }

  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v37 = (int *)type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
    sub_237A866FC();
    swift_release();
    swift_release();
    v38 = v67;
    sub_2378BBFE0(v67, (uint64_t)&v19[v37[6]], &qword_256820CF0);
    sub_237A86588();
    v19[v37[7]] = v63 & 1;
    v19[v37[8]] = v64 & 1;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v37 - 1) + 56))(v19, 0, 1, v37);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)v19, (uint64_t)v17, &qword_256820CE8);
    swift_retain();
    sub_237A86708();
    sub_2378E67CC();
    sub_2378BC024((uint64_t)v19, &qword_256820CE8);
    sub_2378BBFE0(v38, (uint64_t)v25, &qword_256820CF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v9) == 1)
    {
      sub_2378BC024((uint64_t)v25, &qword_256820CF0);
    }
    else
    {
      v39 = v59;
      sub_2378D0858((uint64_t)v25, v59, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      if (qword_25681E0F0 != -1)
        swift_once();
      v40 = sub_237A86654();
      __swift_project_value_buffer(v40, (uint64_t)qword_2568705E8);
      v41 = v57;
      sub_2378D07D8(v39, v57, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      v42 = v60;
      sub_237A86618();
      v43 = sub_237A8663C();
      v44 = sub_237A87D88();
      if ((sub_237A87DF4() & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v42, v62);
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v69 = v46;
        v64 = v44;
        *(_DWORD *)v45 = 136315138;
        v63 = v45 + 4;
        v47 = v56;
        sub_2378BBFE0(v41, v56, &qword_256820D58);
        v48 = sub_237A86570();
        v50 = v49;
        sub_2378BC024(v47, &qword_256820D58);
        v68 = sub_2378FD9C8(v48, v50, &v69);
        sub_237A87E24();
        swift_bridgeObjectRelease();
        sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        v51 = v58;
        v52 = sub_237A8660C();
        _os_signpost_emit_with_name_impl(&dword_237866000, v43, (os_signpost_type_t)v64, v52, "Layout transition started.", "Target Layout: %s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B81FB7C](v46, -1, -1);
        MEMORY[0x23B81FB7C](v45, -1, -1);

        v53 = *(void (**)(char *, uint64_t))(v61 + 8);
        v54 = v62;
        v53(v60, v62);
        sub_2378DE6A4(v59, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        v53(v51, v54);
      }
      else
      {

        sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v62);
        sub_2378DE6A4(v39, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      }
    }
    v55 = v66;
    sub_2378BBFE0(v67, v66, &qword_256820CF0);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0(v55, v65, &qword_256820CF0);
    swift_retain();
    sub_237A86708();
    sub_2378BC024(v55, &qword_256820CF0);
  }
}

Swift::Void __swiftcall ClusterTransitionCoordinator.endLayoutTransition()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  int v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  os_signpost_id_t v41;
  os_log_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint8_t *v46;
  int v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v0);
  v50 = (uint64_t)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_237A86624();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v46 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Layout();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)&v46 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v57 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v46 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - v21;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v23 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  v56 = *(_QWORD *)(v23 - 8);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v22, 1, v23);
  sub_2378BC024((uint64_t)v22, &qword_256820CE8);
  if (v24 == 1)
  {
    if (qword_25681E300 != -1)
      swift_once();
    v25 = sub_237A86678();
    __swift_project_value_buffer(v25, (uint64_t)qword_256870670);
    v26 = sub_237A86660();
    v27 = sub_237A87D58();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_237866000, v26, v27, "No layout transition to end.", v28, 2u);
      MEMORY[0x23B81FB7C](v28, -1, -1);
    }

  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_2378BC024((uint64_t)v8, &qword_256820CF0);
    }
    else
    {
      v29 = v52;
      sub_2378D0858((uint64_t)v8, v52, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      if (qword_25681E0F0 != -1)
        swift_once();
      v30 = sub_237A86654();
      __swift_project_value_buffer(v30, (uint64_t)qword_2568705E8);
      sub_2378D07D8(v29, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      v31 = v53;
      sub_237A86618();
      v32 = sub_237A8663C();
      v33 = sub_237A87D88();
      if ((sub_237A87DF4() & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v31, v55);
        v34 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        v59 = v49;
        *(_DWORD *)v34 = 136315138;
        v46 = v34 + 4;
        v35 = v50;
        sub_2378BBFE0((uint64_t)v13, v50, &qword_256820D58);
        v36 = sub_237A86570();
        v47 = v33;
        v37 = v36;
        v48 = v32;
        v39 = v38;
        sub_2378BC024(v35, &qword_256820D58);
        v58 = sub_2378FD9C8(v37, v39, &v59);
        sub_237A87E24();
        swift_bridgeObjectRelease();
        sub_2378DE6A4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        v40 = v51;
        v41 = sub_237A8660C();
        v42 = v48;
        _os_signpost_emit_with_name_impl(&dword_237866000, v48, (os_signpost_type_t)v47, v41, "Layout transition ended.", "Active Layout: %s", v34, 0xCu);
        v43 = v49;
        swift_arrayDestroy();
        MEMORY[0x23B81FB7C](v43, -1, -1);
        MEMORY[0x23B81FB7C](v34, -1, -1);

        v44 = *(void (**)(char *, uint64_t))(v54 + 8);
        v45 = v55;
        v44(v53, v55);
        sub_2378DE6A4(v52, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        v44(v40, v45);
      }
      else
      {

        sub_2378DE6A4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
        sub_2378DE6A4(v29, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v20, 1, 1, v23);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)v20, v57, &qword_256820CE8);
    swift_retain();
    sub_237A86708();
    sub_2378E67CC();
    sub_2378BC024((uint64_t)v20, &qword_256820CE8);
  }
}

uint64_t ClusterTransitionCoordinator.ComponentTransition.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = sub_237A86594();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0x203A6D657449;
  v7[1] = 0xE600000000000000;
  v5 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 20), v1);
  sub_237A87854();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t ClusterTransitionCoordinator.ComponentTransition.componentId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378F5F1C(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, qword_2568207C8, a1);
}

uint64_t sub_2378F5F1C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2378BBFE0(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t static ClusterTransitionCoordinator.ComponentTransition.== infix(_:_:)()
{
  if ((sub_237A8657C() & 1) == 0)
    return 0;
  type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_237A877DC() & 1;
}

uint64_t sub_2378F5FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v3 = sub_237A86594();
  MEMORY[0x24BDAC7A8](v3);
  v7[0] = 0x203A6D657449;
  v7[1] = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(a1 + 20), v3);
  sub_237A87854();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t sub_2378F60A8()
{
  if ((sub_237A8657C() & 1) == 0)
    return 0;
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_237A877DC() & 1;
}

uint64_t CarouselModel.Direction<>.init(direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4);
  if (!(_DWORD)v6)
    sub_237870370(a1, a2, qword_2568207C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v6, 2, v4);
}

uint64_t sub_2378F61BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t KeyPath;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  int v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  os_signpost_type_t v85;
  char *v86;
  os_signpost_id_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;

  v108 = a3;
  v103 = sub_237A86594();
  v94 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v93 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v5);
  v92 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237A86624();
  v102 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v98 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v99 = (char *)&v90 - v10;
  v95 = type metadata accessor for Component();
  v11 = MEMORY[0x24BDAC7A8](v95);
  v101 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v97 = (uint64_t)&v90 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v96 = (char *)&v90 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v100 = (uint64_t)&v90 - v17;
  v18 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  v19 = *(_QWORD **)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v104 = (uint64_t)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821400);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v105 = (uint64_t)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v90 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v90 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v90 - v33;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v36 = result;
  v106 = v29;
  v91 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  v107 = v36;
  sub_237A866FC();
  swift_release();
  swift_release();
  v37 = v109;
  if (*(_QWORD *)(v109 + 16) && (v38 = sub_2378D3230(a2), (v39 & 1) != 0))
  {
    sub_2378D07D8(*(_QWORD *)(v37 + 56) + v19[9] * v38, (uint64_t)v34, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    v40 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
    v40(v34, 0, 1, v18);
  }
  else
  {
    v40 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
    v40(v34, 1, 1, v18);
  }
  v41 = (uint64_t)v106;
  swift_bridgeObjectRelease();
  sub_2378D07D8(v108, (uint64_t)v32, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  v40(v32, 0, 1, v18);
  v42 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_2378BBFE0((uint64_t)v34, (uint64_t)v23, &qword_2568213E8);
  sub_2378BBFE0((uint64_t)v32, v42, &qword_2568213E8);
  v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v19[6];
  if (v43((uint64_t)v23, 1, v18) != 1)
  {
    sub_2378BBFE0((uint64_t)v23, v41, &qword_2568213E8);
    if (v43(v42, 1, v18) != 1)
    {
      v82 = v104;
      sub_2378D0858(v42, v104, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      if ((sub_237A8657C() & 1) != 0)
      {
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v83 = sub_237A877DC();
        sub_2378DE6A4(v82, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
        sub_2378BC024((uint64_t)v32, &qword_2568213E8);
        sub_2378BC024((uint64_t)v34, &qword_2568213E8);
        sub_2378DE6A4(v41, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
        sub_2378BC024((uint64_t)v23, &qword_2568213E8);
        if ((v83 & 1) != 0)
          goto LABEL_9;
        return swift_release();
      }
      sub_2378DE6A4(v82, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      sub_2378BC024((uint64_t)v32, &qword_2568213E8);
      sub_2378BC024((uint64_t)v34, &qword_2568213E8);
      sub_2378DE6A4(v41, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      v81 = (uint64_t)v23;
      v80 = &qword_2568213E8;
LABEL_19:
      sub_2378BC024(v81, v80);
      return swift_release();
    }
    sub_2378BC024((uint64_t)v32, &qword_2568213E8);
    sub_2378BC024((uint64_t)v34, &qword_2568213E8);
    sub_2378DE6A4(v41, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
LABEL_18:
    v80 = &qword_256821400;
    v81 = (uint64_t)v23;
    goto LABEL_19;
  }
  sub_2378BC024((uint64_t)v32, &qword_2568213E8);
  sub_2378BC024((uint64_t)v34, &qword_2568213E8);
  if (v43(v42, 1, v18) != 1)
    goto LABEL_18;
  sub_2378BC024((uint64_t)v23, &qword_2568213E8);
LABEL_9:
  swift_getKeyPath();
  swift_getKeyPath();
  v44 = v107;
  sub_237A866FC();
  swift_release();
  swift_release();
  v45 = v105;
  sub_237903D30(a2, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, (void (*)(unint64_t, uint64_t))sub_2379047D8, (void (*)(void))sub_2378C5AB0, v105);
  sub_2378BC024(v45, &qword_2568213E8);
  v46 = v109;
  swift_getKeyPath();
  swift_getKeyPath();
  v111 = v46;
  swift_retain();
  sub_237A86708();
  sub_2378E5BD0();
  v47 = *(_QWORD *)(v44 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (!*(_QWORD *)(v47 + 16))
    return swift_release();
  v48 = sub_2378D3230(a2);
  if ((v49 & 1) == 0)
    return swift_release();
  v50 = *(_QWORD *)(v47 + 56) + 32 * v48;
  v51 = *(_QWORD *)(v50 + 8);
  v52 = *(_QWORD *)(v50 + 16);
  v53 = *(_BYTE *)(v50 + 24);
  swift_retain();
  sub_2378D0664(v51, v52, v53);
  v54 = sub_2378724B0(v51, v52, v53);
  MEMORY[0x24BDAC7A8](v54);
  v55 = v95;
  *(&v90 - 2) = v95;
  v56 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  *(&v90 - 1) = v56;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v90 - 2) = v55;
  *(&v90 - 1) = v56;
  swift_getKeyPath();
  v58 = v96;
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  v59 = (uint64_t)v58;
  v60 = v100;
  sub_2378D0858(v59, v100, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  if (qword_25681E0F0 != -1)
    swift_once();
  v61 = sub_237A86654();
  __swift_project_value_buffer(v61, (uint64_t)qword_2568705E8);
  v62 = v97;
  sub_2378D07D8(v60, v97, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v63 = v101;
  sub_2378D07D8(v60, v101, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v64 = v99;
  sub_237A86618();
  v65 = sub_237A8663C();
  v66 = sub_237A87D88();
  v67 = sub_237A87DF4();
  v68 = v102;
  if ((v67 & 1) != 0)
  {
    LODWORD(v108) = v66;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v98, v64, v91);
    v69 = swift_slowAlloc();
    v70 = swift_slowAlloc();
    v111 = v70;
    *(_DWORD *)v69 = 136315394;
    v71 = v92;
    sub_2378BBFE0(v62, v92, qword_2568207C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v71, v103);
    v72 = sub_237A87854();
    v74 = v73;
    sub_2378BC024(v71, qword_2568207C8);
    v75 = v72;
    v76 = v101;
    v109 = sub_2378FD9C8(v75, v74, &v111);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378DE6A4(v62, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    *(_WORD *)(v69 + 12) = 2080;
    v77 = Component.stableIdentifier.getter();
    if (v78)
    {
      v79 = v78;
    }
    else
    {
      v109 = 0;
      v110 = 0xE000000000000000;
      sub_237A87F44();
      swift_bridgeObjectRelease();
      v79 = 0x8000000237AB0330;
      v77 = 0xD000000000000015;
    }
    v84 = v100;
    v85 = v108;
    v109 = sub_2378FD9C8(v77, v79, &v111);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    sub_2378DE6A4(v76, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v86 = v98;
    v87 = sub_237A8660C();
    _os_signpost_emit_with_name_impl(&dword_237866000, v65, v85, v87, "Dynamic Content area transition animation settled.", "Current Component: %s. Current Instrument kind: %s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v70, -1, -1);
    MEMORY[0x23B81FB7C](v69, -1, -1);

    swift_release();
    v88 = *(void (**)(char *, uint64_t))(v102 + 8);
    v89 = v91;
    v88(v64, v91);
    sub_2378DE6A4(v84, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    return ((uint64_t (*)(char *, uint64_t))v88)(v86, v89);
  }
  else
  {

    swift_release();
    sub_2378DE6A4(v63, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_2378DE6A4(v62, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v91);
    return sub_2378DE6A4(v60, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
}

uint64_t ClusterTransitionCoordinator.ListDirection.init(iterateDirection:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  if (v3)
    v5 = 1;
  else
    v5 = 2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, v5, 2, v4);
}

uint64_t sub_2378F6D6C()
{
  return sub_237992424();
}

uint64_t sub_2378F6D8C(uint64_t a1)
{
  return sub_23799A92C(a1);
}

uint64_t sub_2378F6DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v35 - v8;
  v10 = type metadata accessor for Component();
  v36 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v35 - v15;
  v47 = v14;
  v18 = sub_23786FAA0(&qword_256820D30, v17, (uint64_t)&protocol conformance descriptor for Component);
  v48 = v18;
  swift_getKeyPath();
  v45 = v10;
  v46 = v18;
  swift_getKeyPath();
  v40 = a1;
  sub_2378D07D8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  swift_retain();
  sub_237A86708();
  v43 = v10;
  v44 = v18;
  swift_getKeyPath();
  v37 = v18;
  v38 = v10;
  v41 = v10;
  v42 = v18;
  swift_getKeyPath();
  v19 = (uint64_t)v13;
  sub_237A866FC();
  swift_release();
  swift_release();
  v20 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  v39 = v2;
  v21 = (uint64_t *)(v2 + v20);
  swift_beginAccess();
  v22 = *v21;
  v23 = *(_QWORD *)(*v21 + 16);
  if (v23)
  {
    v24 = v36;
    v25 = v22 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    sub_237A86594();
    v26 = *(_QWORD *)(v24 + 72);
    v36 = v22;
    swift_bridgeObjectRetain();
    v27 = 0;
    while (1)
    {
      sub_2378BBFE0(v25, (uint64_t)v9, qword_2568207C8);
      sub_2378BBFE0(v19, (uint64_t)v7, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v28 = sub_237A877DC();
      sub_2378BC024((uint64_t)v7, qword_2568207C8);
      sub_2378BC024((uint64_t)v9, qword_2568207C8);
      if ((v28 & 1) != 0)
        break;
      ++v27;
      v25 += v26;
      if (v23 == v27)
      {
        v27 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    v29 = v40;
    v31 = v37;
    v30 = v38;
  }
  else
  {
    v27 = 0;
    v30 = v38;
    v31 = v37;
    v29 = v40;
  }
  v32 = sub_2378DE6A4(v19, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  MEMORY[0x24BDAC7A8](v32);
  *(&v35 - 2) = v30;
  *(&v35 - 1) = v31;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v35 - 2) = v30;
  *(&v35 - 1) = v31;
  swift_getKeyPath();
  v49 = v27;
  swift_retain();
  sub_237A86708();
  return sub_2378DE6A4(v29, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_2378F7148(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, _QWORD *);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;

  v78 = a3;
  v87 = a2;
  v83 = a1;
  v84 = type metadata accessor for Component();
  v86 = *(_QWORD *)(v84 - 8);
  v4 = MEMORY[0x24BDAC7A8](v84);
  v89 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v77 = (uint64_t)&v76 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v80 = (uint64_t *)((char *)&v76 - v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v88 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v76 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v76 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v76 = (uint64_t)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v79 = (uint64_t)&v76 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v76 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v81 = (uint64_t *)((char *)&v76 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v85 = (uint64_t)&v76 - v27;
  v90 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_256820C70);
  v28 = *(v90 - 1);
  MEMORY[0x24BDAC7A8](v90);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821408);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  *v35 = 0;
  v35[1] = 0;
  v36 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120));
  *v36 = 0;
  v36[1] = 0;
  v37 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 128));
  *v37 = 0;
  v37[1] = 0;
  v38 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 136));
  *v38 = 0;
  v38[1] = 0;
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 152)) = 0x3FE999999999999ALL;
  v39 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 168);
  v92 = 0;
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v39, v34, v31);
  v40 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 176);
  LOBYTE(v92) = 0;
  sub_237A866CC();
  v41 = *(void (**)(uint64_t, char *, _QWORD *))(v28 + 32);
  v42 = v3;
  v43 = v90;
  v41(v40, v30, v90);
  v44 = v42 + *(_QWORD *)(*(_QWORD *)v42 + 184);
  LOBYTE(v92) = 0;
  v45 = v83;
  sub_237A866CC();
  v41(v44, v30, v43);
  v46 = *(_QWORD *)(*(_QWORD *)v42 + 192);
  *(_QWORD *)(v42 + v46) = sub_237A874C4();
  if (*(_QWORD *)(v45 + 16))
  {
    v47 = v87;
    v48 = v85;
    sub_2378BBFE0(v87, v85, &qword_2568207A8);
    v49 = v86;
    v32 = v84;
    v90 = *(_QWORD **)(v86 + 48);
    v50 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v90)(v48, 1, v84);
    v51 = v48;
    v41 = (void (*)(uint64_t, char *, _QWORD *))v81;
    sub_2378BBFE0(v51, (uint64_t)v81, &qword_2568207A8);
    v82 = v42;
    if (v50 == 1)
      goto LABEL_12;
    v52 = *(_QWORD *)(v45 + 16);
    v53 = (uint64_t)v41;
    if (v52)
    {
      v54 = v45 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
      v55 = *(_QWORD *)(v86 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_2378BBFE0(v54, (uint64_t)v16, qword_2568207C8);
        sub_2378BBFE0(v53, (uint64_t)v24, &qword_2568207A8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v90)(v24, 1, v32) == 1)
          goto LABEL_26;
        sub_2378BBFE0((uint64_t)v24, (uint64_t)v14, qword_2568207C8);
        sub_2378DE6A4((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_237A86594();
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v56 = sub_237A877DC();
        sub_2378BC024((uint64_t)v14, qword_2568207C8);
        sub_2378BC024((uint64_t)v16, qword_2568207C8);
        if ((v56 & 1) != 0)
          goto LABEL_11;
        v54 += v55;
        --v52;
        v53 = (uint64_t)v41;
      }
      while (v52);
      swift_bridgeObjectRelease();
    }
    sub_2378BC024(v53, &qword_2568207A8);
  }
  while (1)
  {
    sub_237A880AC();
    __break(1u);
LABEL_11:
    v45 = v83;
    swift_bridgeObjectRelease();
    v42 = v82;
    v49 = v86;
    v47 = v87;
LABEL_12:
    sub_2378BC024((uint64_t)v41, &qword_2568207A8);
    sub_2378BC024(v85, &qword_2568207A8);
    *(_QWORD *)(v42 + *(_QWORD *)(*(_QWORD *)v42 + 144)) = v45;
    swift_beginAccess();
    v91 = v45;
    swift_bridgeObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820588);
    sub_237A866CC();
    swift_endAccess();
    v57 = v79;
    sub_2378BBFE0(v47, v79, &qword_2568207A8);
    v58 = v47;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v90)(v57, 1, v32) != 1)
      break;
    v41 = (void (*)(uint64_t, char *, _QWORD *))v80;
    if (*(_QWORD *)(v45 + 16))
    {
      v59 = v49;
      v60 = v45 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
      v61 = v76;
      sub_2378D07D8(v60, v76, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v32);
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v90)(v61, 1, v32) != 1)
      {
        sub_2378D0858(v61, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_2378BC024(v57, &qword_2568207A8);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  v41 = (void (*)(uint64_t, char *, _QWORD *))v80;
  sub_2378D0858(v57, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v59 = v49;
LABEL_17:
  swift_beginAccess();
  sub_2378D07D8((uint64_t)v41, v77, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  sub_237A866CC();
  sub_2378DE6A4((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v62 = swift_endAccess();
  *(_BYTE *)(v42 + *(_QWORD *)(*(_QWORD *)v42 + 104)) = v78 & 1;
  MEMORY[0x24BDAC7A8](v62);
  v63 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v90 = (_QWORD *)v63;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v65 = (uint64_t *)(v42 + *(_QWORD *)(*(_QWORD *)v42 + 144));
  swift_beginAccess();
  v66 = *v65;
  v67 = *(_QWORD *)(*v65 + 16);
  if (v67)
  {
    v68 = v66 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
    sub_237A86594();
    v69 = *(_QWORD *)(v59 + 72);
    v86 = v66;
    swift_bridgeObjectRetain();
    v70 = 0;
    v71 = (uint64_t)v88;
    while (1)
    {
      sub_2378BBFE0(v68, (uint64_t)v14, qword_2568207C8);
      sub_2378BBFE0(v89, v71, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v72 = sub_237A877DC();
      sub_2378BC024(v71, qword_2568207C8);
      sub_2378BC024((uint64_t)v14, qword_2568207C8);
      if ((v72 & 1) != 0)
        break;
      ++v70;
      v68 += v69;
      if (v67 == v70)
      {
        v70 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    v42 = v82;
    v58 = v87;
  }
  else
  {
    v70 = 0;
  }
  v73 = sub_2378DE6A4(v89, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  MEMORY[0x24BDAC7A8](v73);
  v74 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v74);
  swift_getKeyPath();
  v91 = v70;
  swift_retain();
  sub_237A86708();
  sub_2378BC024(v58, &qword_2568207A8);
  return v42;
}

uint64_t sub_2378F7B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v63 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v66 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v56 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v56 - v12;
  v14 = type metadata accessor for Component();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v57 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v56 - v19;
  v74 = v18;
  v22 = sub_23786FAA0(&qword_256820D30, v21, (uint64_t)&protocol conformance descriptor for Component);
  v75 = v22;
  swift_getKeyPath();
  v72 = v14;
  v73 = v22;
  swift_getKeyPath();
  v67 = v20;
  sub_237A866FC();
  swift_release();
  swift_release();
  v70 = v14;
  v71 = v22;
  swift_getKeyPath();
  v68 = v14;
  v69 = v22;
  v61 = v22;
  swift_getKeyPath();
  v62 = v2;
  sub_237A866FC();
  swift_release();
  swift_release();
  v23 = *(_QWORD *)(v76 + 16);
  v65 = v15;
  if (v23)
  {
    v59 = v14;
    v60 = a2;
    v24 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v58 = v76;
    v25 = v76 + v24;
    sub_237A86594();
    v26 = 0;
    v27 = *(_QWORD *)(v15 + 72);
    while (1)
    {
      sub_2378BBFE0(v25, (uint64_t)v13, qword_2568207C8);
      sub_2378BBFE0((uint64_t)v67, (uint64_t)v11, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v28 = sub_237A877DC();
      sub_2378BC024((uint64_t)v11, qword_2568207C8);
      sub_2378BC024((uint64_t)v13, qword_2568207C8);
      if ((v28 & 1) != 0)
        break;
      ++v26;
      v25 += v27;
      if (v23 == v26)
      {
        swift_bridgeObjectRelease();
        v26 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
LABEL_8:
    v14 = v59;
    a2 = v60;
    v15 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = 0;
  }
  sub_2378DE6A4((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v29 = v64;
  sub_2378BBFE0(v63, v64, &qword_256820D40);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 2, v30);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      MEMORY[0x24BDAC7A8](result);
      v32 = v61;
      *(&v56 - 2) = v14;
      *(&v56 - 1) = v32;
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(&v56 - 2) = v14;
      *(&v56 - 1) = v32;
      swift_getKeyPath();
      if (v26)
      {
        sub_237A866FC();
        swift_release();
        result = swift_release();
        if ((unint64_t)(v26 - 1) < *(_QWORD *)(v76 + 16))
        {
          sub_2378D07D8(v76+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * (v26 - 1), a2, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
        }
        goto LABEL_40;
      }
      sub_237A866FC();
      swift_release();
      swift_release();
      v53 = *(_QWORD *)(v76 + 16);
      if (v53)
      {
        sub_2378D07D8(v76+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * (v53 - 1), a2, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        goto LABEL_29;
      }
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      goto LABEL_36;
    }
    v44 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    MEMORY[0x24BDAC7A8](result);
    v45 = v61;
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v45;
    v46 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v46);
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v45;
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v47 = *(_QWORD *)(v76 + 16);
    v48 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v48);
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v45;
    v49 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v49);
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v45;
    swift_getKeyPath();
    if ((uint64_t)v44 >= v47)
    {
      sub_237A866FC();
      swift_release();
      swift_release();
      if (*(_QWORD *)(v76 + 16))
      {
        v51 = v65;
        sub_2378D07D8(v76 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80)), a2, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
LABEL_29:
        v54 = a2;
        v55 = 0;
LABEL_37:
        v52(v54, v55, 1, v14);
        return swift_bridgeObjectRelease();
      }
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56);
LABEL_36:
      v54 = a2;
      v55 = 1;
      goto LABEL_37;
    }
    sub_237A866FC();
    swift_release();
    result = swift_release();
    if ((v44 & 0x8000000000000000) != 0)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v44 >= *(_QWORD *)(v76 + 16))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    v50 = v65;
    sub_2378D07D8(v76+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v65 + 72) * v44, a2, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v34 = sub_237870370(v29, v66, qword_2568207C8);
    MEMORY[0x24BDAC7A8](v34);
    v35 = v61;
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v35;
    v36 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v36);
    *(&v56 - 2) = v14;
    *(&v56 - 1) = v35;
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v37 = v76;
    v38 = *(_QWORD *)(v76 + 16);
    if (v38)
    {
      v59 = v14;
      v60 = a2;
      v39 = v76 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      sub_237A86594();
      v40 = *(_QWORD *)(v15 + 72);
      v67 = (char *)v37;
      swift_bridgeObjectRetain();
      v41 = (uint64_t)v57;
      while (1)
      {
        sub_2378D07D8(v39, v41, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_2378BBFE0(v41, (uint64_t)v13, qword_2568207C8);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v42 = sub_237A877DC();
        sub_2378BC024((uint64_t)v13, qword_2568207C8);
        if ((v42 & 1) != 0)
          break;
        sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v39 += v40;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          v43 = 1;
          a2 = v60;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
      a2 = v60;
      sub_2378D0858(v41, v60, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v43 = 0;
LABEL_32:
      v14 = v59;
      v15 = v65;
    }
    else
    {
      v43 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v43, 1, v14);
    swift_bridgeObjectRelease();
    return sub_2378BC024(v66, qword_2568207C8);
  }
}

uint64_t sub_2378F8484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  unint64_t *v124;
  unint64_t v125;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t *, _QWORD);
  unint64_t *v148;
  unint64_t *v149;
  unint64_t v150;
  char v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t result;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t *v183;
  unint64_t v184;
  char v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(uint64_t *, _QWORD);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t *, _QWORD);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;

  v233 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v236 = (uint64_t)&v216 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v216 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213D0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v228 = (uint64_t)&v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v230 = (uint64_t)&v216 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v229 = (uint64_t)&v216 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v238 = (uint64_t)&v216 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v239 = (uint64_t)&v216 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v216 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213B0);
  MEMORY[0x24BDAC7A8](v22);
  v221 = (uint64_t)&v216 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v247 = *(_QWORD *)(v24 - 8);
  v248 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v249 = (uint64_t)&v216 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v250 = (uint64_t)&v216 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v216 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for Component();
  v32 = MEMORY[0x24BDAC7A8](v31);
  v231 = (uint64_t)&v216 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v242 = (uint64_t)&v216 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v226 = (uint64_t)&v216 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v225 = (uint64_t)&v216 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v220 = (uint64_t)&v216 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v232 = (uint64_t)&v216 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v240 = (uint64_t)&v216 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v243 = (uint64_t)&v216 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v223 = (uint64_t)&v216 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v52 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v216 - v51);
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v216 - v53;
  v56 = v55;
  sub_2378BBFE0(a2, (uint64_t)v30, &qword_2568207A8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v234 = v31;
  v58 = v57(v30, 1, v31);
  v235 = v2;
  v244 = v4;
  v224 = v56;
  v246 = v21;
  if (v58 == 1)
  {
    sub_2378BC024((uint64_t)v30, &qword_2568207A8);
    goto LABEL_16;
  }
  sub_2378D0858((uint64_t)v30, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v59 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  swift_beginAccess();
  v60 = *v59;
  if (!*(_QWORD *)(*v59 + 16))
    goto LABEL_8;
  v61 = *(_QWORD *)(*v59 + 16);
  v219 = v59;
  v237 = v52;
  v62 = *(unsigned __int8 *)(v56 + 80);
  v227 = v62;
  v222 = (v62 + 32) & ~v62;
  v63 = v60 + v222;
  v245 = sub_237A86594();
  v251 = *(_QWORD *)(v56 + 72);
  v241 = v60;
  swift_bridgeObjectRetain();
  v64 = 0;
  v65 = v250;
  do
  {
    sub_2378BBFE0(v63, v65, qword_2568207C8);
    v66 = v54;
    v67 = (uint64_t)v54;
    v68 = v249;
    sub_2378BBFE0(v67, v249, qword_2568207C8);
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v69 = sub_237A877DC();
    sub_2378BC024(v68, qword_2568207C8);
    sub_2378BC024(v65, qword_2568207C8);
    if ((v69 & 1) != 0)
    {
      v70 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v70);
      v71 = v234;
      *(&v216 - 2) = v234;
      v72 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
      *(&v216 - 1) = v72;
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(&v216 - 2) = v71;
      *(&v216 - 1) = v72;
      swift_getKeyPath();
      v2 = v235;
      sub_237A866FC();
      swift_release();
      swift_release();
      if (!*(_QWORD *)(v253 + 16))
      {
        swift_bridgeObjectRelease();
        v76 = (uint64_t)v66;
LABEL_15:
        sub_2378DE6A4(v76, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v56 = v224;
        goto LABEL_16;
      }
      v74 = *(_QWORD *)(v253 + 16);
      v217 = v72;
      v241 = 0;
      v218 = v253;
      v75 = v253 + v222;
      v76 = (uint64_t)v66;
      v77 = v250;
      while (1)
      {
        sub_2378BBFE0(v75, v77, qword_2568207C8);
        v78 = v76;
        v79 = v249;
        sub_2378BBFE0(v78, v249, qword_2568207C8);
        v80 = sub_237A877DC();
        sub_2378BC024(v79, qword_2568207C8);
        sub_2378BC024(v77, qword_2568207C8);
        if ((v80 & 1) != 0)
          break;
        v75 += v251;
        ++v241;
        v76 = (uint64_t)v66;
        if (v74 == v241)
        {
          swift_bridgeObjectRelease();
          v2 = v235;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      v170 = (uint64_t *)v219;
      result = swift_beginAccess();
      if (*(_QWORD *)(*v170 + 16) < v64)
        goto LABEL_99;
      v171 = v221;
      sub_2378D07D8(v233, v221, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_23790506C(v64, v64, v171);
      v172 = swift_endAccess();
      MEMORY[0x24BDAC7A8](v172);
      v128 = v234;
      v173 = v217;
      *(&v216 - 2) = v234;
      *(&v216 - 1) = v173;
      v174 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v174);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v173;
      swift_getKeyPath();
      v127 = v235;
      sub_237A866FC();
      swift_release();
      swift_release();
      v175 = *v170;
      v248 = *(_QWORD *)(*v170 + 16);
      if (v248)
      {
        v176 = v175 + v222;
        v247 = v175;
        swift_bridgeObjectRetain();
        v177 = 0;
        v179 = v249;
        v178 = v250;
        do
        {
          sub_2378BBFE0(v176, v178, qword_2568207C8);
          sub_2378BBFE0((uint64_t)v237, v179, qword_2568207C8);
          v180 = sub_237A877DC();
          sub_2378BC024(v179, qword_2568207C8);
          sub_2378BC024(v178, qword_2568207C8);
          if ((v180 & 1) != 0)
            goto LABEL_76;
          ++v177;
          v176 += v251;
        }
        while (v248 != v177);
        v177 = 0;
LABEL_76:
        swift_bridgeObjectRelease();
        v181 = (uint64_t)v66;
        v173 = v217;
      }
      else
      {
        v177 = 0;
        v181 = (uint64_t)v66;
      }
      v206 = sub_2378DE6A4((uint64_t)v237, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      MEMORY[0x24BDAC7A8](v206);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v173;
      v207 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v207);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v173;
      swift_getKeyPath();
      v253 = v177;
      swift_retain();
      sub_237A86708();
      v208 = v223;
      v209 = sub_2378D07D8(v233, v223, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      MEMORY[0x24BDAC7A8](v209);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v173;
      v210 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v210);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v173;
      swift_getKeyPath();
      result = sub_237A866F0();
      v212 = v241;
      if (*(_QWORD *)(*(_QWORD *)v211 + 16) < v241)
        goto LABEL_100;
      v213 = (void (*)(uint64_t *, _QWORD))result;
      v214 = v208;
      v215 = v221;
      sub_2378D0858(v214, v221, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_23790506C(v212, v212, v215);
      v213(&v253, 0);
      swift_release();
      swift_release();
      sub_2378DE6A4(v181, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_60:
      v154 = (uint64_t *)(v127 + *(_QWORD *)(*(_QWORD *)v127 + 144));
      v155 = swift_beginAccess();
      if (*(_QWORD *)(*v154 + 16) == 1)
      {
        v156 = v223;
        sub_2378D07D8(v233, v223, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v155 = sub_2378F6DAC(v156);
      }
      MEMORY[0x24BDAC7A8](v155);
      *(&v216 - 2) = v128;
      v157 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
      *(&v216 - 1) = v157;
      v158 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v158);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v157;
      swift_getKeyPath();
      sub_237A866FC();
      swift_release();
      swift_release();
      v159 = *v154;
      v160 = *(_QWORD *)(v159 + 16);
      if (v160)
      {
        v248 = v157;
        v161 = v159 + ((v227 + 32) & ~(unint64_t)v227);
        sub_237A86594();
        v247 = v159;
        swift_bridgeObjectRetain();
        v162 = 0;
        v163 = MEMORY[0x24BDCEA98];
        v164 = v249;
        v165 = v250;
        while (1)
        {
          sub_2378BBFE0(v161, v165, qword_2568207C8);
          sub_2378BBFE0(v243, v164, qword_2568207C8);
          sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v163);
          v166 = sub_237A877DC();
          sub_2378BC024(v164, qword_2568207C8);
          sub_2378BC024(v165, qword_2568207C8);
          if ((v166 & 1) != 0)
            break;
          ++v162;
          v161 += v251;
          if (v160 == v162)
          {
            v162 = 0;
            break;
          }
        }
        swift_bridgeObjectRelease();
        v128 = v234;
        v157 = v248;
      }
      else
      {
        v162 = 0;
      }
      v167 = sub_2378DE6A4(v243, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      MEMORY[0x24BDAC7A8](v167);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v157;
      v168 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v168);
      *(&v216 - 2) = v128;
      *(&v216 - 1) = v157;
      swift_getKeyPath();
      v252 = v162;
      swift_retain();
      return sub_237A86708();
    }
    ++v64;
    v63 += v251;
    v54 = v66;
  }
  while (v61 != v64);
  swift_bridgeObjectRelease();
  v2 = v235;
  v56 = v224;
LABEL_8:
  sub_2378DE6A4((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_16:
  v81 = v239;
  v82 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 144);
  swift_beginAccess();
  v245 = v82;
  v83 = *(_QWORD *)v82;
  v84 = *(_QWORD *)(*(_QWORD *)v82 + 16);
  if (!v84)
  {
LABEL_43:
    v123 = v226;
    sub_2378D07D8(v233, v226, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v124 = (unint64_t *)v245;
    swift_beginAccess();
    v125 = *v124;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v124 = v125;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v125 = sub_237895BE4(0, *(_QWORD *)(v125 + 16) + 1, 1, v125);
      *(_QWORD *)v245 = v125;
    }
    v127 = v235;
    v128 = v234;
    v130 = *(_QWORD *)(v125 + 16);
    v129 = *(_QWORD *)(v125 + 24);
    if (v130 >= v129 >> 1)
    {
      v125 = sub_237895BE4(v129 > 1, v130 + 1, 1, v125);
      *(_QWORD *)v245 = v125;
    }
    *(_QWORD *)(v125 + 16) = v130 + 1;
    v227 = *(unsigned __int8 *)(v56 + 80);
    v131 = (v227 + 32) & ~v227;
    v251 = *(_QWORD *)(v56 + 72);
    sub_2378D0858(v123, v125 + v131 + v251 * v130, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v132 = swift_endAccess();
    MEMORY[0x24BDAC7A8](v132);
    *(&v216 - 2) = v128;
    v133 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
    *(&v216 - 1) = v133;
    v134 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v134);
    *(&v216 - 2) = v128;
    *(&v216 - 1) = v133;
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    v135 = *(_QWORD *)v245;
    v136 = *(_QWORD *)(*(_QWORD *)v245 + 16);
    v248 = v131;
    if (v136)
    {
      v247 = v133;
      v137 = v135 + v131;
      sub_237A86594();
      v246 = (char *)v135;
      swift_bridgeObjectRetain();
      v138 = 0;
      v139 = MEMORY[0x24BDCEA98];
      v140 = v249;
      v141 = v250;
      while (1)
      {
        sub_2378BBFE0(v137, v141, qword_2568207C8);
        sub_2378BBFE0(v242, v140, qword_2568207C8);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v139);
        v142 = sub_237A877DC();
        sub_2378BC024(v140, qword_2568207C8);
        sub_2378BC024(v141, qword_2568207C8);
        if ((v142 & 1) != 0)
          break;
        ++v138;
        v137 += v251;
        if (v136 == v138)
        {
          v138 = 0;
          break;
        }
      }
      swift_bridgeObjectRelease();
      v127 = v235;
      v128 = v234;
      v133 = v247;
    }
    else
    {
      v138 = 0;
    }
    v143 = sub_2378DE6A4(v242, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    MEMORY[0x24BDAC7A8](v143);
    *(&v216 - 2) = v128;
    *(&v216 - 1) = v133;
    v144 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v144);
    *(&v216 - 2) = v128;
    *(&v216 - 1) = v133;
    swift_getKeyPath();
    v253 = v138;
    swift_retain();
    sub_237A86708();
    v145 = sub_2378D07D8(v233, v231, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    MEMORY[0x24BDAC7A8](v145);
    *(&v216 - 2) = v128;
    *(&v216 - 1) = v133;
    v146 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v146);
    *(&v216 - 2) = v128;
    *(&v216 - 1) = v133;
    swift_getKeyPath();
    v147 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
    v149 = v148;
    v150 = *v148;
    v151 = swift_isUniquelyReferenced_nonNull_native();
    *v149 = v150;
    if ((v151 & 1) == 0)
    {
      v150 = sub_237895BE4(0, *(_QWORD *)(v150 + 16) + 1, 1, v150);
      *v149 = v150;
    }
    v153 = *(_QWORD *)(v150 + 16);
    v152 = *(_QWORD *)(v150 + 24);
    if (v153 >= v152 >> 1)
    {
      v150 = sub_237895BE4(v152 > 1, v153 + 1, 1, v150);
      *v149 = v150;
    }
    *(_QWORD *)(v150 + 16) = v153 + 1;
    sub_2378D0858(v231, v150 + v248 + v153 * v251, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v147(&v253, 0);
    swift_release();
LABEL_59:
    swift_release();
    goto LABEL_60;
  }
  v85 = *(unsigned __int8 *)(v56 + 80);
  v227 = v85;
  v241 = (v85 + 32) & ~v85;
  v86 = v83 + v241;
  v251 = *(_QWORD *)(v56 + 72);
  v222 = v83;
  swift_bridgeObjectRetain();
  while (1)
  {
    v87 = (uint64_t)v246;
    sub_2378BBFE0(v86, (uint64_t)v246, qword_2568207C8);
    v88 = *(char **)(v247 + 56);
    v89 = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v88)(v87, 0, 1, v248);
    v90 = *(_QWORD *)(*(_QWORD *)v245 + 16);
    if (v90)
    {
      v91 = v240;
      sub_2378D07D8(*(_QWORD *)v245 + v241 + (v90 - 1) * v251, v240, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_2378BBFE0(v91, v81, qword_2568207C8);
      sub_2378DE6A4(v91, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v89 = 0;
    }
    v92 = v248;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v88)(v81, v89, 1, v248);
    v93 = (uint64_t)&v8[*(int *)(v244 + 48)];
    v94 = (uint64_t)v246;
    sub_2378BBFE0((uint64_t)v246, (uint64_t)v8, &qword_2568213D0);
    sub_2378BBFE0(v81, v93, &qword_2568213D0);
    v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48);
    if (v95(v8, 1, v92) == 1)
      break;
    v96 = v238;
    sub_2378BBFE0((uint64_t)v8, v238, &qword_2568213D0);
    if (v95((char *)v93, 1, v92) == 1)
    {
      v97 = v239;
      sub_2378BC024(v239, &qword_2568213D0);
      sub_2378BC024(v94, &qword_2568213D0);
      v98 = v96;
      v81 = v97;
      sub_2378BC024(v98, qword_2568207C8);
      goto LABEL_19;
    }
    v237 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v88;
    v99 = v250;
    sub_237870370(v93, v250, qword_2568207C8);
    sub_237A86594();
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v100 = sub_237A877DC();
    sub_2378BC024(v99, qword_2568207C8);
    v101 = v239;
    sub_2378BC024(v239, &qword_2568213D0);
    sub_2378BC024(v94, &qword_2568213D0);
    v102 = v96;
    v81 = v101;
    sub_2378BC024(v102, qword_2568207C8);
    sub_2378BC024((uint64_t)v8, &qword_2568213D0);
    if ((v100 & 1) != 0)
      goto LABEL_30;
LABEL_20:
    v86 += v251;
    if (!--v84)
      goto LABEL_42;
  }
  sub_2378BC024(v81, &qword_2568213D0);
  sub_2378BC024(v94, &qword_2568213D0);
  if (v95((char *)v93, 1, v92) != 1)
  {
LABEL_19:
    sub_2378BC024((uint64_t)v8, &qword_2568213C8);
    goto LABEL_20;
  }
  v237 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v88;
  sub_2378BC024((uint64_t)v8, &qword_2568213D0);
LABEL_30:
  v103 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v103);
  v104 = v234;
  *(&v216 - 2) = v234;
  v105 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  *(&v216 - 1) = v105;
  v106 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v106);
  *(&v216 - 2) = v104;
  *(&v216 - 1) = v105;
  v240 = v105;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v107 = *(_QWORD *)(v253 + 16);
  v108 = v237;
  if (!v107)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    v56 = v224;
    goto LABEL_43;
  }
  v109 = 0;
  v239 = v253;
  v110 = v253 + v241;
  v111 = v230;
  v112 = v229;
  v113 = v248;
  v246 = (char *)v107;
  while (1)
  {
    v247 = v109;
    sub_2378BBFE0(v110, v112, qword_2568207C8);
    v114 = 1;
    v108(v112, 0, 1, v113);
    v115 = *(_QWORD *)(*(_QWORD *)v245 + 16);
    if (v115)
    {
      v116 = v232;
      sub_2378D07D8(*(_QWORD *)v245 + v241 + (v115 - 1) * v251, v232, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_2378BBFE0(v116, v111, qword_2568207C8);
      sub_2378DE6A4(v116, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v114 = 0;
    }
    v108(v111, v114, 1, v113);
    v117 = v236;
    v118 = v236 + *(int *)(v244 + 48);
    sub_2378BBFE0(v112, v236, &qword_2568213D0);
    sub_2378BBFE0(v111, v118, &qword_2568213D0);
    if (v95((char *)v117, 1, v113) == 1)
      break;
    v119 = v113;
    v120 = v228;
    sub_2378BBFE0(v117, v228, &qword_2568213D0);
    if (v95((char *)v118, 1, v119) == 1)
    {
      v111 = v230;
      sub_2378BC024(v230, &qword_2568213D0);
      v112 = v229;
      sub_2378BC024(v229, &qword_2568213D0);
      sub_2378BC024(v120, qword_2568207C8);
      v113 = v248;
      v107 = (uint64_t)v246;
      goto LABEL_33;
    }
    v121 = v250;
    sub_237870370(v118, v250, qword_2568207C8);
    sub_237A86594();
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v122 = sub_237A877DC();
    sub_2378BC024(v121, qword_2568207C8);
    v111 = v230;
    sub_2378BC024(v230, &qword_2568213D0);
    v112 = v229;
    sub_2378BC024(v229, &qword_2568213D0);
    sub_2378BC024(v120, qword_2568207C8);
    sub_2378BC024(v117, &qword_2568213D0);
    v113 = v248;
    v107 = (uint64_t)v246;
    if ((v122 & 1) != 0)
      goto LABEL_78;
LABEL_34:
    v109 = v247 + 1;
    v110 += v251;
    v108 = v237;
    if (v107 == v247 + 1)
      goto LABEL_42;
  }
  sub_2378BC024(v111, &qword_2568213D0);
  sub_2378BC024(v112, &qword_2568213D0);
  if (v95((char *)v118, 1, v113) != 1)
  {
LABEL_33:
    sub_2378BC024(v236, &qword_2568213C8);
    goto LABEL_34;
  }
  sub_2378BC024(v236, &qword_2568213D0);
LABEL_78:
  swift_bridgeObjectRelease();
  v182 = v220;
  sub_2378D07D8(v233, v220, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v183 = (unint64_t *)v245;
  swift_beginAccess();
  v184 = *v183;
  v185 = swift_isUniquelyReferenced_nonNull_native();
  *v183 = v184;
  if ((v185 & 1) == 0)
  {
    v184 = sub_237895BE4(0, *(_QWORD *)(v184 + 16) + 1, 1, v184);
    *(_QWORD *)v245 = v184;
  }
  v127 = v235;
  v128 = v234;
  v186 = v241;
  v188 = *(_QWORD *)(v184 + 16);
  v187 = *(_QWORD *)(v184 + 24);
  if (v188 >= v187 >> 1)
  {
    v184 = sub_237895BE4(v187 > 1, v188 + 1, 1, v184);
    *(_QWORD *)v245 = v184;
  }
  *(_QWORD *)(v184 + 16) = v188 + 1;
  sub_2378D0858(v182, v184 + v186 + v188 * v251, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v189 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v189);
  v190 = v240;
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v190;
  v191 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v191);
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v190;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v192 = *(_QWORD *)(*(_QWORD *)v245 + 16);
  if (v192)
  {
    v193 = *(_QWORD *)v245 + v186;
    sub_237A86594();
    swift_bridgeObjectRetain();
    v194 = 0;
    v195 = v249;
    v196 = v250;
    while (1)
    {
      sub_2378BBFE0(v193, v196, qword_2568207C8);
      sub_2378BBFE0(v225, v195, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v197 = sub_237A877DC();
      sub_2378BC024(v195, qword_2568207C8);
      sub_2378BC024(v196, qword_2568207C8);
      if ((v197 & 1) != 0)
        break;
      ++v194;
      v193 += v251;
      if (v192 == v194)
      {
        v194 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    v127 = v235;
    v128 = v234;
  }
  else
  {
    v194 = 0;
  }
  v198 = v240;
  v199 = sub_2378DE6A4(v225, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  MEMORY[0x24BDAC7A8](v199);
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v198;
  v200 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v200);
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v198;
  swift_getKeyPath();
  v253 = v194;
  swift_retain();
  sub_237A86708();
  result = sub_2378D07D8(v233, v223, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v201 = v247 + 1;
  if (__OFADD__(v247, 1))
  {
    __break(1u);
    goto LABEL_97;
  }
  MEMORY[0x24BDAC7A8](result);
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v198;
  v202 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v202);
  *(&v216 - 2) = v128;
  *(&v216 - 1) = v198;
  swift_getKeyPath();
  result = sub_237A866F0();
  if (*(_QWORD *)(*(_QWORD *)v203 + 16) < v201)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v204 = (void (*)(uint64_t *, _QWORD))result;
  result = v223;
  if ((v201 & 0x8000000000000000) == 0)
  {
    v205 = v221;
    sub_2378D0858(v223, v221, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    sub_23790506C(v201, v201, v205);
    v204(&v253, 0);
    swift_release();
    goto LABEL_59;
  }
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
  return result;
}

uint64_t sub_2378FA2B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t *, _QWORD);
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91[5];

  v75 = a3;
  v87 = a2;
  v89 = (char *)a1;
  v4 = sub_237A86E94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v8);
  v79 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v76 = (uint64_t)&v70 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  v85 = *(_QWORD *)(v15 - 8);
  v86 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v80 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213B8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v84 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v70 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v70 - v26;
  v28 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
  result = swift_beginAccess();
  v83 = v28;
  v30 = *(_QWORD *)v28;
  v31 = *(_QWORD *)(*(_QWORD *)v28 + 16);
  if (v31)
  {
    v70 = v7;
    v71 = v5;
    v72 = v4;
    v77 = v10;
    v82 = v3;
    v78 = v21;
    v73 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v32 = v30 + v73;
    v33 = v30;
    sub_237A86594();
    v74 = v11;
    v90 = *(_QWORD *)(v11 + 72);
    v81 = v33;
    swift_bridgeObjectRetain();
    v34 = MEMORY[0x24BDCEA98];
    while (1)
    {
      sub_2378BBFE0(v32, (uint64_t)v27, qword_2568207C8);
      sub_2378BBFE0((uint64_t)v89, (uint64_t)v25, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v34);
      v35 = sub_237A877DC();
      sub_2378BC024((uint64_t)v25, qword_2568207C8);
      sub_2378BC024((uint64_t)v27, qword_2568207C8);
      if ((v35 & 1) != 0)
        break;
      v32 += v90;
      if (!--v31)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v78;
    v37 = v82;
    v38 = (uint64_t)v89;
    sub_2378FABF8(v87, v82, (uint64_t)v89, (uint64_t)v78);
    v39 = v84;
    sub_2378BBFE0(v36, v84, &qword_2568213B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v39, 1, v86) == 1)
    {
      v40 = sub_2378BC024(v39, &qword_2568213B8);
      MEMORY[0x24BDAC7A8](v40);
      *(&v70 - 2) = (char *)v38;
      v41 = v83;
      swift_beginAccess();
      result = sub_237905240((uint64_t (*)(unint64_t))sub_23790BE28);
      v87 = 0;
      v42 = *(_QWORD *)(*(_QWORD *)v41 + 16);
      if (v42 < result)
      {
        __break(1u);
      }
      else
      {
        sub_237906984(result, v42);
        v43 = swift_endAccess();
        MEMORY[0x24BDAC7A8](v43);
        v44 = (char *)v77;
        *(&v70 - 2) = (char *)v77;
        v45 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
        *(&v70 - 1) = (char *)v45;
        KeyPath = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](KeyPath);
        *(&v70 - 2) = v44;
        *(&v70 - 1) = (char *)v45;
        v86 = v45;
        swift_getKeyPath();
        sub_237A866FC();
        swift_release();
        swift_release();
        v47 = *(_QWORD *)(*(_QWORD *)v83 + 16);
        if (v47)
        {
          v48 = *(_QWORD *)v83 + v73;
          swift_bridgeObjectRetain();
          v49 = 0;
          while (1)
          {
            sub_2378BBFE0(v48, (uint64_t)v27, qword_2568207C8);
            sub_2378BBFE0(v88, (uint64_t)v25, qword_2568207C8);
            v50 = sub_237A877DC();
            sub_2378BC024((uint64_t)v25, qword_2568207C8);
            sub_2378BC024((uint64_t)v27, qword_2568207C8);
            if ((v50 & 1) != 0)
              break;
            ++v49;
            v48 += v90;
            if (v47 == v49)
            {
              v49 = 0;
              break;
            }
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v49 = 0;
        }
        v56 = (uint64_t)v78;
        v57 = sub_2378DE6A4(v88, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        MEMORY[0x24BDAC7A8](v57);
        v58 = (char *)v77;
        v59 = (char *)v86;
        *(&v70 - 2) = (char *)v77;
        *(&v70 - 1) = v59;
        v60 = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](v60);
        *(&v70 - 2) = v58;
        *(&v70 - 1) = v59;
        swift_getKeyPath();
        v91[0] = v49;
        swift_retain();
        v61 = sub_237A86708();
        v62 = MEMORY[0x24BDAC7A8](v61);
        *(&v70 - 2) = v89;
        MEMORY[0x24BDAC7A8](v62);
        *(&v70 - 2) = v58;
        *(&v70 - 1) = v59;
        v63 = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](v63);
        *(&v70 - 2) = v58;
        *(&v70 - 1) = v59;
        swift_getKeyPath();
        v64 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
        v66 = v65;
        result = sub_237905240((uint64_t (*)(unint64_t))sub_23790C2E0);
        v67 = *(_QWORD *)(*(_QWORD *)v66 + 16);
        if (v67 >= result)
        {
          sub_237906984(result, v67);
          v64(v91, 0);
          swift_release();
          swift_release();
          return sub_2378BC024(v56, &qword_2568213B8);
        }
      }
      __break(1u);
    }
    else
    {
      v51 = v80;
      sub_237870370(v39, v80, &qword_256820D40);
      v52 = v79;
      sub_2378FBA90(v51, v79);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v52, 1, v77) == 1)
      {
        sub_2378BC024(v51, &qword_256820D40);
        sub_2378BC024(v36, &qword_2568213B8);
        return sub_2378BC024(v52, &qword_2568207A8);
      }
      else
      {
        v53 = v76;
        v54 = sub_2378D0858(v52, v76, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v55 = v75;
        if ((v75 & 1) != 0)
          v54 = swift_retain();
        v68 = v71;
        MEMORY[0x24BDAC7A8](v54);
        *(&v70 - 4) = (char *)v38;
        *((_BYTE *)&v70 - 24) = v55 & 1;
        *(&v70 - 2) = (char *)v37;
        *(&v70 - 1) = (char *)v53;
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        v69 = v70;
        sub_237A86E7C();
        sub_237A8690C();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v72);
        sub_2378BC024(v51, &qword_256820D40);
        sub_2378BC024(v36, &qword_2568213B8);
        sub_2378DE6A4(v53, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_2378FABF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v62 = a3;
  v64 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v56 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v58 = (uint64_t)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v56 - v15;
  v17 = type metadata accessor for Component();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v60 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v56 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v56 - v24;
  sub_2378BBFE0(a1, (uint64_t)v16, &qword_2568207A8);
  v59 = v18;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v63 = v17;
  v27 = v26(v16, 1, v17);
  v61 = a2;
  if (v27 == 1)
  {
    sub_2378BC024((uint64_t)v16, &qword_2568207A8);
    v28 = v62;
  }
  else
  {
    v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
    v29 = v64;
    sub_2378D0858((uint64_t)v16, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v30 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 144));
    swift_beginAccess();
    v31 = *v30;
    v32 = *(_QWORD *)(*v30 + 16);
    if (v32)
    {
      v65 = v25;
      v33 = v59;
      v34 = v31 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
      sub_237A86594();
      v35 = *(_QWORD *)(v33 + 72);
      v56[1] = v31;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_2378D07D8(v34, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        sub_2378BBFE0((uint64_t)v23, (uint64_t)v11, qword_2568207C8);
        sub_2378BBFE0((uint64_t)v65, (uint64_t)v9, qword_2568207C8);
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v36 = sub_237A877DC();
        sub_2378BC024((uint64_t)v9, qword_2568207C8);
        sub_2378BC024((uint64_t)v11, qword_2568207C8);
        if ((v36 & 1) != 0)
          break;
        sub_2378DE6A4((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v34 += v35;
        if (!--v32)
        {
          v37 = 1;
          v29 = v64;
          v25 = v65;
          v28 = v62;
          v38 = v58;
          goto LABEL_10;
        }
      }
      v38 = v58;
      sub_2378D0858((uint64_t)v23, v58, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v37 = 0;
      v29 = v64;
      v25 = v65;
      v28 = v62;
LABEL_10:
      v39 = v57;
    }
    else
    {
      swift_bridgeObjectRetain();
      v37 = 1;
      v28 = v62;
      v39 = v57;
      v38 = v58;
    }
    v40 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v38, v37, 1, v63);
    swift_bridgeObjectRelease();
    LODWORD(v40) = v39(v38, 1, v40);
    sub_2378BC024(v38, &qword_2568207A8);
    if ((_DWORD)v40 != 1)
    {
      sub_2378BBFE0((uint64_t)v25, (uint64_t)v11, qword_2568207C8);
      sub_2378BBFE0(v28, (uint64_t)v9, qword_2568207C8);
      sub_237A86594();
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v41 = sub_237A877DC();
      sub_2378BC024((uint64_t)v9, qword_2568207C8);
      sub_2378BC024((uint64_t)v11, qword_2568207C8);
      if ((v41 & 1) == 0)
      {
        sub_2378BBFE0((uint64_t)v25, v29, qword_2568207C8);
        sub_2378DE6A4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v29, 0, 2, v55);
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
        v51 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
        v52 = v29;
        return v51(v52, 0, 1, v50);
      }
    }
    sub_2378DE6A4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
  v42 = sub_2378BBFE0(v28, (uint64_t)v11, qword_2568207C8);
  MEMORY[0x24BDAC7A8](v42);
  v43 = v63;
  v56[-2] = v63;
  v44 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  v56[-1] = v44;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v56[-2] = v43;
  v56[-1] = v44;
  swift_getKeyPath();
  v46 = (uint64_t)v60;
  sub_237A866FC();
  swift_release();
  swift_release();
  sub_2378BBFE0(v46, (uint64_t)v9, qword_2568207C8);
  sub_2378DE6A4(v46, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v47 = sub_237A877DC();
  sub_2378BC024((uint64_t)v9, qword_2568207C8);
  sub_2378BC024((uint64_t)v11, qword_2568207C8);
  if ((v47 & 1) == 0)
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v64, 1, 1, v53);
  }
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v49 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v64, 2, 2, v48);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  v51 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v52 = v49;
  return v51(v52, 0, 1, v50);
}

uint64_t sub_2378FB254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v11 - v8;
  sub_2378BBFE0(a1, (uint64_t)&v11 - v8, qword_2568207C8);
  sub_2378BBFE0(a2, (uint64_t)v7, qword_2568207C8);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LOBYTE(a2) = sub_237A877DC();
  sub_2378BC024((uint64_t)v7, qword_2568207C8);
  sub_2378BC024((uint64_t)v9, qword_2568207C8);
  return a2 & 1;
}

uint64_t sub_2378FB364(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t *v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[4];
  uint64_t v69;

  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v59 - v13;
  v15 = type metadata accessor for Component();
  v60 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v65 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v69 = (uint64_t)&v59 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v59 - v20;
  sub_2378D07D8(a4, (uint64_t)&v59 - v20, v22);
  sub_2378F6DAC((uint64_t)v21);
  v67 = a1;
  v23 = (uint64_t *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 144));
  swift_beginAccess();
  result = sub_237905240((uint64_t (*)(unint64_t))sub_23790C2E0);
  v25 = *(_QWORD *)(*v23 + 16);
  if (v25 < result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  v62 = v4;
  v63 = a1;
  v61 = a2;
  sub_237906984(result, v25);
  v26 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v26);
  *(&v59 - 2) = v15;
  v27 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  *(&v59 - 1) = v27;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v64 = v15;
  *(&v59 - 2) = v15;
  *(&v59 - 1) = v27;
  v66 = v27;
  swift_getKeyPath();
  v29 = v69;
  sub_237A866FC();
  swift_release();
  swift_release();
  v30 = *v23;
  v31 = *(_QWORD *)(*v23 + 16);
  if (v31)
  {
    v59 = a3;
    v32 = v60;
    v33 = v30 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    sub_237A86594();
    v34 = *(_QWORD *)(v32 + 72);
    v60 = v30;
    swift_bridgeObjectRetain();
    v35 = 0;
    while (1)
    {
      sub_2378BBFE0(v33, (uint64_t)v14, qword_2568207C8);
      sub_2378BBFE0(v69, (uint64_t)v12, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v36 = sub_237A877DC();
      sub_2378BC024((uint64_t)v12, qword_2568207C8);
      sub_2378BC024((uint64_t)v14, qword_2568207C8);
      if ((v36 & 1) != 0)
        break;
      ++v35;
      v33 += v34;
      if (v31 == v35)
      {
        v35 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    a3 = v59;
    v37 = v64;
    v38 = (uint64_t)v65;
    v29 = v69;
  }
  else
  {
    v35 = 0;
    v37 = v64;
    v38 = (uint64_t)v65;
  }
  v39 = sub_2378DE6A4(v29, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  MEMORY[0x24BDAC7A8](v39);
  v40 = v66;
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v40;
  v41 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v41);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v40;
  swift_getKeyPath();
  v68[0] = v35;
  swift_retain();
  v42 = sub_237A86708();
  v43 = MEMORY[0x24BDAC7A8](v42);
  *(&v59 - 2) = v63;
  MEMORY[0x24BDAC7A8](v43);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v40;
  v44 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v44);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v40;
  swift_getKeyPath();
  v45 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
  v47 = v46;
  result = sub_237905240((uint64_t (*)(unint64_t))sub_23790C2E0);
  v48 = *(_QWORD *)(*(_QWORD *)v47 + 16);
  if (v48 < result)
    goto LABEL_16;
  sub_237906984(result, v48);
  v45(v68, 0);
  swift_release();
  v49 = swift_release();
  v50 = 0;
  v51 = v61;
  if ((v61 & 1) != 0)
    v50 = *(_BYTE *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 104)) ^ 1;
  MEMORY[0x24BDAC7A8](v49);
  v52 = v66;
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  v53 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v53);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  swift_getKeyPath();
  LOBYTE(v68[0]) = v50 & 1;
  swift_retain();
  v54 = sub_237A86708();
  MEMORY[0x24BDAC7A8](v54);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  v55 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v55);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  swift_getKeyPath();
  LOBYTE(v68[0]) = v51 & 1;
  swift_retain();
  v56 = sub_237A86708();
  MEMORY[0x24BDAC7A8](v56);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  v57 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v57);
  *(&v59 - 2) = v37;
  *(&v59 - 1) = v52;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v58 = *(void (**)(uint64_t))(a3 + *(_QWORD *)(*(_QWORD *)a3 + 112));
  if (v58)
  {
    swift_retain();
    v58(v38);
    sub_2378A2C04((uint64_t)v58);
  }
  return sub_2378DE6A4(v38, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_2378FBA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void (*v83)(_QWORD *, _QWORD);
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _QWORD);
  unint64_t *v89;
  unint64_t *v90;
  unint64_t v91;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD *, _QWORD);
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[5];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213B0);
  MEMORY[0x24BDAC7A8](v6);
  v124 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  MEMORY[0x24BDAC7A8](v8);
  v126 = (unint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v127 = (unint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v118 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v118 - v16;
  v18 = (_QWORD *)type metadata accessor for Component();
  v133 = *(v18 - 1);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v130 = (uint64_t)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v129 = (uint64_t)&v118 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v123 = (uint64_t)&v118 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v122 = (uint64_t)&v118 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v121 = (uint64_t)&v118 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v118 - v30;
  v136 = v29;
  v33 = sub_23786FAA0(&qword_256820D30, v32, (uint64_t)&protocol conformance descriptor for Component);
  v137 = v33;
  swift_getKeyPath();
  v134 = v18;
  v135 = v33;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v34 = *(_QWORD *)(v138[0] + 16);
  v35 = swift_bridgeObjectRelease();
  if (v34 < 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v133 + 56))(a2, 1, 1, v18);
  v120 = a2;
  MEMORY[0x24BDAC7A8](v35);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  swift_getKeyPath();
  v132 = v31;
  sub_237A866FC();
  swift_release();
  v37 = swift_release();
  MEMORY[0x24BDAC7A8](v37);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  v38 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v38);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v39 = *(_QWORD *)(v138[0] + 16);
  v131 = v3;
  v125 = v18;
  v128 = v33;
  if (v39)
  {
    v119 = a1;
    v40 = v133;
    v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v118 = v138[0];
    v42 = v138[0] + v41;
    sub_237A86594();
    v43 = 0;
    v44 = *(_QWORD *)(v40 + 72);
    while (1)
    {
      sub_2378BBFE0(v42, (uint64_t)v17, qword_2568207C8);
      sub_2378BBFE0((uint64_t)v132, (uint64_t)v15, qword_2568207C8);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v45 = sub_237A877DC();
      sub_2378BC024((uint64_t)v15, qword_2568207C8);
      sub_2378BC024((uint64_t)v17, qword_2568207C8);
      if ((v45 & 1) != 0)
        break;
      ++v43;
      v42 += v44;
      if (v39 == v43)
      {
        swift_bridgeObjectRelease();
        v43 = 0;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    v18 = v125;
    v33 = v128;
    a1 = v119;
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = 0;
  }
  sub_2378DE6A4((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v47 = v126;
  sub_2378BBFE0(a1, v126, &qword_256820D40);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 2, v48);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
      v49 = -1;
    else
      v49 = 1;
    goto LABEL_34;
  }
  v50 = sub_237870370(v47, v127, qword_2568207C8);
  MEMORY[0x24BDAC7A8](v50);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  v51 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v51);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v52 = *(_QWORD *)(v138[0] + 16);
  if (!v52)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    result = sub_2378BC024(v127, qword_2568207C8);
    v49 = 0;
LABEL_34:
    v119 = v49;
    v70 = v43 + v49;
    v71 = __OFADD__(v43, v49);
    if (!__OFADD__(v43, v49))
    {
      if (v70 < 0)
        goto LABEL_45;
      v72 = v43 + v49;
      MEMORY[0x24BDAC7A8](result);
      *(&v118 - 2) = (uint64_t)v18;
      *(&v118 - 1) = v33;
      v73 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v73);
      *(&v118 - 2) = (uint64_t)v18;
      *(&v118 - 1) = v33;
      swift_getKeyPath();
      sub_237A866FC();
      swift_release();
      swift_release();
      v74 = *(_QWORD *)(v138[0] + 16);
      result = swift_bridgeObjectRelease();
      v75 = v72;
      if (v72 < v74)
        goto LABEL_64;
      v76 = v72 + 1;
      if (__OFADD__(v72, 1))
        goto LABEL_76;
      MEMORY[0x24BDAC7A8](result);
      *(&v118 - 2) = (uint64_t)v18;
      *(&v118 - 1) = v33;
      v77 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v77);
      *(&v118 - 2) = (uint64_t)v18;
      *(&v118 - 1) = v78;
      swift_getKeyPath();
      sub_237A866FC();
      swift_release();
      swift_release();
      v79 = *(_QWORD *)(v138[0] + 16);
      result = swift_bridgeObjectRelease();
      v75 = v72;
      if (v76 == v79)
        goto LABEL_64;
      v70 = v76 - v79;
      v33 = v128;
      while (1)
      {
LABEL_45:
        v132 = (char *)v70;
        if (v70 < 0)
        {
          MEMORY[0x24BDAC7A8](result);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          v97 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v97);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          swift_getKeyPath();
          result = sub_237A866F0();
          v99 = *v98;
          if (!*(_QWORD *)(*v98 + 16))
            goto LABEL_70;
          v18 = (_QWORD *)result;
          v100 = v98;
          result = swift_isUniquelyReferenced_nonNull_native();
          *v100 = v99;
          if ((result & 1) != 0)
          {
            v101 = *(_QWORD *)(v99 + 16);
            if (!v101)
              goto LABEL_60;
          }
          else
          {
            result = sub_23793E880(v99);
            v99 = result;
            *v100 = result;
            v101 = *(_QWORD *)(result + 16);
            if (!v101)
            {
LABEL_60:
              __break(1u);
LABEL_61:
              v75 = v43 + v119;
              v71 = __OFADD__(v43, v119);
LABEL_64:
              if (!v71)
              {
                v113 = v75;
                MEMORY[0x24BDAC7A8](result);
                v114 = v128;
                *(&v118 - 2) = (uint64_t)v18;
                *(&v118 - 1) = v114;
                v115 = swift_getKeyPath();
                MEMORY[0x24BDAC7A8](v115);
                *(&v118 - 2) = (uint64_t)v18;
                *(&v118 - 1) = v114;
                swift_getKeyPath();
                sub_237A866FC();
                swift_release();
                result = swift_release();
                if ((v113 & 0x8000000000000000) == 0)
                {
                  if (v113 < *(_QWORD *)(v138[0] + 16))
                  {
                    v116 = v133;
                    v117 = v120;
                    sub_2378D07D8(v138[0]+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v133 + 72) * v113, v120, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                    swift_bridgeObjectRelease();
                    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v116 + 56))(v117, 0, 1, v18);
                  }
LABEL_75:
                  __break(1u);
LABEL_76:
                  __break(1u);
LABEL_77:
                  __break(1u);
                  goto LABEL_78;
                }
LABEL_74:
                __break(1u);
                goto LABEL_75;
              }
LABEL_73:
              __break(1u);
              goto LABEL_74;
            }
          }
          v102 = v33;
          v103 = v101 - 1;
          v104 = v122;
          sub_2378D0858(v99+ ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(_QWORD *)(v133 + 72) * (v101 - 1), v122, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          *(_QWORD *)(v99 + 16) = v103;
          *v100 = v99;
          v105 = v104;
          v106 = v121;
          sub_2378D0858(v105, v121, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          ((void (*)(_QWORD *, _QWORD))v18)(v138, 0);
          swift_release();
          swift_release();
          v107 = v123;
          v108 = sub_2378D07D8(v106, v123, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          MEMORY[0x24BDAC7A8](v108);
          v18 = v125;
          *(&v118 - 2) = (uint64_t)v125;
          *(&v118 - 1) = v102;
          v109 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v109);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v102;
          swift_getKeyPath();
          v110 = (void (*)(_QWORD *, _QWORD))sub_237A866F0();
          v111 = v107;
          v112 = v124;
          sub_2378D0858(v111, v124, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          sub_23790506C(0, 0, v112);
          v110(v138, 0);
          swift_release();
          swift_release();
          result = sub_2378DE6A4(v106, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v64 = __OFADD__(v43++, 1);
          if (v64)
            goto LABEL_71;
          v96 = 1;
        }
        else
        {
          if (!v70)
            goto LABEL_61;
          MEMORY[0x24BDAC7A8](result);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          v80 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v80);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          swift_getKeyPath();
          result = sub_237A866F0();
          v82 = *v81;
          if (!*(_QWORD *)(*v81 + 16))
          {
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            break;
          }
          v83 = (void (*)(_QWORD *, _QWORD))result;
          v84 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
          v126 = v43;
          v127 = v84;
          v85 = v129;
          sub_2378D07D8(v82 + v84, v129, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          sub_237906984(0, 1);
          v83(v138, 0);
          swift_release();
          swift_release();
          v86 = sub_2378D07D8(v85, v130, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          MEMORY[0x24BDAC7A8](v86);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          v87 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v87);
          *(&v118 - 2) = (uint64_t)v18;
          *(&v118 - 1) = v33;
          swift_getKeyPath();
          v88 = (void (*)(_QWORD *, _QWORD))sub_237A866F0();
          v90 = v89;
          v91 = *v89;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v90 = v91;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v91 = sub_237895BE4(0, *(_QWORD *)(v91 + 16) + 1, 1, v91);
            *v90 = v91;
          }
          v93 = v126;
          v95 = *(_QWORD *)(v91 + 16);
          v94 = *(_QWORD *)(v91 + 24);
          if (v95 >= v94 >> 1)
          {
            v91 = sub_237895BE4(v94 > 1, v95 + 1, 1, v91);
            *v90 = v91;
          }
          *(_QWORD *)(v91 + 16) = v95 + 1;
          sub_2378D0858(v130, v91 + v127 + *(_QWORD *)(v133 + 72) * v95, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v88(v138, 0);
          swift_release();
          swift_release();
          result = sub_2378DE6A4(v129, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v64 = __OFSUB__(v93, 1);
          v43 = v93 - 1;
          if (v64)
            goto LABEL_69;
          v96 = -1;
          v18 = v125;
        }
        v70 = (uint64_t)&v132[v96];
        v33 = v128;
        if (!&v132[v96])
          goto LABEL_61;
      }
    }
    __break(1u);
    goto LABEL_73;
  }
  v53 = v133;
  v54 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
  v132 = (char *)v138[0];
  v55 = v138[0] + v54;
  sub_237A86594();
  v56 = 0;
  v57 = *(_QWORD *)(v53 + 72);
  while (1)
  {
    sub_2378BBFE0(v55, (uint64_t)v17, qword_2568207C8);
    sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v58 = sub_237A877DC();
    sub_2378BC024((uint64_t)v17, qword_2568207C8);
    if ((v58 & 1) != 0)
      break;
    --v56;
    v55 += v57;
    if (-v52 == v56)
    {
      swift_bridgeObjectRelease();
      v18 = v125;
      v33 = v128;
      goto LABEL_21;
    }
  }
  v59 = swift_bridgeObjectRelease();
  v60 = -(uint64_t)(v43 + v56);
  MEMORY[0x24BDAC7A8](v59);
  v18 = v125;
  v33 = v128;
  *(&v118 - 2) = (uint64_t)v125;
  *(&v118 - 1) = v33;
  v61 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v61);
  *(&v118 - 2) = (uint64_t)v18;
  *(&v118 - 1) = v33;
  swift_getKeyPath();
  if (-v56 >= v43)
  {
    sub_237A866FC();
    swift_release();
    swift_release();
    v67 = *(_QWORD *)(v138[0] + 16);
    result = swift_bridgeObjectRelease();
    v64 = __OFSUB__(v60, v67);
    v66 = v60 - v67;
    if (!v64)
      goto LABEL_27;
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  sub_237A866FC();
  swift_release();
  swift_release();
  v62 = *(_QWORD *)(v138[0] + 16);
  result = swift_bridgeObjectRelease();
  v63 = v62 - v56;
  if (__OFADD__(-v56, v62))
    goto LABEL_77;
  v64 = __OFSUB__(v63, v43);
  v65 = v63 - v43;
  if (v64)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v66 = -(uint64_t)(v43 + v56);
  v60 = v65;
LABEL_27:
  v68 = v66;
  if (v66 < 0)
  {
    v68 = -v66;
    if (__OFSUB__(0, v66))
      goto LABEL_80;
  }
  v69 = v60;
  if ((v60 & 0x8000000000000000) == 0 || (v69 = -v60, !__OFSUB__(0, v60)))
  {
    result = sub_2378BC024(v127, qword_2568207C8);
    if (v68 >= v69)
      v49 = v60;
    else
      v49 = v66;
    goto LABEL_34;
  }
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_2378FCA9C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  char v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;

  v3 = v2;
  v33 = a2;
  v5 = sub_237A86E94();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Component();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v31 - v21;
  sub_2378FBA90(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_2378BC024((uint64_t)v15, &qword_2568207A8);
  v32 = v5;
  sub_2378D0858((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v24 = sub_2378BBFE0((uint64_t)v22, (uint64_t)v12, qword_2568207C8);
  MEMORY[0x24BDAC7A8](v24);
  *(&v31 - 2) = v16;
  v25 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  *(&v31 - 1) = v25;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v31 - 2) = v16;
  *(&v31 - 1) = v25;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  sub_2378BBFE0((uint64_t)v20, (uint64_t)v10, qword_2568207C8);
  sub_2378DE6A4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v27 = sub_237A877DC();
  sub_2378BC024((uint64_t)v10, qword_2568207C8);
  sub_2378BC024((uint64_t)v12, qword_2568207C8);
  if ((v27 & 1) != 0)
    return sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v28 = v33;
  if ((v33 & 1) != 0)
    swift_retain();
  v29 = v34;
  v30 = sub_237A86E88();
  MEMORY[0x24BDAC7A8](v30);
  *((_BYTE *)&v31 - 32) = v28 & 1;
  *(&v31 - 3) = v3;
  *(&v31 - 2) = (uint64_t)v22;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_237A8690C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v32);
  sub_2378DE6A4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  return swift_release();
}

uint64_t sub_2378FCEC4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *);
  _BYTE v23[32];

  v6 = type metadata accessor for Component();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v23[-v10];
  sub_2378D07D8(a3, (uint64_t)&v23[-v10], v12);
  v13 = sub_2378F6DAC((uint64_t)v11);
  if ((a1 & 1) != 0)
    v14 = *(_BYTE *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 104)) ^ 1;
  else
    v14 = 0;
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)&v23[-16] = v6;
  v15 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  *(_QWORD *)&v23[-8] = v15;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(_QWORD *)&v23[-16] = v6;
  *(_QWORD *)&v23[-8] = v15;
  swift_getKeyPath();
  v23[31] = v14 & 1;
  swift_retain();
  v17 = sub_237A86708();
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)&v23[-16] = v6;
  *(_QWORD *)&v23[-8] = v15;
  v18 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)&v23[-16] = v6;
  *(_QWORD *)&v23[-8] = v15;
  swift_getKeyPath();
  v23[30] = a1 & 1;
  swift_retain();
  v19 = sub_237A86708();
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)&v23[-16] = v6;
  *(_QWORD *)&v23[-8] = v15;
  v20 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)&v23[-16] = v6;
  *(_QWORD *)&v23[-8] = v15;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  v21 = *(void (**)(_BYTE *))(a2 + *(_QWORD *)(*(_QWORD *)a2 + 112));
  if (v21)
  {
    swift_retain();
    v21(v9);
    sub_2378A2C04((uint64_t)v21);
  }
  return sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_2378FD1D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v0 = type metadata accessor for Component();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x24BDAC7A8](result);
    *(&v6 - 2) = v0;
    v4 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
    *(&v6 - 1) = v4;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v6 - 2) = v0;
    *(&v6 - 1) = v4;
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    sub_2378FD874((uint64_t)v2);
    swift_release();
    return sub_2378DE6A4((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
  return result;
}

uint64_t sub_2378FD348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t KeyPath;
  _QWORD v8[5];
  char v9;

  v0 = sub_237A86E94();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Component();
  v8[2] = v4;
  v5 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  v8[3] = v5;
  swift_getKeyPath();
  v8[0] = v4;
  v8[1] = v5;
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  result = swift_release();
  if ((v9 & 1) == 0)
  {
    MEMORY[0x24BDAC7A8](result);
    v8[-2] = v4;
    v8[-1] = v5;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v8[-2] = v4;
    v8[-1] = v5;
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    result = swift_release();
    if (v9 != 1)
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_237A86E7C();
      sub_237A8690C();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2378FD58C()
{
  type metadata accessor for Component();
  sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A86708();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378FD6B8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_237A874D0();
    swift_release();
    sub_237A86918();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2378FD768()
{
  type metadata accessor for Component();
  sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A86708();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2378FD874(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v2 = *(void (**)(uint64_t))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  if (v2)
  {
    swift_retain();
    v2(a1);
    sub_2378A2C04((uint64_t)v2);
  }
  swift_beginAccess();
  swift_retain();
  sub_237A874D0();
  swift_release();
  sub_237A86918();
  return swift_release();
}

uint64_t sub_2378FD978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237992D24();
  *a1 = result;
  return result;
}

uint64_t sub_2378FD9A0()
{
  swift_bridgeObjectRetain();
  return sub_237992DAC();
}

uint64_t sub_2378FD9C8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2378FDA98(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2378BF380((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2378BF380((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_2378FDA98(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_237A87E30();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2378FDC50(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_237A87FE0();
  if (!v8)
  {
    sub_237A880A0();
    __break(1u);
LABEL_17:
    result = sub_237A880F4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2378FDC50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2378FDCE4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2378FDF34(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2378FDF34(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2378FDCE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2378FDE58(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_237A87F50();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_237A880A0();
      __break(1u);
LABEL_10:
      v2 = sub_237A87908();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_237A880F4();
    __break(1u);
LABEL_14:
    result = sub_237A880A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2378FDE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2378FDEBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_237A87944();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B81E580](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_2378FDF34(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378FE080(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t, _QWORD *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(uint64_t, _QWORD *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_2379030F8((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_2379030F8((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x23B81FB7C](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_2378FE1F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  v8 = sub_237A88610();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_237A8840C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_237A8840C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2379023B0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2378FE39C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  sub_237A885D4();
  sub_237A87710();
  v9 = sub_237A88610();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = *(_QWORD *)(v8 + 48);
    v14 = (_QWORD *)(v13 + 16 * v11);
    v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (sub_237A8840C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v16 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v11);
      v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    v19 = ~v10;
    while (1)
    {
      v11 = (v11 + 1) & v19;
      if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        break;
      v20 = (_QWORD *)(v13 + 16 * v11);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_237A8840C() & 1) != 0)
        goto LABEL_7;
    }
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v4;
  *v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_237902548(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2378FE528(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v5 = v4;
  v10 = *v5;
  sub_237A885D4();
  v34 = a4;
  swift_bridgeObjectRetain();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v11 = sub_237A88610();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v31 = v5;
  v32 = a1;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v33 = ~v12;
    while (1)
    {
      v14 = *(_QWORD *)(v10 + 48) + 24 * v13;
      v15 = *(_QWORD *)v14;
      v16 = *(_QWORD *)(v14 + 8);
      v17 = *(_BYTE *)(v14 + 16);
      sub_23787A11C(*(_QWORD *)v14, v16, v17);
      Theme.ColorID.rawValue.getter();
      v19 = v18;
      v21 = v20;
      Theme.ColorID.rawValue.getter();
      if (v19 == v23 && v21 == v22)
        break;
      v24 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787A134(v15, v16, v17);
      if ((v24 & 1) != 0)
        goto LABEL_9;
      v13 = (v13 + 1) & v33;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease_n();
    sub_23787A134(v15, v16, v17);
LABEL_9:
    swift_bridgeObjectRelease();
    sub_23787A134(a2, a3, v34);
    v27 = *(_QWORD *)(*v31 + 48) + 24 * v13;
    v28 = *(_QWORD *)v27;
    v29 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)v32 = *(_QWORD *)v27;
    *(_QWORD *)(v32 + 8) = v29;
    v30 = *(_BYTE *)(v27 + 16);
    *(_BYTE *)(v32 + 16) = v30;
    sub_23787A11C(v28, v29, v30);
    return 0;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = *v31;
    *v31 = 0x8000000000000000;
    sub_23787A11C(a2, a3, v34);
    sub_2379026E0(a2, a3, v34, v13, isUniquelyReferenced_nonNull_native);
    *v31 = v35;
    swift_bridgeObjectRelease();
    *(_QWORD *)v32 = a2;
    *(_QWORD *)(v32 + 8) = a3;
    result = 1;
    *(_BYTE *)(v32 + 16) = v34;
  }
  return result;
}

uint64_t sub_2378FE7B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  __int128 v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];

  v4 = *v2;
  sub_237A885D4();
  v5 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v41 = *(_OWORD *)(a2 + 24);
  v42[0] = v5;
  v35 = a2;
  v40 = *(_OWORD *)(a2 + 40);
  v7 = v5;
  swift_bridgeObjectRetain();
  sub_23790B86C((uint64_t)v42);
  sub_237A87710();
  sub_23790B894((uint64_t)v42);
  swift_bridgeObjectRetain();
  sub_237878474((uint64_t)v39, v6);
  swift_bridgeObjectRelease();
  v8 = v41;
  sub_23790B86C((uint64_t)&v41);
  sub_237A87710();
  sub_23790B894((uint64_t)&v41);
  v9 = v40;
  sub_23790B86C((uint64_t)&v40);
  sub_237A87710();
  sub_23790B894((uint64_t)&v40);
  v10 = sub_237A88610();
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  v38 = v4;
  v13 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = *(_QWORD *)v34;
    *(_QWORD *)v34 = 0x8000000000000000;
    sub_2378C00C4(v35);
    sub_237902934(v35, v12, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v34 = v39[0];
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v35;
    *(_OWORD *)(a1 + 16) = v25;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v35 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(v35 + 48);
    return 1;
  }
  v37 = ~v11;
  while (1)
  {
    v14 = (_QWORD *)(*(_QWORD *)(v38 + 48) + 56 * v12);
    v16 = v14[2];
    v15 = v14[3];
    v17 = v14[4];
    v18 = v14[5];
    v19 = v14[6];
    v20 = *v14 == (_QWORD)v7 && v14[1] == *((_QWORD *)&v7 + 1);
    if (!v20 && (sub_237A8840C() & 1) == 0)
      goto LABEL_4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_2379B6854(v16, v6) & 1) == 0
      || (v15 == (_QWORD)v8 ? (v21 = v17 == *((_QWORD *)&v8 + 1)) : (v21 = 0), !v21 && (sub_237A8840C() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v18 == (_QWORD)v9 && v19 == *((_QWORD *)&v9 + 1))
      break;
    v23 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_24;
LABEL_4:
    v12 = (v12 + 1) & v37;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  sub_2378CF92C(v35);
  v27 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v34 + 48) + 56 * v12);
  v28 = v27[1];
  v30 = v27[2];
  v29 = v27[3];
  v32 = v27[4];
  v31 = v27[5];
  v33 = v27[6];
  *(_QWORD *)a1 = *v27;
  *(_QWORD *)(a1 + 8) = v28;
  *(_QWORD *)(a1 + 16) = v30;
  *(_QWORD *)(a1 + 24) = v29;
  *(_QWORD *)(a1 + 32) = v32;
  *(_QWORD *)(a1 + 40) = v31;
  *(_QWORD *)(a1 + 48) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_2378FEB40(_QWORD *a1, void *a2)
{
  return sub_2378FEB78(a1, a2, (unint64_t *)&unk_2568292F0, 0x24BE16A90, &qword_256821378);
}

uint64_t sub_2378FEB5C(_QWORD *a1, void *a2)
{
  return sub_2378FEB78(a1, a2, (unint64_t *)&unk_2568292E0, 0x24BE16A88, &qword_256821380);
}

uint64_t sub_2378FEB78(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_237A87ED8();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_2378BFF5C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_237A87ECC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_2378FF1AC(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_2378FFFB0(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_237900674((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_237A87DC4();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_2378BFF5C(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_237A87DD0();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_237A87DD0();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_237902C70((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_2378FEE40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  __int128 v44;
  __int128 v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = *v2;
  sub_237A885D4();
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v52 = *(_QWORD *)(a2 + 56);
  v53 = *(_QWORD *)(a2 + 48);
  v51 = *(unsigned __int8 *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v61 = v6;
  v62 = v5;
  sub_237A87710();
  v59 = v8;
  v60 = v7;
  v54 = v10;
  v55 = v9;
  v49 = v11;
  v50 = v12;
  AvocadoWidgetInfo.hash(into:)();
  v13 = sub_237A88610();
  v14 = -1 << *(_BYTE *)(v4 + 32);
  v15 = v13 & ~v14;
  v58 = v4 + 56;
  v47 = a2;
  if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v56 = ~v14;
    v57 = *(_QWORD *)(v4 + 48);
    do
    {
      v16 = v57 + 88 * v15;
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v19 = *(_QWORD *)(v16 + 32);
      v20 = *(_QWORD *)(v16 + 40);
      v22 = *(_QWORD *)(v16 + 48);
      v21 = *(_QWORD *)(v16 + 56);
      v23 = *(unsigned __int8 *)(v16 + 64);
      v25 = *(_QWORD *)(v16 + 72);
      v24 = *(_QWORD *)(v16 + 80);
      v26 = *(_QWORD *)v16 == v62 && *(_QWORD *)(v16 + 8) == v61;
      if (v26 || (sub_237A8840C() & 1) != 0)
      {
        v27 = v18 == v60 && v17 == v59;
        if (v27 || (sub_237A8840C() & 1) != 0)
        {
          v28 = v19 == v55 && v20 == v54;
          if (v28 || (sub_237A8840C() & 1) != 0)
          {
            v29 = v22 == v53 && v21 == v52;
            if ((v29 || (sub_237A8840C() & 1) != 0) && ((v23 ^ v51) & 1) == 0)
            {
              if (v24)
              {
                if (v50)
                {
                  v30 = v25 == v49 && v24 == v50;
                  if (v30 || (sub_237A8840C() & 1) != 0)
                  {
LABEL_33:
                    swift_bridgeObjectRelease();
                    sub_23790B804(v47);
                    v31 = *(_QWORD *)(*v46 + 48) + 88 * v15;
                    v32 = *(_QWORD *)(v31 + 8);
                    v33 = *(_QWORD *)(v31 + 16);
                    v34 = *(_QWORD *)(v31 + 24);
                    v35 = *(_QWORD *)(v31 + 32);
                    v36 = *(_QWORD *)(v31 + 40);
                    v37 = *(_QWORD *)(v31 + 48);
                    v38 = *(_QWORD *)(v31 + 56);
                    v39 = *(_BYTE *)(v31 + 64);
                    v41 = *(_QWORD *)(v31 + 72);
                    v40 = *(_QWORD *)(v31 + 80);
                    *(_QWORD *)a1 = *(_QWORD *)v31;
                    *(_QWORD *)(a1 + 8) = v32;
                    *(_QWORD *)(a1 + 16) = v33;
                    *(_QWORD *)(a1 + 24) = v34;
                    *(_QWORD *)(a1 + 32) = v35;
                    *(_QWORD *)(a1 + 40) = v36;
                    *(_QWORD *)(a1 + 48) = v37;
                    *(_QWORD *)(a1 + 56) = v38;
                    *(_BYTE *)(a1 + 64) = v39;
                    *(_QWORD *)(a1 + 72) = v41;
                    *(_QWORD *)(a1 + 80) = v40;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    return 0;
                  }
                }
              }
              else if (!v50)
              {
                goto LABEL_33;
              }
            }
          }
        }
      }
      v15 = (v15 + 1) & v56;
    }
    while (((*(_QWORD *)(v58 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v63 = *v46;
  *v46 = 0x8000000000000000;
  sub_2378C0018(v47);
  sub_237902E00(v47, v15, isUniquelyReferenced_nonNull_native);
  *v46 = v63;
  swift_bridgeObjectRelease();
  v44 = *(_OWORD *)(v47 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v47 + 32);
  *(_OWORD *)(a1 + 48) = v44;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v47 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(v47 + 80);
  v45 = *(_OWORD *)(v47 + 16);
  result = 1;
  *(_OWORD *)a1 = *(_OWORD *)v47;
  *(_OWORD *)(a1 + 16) = v45;
  return result;
}

uint64_t sub_2378FF1AC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_237A87F08();
    v19 = v6;
    sub_237A87EC0();
    if (sub_237A87EE4())
    {
      sub_2378BFF5C(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_2378FFFB0(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_237A87DC4();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_237A87EE4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_2378FF3AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213D8);
  v3 = sub_237A87EFC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_237A885D4();
      sub_237A87710();
      result = sub_237A88610();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2378FF688()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821398);
  result = sub_237A87EFC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_33;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_33;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_33;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v9)
                    goto LABEL_33;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
      v19 = *v18;
      v20 = v18[1];
      sub_237A885D4();
      sub_237A87710();
      result = sub_237A88610();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
      *v12 = v19;
      v12[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2378FF954()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821418);
  v3 = sub_237A87EFC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_33;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_33;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_33;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v31)
                    goto LABEL_33;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      sub_237A885D4();
      Theme.ColorID.rawValue.getter();
      sub_237A87710();
      swift_bridgeObjectRelease();
      result = sub_237A88610();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_2378FFC80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821390);
  v3 = sub_237A87EFC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v24 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v25 = (unint64_t)(v5 + 63) >> 6;
    v26 = v3 + 56;
    v27 = v2;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
        v12 = v27;
      }
      else
      {
        v20 = v9 + 1;
        v12 = v27;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v20 >= v25)
          goto LABEL_23;
        v21 = v24[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v25)
            goto LABEL_23;
          v21 = v24[v9];
          if (!v21)
          {
            v9 = v20 + 2;
            if (v20 + 2 >= v25)
              goto LABEL_23;
            v21 = v24[v9];
            if (!v21)
            {
              v22 = v20 + 3;
              if (v22 >= v25)
              {
LABEL_23:
                swift_release();
                v23 = 1 << *(_BYTE *)(v27 + 32);
                if (v23 > 63)
                  bzero(v24, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v24 = -1 << v23;
                v1 = v0;
                *(_QWORD *)(v27 + 16) = 0;
                break;
              }
              v21 = v24[v22];
              if (!v21)
              {
                while (1)
                {
                  v9 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_29;
                  if (v9 >= v25)
                    goto LABEL_23;
                  v21 = v24[v9];
                  ++v22;
                  if (v21)
                    goto LABEL_22;
                }
              }
              v9 = v22;
            }
          }
        }
LABEL_22:
        v7 = (v21 - 1) & v21;
        v11 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v13 = *(_QWORD *)(v12 + 48) + 56 * v11;
      v14 = *(_QWORD *)v13;
      v15 = *(_QWORD *)(v13 + 24);
      v16 = *(_QWORD *)(v13 + 32);
      v17 = *(_QWORD *)(v13 + 40);
      v18 = *(_QWORD *)(v13 + 48);
      v28 = *(_OWORD *)(v13 + 8);
      sub_237A885D4();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237878474((uint64_t)v29, *((uint64_t *)&v28 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_237A88610();
      result = sub_237A87EB4();
      *(_QWORD *)(v26 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v19 = *(_QWORD *)(v4 + 48) + 56 * result;
      *(_QWORD *)v19 = v14;
      *(_OWORD *)(v19 + 8) = v28;
      *(_QWORD *)(v19 + 24) = v15;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = v17;
      *(_QWORD *)(v19 + 48) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2378FFFB0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_237A87EFC();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_237A87DC4();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_237900248()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821388);
  v3 = sub_237A87EFC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v43 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v41 = v0;
    v42 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    v9 = v3;
    result = swift_retain();
    v11 = v9;
    v12 = 0;
    v44 = v2;
    v45 = v9;
    while (1)
    {
      if (v7)
      {
        v47 = (v7 - 1) & v7;
        v48 = v12;
        v15 = __clz(__rbit64(v7)) | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v42)
          goto LABEL_36;
        v17 = v43[v16];
        v18 = v12 + 1;
        if (!v17)
        {
          v18 = v12 + 2;
          if (v12 + 2 >= v42)
            goto LABEL_36;
          v17 = v43[v18];
          if (!v17)
          {
            v18 = v12 + 3;
            if (v12 + 3 >= v42)
              goto LABEL_36;
            v17 = v43[v18];
            if (!v17)
            {
              v19 = v12 + 4;
              if (v12 + 4 >= v42)
              {
LABEL_36:
                v38 = v11;
                swift_release();
                v1 = v41;
                v39 = 1 << *(_BYTE *)(v2 + 32);
                if (v39 > 63)
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v39;
                v4 = v38;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v43[v19];
              if (!v17)
              {
                while (1)
                {
                  v18 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v18 >= v42)
                    goto LABEL_36;
                  v17 = v43[v18];
                  ++v19;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v18 = v12 + 4;
            }
          }
        }
LABEL_23:
        v47 = (v17 - 1) & v17;
        v48 = v18;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      v20 = *(_QWORD *)(v2 + 48) + 88 * v15;
      v22 = *(_QWORD *)v20;
      v21 = *(_QWORD *)(v20 + 8);
      v24 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      v26 = *(_QWORD *)(v20 + 32);
      v25 = *(_QWORD *)(v20 + 40);
      v27 = *(_QWORD *)(v20 + 48);
      v28 = *(_QWORD *)(v20 + 56);
      v29 = *(_BYTE *)(v20 + 64);
      v49 = *(_QWORD *)(v20 + 80);
      v50 = *(_QWORD *)(v20 + 72);
      sub_237A885D4();
      sub_237A87710();
      swift_bridgeObjectRetain();
      sub_237A87710();
      v46 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_237A885EC();
      sub_237A885EC();
      if (v49)
      {
        swift_bridgeObjectRetain();
        v30 = v50;
        sub_237A87710();
        swift_bridgeObjectRelease();
      }
      else
      {
        v30 = v50;
      }
      result = sub_237A88610();
      v11 = v45;
      v31 = -1 << *(_BYTE *)(v45 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v8 + 8 * (v32 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v8 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v8 + 8 * v33);
        }
        while (v37 == -1);
        v13 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v8 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v45 + 48) + 88 * v13;
      *(_QWORD *)v14 = v22;
      *(_QWORD *)(v14 + 8) = v21;
      *(_QWORD *)(v14 + 16) = v24;
      *(_QWORD *)(v14 + 24) = v46;
      *(_QWORD *)(v14 + 32) = v26;
      *(_QWORD *)(v14 + 40) = v25;
      *(_QWORD *)(v14 + 48) = v27;
      *(_QWORD *)(v14 + 56) = v28;
      *(_BYTE *)(v14 + 64) = v29;
      *(_QWORD *)(v14 + 72) = v30;
      *(_QWORD *)(v14 + 80) = v49;
      ++*(_QWORD *)(v45 + 16);
      v2 = v44;
      v7 = v47;
      v12 = v48;
    }
  }
  v40 = v4;
  result = swift_release();
  *v1 = v40;
  return result;
}

unint64_t sub_237900674(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_237A87DC4();
  result = sub_237A87EB4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void *sub_2379006F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213D8);
  v2 = *v0;
  v3 = sub_237A87EF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2379008A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821398);
  v2 = *v0;
  v3 = sub_237A87EF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_237900A54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821418);
  v2 = *v0;
  v3 = sub_237A87EF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_QWORD *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 16) = v21;
    result = (void *)sub_23787A11C(v18, v19, v21);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_237900C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821390);
  v2 = *v0;
  v3 = sub_237A87EF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 24);
    v19 = *(_QWORD *)(v17 + 32);
    v20 = *(_QWORD *)(v17 + 40);
    v21 = *(_QWORD *)(v17 + 48);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_OWORD *)(v17 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_OWORD *)(v22 + 8) = v23;
    *(_QWORD *)(v22 + 24) = v18;
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v20;
    *(_QWORD *)(v22 + 48) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_237900E10(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_237A87EF0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_237900FB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256821388);
  v31 = v0;
  v1 = *v0;
  v2 = sub_237A87EF0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v31 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = v1 + 56;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 56), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v12)
      goto LABEL_28;
    v29 = *(_QWORD *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      v8 = v28 + 1;
      if (v28 + 1 >= v12)
        goto LABEL_28;
      v29 = *(_QWORD *)(v5 + 8 * v8);
      if (!v29)
      {
        v8 = v28 + 2;
        if (v28 + 2 >= v12)
          goto LABEL_28;
        v29 = *(_QWORD *)(v5 + 8 * v8);
        if (!v29)
          break;
      }
    }
LABEL_27:
    v11 = (v29 - 1) & v29;
    v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    v15 = 88 * v14;
    v16 = *(_QWORD *)(v1 + 48) + v15;
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(_QWORD *)(v16 + 16);
    v19 = *(_QWORD *)(v16 + 24);
    v20 = *(_QWORD *)(v16 + 32);
    v21 = *(_QWORD *)(v16 + 40);
    v22 = *(_QWORD *)(v16 + 48);
    v23 = *(_QWORD *)(v16 + 56);
    v24 = *(_BYTE *)(v16 + 64);
    v26 = *(_QWORD *)(v16 + 72);
    v25 = *(_QWORD *)(v16 + 80);
    v27 = *(_QWORD *)(v3 + 48) + v15;
    *(_QWORD *)v27 = *(_QWORD *)v16;
    *(_QWORD *)(v27 + 8) = v17;
    *(_QWORD *)(v27 + 16) = v18;
    *(_QWORD *)(v27 + 24) = v19;
    *(_QWORD *)(v27 + 32) = v20;
    *(_QWORD *)(v27 + 40) = v21;
    *(_QWORD *)(v27 + 48) = v22;
    *(_QWORD *)(v27 + 56) = v23;
    *(_BYTE *)(v27 + 64) = v24;
    *(_QWORD *)(v27 + 72) = v26;
    *(_QWORD *)(v27 + 80) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 3;
  if (v30 >= v12)
    goto LABEL_28;
  v29 = *(_QWORD *)(v5 + 8 * v30);
  if (v29)
  {
    v8 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    v8 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v8 >= v12)
      goto LABEL_28;
    v29 = *(_QWORD *)(v5 + 8 * v8);
    ++v30;
    if (v29)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2379011C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213D8);
  v3 = sub_237A87EFC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_237A885D4();
    swift_bridgeObjectRetain();
    sub_237A87710();
    result = sub_237A88610();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_237901470()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821398);
  result = sub_237A87EFC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v28)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_32;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_32;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
        {
          v17 = v15 + 3;
          if (v17 >= v28)
          {
LABEL_32:
            result = swift_release();
            v1 = v0;
            goto LABEL_34;
          }
          v16 = *(_QWORD *)(v6 + 8 * v17);
          v5 = v17;
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v20;
    v12[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    result = swift_bridgeObjectRetain();
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23790170C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821418);
  v2 = sub_237A87EFC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v9);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v1 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    sub_237A885D4();
    sub_23787A11C(v18, v19, v20);
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = *(_QWORD *)(v3 + 48) + 24 * v10;
    *(_QWORD *)v11 = v18;
    *(_QWORD *)(v11 + 8) = v19;
    *(_BYTE *)(v11 + 16) = v20;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_237901A08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26[72];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821390);
  v2 = sub_237A87EFC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_24:
    result = swift_release();
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v21 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v22 = (unint64_t)(v4 + 63) >> 6;
  v23 = v2 + 56;
  v24 = v1;
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_7;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v22)
      goto LABEL_23;
    v19 = *(_QWORD *)(v21 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v22)
        goto LABEL_23;
      v19 = *(_QWORD *)(v21 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v22)
          goto LABEL_23;
        v19 = *(_QWORD *)(v21 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_22:
    v6 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_7:
    v11 = *(_QWORD *)(v24 + 48) + 56 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 24);
    v14 = *(_QWORD *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 40);
    v16 = *(_QWORD *)(v11 + 48);
    v25 = *(_OWORD *)(v11 + 8);
    sub_237A885D4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237878474((uint64_t)v26, *((uint64_t *)&v25 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A88610();
    result = sub_237A87EB4();
    *(_QWORD *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = *(_QWORD *)(v3 + 48) + 56 * result;
    *(_QWORD *)v17 = v12;
    *(_OWORD *)(v17 + 8) = v25;
    *(_QWORD *)(v17 + 24) = v13;
    *(_QWORD *)(v17 + 32) = v14;
    *(_QWORD *)(v17 + 40) = v15;
    *(_QWORD *)(v17 + 48) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v22)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v22)
      goto LABEL_23;
    v19 = *(_QWORD *)(v21 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_237901D1C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_237A87EFC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_237A87DC4();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_237901F90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char v47;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821388);
  v2 = sub_237A87EFC();
  if (!*(_QWORD *)(v1 + 16))
  {
    v37 = v2;
    result = swift_release();
LABEL_38:
    *v38 = v37;
    return result;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v39 = v1 + 56;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v40 = (unint64_t)(v3 + 63) >> 6;
  v6 = v2 + 56;
  v7 = v2;
  result = swift_retain();
  v9 = v7;
  v10 = 0;
  v41 = v1;
  v42 = v7;
  while (1)
  {
    if (v5)
    {
      v44 = (v5 - 1) & v5;
      v45 = v10;
      v13 = __clz(__rbit64(v5)) | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v40)
      goto LABEL_36;
    v15 = *(_QWORD *)(v39 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v40)
        goto LABEL_36;
      v15 = *(_QWORD *)(v39 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v40)
          goto LABEL_36;
        v15 = *(_QWORD *)(v39 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v44 = (v15 - 1) & v15;
    v45 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v1 + 48) + 88 * v13;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v24 = *(_QWORD *)(v18 + 32);
    v23 = *(_QWORD *)(v18 + 40);
    v25 = *(_QWORD *)(v18 + 48);
    v26 = *(_QWORD *)(v18 + 56);
    v47 = *(_BYTE *)(v18 + 64);
    v27 = *(_QWORD *)(v18 + 80);
    v46 = *(_QWORD *)(v18 + 72);
    sub_237A885D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRetain();
    sub_237A87710();
    v43 = v22;
    v28 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A885EC();
    sub_237A885EC();
    if (v27)
    {
      swift_bridgeObjectRetain();
      v29 = v46;
      sub_237A87710();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = v46;
    }
    result = sub_237A88610();
    v9 = v42;
    v30 = -1 << *(_BYTE *)(v42 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v6 + 8 * (v31 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v6 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v6 + 8 * v32);
      }
      while (v36 == -1);
      v11 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v6 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v42 + 48) + 88 * v11;
    v10 = v45;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v19;
    *(_QWORD *)(v12 + 16) = v21;
    *(_QWORD *)(v12 + 24) = v43;
    *(_QWORD *)(v12 + 32) = v24;
    *(_QWORD *)(v12 + 40) = v28;
    *(_QWORD *)(v12 + 48) = v25;
    *(_QWORD *)(v12 + 56) = v26;
    *(_BYTE *)(v12 + 64) = v47;
    *(_QWORD *)(v12 + 72) = v29;
    *(_QWORD *)(v12 + 80) = v27;
    ++*(_QWORD *)(v42 + 16);
    v1 = v41;
    v5 = v44;
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v40)
  {
LABEL_36:
    v37 = v9;
    result = swift_release_n();
    goto LABEL_38;
  }
  v15 = *(_QWORD *)(v39 + 8 * v17);
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v40)
      goto LABEL_36;
    v15 = *(_QWORD *)(v39 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2379023B0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2378FF3AC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2379006F4();
      goto LABEL_22;
    }
    sub_2379011C4();
  }
  v11 = *v4;
  sub_237A885D4();
  sub_237A87710();
  result = sub_237A88610();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_237A8840C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_237A88580();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_237A8840C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_237902548(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2378FF688();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2379008A4();
      goto LABEL_22;
    }
    sub_237901470();
  }
  v11 = *v4;
  sub_237A885D4();
  sub_237A87710();
  result = sub_237A88610();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_237A8840C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_237A88580();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_237A8840C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_2379026E0(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v29 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_14;
  if ((a5 & 1) != 0)
  {
    sub_2378FF954();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_237900A54();
      goto LABEL_14;
    }
    sub_23790170C();
  }
  v12 = *v5;
  sub_237A885D4();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  result = sub_237A88610();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a4 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = *(_QWORD *)(v12 + 48) + 24 * a4;
      v6 = *(_QWORD *)v15;
      v7 = *(_QWORD *)(v15 + 8);
      v8 = *(_BYTE *)(v15 + 16);
      sub_23787A11C(*(_QWORD *)v15, v7, v8);
      Theme.ColorID.rawValue.getter();
      v17 = v16;
      v19 = v18;
      Theme.ColorID.rawValue.getter();
      if (v17 == v21 && v19 == v20)
        goto LABEL_17;
      v22 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_23787A134(v6, v7, v8);
      if ((v22 & 1) != 0)
        goto LABEL_18;
      a4 = (a4 + 1) & v14;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_14:
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v24 = *(_QWORD *)(v23 + 48) + 24 * a4;
  *(_QWORD *)v24 = v29;
  *(_QWORD *)(v24 + 8) = a2;
  *(_BYTE *)(v24 + 16) = a3;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease_n();
  sub_23787A134(v6, v7, v8);
LABEL_18:
  result = sub_237A88580();
  __break(1u);
  return result;
}

uint64_t sub_237902934(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[72];
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v33 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_2378FFC80();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_237900C10();
        goto LABEL_29;
      }
      sub_237901A08();
    }
    v8 = *v3;
    sub_237A885D4();
    v9 = *(_OWORD *)v5;
    v10 = *(_QWORD *)(v5 + 16);
    v38 = *(_OWORD *)(v5 + 24);
    v39[0] = v9;
    v37 = *(_OWORD *)(v5 + 40);
    v11 = v9;
    sub_23790B86C((uint64_t)v39);
    sub_237A87710();
    sub_23790B894((uint64_t)v39);
    swift_bridgeObjectRetain();
    sub_237878474((uint64_t)v36, v10);
    swift_bridgeObjectRelease();
    v12 = v38;
    sub_23790B86C((uint64_t)&v38);
    sub_237A87710();
    sub_23790B894((uint64_t)&v38);
    v13 = v37;
    sub_23790B86C((uint64_t)&v37);
    sub_237A87710();
    sub_23790B894((uint64_t)&v37);
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v14;
    v34 = v8 + 56;
    v35 = v8;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v15 = ~v14;
      do
      {
        v16 = (_QWORD *)(*(_QWORD *)(v35 + 48) + 56 * a2);
        v17 = v16[2];
        v18 = v16[3];
        v19 = v16[4];
        v20 = v16[5];
        v21 = v16[6];
        v22 = *v16 == (_QWORD)v11 && v16[1] == *((_QWORD *)&v11 + 1);
        if (v22 || (result = sub_237A8840C(), (result & 1) != 0))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((sub_2379B6854(v17, v10) & 1) != 0
            && (v18 == (_QWORD)v12 ? (v23 = v19 == *((_QWORD *)&v12 + 1)) : (v23 = 0), v23 || (sub_237A8840C() & 1) != 0))
          {
            if (v20 == (_QWORD)v13 && v21 == *((_QWORD *)&v13 + 1))
              goto LABEL_32;
            v25 = sub_237A8840C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if ((v25 & 1) != 0)
              goto LABEL_33;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
          }
        }
        a2 = (a2 + 1) & v15;
      }
      while (((*(_QWORD *)(v34 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_29:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v27 = *(_QWORD *)(v26 + 48) + 56 * a2;
  v28 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v33;
  *(_OWORD *)(v27 + 16) = v28;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v33 + 32);
  *(_QWORD *)(v27 + 48) = *(_QWORD *)(v33 + 48);
  v29 = *(_QWORD *)(v26 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    result = sub_237A88580();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v31;
  }
  return result;
}

void sub_237902C70(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2378FFFB0(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_237900E10(a4);
      goto LABEL_14;
    }
    sub_237901D1C(v11, a4);
  }
  v12 = *v5;
  v13 = sub_237A87DC4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_2378BFF5C(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_237A87DD0();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_237A88580();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_237A87DD0();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_237902E00(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v46 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_41;
  if ((a3 & 1) != 0)
  {
    sub_237900248();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_237900FB0();
      goto LABEL_41;
    }
    sub_237901F90();
  }
  v8 = *v3;
  sub_237A885D4();
  v9 = *(_QWORD *)v5;
  v10 = *(_QWORD *)(v5 + 8);
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *(_QWORD *)(v5 + 32);
  v14 = *(_QWORD *)(v5 + 40);
  v15 = *(_QWORD *)(v5 + 48);
  v16 = *(_QWORD *)(v5 + 56);
  v17 = *(unsigned __int8 *)(v5 + 64);
  v19 = *(_QWORD *)(v5 + 72);
  v18 = *(_QWORD *)(v5 + 80);
  v58 = v10;
  v59 = v9;
  sub_237A87710();
  v56 = v12;
  v57 = v11;
  v51 = v14;
  v52 = v13;
  v47 = v17;
  v44 = v19;
  v48 = v18;
  AvocadoWidgetInfo.hash(into:)();
  result = sub_237A88610();
  v20 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v20;
  v55 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v49 = v16;
    v50 = v15;
    v54 = ~v20;
    v53 = *(_QWORD *)(v8 + 48);
    do
    {
      v21 = v53 + 88 * a2;
      result = *(_QWORD *)v21;
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      v24 = *(_QWORD *)(v21 + 32);
      v25 = *(_QWORD *)(v21 + 40);
      v26 = *(_QWORD *)(v21 + 48);
      v27 = *(_QWORD *)(v21 + 56);
      v28 = *(unsigned __int8 *)(v21 + 64);
      v30 = *(_QWORD *)(v21 + 72);
      v29 = *(_QWORD *)(v21 + 80);
      v31 = *(_QWORD *)v21 == v59 && *(_QWORD *)(v21 + 8) == v58;
      if (v31 || (result = sub_237A8840C(), (result & 1) != 0))
      {
        v32 = v23 == v57 && v22 == v56;
        if (v32 || (result = sub_237A8840C(), (result & 1) != 0))
        {
          v33 = v24 == v52 && v25 == v51;
          if (v33 || (result = sub_237A8840C(), (result & 1) != 0))
          {
            v34 = v26 == v50 && v27 == v49;
            if (v34 || (result = sub_237A8840C(), (result & 1) != 0))
            {
              if (((v28 ^ v47) & 1) == 0)
              {
                if (v29)
                {
                  if (v48)
                  {
                    v35 = v30 == v44 && v29 == v48;
                    if (v35 || (result = sub_237A8840C(), (result & 1) != 0))
                    {
LABEL_40:
                      result = sub_237A88580();
                      __break(1u);
                      break;
                    }
                  }
                }
                else if (!v48)
                {
                  goto LABEL_40;
                }
              }
            }
          }
        }
      }
      a2 = (a2 + 1) & v54;
    }
    while (((*(_QWORD *)(v55 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_41:
  v36 = *v45;
  *(_QWORD *)(*v45 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v37 = *(_QWORD *)(v36 + 48) + 88 * a2;
  v38 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v46;
  *(_OWORD *)(v37 + 16) = v38;
  *(_QWORD *)(v37 + 80) = *(_QWORD *)(v46 + 80);
  v39 = *(_OWORD *)(v46 + 64);
  v40 = *(_OWORD *)(v46 + 32);
  *(_OWORD *)(v37 + 48) = *(_OWORD *)(v46 + 48);
  *(_OWORD *)(v37 + 64) = v39;
  *(_OWORD *)(v37 + 32) = v40;
  v41 = *(_QWORD *)(v36 + 16);
  v42 = __OFADD__(v41, 1);
  v43 = v41 + 1;
  if (v42)
    __break(1u);
  else
    *(_QWORD *)(v36 + 16) = v43;
  return result;
}

uint64_t sub_2379030F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, _QWORD *);
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;
  _QWORD v38[3];
  unsigned __int8 v39;
  uint64_t v40;

  v34 = a4;
  v27 = a2;
  v28 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v33 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v35 = (_QWORD *)a3;
  v9 = *(_QWORD *)(a3 + 64);
  v29 = 0;
  v30 = a3 + 64;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v31 = (unint64_t)(v10 + 63) >> 6;
  v13 = (uint64_t)v32;
  while (v12)
  {
    v36 = (v12 - 1) & v12;
    v37 = v8;
    v14 = __clz(__rbit64(v12)) | (v8 << 6);
LABEL_17:
    v19 = v35;
    sub_2378BBFE0(v35[6] + *(_QWORD *)(v33 + 72) * v14, v13, &qword_25681E8E0);
    v20 = v19[7] + 32 * v14;
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_QWORD *)(v20 + 16);
    v38[0] = *(_QWORD *)v20;
    v38[1] = v21;
    v38[2] = v22;
    v39 = *(_BYTE *)(v20 + 24);
    v23 = v39;
    swift_retain();
    sub_2378D0664(v21, v22, v23);
    v24 = v40;
    v25 = v34(v13, v38);
    swift_release();
    sub_2378724B0(v21, v22, v23);
    result = sub_2378BC024(v13, &qword_25681E8E0);
    v40 = v24;
    if (v24)
      return result;
    v12 = v36;
    v8 = v37;
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v28 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = __OFADD__(v29++, 1);
      if (v15)
        goto LABEL_30;
    }
  }
  v15 = __OFADD__(v8, 1);
  v16 = v8 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v16 >= v31)
    return sub_237903968(v28, v27, v29, v35);
  v17 = *(_QWORD *)(v30 + 8 * v16);
  if (v17)
  {
LABEL_16:
    v36 = (v17 - 1) & v17;
    v37 = v16;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    goto LABEL_17;
  }
  v18 = v16 + 1;
  if (v16 + 1 >= v31)
    return sub_237903968(v28, v27, v29, v35);
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v16 + 2;
  if (v16 + 2 >= v31)
    return sub_237903968(v28, v27, v29, v35);
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v16 + 3;
  if (v16 + 3 >= v31)
    return sub_237903968(v28, v27, v29, v35);
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
  {
LABEL_15:
    v16 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v31)
      return sub_237903968(v28, v27, v29, v35);
    v17 = *(_QWORD *)(v30 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2379033B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820400);
  result = sub_237A880E8();
  v9 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  v39 = v4;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v40 = v11;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v38)
        return v9;
      v16 = v37[v15];
      v17 = v11 + 1;
      if (!v16)
      {
        v17 = v11 + 2;
        if (v11 + 2 >= v38)
          return v9;
        v16 = v37[v17];
        if (!v16)
        {
          v17 = v11 + 3;
          if (v11 + 3 >= v38)
            return v9;
          v16 = v37[v17];
          if (!v16)
          {
            v18 = v11 + 4;
            if (v11 + 4 >= v38)
              return v9;
            v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                v17 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v17 >= v38)
                  return v9;
                v16 = v37[v17];
                ++v18;
                if (v16)
                  goto LABEL_24;
              }
            }
            v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v40 = v17;
      v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v4 + 56) + 32 * v14;
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    v41 = *(_BYTE *)(v22 + 16);
    v25 = *(_QWORD *)(v22 + 24);
    sub_237A885D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    result = sub_237A88610();
    v26 = -1 << *(_BYTE *)(v9 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v29);
    *v34 = v21;
    v34[1] = v20;
    v35 = *(_QWORD *)(v9 + 56) + 32 * v29;
    *(_QWORD *)v35 = v23;
    *(_QWORD *)(v35 + 8) = v24;
    *(_BYTE *)(v35 + 16) = v41;
    *(_QWORD *)(v35 + 24) = v25;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v39;
    v11 = v40;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23790367C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D0);
  result = sub_237A880E8();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v34 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v32)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v32)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v32)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v32)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v32)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = *(_QWORD *)(v4 + 48) + 24 * v13;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_237A885D4();
    sub_23787A11C(v19, v18, v20);
    swift_bridgeObjectRetain();
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v8 + 48) + 24 * v25;
    *(_QWORD *)v30 = v19;
    *(_QWORD *)(v30 + 8) = v18;
    *(_BYTE *)(v30 + 16) = v20;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v34;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_237903968(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v38 = a1;
  v39 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v38 - v9;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v42 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203A0);
  result = sub_237A880E8();
  v11 = result;
  if (v39 < 1)
    v12 = 0;
  else
    v12 = *v38;
  v13 = 0;
  v14 = result + 64;
  v15 = v42;
  v40 = a4;
  v41 = result;
  while (1)
  {
    if (v12)
    {
      v45 = (v12 - 1) & v12;
      v46 = v13;
      v16 = __clz(__rbit64(v12)) | (v13 << 6);
    }
    else
    {
      v17 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v17 >= v39)
        return v11;
      v18 = v38[v17];
      v19 = v13 + 1;
      if (!v18)
      {
        v19 = v13 + 2;
        if (v13 + 2 >= v39)
          return v11;
        v18 = v38[v19];
        if (!v18)
        {
          v19 = v13 + 3;
          if (v13 + 3 >= v39)
            return v11;
          v18 = v38[v19];
          if (!v18)
          {
            v20 = v13 + 4;
            if (v13 + 4 >= v39)
              return v11;
            v18 = v38[v20];
            if (!v18)
            {
              while (1)
              {
                v19 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v19 >= v39)
                  return v11;
                v18 = v38[v19];
                ++v20;
                if (v18)
                  goto LABEL_24;
              }
            }
            v19 = v13 + 4;
          }
        }
      }
LABEL_24:
      v45 = (v18 - 1) & v18;
      v46 = v19;
      v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    v21 = a4[6];
    v22 = v43;
    v47 = *(_QWORD *)(v44 + 72);
    sub_2378BBFE0(v21 + v47 * v16, v43, &qword_25681E8E0);
    v23 = a4[7] + 32 * v16;
    v25 = *(_QWORD *)v23;
    v24 = *(_QWORD *)(v23 + 8);
    v26 = *(_QWORD *)(v23 + 16);
    v27 = *(_BYTE *)(v23 + 24);
    sub_237870370(v22, v15, &qword_25681E8E0);
    v11 = v41;
    sub_237A885D4();
    swift_retain();
    sub_2378D0664(v24, v26, v27);
    sub_237A86594();
    sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_237A876D4();
    result = sub_237A88610();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v15 = v42;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v15 = v42;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = sub_237870370(v15, *(_QWORD *)(v11 + 48) + v31 * v47, &qword_25681E8E0);
    v36 = *(_QWORD *)(v11 + 56) + 32 * v31;
    *(_QWORD *)v36 = v25;
    *(_QWORD *)(v36 + 8) = v24;
    *(_QWORD *)(v36 + 16) = v26;
    *(_BYTE *)(v36 + 24) = v27;
    ++*(_QWORD *)(v11 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v40;
    v12 = v45;
    v13 = v46;
    if (!a3)
      return v11;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_237903D30@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v9;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v9 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_2378D3230(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v9;
    v23 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v23;
    }
    v16 = *(_QWORD *)(v15 + 48);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    sub_2378BC024(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v12, &qword_25681E8E0);
    v18 = *(_QWORD *)(v15 + 56);
    v19 = a2(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_2378D0858(v18 + *(_QWORD *)(v20 + 72) * v12, a5, a2);
    a3(v12, v15);
    *v9 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a5, 0, 1, v19);
  }
  else
  {
    v22 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a5, 1, 1, v22);
  }
}

uint64_t sub_237903E80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2378D2DB8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2378C6824();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_237904E98(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_237903F4C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v11 = sub_237A88610();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237904134(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v10 = sub_237A88610();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237904308(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v9 = sub_237A88610();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + (v3 << 7);
          v15 = (const void *)(v14 + (v6 << 7));
          if (v3 << 7 != v6 << 7 || (v3 = v6, result >= (unint64_t)v15 + 128))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x80uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2379044E4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v4 = *(_QWORD *)(v29 - 8);
  result = MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v30 = (result + 1) & v10;
      v11 = *(_QWORD *)(v4 + 72);
      v32 = v11;
      v12 = (uint64_t)v31;
      do
      {
        v13 = v11 * v9;
        sub_2378BBFE0(*(_QWORD *)(a2 + 48) + v11 * v9, v12, &qword_25681E8E0);
        sub_237A885D4();
        sub_237A86594();
        sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        sub_237A876D4();
        v14 = sub_237A88610();
        result = sub_2378BC024(v12, &qword_25681E8E0);
        v15 = v14 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v15 < v30)
          {
            v11 = v32;
          }
          else
          {
            v11 = v32;
            if (a1 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v32;
          if (v15 >= v30 || a1 >= (uint64_t)v15)
          {
LABEL_12:
            if (v11 * a1 < v13
              || *(_QWORD *)(a2 + 48) + v11 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v13 + v11))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v11 * a1 != v13)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v16 = *(_QWORD *)(a2 + 56);
            v17 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for RequestContentModel() - 8) + 72);
            v18 = v17 * a1;
            result = v16 + v17 * a1;
            v19 = v17 * v9;
            v20 = v16 + v17 * v9 + v17;
            if (v18 < v19 || result >= v20)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v11 = v32;
            }
            else
            {
              a1 = v9;
              v11 = v32;
              if (v18 != v19)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v9;
              }
            }
          }
        }
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2379047D8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v4 = *(_QWORD *)(v29 - 8);
  result = MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v30 = (result + 1) & v10;
      v11 = *(_QWORD *)(v4 + 72);
      v32 = v11;
      v12 = (uint64_t)v31;
      do
      {
        v13 = v9 * v11;
        sub_2378BBFE0(*(_QWORD *)(a2 + 48) + v9 * v11, v12, &qword_25681E8E0);
        sub_237A885D4();
        sub_237A86594();
        sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        sub_237A876D4();
        v14 = sub_237A88610();
        result = sub_2378BC024(v12, &qword_25681E8E0);
        v15 = v14 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v15 < v30)
          {
            v11 = v32;
          }
          else
          {
            v11 = v32;
            if (a1 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v32;
          if (v15 >= v30 || a1 >= (uint64_t)v15)
          {
LABEL_12:
            if (a1 * v11 < v13
              || *(_QWORD *)(a2 + 48) + a1 * v11 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v13 + v11))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a1 * v11 != v13)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v16 = *(_QWORD *)(a2 + 56);
            v17 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0)
                                        - 8)
                            + 72);
            v18 = v17 * a1;
            result = v16 + v17 * a1;
            v19 = v17 * v9;
            v20 = v16 + v17 * v9 + v17;
            if (v18 < v19 || result >= v20)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v11 = v32;
            }
            else
            {
              a1 = v9;
              v11 = v32;
              if (v18 != v19)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v9;
              }
            }
          }
        }
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237904ACC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        sub_237A87710();
        swift_bridgeObjectRelease();
        result = sub_237A88610();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237904CB4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v12 = sub_237A88610();
        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (__int128 *)(v17 + (v3 << 6));
          v19 = (__int128 *)(v17 + (v6 << 6));
          if (v3 << 6 != v6 << 6 || (v3 = v6, v18 >= v19 + 4))
          {
            v9 = *v19;
            v10 = v19[1];
            v11 = v19[3];
            v18[2] = v19[2];
            v18[3] = v11;
            *v18 = v9;
            v18[1] = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237904E98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v9 = sub_237A88610();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23790506C(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_237895BE4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = *(_QWORD *)(type metadata accessor for Component() - 8);
  v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_33;
  if (v19 < 0)
  {
LABEL_35:
    result = sub_237A880F4();
    __break(1u);
    return result;
  }
  v20 = v17 + v16;
  v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v9);
  v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1)
    sub_2378D07D8(a3, v17, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  return sub_2378BC024(a3, &qword_2568213B0);
}

uint64_t sub_237905240(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = type metadata accessor for Component();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v30 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = v1;
    v32 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v36 = v20;
      v23 = v35;
      sub_2378D07D8(v12 + v20, v35, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v24 = a1(v23);
      result = sub_2378DE6A4(v23, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v32;
      }
      else
      {
        v3 = v22;
        v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          result = sub_2378D07D8(v26 + v31 + v16 * v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          if (v21 >= v27)
            goto LABEL_34;
          sub_2378D07D8(v26 + v36, v34, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_23793E880(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_23790BE64(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_23790BE64(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v36 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI28ClusterTransitionCoordinatorC13ListDirectionO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2378D07D8(a1, (uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  sub_2378D07D8(a2, v14, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v17 = v16(v13, 2, v15);
  if (!v17)
  {
    sub_2378D07D8((uint64_t)v13, (uint64_t)v9, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
    if (!v16((char *)v14, 2, v15))
    {
      sub_237870370(v14, (uint64_t)v6, qword_2568207C8);
      sub_237A86594();
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_237A877DC();
      sub_2378BC024((uint64_t)v6, qword_2568207C8);
      sub_2378BC024((uint64_t)v9, qword_2568207C8);
      sub_2378DE6A4((uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
      return v18 & 1;
    }
    sub_2378BC024((uint64_t)v9, qword_2568207C8);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v14, 2, v15) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v14, 2, v15) != 2)
  {
LABEL_9:
    sub_2378BC024((uint64_t)v13, &qword_2568213A0);
    v18 = 0;
    return v18 & 1;
  }
  sub_2378DE6A4((uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  v18 = 1;
  return v18 & 1;
}

uint64_t _s14CarPlayAssetUI28ClusterTransitionCoordinatorC06LayoutF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = a2;
  v3 = type metadata accessor for Layout();
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v61 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213A8);
  v5 = MEMORY[0x24BDAC7A8](v62);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v52 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v52 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v52 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v52 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v52 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v52 - v26;
  v28 = a1;
  v29 = v63;
  if ((sub_237A8657C() & 1) == 0)
    goto LABEL_16;
  v55 = v7;
  v56 = v22;
  v58 = v16;
  v53 = v13;
  v54 = v19;
  v30 = (int *)type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  v31 = v30[5];
  v57 = v28;
  sub_2378BBFE0(v28 + v31, (uint64_t)v27, &qword_256820CF0);
  sub_2378BBFE0(v29 + v30[5], (uint64_t)v25, &qword_256820CF0);
  v32 = v62;
  v33 = (uint64_t)&v9[*(int *)(v62 + 48)];
  sub_2378BBFE0((uint64_t)v27, (uint64_t)v9, &qword_256820CF0);
  sub_2378BBFE0((uint64_t)v25, v33, &qword_256820CF0);
  v34 = v60;
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v36 = (uint64_t)v9;
  v37 = (uint64_t)v27;
  if (v35((uint64_t)v9, 1, v60) == 1)
  {
    sub_2378BC024((uint64_t)v25, &qword_256820CF0);
    sub_2378BC024((uint64_t)v27, &qword_256820CF0);
    v38 = v35(v33, 1, v34);
    v39 = v61;
    if (v38 == 1)
    {
      sub_2378BC024((uint64_t)v9, &qword_256820CF0);
      goto LABEL_9;
    }
LABEL_7:
    v43 = v36;
LABEL_15:
    sub_2378BC024(v43, &qword_2568213A8);
    goto LABEL_16;
  }
  v40 = (uint64_t)v9;
  v41 = (uint64_t)v56;
  sub_2378BBFE0(v40, (uint64_t)v56, &qword_256820CF0);
  v42 = v35(v33, 1, v34);
  v39 = v61;
  if (v42 == 1)
  {
    sub_2378BC024((uint64_t)v25, &qword_256820CF0);
    sub_2378BC024(v37, &qword_256820CF0);
    sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    goto LABEL_7;
  }
  sub_2378D0858(v33, v61, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LODWORD(v59) = sub_237A877DC();
  sub_2378DE6A4(v39, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  sub_2378BC024((uint64_t)v25, &qword_256820CF0);
  sub_2378BC024(v37, &qword_256820CF0);
  v32 = v62;
  sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  sub_2378BC024(v36, &qword_256820CF0);
  if ((v59 & 1) == 0)
    goto LABEL_16;
LABEL_9:
  v44 = (uint64_t)v54;
  sub_2378BBFE0(v57 + v30[6], (uint64_t)v54, &qword_256820CF0);
  v45 = (uint64_t)v58;
  sub_2378BBFE0(v63 + v30[6], (uint64_t)v58, &qword_256820CF0);
  v46 = (uint64_t)v55;
  v47 = (uint64_t)&v55[*(int *)(v32 + 48)];
  sub_2378BBFE0(v44, (uint64_t)v55, &qword_256820CF0);
  sub_2378BBFE0(v45, v47, &qword_256820CF0);
  if (v35(v46, 1, v34) != 1)
  {
    v48 = (uint64_t)v53;
    sub_2378BBFE0(v46, (uint64_t)v53, &qword_256820CF0);
    if (v35(v47, 1, v34) != 1)
    {
      sub_2378D0858(v47, v39, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      sub_237A86594();
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v51 = sub_237A877DC();
      sub_2378DE6A4(v39, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      sub_2378BC024((uint64_t)v58, &qword_256820CF0);
      sub_2378BC024(v44, &qword_256820CF0);
      sub_2378DE6A4(v48, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      sub_2378BC024(v46, &qword_256820CF0);
      if ((v51 & 1) == 0)
        goto LABEL_16;
      goto LABEL_19;
    }
    sub_2378BC024((uint64_t)v58, &qword_256820CF0);
    sub_2378BC024(v44, &qword_256820CF0);
    sub_2378DE6A4(v48, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    goto LABEL_14;
  }
  sub_2378BC024(v45, &qword_256820CF0);
  sub_2378BC024(v44, &qword_256820CF0);
  if (v35(v47, 1, v34) != 1)
  {
LABEL_14:
    v43 = v46;
    goto LABEL_15;
  }
  sub_2378BC024(v46, &qword_256820CF0);
LABEL_19:
  if (*(unsigned __int8 *)(v57 + v30[7]) == *(unsigned __int8 *)(v63 + v30[7]))
  {
    v49 = *(_BYTE *)(v57 + v30[8]) ^ *(_BYTE *)(v63 + v30[8]) ^ 1;
    return v49 & 1;
  }
LABEL_16:
  v49 = 0;
  return v49 & 1;
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_2568211D0);
}

uint64_t sub_237905DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2378EB104(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_237905DB0(uint64_t a1, void (*a2)(char *, uint64_t, char *))
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, char *);

  v28 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568213C0);
  MEMORY[0x24BDAC7A8](v27);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v26 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v26)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v26)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v10);
        if (!v22)
        {
          v10 = v21 + 3;
          if (v21 + 3 >= v26)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v10);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 48);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    sub_2378BBFE0(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v12, (uint64_t)v4, &qword_25681E8E0);
    v15 = *(_QWORD *)(a1 + 56) + 32 * v12;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = &v4[*(int *)(v27 + 48)];
    v20 = *(_BYTE *)(v15 + 24);
    *(_QWORD *)v19 = *(_QWORD *)v15;
    *((_QWORD *)v19 + 2) = v18;
    v19[24] = v20;
    *((_QWORD *)v19 + 1) = v16;
    swift_retain();
    sub_2378D0664(v16, v18, v20);
    v28(v4, v17, v19 + 8);
    result = sub_2378BC024((uint64_t)v4, &qword_2568213C0);
  }
  v23 = v21 + 4;
  if (v23 >= v26)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_237906020(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;

  result = MEMORY[0x24BEE4AF8];
  v17 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for Zone() - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      if (*(_QWORD *)(v8 + 16))
      {
        v10 = sub_2378D3230(v7);
        if ((v11 & 1) != 0)
        {
          v12 = *(_QWORD *)(v8 + 56) + 32 * v10;
          v13 = *(_QWORD *)(v12 + 8);
          v14 = *(_QWORD *)(v12 + 16);
          v15 = *(_BYTE *)(v12 + 24);
          swift_retain();
          sub_2378D0664(v13, v14, v15);
          v16 = sub_2378724B0(v13, v14, v15);
          MEMORY[0x23B81E6D0](v16);
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_237A87AB8();
          sub_237A87AE8();
          sub_237A87AAC();
        }
      }
      v7 += v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t sub_237906178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for Zone();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v18 - v8;
  result = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v18 = v1;
    v12 = v9 + 16;
    v13 = *(_QWORD *)(v7 + 72);
    v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = a1 + v19;
    v15 = MEMORY[0x24BEE4AF8];
    v20 = v9 + 16;
    v21 = v3;
    do
    {
      sub_2378D07D8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      if (v12[*(int *)(v3 + 32)])
      {
        sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      }
      else
      {
        sub_2378D0858((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2379D64EC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        v16 = *(_QWORD *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_2379D64EC(v16 > 1, v17 + 1, 1);
          v15 = v22;
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        sub_2378D0858((uint64_t)v6, v15 + v19 + v17 * v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        v12 = v20;
        v3 = v21;
      }
      v14 += v13;
      --v11;
    }
    while (v11);
    return v22;
  }
  return result;
}

uint64_t sub_237906334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for Zone();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v18 - v8;
  result = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v18 = v1;
    v12 = v9 + 16;
    v13 = *(_QWORD *)(v7 + 72);
    v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = a1 + v21;
    v15 = MEMORY[0x24BEE4AF8];
    v19 = v3;
    v20 = v9 + 16;
    do
    {
      sub_2378D07D8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      if (v12[*(int *)(v3 + 32)] == 1)
      {
        sub_2378D0858((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2379D64EC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        v16 = *(_QWORD *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_2379D64EC(v16 > 1, v17 + 1, 1);
          v15 = v22;
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        sub_2378D0858((uint64_t)v6, v15 + v21 + v17 * v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        v3 = v19;
        v12 = v20;
      }
      else
      {
        sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      }
      v14 += v13;
      --v11;
    }
    while (v11);
    return v22;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_237906510(uint64_t a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[512];
  _BYTE v50[512];
  _BYTE v51[520];
  uint64_t v52;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Component();
  v6 = MEMORY[0x24BDAC7A8](v43);
  v40 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  result = MEMORY[0x24BEE4AF8];
  v52 = MEMORY[0x24BEE4AF8];
  v42 = *(_QWORD *)(a1 + 16);
  if (v42)
  {
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v45 = *(_QWORD *)(v8 + 72);
    v37 = v13;
    v41 = a1 + v13;
    v38 = (char *)&v36 - v9;
    v39 = a2;
    while (1)
    {
      sub_2378D07D8(v41 + v45 * v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v15 = *(_QWORD *)&v10[*(int *)(v43 + 32)];
      v16 = *(_QWORD *)(v15 + 16);
      v46 = v12;
      if (v16)
      {
        v17 = type metadata accessor for Slot();
        v18 = *(_QWORD *)(v17 - 8);
        v19 = v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        v20 = *(_QWORD *)(v18 + 72);
        v21 = type metadata accessor for Instrument();
        v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
        v44 = v15;
        swift_bridgeObjectRetain_n();
        v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v48 = v17;
        do
        {
          v24 = v19 + *(int *)(v17 + 36);
          if (v22(v24, 1, v21) != 1)
          {
            v25 = v24;
            v26 = v47;
            sub_2378BBFE0(v25, v47, &qword_25681F430);
            sub_23788F46C((const void *)(v26 + *(int *)(v21 + 20)), v51);
            sub_2378DE6E0(v51, sub_2378DD44C);
            sub_2378DE6A4(v26, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v23 = sub_237895F10(0, v23[2] + 1, 1, v23);
            v28 = v23[2];
            v27 = v23[3];
            if (v28 >= v27 >> 1)
              v23 = sub_237895F10((_QWORD *)(v27 > 1), v28 + 1, 1, v23);
            v23[2] = v28 + 1;
            sub_23788F46C(v51, &v23[64 * v28 + 4]);
            v17 = v48;
          }
          v19 += v20;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
        v10 = v38;
        a2 = v39;
      }
      else
      {
        v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      v29 = v23[2];
      if (v29)
      {
        swift_bridgeObjectRetain();
        sub_23788F46C(v23 + 4, v51);
        sub_23788F46C(v51, v50);
        sub_23788F46C(a2, v49);
        sub_2378DE6E0(v51, sub_2378DD44C);
        _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v50);
        if ((v30 & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease_n();
          sub_2378DE6E0(v51, sub_2378DE7AC);
          sub_2378D0858((uint64_t)v10, v40, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v33 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2379D64B4(0, *(_QWORD *)(v33 + 16) + 1, 1);
            v33 = v52;
          }
          v35 = *(_QWORD *)(v33 + 16);
          v34 = *(_QWORD *)(v33 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_2379D64B4(v34 > 1, v35 + 1, 1);
            v33 = v52;
          }
          *(_QWORD *)(v33 + 16) = v35 + 1;
          sub_2378D0858(v40, v33 + v37 + v35 * v45, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v14 = v46;
          goto LABEL_5;
        }
        v31 = (char *)(v23 + 68);
        while (1)
        {
          sub_2378DE6E0(v51, sub_2378DE7AC);
          if (!--v29)
            break;
          sub_23788F46C(v31, v51);
          sub_23788F46C(v51, v50);
          sub_23788F46C(a2, v49);
          sub_2378DE6E0(v51, sub_2378DD44C);
          _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v50);
          v31 += 512;
          if ((v32 & 1) != 0)
            goto LABEL_22;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v14 = v46;
      sub_2378DE6A4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_5:
      v12 = v14 + 1;
      if (v12 == v42)
        return v52;
    }
  }
  return result;
}

uint64_t sub_237906984(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_237895BE4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for Component() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237906B2C(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t *, uint64_t, unint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t KeyPath;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v84[2];
  int v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE v113[520];

  v89 = a4;
  v111 = a2;
  v109 = a1;
  v5 = sub_237A86E94();
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v86 = (char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v93 = (uint64_t)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v92 = (uint64_t)v84 - v10;
  v11 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v100 = (uint64_t)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v97 = (uint64_t)v84 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D40);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v99 = (uint64_t)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v105 = (uint64_t)v84 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (_QWORD *)((char *)v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v23);
  v103 = (char *)v84 - v26;
  v110 = type metadata accessor for Component();
  v27 = *(_QWORD *)(v110 - 8);
  v28 = MEMORY[0x24BDAC7A8](v110);
  v91 = (char *)v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v96 = (uint64_t)v84 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v84 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v104 = (uint64_t)v84 - v35;
  if (a3 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v36 = sub_237A880C4();
    if (v36)
      goto LABEL_3;
  }
  else
  {
    v36 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
    {
LABEL_3:
      v37 = 0;
      v90 = 0;
      v102 = a3 & 0xC000000000000001;
      v98 = a3;
      v94 = a3 + 32;
      v85 = v89 & 1;
      v84[1] = MEMORY[0x24BEE4AE0] + 8;
      a3 = v110;
      v106 = v27;
      v95 = v25;
      v101 = v36;
      while (1)
      {
        if (v102)
        {
          v39 = MEMORY[0x23B81EBEC](v37, v98);
          v40 = __OFADD__(v37, 1);
          v41 = v37 + 1;
          if (v40)
            goto LABEL_43;
        }
        else
        {
          v39 = swift_retain();
          v40 = __OFADD__(v37, 1);
          v41 = v37 + 1;
          if (v40)
          {
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
        }
        v107 = v41;
        v108 = v39;
        v42 = (uint64_t **)(v39 + *(_QWORD *)(*(_QWORD *)v39 + 144));
        swift_beginAccess();
        v25 = *v42;
        v43 = (*v42)[2];
        if (!v43)
        {
          swift_bridgeObjectRetain();
          v57 = (uint64_t)v103;
LABEL_27:
          (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v27 + 56))(v57, 1, 1, a3);
          goto LABEL_29;
        }
        v44 = (uint64_t)v103;
        v45 = v27;
        v46 = (uint64_t)v25
            + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
        swift_bridgeObjectRetain_n();
        v47 = *(_QWORD *)(v45 + 72);
        while (1)
        {
          sub_2378D07D8(v46, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v49 = *(_QWORD *)&v34[*(int *)(v110 + 32)];
          if (*(_QWORD *)(v49 + 16))
            break;
          if (!v111)
            goto LABEL_28;
LABEL_14:
          sub_2378DE6A4((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v46 += v47;
          if (!--v43)
          {
            swift_bridgeObjectRelease();
            v57 = v44;
            a3 = v110;
            v27 = v106;
            goto LABEL_27;
          }
        }
        v50 = type metadata accessor for Slot();
        v51 = *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80);
        sub_2378BBFE0(v49 + *(int *)(v50 + 36) + ((v51 + 32) & ~v51), (uint64_t)v21, &qword_25681F430);
        v52 = type metadata accessor for Instrument();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v21, 1, v52) == 1)
        {
          sub_2378BC024((uint64_t)v21, &qword_25681F430);
          v53 = 0xEB00000000746567;
          v54 = 0x6469577974706D45;
          if (!v111)
            goto LABEL_24;
        }
        else
        {
          sub_23788F46C(&v21[*(int *)(v52 + 20)], v113);
          sub_2378DE6E0(v113, sub_2378DD44C);
          sub_2378DE6A4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
          sub_23788F46C(v113, &v112);
          Instrument.Kind.name.getter();
          v54 = v55;
          v53 = v56;
          sub_2378DE6E0(v113, sub_2378DE7AC);
          if (!v111)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            goto LABEL_14;
          }
        }
        if (v54 != v109 || v53 != v111)
          break;
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        v57 = v44;
        sub_2378D0858((uint64_t)v34, v44, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v27 = v106;
        v58 = v44;
        a3 = v110;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v58, 0, 1, v110);
LABEL_29:
        swift_bridgeObjectRelease();
        v59 = *(unsigned int (**)(uint64_t *, uint64_t, unint64_t))(v27 + 48);
        if (v59((uint64_t *)v57, 1, a3) == 1)
        {
          sub_2378BC024(v57, &qword_2568207A8);
          v38 = v101;
          v37 = v107;
        }
        else
        {
          v60 = v57;
          v61 = v104;
          sub_2378D0858(v60, v104, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v62 = v97;
          sub_2378BBFE0(v61, v97, qword_2568207C8);
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
          v64 = *(_QWORD *)(v63 - 8);
          v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
          v65(v62, 0, 2, v63);
          v66 = v62;
          v67 = v100;
          sub_2378D0858(v66, v100, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
          v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v67, 2, v63);
          if (!(_DWORD)v68)
            sub_237870370(v100, v99, qword_2568207C8);
          v69 = v99;
          v65(v99, v68, 2, v63);
          v70 = v105;
          sub_237870370(v69, v105, &qword_256820D40);
          v25 = v95;
          sub_2378FBA90(v70, (uint64_t)v95);
          if (v59(v25, 1, a3) == 1)
          {
            sub_2378BC024((uint64_t)v25, &qword_2568207A8);
            v27 = v106;
            v37 = v107;
            v38 = v101;
          }
          else
          {
            v71 = v96;
            sub_2378D0858((uint64_t)v25, v96, (uint64_t (*)(_QWORD))type metadata accessor for Component);
            v72 = v92;
            v73 = sub_2378BBFE0(v71, v92, qword_2568207C8);
            MEMORY[0x24BDAC7A8](v73);
            v84[-2] = a3;
            v74 = sub_23786FAA0(&qword_256820D30, (uint64_t (*)(uint64_t))type metadata accessor for Component, (uint64_t)&protocol conformance descriptor for Component);
            v84[-1] = v74;
            KeyPath = swift_getKeyPath();
            MEMORY[0x24BDAC7A8](KeyPath);
            v84[-2] = a3;
            v84[-1] = v74;
            swift_getKeyPath();
            v76 = (uint64_t)v91;
            sub_237A866FC();
            swift_release();
            swift_release();
            v77 = v93;
            v25 = qword_2568207C8;
            sub_2378BBFE0(v76, v93, qword_2568207C8);
            sub_2378DE6A4(v76, (uint64_t (*)(_QWORD))type metadata accessor for Component);
            sub_237A86594();
            sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            LOBYTE(v71) = sub_237A877DC();
            sub_2378BC024(v77, qword_2568207C8);
            sub_2378BC024(v72, qword_2568207C8);
            if ((v71 & 1) != 0)
            {
              sub_2378DE6A4(v96, (uint64_t (*)(_QWORD))type metadata accessor for Component);
            }
            else
            {
              if ((v89 & 1) != 0)
              {
                v78 = v108;
                swift_retain();
                v79 = v96;
              }
              else
              {
                v79 = v96;
                v78 = v108;
              }
              v80 = v86;
              v81 = sub_237A86E88();
              MEMORY[0x24BDAC7A8](v81);
              LOBYTE(v84[-4]) = v85;
              v84[-3] = v78;
              v84[-2] = v79;
              swift_allocObject();
              swift_weakInit();
              swift_retain();
              v25 = (uint64_t *)v79;
              v82 = v90;
              sub_237A8690C();
              v90 = v82;
              swift_release();
              swift_release();
              (*(void (**)(char *, uint64_t))(v87 + 8))(v80, v88);
              sub_2378DE6A4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Component);
              swift_release();
              a3 = v110;
            }
            v27 = v106;
            v37 = v107;
            v38 = v101;
          }
          sub_2378BC024(v105, &qword_256820D40);
          sub_2378DE6A4(v104, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        }
        swift_release();
        if (v37 == v38)
          return swift_bridgeObjectRelease();
      }
      v48 = sub_237A8840C();
      swift_bridgeObjectRelease();
      if ((v48 & 1) != 0)
        goto LABEL_28;
      goto LABEL_14;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379075B4()
{
  return sub_237992424();
}

uint64_t sub_2379075D4(uint64_t a1)
{
  return sub_23799A92C(a1);
}

uint64_t sub_2379075F4()
{
  return 16;
}

__n128 sub_237907600(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23790760C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_237907654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237992D24();
  *a1 = result;
  return result;
}

uint64_t sub_23790767C()
{
  swift_bridgeObjectRetain();
  return sub_237992DAC();
}

uint64_t sub_2379076A4()
{
  return 16;
}

__n128 sub_2379076B0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2379076BC(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 336) >> 3) > 0x80000000)
    return -(*(_QWORD *)(a1 + 336) >> 3);
  else
    return 0;
}

#error "23790789C: call analysis failed (funcsize=189)"

#error "237907CFC: call analysis failed (funcsize=205)"

#error "237907DB0: call analysis failed (funcsize=52)"

BOOL sub_237907DD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2378ECE50(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_237907DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.ListDirection(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256821290);
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568212F8);
}

uint64_t sub_237907E5C()
{
  return sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_237907E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_256820C48);
}

uint64_t sub_237907EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821370, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_256820C48);
}

uint64_t sub_237907ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_256820C58);
}

uint64_t sub_237907EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821368, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_256820C58);
}

uint64_t sub_237907F28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_71Tm(a1, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, a2);
}

uint64_t sub_237907F34(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E54DC(a1, a2, a3, a4, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, (void (*)(uint64_t, uint64_t))sub_2378E51FC);
}

uint64_t sub_237907F58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_71Tm(a1, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, a2);
}

uint64_t keypath_get_71Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_2378BBFE0(v4, a3, &qword_256820C60);
}

uint64_t sub_237907FBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E54DC(a1, a2, a3, a4, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, (void (*)(uint64_t, uint64_t))sub_2378E5614);
}

uint64_t sub_237907FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_256820C70);
}

uint64_t sub_237908004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821348, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_256820C70);
}

uint64_t sub_237908030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_256820C80);
}

uint64_t sub_237908054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821360, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_256820C80);
}

uint64_t sub_237908080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_256820C70);
}

uint64_t sub_2379080A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821348, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_256820C70);
}

uint64_t sub_2379080D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_256820C98);
}

uint64_t sub_2379080F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821358, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_256820C98);
}

uint64_t sub_237908120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_256820CA8);
}

uint64_t sub_237908144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821350, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_256820CA8);
}

uint64_t sub_237908170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_256820C70);
}

uint64_t sub_237908194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821348, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_256820C70);
}

uint64_t sub_2379081C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_256820CC0);
}

uint64_t sub_2379081E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256821340, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_256820CC0);
}

uint64_t sub_237908210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2378E6DF8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_256820CD0);
}

uint64_t sub_237908234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378E6E64(a1, a2, a3, a4, &qword_256820CD8, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_256820CD0);
}

uint64_t sub_237908270()
{
  return type metadata accessor for ClusterTransitionCoordinator(0);
}

uint64_t type metadata accessor for ClusterTransitionCoordinator(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256820D88);
}

uint64_t sub_23790828C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2379082C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_2379086D0(319, &qword_256820D98, &qword_256820CF8);
  if (v0 <= 0x3F)
  {
    sub_2379086D0(319, &qword_256820DA0, &qword_256820D00);
    if (v1 <= 0x3F)
    {
      sub_23790A73C(319, &qword_256820DA8, (void (*)(uint64_t))type metadata accessor for RequestContentModel);
      if (v2 <= 0x3F)
      {
        sub_23790867C();
        if (v3 <= 0x3F)
        {
          sub_2379086D0(319, &qword_256820DB8, &qword_256820D08);
          if (v4 <= 0x3F)
          {
            sub_2379086D0(319, &qword_256820DC0, &qword_256820D10);
            if (v5 <= 0x3F)
            {
              sub_2379086D0(319, &qword_256820DC8, &qword_256820CF0);
              if (v6 <= 0x3F)
              {
                sub_2379086D0(319, &qword_256820DD0, &qword_256820CE8);
                if (v7 <= 0x3F)
                {
                  sub_2379086D0(319, qword_256820DD8, &qword_256820D18);
                  if (v8 <= 0x3F)
                    swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ClusterTransitionCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.requestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$requestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.focusOrder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$focusOrder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.zone1RequestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.zone2RequestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningRequestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningRequestContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.requestContentTransitions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$requestContentTransitions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningComponent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningComponent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.componentTransitions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$componentTransitions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.activeLayout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$activeLayout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningLayout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningLayout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.layoutTransition.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$layoutTransition.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.__allocating_init(zones:additionalDynamicListItems:additionalMapsMediaItems:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 816))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.activeItems(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.insert(widgets:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.remove(widget:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.showDecorations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.updateRequestContent(with:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

void sub_23790867C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256820DB0)
  {
    v0 = sub_237A86720();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256820DB0);
  }
}

void sub_2379086D0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_237A86720();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.LayoutTransition(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, int *);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  id v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, int *);
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unsigned int (*v96)(_QWORD, _QWORD, _QWORD);
  uint64_t v97;
  void (*v98)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = sub_237A86594();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, v3, v7);
    v9 = v6[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)v3 + v9;
    v12 = (int *)type metadata accessor for Layout();
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v96 = v14;
      v98 = v8;
      v100 = v7;
      v102 = v13;
      v8(v10, v11, v7);
      v17 = v12[5];
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      *(_QWORD *)&v10[v12[6]] = *(_QWORD *)&v11[v12[6]];
      v21 = v12[7];
      v22 = &v10[v21];
      v23 = &v11[v21];
      v24 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
      v10[v12[9]] = v11[v12[9]];
      v25 = v12[10];
      v26 = &v10[v25];
      v27 = &v11[v25];
      v28 = *((_OWORD *)v27 + 4);
      v29 = *((_OWORD *)v27 + 2);
      *((_OWORD *)v26 + 3) = *((_OWORD *)v27 + 3);
      *((_OWORD *)v26 + 4) = v28;
      v30 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
      *((_OWORD *)v26 + 2) = v29;
      v31 = v12[11];
      v32 = &v10[v31];
      v33 = &v11[v31];
      v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      v35 = v12[12];
      v36 = &v10[v35];
      v37 = &v11[v35];
      v38 = *(_QWORD *)&v11[v35 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v38)
      {
        v39 = *(void **)v37;
        v40 = *((_QWORD *)v37 + 1);
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v40;
        v41 = *((_QWORD *)v37 + 3);
        v42 = *((_QWORD *)v37 + 4);
        *((_QWORD *)v36 + 2) = v38;
        *((_QWORD *)v36 + 3) = v41;
        *((_QWORD *)v36 + 4) = v42;
        v93 = *((_QWORD *)v37 + 6);
        v94 = *((_QWORD *)v37 + 5);
        v95 = v3;
        v43 = v37[56];
        v44 = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_237908B80(v94, v93, v43);
        *((_QWORD *)v36 + 5) = v94;
        *((_QWORD *)v36 + 6) = v93;
        v36[56] = v43;
        v3 = v95;
      }
      else
      {
        v45 = *((_OWORD *)v37 + 1);
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *((_OWORD *)v36 + 1) = v45;
        *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
        *(_OWORD *)(v36 + 41) = *(_OWORD *)(v37 + 41);
      }
      *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
      v46 = v12[13];
      v47 = &v10[v46];
      v48 = &v11[v46];
      v49 = *(_QWORD *)v48;
      v50 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = v49;
      *((_QWORD *)v47 + 1) = v50;
      v13 = v102;
      v51 = *(void (**)(char *, _QWORD, uint64_t, int *))(v102 + 56);
      swift_bridgeObjectRetain();
      v51(v10, 0, 1, v12);
      v8 = v98;
      v7 = v100;
      v14 = v96;
    }
    v52 = v6[6];
    v53 = (char *)a1 + v52;
    v54 = (char *)v3 + v52;
    if (v14((char *)v3 + v52, 1, v12))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v103 = v13;
      v8(v53, v54, v7);
      v56 = v12[5];
      v57 = &v53[v56];
      v58 = &v54[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      *(_QWORD *)&v53[v12[6]] = *(_QWORD *)&v54[v12[6]];
      v60 = v12[7];
      v61 = &v53[v60];
      v62 = &v54[v60];
      v63 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = v63;
      *(_QWORD *)&v53[v12[8]] = *(_QWORD *)&v54[v12[8]];
      v53[v12[9]] = v54[v12[9]];
      v64 = v12[10];
      v65 = &v53[v64];
      v66 = &v54[v64];
      v67 = *((_OWORD *)v66 + 4);
      v68 = *((_OWORD *)v66 + 2);
      *((_OWORD *)v65 + 3) = *((_OWORD *)v66 + 3);
      *((_OWORD *)v65 + 4) = v67;
      v69 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v69;
      *((_OWORD *)v65 + 2) = v68;
      v70 = v12[11];
      v71 = &v53[v70];
      v72 = &v54[v70];
      v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      v74 = v12[12];
      v75 = &v53[v74];
      v76 = &v54[v74];
      v77 = *(_QWORD *)&v54[v74 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v77)
      {
        v78 = *(void **)v76;
        v79 = *((_QWORD *)v76 + 1);
        *(_QWORD *)v75 = *(_QWORD *)v76;
        *((_QWORD *)v75 + 1) = v79;
        v80 = *((_QWORD *)v76 + 3);
        v81 = *((_QWORD *)v76 + 4);
        *((_QWORD *)v75 + 2) = v77;
        *((_QWORD *)v75 + 3) = v80;
        *((_QWORD *)v75 + 4) = v81;
        v97 = *((_QWORD *)v76 + 6);
        v99 = *((_QWORD *)v76 + 5);
        v101 = v6;
        v82 = v76[56];
        v83 = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_237908B80(v99, v97, v82);
        *((_QWORD *)v75 + 5) = v99;
        *((_QWORD *)v75 + 6) = v97;
        v75[56] = v82;
        v6 = v101;
      }
      else
      {
        v84 = *((_OWORD *)v76 + 1);
        *(_OWORD *)v75 = *(_OWORD *)v76;
        *((_OWORD *)v75 + 1) = v84;
        *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
        *(_OWORD *)(v75 + 41) = *(_OWORD *)(v76 + 41);
      }
      *((_QWORD *)v75 + 8) = *((_QWORD *)v76 + 8);
      v85 = v12[13];
      v86 = &v53[v85];
      v87 = &v54[v85];
      v88 = *(_QWORD *)v87;
      v89 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = v88;
      *((_QWORD *)v86 + 1) = v89;
      v90 = *(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56);
      swift_bridgeObjectRetain();
      v90(v53, 0, 1, v12);
    }
    v91 = v6[8];
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)v3 + v6[7]);
    *((_BYTE *)a1 + v91) = *((_BYTE *)v3 + v91);
  }
  return a1;
}

uint64_t sub_237908B80(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_237A86594();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for Layout();
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v9 = v6 + *(int *)(v7 + 48);
    if (*(_QWORD *)(v9 + 16))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237908D68(*(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_BYTE *)(v9 + 56));
    }
    swift_bridgeObjectRelease();
  }
  v10 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v10, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v12 = v10 + *(int *)(v7 + 48);
    if (*(_QWORD *)(v12 + 16))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237908D68(*(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_BYTE *)(v12 + 56));
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237908D68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, int *);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, int *);
  uint64_t v91;
  char v93;
  unsigned int (*v94)(_QWORD, _QWORD, _QWORD);
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Layout();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v94 = v13;
    v95 = v7;
    v98 = v12;
    v100 = a3;
    v102 = a2;
    v96 = v6;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v15 = v11[5];
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
    v19 = v11[7];
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    v9[v11[9]] = v10[v11[9]];
    v23 = v11[10];
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = *((_OWORD *)v25 + 4);
    v27 = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 4) = v26;
    v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    *((_OWORD *)v24 + 2) = v27;
    v29 = v11[11];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    v33 = v11[12];
    v34 = &v9[v33];
    v35 = &v10[v33];
    v36 = *(_QWORD *)&v10[v33 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v36)
    {
      v37 = *(void **)v35;
      v38 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v38;
      v39 = *((_QWORD *)v35 + 3);
      v40 = *((_QWORD *)v35 + 4);
      *((_QWORD *)v34 + 2) = v36;
      *((_QWORD *)v34 + 3) = v39;
      *((_QWORD *)v34 + 4) = v40;
      v41 = *((_QWORD *)v35 + 5);
      v42 = *((_QWORD *)v35 + 6);
      v93 = v35[56];
      v43 = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237908B80(v41, v42, v93);
      *((_QWORD *)v34 + 5) = v41;
      *((_QWORD *)v34 + 6) = v42;
      v34[56] = v93;
    }
    else
    {
      v44 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v44;
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *(_OWORD *)(v34 + 41) = *(_OWORD *)(v35 + 41);
    }
    *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
    v45 = v11[13];
    v46 = &v9[v45];
    v47 = &v10[v45];
    v48 = *(_QWORD *)v47;
    v49 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
    v12 = v98;
    v50 = *(void (**)(char *, _QWORD, uint64_t, int *))(v98 + 56);
    swift_bridgeObjectRetain();
    v50(v9, 0, 1, v11);
    a3 = v100;
    a2 = v102;
    v7 = v95;
    v6 = v96;
    v13 = v94;
  }
  v51 = a3[6];
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  if (v13(a2 + v51, 1, v11))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v99 = v12;
    v101 = a3;
    v103 = a2;
    v7((uint64_t)v52, (uint64_t)v53, v6);
    v55 = v11[5];
    v56 = &v52[v55];
    v57 = &v53[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    *(_QWORD *)&v52[v11[6]] = *(_QWORD *)&v53[v11[6]];
    v59 = v11[7];
    v60 = &v52[v59];
    v61 = &v53[v59];
    v62 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *((_QWORD *)v60 + 1) = v62;
    *(_QWORD *)&v52[v11[8]] = *(_QWORD *)&v53[v11[8]];
    v52[v11[9]] = v53[v11[9]];
    v63 = v11[10];
    v64 = &v52[v63];
    v65 = &v53[v63];
    v66 = *((_OWORD *)v65 + 4);
    v67 = *((_OWORD *)v65 + 2);
    *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
    *((_OWORD *)v64 + 4) = v66;
    v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v68;
    *((_OWORD *)v64 + 2) = v67;
    v69 = v11[11];
    v70 = &v52[v69];
    v71 = &v53[v69];
    v72 = *((_OWORD *)v71 + 1);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *((_OWORD *)v70 + 1) = v72;
    v73 = v11[12];
    v74 = &v52[v73];
    v75 = &v53[v73];
    v76 = *(_QWORD *)&v53[v73 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v76)
    {
      v77 = *(void **)v75;
      v78 = *((_QWORD *)v75 + 1);
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v78;
      v79 = *((_QWORD *)v75 + 3);
      v80 = *((_QWORD *)v75 + 4);
      *((_QWORD *)v74 + 2) = v76;
      *((_QWORD *)v74 + 3) = v79;
      *((_QWORD *)v74 + 4) = v80;
      v81 = *((_QWORD *)v75 + 5);
      v82 = *((_QWORD *)v75 + 6);
      v97 = v75[56];
      v83 = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237908B80(v81, v82, v97);
      *((_QWORD *)v74 + 5) = v81;
      *((_QWORD *)v74 + 6) = v82;
      v74[56] = v97;
    }
    else
    {
      v84 = *((_OWORD *)v75 + 1);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v84;
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *(_OWORD *)(v74 + 41) = *(_OWORD *)(v75 + 41);
    }
    *((_QWORD *)v74 + 8) = *((_QWORD *)v75 + 8);
    v85 = v11[13];
    v86 = &v52[v85];
    v87 = &v53[v85];
    v88 = *(_QWORD *)v87;
    v89 = *((_QWORD *)v87 + 1);
    *(_QWORD *)v86 = v88;
    *((_QWORD *)v86 + 1) = v89;
    v90 = *(void (**)(char *, _QWORD, uint64_t, int *))(v99 + 56);
    swift_bridgeObjectRetain();
    v90(v52, 0, 1, v11);
    a3 = v101;
    a2 = v103;
  }
  v91 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v91) = *(_BYTE *)(a2 + v91);
  return a1;
}

_BYTE *assignWithCopy for ClusterTransitionCoordinator.LayoutTransition(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void (*v74)(_BYTE *, _QWORD, uint64_t, int *);
  void *v75;
  uint64_t v76;
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  int v90;
  int v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _OWORD *v99;
  _OWORD *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  _OWORD *v105;
  _OWORD *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  void (*v153)(_BYTE *, _QWORD, uint64_t, int *);
  void *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  id v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v169;
  char v170;
  char v171;
  uint64_t v172;
  void (*v173)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v174;
  _BYTE *v175;
  _BYTE *v176;
  _BYTE *v177;
  _BYTE *v178;
  _BYTE *v179;
  int *v180;
  int *v181;
  int *v182;
  uint64_t v183;
  uint64_t v184;

  v6 = sub_237A86594();
  v183 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v183 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for Layout();
  v184 = *((_QWORD *)v11 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v184 + 48);
  v13 = v12(v9, 1, v11);
  v14 = v12(v10, 1, v11);
  v173 = v7;
  if (!v13)
  {
    if (!v14)
    {
      v7(v9, v10, v6);
      v40 = v11[5];
      v41 = &v9[v40];
      v42 = &v10[v40];
      *v41 = *v42;
      v41[1] = v42[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43 = v11[7];
      v44 = &v9[v43];
      v45 = &v10[v43];
      *v44 = *v45;
      v44[1] = v45[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      swift_retain();
      swift_release();
      v9[v11[9]] = v10[v11[9]];
      v46 = v11[10];
      v47 = &v9[v46];
      v48 = &v10[v46];
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v49 = *((_OWORD *)v48 + 1);
      v50 = *((_OWORD *)v48 + 2);
      v51 = *((_OWORD *)v48 + 3);
      *(_DWORD *)(v47 + 63) = *(_DWORD *)(v48 + 63);
      *((_OWORD *)v47 + 2) = v50;
      *((_OWORD *)v47 + 3) = v51;
      *((_OWORD *)v47 + 1) = v49;
      *((_QWORD *)v47 + 9) = *((_QWORD *)v48 + 9);
      v52 = v11[11];
      v53 = &v9[v52];
      v54 = &v10[v52];
      *v53 = *v54;
      v53[1] = v54[1];
      v53[2] = v54[2];
      v53[3] = v54[3];
      v55 = v11[12];
      v56 = (uint64_t)&v9[v55];
      v57 = &v10[v55];
      v58 = *(_QWORD *)&v9[v55 + 16];
      v59 = *(_QWORD *)&v10[v55 + 16];
      v172 = v6;
      if (v58)
      {
        if (v59)
        {
          v60 = *(void **)v56;
          v61 = *(void **)v57;
          *(_QWORD *)v56 = *(_QWORD *)v57;
          v62 = v61;

          *(_QWORD *)(v56 + 8) = *((_QWORD *)v57 + 1);
          v180 = a3;
          *(_QWORD *)(v56 + 16) = *((_QWORD *)v57 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v56 + 24) = *((_QWORD *)v57 + 3);
          *(_QWORD *)(v56 + 32) = *((_QWORD *)v57 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v175 = a1;
          v63 = *((_QWORD *)v57 + 5);
          v64 = *((_QWORD *)v57 + 6);
          LOBYTE(v60) = v57[56];
          sub_237908B80(v63, v64, (char)v60);
          v65 = *(_QWORD *)(v56 + 40);
          v66 = *(_QWORD *)(v56 + 48);
          v67 = *(_BYTE *)(v56 + 56);
          *(_QWORD *)(v56 + 40) = v63;
          *(_QWORD *)(v56 + 48) = v64;
          a3 = v180;
          a1 = v175;
          *(_BYTE *)(v56 + 56) = (_BYTE)v60;
          sub_237908D68(v65, v66, v67);
        }
        else
        {
          sub_237909C0C(v56);
          v79 = *((_OWORD *)v57 + 1);
          v78 = *((_OWORD *)v57 + 2);
          v80 = *(_OWORD *)v57;
          *(_OWORD *)(v56 + 41) = *(_OWORD *)(v57 + 41);
          *(_OWORD *)(v56 + 16) = v79;
          *(_OWORD *)(v56 + 32) = v78;
          *(_OWORD *)v56 = v80;
        }
      }
      else if (v59)
      {
        v75 = *(void **)v57;
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *(_QWORD *)(v56 + 8) = *((_QWORD *)v57 + 1);
        *(_QWORD *)(v56 + 16) = *((_QWORD *)v57 + 2);
        *(_QWORD *)(v56 + 24) = *((_QWORD *)v57 + 3);
        *(_QWORD *)(v56 + 32) = *((_QWORD *)v57 + 4);
        v76 = *((_QWORD *)v57 + 5);
        v169 = *((_QWORD *)v57 + 6);
        v171 = v57[56];
        v77 = v75;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_237908B80(v76, v169, v171);
        *(_QWORD *)(v56 + 40) = v76;
        *(_QWORD *)(v56 + 48) = v169;
        *(_BYTE *)(v56 + 56) = v171;
      }
      else
      {
        v81 = *(_OWORD *)v57;
        v82 = *((_OWORD *)v57 + 1);
        v83 = *((_OWORD *)v57 + 2);
        *(_OWORD *)(v56 + 41) = *(_OWORD *)(v57 + 41);
        *(_OWORD *)(v56 + 16) = v82;
        *(_OWORD *)(v56 + 32) = v83;
        *(_OWORD *)v56 = v81;
      }
      *(_QWORD *)(v56 + 64) = *((_QWORD *)v57 + 8);
      v84 = v11[13];
      v85 = &v9[v84];
      v86 = &v10[v84];
      *(_QWORD *)&v9[v84] = *(_QWORD *)&v10[v84];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
      goto LABEL_18;
    }
    sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
LABEL_7:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  if (v14)
    goto LABEL_7;
  v178 = a2;
  v174 = a1;
  v172 = v6;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v183 + 16))(v9, v10, v6);
  v15 = v11[5];
  v16 = &v9[v15];
  v17 = &v10[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
  v18 = v11[7];
  v19 = &v9[v18];
  v20 = &v10[v18];
  *v19 = *v20;
  v19[1] = v20[1];
  *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
  v9[v11[9]] = v10[v11[9]];
  v21 = v11[10];
  v22 = &v9[v21];
  v23 = &v10[v21];
  v25 = v23[3];
  v24 = v23[4];
  v26 = v23[2];
  v22[1] = v23[1];
  v22[2] = v26;
  v22[3] = v25;
  v22[4] = v24;
  *v22 = *v23;
  v27 = v11[11];
  v28 = &v9[v27];
  v29 = &v10[v27];
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v11[12];
  v32 = &v9[v31];
  v33 = &v10[v31];
  v34 = *(_QWORD *)&v10[v31 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v34)
  {
    v35 = *(void **)v33;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
    *((_QWORD *)v32 + 3) = *((_QWORD *)v33 + 3);
    *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
    v37 = *((_QWORD *)v33 + 5);
    v36 = *((_QWORD *)v33 + 6);
    v170 = v33[56];
    v38 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v37, v36, v170);
    *((_QWORD *)v32 + 5) = v37;
    *((_QWORD *)v32 + 6) = v36;
    v32[56] = v170;
  }
  else
  {
    v68 = *(_OWORD *)v33;
    v69 = *((_OWORD *)v33 + 1);
    v70 = *((_OWORD *)v33 + 2);
    *(_OWORD *)(v32 + 41) = *(_OWORD *)(v33 + 41);
    *((_OWORD *)v32 + 1) = v69;
    *((_OWORD *)v32 + 2) = v70;
    *(_OWORD *)v32 = v68;
  }
  a1 = v174;
  a2 = v178;
  *((_QWORD *)v32 + 8) = *((_QWORD *)v33 + 8);
  v71 = v11[13];
  v72 = &v9[v71];
  v73 = &v10[v71];
  *v72 = *v73;
  v72[1] = v73[1];
  v74 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v184 + 56);
  swift_bridgeObjectRetain();
  v74(v9, 0, 1, v11);
LABEL_18:
  v6 = v172;
LABEL_19:
  v87 = a3[6];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = v12(&a1[v87], 1, v11);
  v91 = v12(v89, 1, v11);
  if (v90)
  {
    if (!v91)
    {
      v176 = a1;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v183 + 16))(v88, v89, v6);
      v92 = v11[5];
      v93 = &v88[v92];
      v94 = &v89[v92];
      *v93 = *v94;
      v93[1] = v94[1];
      *(_QWORD *)&v88[v11[6]] = *(_QWORD *)&v89[v11[6]];
      v95 = v11[7];
      v96 = &v88[v95];
      v97 = &v89[v95];
      *v96 = *v97;
      v96[1] = v97[1];
      *(_QWORD *)&v88[v11[8]] = *(_QWORD *)&v89[v11[8]];
      v88[v11[9]] = v89[v11[9]];
      v98 = v11[10];
      v99 = &v88[v98];
      v100 = &v89[v98];
      v102 = v100[3];
      v101 = v100[4];
      v103 = v100[2];
      v99[1] = v100[1];
      v99[2] = v103;
      v99[3] = v102;
      v99[4] = v101;
      *v99 = *v100;
      v104 = v11[11];
      v105 = &v88[v104];
      v106 = &v89[v104];
      v107 = v106[1];
      *v105 = *v106;
      v105[1] = v107;
      v108 = v11[12];
      v109 = &v88[v108];
      v110 = &v89[v108];
      v111 = *(_QWORD *)&v89[v108 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v111)
      {
        v112 = *(void **)v110;
        *(_QWORD *)v109 = *(_QWORD *)v110;
        *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
        *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
        *((_QWORD *)v109 + 3) = *((_QWORD *)v110 + 3);
        *((_QWORD *)v109 + 4) = *((_QWORD *)v110 + 4);
        v113 = *((_QWORD *)v110 + 5);
        v114 = *((_QWORD *)v110 + 6);
        v181 = a3;
        v115 = v110[56];
        v116 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_237908B80(v113, v114, v115);
        *((_QWORD *)v109 + 5) = v113;
        *((_QWORD *)v109 + 6) = v114;
        v109[56] = v115;
        a3 = v181;
      }
      else
      {
        v147 = *(_OWORD *)v110;
        v148 = *((_OWORD *)v110 + 1);
        v149 = *((_OWORD *)v110 + 2);
        *(_OWORD *)(v109 + 41) = *(_OWORD *)(v110 + 41);
        *((_OWORD *)v109 + 1) = v148;
        *((_OWORD *)v109 + 2) = v149;
        *(_OWORD *)v109 = v147;
      }
      *((_QWORD *)v109 + 8) = *((_QWORD *)v110 + 8);
      v150 = v11[13];
      v151 = &v88[v150];
      v152 = &v89[v150];
      *v151 = *v152;
      v151[1] = v152[1];
      v153 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v184 + 56);
      swift_bridgeObjectRetain();
      v153(v88, 0, 1, v11);
      a1 = v176;
      goto LABEL_36;
    }
LABEL_25:
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    goto LABEL_36;
  }
  if (v91)
  {
    sub_2378DE6A4((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    goto LABEL_25;
  }
  v182 = a3;
  v173(v88, v89, v6);
  v118 = v11[5];
  v119 = &v88[v118];
  v120 = &v89[v118];
  *v119 = *v120;
  v119[1] = v120[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v88[v11[6]] = *(_QWORD *)&v89[v11[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121 = v11[7];
  v122 = &v88[v121];
  v123 = &v89[v121];
  *v122 = *v123;
  v122[1] = v123[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v88[v11[8]] = *(_QWORD *)&v89[v11[8]];
  swift_retain();
  swift_release();
  v88[v11[9]] = v89[v11[9]];
  v124 = v11[10];
  v125 = &v88[v124];
  v126 = &v89[v124];
  *(_OWORD *)v125 = *(_OWORD *)v126;
  v127 = *((_OWORD *)v126 + 1);
  v128 = *((_OWORD *)v126 + 2);
  v129 = *((_OWORD *)v126 + 3);
  *(_DWORD *)(v125 + 63) = *(_DWORD *)(v126 + 63);
  *((_OWORD *)v125 + 2) = v128;
  *((_OWORD *)v125 + 3) = v129;
  *((_OWORD *)v125 + 1) = v127;
  *((_QWORD *)v125 + 9) = *((_QWORD *)v126 + 9);
  v130 = v11[11];
  v131 = &v88[v130];
  v132 = &v89[v130];
  *v131 = *v132;
  v131[1] = v132[1];
  v131[2] = v132[2];
  v131[3] = v132[3];
  v133 = v11[12];
  v134 = (uint64_t)&v88[v133];
  v135 = &v89[v133];
  v136 = *(_QWORD *)&v88[v133 + 16];
  v137 = *(_QWORD *)&v89[v133 + 16];
  v179 = a2;
  if (v136)
  {
    if (v137)
    {
      v138 = *(void **)v134;
      v139 = *(void **)v135;
      *(_QWORD *)v134 = *(_QWORD *)v135;
      v140 = v139;

      *(_QWORD *)(v134 + 8) = *((_QWORD *)v135 + 1);
      *(_QWORD *)(v134 + 16) = *((_QWORD *)v135 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v134 + 24) = *((_QWORD *)v135 + 3);
      *(_QWORD *)(v134 + 32) = *((_QWORD *)v135 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v141 = *((_QWORD *)v135 + 5);
      v142 = *((_QWORD *)v135 + 6);
      v143 = v135[56];
      sub_237908B80(v141, v142, v143);
      v144 = *(_QWORD *)(v134 + 40);
      v145 = *(_QWORD *)(v134 + 48);
      v146 = *(_BYTE *)(v134 + 56);
      *(_QWORD *)(v134 + 40) = v141;
      *(_QWORD *)(v134 + 48) = v142;
      *(_BYTE *)(v134 + 56) = v143;
      sub_237908D68(v144, v145, v146);
    }
    else
    {
      sub_237909C0C(v134);
      v160 = *((_OWORD *)v135 + 1);
      v159 = *((_OWORD *)v135 + 2);
      v161 = *(_OWORD *)v135;
      *(_OWORD *)(v134 + 41) = *(_OWORD *)(v135 + 41);
      *(_OWORD *)(v134 + 16) = v160;
      *(_OWORD *)(v134 + 32) = v159;
      *(_OWORD *)v134 = v161;
    }
  }
  else if (v137)
  {
    v154 = *(void **)v135;
    *(_QWORD *)v134 = *(_QWORD *)v135;
    *(_QWORD *)(v134 + 8) = *((_QWORD *)v135 + 1);
    *(_QWORD *)(v134 + 16) = *((_QWORD *)v135 + 2);
    *(_QWORD *)(v134 + 24) = *((_QWORD *)v135 + 3);
    *(_QWORD *)(v134 + 32) = *((_QWORD *)v135 + 4);
    v156 = *((_QWORD *)v135 + 5);
    v155 = *((_QWORD *)v135 + 6);
    v177 = a1;
    v157 = v135[56];
    v158 = v154;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v156, v155, v157);
    *(_QWORD *)(v134 + 40) = v156;
    *(_QWORD *)(v134 + 48) = v155;
    *(_BYTE *)(v134 + 56) = v157;
    a1 = v177;
  }
  else
  {
    v162 = *(_OWORD *)v135;
    v163 = *((_OWORD *)v135 + 1);
    v164 = *((_OWORD *)v135 + 2);
    *(_OWORD *)(v134 + 41) = *(_OWORD *)(v135 + 41);
    *(_OWORD *)(v134 + 16) = v163;
    *(_OWORD *)(v134 + 32) = v164;
    *(_OWORD *)v134 = v162;
  }
  *(_QWORD *)(v134 + 64) = *((_QWORD *)v135 + 8);
  v165 = v11[13];
  v166 = &v88[v165];
  v167 = &v89[v165];
  *(_QWORD *)&v88[v165] = *(_QWORD *)&v89[v165];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v166 + 1) = *((_QWORD *)v167 + 1);
  a2 = v179;
  a3 = v182;
LABEL_36:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_237909C0C(uint64_t a1)
{
  destroy for Layout.Preview(a1);
  return a1;
}

uint64_t initializeWithTake for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Layout();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    v9[v11[9]] = v10[v11[9]];
    v15 = v11[10];
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = *((_OWORD *)v17 + 3);
    *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
    *((_OWORD *)v16 + 3) = v18;
    *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v19;
    v20 = v11[11];
    v21 = &v9[v20];
    v22 = &v10[v20];
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    v24 = v11[12];
    v25 = &v9[v24];
    v26 = &v10[v24];
    v27 = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    *((_OWORD *)v25 + 3) = v27;
    *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
    v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    *(_OWORD *)&v9[v11[13]] = *(_OWORD *)&v10[v11[13]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v29 = a3[6];
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  if (v13((char *)(a2 + v29), 1, v11))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    *(_OWORD *)&v30[v11[5]] = *(_OWORD *)&v31[v11[5]];
    *(_QWORD *)&v30[v11[6]] = *(_QWORD *)&v31[v11[6]];
    *(_OWORD *)&v30[v11[7]] = *(_OWORD *)&v31[v11[7]];
    *(_QWORD *)&v30[v11[8]] = *(_QWORD *)&v31[v11[8]];
    v30[v11[9]] = v31[v11[9]];
    v33 = v11[10];
    v34 = &v30[v33];
    v35 = &v31[v33];
    v36 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v36;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
    v38 = v11[11];
    v39 = &v30[v38];
    v40 = &v31[v38];
    v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    v42 = v11[12];
    v43 = &v30[v42];
    v44 = &v31[v42];
    v45 = *((_OWORD *)v44 + 3);
    *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
    *((_OWORD *)v43 + 3) = v45;
    *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
    v46 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v46;
    *(_OWORD *)&v30[v11[13]] = *(_OWORD *)&v31[v11[13]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v30, 0, 1, v11);
  }
  v47 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  return a1;
}

uint64_t assignWithTake for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  int v33;
  int v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  _OWORD *v97;
  _OWORD *v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  __int128 v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  __int128 v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;

  v6 = sub_237A86594();
  v120 = *(_QWORD *)(v6 - 8);
  v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 40);
  v119(a1, a2, v6);
  v7 = a3[5];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for Layout();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v120 + 32))(v8, v9, v6);
      *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
      *(_QWORD *)&v8[v10[6]] = *(_QWORD *)&v9[v10[6]];
      *(_OWORD *)&v8[v10[7]] = *(_OWORD *)&v9[v10[7]];
      *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
      v8[v10[9]] = v9[v10[9]];
      v15 = v10[10];
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = v17[3];
      v16[2] = v17[2];
      v16[3] = v18;
      v16[4] = v17[4];
      v19 = v17[1];
      *v16 = *v17;
      v16[1] = v19;
      v20 = v10[11];
      v21 = &v8[v20];
      v22 = &v9[v20];
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = v10[12];
      v25 = &v8[v24];
      v26 = &v9[v24];
      v27 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v27;
      *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
      v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *(_OWORD *)&v8[v10[13]] = *(_OWORD *)&v9[v10[13]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_2378DE6A4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v118 = v11;
  v119((uint64_t)v8, (uint64_t)v9, v6);
  v52 = v10[5];
  v53 = &v8[v52];
  v54 = (uint64_t *)&v9[v52];
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v10[6]] = *(_QWORD *)&v9[v10[6]];
  swift_bridgeObjectRelease();
  v57 = v10[7];
  v58 = &v8[v57];
  v59 = (uint64_t *)&v9[v57];
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
  swift_release();
  v8[v10[9]] = v9[v10[9]];
  v62 = v10[10];
  v63 = &v8[v62];
  v64 = &v9[v62];
  v65 = *((_OWORD *)v64 + 3);
  *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
  *((_OWORD *)v63 + 3) = v65;
  *(_DWORD *)(v63 + 63) = *(_DWORD *)(v64 + 63);
  v66 = *((_OWORD *)v64 + 1);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v66;
  *((_QWORD *)v63 + 9) = *((_QWORD *)v64 + 9);
  v67 = v10[11];
  v68 = &v8[v67];
  v69 = &v9[v67];
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  v71 = v10[12];
  v72 = (uint64_t)&v8[v71];
  v73 = &v9[v71];
  if (!*(_QWORD *)&v8[v71 + 16])
    goto LABEL_21;
  if (!*((_QWORD *)v73 + 2))
  {
    sub_237909C0C(v72);
LABEL_21:
    v110 = *((_OWORD *)v73 + 1);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v110;
    *(_OWORD *)(v72 + 32) = *((_OWORD *)v73 + 2);
    *(_OWORD *)(v72 + 41) = *(_OWORD *)(v73 + 41);
    goto LABEL_22;
  }
  v74 = *(void **)v72;
  *(_QWORD *)v72 = *(_QWORD *)v73;

  v75 = *((_QWORD *)v73 + 2);
  *(_QWORD *)(v72 + 8) = *((_QWORD *)v73 + 1);
  *(_QWORD *)(v72 + 16) = v75;
  swift_bridgeObjectRelease();
  v76 = *((_QWORD *)v73 + 4);
  *(_QWORD *)(v72 + 24) = *((_QWORD *)v73 + 3);
  *(_QWORD *)(v72 + 32) = v76;
  swift_bridgeObjectRelease();
  v77 = v73[56];
  v78 = *(_QWORD *)(v72 + 40);
  v79 = *(_QWORD *)(v72 + 48);
  v80 = *(_BYTE *)(v72 + 56);
  *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
  *(_BYTE *)(v72 + 56) = v77;
  sub_237908D68(v78, v79, v80);
LABEL_22:
  *(_QWORD *)(v72 + 64) = *((_QWORD *)v73 + 8);
  v111 = v10[13];
  v112 = &v8[v111];
  v113 = &v9[v111];
  *v112 = *v113;
  swift_bridgeObjectRelease();
  v112[1] = v113[1];
  v11 = v118;
LABEL_7:
  v30 = a3[6];
  v31 = (_BYTE *)(a1 + v30);
  v32 = (_BYTE *)(a2 + v30);
  v33 = v12((_BYTE *)(a1 + v30), 1, v10);
  v34 = v12(v32, 1, v10);
  if (!v33)
  {
    if (v34)
    {
      sub_2378DE6A4((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      goto LABEL_12;
    }
    v119((uint64_t)v31, (uint64_t)v32, v6);
    v81 = v10[5];
    v82 = &v31[v81];
    v83 = (uint64_t *)&v32[v81];
    v85 = *v83;
    v84 = v83[1];
    *v82 = v85;
    v82[1] = v84;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v31[v10[6]] = *(_QWORD *)&v32[v10[6]];
    swift_bridgeObjectRelease();
    v86 = v10[7];
    v87 = &v31[v86];
    v88 = (uint64_t *)&v32[v86];
    v90 = *v88;
    v89 = v88[1];
    *v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v31[v10[8]] = *(_QWORD *)&v32[v10[8]];
    swift_release();
    v31[v10[9]] = v32[v10[9]];
    v91 = v10[10];
    v92 = &v31[v91];
    v93 = &v32[v91];
    v94 = *((_OWORD *)v93 + 3);
    *((_OWORD *)v92 + 2) = *((_OWORD *)v93 + 2);
    *((_OWORD *)v92 + 3) = v94;
    *(_DWORD *)(v92 + 63) = *(_DWORD *)(v93 + 63);
    v95 = *((_OWORD *)v93 + 1);
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *((_OWORD *)v92 + 1) = v95;
    *((_QWORD *)v92 + 9) = *((_QWORD *)v93 + 9);
    v96 = v10[11];
    v97 = &v31[v96];
    v98 = &v32[v96];
    v99 = v98[1];
    *v97 = *v98;
    v97[1] = v99;
    v100 = v10[12];
    v101 = (uint64_t)&v31[v100];
    v102 = &v32[v100];
    if (*(_QWORD *)&v31[v100 + 16])
    {
      if (*((_QWORD *)v102 + 2))
      {
        v103 = *(void **)v101;
        *(_QWORD *)v101 = *(_QWORD *)v102;

        v104 = *((_QWORD *)v102 + 2);
        *(_QWORD *)(v101 + 8) = *((_QWORD *)v102 + 1);
        *(_QWORD *)(v101 + 16) = v104;
        swift_bridgeObjectRelease();
        v105 = *((_QWORD *)v102 + 4);
        *(_QWORD *)(v101 + 24) = *((_QWORD *)v102 + 3);
        *(_QWORD *)(v101 + 32) = v105;
        swift_bridgeObjectRelease();
        v106 = v102[56];
        v107 = *(_QWORD *)(v101 + 40);
        v108 = *(_QWORD *)(v101 + 48);
        v109 = *(_BYTE *)(v101 + 56);
        *(_OWORD *)(v101 + 40) = *(_OWORD *)(v102 + 40);
        *(_BYTE *)(v101 + 56) = v106;
        sub_237908D68(v107, v108, v109);
LABEL_25:
        *(_QWORD *)(v101 + 64) = *((_QWORD *)v102 + 8);
        v115 = v10[13];
        v116 = &v31[v115];
        v117 = &v32[v115];
        *(_QWORD *)&v31[v115] = *(_QWORD *)&v32[v115];
        swift_bridgeObjectRelease();
        *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
        goto LABEL_13;
      }
      sub_237909C0C(v101);
    }
    v114 = *((_OWORD *)v102 + 1);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v114;
    *(_OWORD *)(v101 + 32) = *((_OWORD *)v102 + 2);
    *(_OWORD *)(v101 + 41) = *(_OWORD *)(v102 + 41);
    goto LABEL_25;
  }
  if (v34)
  {
LABEL_12:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v120 + 32))(v31, v32, v6);
  *(_OWORD *)&v31[v10[5]] = *(_OWORD *)&v32[v10[5]];
  *(_QWORD *)&v31[v10[6]] = *(_QWORD *)&v32[v10[6]];
  *(_OWORD *)&v31[v10[7]] = *(_OWORD *)&v32[v10[7]];
  *(_QWORD *)&v31[v10[8]] = *(_QWORD *)&v32[v10[8]];
  v31[v10[9]] = v32[v10[9]];
  v35 = v10[10];
  v36 = &v31[v35];
  v37 = &v32[v35];
  v38 = v37[3];
  v36[2] = v37[2];
  v36[3] = v38;
  v36[4] = v37[4];
  v39 = v37[1];
  *v36 = *v37;
  v36[1] = v39;
  v40 = v10[11];
  v41 = &v31[v40];
  v42 = &v32[v40];
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v10[12];
  v45 = &v31[v44];
  v46 = &v32[v44];
  v47 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v47;
  *((_QWORD *)v45 + 8) = *((_QWORD *)v46 + 8);
  v48 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v48;
  *(_OWORD *)&v31[v10[13]] = *(_OWORD *)&v32[v10[13]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v31, 0, 1, v10);
LABEL_13:
  v50 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v50) = *(_BYTE *)(a2 + v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.LayoutTransition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790A52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_237A86594();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.LayoutTransition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790A5F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_237A86594();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CF0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

void sub_23790A69C()
{
  unint64_t v0;
  unint64_t v1;

  sub_237A86594();
  if (v0 <= 0x3F)
  {
    sub_23790A73C(319, qword_2568211E0, (void (*)(uint64_t))type metadata accessor for Layout);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23790A73C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_237A87E0C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.ListDirection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_237A86594();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClusterTransitionCoordinator.ListDirection(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_237A86594();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ClusterTransitionCoordinator.ListDirection(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_237A86594();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for ClusterTransitionCoordinator.ListDirection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_237A86594();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_2378BC024((uint64_t)a1, &qword_256820D48);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_237A86594();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for ClusterTransitionCoordinator.ListDirection(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_237A86594();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for ClusterTransitionCoordinator.ListDirection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_237A86594();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_2378BC024((uint64_t)a1, &qword_256820D48);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_237A86594();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.ListDirection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790AC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.ListDirection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790ACB0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23790AD08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23790AD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23790AD88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.ComponentTransition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_237A86594();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_237A86594();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.ComponentTransition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790B0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_237A86594();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.ComponentTransition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23790B130(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_237A86594();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23790B1B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23790B218()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23790B23C(uint64_t a1)
{
  return sub_2378F44D4(a1);
}

uint64_t sub_23790B244()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  if (v0[5])
    swift_release();
  sub_2378902DC(v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);
  return swift_deallocObject();
}

uint64_t sub_23790B29C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 40);
  if (v1)
    return v1();
  return result;
}

_QWORD *sub_23790B2C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[7];
  v5 = a1[8];
  v6 = a1[9];
  v7 = a1[10];
  v8 = a1[11];
  v10 = a1[5];
  swift_bridgeObjectRetain();
  sub_2378A2BF4(v2);
  sub_23788F390(v10, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_23790B360()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23790B38C()
{
  uint64_t v0;

  return sub_2378F2998(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23790B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Zone();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = v0 + v3;
  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378724B0(*(_QWORD *)(v5 + *(int *)(v1 + 32)), *(_QWORD *)(v5 + *(int *)(v1 + 32) + 8), *(_BYTE *)(v5 + *(int *)(v1 + 32) + 16));
  swift_release();
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23790B488()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Zone() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  return sub_2378F35A4(*(_QWORD *)(v0 + 16), v0 + v2, *(_BYTE *)(v0 + v3), *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(uint64_t (**)(_QWORD))(v0 + (((v3 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + (((v3 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23790B4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverModel(0) - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = v0 + v2;
  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(type metadata accessor for Instrument() + 20);
  v21 = *(_OWORD *)(v5 + 464);
  v22 = *(_OWORD *)(v5 + 480);
  v19 = *(_OWORD *)(v5 + 432);
  v20 = *(_OWORD *)(v5 + 448);
  v17 = *(_OWORD *)(v5 + 400);
  v18 = *(_OWORD *)(v5 + 416);
  v15 = *(_OWORD *)(v5 + 368);
  v16 = *(_OWORD *)(v5 + 384);
  v13 = *(_OWORD *)(v5 + 336);
  v14 = *(_OWORD *)(v5 + 352);
  v11 = *(_OWORD *)(v5 + 304);
  v12 = *(_OWORD *)(v5 + 320);
  v9 = *(_OWORD *)(v5 + 272);
  v10 = *(_OWORD *)(v5 + 288);
  v7 = *(_OWORD *)(v5 + 240);
  v8 = *(_OWORD *)(v5 + 256);
  sub_2378DE7AC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(void **)(v5 + 16), *(void **)(v5 + 24), *(void **)(v5 + 32), *(void **)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(void **)(v5 + 64), *(void **)(v5 + 72), *(void **)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144),
    *(_QWORD *)(v5 + 152),
    *(void **)(v5 + 160),
    *(_QWORD *)(v5 + 168),
    *(_QWORD *)(v5 + 176),
    *(_QWORD *)(v5 + 184),
    *(_QWORD *)(v5 + 192),
    *(_QWORD *)(v5 + 200),
    *(_QWORD *)(v5 + 208),
    *(void **)(v5 + 216),
    *(void **)(v5 + 224),
    *(_QWORD *)(v5 + 232),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    SBYTE8(v17),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    SBYTE8(v20),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    *(_QWORD *)(v5 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23790B65C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverModel(0) - 8) + 80);
  return sub_2378F2914(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

char *sub_23790B68C(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = sub_23789601C(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_27;
  if ((v13 & 0x8000000000000000) == 0)
  {
    result = &v4[a1 + 32];
    v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13])
      result = (char *)memmove(result, v14, v13);
    v15 = *((_QWORD *)v4 + 2);
    v16 = __OFADD__(v15, v8);
    v17 = v15 + v8;
    if (!v16)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23790B7E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23790B804(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23790B86C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23790B894(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23790B8BC()
{
  uint64_t v0;

  return sub_2378FCEC4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23790B8D8()
{
  return sub_2378FD1D0();
}

uint64_t sub_23790B8F0()
{
  return sub_2378FD768();
}

uint64_t sub_23790B910()
{
  return 16;
}

__n128 sub_23790B91C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23790B930()
{
  return 16;
}

__n128 sub_23790B93C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23790B950()
{
  return 16;
}

__n128 sub_23790B95C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23790B968()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820C60) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for Zone();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v35 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Component() - 8) + 80);
  v8 = v0 + v2;
  v9 = type metadata accessor for RequestContentModel();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v2, 1, v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v8 + 24))
          swift_release();
        sub_2378902DC(*(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88));
        break;
      case 1u:
        v10 = sub_237A86594();
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v2, v10);
        v11 = v8 + *(int *)(type metadata accessor for Instrument() + 20);
        v33 = *(_OWORD *)(v11 + 464);
        v34 = *(_OWORD *)(v11 + 480);
        v31 = *(_OWORD *)(v11 + 432);
        v32 = *(_OWORD *)(v11 + 448);
        v29 = *(_OWORD *)(v11 + 400);
        v30 = *(_OWORD *)(v11 + 416);
        v27 = *(_OWORD *)(v11 + 368);
        v28 = *(_OWORD *)(v11 + 384);
        v25 = *(_OWORD *)(v11 + 336);
        v26 = *(_OWORD *)(v11 + 352);
        v23 = *(_OWORD *)(v11 + 304);
        v24 = *(_OWORD *)(v11 + 320);
        v21 = *(_OWORD *)(v11 + 272);
        v22 = *(_OWORD *)(v11 + 288);
        v19 = *(_OWORD *)(v11 + 240);
        v20 = *(_OWORD *)(v11 + 256);
        sub_2378DE7AC(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(void **)(v11 + 16), *(void **)(v11 + 24), *(void **)(v11 + 32), *(void **)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(void **)(v11 + 64), *(void **)(v11 + 72), *(void **)(v11 + 80), *(_QWORD *)(v11 + 88), *(_QWORD *)(v11 + 96), *(_QWORD *)(v11 + 104), *(_QWORD *)(v11 + 112), *(_QWORD *)(v11 + 120), *(_QWORD *)(v11 + 128), *(_QWORD *)(v11 + 136), *(_QWORD *)(v11 + 144),
          *(_QWORD *)(v11 + 152),
          *(void **)(v11 + 160),
          *(_QWORD *)(v11 + 168),
          *(_QWORD *)(v11 + 176),
          *(_QWORD *)(v11 + 184),
          *(_QWORD *)(v11 + 192),
          *(_QWORD *)(v11 + 200),
          *(_QWORD *)(v11 + 208),
          *(void **)(v11 + 216),
          *(void **)(v11 + 224),
          *(_QWORD *)(v11 + 232),
          v19,
          *((uint64_t *)&v19 + 1),
          v20,
          *((uint64_t *)&v20 + 1),
          v21,
          *((uint64_t *)&v21 + 1),
          v22,
          *((uint64_t *)&v22 + 1),
          v23,
          SBYTE8(v23),
          v24,
          *((uint64_t *)&v24 + 1),
          v25,
          *((uint64_t *)&v25 + 1),
          v26,
          SBYTE8(v26),
          v27,
          *((uint64_t *)&v27 + 1),
          v28,
          *((uint64_t *)&v28 + 1),
          v29,
          SBYTE8(v29),
          v30,
          *((uint64_t *)&v30 + 1),
          v31,
          *((uint64_t *)&v31 + 1),
          v32,
          SBYTE8(v32),
          v33,
          *((uint64_t *)&v33 + 1),
          v34,
          *((uint64_t *)&v34 + 1),
          *(_QWORD *)(v11 + 496));
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        type metadata accessor for PopoverModel(0);
        swift_release();
        goto LABEL_13;
      case 2u:
        swift_bridgeObjectRelease();
        sub_23790BCE8(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_BYTE *)(v8 + 48));
        v12 = *(unsigned __int8 *)(v8 + 72);
        if (v12 != 255)
          sub_23790BD3C(*(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), v12);
        if (*(_QWORD *)(v8 + 88))
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
        goto LABEL_13;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v8 + 40))
LABEL_13:
          swift_release();
        break;
      default:
        break;
    }
  }
  v13 = (v2 + v3 + v6) & ~v6;
  v14 = (((v35 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  v15 = v0 + v13;
  v16 = sub_237A86594();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378724B0(*(_QWORD *)(v15 + *(int *)(v4 + 32)), *(_QWORD *)(v15 + *(int *)(v4 + 32) + 8), *(_BYTE *)(v15 + *(int *)(v4 + 32) + 16));
  swift_release();
  v17(v0 + v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23790BCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 && a5 != 2)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23790BD3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_release();
  if (a3 != 1)
  {
    if (a3)
      return result;
    return swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23790BD64()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820C60) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for Zone() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(type metadata accessor for Component() - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2378EF904(v0 + v2, (v0 + v5), *(_QWORD *)(v0 + v6), v0 + v8, *(unsigned __int8 *)(v0 + v8 + *(_QWORD *)(v7 + 64)));
}

uint64_t sub_23790BE08()
{
  return sub_2378FD58C();
}

uint64_t sub_23790BE20()
{
  return sub_2378FD6B8();
}

uint64_t sub_23790BE28(uint64_t a1)
{
  uint64_t v1;

  return sub_2378FB254(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23790BE44()
{
  uint64_t v0;

  return sub_2378FB364(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23790BE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Component();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23790BEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23790BF80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_2378EB308(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23790BFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23790C054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8) + 80);
  return sub_2378EC13C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23790C098()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v2 + v3 + v5) & ~v5;
  swift_release();
  v7 = sub_237A86594();
  v8 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v0 + v2, v7);
  v8(v0 + v6, v7);
  v8(v0 + v6 + *(int *)(v4 + 20), v7);
  return swift_deallocObject();
}

uint64_t sub_23790C170()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0)
                                      - 8)
                          + 80);
  return sub_2378F61BC(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_23790C1F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256828FF0;
  if (!qword_256828FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568213F8);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256828FF0);
  }
  return result;
}

uint64_t sub_23790C23C(uint64_t a1)
{
  uint64_t v1;

  return sub_2378EBF34(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23790C25C(uint64_t a1)
{
  uint64_t v1;

  return sub_2378E7E14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
}

uint64_t objectdestroy_170Tm()
{
  uint64_t v0;

  swift_release();
  sub_2378724B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_23790C2B8(uint64_t a1)
{
  uint64_t v1;

  return sub_2378E7E14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
}

uint64_t sub_23790C2E0(uint64_t a1)
{
  return sub_23790BE28(a1) & 1;
}

uint64_t sub_23790C30C()
{
  return sub_23790B8BC();
}

void destroy for DialGauge(uint64_t a1)
{
  void *v2;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 120);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 192))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

}

uint64_t initializeWithCopy for DialGauge(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(void **)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v7;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
    v8 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v8;
    v9 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v10;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  }
  v11 = *(_QWORD *)(a2 + 192);
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v14 = *(_QWORD *)(a2 + 200);
    v15 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 192) = v11;
    *(_QWORD *)(a1 + 200) = v14;
    *(_QWORD *)(a1 + 208) = v15;
    *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
    v16 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v17;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  v18 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v18;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v20 = *(void **)(a2 + 272);
  v19 = *(void **)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v20;
  *(_QWORD *)(a1 + 280) = v19;
  swift_retain();
  v21 = v20;
  v22 = v19;
  return a1;
}

uint64_t assignWithCopy for DialGauge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 104);
  v7 = (__int128 *)(a2 + 104);
  v8 = *(void **)(a1 + 120);
  v9 = *(_QWORD *)(a2 + 120);
  if (v8)
  {
    if (v9)
    {
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      v10 = *(void **)(a2 + 120);
      *(_QWORD *)(a1 + 120) = v10;
      v11 = v10;

      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_237889B98(a1 + 104);
      v15 = *(_OWORD *)(a2 + 120);
      v14 = *(_OWORD *)(a2 + 136);
      v16 = *v7;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 120) = v15;
      *(_OWORD *)(a1 + 136) = v14;
      *v6 = v16;
    }
  }
  else if (v9)
  {
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v12 = *(void **)(a2 + 120);
    *(_QWORD *)(a1 + 120) = v12;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    v13 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *v7;
    v18 = *(_OWORD *)(a2 + 120);
    v19 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v18;
    *(_OWORD *)(a1 + 136) = v19;
    *v6 = v17;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (_OWORD *)(a1 + 192);
  v22 = (_OWORD *)(a2 + 192);
  v21 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192))
  {
    if (v21)
    {
      *(_QWORD *)(a1 + 192) = v21;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2378B9ACC(a1 + 192);
      v24 = *(_OWORD *)(a2 + 208);
      v23 = *(_OWORD *)(a2 + 224);
      *v20 = *v22;
      *(_OWORD *)(a1 + 208) = v24;
      *(_OWORD *)(a1 + 224) = v23;
    }
  }
  else if (v21)
  {
    *(_QWORD *)(a1 + 192) = v21;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *v22;
    v26 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v26;
    *v20 = v25;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v27 = *(void **)(a2 + 272);
  v28 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 280);
  v31 = *(void **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = v30;
  v32 = v30;

  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for DialGauge(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  void *v19;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 120);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 120);
    if (v8)
    {
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v8;

      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
      v9 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_237889B98(a1 + 104);
  }
  v10 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v10;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 192);
  if (!*(_QWORD *)(a1 + 192))
  {
LABEL_10:
    v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    goto LABEL_11;
  }
  if (!v13)
  {
    sub_2378B9ACC(a1 + 192);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 192) = v13;
  swift_release();
  v14 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  v17 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v17;
  swift_release();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v18 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  v19 = *(void **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);

  return a1;
}

uint64_t getEnumTagSinglePayload for DialGauge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 288))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialGauge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 288) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialGauge()
{
  return &type metadata for DialGauge;
}

uint64_t sub_23790CB08()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_23790CB18@<X0>(void *__src@<X2>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *result;
  _QWORD *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD __srca[36];
  _QWORD v65[10];
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  _QWORD __dst[39];

  v3 = a2[3];
  v60 = a2[1];
  v61 = a2[2];
  v4 = a2[5];
  v62 = a2[4];
  v63 = *a2;
  memcpy(__dst, __src, 0x130uLL);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
  objc_msgSend(v5, sel_setUnitStyle_, 1);
  result = objc_msgSend(v5, sel_numberFormatter);
  if (!result)
    goto LABEL_24;
  v7 = result;
  objc_msgSend(result, sel_setMaximumFractionDigits_, 0);

  v8 = objc_allocWithZone(MEMORY[0x24BDD16F0]);
  v59 = v5;
  v9 = objc_msgSend(v8, sel_init);
  objc_msgSend(v9, sel_setNumberStyle_, 3);
  objc_msgSend(v9, sel_setMaximumFractionDigits_, 0);
  type metadata accessor for InstrumentDataSource();
  sub_23790FEE4();
  v10 = v9;
  swift_retain();
  v11 = sub_237A86984();
  v13 = v12;
  v14 = __dst[1];
  v15 = __dst[2];
  swift_retain();
  sub_2378BB6E8(v63);
  result = (_QWORD *)swift_release();
  v16 = __dst[7];
  v17 = __dst[7] + 1;
  if (__OFADD__(__dst[7], 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  v18 = __dst[6];
  v19 = __dst[6] + 1;
  if (__OFADD__(__dst[6], 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = v17 * v19;
  if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v21 = __dst[5];
  v22 = __dst[5] - 1;
  if (__OFSUB__(__dst[5], 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = v20 * v22;
  if ((unsigned __int128)(v20 * (__int128)v22) >> 64 != (v20 * v22) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    v26 = __dst[3];
    v27 = __dst[4];
    if (__dst[6] > 0 && __dst[5] == 0)
      v29 = __dst[6];
    else
      v29 = v25;
    if (vabdd_f64(*(double *)&__dst[4], *(double *)&__dst[3]) != 6.28318531
      || (v29 = v20 * __dst[5], (unsigned __int128)(v20 * (__int128)__dst[5]) >> 64 == (v20 * __dst[5]) >> 63))
    {
      v50 = v29;
      v51 = __dst[7];
      v44 = __dst[6];
      v45 = __dst[5];
      v54 = swift_allocObject();
      memcpy((void *)(v54 + 16), __dst, 0x130uLL);
      v42 = swift_allocObject();
      memcpy((void *)(v42 + 16), __dst, 0x130uLL);
      v49 = __dst[15];
      v30 = v4;
      v56 = v4;
      v57 = v13;
      v31 = v10;
      v58 = v10;
      v32 = v13;
      v33 = (void *)__dst[20];
      v34 = v3;
      v55 = v3;
      v35 = __dst[23];
      v47 = __dst[34];
      v48 = __dst[16];
      v53 = __dst[35];
      v46 = __dst[36];
      v36 = __dst[37];
      __srca[0] = v26;
      __srca[1] = v27;
      __srca[2] = v21;
      __srca[3] = v18;
      __srca[4] = v16;
      __srca[5] = v29;
      __srca[6] = sub_23790FF30;
      __srca[7] = v54;
      __srca[8] = sub_237910010;
      __srca[9] = v42;
      LOBYTE(__srca[10]) = __dst[15];
      __srca[11] = __dst[16];
      __srca[12] = __dst[17];
      __srca[13] = __dst[18];
      __srca[14] = __dst[19];
      v37 = __dst[18];
      v38 = __dst[19];
      __srca[15] = __dst[20];
      __srca[16] = __dst[21];
      v39 = __dst[21];
      __srca[17] = __dst[22];
      __srca[18] = __dst[23];
      v40 = __dst[22];
      v41 = __dst[24];
      __srca[19] = __dst[24];
      __srca[20] = __dst[34];
      __srca[21] = __dst[35];
      __srca[22] = __dst[36];
      __srca[23] = __dst[37];
      __srca[24] = v63;
      __srca[25] = v60;
      __srca[26] = v61;
      __srca[27] = v34;
      __srca[28] = v62;
      __srca[29] = v30;
      __srca[30] = v11;
      __srca[31] = v32;
      __srca[32] = v14;
      __srca[33] = v15;
      __srca[34] = v59;
      __srca[35] = v31;
      v43 = __dst[17];
      swift_bridgeObjectRetain();
      sub_2378884CC(v37, v38, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2378884CC(v37, v38, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237898B70(__dst);
      swift_retain();
      swift_retain();
      sub_23790E88C(__srca);
      swift_release();

      sub_237910058(v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378886C4(v37, v38, v33);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      memcpy(a3, __srca, 0x120uLL);
      v65[2] = v45;
      v65[3] = v44;
      v65[0] = v26;
      v65[1] = v27;
      v65[4] = v51;
      v65[5] = v50;
      v65[6] = sub_23790FF30;
      v65[7] = v54;
      v65[8] = sub_237910010;
      v65[9] = v42;
      v66 = v49;
      v67 = v48;
      v68 = v43;
      v69 = v37;
      v70 = v38;
      v71 = v33;
      v72 = v39;
      v73 = v40;
      v74 = v35;
      v75 = v41;
      v76 = v47;
      v77 = v53;
      v78 = v46;
      v79 = v36;
      v80 = v63;
      v81 = v60;
      v82 = v61;
      v83 = v55;
      v84 = v62;
      v85 = v56;
      v86 = v11;
      v87 = v57;
      v88 = v14;
      v89 = v15;
      v90 = v59;
      v91 = v58;
      return sub_237910090(v65);
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23790D0F8@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double *v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v25 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821420);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821428);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821430);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = sub_237A874AC();
  v7[1] = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821438);
  sub_23790D308(a2, a1, (uint64_t *)((char *)v7 + *(int *)(v15 + 44)));
  sub_237A868C4();
  sub_237A868C4();
  sub_237A874AC();
  sub_237A8687C();
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v10, &qword_256821420);
  v16 = &v10[*(int *)(v8 + 36)];
  v17 = v27;
  *(_OWORD *)v16 = v26;
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v28;
  sub_2378BC024((uint64_t)v7, &qword_256821420);
  sub_237A868C4();
  v19 = v18 * 0.5;
  sub_237A868C4();
  v21 = v20 * 0.5;
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v13, &qword_256821428);
  v22 = (double *)&v13[*(int *)(v11 + 36)];
  *v22 = v19;
  v22[1] = v21;
  sub_2378BC024((uint64_t)v10, &qword_256821428);
  return sub_237870370((uint64_t)v13, v25, &qword_256821430);
}

uint64_t sub_23790D308@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  uint64_t v157;
  double *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  double v168;
  int *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  double *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  double v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v186;
  double v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t (*v200)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  double v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD v223[37];
  unsigned __int8 v224;
  uint64_t v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE v229[16];
  _BYTE v230[16];
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821440);
  MEMORY[0x24BDAC7A8](v6);
  v198 = (uint64_t *)((char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821448);
  v8 = MEMORY[0x24BDAC7A8](v194);
  v195 = (uint64_t)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v189 = (uint64_t)&v186 - v10;
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821450);
  v188 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v199 = (uint64_t)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821458);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v197 = (uint64_t)&v186 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v196 = (uint64_t)&v186 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v216 = (uint64_t)&v186 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v215 = (uint64_t)&v186 - v19;
  v20 = sub_237A868DC();
  v201 = *(_QWORD *)(v20 - 8);
  v202 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v190 = v21;
  v200 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v186 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFE0);
  v205 = *(_QWORD *)(v22 - 8);
  v206 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v204 = (char *)&v186 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821460);
  v24 = MEMORY[0x24BDAC7A8](v203);
  v222 = (uint64_t)&v186 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v221 = (uint64_t)&v186 - v26;
  v27 = sub_237A872C0();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v186 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *((_QWORD *)a1 + 12);
  v193 = a3;
  if (!v31)
  {
    v44 = a2;
    v39 = 0;
    v51 = 0;
    KeyPath = 0;
    v217 = 0;
    v218 = 0;
    v42 = 0;
    v43 = 0;
    v219 = 0;
    v220 = 0;
    v49 = 0.0;
    v50 = 0.0;
    v52 = *((_QWORD *)a1 + 5);
    if ((v52 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v32 = *((_BYTE *)a1 + 80);
  swift_bridgeObjectRetain();
  sub_237A868C4();
  sub_237A868C4();
  v34 = fabs(v33);
  v36 = fabs(v35);
  if (v36 >= v34)
    v36 = v34;
  v37 = 0.25;
  if ((v32 & 1) == 0)
    v37 = 0.5;
  v38 = v36 * v37;
  sub_237A872B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x24BDF3FD0], v27);
  v39 = sub_237A872E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (qword_25681E058 != -1)
    swift_once();
  v40 = qword_256820BA8;
  KeyPath = swift_getKeyPath();
  v217 = v40;
  swift_retain();
  sub_237A874AC();
  sub_237A8687C();
  v31 = v223[36];
  v42 = v224;
  v43 = v225;
  v220 = v226;
  v218 = v228;
  v219 = v227;
  v44 = a2;
  sub_237A868C4();
  v46 = fabs(v45);
  v48 = fabs(v47);
  if (v48 >= v46)
    v48 = v46;
  v49 = v48 * 0.5;
  v50 = v38;
  v51 = 1;
  a3 = v193;
  v52 = *((_QWORD *)a1 + 5);
  if (v52 < 0)
    goto LABEL_16;
LABEL_11:
  v207 = v50;
  v208 = v49;
  v210 = v51;
  v211 = v43;
  v212 = v42;
  v213 = v31;
  v214 = KeyPath;
  v209 = v39;
  v223[0] = 0;
  v223[1] = v52;
  swift_getKeyPath();
  v54 = (uint64_t)v200;
  v53 = v201;
  v55 = v202;
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), uint64_t, uint64_t))(v201 + 16))(v200, v44, v202);
  v56 = (*(unsigned __int8 *)(v53 + 80) + 304) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v57 = swift_allocObject();
  memcpy((void *)(v57 + 16), a1, 0x120uLL);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 32))(v57 + v56, v54, v55);
  sub_23790E88C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFF0);
  sub_2378BB858();
  sub_2378BB908();
  v58 = v204;
  sub_237A87404();
  v59 = sub_237A86F3C();
  sub_237A86798();
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v205;
  v68 = v206;
  v70 = v222;
  (*(void (**)(uint64_t, char *, uint64_t))(v205 + 16))(v222, v58, v206);
  v71 = v70 + *(int *)(v203 + 36);
  *(_BYTE *)v71 = v59;
  *(_QWORD *)(v71 + 8) = v61;
  *(_QWORD *)(v71 + 16) = v63;
  *(_QWORD *)(v71 + 24) = v65;
  *(_QWORD *)(v71 + 32) = v67;
  *(_BYTE *)(v71 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v68);
  sub_237870370(v70, v221, &qword_256821460);
  v72 = 0;
  v73 = 0;
  v74 = 0;
  v75 = 0;
  v76 = 0;
  v77 = 0;
  v78 = 0;
  if (((_BYTE)a1[10] & 1) != 0)
  {
    v73 = swift_allocObject();
    memcpy((void *)(v73 + 16), a1, 0x120uLL);
    sub_23790E88C(a1);
    v79 = sub_237A86F3C();
    sub_237A86798();
    v75 = v80;
    v76 = v81;
    v77 = v82;
    v78 = v83;
    v74 = v79;
    v72 = sub_23790FDA8;
  }
  v200 = v72;
  v201 = v74;
  v202 = v78;
  v203 = v77;
  v204 = v76;
  v205 = v75;
  v206 = v73;
  sub_237870370((uint64_t)(a1 + 20), (uint64_t)v230, &qword_256821468);
  sub_237870370((uint64_t)v230, (uint64_t)&v231, &qword_256821468);
  v84 = v232;
  v43 = v191;
  v192 = v44;
  if (v232)
  {
    v85 = v231;
    v86 = *a1 + -0.125663706;
    v87 = sub_237A86BAC();
    v88 = (uint64_t)v198;
    *v198 = v87;
    *(_QWORD *)(v88 + 8) = 0;
    *(_BYTE *)(v88 + 16) = 1;
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821478);
    sub_23790F8A8(v85, v84, v44, (_QWORD *)(v88 + *(int *)(v89 + 44)), v86);
    sub_237A8756C();
    v91 = v90;
    v93 = v92;
    v94 = v195;
    sub_2378BBFE0(v88, v195, &qword_256821440);
    v95 = v94 + *(int *)(v194 + 36);
    *(double *)v95 = v86;
    *(_QWORD *)(v95 + 8) = v91;
    *(_QWORD *)(v95 + 16) = v93;
    sub_2378BC024(v88, &qword_256821440);
    v96 = v189;
    sub_237870370(v94, v189, &qword_256821448);
    LOBYTE(v94) = sub_237A86F3C();
    sub_237A86798();
    v98 = v97;
    v100 = v99;
    v102 = v101;
    v104 = v103;
    v105 = v199;
    sub_2378BBFE0(v96, v199, &qword_256821448);
    v106 = v105 + *(int *)(v43 + 36);
    *(_BYTE *)v106 = v94;
    *(_QWORD *)(v106 + 8) = v98;
    *(_QWORD *)(v106 + 16) = v100;
    *(_QWORD *)(v106 + 24) = v102;
    *(_QWORD *)(v106 + 32) = v104;
    *(_BYTE *)(v106 + 40) = 0;
    sub_2378BC024(v96, &qword_256821448);
    v107 = v215;
    sub_237870370(v105, v215, &qword_256821450);
    v108 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56);
    v108(v107, 0, 1, v43);
    goto LABEL_18;
  }
LABEL_17:
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56);
  v108(v215, 1, 1, v43);
  v96 = v189;
LABEL_18:
  sub_237870370((uint64_t)(a1 + 22), (uint64_t)v229, &qword_256821468);
  sub_237870370((uint64_t)v229, (uint64_t)&v233, &qword_256821468);
  v109 = v234;
  v110 = 1;
  if (v234)
  {
    v111 = v233;
    v112 = a1[1] + 0.125663706;
    v113 = sub_237A86BAC();
    v114 = (uint64_t)v198;
    *v198 = v113;
    *(_QWORD *)(v114 + 8) = 0;
    *(_BYTE *)(v114 + 16) = 1;
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821478);
    sub_23790F8A8(v111, v109, v192, (_QWORD *)(v114 + *(int *)(v115 + 44)), v112);
    sub_237A8756C();
    v117 = v116;
    v119 = v118;
    v120 = v195;
    sub_2378BBFE0(v114, v195, &qword_256821440);
    v121 = v120 + *(int *)(v194 + 36);
    *(double *)v121 = v112;
    *(_QWORD *)(v121 + 8) = v117;
    *(_QWORD *)(v121 + 16) = v119;
    sub_2378BC024(v114, &qword_256821440);
    sub_237870370(v120, v96, &qword_256821448);
    LOBYTE(v120) = sub_237A86F3C();
    sub_237A86798();
    v123 = v122;
    v125 = v124;
    v127 = v126;
    v129 = v128;
    v130 = v199;
    sub_2378BBFE0(v96, v199, &qword_256821448);
    v131 = v130 + *(int *)(v43 + 36);
    *(_BYTE *)v131 = v120;
    *(_QWORD *)(v131 + 8) = v123;
    *(_QWORD *)(v131 + 16) = v125;
    *(_QWORD *)(v131 + 24) = v127;
    *(_QWORD *)(v131 + 32) = v129;
    *(_BYTE *)(v131 + 40) = 0;
    sub_2378BC024(v96, &qword_256821448);
    v132 = v216;
    sub_237870370(v130, v216, &qword_256821450);
    v110 = 0;
  }
  else
  {
    v132 = v216;
  }
  v108(v132, v110, 1, v43);
  memcpy(v223, a1, 0x120uLL);
  v133 = sub_23790E4B8();
  if (!v134)
  {
    v158 = (double *)a3;
LABEL_33:
    v198 = 0;
    v199 = 0;
    v195 = 0;
    v160 = 0;
    v188 = 0;
    v189 = 0;
    v187 = 0.0;
    v191 = 0;
    v192 = 0;
    v190 = 0;
    goto LABEL_34;
  }
  v135 = (void *)*((_QWORD *)a1 + 15);
  if (!v135)
  {
    v158 = (double *)a3;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v136 = *((_QWORD *)a1 + 13);
  v137 = *((_QWORD *)a1 + 14);
  v138 = *((_QWORD *)a1 + 17);
  v190 = *((_QWORD *)a1 + 16);
  v140 = *((_QWORD *)a1 + 18);
  v139 = *((_QWORD *)a1 + 19);
  v223[0] = v133;
  v223[1] = v134;
  sub_237879800();
  v141 = v135;
  swift_bridgeObjectRetain();
  v142 = sub_237A8705C();
  v194 = v144;
  v195 = v143;
  v198 = (uint64_t *)(v145 & 1);
  v199 = v142;
  sub_237A868C4();
  v147 = fabs(v146);
  v149 = fabs(v148);
  if (v149 >= v147)
    v150 = v147;
  else
    v150 = v149;
  sub_237A868C4();
  v152 = fabs(v151);
  v154 = fabs(v153);
  if (v154 >= v152)
    v154 = v152;
  v155 = v150 * 0.5;
  v191 = v136;
  LOBYTE(v223[0]) = v136;
  v223[1] = v137;
  v223[2] = v141;
  v223[3] = v190;
  LOWORD(v223[4]) = v138 & 0x101;
  v156 = v154 * 0.7;
  v223[5] = v140;
  v223[6] = v139;
  InstrumentFont.cpFont.getter();
  v192 = sub_237A86FCC();
  v157 = swift_getKeyPath();
  if (qword_25681E058 != -1)
    swift_once();
  v158 = (double *)v193;
  v159 = qword_256820BA8;
  sub_2378886C4(v191, v137, v135);
  v190 = swift_getKeyPath();
  v191 = v159;
  v189 = *(_QWORD *)&v155;
  v187 = v156;
  swift_retain();
  v160 = v194;
  v188 = v157;
LABEL_34:
  v161 = v222;
  sub_2378BBFE0(v221, v222, &qword_256821460);
  v162 = v196;
  sub_2378BBFE0(v215, v196, &qword_256821458);
  v163 = v197;
  sub_2378BBFE0(v216, v197, &qword_256821458);
  *(_QWORD *)v158 = v209;
  v158[1] = 0.0;
  v164 = v214;
  *((_QWORD *)v158 + 2) = v210;
  *((_QWORD *)v158 + 3) = v164;
  v165 = v213;
  *((_QWORD *)v158 + 4) = v217;
  *((_QWORD *)v158 + 5) = v165;
  v166 = v211;
  *((_QWORD *)v158 + 6) = v212;
  *((_QWORD *)v158 + 7) = v166;
  v167 = v219;
  *((_QWORD *)v158 + 8) = v220;
  *((_QWORD *)v158 + 9) = v167;
  v168 = v208;
  *((_QWORD *)v158 + 10) = v218;
  v158[11] = v168;
  v158[12] = v207;
  v169 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256821470);
  sub_2378BBFE0(v161, (uint64_t)v158 + v169[12], &qword_256821460);
  v170 = (char *)v158 + v169[16];
  v171 = v206;
  *(_QWORD *)v170 = v200;
  *((_QWORD *)v170 + 1) = v171;
  v172 = v205;
  *((_QWORD *)v170 + 2) = v201;
  *((_QWORD *)v170 + 3) = v172;
  v173 = v203;
  *((_QWORD *)v170 + 4) = v204;
  *((_QWORD *)v170 + 5) = v173;
  *((_QWORD *)v170 + 6) = v202;
  v170[56] = 0;
  sub_2378BBFE0(v162, (uint64_t)v158 + v169[20], &qword_256821458);
  sub_2378BBFE0(v163, (uint64_t)v158 + v169[24], &qword_256821458);
  v174 = (double *)((char *)v158 + v169[28]);
  v176 = v198;
  v175 = v199;
  v177 = v195;
  *(_QWORD *)v174 = v199;
  *((_QWORD *)v174 + 1) = v177;
  *((_QWORD *)v174 + 2) = v176;
  *((_QWORD *)v174 + 3) = v160;
  v194 = v160;
  v178 = v188;
  v179 = v187;
  *((_QWORD *)v174 + 4) = v189;
  v174[5] = v179;
  v181 = v191;
  v180 = v192;
  *((_QWORD *)v174 + 6) = v178;
  *((_QWORD *)v174 + 7) = v180;
  v198 = v176;
  v199 = v175;
  *((_QWORD *)v174 + 8) = v190;
  *((_QWORD *)v174 + 9) = v181;
  sub_23790EB00(v209);
  sub_2378A2BF4((uint64_t)v200);
  v182 = v175;
  v183 = v194;
  v184 = v195;
  sub_23790EB3C(v182, v195, (char)v176, v194);
  sub_2378BC024(v216, &qword_256821458);
  sub_2378BC024(v215, &qword_256821458);
  sub_2378BC024(v221, &qword_256821460);
  sub_23790EBA8(v199, v184, (char)v198, v183);
  sub_2378BC024(v197, &qword_256821458);
  sub_2378BC024(v196, &qword_256821458);
  sub_2378A2C04((uint64_t)v200);
  sub_2378BC024(v222, &qword_256821460);
  return sub_23790EC14(v209);
}

uint64_t sub_23790E168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, __n128);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, __n128);
  double v17;
  double v18;
  double v19;
  uint64_t v21;
  char v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  _BOOL4 v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  __n128 v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, __n128);
  uint64_t v49;
  uint64_t (*v50)(uint64_t, __n128);
  uint64_t v51;
  _BYTE v52[40];

  v51 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820018);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)v2;
  v8 = *(double *)(v2 + 8);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(uint64_t (**)(uint64_t, __n128))(v2 + 48);
  v15 = *(_QWORD *)(v2 + 56);
  v16 = *(uint64_t (**)(uint64_t, __n128))(v2 + 64);
  v17 = *(double *)(v2 + 256);
  v18 = *(double *)(v2 + 264);
  v19 = vabdd_f64(v8, *(double *)v2);
  v47 = *(_QWORD *)(v2 + 72);
  v48 = v16;
  v49 = v15;
  v50 = v14;
  if (v19 != 6.28318531 && __OFSUB__(v13--, 1))
    goto LABEL_34;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  v21 = sub_237A7ED48((uint64_t)v52);
  v23 = v22;
  sub_2378BC024((uint64_t)v52, &qword_256820020);
  result = swift_release();
  v24 = *(double *)&v21;
  if ((v23 & 1) != 0)
    v24 = v17;
  if (v10 < 1)
  {
    v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_15:
    if (v26)
    {
      if (a1 != 0x8000000000000000 || v26 != -1)
      {
        v30 = a1 % v26;
        v29 = v30 == 0;
        v28 = v30 != 0;
        goto LABEL_19;
      }
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  v25 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v26 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v27 = v25 * v26;
  if ((unsigned __int128)(v25 * (__int128)v26) >> 64 != (v25 * v26) >> 63)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v27)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (a1 == 0x8000000000000000 && v27 == -1)
    goto LABEL_36;
  if (a1 % v27)
    goto LABEL_15;
  v28 = 0;
  v29 = 0;
LABEL_19:
  v31 = v8 - v9;
  v32 = (double)a1 / (double)v13;
  v33 = (v24 - v17) / (v18 - v17);
  v34 = sub_237A868C4();
  if (v32 <= v33)
  {
    v35.n128_f64[0] = (double)a1 / (double)v13;
    v37 = v50(v34, v35);
  }
  else
  {
    if (v12)
      v36 = 0;
    else
      v36 = v29;
    if (v28 || v36)
    {
      v37 = sub_237A87200();
    }
    else
    {
      v35.n128_f64[0] = (double)a1 / (double)v13;
      v37 = v48(v34, v35);
    }
  }
  v38 = v37;
  v39 = v51;
  v40 = v9 + v31 * v32;
  *(_QWORD *)v7 = sub_237A86BAC();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820050);
  sub_23790EC4C(v38, (uint64_t)&v7[*(int *)(v41 + 44)], 3.0);
  sub_237A8756C();
  v43 = v42;
  v45 = v44;
  swift_release();
  sub_2378BBFE0((uint64_t)v7, v39, &qword_256820018);
  v46 = v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681FFF0) + 36);
  *(double *)v46 = v40;
  *(_QWORD *)(v46 + 8) = v43;
  *(_QWORD *)(v46 + 16) = v45;
  return sub_2378BC024((uint64_t)v7, &qword_256820018);
}

uint64_t sub_23790E4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  void *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  char v17;
  id v18;
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)(v0 + 256);
  v8 = *(double *)(v0 + 264);
  v10 = *(void **)(v0 + 280);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  if (v25)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820038);
    v11 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v11 ^ 1u, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      sub_23790FEA8();
      v12 = sub_237A87D94();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v12;
    }
  }
  else
  {
    sub_2378BC024((uint64_t)v24, &qword_256820020);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_2378BC024((uint64_t)v3, &qword_2568214E0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  if (!v25)
  {
    sub_2378BC024((uint64_t)v24, &qword_256820020);
    return 0;
  }
  sub_23787076C((uint64_t)v24, (uint64_t)v21);
  sub_2378BC024((uint64_t)v24, &qword_256820020);
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_2Tm(v21, v22);
  v15 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14));
  v17 = v16;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  if ((v17 & 1) != 0)
    return 0;
  v12 = 0;
  if (v9 == 0.0 && v8 == 1.0)
  {
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v15);
    v19 = objc_msgSend(v10, sel_stringFromNumber_, v18);

    if (v19)
    {
      v12 = sub_237A87818();

      return v12;
    }
    return 0;
  }
  return v12;
}

_QWORD *sub_23790E808@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  const void *v1;
  uint64_t v3;
  _QWORD v5[36];

  memcpy(v5, v1, sizeof(v5));
  v3 = swift_allocObject();
  memcpy((void *)(v3 + 16), v1, 0x120uLL);
  *a1 = sub_23790E884;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v3;
  return sub_23790E88C(v5);
}

uint64_t sub_23790E884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23790D0F8(a1, (double *)(v2 + 16), a2);
}

_QWORD *sub_23790E88C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v8;
  void *v9;
  void *v10;

  v2 = a1[13];
  v3 = a1[14];
  v4 = (void *)a1[15];
  v8 = a1[24];
  v9 = (void *)a1[34];
  v10 = (void *)a1[35];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2378884CC(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378BB6E8(v8);
  swift_retain();
  v5 = v9;
  v6 = v10;
  return a1;
}

uint64_t sub_23790E9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = sub_237A868DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + 136);
  if (v4)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 208))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 304) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_23790EA84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[288];

  sub_237A868DC();
  v5 = *a1;
  memcpy(v7, (const void *)(v2 + 16), sizeof(v7));
  return sub_23790E168(v5, a2);
}

uint64_t sub_23790EB00(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23790EB3C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBD20(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23790EBA8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBE34(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23790EC14(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23790EC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  char *v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v26[3];

  v6 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (double *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820058);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820060);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v26 - v16;
  v18 = (char *)v8 + *(int *)(v6 + 20);
  v19 = *MEMORY[0x24BDEEB68];
  v20 = sub_237A86C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *v8 = a3 * 0.5;
  v8[1] = a3 * 0.5;
  v21 = MEMORY[0x24BDED998];
  sub_2378D07D8((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v11[*(int *)(v9 + 52)] = a1;
  *(_WORD *)&v11[*(int *)(v9 + 56)] = 256;
  swift_retain();
  sub_2378DE6A4((uint64_t)v8, (uint64_t (*)(_QWORD))v21);
  sub_237A874AC();
  sub_237A8687C();
  sub_2378BBFE0((uint64_t)v11, (uint64_t)v15, &qword_256820058);
  v22 = &v15[*(int *)(v12 + 36)];
  v23 = v26[1];
  *(_OWORD *)v22 = v26[0];
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v26[2];
  sub_2378BC024((uint64_t)v11, &qword_256820058);
  sub_237870370((uint64_t)v15, (uint64_t)v17, &qword_256820060);
  sub_2378BBFE0((uint64_t)v17, (uint64_t)v15, &qword_256820060);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820068);
  sub_2378BBFE0((uint64_t)v15, a2 + *(int *)(v24 + 48), &qword_256820060);
  sub_2378BC024((uint64_t)v17, &qword_256820060);
  return sub_2378BC024((uint64_t)v15, &qword_256820060);
}

uint64_t sub_23790EECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;
  char v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];
  __int128 v49;

  v47 = a3;
  v44 = sub_237A871B8();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821480);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821488);
  MEMORY[0x24BDAC7A8](v41);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821490);
  v11 = MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v40 - v14;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821498);
  MEMORY[0x24BDAC7A8](v45);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A868C4();
  v19 = v18;
  v21 = v20;
  v49 = *(_OWORD *)(a2 + 240);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  v22 = COERCE_DOUBLE(sub_237A7ED48((uint64_t)v48));
  v24 = v23;
  sub_2378BC024((uint64_t)v48, &qword_256820020);
  sub_2378BBC40((uint64_t)&v49);
  if ((v24 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload();
    sub_23790FDB8();
    return sub_237A86D44();
  }
  else
  {
    v25 = fabs(v19);
    v26 = fabs(v21);
    if (v25 >= v26)
      v25 = v26;
    v27 = fmax(ceil(v25 * 8.0 / 498.0), 5.0);
    v28 = *(double *)(a2 + 256);
    v29 = *(double *)(a2 + 264);
    if (v29 >= v22)
      v30 = v22;
    else
      v30 = *(double *)(a2 + 264);
    if (v28 <= v22)
      v31 = v30;
    else
      v31 = *(double *)(a2 + 256);
    v32 = *(double *)a2 + (*(double *)(a2 + 8) - *(double *)a2) * ((v31 - v28) / (v29 - v28));
    sub_237A868C4();
    *v8 = sub_237A874AC();
    v8[1] = v33;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214B8);
    sub_23790F34C(a1, (uint64_t)v8 + *(int *)(v34 + 44), v27, v32);
    sub_237A868C4();
    sub_237A868C4();
    sub_237A874AC();
    sub_237A8687C();
    sub_2378BBFE0((uint64_t)v8, (uint64_t)v10, &qword_256821480);
    v35 = &v10[*(int *)(v41 + 36)];
    v36 = v48[1];
    *(_OWORD *)v35 = v48[0];
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v48[2];
    sub_2378BC024((uint64_t)v8, &qword_256821480);
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v43, *MEMORY[0x24BDF3C18], v44);
    v37 = sub_237A8726C();
    sub_2378BBFE0((uint64_t)v10, (uint64_t)v13, &qword_256821488);
    v38 = (uint64_t *)&v13[*(int *)(v46 + 36)];
    *v38 = v37;
    v38[1] = 0x4010000000000000;
    v38[2] = 0;
    v38[3] = 0;
    sub_2378BC024((uint64_t)v10, &qword_256821488);
    sub_237870370((uint64_t)v13, (uint64_t)v15, &qword_256821490);
    sub_2378BBFE0((uint64_t)v15, (uint64_t)v17, &qword_256821490);
    swift_storeEnumTagMultiPayload();
    sub_23790FDB8();
    sub_237A86D44();
    return sub_2378BC024((uint64_t)v15, &qword_256821490);
  }
}

uint64_t sub_23790F34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820018);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  *(_QWORD *)v9 = sub_237A86BAC();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820050);
  sub_23790F5C4(a1, (uint64_t)&v9[*(int *)(v16 + 44)], a3);
  sub_237A8756C();
  v18 = v17;
  v20 = v19;
  sub_2378BBFE0((uint64_t)v9, (uint64_t)v13, &qword_256820018);
  v21 = &v13[*(int *)(v10 + 36)];
  *(double *)v21 = a4;
  *((_QWORD *)v21 + 1) = v18;
  *((_QWORD *)v21 + 2) = v20;
  sub_2378BC024((uint64_t)v9, &qword_256820018);
  sub_237870370((uint64_t)v13, (uint64_t)v15, &qword_25681FFF0);
  if (qword_25681E058 != -1)
    swift_once();
  v22 = qword_256820BA8;
  swift_retain();
  sub_237A874AC();
  sub_237A8687C();
  v23 = v34;
  v24 = v35;
  v25 = v36;
  v26 = v37;
  v27 = v38;
  v32 = v39;
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v13, &qword_25681FFF0);
  v28 = v33;
  sub_2378BBFE0((uint64_t)v13, v33, &qword_25681FFF0);
  v29 = v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568214C0) + 48);
  *(_QWORD *)v29 = v22;
  *(_WORD *)(v29 + 8) = 256;
  *(_QWORD *)(v29 + 16) = v23;
  *(_BYTE *)(v29 + 24) = v24;
  *(_QWORD *)(v29 + 32) = v25;
  *(_BYTE *)(v29 + 40) = v26;
  v30 = v32;
  *(_QWORD *)(v29 + 48) = v27;
  *(_QWORD *)(v29 + 56) = v30;
  swift_retain();
  sub_2378BC024((uint64_t)v15, &qword_25681FFF0);
  swift_release();
  return sub_2378BC024((uint64_t)v13, &qword_25681FFF0);
}

uint64_t sub_23790F5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  char *v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v29[2];
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v29[1] = a1;
  v5 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (double *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820058);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820060);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v29 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v29 - v18;
  v20 = (char *)v7 + *(int *)(v5 + 20);
  v21 = *MEMORY[0x24BDEEB68];
  v22 = sub_237A86C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *v7 = a3 * 0.5;
  v7[1] = a3 * 0.5;
  if (qword_25681E058 != -1)
    swift_once();
  v23 = qword_256820BA8;
  v24 = MEMORY[0x24BDED998];
  sub_2378D07D8((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v10[*(int *)(v8 + 52)] = v23;
  *(_WORD *)&v10[*(int *)(v8 + 56)] = 256;
  swift_retain();
  sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))v24);
  sub_237A868C4();
  sub_237A874AC();
  sub_237A8687C();
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v17, &qword_256820058);
  v25 = &v17[*(int *)(v11 + 36)];
  v26 = v31;
  *(_OWORD *)v25 = v30;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v32;
  sub_2378BC024((uint64_t)v10, &qword_256820058);
  sub_237870370((uint64_t)v17, (uint64_t)v19, &qword_256820060);
  sub_2378BBFE0((uint64_t)v19, (uint64_t)v14, &qword_256820060);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820068);
  sub_2378BBFE0((uint64_t)v14, a2 + *(int *)(v27 + 48), &qword_256820060);
  sub_2378BC024((uint64_t)v19, &qword_256820060);
  return sub_2378BC024((uint64_t)v14, &qword_256820060);
}

uint64_t sub_23790F8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;

  v50[1] = a3;
  v56 = a4;
  v51 = type metadata accessor for AnimatableSystemFontModifier();
  MEMORY[0x24BDAC7A8](v51);
  v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A86F84();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214C8);
  MEMORY[0x24BDAC7A8](v50[0]);
  v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214D0);
  v16 = MEMORY[0x24BDAC7A8](v53);
  v55 = (uint64_t)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v52 = (uint64_t)v50 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v54 = (uint64_t)v50 - v20;
  v57 = a1;
  v58 = a2;
  sub_237879800();
  swift_bridgeObjectRetain();
  v21 = sub_237A8705C();
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  sub_237A8756C();
  v29 = v28;
  v31 = v30;
  sub_237A868C4();
  v33 = fabs(v32);
  v35 = fabs(v34);
  if (v35 >= v33)
    v35 = v33;
  v36 = -a5;
  v37 = v35 * 20.0 / 248.0;
  sub_237A86F90();
  v39 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDF1660], v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v9[*(int *)(v51 + 24)], v13, v10);
  *(double *)v9 = v37;
  *((_QWORD *)v9 + 1) = v39;
  sub_2378D07D8((uint64_t)v9, (uint64_t)&v15[*(int *)(v50[0] + 36)], (uint64_t (*)(_QWORD))type metadata accessor for AnimatableSystemFontModifier);
  *(_QWORD *)v15 = v21;
  *((_QWORD *)v15 + 1) = v23;
  v15[16] = v27;
  *((_QWORD *)v15 + 3) = v25;
  *((double *)v15 + 4) = v36;
  *((_QWORD *)v15 + 5) = v29;
  *((_QWORD *)v15 + 6) = v31;
  sub_2378BBD20(v21, v23, v27);
  swift_bridgeObjectRetain();
  sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for AnimatableSystemFontModifier);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_2378BBE34(v21, v23, v27);
  swift_bridgeObjectRelease();
  if (qword_25681E058 != -1)
    swift_once();
  v40 = qword_256820BA8;
  KeyPath = swift_getKeyPath();
  v42 = v52;
  sub_2378BBFE0((uint64_t)v15, v52, &qword_2568214C8);
  v43 = (uint64_t *)(v42 + *(int *)(v53 + 36));
  *v43 = KeyPath;
  v43[1] = v40;
  swift_retain();
  sub_2378BC024((uint64_t)v15, &qword_2568214C8);
  v44 = v42;
  v45 = v54;
  sub_237870370(v44, v54, &qword_2568214D0);
  v46 = v55;
  sub_2378BBFE0(v45, v55, &qword_2568214D0);
  v47 = v56;
  *v56 = 0;
  *((_BYTE *)v47 + 8) = 1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214D8);
  sub_2378BBFE0(v46, (uint64_t)v47 + *(int *)(v48 + 48), &qword_2568214D0);
  sub_2378BC024(v45, &qword_2568214D0);
  return sub_2378BC024(v46, &qword_2568214D0);
}

uint64_t sub_23790FC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B04();
  *a1 = result;
  return result;
}

uint64_t sub_23790FC98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B04();
  *a1 = result;
  return result;
}

uint64_t sub_23790FCC0()
{
  swift_retain();
  return sub_237A86B10();
}

uint64_t sub_23790FCE8()
{
  swift_retain();
  return sub_237A86B10();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 136);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 208))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23790FDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23790EECC(a1, v2 + 16, a2);
}

unint64_t sub_23790FDB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568214A0;
  if (!qword_2568214A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821490);
    v2[0] = sub_23790FE24();
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568214A0);
  }
  return result;
}

unint64_t sub_23790FE24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568214A8;
  if (!qword_2568214A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821488);
    v2[0] = sub_2378B70D4(&qword_2568214B0, &qword_256821480, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568214A8);
  }
  return result;
}

unint64_t sub_23790FEA8()
{
  unint64_t result;

  result = qword_2568214F0;
  if (!qword_2568214F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568214F0);
  }
  return result;
}

unint64_t sub_23790FEE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568214F8;
  if (!qword_2568214F8)
  {
    v1 = type metadata accessor for InstrumentDataSource();
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_2568214F8);
  }
  return result;
}

uint64_t sub_23790FF30(double a1)
{
  uint64_t v1;
  _BYTE v4[304];

  memcpy(v4, (const void *)(v1 + 16), sizeof(v4));
  return Instrument.GaugeStyle.DialConfiguration.activeTickColor(for:)(a1);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 176);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  v2 = *(void **)(v0 + 232);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237910010(double a1)
{
  uint64_t v1;
  _BYTE v4[304];

  memcpy(v4, (const void *)(v1 + 16), sizeof(v4));
  return Instrument.GaugeStyle.DialConfiguration.inactiveTickColor(for:)(a1);
}

uint64_t sub_237910058(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_237910090(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  void *v7;
  void *v8;

  v2 = a1[13];
  v3 = a1[14];
  v4 = (void *)a1[15];
  v6 = a1[24];
  v8 = (void *)a1[34];
  v7 = (void *)a1[35];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2378886C4(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237910058(v6);

  swift_release();
  return a1;
}

uint64_t sub_2379101A0()
{
  return sub_2378B70D4(&qword_256821500, &qword_256821508, MEMORY[0x24BDEC6F8]);
}

uint64_t String.capitalizedFirstLetter.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  sub_2379103C4(1);
  swift_bridgeObjectRelease();
  sub_23791044C();
  v4 = sub_237A87E3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237910490(1uLL, a1, a2);
  swift_bridgeObjectRelease();
  sub_23791052C();
  swift_bridgeObjectRetain();
  sub_237A878CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t String.sha256.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t countAndFlagsBits;
  uint64_t v9;

  v0 = sub_237A87848();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A8783C();
  v4 = sub_237A87824();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
    return 0;
  countAndFlagsBits = Data.sha256()()._countAndFlagsBits;
  sub_2378709D8(v4, v6);
  return countAndFlagsBits;
}

uint64_t sub_2379103C4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_237A878B4();
    return sub_237A87980();
  }
  return result;
}

unint64_t sub_23791044C()
{
  unint64_t result;

  result = qword_256821510;
  if (!qword_256821510)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256821510);
  }
  return result;
}

unint64_t sub_237910490(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_237A878B4();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_237A87980();
  }
  __break(1u);
  return result;
}

unint64_t sub_23791052C()
{
  unint64_t result;

  result = qword_256821518;
  if (!qword_256821518)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256821518);
  }
  return result;
}

BOOL Array<A>.hasDuplicates.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_237A87B30();
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v4);
  sub_237A87C14();
  v5 = sub_237A87BFC();
  swift_bridgeObjectRelease();
  return v5 != MEMORY[0x23B81E754](a1, a2);
}

BOOL static IterateDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IterateDirection.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t IterateDirection.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t Array.nextElementByLooping(from:direction:where:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v34 = a3;
  v32 = a6;
  v10 = sub_237A87E0C();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - v11;
  v13 = *a2;
  if (MEMORY[0x23B81E754](a4, a5) <= a1)
  {
LABEL_8:
    result = sub_237A880AC();
    __break(1u);
    return result;
  }
  LOBYTE(v38) = v13;
  v14 = sub_23791093C(a1, &v38, a4, a5);
  v16 = v15;
  *(_QWORD *)&v35 = v14;
  v37 = v15;
  v17 = sub_237A87B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821520);
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12B8], v17);
  sub_237910A58();
  sub_237A877B8();
  v33 = v38;
  v35 = v38;
  v36 = v39;
  v18 = sub_237A87E84();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE2180], v18);
  sub_237A879A4();
  swift_unknownObjectRelease();
  v19 = *(_QWORD *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, a5) == 1)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v20 = sub_237A87B3C();
      v22 = v21;
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v38 = v20;
      *((_QWORD *)&v38 + 1) = v22;
      *(_QWORD *)&v39 = v24;
      *((_QWORD *)&v39 + 1) = v26;
      sub_237A879A4();
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    }
    __break(1u);
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v32, v12, a5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v28, 0, 1, a5);
}

uint64_t sub_23791093C(uint64_t result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a3;
  v6 = result;
  if ((*a2 & 1) != 0)
  {
    v7 = sub_237A87B30();
    swift_bridgeObjectRetain();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v7);
    v8 = sub_237A879E0();
    result = MEMORY[0x23B81E754](v5, a4);
    if (__OFSUB__(result, v6))
    {
      __break(1u);
    }
    else if (result)
    {
      if (result != -1 || v6 != 0x7FFFFFFFFFFFFFFFLL)
        return v8;
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__(result, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  result = MEMORY[0x23B81E754](a3, a4);
  if (!result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v6 != 0x7FFFFFFFFFFFFFFFLL || result != -1)
  {
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_237910A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256821528;
  if (!qword_256821528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821520);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE2C50], v1);
    atomic_store(result, (unint64_t *)&qword_256821528);
  }
  return result;
}

uint64_t Array.nextElementByLooping(from:direction:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t result;
  char v9;

  v7 = *a2;
  if (MEMORY[0x23B81E754](a3, a4) <= a1)
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v9 = v7;
    sub_23791093C(a1, &v9, a3, a4);
    sub_237A87B48();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_237910B7C()
{
  unint64_t result;

  result = qword_256821530;
  if (!qword_256821530)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for IterateDirection, &type metadata for IterateDirection);
    atomic_store(result, (unint64_t *)&qword_256821530);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IterateDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237910C0C + 4 * byte_237A92845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237910C40 + 4 * byte_237A92840[v4]))();
}

uint64_t sub_237910C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237910C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237910C50);
  return result;
}

uint64_t sub_237910C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237910C64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237910C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237910C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IterateDirection()
{
  return &type metadata for IterateDirection;
}

void sub_237910C8C(const void *a1)
{
  char *v1;
  _BYTE v2[496];

  sub_23791924C(a1, v2);
  v1 = (char *)sub_237910CDC + 4 * byte_237A928F0[sub_23791F118((uint64_t)v2)];
  __asm { BR              X10 }
}

uint64_t sub_237910CDC()
{
  uint64_t v1;

  sub_23791F124((uint64_t)&v1);
  sub_237A878E4();
  return swift_bridgeObjectRelease();
}

_QWORD *Instrument.RemainingRangeTextConfiguration.assets.getter()
{
  uint64_t v0;
  _BYTE __dst[274];

  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t Instrument.RemainingRangeTextConfiguration.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v4 = *(_QWORD *)(v1 + 256);
  v5 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  v6 = sub_237883AA4(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_237888708, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 256) = v6;
  }
  return result;
}

uint64_t Instrument.GaugeConfiguration.style.getter@<X0>(void *a1@<X8>)
{
  void *v1;
  _BYTE __dst[504];

  sub_237918E30(v1, __dst);
  sub_237918E30(__dst, a1);
  return sub_23791A20C((uint64_t)__dst, (voidsub_2378DD81C);
}

void *Instrument.GaugeConfiguration.style.setter(void *a1)
{
  void *v1;
  _BYTE v3[496];
  _BYTE __dst[496];

  sub_237918E30(a1, v3);
  sub_237918E30(v1, __dst);
  sub_23791A20C((uint64_t)__dst, (voidsub_2378DEB7C);
  return sub_237918E30(v3, v1);
}

uint64_t (*Instrument.GaugeConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeConfiguration.rendersLocally.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 496);
}

uint64_t Instrument.GaugeConfiguration.rendersLocally.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 496) = result;
  return result;
}

uint64_t (*Instrument.GaugeConfiguration.rendersLocally.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeConfiguration.visibilityConfiguration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 504);
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeConfiguration.visibilityConfiguration.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 504) = v2;
  return result;
}

uint64_t (*Instrument.GaugeConfiguration.visibilityConfiguration.modify())()
{
  return nullsub_1;
}

void *Instrument.GaugeConfiguration.init(style:rendersLocally:visibilityConfiguration:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7;
  _BYTE v9[496];
  _QWORD __src[64];

  sub_237918E30(a1, v9);
  v7 = *a3;
  sub_237918E30(v9, __src);
  LOBYTE(__src[62]) = a2;
  __src[63] = v7;
  return memcpy(a4, __src, 0x200uLL);
}

uint64_t Instrument.GaugeConfiguration.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[136];
  _BYTE v7[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  v1 = v0[63];
  sub_237918E30(__dst, v7);
  Instrument.GaugeStyle.hash(into:)();
  sub_237A885EC();
  result = sub_237A885E0();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v4 = v3 - 1;
    if (v3 != 1)
    {
      v5 = v1 + 168;
      do
      {
        sub_23787D0C8(v5, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v5 += 136;
        --v4;
      }
      while (v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237911120()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x4C737265646E6572;
  if (*v0 != 1)
    v1 = 0xD000000000000017;
  if (*v0)
    return v1;
  else
    return 0x656C797473;
}

uint64_t sub_237911188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791E384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379111AC()
{
  sub_237918E44();
  return sub_237A88718();
}

uint64_t sub_2379111D4()
{
  sub_237918E44();
  return sub_237A88724();
}

uint64_t Instrument.GaugeConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[62];
  _DWORD v12[129];
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821538);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237918E30((void *)v1, v12);
  v12[128] = *(unsigned __int8 *)(v1 + 496);
  v10 = *(_QWORD *)(v1 + 504);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237918E44();
  sub_237A886B8();
  sub_237918E30(v12, v11);
  v13 = 0;
  sub_237918E88();
  sub_237A882B0();
  if (!v2)
  {
    v8 = v10;
    LOBYTE(v11[0]) = 1;
    sub_237A88280();
    v11[0] = v8;
    v13 = 2;
    sub_237918ECC();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeConfiguration.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[136];
  _BYTE v7[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  v1 = v0[63];
  sub_237A885D4();
  sub_237918E30(__dst, v7);
  Instrument.GaugeStyle.hash(into:)();
  sub_237A885EC();
  sub_237A885E0();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v3 = v2 - 1;
    if (v2 != 1)
    {
      v4 = v1 + 168;
      do
      {
        sub_23787D0C8(v4, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t Instrument.GaugeConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[64];
  _BYTE v17[512];
  uint64_t v18;
  _BYTE v19[496];
  uint64_t v20;
  _QWORD v21[65];
  char v22;
  char v23;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821558);
  v5 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237918E44();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  v9 = a2;
  v23 = 0;
  sub_237918F10();
  v10 = v15;
  sub_237A881F0();
  sub_237918E30(&v20, v19);
  sub_237918E30(v19, v21);
  v17[0] = 1;
  sub_23791A20C((uint64_t)v19, (voidsub_2378DD81C);
  v11 = sub_237A881C0() & 1;
  LOBYTE(v21[62]) = v11;
  v22 = 2;
  sub_237918F54();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v10);
  v12 = v18;
  v21[63] = v18;
  sub_237918E30(v19, v16);
  LOBYTE(v16[62]) = v11;
  v16[63] = v12;
  sub_237918F98((uint64_t)v16);
  sub_23791A20C((uint64_t)v19, (voidsub_2378DEB7C);
  memcpy(v9, v16, 0x200uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  memcpy(v17, v21, sizeof(v17));
  return sub_237919064((uint64_t)v17);
}

uint64_t sub_237911714@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237911728(_QWORD *a1)
{
  return Instrument.GaugeConfiguration.encode(to:)(a1);
}

uint64_t sub_237911744()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[136];
  _BYTE v7[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  v1 = v0[63];
  sub_237A885D4();
  sub_237918E30(__dst, v7);
  Instrument.GaugeStyle.hash(into:)();
  sub_237A885EC();
  v2 = *(_QWORD *)(v1 + 16);
  sub_237A885E0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v3 = v2 - 1;
    if (v2 != 1)
    {
      v4 = v1 + 168;
      do
      {
        sub_23787D0C8(v4, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

void Instrument.GaugeStyle.name.getter()
{
  void *v0;
  char *v1;
  _BYTE v2[496];
  _BYTE __dst[496];

  sub_237918E30(v0, v2);
  sub_237918E30(v2, __dst);
  v1 = (char *)sub_2379118B4 + 4 * byte_237A928F9[sub_237919130((uint64_t)__dst)];
  __asm { BR              X10 }
}

uint64_t sub_2379118B4()
{
  uint64_t v1;

  sub_23791914C((uint64_t)&v1);
  return 0x72616C7563726943;
}

void Instrument.GaugeStyle.description.getter()
{
  void *v0;
  char *v1;
  _BYTE __dst[496];
  _BYTE v3[504];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v3);
  v1 = (char *)sub_2379119F0 + 4 * word_237A92900[sub_237919130((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_2379119F0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  _BYTE v4[496];
  uint64_t v5;

  sub_23791914C((uint64_t)&v5);
  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  sub_23791A20C((uint64_t)v4, (voidsub_2378DD81C);
  sub_237A7FE88(v0, v2);
  swift_bridgeObjectRelease();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  sub_23791A20C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2378DEB7C);
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2379103C4(1);
  swift_bridgeObjectRelease();
  sub_23791044C();
  sub_237A87E3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237910490(1uLL, 40, 0xE100000000000000);
  swift_bridgeObjectRelease();
  sub_23791052C();
  swift_bridgeObjectRetain();
  sub_237A878CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x72616C7563726943;
}

void Instrument.GaugeStyle.rawValue.getter()
{
  void *v0;
  char *v1;
  _BYTE v2[496];
  _BYTE __dst[496];

  sub_237918E30(v0, v2);
  sub_237918E30(v2, __dst);
  v1 = (char *)sub_23791224C + 4 * byte_237A92919[sub_237919130((uint64_t)__dst)];
  __asm { BR              X10 }
}

uint64_t sub_23791224C()
{
  uint64_t v1;

  sub_23791914C((uint64_t)&v1);
  return 0x72616C7563726963;
}

_BYTE *Instrument.GaugeStyle.CircularConfiguration.init(dataIdentifier:range:iconName:minLabel:minLabelColor:maxLabel:maxLabelColor:tintColors:backgroundTintColors:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, __int128 a12, uint64_t a13)
{
  *(_BYTE *)a9 = *result;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a12;
  *(_QWORD *)(a9 + 96) = a13;
  return result;
}

void Instrument.GaugeStyle.CircularConfiguration.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double Instrument.GaugeStyle.CircularConfiguration.range.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.iconName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.minLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.minLabelColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.maxLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.maxLabelColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.tintColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237896D64();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_237A871E8();
  swift_release();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_237A871E8();
  swift_release();
  sub_237A885E0();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  result = sub_237A885E0();
  v6 = *(_QWORD *)(v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      ++v7;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v6 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237912654(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237912694 + 4 * byte_237A92920[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

uint64_t sub_237912694()
{
  return 0x65676E6172;
}

uint64_t sub_2379126A8()
{
  return 0x656D614E6E6F6369;
}

uint64_t sub_2379126C0()
{
  return 0x6C6562614C6E696DLL;
}

uint64_t sub_237912718()
{
  return 0x6F6C6F43746E6974;
}

unint64_t sub_237912734()
{
  return 0xD000000000000014;
}

uint64_t sub_237912750()
{
  unsigned __int8 *v0;

  return sub_237912654(*v0);
}

uint64_t sub_237912758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791E4F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23791277C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_237912788()
{
  sub_237919288();
  return sub_237A88718();
}

uint64_t sub_2379127B0()
{
  sub_237919288();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821570);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v10 = *((_QWORD *)v1 + 2);
  v11 = *((_QWORD *)v1 + 3);
  v29 = *((_QWORD *)v1 + 4);
  v30 = v11;
  v12 = *((_QWORD *)v1 + 5);
  v27 = *((_QWORD *)v1 + 6);
  v28 = v12;
  v13 = *((_QWORD *)v1 + 7);
  v14 = *((_QWORD *)v1 + 8);
  v25 = *((_QWORD *)v1 + 9);
  v26 = v13;
  v23 = *((_QWORD *)v1 + 10);
  v24 = v14;
  v15 = *((_QWORD *)v1 + 12);
  v22 = *((_QWORD *)v1 + 11);
  v16 = a1[3];
  v17 = a1;
  v19 = v18;
  __swift_project_boxed_opaque_existential_2Tm(v17, v16);
  sub_237919288();
  sub_237A886B8();
  LOBYTE(v31) = v8;
  v33 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v21 = v15;
    v31 = v9;
    v32 = v10;
    v33 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
    sub_2379192CC(&qword_25681F0C0, MEMORY[0x24BEE13D8], MEMORY[0x24BEE08E0]);
    sub_237A882B0();
    LOBYTE(v31) = 2;
    sub_237A88274();
    LOBYTE(v31) = 3;
    sub_237A88274();
    v31 = v26;
    v33 = 4;
    sub_237879654();
    sub_237A882B0();
    LOBYTE(v31) = 5;
    sub_237A88274();
    v31 = v23;
    v33 = 6;
    sub_237A882B0();
    v31 = v22;
    v33 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F070);
    sub_237896EDC(&qword_25681F078, (uint64_t (*)(void))sub_237879654, MEMORY[0x24BEE12A0]);
    sub_237A882B0();
    v31 = v21;
    v33 = 8;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.hashValue.getter()
{
  sub_237A885D4();
  Instrument.GaugeStyle.CircularConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919288();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v44 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
    v44 = 1;
    sub_2379192CC(&qword_25681F0E0, MEMORY[0x24BEE1400], MEMORY[0x24BEE0900]);
    sub_237A881F0();
    v10 = v41;
    v11 = v42;
    LOBYTE(v41) = 2;
    v38 = sub_237A881B4();
    LOBYTE(v41) = 3;
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_237A881B4();
    v40 = v14;
    v36 = v15;
    v44 = 4;
    v17 = v16;
    v18 = sub_237879610();
    swift_bridgeObjectRetain();
    v37 = v18;
    sub_237A881F0();
    v39 = v17;
    v19 = v41;
    LOBYTE(v41) = 5;
    swift_retain();
    v34 = sub_237A881B4();
    v35 = v19;
    v44 = 6;
    v21 = v20;
    swift_bridgeObjectRetain();
    sub_237A881F0();
    v43 = v9;
    v22 = v21;
    v23 = v41;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F070);
    v44 = 7;
    v25 = sub_237896EDC(&qword_25681F098, (uint64_t (*)(void))sub_237879610, MEMORY[0x24BEE12D0]);
    swift_retain();
    v37 = v24;
    v33 = v25;
    sub_237A881F0();
    v44 = 8;
    v32 = v41;
    swift_bridgeObjectRetain();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v26 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v43;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    v27 = v39;
    v28 = v40;
    *(_QWORD *)(a2 + 24) = v38;
    *(_QWORD *)(a2 + 32) = v28;
    v29 = v35;
    *(_QWORD *)(a2 + 40) = v36;
    *(_QWORD *)(a2 + 48) = v27;
    v30 = v34;
    *(_QWORD *)(a2 + 56) = v29;
    *(_QWORD *)(a2 + 64) = v30;
    *(_QWORD *)(a2 + 72) = v22;
    *(_QWORD *)(a2 + 80) = v23;
    *(_QWORD *)(a2 + 88) = v32;
    *(_QWORD *)(a2 + 96) = v26;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379131E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.CircularConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379131F4(_QWORD *a1)
{
  return Instrument.GaugeStyle.CircularConfiguration.encode(to:)(a1);
}

uint64_t sub_23791320C()
{
  sub_237A885D4();
  Instrument.GaugeStyle.CircularConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237913290()
{
  sub_237A885D4();
  Instrument.GaugeStyle.CircularConfiguration.hash(into:)();
  return sub_237A88610();
}

void static Instrument.GaugeStyle.Alignment.DefaultAlignment.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Instrument.GaugeStyle.Alignment.displayValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237913348 + 4 * byte_237A92929[*v0]))(0x676E696461654CLL, 0xE700000000000000);
}

uint64_t sub_237913348()
{
  return 0x7265746E6543;
}

uint64_t sub_23791335C()
{
  return 0x676E696C69617254;
}

uint64_t sub_237913374()
{
  return 7368532;
}

uint64_t sub_237913384()
{
  return 0x6D6F74746F42;
}

unint64_t Instrument.GaugeStyle.Alignment.init(rawValue:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x40302010005uLL >> (8 * result);
  if (result >= 6)
    LOBYTE(v2) = 5;
  *a2 = v2;
  return result;
}

void *static Instrument.GaugeStyle.Alignment.allCases.getter()
{
  return &unk_25096A348;
}

uint64_t Instrument.GaugeStyle.Alignment.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

unint64_t sub_2379133D8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return Instrument.GaugeStyle.Alignment.init(rawValue:)(*a1, a2);
}

void sub_2379133E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A370;
}

uint64_t sub_2379133F0()
{
  sub_23791F0A8();
  return sub_237A87A40();
}

uint64_t sub_23791344C()
{
  sub_23791F0A8();
  return sub_237A879F8();
}

void Instrument.GaugeStyle.hash(into:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[496];
  _BYTE v3[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v3);
  v1 = (char *)sub_2379134F4 + 4 * byte_237A9292E[sub_237919130((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_2379134F4()
{
  uint64_t v1;

  sub_23791914C((uint64_t)&v1);
  sub_237A885E0();
  return Instrument.GaugeStyle.CircularConfiguration.hash(into:)();
}

uint64_t sub_237913698(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379136CC + 4 * byte_237A92935[a1]))(0x72616C7563726963, 0xE800000000000000);
}

uint64_t sub_2379136CC()
{
  return 0x737361706D6F63;
}

uint64_t sub_2379136E4()
{
  return 1818323300;
}

uint64_t sub_2379136F4()
{
  return 0x6F72476567616D69;
}

uint64_t sub_237913710()
{
  return 0x6D656C4574786574;
}

unint64_t sub_237913730()
{
  return 0xD000000000000010;
}

uint64_t sub_23791374C()
{
  return 0x73736572676F7270;
}

uint64_t sub_23791376C()
{
  return 0x6769666E6F63;
}

uint64_t sub_237913780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23791380C()
{
  sub_237919618();
  return sub_237A88718();
}

uint64_t sub_237913834()
{
  sub_237919618();
  return sub_237A88724();
}

uint64_t sub_23791385C()
{
  unsigned __int8 *v0;

  return sub_237913698(*v0);
}

uint64_t sub_237913864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791E8E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237913888()
{
  sub_23791932C();
  return sub_237A88718();
}

uint64_t sub_2379138B0()
{
  sub_23791932C();
  return sub_237A88724();
}

uint64_t sub_2379138D8()
{
  sub_2379195D4();
  return sub_237A88718();
}

uint64_t sub_237913900()
{
  sub_2379195D4();
  return sub_237A88724();
}

uint64_t sub_237913928()
{
  return 0x72756769666E6F63;
}

uint64_t sub_237913950()
{
  sub_23791954C();
  return sub_237A88718();
}

uint64_t sub_237913978()
{
  sub_23791954C();
  return sub_237A88724();
}

uint64_t sub_2379139A0()
{
  sub_2379194C4();
  return sub_237A88718();
}

uint64_t sub_2379139C8()
{
  sub_2379194C4();
  return sub_237A88724();
}

uint64_t sub_2379139F0()
{
  sub_2379193F8();
  return sub_237A88718();
}

uint64_t sub_237913A18()
{
  sub_2379193F8();
  return sub_237A88724();
}

uint64_t sub_237913A40()
{
  return 1701869940;
}

uint64_t sub_237913A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237913AD4()
{
  sub_237919370();
  return sub_237A88718();
}

uint64_t sub_237913AFC()
{
  sub_237919370();
  return sub_237A88724();
}

uint64_t sub_237913B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237913BDC()
{
  sub_23791943C();
  return sub_237A88718();
}

uint64_t sub_237913C04()
{
  sub_23791943C();
  return sub_237A88724();
}

void Instrument.GaugeStyle.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[4];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _BYTE v31[496];
  _BYTE v32[504];

  v2 = v1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821588);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821590);
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[3] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821598);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568215A0);
  v18 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v16 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568215A8);
  v14[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568215B0);
  MEMORY[0x24BDAC7A8](v9);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568215B8);
  v14[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v14[0] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568215C0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237918E30(v2, v31);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23791932C();
  v29 = v12;
  sub_237A886B8();
  sub_237918E30(v31, v32);
  v13 = (char *)sub_237913EE4 + 4 * word_237A9293C[sub_237919130((uint64_t)v32)];
  __asm { BR              X10 }
}

uint64_t sub_237913EE4()
{
  uint64_t *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (unsigned __int8 *)sub_23791914C((uint64_t)(v0 + 213));
  *((_DWORD *)v0 + 40) = *v1;
  v2 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v1 + 2);
  *((_OWORD *)v0 + 9) = *(_OWORD *)(v1 + 24);
  v0[17] = *((_QWORD *)v1 + 5);
  v0[22] = *((_QWORD *)v1 + 8);
  *((_BYTE *)v0 + 216) = 0;
  v4 = *((_OWORD *)v1 + 3);
  *((_OWORD *)v0 + 7) = *(_OWORD *)(v1 + 72);
  v5 = *(_OWORD *)(v1 + 88);
  *((_OWORD *)v0 + 5) = v4;
  *((_OWORD *)v0 + 6) = v5;
  sub_237918E30(v0 + 151, v0 + 89);
  sub_23791914C((uint64_t)(v0 + 89));
  sub_237919618();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = *v0;
  v8 = v0[25];
  v7 = v0[26];
  sub_237A88220();
  *((_BYTE *)v0 + 216) = *((_DWORD *)v0 + 40);
  v0[28] = v2;
  v0[29] = v3;
  *((_OWORD *)v0 + 15) = *((_OWORD *)v0 + 9);
  v0[32] = v0[17];
  *(_OWORD *)(v0 + 33) = *((_OWORD *)v0 + 5);
  v0[35] = v0[22];
  *((_OWORD *)v0 + 18) = *((_OWORD *)v0 + 7);
  *((_OWORD *)v0 + 19) = *((_OWORD *)v0 + 6);
  sub_23791965C();
  v9 = v0[6];
  sub_237A882B0();
  (*(void (**)(uint64_t, uint64_t))(v0[2] + 8))(v6, v9);
  (*(void (**)(uint64_t, uint64_t))(v0[24] + 8))(v8, v7);
  return sub_23791A20C((uint64_t)(v0 + 151), (voidsub_2378DEB7C);
}

uint64_t Instrument.GaugeStyle.hashValue.getter()
{
  void *v0;
  _BYTE v2[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v2);
  sub_237A885D4();
  Instrument.GaugeStyle.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[8];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v40 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821630);
  v38 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v45 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821638);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821640);
  v7 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  v37 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821648);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821650);
  v30[6] = *(_QWORD *)(v11 - 8);
  v30[7] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821658);
  v30[4] = *(_QWORD *)(v13 - 8);
  v30[5] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v39 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821660);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821668);
  v19 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v22);
  sub_23791932C();
  v23 = v48;
  sub_237A88688();
  if (!v23)
  {
    v30[1] = v16;
    v30[2] = v18;
    v30[0] = v15;
    v30[3] = 0;
    v48 = v19;
    v24 = sub_237A881FC();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v25 = sub_237A87FB0();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v27 = &type metadata for Instrument.GaugeStyle;
    v28 = v46;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v28);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v47);
}

uint64_t sub_237914E2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.init(from:)(a1, a2);
}

void sub_237914E40(_QWORD *a1)
{
  Instrument.GaugeStyle.encode(to:)(a1);
}

uint64_t sub_237914E58()
{
  void *v0;
  _BYTE v2[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v2);
  sub_237A885D4();
  Instrument.GaugeStyle.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237914EB4()
{
  void *v0;
  _BYTE v2[496];
  _BYTE __dst[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v2);
  sub_237A885D4();
  Instrument.GaugeStyle.hash(into:)();
  return sub_237A88610();
}

uint64_t static Instrument.ConfigurableInputState.defaultState.getter()
{
  return 0;
}

uint64_t Instrument.ConfigurableInputState.imageAsset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Instrument.ConfigurableInputState.imageAsset.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v7;
  *(__n128 *)v1 = v7;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.imageAsset.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.ConfigurableInputState.tintColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.ConfigurableInputState.tintColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.tintColorIDs.modify())()
{
  return nullsub_1;
}

void Instrument.ConfigurableInputState.alignment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

_BYTE *Instrument.ConfigurableInputState.alignment.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *result;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.alignment.modify())()
{
  return nullsub_1;
}

__n128 Instrument.ConfigurableInputState.init(imageAsset:tintColorID:alignment:)@<Q0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  __n128 result;
  __n128 v14;
  __int128 v15;

  v14 = (__n128)a1[1];
  v15 = *a1;
  v5 = *((_BYTE *)a1 + 32);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((unsigned __int8 *)a2 + 16);
  v8 = *a3;
  if (v7 == 255)
  {
    v12 = sub_2378D49A0(MEMORY[0x24BEE4AF8]);
  }
  else
  {
    v10 = *a2;
    v9 = a2[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821698);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 48) = v9;
    *(_BYTE *)(inited + 56) = v7;
    v12 = sub_2378D49A0(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A0);
    swift_arrayDestroy();
  }
  result = v14;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = v14;
  *(_BYTE *)(a4 + 32) = v5;
  *(_QWORD *)(a4 + 40) = v6;
  *(_QWORD *)(a4 + 48) = v12;
  *(_BYTE *)(a4 + 56) = v8;
  return result;
}

__n128 Instrument.ConfigurableInputState.init(imageAsset:tintColorIDs:alignment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  char v6;
  __n128 result;
  __int128 v8;

  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *a3;
  result = *(__n128 *)a1;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(_BYTE *)(a4 + 32) = v4;
  *(_QWORD *)(a4 + 40) = v5;
  *(_QWORD *)(a4 + 48) = a2;
  *(_BYTE *)(a4 + 56) = v6;
  return result;
}

uint64_t sub_237915144(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5F5C(*a1, *a2);
}

uint64_t sub_237915150()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379151F8()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23791527C()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237915320@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23791EBE8();
  *a1 = result;
  return result;
}

void sub_23791534C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEC00000073444972;
  v5 = 0x6F6C6F43746E6974;
  if (v2 != 1)
  {
    v5 = 0x6E656D6E67696C61;
    v4 = 0xE900000000000074;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6567616D69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2379153B4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F6C6F43746E6974;
  if (*v0 != 1)
    v1 = 0x6E656D6E67696C61;
  if (*v0)
    return v1;
  else
    return 0x6567616D69;
}

uint64_t sub_237915418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23791EBE8();
  *a1 = result;
  return result;
}

uint64_t sub_23791543C()
{
  sub_237919A88();
  return sub_237A88718();
}

uint64_t sub_237915464()
{
  sub_237919A88();
  return sub_237A88724();
}

uint64_t Instrument.ConfigurableInputState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(void **)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_BYTE *)(v1 + 32);
  sub_237870090(*(void **)v1, v6, v7, v8, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v3, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  return sub_237A885E0();
}

uint64_t Instrument.ConfigurableInputState.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A8);
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v18 = *v1;
  v6 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v7 = *((_BYTE *)v1 + 32);
  v8 = *((_QWORD *)v1 + 5);
  v17 = *((_QWORD *)v1 + 6);
  v26 = *((unsigned __int8 *)v1 + 56);
  v9 = a1[3];
  v10 = a1;
  v11 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(v10, v9);
  sub_237919A88();
  sub_237A886B8();
  v21 = v18;
  v22 = v6;
  v23 = v5;
  v24 = v7;
  v25 = v8;
  v27 = 0;
  sub_2378888DC();
  v12 = v20;
  sub_237A882B0();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v3);
  v14 = v26;
  v15 = v19;
  *(_QWORD *)&v21 = v17;
  v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  LOBYTE(v21) = v14;
  v27 = 2;
  sub_237919ACC();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v3);
}

uint64_t Instrument.ConfigurableInputState.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 32);
  sub_237A885D4();
  sub_237870090(v1, v2, v3, v4, v6);
  ImageAsset.ImageType.hash(into:)((uint64_t)v8);
  sub_237A885E0();
  sub_2378702E0(v1, v2, v3, v4, v6);
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  sub_237A885E0();
  return sub_237A88610();
}

void Instrument.ConfigurableInputState.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  int v40;
  char v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568216D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919A88();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v41 = 0;
    sub_237888A0C();
    sub_237A881F0();
    v9 = v34;
    v33 = v35;
    v10 = v37;
    v29 = a2;
    v30 = v36;
    v11 = v38;
    v28 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v41 = 1;
    v31 = v9;
    v32 = v10;
    v12 = v9;
    v13 = v30;
    v40 = v11;
    sub_237870090(v12, v33, v30, v10, v11);
    sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    v14 = v13;
    v16 = v33;
    v15 = (uint64_t)v34;
    v17 = v31;
    v41 = 2;
    sub_237919B84();
    v27 = v15;
    swift_bridgeObjectRetain();
    v26 = 0;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v15) = (_BYTE)v34;
    v18 = v17;
    v19 = v17;
    v20 = v16;
    v21 = v16;
    v22 = v32;
    LOBYTE(v17) = v40;
    sub_237870090(v19, v21, v14, v32, v40);
    sub_2378702E0(v18, v20, v14, v22, (char)v17);
    v24 = v28;
    v23 = v29;
    *v29 = v18;
    v23[1] = v20;
    v23[2] = v14;
    v23[3] = v22;
    *((_BYTE *)v23 + 32) = (_BYTE)v17;
    v25 = v27;
    v23[5] = v24;
    v23[6] = v25;
    *((_BYTE *)v23 + 56) = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702E0(v18, v20, v14, v22, (char)v17);
    swift_bridgeObjectRelease();
  }
}

void sub_237915B98(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  Instrument.ConfigurableInputState.init(from:)(a1, a2);
}

uint64_t sub_237915BAC(_QWORD *a1)
{
  return Instrument.ConfigurableInputState.encode(to:)(a1);
}

uint64_t sub_237915BC4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(void **)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_BYTE *)(v1 + 32);
  sub_237870090(*(void **)v1, v6, v7, v8, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v3, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  return sub_237A885E0();
}

uint64_t sub_237915C94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 32);
  sub_237A885D4();
  sub_237870090(v1, v2, v3, v4, v6);
  ImageAsset.ImageType.hash(into:)((uint64_t)v8);
  sub_237A885E0();
  sub_2378702E0(v1, v2, v3, v4, v6);
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  sub_237A885E0();
  return sub_237A88610();
}

void Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.RemainingRangeTextConfiguration.labelConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + 8);
  memcpy(__dst, v3, 0x112uLL);
  memcpy(a1, v3, 0x112uLL);
  return sub_237919BC8((uint64_t)__dst);
}

void *Instrument.RemainingRangeTextConfiguration.labelConfiguration.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE __dst[280];

  v3 = (void *)(v1 + 8);
  memcpy(__dst, v3, 0x112uLL);
  sub_237919CFC((uint64_t)__dst);
  return memcpy(v3, a1, 0x112uLL);
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.labelConfiguration.modify())()
{
  return nullsub_1;
}

void *Instrument.RemainingRangeTextConfiguration.init(labelConfiguration:)@<X0>(void *__src@<X0>, _WORD *a2@<X8>)
{
  _BYTE __srca[280];

  memcpy(&__srca[6], __src, 0x112uLL);
  *a2 = 8234;
  return memcpy(a2 + 1, __srca, 0x118uLL);
}

uint64_t Instrument.RemainingRangeTextConfiguration.hash(into:)(uint64_t a1)
{
  char *v1;
  char v3;
  char v4;
  _BYTE __dst[274];
  char v7;

  v3 = *v1;
  v4 = v1[1];
  memcpy(__dst, v1 + 8, sizeof(__dst));
  v7 = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v7 = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return MeasurementLabelConfiguration.hash(into:)(a1);
}

unint64_t sub_237915F8C(char a1)
{
  unint64_t result;

  result = 0xD000000000000012;
  if (!a1)
    return 0xD00000000000001CLL;
  return result;
}

unint64_t sub_237915FE4()
{
  char *v0;

  return sub_237915F8C(*v0);
}

uint64_t sub_237915FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791EC30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237916010()
{
  sub_237919E2C();
  return sub_237A88718();
}

uint64_t sub_237916038()
{
  sub_237919E2C();
  return sub_237A88724();
}

uint64_t Instrument.RemainingRangeTextConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  _BYTE v12[274];
  int v13;
  char v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568216E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v13 = v2[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919E2C();
  sub_237A886B8();
  v12[0] = v8;
  v14 = 0;
  sub_237888154();
  v9 = v11[1];
  sub_237A882B0();
  if (!v9)
  {
    v12[0] = v13;
    v14 = 1;
    sub_237A882B0();
    memcpy(v12, v2 + 8, sizeof(v12));
    v14 = 2;
    sub_237919E70();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.RemainingRangeTextConfiguration.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[274];
  _BYTE v3[72];
  _BYTE __dst[274];

  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  memcpy(v2, __dst, sizeof(v2));
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Instrument.RemainingRangeTextConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE *v12;
  char v13;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE v18[280];
  _BYTE v19[280];
  _BYTE v20[2];
  _BYTE v21[280];
  _BYTE v22[274];
  _BYTE v23[280];
  int v24;
  char v25;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821700);
  v5 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919E2C();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  v16 = a2;
  v19[0] = 0;
  sub_237888198();
  v9 = v17;
  sub_237A881F0();
  v10 = v20[0];
  v19[0] = 1;
  sub_237A881F0();
  v24 = v10;
  v11 = v20[0];
  v25 = 2;
  sub_237919EB4();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  memcpy(v18, v22, 0x112uLL);
  memcpy(&v23[6], v22, 0x112uLL);
  memcpy(&v19[6], v22, 0x112uLL);
  v12 = v16;
  v13 = v24;
  *v16 = v24;
  v12[1] = v11;
  memcpy(v12 + 2, v19, 0x118uLL);
  sub_237919BC8((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v20[0] = v13;
  v20[1] = v11;
  memcpy(v21, v23, sizeof(v21));
  return sub_23788AF30((uint64_t)v20);
}

_QWORD *sub_23791651C()
{
  uint64_t v0;
  _BYTE __dst[274];

  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t sub_237916554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v4 = *(_QWORD *)(v1 + 256);
  v5 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  v6 = sub_237883AA4(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_23788B060, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 256) = v6;
  }
  return result;
}

uint64_t sub_2379165EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Instrument.RemainingRangeTextConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237916600(_QWORD *a1)
{
  return Instrument.RemainingRangeTextConfiguration.encode(to:)(a1);
}

uint64_t sub_237916618(uint64_t a1)
{
  char *v1;
  char v3;
  char v4;
  _BYTE __dst[274];
  char v7;

  v3 = *v1;
  v4 = v1[1];
  memcpy(__dst, v1 + 8, sizeof(__dst));
  v7 = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v7 = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return MeasurementLabelConfiguration.hash(into:)(a1);
}

uint64_t sub_2379166C8()
{
  uint64_t v0;
  _BYTE v2[274];
  _BYTE v3[72];
  _BYTE __dst[274];

  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  memcpy(v2, __dst, sizeof(v2));
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Instrument.BoundsLabel.lowerBounds.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.BoundsLabel.lowerBounds.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Instrument.BoundsLabel.lowerBounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.BoundsLabel.upperBounds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.BoundsLabel.upperBounds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Instrument.BoundsLabel.upperBounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.BoundsLabel.init(lowerBounds:upperBounds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t Instrument.BoundsLabel.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237916900()
{
  _BYTE *v0;

  if (*v0)
    return 0x756F427265707075;
  else
    return 0x756F427265776F6CLL;
}

uint64_t sub_23791693C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791ED70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237916960()
{
  sub_237919EF8();
  return sub_237A88718();
}

uint64_t sub_237916988()
{
  sub_237919EF8();
  return sub_237A88724();
}

uint64_t Instrument.BoundsLabel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821710);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919EF8();
  sub_237A886B8();
  v12 = 0;
  sub_237A88274();
  if (!v2)
  {
    v11 = 1;
    sub_237A88274();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t Instrument.BoundsLabel.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t Instrument.BoundsLabel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919EF8();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_237A881B4();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237916CE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.BoundsLabel.init(from:)(a1, a2);
}

uint64_t sub_237916CFC(_QWORD *a1)
{
  return Instrument.BoundsLabel.encode(to:)(a1);
}

uint64_t (*Instrument.UnitSensitiveBoundsLabels.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*Instrument.UnitSensitiveBoundsLabels.labels.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveBoundsLabels.hash(into:)(uint64_t a1)
{
  return sub_2379173AC(a1, (void (*)(uint64_t, uint64_t))sub_2378773DC);
}

uint64_t static Instrument.UnitSensitiveBoundsLabels.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_237918A50(a1, a2, sub_2379B7C6C) & 1;
}

uint64_t sub_237916D5C()
{
  sub_237919F3C();
  return sub_237A88718();
}

uint64_t sub_237916D84()
{
  sub_237919F3C();
  return sub_237A88724();
}

uint64_t Instrument.UnitSensitiveBoundsLabels.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821728);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919F3C();
  sub_237A886B8();
  v13 = v8;
  v12 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v10[1] = v10[0];
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821738);
    sub_237919F80(&qword_256821740, (uint64_t (*)(void))sub_237919FF4, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.UnitSensitiveBoundsLabels.hashValue.getter()
{
  return sub_2379176BC((void (*)(_BYTE *, uint64_t))sub_2378773DC);
}

uint64_t Instrument.UnitSensitiveBoundsLabels.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821750);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237919F3C();
  sub_237A88688();
  if (!v2)
  {
    v14 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821738);
    v13 = 1;
    sub_237919F80(&qword_256821758, (uint64_t (*)(void))sub_23791A038, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2379170E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveBoundsLabels.init(from:)(a1, a2);
}

uint64_t sub_2379170F4(_QWORD *a1)
{
  return Instrument.UnitSensitiveBoundsLabels.encode(to:)(a1);
}

uint64_t sub_237917108(uint64_t a1, uint64_t a2)
{
  return sub_237917948(a1, a2, (void (*)(_BYTE *, uint64_t))sub_2378773DC);
}

uint64_t sub_237917114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379179C8(a1, a2, a3, sub_2378773DC);
}

uint64_t sub_237917120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237917A38(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_2378773DC);
}

uint64_t sub_23791712C(uint64_t a1, uint64_t a2)
{
  return sub_237918A50(a1, a2, sub_2379B7C6C) & 1;
}

uint64_t (*Instrument.UnitSensitiveFormatSpecifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*Instrument.UnitSensitiveFormatSpecifiers.formatSpecifiers.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.hash(into:)(uint64_t a1)
{
  return sub_2379173AC(a1, (void (*)(uint64_t, uint64_t))sub_237877240);
}

uint64_t static Instrument.UnitSensitiveFormatSpecifiers.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_237918A50(a1, a2, sub_2379B7AE4) & 1;
}

uint64_t sub_237917198()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6E65644961746164;
}

uint64_t sub_2379171E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791EE8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237917208()
{
  sub_23791A07C();
  return sub_237A88718();
}

uint64_t sub_237917230()
{
  sub_23791A07C();
  return sub_237A88724();
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.encode(to:)(_QWORD *a1)
{
  return sub_23791752C(a1, &qword_256821768, (void (*)(void))sub_23791A07C);
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.hashValue.getter()
{
  return sub_2379176BC((void (*)(_BYTE *, uint64_t))sub_237877240);
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237917768(a1, &qword_256821788, (void (*)(void))sub_23791A07C, a2);
}

uint64_t sub_2379172BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveFormatSpecifiers.init(from:)(a1, a2);
}

uint64_t sub_2379172D0(_QWORD *a1)
{
  return Instrument.UnitSensitiveFormatSpecifiers.encode(to:)(a1);
}

uint64_t sub_2379172E4(uint64_t a1, uint64_t a2)
{
  return sub_237917948(a1, a2, (void (*)(_BYTE *, uint64_t))sub_237877240);
}

uint64_t sub_2379172F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379179C8(a1, a2, a3, sub_237877240);
}

uint64_t sub_2379172FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237917A38(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_237877240);
}

uint64_t sub_237917308(uint64_t a1, uint64_t a2)
{
  return sub_237918A50(a1, a2, sub_2379B7AE4) & 1;
}

void Instrument.UnitSensitiveLabel.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.UnitSensitiveLabel.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.UnitSensitiveLabel.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveLabel.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.UnitSensitiveLabel.labels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.UnitSensitiveLabel.labels.modify())()
{
  return nullsub_1;
}

_BYTE *Instrument.UnitSensitiveLabel.init(dataIdentifier:labels:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t Instrument.UnitSensitiveLabel.hash(into:)(uint64_t a1)
{
  return sub_2379173AC(a1, (void (*)(uint64_t, uint64_t))sub_237877240);
}

uint64_t sub_2379173AC(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  a2(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t static Instrument.UnitSensitiveLabel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_237918A50(a1, a2, sub_2379B7AE4) & 1;
}

uint64_t sub_237917448()
{
  _BYTE *v0;

  if (*v0)
    return 0x736C6562616CLL;
  else
    return 0x6E65644961746164;
}

uint64_t sub_23791748C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23791EF9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379174B0()
{
  sub_23791A124();
  return sub_237A88718();
}

uint64_t sub_2379174D8()
{
  sub_23791A124();
  return sub_237A88724();
}

uint64_t Instrument.UnitSensitiveLabel.encode(to:)(_QWORD *a1)
{
  return sub_23791752C(a1, &qword_256821798, (void (*)(void))sub_23791A124);
}

uint64_t sub_23791752C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v12[0] = *((_QWORD *)v3 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  a3();
  sub_237A886B8();
  v17 = v9;
  v16 = 0;
  sub_237888154();
  v10 = v12[1];
  sub_237A882B0();
  if (!v10)
  {
    v14 = v12[0];
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821778);
    sub_23791A0C0(&qword_256821780, MEMORY[0x24BEE1770], MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
}

uint64_t Instrument.UnitSensitiveLabel.hashValue.getter()
{
  return sub_2379176BC((void (*)(_BYTE *, uint64_t))sub_237877240);
}

uint64_t sub_2379176BC(void (*a1)(_BYTE *, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[72];

  v3 = *(_QWORD *)(v1 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  a1(v5, v3);
  return sub_237A88610();
}

uint64_t Instrument.UnitSensitiveLabel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237917768(a1, &qword_2568217A8, (void (*)(void))sub_23791A124, a2);
}

uint64_t sub_237917768@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  a3();
  sub_237A88688();
  if (!v4)
  {
    v10 = v7;
    v11 = v17;
    v21 = 0;
    sub_237888198();
    v12 = v18;
    sub_237A881F0();
    v13 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821778);
    v20 = 1;
    sub_23791A0C0(&qword_256821790, MEMORY[0x24BEE1798], MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v12);
    v14 = v19;
    *(_BYTE *)v11 = v13;
    *(_QWORD *)(v11 + 8) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237917920@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveLabel.init(from:)(a1, a2);
}

uint64_t sub_237917934(_QWORD *a1)
{
  return Instrument.UnitSensitiveLabel.encode(to:)(a1);
}

uint64_t sub_237917948(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *(_QWORD *)(v3 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  a3(v7, v5);
  return sub_237A88610();
}

uint64_t sub_2379179C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;

  v6 = *(_QWORD *)(v4 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return a4(a1, v6);
}

uint64_t sub_237917A38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v8[72];

  v6 = *(_QWORD *)(v4 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  a4(v8, v6);
  return sub_237A88610();
}

void Instrument.GaugeStyle.assets.getter()
{
  void *v0;
  char *v1;
  _BYTE __dst[496];
  _BYTE v3[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v3);
  v1 = (char *)sub_237917B1C + 4 * byte_237A92951[sub_237919130((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_237917B1C()
{
  uint64_t v0;
  uint64_t v2;

  sub_23791914C((uint64_t)&v2);
  return v0;
}

void sub_237917C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v51;
  char v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;

  v51 = sub_23791923C((uint64_t)&a51);
  v52 = *(_BYTE *)(v51 + 24);
  v53 = *(_QWORD *)(v51 + 32);
  v54 = *(void **)(v51 + 40);
  v55 = *(_QWORD *)(v51 + 48);
  v56 = *(_BYTE *)(v51 + 56);
  v57 = *(_BYTE *)(v51 + 57);
  v59 = *(_QWORD *)(v51 + 64);
  v58 = *(_QWORD *)(v51 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v60 + 56) = &type metadata for InstrumentFont;
  *(_QWORD *)(v60 + 64) = &protocol witness table for InstrumentFont;
  v61 = swift_allocObject();
  *(_QWORD *)(v60 + 32) = v61;
  *(_BYTE *)(v61 + 16) = v52;
  *(_QWORD *)(v61 + 24) = v53;
  *(_QWORD *)(v61 + 32) = v54;
  *(_QWORD *)(v61 + 40) = v55;
  *(_BYTE *)(v61 + 48) = v56;
  *(_BYTE *)(v61 + 49) = v57;
  *(_QWORD *)(v61 + 56) = v59;
  *(_QWORD *)(v61 + 64) = v58;
  v62 = v54;
  swift_bridgeObjectRetain();
  JUMPOUT(0x237917C38);
}

void sub_237917CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  const void *v51;

  v51 = (const void *)sub_23791923C((uint64_t)&a51);
  sub_23791A19C(v51, &a10);
  sub_23791A1D8((uint64_t)&a10);
  sub_23791A1E4((uint64_t)&a10);
  JUMPOUT(0x237917C38);
}

void Instrument.GaugeStyle.restoreAssets(from:)()
{
  void *v0;
  char *v1;
  _BYTE __dst[496];
  _BYTE v3[496];

  sub_237918E30(v0, __dst);
  sub_237918E30(__dst, v3);
  v1 = (char *)sub_237917D80 + 4 * byte_237A92963[sub_237919130((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_237917D80()
{
  uint64_t v1;

  return sub_23791914C((uint64_t)&v1);
}

void sub_237917FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;

  sub_23791923C((uint64_t)&a72);
  sub_23791A20C((uint64_t)&STACK[0x720], (voidsub_2378DEB7C);
  JUMPOUT(0x237917F00);
}

void sub_237917FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;
  const void *v72;

  v72 = (const void *)sub_23791923C((uint64_t)&a72);
  sub_23791A19C(v72, &STACK[0x530]);
  sub_23791A1D8((uint64_t)&STACK[0x530]);
  sub_23791A1E4((uint64_t)&STACK[0x530]);
  memcpy(&STACK[0x3E8], v72, 0x145uLL);
  sub_23791A1F4((uint64_t)&STACK[0x3E8]);
  JUMPOUT(0x237917F08);
}

void sub_237918040()
{
  Instrument.GaugeStyle.restoreAssets(from:)();
}

BOOL _s14CarPlayAssetUI10InstrumentV31RemainingRangeTextConfigurationV2eeoiySbAE_AEtFZ_0(char *a1, char *a2)
{
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v19[280];
  _BYTE v20[280];
  _BYTE __dst[274];
  _BYTE __src[274];

  v3 = *a1;
  v4 = a1[1];
  memcpy(__dst, a1 + 8, sizeof(__dst));
  v5 = *a2;
  v6 = a2[1];
  memcpy(__src, a2 + 8, sizeof(__src));
  v20[0] = v3;
  v19[0] = v5;
  v7 = InstrumentDataIdentifier.rawValue.getter();
  v9 = v8;
  if (v7 == InstrumentDataIdentifier.rawValue.getter() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = 0;
    if ((v11 & 1) == 0)
      return v12;
  }
  v20[0] = v4;
  v19[0] = v6;
  v13 = InstrumentDataIdentifier.rawValue.getter();
  v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    memcpy(v20, __dst, 0x112uLL);
    memcpy(v19, __src, 0x112uLL);
    return _s14CarPlayAssetUI29MeasurementLabelConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
  }
  v17 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = 0;
  if ((v17 & 1) != 0)
    goto LABEL_9;
  return v12;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO21CircularConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(double *)(a1 + 8);
  v2 = *(double *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v27 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 88);
  v20 = *(_QWORD *)(a1 + 96);
  v8 = *(double *)(a2 + 8);
  v7 = *(double *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a1 + 64);
  v25 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v21 = *(_QWORD *)(a2 + 88);
  v19 = *(_QWORD *)(a2 + 96);
  v13 = InstrumentDataIdentifier.rawValue.getter();
  v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      return 0;
  }
  if (v3 == v8
    && v2 == v7
    && (v5 == v10 && v4 == v9 || (sub_237A8840C() & 1) != 0)
    && (v6 == v12 && v27 == v11 || (sub_237A8840C() & 1) != 0)
    && (sub_237A871C4() & 1) != 0
    && (v26 == v25 && v24 == v23 || (sub_237A8840C() & 1) != 0)
    && (sub_237A871C4() & 1) != 0
    && (sub_237875DF4(v22, v21) & 1) != 0)
  {
    return sub_237875DF4(v20, v19);
  }
  return 0;
}

void _s14CarPlayAssetUI10InstrumentV10GaugeStyleO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  char *v3;
  _BYTE __dst[496];
  _BYTE __src[496];
  _BYTE v6[496];
  uint64_t v7;
  _BYTE v8[496];

  sub_237918E30(a1, __dst);
  sub_237918E30(a2, __src);
  sub_237918E30(__dst, v6);
  sub_237918E30(__src, &v7);
  sub_237918E30(__dst, v8);
  v3 = (char *)sub_237918490 + 4 * byte_237A92975[sub_237919130((uint64_t)v8)];
  __asm { BR              X10 }
}

uint64_t sub_237918490()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _BYTE v35[496];
  _BYTE v36[496];
  _BYTE v37[496];
  _BYTE v38[992];
  uint64_t v39;

  v1 = sub_23791914C((uint64_t)&v39);
  v2 = *(_BYTE *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 64);
  v17 = *(_OWORD *)(v1 + 72);
  v18 = *(_OWORD *)(v1 + 48);
  v16 = *(_OWORD *)(v1 + 88);
  sub_237918E30(v37, v35);
  if (sub_237919130((uint64_t)v35))
  {
    sub_23791A20C((uint64_t)v36, (voidsub_2378DD81C);
    sub_23791A20C((uint64_t)v37, (voidsub_2378DD81C);
    sub_23791F134((uint64_t)v38);
    v14 = 0;
  }
  else
  {
    v9 = sub_23791914C((uint64_t)v35);
    v10 = *(_BYTE *)v9;
    v11 = *(_OWORD *)(v9 + 24);
    v12 = *(_QWORD *)(v9 + 40);
    v13 = *(_QWORD *)(v9 + 64);
    v27 = v2;
    v28 = v3;
    v29 = v4;
    v30 = v5;
    v31 = v6;
    v32 = v7;
    v33 = v18;
    v34 = v8;
    *(_OWORD *)(v0 + 72) = v17;
    *(_OWORD *)(v0 + 88) = v16;
    v19 = v10;
    v20 = *(_OWORD *)(v9 + 8);
    v21 = v11;
    v22 = v12;
    v23 = *(_OWORD *)(v9 + 48);
    v24 = v13;
    v25 = *(_OWORD *)(v9 + 72);
    v26 = *(_OWORD *)(v9 + 88);
    sub_23791A20C((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2378DD81C);
    sub_23791A20C((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2378DD81C);
    sub_23791A20C((uint64_t)v36, (voidsub_2378DD81C);
    sub_23791A20C((uint64_t)v37, (voidsub_2378DD81C);
    v14 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO21CircularConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)&v27, (uint64_t)&v19);
    sub_23791F134((uint64_t)v38);
    sub_23791A20C((uint64_t)v37, (voidsub_2378DEB7C);
    sub_23791A20C((uint64_t)v36, (voidsub_2378DEB7C);
  }
  return v14 & 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV18GaugeConfigurationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v11[496];
  _BYTE v12[496];
  _BYTE __dst[496];
  _BYTE __src[496];

  sub_237918E30((void *)a1, __dst);
  v4 = *(unsigned __int8 *)(a1 + 496);
  v5 = *(_QWORD *)(a1 + 504);
  sub_237918E30((void *)a2, __src);
  v6 = *(unsigned __int8 *)(a2 + 496);
  v7 = *(_QWORD *)(a2 + 504);
  sub_237918E30(__dst, v12);
  sub_237918E30(__src, v11);
  _s14CarPlayAssetUI10InstrumentV10GaugeStyleO2eeoiySbAE_AEtFZ_0(v12, v11);
  v8 = 0;
  if ((v9 & 1) != 0 && ((v4 ^ v6) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_237875B70(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV22ConfigurableInputStateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int128 v10;
  __int128 v11;
  char v12;
  uint64_t result;
  _OWORD v14[2];
  char v15;
  _OWORD v16[2];
  char v17;

  v2 = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v9 = *(unsigned __int8 *)(a2 + 56);
  v10 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v10;
  v17 = v2;
  v11 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v11;
  v15 = v6;
  v12 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v14);
  result = 0;
  if ((v12 & 1) != 0 && v4 == v8)
    return sub_2379B7304(v3, v7) & (v5 == v9);
  return result;
}

uint64_t sub_237918A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = InstrumentDataIdentifier.rawValue.getter();
  v7 = v6;
  if (v5 == InstrumentDataIdentifier.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return 0;
  }
  return a3(v3, v4);
}

uint64_t sub_237918B28(uint64_t a1, void (*a2)(__int128 *__return_ptr, __int128 *))
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v4 = a1;
  v55 = MEMORY[0x24BEE4AF8];
  sub_2379D6310(0, v2, 0);
  v3 = v55;
  result = sub_2379FA470(v4);
  v7 = result;
  v8 = 0;
  v9 = v4 + 64;
  v34 = v4 + 88;
  v35 = v2;
  v36 = v6;
  v37 = v4 + 64;
  v38 = v4;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v4 + 32))
  {
    v12 = (unint64_t)v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v4 + 36) != v6)
      goto LABEL_26;
    v40 = v8;
    v13 = *(_QWORD *)(v4 + 56) + (v7 << 6);
    v15 = *(void **)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v16 = *(void **)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    v41 = v3;
    v18 = *(_QWORD *)(v13 + 40);
    v19 = *(_QWORD *)(v13 + 48);
    v20 = *(_BYTE *)(v13 + 56);
    v21 = *(_BYTE *)(v13 + 32);
    *(_QWORD *)&v43 = v15;
    *((_QWORD *)&v43 + 1) = v14;
    v44 = v16;
    v45 = (ValueMetadata *)v17;
    LOBYTE(v46) = v21;
    v47 = v18;
    v48 = v19;
    v49 = v20;
    sub_237870090(v15, v14, v16, v17, v21);
    swift_bridgeObjectRetain();
    a2(&v50, &v43);
    sub_2378702E0(v15, v14, v16, v17, v21);
    v3 = v41;
    swift_bridgeObjectRelease();
    v55 = v41;
    v23 = *(_QWORD *)(v41 + 16);
    v22 = *(_QWORD *)(v41 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_2379D6310(v22 > 1, v23 + 1, 1);
      v3 = v55;
    }
    v42 = v50;
    v24 = v51;
    v25 = v52;
    v26 = v53;
    v27 = v54;
    v45 = &type metadata for ImageAsset;
    v46 = &protocol witness table for ImageAsset;
    v28 = swift_allocObject();
    *(_QWORD *)&v43 = v28;
    *(_OWORD *)(v28 + 16) = v42;
    *(_QWORD *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v25;
    *(_BYTE *)(v28 + 48) = v26;
    *(_QWORD *)(v28 + 56) = v27;
    *(_QWORD *)(v3 + 16) = v23 + 1;
    result = sub_237870734(&v43, v3 + 40 * v23 + 32);
    v4 = v38;
    v10 = 1 << *(_BYTE *)(v38 + 32);
    if (v7 >= v10)
      goto LABEL_27;
    v9 = v37;
    v29 = *(_QWORD *)(v37 + 8 * v12);
    if ((v29 & (1 << v7)) == 0)
      goto LABEL_28;
    v6 = v36;
    if (*(_DWORD *)(v38 + 36) != v36)
      goto LABEL_29;
    v30 = v29 & (-2 << (v7 & 0x3F));
    if (v30)
    {
      v10 = __clz(__rbit64(v30)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v11 = v35;
    }
    else
    {
      v31 = v12 + 1;
      v32 = (unint64_t)(v10 + 63) >> 6;
      v11 = v35;
      if (v12 + 1 < v32)
      {
        v33 = *(_QWORD *)(v37 + 8 * v31);
        if (!v33)
        {
          v31 = v12 + 2;
          if (v12 + 2 >= v32)
            goto LABEL_4;
          v33 = *(_QWORD *)(v37 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v12)
            {
              v33 = *(_QWORD *)(v34 + 8 * v12++);
              if (v33)
              {
                v31 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v10 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    v8 = v40 + 1;
    v7 = v10;
    if (v40 + 1 == v11)
      return v3;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_237918E30(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x1F0uLL);
}

unint64_t sub_237918E44()
{
  unint64_t result;

  result = qword_256821540;
  if (!qword_256821540)
  {
    result = MEMORY[0x23B81FA98](&unk_237A943F0, &_s18GaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821540);
  }
  return result;
}

unint64_t sub_237918E88()
{
  unint64_t result;

  result = qword_256821548;
  if (!qword_256821548)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle, &type metadata for Instrument.GaugeStyle);
    atomic_store(result, (unint64_t *)&qword_256821548);
  }
  return result;
}

unint64_t sub_237918ECC()
{
  unint64_t result;

  result = qword_256821550;
  if (!qword_256821550)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityConfiguration, &type metadata for VisibilityConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821550);
  }
  return result;
}

unint64_t sub_237918F10()
{
  unint64_t result;

  result = qword_256821560;
  if (!qword_256821560)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle, &type metadata for Instrument.GaugeStyle);
    atomic_store(result, (unint64_t *)&qword_256821560);
  }
  return result;
}

unint64_t sub_237918F54()
{
  unint64_t result;

  result = qword_256821568;
  if (!qword_256821568)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityConfiguration, &type metadata for VisibilityConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821568);
  }
  return result;
}

uint64_t sub_237918F98(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v16 = *(_OWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 464);
  v14 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 432);
  v12 = *(_OWORD *)(a1 + 384);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_2378DD81C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    *(_QWORD *)(a1 + 480));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237919064(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v16 = *(_OWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 464);
  v14 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 432);
  v12 = *(_OWORD *)(a1 + 384);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_2378DEB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    *(_QWORD *)(a1 + 480));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237919130(uint64_t a1)
{
  if (((*(_QWORD *)(a1 + 480) >> 57) & 7u) <= 4)
    return (*(_QWORD *)(a1 + 480) >> 57) & 7;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_23791914C(uint64_t result)
{
  *(_QWORD *)(result + 480) &= 0xF1FFFFFFFFFFFFFFLL;
  return result;
}

void *sub_23791915C(const void *a1, void *a2)
{
  __swift_memcpy325_8(a2, a1);
  return a2;
}

uint64_t sub_237919198(uint64_t a1)
{
  return *(_QWORD *)(a1 + 240) >> 60;
}

uint64_t sub_2379191A4(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 240);
  sub_2378DE068(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 256));
  return a1;
}

uint64_t sub_23791923C(uint64_t result)
{
  *(_QWORD *)(result + 240) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_23791924C(const void *a1, void *a2)
{
  __swift_memcpy496_8(a2, a1);
  return a2;
}

unint64_t sub_237919288()
{
  unint64_t result;

  result = qword_256821578;
  if (!qword_256821578)
  {
    result = MEMORY[0x23B81FA98](&unk_237A943A0, &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821578);
  }
  return result;
}

uint64_t sub_2379192CC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F0B8);
    v8 = a2;
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23791932C()
{
  unint64_t result;

  result = qword_2568215C8;
  if (!qword_2568215C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94350, &_s10GaugeStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568215C8);
  }
  return result;
}

unint64_t sub_237919370()
{
  unint64_t result;

  result = qword_2568215D0;
  if (!qword_2568215D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94300, &_s10GaugeStyleO21ProgressBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568215D0);
  }
  return result;
}

unint64_t sub_2379193B4()
{
  unint64_t result;

  result = qword_2568215D8;
  if (!qword_2568215D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ProgressBarType, &type metadata for ProgressBarType);
    atomic_store(result, (unint64_t *)&qword_2568215D8);
  }
  return result;
}

unint64_t sub_2379193F8()
{
  unint64_t result;

  result = qword_2568215E0;
  if (!qword_2568215E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A942B0, &_s10GaugeStyleO26MapsMediaBlurBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568215E0);
  }
  return result;
}

unint64_t sub_23791943C()
{
  unint64_t result;

  result = qword_2568215E8;
  if (!qword_2568215E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94260, &_s10GaugeStyleO21TextElementCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568215E8);
  }
  return result;
}

unint64_t sub_237919480()
{
  unint64_t result;

  result = qword_2568215F0;
  if (!qword_2568215F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TextElementConfiguration, &type metadata for TextElementConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568215F0);
  }
  return result;
}

unint64_t sub_2379194C4()
{
  unint64_t result;

  result = qword_2568215F8;
  if (!qword_2568215F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94210, &_s10GaugeStyleO20ImageGroupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568215F8);
  }
  return result;
}

unint64_t sub_237919508()
{
  unint64_t result;

  result = qword_256821600;
  if (!qword_256821600)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration, &type metadata for ImageGroupConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821600);
  }
  return result;
}

unint64_t sub_23791954C()
{
  unint64_t result;

  result = qword_256821608;
  if (!qword_256821608)
  {
    result = MEMORY[0x23B81FA98](&unk_237A941C0, &_s10GaugeStyleO14DialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821608);
  }
  return result;
}

unint64_t sub_237919590()
{
  unint64_t result;

  result = qword_256821610;
  if (!qword_256821610)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration, &type metadata for Instrument.GaugeStyle.DialConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821610);
  }
  return result;
}

unint64_t sub_2379195D4()
{
  unint64_t result;

  result = qword_256821618;
  if (!qword_256821618)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94170, &_s10GaugeStyleO17CompassCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821618);
  }
  return result;
}

unint64_t sub_237919618()
{
  unint64_t result;

  result = qword_256821620;
  if (!qword_256821620)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94120, &_s10GaugeStyleO18CircularCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821620);
  }
  return result;
}

unint64_t sub_23791965C()
{
  unint64_t result;

  result = qword_256821628;
  if (!qword_256821628)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.CircularConfiguration, &type metadata for Instrument.GaugeStyle.CircularConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821628);
  }
  return result;
}

unint64_t sub_2379196A0()
{
  unint64_t result;

  result = qword_256821670;
  if (!qword_256821670)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ProgressBarType, &type metadata for ProgressBarType);
    atomic_store(result, (unint64_t *)&qword_256821670);
  }
  return result;
}

_QWORD *sub_2379196E4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xF000000000000007 | 0x800000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

_OWORD *sub_237919740(uint64_t a1)
{
  _OWORD *result;

  *(_QWORD *)a1 = 1;
  *(_OWORD *)(a1 + 480) = xmmword_237A94440;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 472) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  result = (_OWORD *)(a1 + 8);
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  result[22] = 0u;
  result[23] = 0u;
  result[24] = 0u;
  result[25] = 0u;
  result[26] = 0u;
  result[27] = 0u;
  result[28] = 0u;
  return result;
}

unint64_t sub_2379197BC()
{
  unint64_t result;

  result = qword_256821678;
  if (!qword_256821678)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TextElementConfiguration, &type metadata for TextElementConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821678);
  }
  return result;
}

_QWORD *sub_237919800(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xF000000000000007 | 0x600000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_23791985C()
{
  unint64_t result;

  result = qword_256821680;
  if (!qword_256821680)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration, &type metadata for ImageGroupConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821680);
  }
  return result;
}

_QWORD *sub_2379198A0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xF000000000000007 | 0x400000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_2379198FC()
{
  unint64_t result;

  result = qword_256821688;
  if (!qword_256821688)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration, &type metadata for Instrument.GaugeStyle.DialConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821688);
  }
  return result;
}

_QWORD *sub_237919940(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xF000000000000007 | 0x200000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

double sub_23791999C(_OWORD *a1)
{
  double result;

  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  result = 1.62597454e-260;
  a1[30] = xmmword_237A94440;
  return result;
}

unint64_t sub_2379199EC()
{
  unint64_t result;

  result = qword_256821690;
  if (!qword_256821690)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.CircularConfiguration, &type metadata for Instrument.GaugeStyle.CircularConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821690);
  }
  return result;
}

_QWORD *sub_237919A30(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xF000000000000007;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_237919A88()
{
  unint64_t result;

  result = qword_2568216B0;
  if (!qword_2568216B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A940D0, &_s22ConfigurableInputStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568216B0);
  }
  return result;
}

unint64_t sub_237919ACC()
{
  unint64_t result;

  result = qword_2568216C8;
  if (!qword_2568216C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.Alignment, &type metadata for Instrument.GaugeStyle.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568216C8);
  }
  return result;
}

uint64_t sub_237919B10(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568216B8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237919B84()
{
  unint64_t result;

  result = qword_2568216E0;
  if (!qword_2568216E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.Alignment, &type metadata for Instrument.GaugeStyle.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568216E0);
  }
  return result;
}

uint64_t sub_237919BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 200);
  v15 = *(_QWORD *)(a1 + 192);
  v13 = *(void **)(a1 + 208);
  v4 = *(_BYTE *)(a1 + 96);
  v5 = *(_BYTE *)(a1 + 120);
  v6 = *(_BYTE *)(a1 + 144);
  v7 = *(id *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v2, v3, v4);
  sub_23787A11C(v10, v9, v5);
  sub_23787A11C(v12, v11, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378884CC(v15, v14, v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237919CFC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 200);
  v15 = *(_QWORD *)(a1 + 192);
  v13 = *(void **)(a1 + 208);
  v5 = *(_BYTE *)(a1 + 96);
  v6 = *(_BYTE *)(a1 + 120);
  v7 = *(_BYTE *)(a1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_23787A134(v3, v4, v5);
  sub_23787A134(v10, v9, v6);
  sub_23787A134(v12, v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378886C4(v15, v14, v13);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_237919E2C()
{
  unint64_t result;

  result = qword_2568216F0;
  if (!qword_2568216F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94080, &_s31RemainingRangeTextConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568216F0);
  }
  return result;
}

unint64_t sub_237919E70()
{
  unint64_t result;

  result = qword_2568216F8;
  if (!qword_2568216F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration, &type metadata for MeasurementLabelConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568216F8);
  }
  return result;
}

unint64_t sub_237919EB4()
{
  unint64_t result;

  result = qword_256821708;
  if (!qword_256821708)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration, &type metadata for MeasurementLabelConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821708);
  }
  return result;
}

unint64_t sub_237919EF8()
{
  unint64_t result;

  result = qword_256821718;
  if (!qword_256821718)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94030, &_s11BoundsLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821718);
  }
  return result;
}

unint64_t sub_237919F3C()
{
  unint64_t result;

  result = qword_256821730;
  if (!qword_256821730)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93FE0, &_s25UnitSensitiveBoundsLabelsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821730);
  }
  return result;
}

uint64_t sub_237919F80(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821738);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237919FF4()
{
  unint64_t result;

  result = qword_256821748;
  if (!qword_256821748)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.BoundsLabel, &type metadata for Instrument.BoundsLabel);
    atomic_store(result, (unint64_t *)&qword_256821748);
  }
  return result;
}

unint64_t sub_23791A038()
{
  unint64_t result;

  result = qword_256821760;
  if (!qword_256821760)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.BoundsLabel, &type metadata for Instrument.BoundsLabel);
    atomic_store(result, (unint64_t *)&qword_256821760);
  }
  return result;
}

unint64_t sub_23791A07C()
{
  unint64_t result;

  result = qword_256821770;
  if (!qword_256821770)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93F90, &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821770);
  }
  return result;
}

uint64_t sub_23791A0C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821778);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23791A124()
{
  unint64_t result;

  result = qword_2568217A0;
  if (!qword_2568217A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93F40, &_s18UnitSensitiveLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568217A0);
  }
  return result;
}

uint64_t sub_23791A168(uint64_t a1)
{
  return sub_2379EA8A0(a1);
}

uint64_t sub_23791A170()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_23791A19C(const void *a1, void *a2)
{
  __swift_memcpy325_8(a2, a1);
  return a2;
}

uint64_t sub_23791A1D8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 248) >> 63;
}

uint64_t sub_23791A1E4(uint64_t result)
{
  *(_QWORD *)(result + 248) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_23791A1F4(uint64_t result)
{
  *(_QWORD *)(result + 240) = *(_QWORD *)(result + 240) & 0x83FFFFFFFFLL | 0x6000000000000000;
  return result;
}

uint64_t sub_23791A20C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v18 = *(_OWORD *)(a1 + 448);
  v19 = *(_OWORD *)(a1 + 464);
  v16 = *(_OWORD *)(a1 + 416);
  v17 = *(_OWORD *)(a1 + 432);
  v14 = *(_OWORD *)(a1 + 384);
  v15 = *(_OWORD *)(a1 + 400);
  v12 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 368);
  v10 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    v18,
    *((_QWORD *)&v18 + 1),
    v19,
    *((_QWORD *)&v19 + 1),
    *(_QWORD *)(a1 + 480),
    *(_QWORD *)(a1 + 488));
  return a1;
}

unint64_t sub_23791A2CC()
{
  unint64_t result;

  result = qword_2568217B0;
  if (!qword_2568217B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeConfiguration, &type metadata for Instrument.GaugeConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568217B0);
  }
  return result;
}

unint64_t sub_23791A314()
{
  unint64_t result;

  result = qword_2568217B8;
  if (!qword_2568217B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.CircularConfiguration, &type metadata for Instrument.GaugeStyle.CircularConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568217B8);
  }
  return result;
}

unint64_t sub_23791A364()
{
  unint64_t result;

  result = qword_2568217C0;
  if (!qword_2568217C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.Alignment, &type metadata for Instrument.GaugeStyle.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568217C0);
  }
  return result;
}

unint64_t sub_23791A3AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568217F8;
  if (!qword_2568217F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821800);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2568217F8);
  }
  return result;
}

unint64_t sub_23791A3FC()
{
  unint64_t result;

  result = qword_256821808;
  if (!qword_256821808)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle, &type metadata for Instrument.GaugeStyle);
    atomic_store(result, (unint64_t *)&qword_256821808);
  }
  return result;
}

unint64_t sub_23791A444()
{
  unint64_t result;

  result = qword_256821810;
  if (!qword_256821810)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.ConfigurableInputState, &type metadata for Instrument.ConfigurableInputState);
    atomic_store(result, (unint64_t *)&qword_256821810);
  }
  return result;
}

unint64_t sub_23791A48C()
{
  unint64_t result;

  result = qword_256821818;
  if (!qword_256821818)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.RemainingRangeTextConfiguration, &type metadata for Instrument.RemainingRangeTextConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821818);
  }
  return result;
}

unint64_t sub_23791A4D4()
{
  unint64_t result;

  result = qword_256821820;
  if (!qword_256821820)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.BoundsLabel, &type metadata for Instrument.BoundsLabel);
    atomic_store(result, (unint64_t *)&qword_256821820);
  }
  return result;
}

unint64_t sub_23791A51C()
{
  unint64_t result;

  result = qword_256821828;
  if (!qword_256821828)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.UnitSensitiveBoundsLabels, &type metadata for Instrument.UnitSensitiveBoundsLabels);
    atomic_store(result, (unint64_t *)&qword_256821828);
  }
  return result;
}

unint64_t sub_23791A564()
{
  unint64_t result;

  result = qword_256821830;
  if (!qword_256821830)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.UnitSensitiveFormatSpecifiers, &type metadata for Instrument.UnitSensitiveFormatSpecifiers);
    atomic_store(result, (unint64_t *)&qword_256821830);
  }
  return result;
}

unint64_t sub_23791A5AC()
{
  unint64_t result;

  result = qword_256821838;
  if (!qword_256821838)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.UnitSensitiveLabel, &type metadata for Instrument.UnitSensitiveLabel);
    atomic_store(result, (unint64_t *)&qword_256821838);
  }
  return result;
}

uint64_t _s18GaugeConfigurationVwxx(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v15 = *(_OWORD *)(a1 + 448);
  v16 = *(_OWORD *)(a1 + 464);
  v13 = *(_OWORD *)(a1 + 416);
  v14 = *(_OWORD *)(a1 + 432);
  v11 = *(_OWORD *)(a1 + 384);
  v12 = *(_OWORD *)(a1 + 400);
  v9 = *(_OWORD *)(a1 + 352);
  v10 = *(_OWORD *)(a1 + 368);
  v7 = *(_OWORD *)(a1 + 320);
  v8 = *(_OWORD *)(a1 + 336);
  v5 = *(_OWORD *)(a1 + 288);
  v6 = *(_OWORD *)(a1 + 304);
  v3 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 272);
  v2 = *(_OWORD *)(a1 + 224);
  sub_2378DEB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v2,
    *((uint64_t *)&v2 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    SBYTE8(v6),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    SBYTE8(v9),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    *(_QWORD *)(a1 + 480));
  return swift_bridgeObjectRelease();
}

uint64_t _s18GaugeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;

  v65 = *(void **)(a2 + 72);
  v66 = *(_QWORD *)(a2 + 64);
  v63 = *(_QWORD *)(a2 + 88);
  v64 = *(_QWORD *)(a2 + 80);
  v61 = *(_QWORD *)(a2 + 104);
  v62 = *(_QWORD *)(a2 + 96);
  v59 = *(_QWORD *)(a2 + 120);
  v60 = *(_QWORD *)(a2 + 112);
  v57 = *(_QWORD *)(a2 + 136);
  v58 = *(_QWORD *)(a2 + 128);
  v55 = *(_QWORD *)(a2 + 152);
  v56 = *(_QWORD *)(a2 + 144);
  v53 = *(_QWORD *)(a2 + 168);
  v54 = *(void **)(a2 + 160);
  v51 = *(_QWORD *)(a2 + 184);
  v52 = *(_QWORD *)(a2 + 176);
  v49 = *(_QWORD *)(a2 + 200);
  v50 = *(_QWORD *)(a2 + 192);
  v47 = *(void **)(a2 + 216);
  v48 = *(_QWORD *)(a2 + 208);
  v46 = *(void **)(a2 + 224);
  v45 = *(_QWORD *)(a2 + 232);
  v44 = *(_QWORD *)(a2 + 240);
  v43 = *(_QWORD *)(a2 + 248);
  v42 = *(_QWORD *)(a2 + 256);
  v41 = *(_QWORD *)(a2 + 264);
  v40 = *(_QWORD *)(a2 + 272);
  v13 = *(_QWORD *)(a2 + 280);
  v14 = *(_QWORD *)(a2 + 288);
  v15 = *(_QWORD *)(a2 + 296);
  v16 = *(_QWORD *)(a2 + 304);
  v17 = *(_QWORD *)(a2 + 312);
  v18 = *(_QWORD *)(a2 + 320);
  v19 = *(_QWORD *)(a2 + 328);
  v20 = *(_QWORD *)(a2 + 336);
  v21 = *(_QWORD *)(a2 + 344);
  v22 = *(_QWORD *)(a2 + 352);
  v23 = *(_QWORD *)(a2 + 360);
  v24 = *(_QWORD *)(a2 + 368);
  v25 = *(_QWORD *)(a2 + 376);
  v26 = *(_QWORD *)(a2 + 384);
  v27 = *(_QWORD *)(a2 + 392);
  v28 = *(_QWORD *)(a2 + 400);
  v29 = *(_QWORD *)(a2 + 408);
  v30 = *(_QWORD *)(a2 + 416);
  v31 = *(_QWORD *)(a2 + 424);
  v32 = *(_QWORD *)(a2 + 432);
  v33 = *(_QWORD *)(a2 + 440);
  v34 = *(_QWORD *)(a2 + 448);
  v35 = *(_QWORD *)(a2 + 456);
  v36 = *(_QWORD *)(a2 + 464);
  v37 = *(_QWORD *)(a2 + 472);
  v38 = *(_QWORD *)(a2 + 480);
  v39 = *(_QWORD *)(a2 + 488);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a2 + 32);
  v9 = *(void **)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_2378DD81C(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57, v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v66;
  *(_QWORD *)(a1 + 72) = v65;
  *(_QWORD *)(a1 + 80) = v64;
  *(_QWORD *)(a1 + 88) = v63;
  *(_QWORD *)(a1 + 96) = v62;
  *(_QWORD *)(a1 + 104) = v61;
  *(_QWORD *)(a1 + 112) = v60;
  *(_QWORD *)(a1 + 120) = v59;
  *(_QWORD *)(a1 + 128) = v58;
  *(_QWORD *)(a1 + 136) = v57;
  *(_QWORD *)(a1 + 144) = v56;
  *(_QWORD *)(a1 + 152) = v55;
  *(_QWORD *)(a1 + 160) = v54;
  *(_QWORD *)(a1 + 168) = v53;
  *(_QWORD *)(a1 + 176) = v52;
  *(_QWORD *)(a1 + 184) = v51;
  *(_QWORD *)(a1 + 192) = v50;
  *(_QWORD *)(a1 + 200) = v49;
  *(_QWORD *)(a1 + 208) = v48;
  *(_QWORD *)(a1 + 216) = v47;
  *(_QWORD *)(a1 + 224) = v46;
  *(_QWORD *)(a1 + 232) = v45;
  *(_QWORD *)(a1 + 240) = v44;
  *(_QWORD *)(a1 + 248) = v43;
  *(_QWORD *)(a1 + 256) = v42;
  *(_QWORD *)(a1 + 264) = v41;
  *(_QWORD *)(a1 + 272) = v40;
  *(_QWORD *)(a1 + 280) = v13;
  *(_QWORD *)(a1 + 288) = v14;
  *(_QWORD *)(a1 + 296) = v15;
  *(_QWORD *)(a1 + 304) = v16;
  *(_QWORD *)(a1 + 312) = v17;
  *(_QWORD *)(a1 + 320) = v18;
  *(_QWORD *)(a1 + 328) = v19;
  *(_QWORD *)(a1 + 336) = v20;
  *(_QWORD *)(a1 + 344) = v21;
  *(_QWORD *)(a1 + 352) = v22;
  *(_QWORD *)(a1 + 360) = v23;
  *(_QWORD *)(a1 + 368) = v24;
  *(_QWORD *)(a1 + 376) = v25;
  *(_QWORD *)(a1 + 384) = v26;
  *(_QWORD *)(a1 + 392) = v27;
  *(_QWORD *)(a1 + 400) = v28;
  *(_QWORD *)(a1 + 408) = v29;
  *(_QWORD *)(a1 + 416) = v30;
  *(_QWORD *)(a1 + 424) = v31;
  *(_QWORD *)(a1 + 432) = v32;
  *(_QWORD *)(a1 + 440) = v33;
  *(_QWORD *)(a1 + 448) = v34;
  *(_QWORD *)(a1 + 456) = v35;
  *(_QWORD *)(a1 + 464) = v36;
  *(_QWORD *)(a1 + 472) = v37;
  *(_QWORD *)(a1 + 480) = v38;
  *(_QWORD *)(a1 + 488) = v39;
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18GaugeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;

  v100 = *(_QWORD *)(a2 + 8);
  v101 = *(_QWORD *)a2;
  v98 = *(void **)(a2 + 24);
  v99 = *(void **)(a2 + 16);
  v96 = *(void **)(a2 + 40);
  v97 = *(void **)(a2 + 32);
  v94 = *(_QWORD *)(a2 + 56);
  v95 = *(_QWORD *)(a2 + 48);
  v92 = *(void **)(a2 + 72);
  v93 = *(_QWORD *)(a2 + 64);
  v90 = *(_QWORD *)(a2 + 88);
  v91 = *(_QWORD *)(a2 + 80);
  v88 = *(_QWORD *)(a2 + 104);
  v89 = *(_QWORD *)(a2 + 96);
  v86 = *(_QWORD *)(a2 + 120);
  v87 = *(_QWORD *)(a2 + 112);
  v84 = *(_QWORD *)(a2 + 136);
  v85 = *(_QWORD *)(a2 + 128);
  v83 = *(_QWORD *)(a2 + 144);
  v82 = *(_QWORD *)(a2 + 152);
  v81 = *(void **)(a2 + 160);
  v80 = *(_QWORD *)(a2 + 168);
  v79 = *(_QWORD *)(a2 + 176);
  v78 = *(_QWORD *)(a2 + 184);
  v77 = *(_QWORD *)(a2 + 192);
  v76 = *(_QWORD *)(a2 + 200);
  v75 = *(_QWORD *)(a2 + 208);
  v74 = *(void **)(a2 + 216);
  v73 = *(void **)(a2 + 224);
  v72 = *(_QWORD *)(a2 + 232);
  v71 = *(_QWORD *)(a2 + 240);
  v70 = *(_QWORD *)(a2 + 248);
  v69 = *(_QWORD *)(a2 + 256);
  v68 = *(_QWORD *)(a2 + 264);
  v67 = *(_QWORD *)(a2 + 272);
  v5 = *(_QWORD *)(a2 + 288);
  v4 = *(_QWORD *)(a2 + 296);
  v7 = *(_QWORD *)(a2 + 304);
  v6 = *(_QWORD *)(a2 + 312);
  v9 = *(_QWORD *)(a2 + 320);
  v8 = *(_QWORD *)(a2 + 328);
  v11 = *(_QWORD *)(a2 + 336);
  v10 = *(_QWORD *)(a2 + 344);
  v48 = *(_QWORD *)(a2 + 280);
  v49 = *(_QWORD *)(a2 + 352);
  v50 = *(_QWORD *)(a2 + 360);
  v51 = *(_QWORD *)(a2 + 368);
  v52 = *(_QWORD *)(a2 + 376);
  v53 = *(_QWORD *)(a2 + 384);
  v54 = *(_QWORD *)(a2 + 392);
  v55 = *(_QWORD *)(a2 + 400);
  v56 = *(_QWORD *)(a2 + 408);
  v57 = *(_QWORD *)(a2 + 416);
  v58 = *(_QWORD *)(a2 + 424);
  v59 = *(_QWORD *)(a2 + 432);
  v60 = *(_QWORD *)(a2 + 440);
  v61 = *(_QWORD *)(a2 + 448);
  v62 = *(_QWORD *)(a2 + 456);
  v63 = *(_QWORD *)(a2 + 464);
  v64 = *(_QWORD *)(a2 + 472);
  v65 = *(_QWORD *)(a2 + 480);
  v66 = *(_QWORD *)(a2 + 488);
  sub_2378DD81C(*(_QWORD *)a2, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85, v84, v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v48,
    v5,
    v4,
    v7,
    v6,
    v9,
    v8,
    v11,
    v10,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    *(_QWORD *)(a2 + 416),
    *(_QWORD *)(a2 + 424),
    *(_OWORD *)(a2 + 432),
    *(_QWORD *)(a2 + 440),
    *(_QWORD *)(a2 + 448),
    *(_QWORD *)(a2 + 456),
    *(_QWORD *)(a2 + 464),
    *(_QWORD *)(a2 + 472),
    *(_QWORD *)(a2 + 480));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v101;
  *(_QWORD *)(a1 + 8) = v100;
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v99;
  *(_QWORD *)(a1 + 24) = v98;
  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v97;
  *(_QWORD *)(a1 + 40) = v96;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v95;
  *(_QWORD *)(a1 + 56) = v94;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v93;
  *(_QWORD *)(a1 + 72) = v92;
  *(_QWORD *)(a1 + 80) = v91;
  *(_QWORD *)(a1 + 88) = v90;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v89;
  *(_QWORD *)(a1 + 104) = v88;
  *(_QWORD *)(a1 + 112) = v87;
  *(_QWORD *)(a1 + 120) = v86;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v85;
  *(_QWORD *)(a1 + 136) = v84;
  *(_QWORD *)(a1 + 144) = v83;
  *(_QWORD *)(a1 + 152) = v82;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v81;
  *(_QWORD *)(a1 + 168) = v80;
  *(_QWORD *)(a1 + 176) = v79;
  *(_QWORD *)(a1 + 184) = v78;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v77;
  *(_QWORD *)(a1 + 200) = v76;
  *(_QWORD *)(a1 + 208) = v75;
  *(_QWORD *)(a1 + 216) = v74;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v73;
  *(_QWORD *)(a1 + 232) = v72;
  *(_QWORD *)(a1 + 240) = v71;
  *(_QWORD *)(a1 + 248) = v70;
  v32 = *(_OWORD *)(a1 + 256);
  v33 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 256) = v69;
  *(_QWORD *)(a1 + 264) = v68;
  *(_QWORD *)(a1 + 272) = v67;
  v34 = *(_OWORD *)(a1 + 288);
  v35 = *(_OWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 280) = v48;
  *(_QWORD *)(a1 + 288) = v5;
  *(_QWORD *)(a1 + 296) = v4;
  *(_QWORD *)(a1 + 304) = v7;
  v36 = *(_OWORD *)(a1 + 320);
  v37 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 312) = v6;
  *(_QWORD *)(a1 + 320) = v9;
  *(_QWORD *)(a1 + 328) = v8;
  *(_QWORD *)(a1 + 336) = v11;
  v38 = *(_OWORD *)(a1 + 352);
  v39 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 344) = v10;
  *(_QWORD *)(a1 + 352) = v49;
  *(_QWORD *)(a1 + 360) = v50;
  *(_QWORD *)(a1 + 368) = v51;
  *(_QWORD *)(a1 + 376) = v52;
  v40 = *(_OWORD *)(a1 + 384);
  v41 = *(_OWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 384) = v53;
  *(_QWORD *)(a1 + 392) = v54;
  *(_QWORD *)(a1 + 400) = v55;
  *(_QWORD *)(a1 + 408) = v56;
  v42 = *(_OWORD *)(a1 + 416);
  v43 = *(_OWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v57;
  *(_QWORD *)(a1 + 424) = v58;
  *(_QWORD *)(a1 + 432) = v59;
  *(_QWORD *)(a1 + 440) = v60;
  v44 = *(_OWORD *)(a1 + 448);
  v45 = *(_OWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 448) = v61;
  *(_QWORD *)(a1 + 456) = v62;
  *(_QWORD *)(a1 + 464) = v63;
  *(_QWORD *)(a1 + 472) = v64;
  v46 = *(_QWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 480) = v65;
  *(_QWORD *)(a1 + 488) = v66;
  sub_2378DEB7C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((void **)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    SBYTE8(v35),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy512_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x200uLL);
}

uint64_t _s18GaugeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  unint64_t v53;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 240);
  v24 = *(_OWORD *)(a1 + 256);
  v25 = *(_OWORD *)(a1 + 272);
  v26 = *(_OWORD *)(a1 + 288);
  v27 = *(_OWORD *)(a1 + 304);
  v28 = *(_OWORD *)(a1 + 320);
  v29 = *(_OWORD *)(a1 + 336);
  v30 = *(_OWORD *)(a1 + 352);
  v31 = *(_OWORD *)(a1 + 368);
  v32 = *(_OWORD *)(a1 + 384);
  v33 = *(_OWORD *)(a1 + 400);
  v34 = *(_OWORD *)(a1 + 416);
  v35 = *(_OWORD *)(a1 + 432);
  v36 = *(_OWORD *)(a1 + 448);
  v37 = *(_OWORD *)(a1 + 464);
  v38 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v38;
  v39 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v39;
  v40 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v40;
  v41 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v41;
  v42 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v42;
  v43 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v43;
  v44 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v44;
  v45 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v45;
  v46 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v46;
  v47 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v47;
  v48 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v48;
  v49 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v49;
  v50 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v50;
  v51 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v51;
  v52 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v52;
  v53 = *(_QWORD *)(a1 + 480);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  sub_2378DEB7C(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    SBYTE8(v27),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v53);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18GaugeConfigurationVwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 512))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 336) >> 3;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double _s18GaugeConfigurationVwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 504) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 512) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 336) = 8 * -a2;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(_QWORD *)(a1 + 488) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 512) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeConfiguration()
{
  return &type metadata for Instrument.GaugeConfiguration;
}

uint64_t _s10GaugeStyleOwxx(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v16 = *(_OWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 464);
  v14 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 432);
  v12 = *(_OWORD *)(a1 + 384);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v2 = *(_OWORD *)(a1 + 224);
  v3 = *(_OWORD *)(a1 + 240);
  return sub_2378DEB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(void **)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           *(_QWORD *)(a1 + 208),
           *(void **)(a1 + 216),
           (void *)v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           SBYTE8(v7),
           v8,
           *((uint64_t *)&v8 + 1),
           v9,
           *((uint64_t *)&v9 + 1),
           v10,
           SBYTE8(v10),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           SBYTE8(v13),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           SBYTE8(v16),
           v17,
           *((uint64_t *)&v17 + 1),
           *(_QWORD *)(a1 + 480));
}

uint64_t *_s10GaugeStyleOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;

  v64 = (void *)a2[9];
  v65 = a2[8];
  v62 = a2[11];
  v63 = a2[10];
  v60 = a2[13];
  v61 = a2[12];
  v58 = a2[15];
  v59 = a2[14];
  v56 = a2[17];
  v57 = a2[16];
  v54 = a2[19];
  v55 = a2[18];
  v52 = a2[21];
  v53 = (void *)a2[20];
  v50 = a2[23];
  v51 = a2[22];
  v48 = a2[25];
  v49 = a2[24];
  v46 = (void *)a2[27];
  v47 = a2[26];
  v45 = (void *)a2[28];
  v44 = a2[29];
  v43 = a2[30];
  v42 = a2[31];
  v41 = a2[32];
  v40 = a2[33];
  v13 = a2[34];
  v14 = a2[35];
  v15 = a2[36];
  v16 = a2[37];
  v17 = a2[38];
  v18 = a2[39];
  v19 = a2[40];
  v20 = a2[41];
  v3 = a2[43];
  v21 = a2[42];
  v22 = a2[44];
  v23 = a2[45];
  v24 = a2[46];
  v25 = a2[47];
  v26 = a2[48];
  v27 = a2[49];
  v28 = a2[50];
  v29 = a2[51];
  v30 = a2[52];
  v31 = a2[53];
  v32 = a2[54];
  v33 = a2[55];
  v34 = a2[56];
  v35 = a2[57];
  v36 = a2[58];
  v37 = a2[59];
  v38 = a2[60];
  v39 = a2[61];
  v4 = *a2;
  v5 = a2[1];
  v6 = (void *)a2[2];
  v7 = (void *)a2[3];
  v8 = (void *)a2[4];
  v9 = (void *)a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_2378DD81C(*a2, v5, v6, v7, v8, v9, v10, v11, v65, v64, v63, v62, v61, v60, v59, v58, v57, v56, v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v3,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = (uint64_t)v7;
  a1[4] = (uint64_t)v8;
  a1[5] = (uint64_t)v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v65;
  a1[9] = (uint64_t)v64;
  a1[10] = v63;
  a1[11] = v62;
  a1[12] = v61;
  a1[13] = v60;
  a1[14] = v59;
  a1[15] = v58;
  a1[16] = v57;
  a1[17] = v56;
  a1[18] = v55;
  a1[19] = v54;
  a1[20] = (uint64_t)v53;
  a1[21] = v52;
  a1[22] = v51;
  a1[23] = v50;
  a1[24] = v49;
  a1[25] = v48;
  a1[26] = v47;
  a1[27] = (uint64_t)v46;
  a1[28] = (uint64_t)v45;
  a1[29] = v44;
  a1[30] = v43;
  a1[31] = v42;
  a1[32] = v41;
  a1[33] = v40;
  a1[34] = v13;
  a1[35] = v14;
  a1[36] = v15;
  a1[37] = v16;
  a1[38] = v17;
  a1[39] = v18;
  a1[40] = v19;
  a1[41] = v20;
  a1[42] = v21;
  a1[43] = v3;
  a1[44] = v22;
  a1[45] = v23;
  a1[46] = v24;
  a1[47] = v25;
  a1[48] = v26;
  a1[49] = v27;
  a1[50] = v28;
  a1[51] = v29;
  a1[52] = v30;
  a1[53] = v31;
  a1[54] = v32;
  a1[55] = v33;
  a1[56] = v34;
  a1[57] = v35;
  a1[58] = v36;
  a1[59] = v37;
  a1[60] = v38;
  a1[61] = v39;
  return a1;
}

uint64_t _s10GaugeStyleOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;

  v99 = *a2;
  v100 = a2[1];
  v97 = (void *)a2[3];
  v98 = (void *)a2[2];
  v95 = (void *)a2[5];
  v96 = (void *)a2[4];
  v93 = a2[7];
  v94 = a2[6];
  v91 = (void *)a2[9];
  v92 = a2[8];
  v89 = a2[11];
  v90 = a2[10];
  v87 = a2[13];
  v88 = a2[12];
  v85 = a2[15];
  v86 = a2[14];
  v83 = a2[17];
  v84 = a2[16];
  v82 = a2[18];
  v81 = a2[19];
  v80 = (void *)a2[20];
  v79 = a2[21];
  v78 = a2[22];
  v77 = a2[23];
  v76 = a2[24];
  v75 = a2[25];
  v74 = a2[26];
  v73 = (void *)a2[27];
  v72 = (void *)a2[28];
  v71 = a2[29];
  v70 = a2[30];
  v69 = a2[31];
  v68 = a2[32];
  v67 = a2[33];
  v4 = a2[35];
  v3 = a2[36];
  v6 = a2[37];
  v5 = a2[38];
  v8 = a2[39];
  v7 = a2[40];
  v10 = a2[41];
  v9 = a2[42];
  v11 = a2[43];
  v48 = a2[34];
  v49 = a2[44];
  v50 = a2[45];
  v51 = a2[46];
  v52 = a2[47];
  v53 = a2[48];
  v54 = a2[49];
  v55 = a2[50];
  v56 = a2[51];
  v57 = a2[52];
  v58 = a2[53];
  v59 = a2[54];
  v60 = a2[55];
  v61 = a2[56];
  v62 = a2[57];
  v63 = a2[58];
  v64 = a2[59];
  v65 = a2[60];
  v66 = a2[61];
  sub_2378DD81C(*a2, v100, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85, v84, v83, v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v48,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v49,
    v50,
    v51,
    v52,
    *((_OWORD *)a2 + 24),
    v54,
    v55,
    v56,
    v57,
    v58,
    *((_OWORD *)a2 + 27),
    v60,
    v61,
    v62,
    v63,
    v64,
    v65);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v99;
  *(_QWORD *)(a1 + 8) = v100;
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v98;
  *(_QWORD *)(a1 + 24) = v97;
  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v96;
  *(_QWORD *)(a1 + 40) = v95;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v94;
  *(_QWORD *)(a1 + 56) = v93;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v92;
  *(_QWORD *)(a1 + 72) = v91;
  *(_QWORD *)(a1 + 80) = v90;
  *(_QWORD *)(a1 + 88) = v89;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v88;
  *(_QWORD *)(a1 + 104) = v87;
  *(_QWORD *)(a1 + 112) = v86;
  *(_QWORD *)(a1 + 120) = v85;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v84;
  *(_QWORD *)(a1 + 136) = v83;
  *(_QWORD *)(a1 + 144) = v82;
  *(_QWORD *)(a1 + 152) = v81;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v80;
  *(_QWORD *)(a1 + 168) = v79;
  *(_QWORD *)(a1 + 176) = v78;
  *(_QWORD *)(a1 + 184) = v77;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v76;
  *(_QWORD *)(a1 + 200) = v75;
  *(_QWORD *)(a1 + 208) = v74;
  *(_QWORD *)(a1 + 216) = v73;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v72;
  *(_QWORD *)(a1 + 232) = v71;
  *(_QWORD *)(a1 + 240) = v70;
  *(_QWORD *)(a1 + 248) = v69;
  v32 = *(_OWORD *)(a1 + 256);
  v33 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 256) = v68;
  *(_QWORD *)(a1 + 264) = v67;
  *(_QWORD *)(a1 + 272) = v48;
  *(_QWORD *)(a1 + 280) = v4;
  v34 = *(_OWORD *)(a1 + 288);
  v35 = *(_OWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 288) = v3;
  *(_QWORD *)(a1 + 296) = v6;
  *(_QWORD *)(a1 + 304) = v5;
  *(_QWORD *)(a1 + 312) = v8;
  v36 = *(_OWORD *)(a1 + 320);
  v37 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v7;
  *(_QWORD *)(a1 + 328) = v10;
  *(_QWORD *)(a1 + 336) = v9;
  *(_QWORD *)(a1 + 344) = v11;
  v38 = *(_OWORD *)(a1 + 352);
  v39 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 352) = v49;
  *(_QWORD *)(a1 + 360) = v50;
  *(_QWORD *)(a1 + 368) = v51;
  *(_QWORD *)(a1 + 376) = v52;
  v40 = *(_OWORD *)(a1 + 384);
  v41 = *(_OWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 384) = v53;
  *(_QWORD *)(a1 + 392) = v54;
  *(_QWORD *)(a1 + 400) = v55;
  *(_QWORD *)(a1 + 408) = v56;
  v42 = *(_OWORD *)(a1 + 416);
  v43 = *(_OWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v57;
  *(_QWORD *)(a1 + 424) = v58;
  *(_QWORD *)(a1 + 432) = v59;
  *(_QWORD *)(a1 + 440) = v60;
  v44 = *(_OWORD *)(a1 + 448);
  v45 = *(_OWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 448) = v61;
  *(_QWORD *)(a1 + 456) = v62;
  *(_QWORD *)(a1 + 464) = v63;
  *(_QWORD *)(a1 + 472) = v64;
  v46 = *(_QWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 480) = v65;
  *(_QWORD *)(a1 + 488) = v66;
  sub_2378DEB7C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((void **)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    SBYTE8(v35),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  return a1;
}

uint64_t _s10GaugeStyleOwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  unint64_t v53;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 240);
  v24 = *(_OWORD *)(a1 + 256);
  v25 = *(_OWORD *)(a1 + 272);
  v26 = *(_OWORD *)(a1 + 288);
  v27 = *(_OWORD *)(a1 + 304);
  v28 = *(_OWORD *)(a1 + 320);
  v29 = *(_OWORD *)(a1 + 336);
  v30 = *(_OWORD *)(a1 + 352);
  v31 = *(_OWORD *)(a1 + 368);
  v32 = *(_OWORD *)(a1 + 384);
  v33 = *(_OWORD *)(a1 + 400);
  v34 = *(_OWORD *)(a1 + 416);
  v35 = *(_OWORD *)(a1 + 432);
  v36 = *(_OWORD *)(a1 + 448);
  v37 = *(_OWORD *)(a1 + 464);
  v38 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v38;
  v39 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v39;
  v40 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v40;
  v41 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v41;
  v42 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v42;
  v43 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v43;
  v44 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v44;
  v45 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v45;
  v46 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v46;
  v47 = a2[19];
  *(_OWORD *)(a1 + 288) = a2[18];
  *(_OWORD *)(a1 + 304) = v47;
  v48 = a2[21];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v48;
  v49 = a2[23];
  *(_OWORD *)(a1 + 352) = a2[22];
  *(_OWORD *)(a1 + 368) = v49;
  v50 = a2[25];
  *(_OWORD *)(a1 + 384) = a2[24];
  *(_OWORD *)(a1 + 400) = v50;
  v51 = a2[27];
  *(_OWORD *)(a1 + 416) = a2[26];
  *(_OWORD *)(a1 + 432) = v51;
  v52 = a2[29];
  *(_OWORD *)(a1 + 448) = a2[28];
  *(_OWORD *)(a1 + 464) = v52;
  v53 = *(_QWORD *)(a1 + 480);
  *(_OWORD *)(a1 + 480) = a2[30];
  sub_2378DEB7C(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    SBYTE8(v27),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v53);
  return a1;
}

uint64_t _s10GaugeStyleOwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 496))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 336) >> 3;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double _s10GaugeStyleOwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 488) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 496) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 336) = 8 * -a2;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(_QWORD *)(a1 + 488) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 496) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23791C0D0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (a2 < 5)
  {
    v2 = *(_QWORD *)(result + 360) & 7;
    v3 = *(_QWORD *)(result + 384) & 7;
    v4 = *(_QWORD *)(result + 408) & 7;
    v5 = *(_QWORD *)(result + 432) & 7;
    v6 = *(_QWORD *)(result + 456) & 7;
    v7 = *(_QWORD *)(result + 480) & 0xF000000000000007 | (a2 << 57);
    *(_QWORD *)(result + 336) &= 7uLL;
    *(_QWORD *)(result + 360) = v2;
    *(_QWORD *)(result + 384) = v3;
    *(_QWORD *)(result + 408) = v4;
    *(_QWORD *)(result + 432) = v5;
    *(_QWORD *)(result + 456) = v6;
    *(_QWORD *)(result + 480) = v7;
  }
  else
  {
    *(_QWORD *)result = (a2 - 5);
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_QWORD *)(result + 472) = 0;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 480) = xmmword_237A94440;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle()
{
  return &type metadata for Instrument.GaugeStyle;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.CircularConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.CircularConfiguration;
}

uint64_t _s10GaugeStyleO9AlignmentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23791C57C + 4 * byte_237A92983[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23791C5B0 + 4 * byte_237A9297E[v4]))();
}

uint64_t sub_23791C5B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791C5B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23791C5C0);
  return result;
}

uint64_t sub_23791C5CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23791C5D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23791C5D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791C5E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.Alignment()
{
  return &type metadata for Instrument.GaugeStyle.Alignment;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.Alignment.DefaultAlignment()
{
  return &type metadata for Instrument.GaugeStyle.Alignment.DefaultAlignment;
}

uint64_t _s22ConfigurableInputStateVwxx(uint64_t a1)
{
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t _s22ConfigurableInputStateVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22ConfigurableInputStateVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22ConfigurableInputStateVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v5, v6, v7, v8, v10);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s22ConfigurableInputStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22ConfigurableInputStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.ConfigurableInputState()
{
  return &type metadata for Instrument.ConfigurableInputState;
}

uint64_t _s31RemainingRangeTextConfigurationVwxx(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  sub_23787A134(*(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_23787A134(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 216);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s31RemainingRangeTextConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __int128 v19;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_BYTE *)(a2 + 104);
  v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v7, v8, v9);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v9;
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  LOBYTE(v6) = *(_BYTE *)(a2 + 128);
  sub_23787A11C(v11, v12, v6);
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = v6;
  v13 = *(_QWORD *)(a2 + 136);
  v14 = *(_QWORD *)(a2 + 144);
  LOBYTE(v6) = *(_BYTE *)(a2 + 152);
  sub_23787A11C(v13, v14, v6);
  *(_QWORD *)(a1 + 136) = v13;
  *(_QWORD *)(a1 + 144) = v14;
  *(_BYTE *)(a1 + 152) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v16 = *(void **)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v16;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
    v17 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = v17;
    v18 = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v19;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s31RemainingRangeTextConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _OWORD *v25;
  __int128 *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_BYTE *)(a2 + 104);
  sub_23787A11C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v12 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v9;
  sub_23787A134(v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a2 + 120);
  v15 = *(_BYTE *)(a2 + 128);
  sub_23787A11C(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v14;
  v18 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v15;
  sub_23787A134(v16, v17, v18);
  v19 = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 144);
  v21 = *(_BYTE *)(a2 + 152);
  sub_23787A11C(v19, v20, v21);
  v22 = *(_QWORD *)(a1 + 136);
  v23 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v20;
  v24 = *(_BYTE *)(a1 + 152);
  *(_BYTE *)(a1 + 152) = v21;
  sub_23787A134(v22, v23, v24);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (_OWORD *)(a1 + 200);
  v26 = (__int128 *)(a2 + 200);
  v27 = *(void **)(a1 + 216);
  v28 = *(_QWORD *)(a2 + 216);
  if (v27)
  {
    if (v28)
    {
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      v29 = *(void **)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v29;
      v30 = v29;

      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_237889B98(a1 + 200);
      v34 = *(_OWORD *)(a2 + 216);
      v33 = *(_OWORD *)(a2 + 232);
      v35 = *v26;
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v34;
      *(_OWORD *)(a1 + 232) = v33;
      *v25 = v35;
    }
  }
  else if (v28)
  {
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v31 = *(void **)(a2 + 216);
    *(_QWORD *)(a1 + 216) = v31;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    v32 = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *v26;
    v37 = *(_OWORD *)(a2 + 216);
    v38 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 232) = v38;
    *v25 = v36;
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  v39 = *(_DWORD *)(a2 + 276);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  *(_DWORD *)(a1 + 276) = v39;
  *(_BYTE *)(a1 + 281) = *(_BYTE *)(a2 + 281);
  return a1;
}

void *__swift_memcpy282_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x11AuLL);
}

uint64_t _s31RemainingRangeTextConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v10 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v7;
  sub_23787A134(v8, v9, v10);
  v11 = *(_BYTE *)(a2 + 128);
  v12 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v14 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v11;
  sub_23787A134(v12, v13, v14);
  v15 = *(_BYTE *)(a2 + 152);
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v18 = *(_BYTE *)(a1 + 152);
  *(_BYTE *)(a1 + 152) = v15;
  sub_23787A134(v16, v17, v18);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v19 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  v20 = *(void **)(a1 + 216);
  if (!v20)
    goto LABEL_5;
  v21 = *(_QWORD *)(a2 + 216);
  if (!v21)
  {
    sub_237889B98(a1 + 200);
LABEL_5:
    v23 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v23;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v21;

  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  v22 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  return a1;
}

uint64_t _s31RemainingRangeTextConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 282))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s31RemainingRangeTextConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 282) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 282) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.RemainingRangeTextConfiguration()
{
  return &type metadata for Instrument.RemainingRangeTextConfiguration;
}

ValueMetadata *type metadata accessor for Instrument.BoundsLabel()
{
  return &type metadata for Instrument.BoundsLabel;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveBoundsLabels()
{
  return &type metadata for Instrument.UnitSensitiveBoundsLabels;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveFormatSpecifiers()
{
  return &type metadata for Instrument.UnitSensitiveFormatSpecifiers;
}

uint64_t _s18UnitSensitiveLabelVwCP(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19StateSensitiveImageV11StateImagesVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18UnitSensitiveLabelVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveLabel()
{
  return &type metadata for Instrument.UnitSensitiveLabel;
}

ValueMetadata *_s18UnitSensitiveLabelV10CodingKeysOMa()
{
  return &_s18UnitSensitiveLabelV10CodingKeysON;
}

ValueMetadata *_s29UnitSensitiveFormatSpecifiersV10CodingKeysOMa()
{
  return &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON;
}

ValueMetadata *_s25UnitSensitiveBoundsLabelsV10CodingKeysOMa()
{
  return &_s25UnitSensitiveBoundsLabelsV10CodingKeysON;
}

uint64_t _s18UnitSensitiveLabelV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23791D1FC + 4 * byte_237A9298D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23791D230 + 4 * byte_237A92988[v4]))();
}

uint64_t sub_23791D230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23791D240);
  return result;
}

uint64_t sub_23791D24C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23791D254);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23791D258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11BoundsLabelV10CodingKeysOMa()
{
  return &_s11BoundsLabelV10CodingKeysON;
}

ValueMetadata *_s31RemainingRangeTextConfigurationV10CodingKeysOMa()
{
  return &_s31RemainingRangeTextConfigurationV10CodingKeysON;
}

ValueMetadata *_s22ConfigurableInputStateV10CodingKeysOMa()
{
  return &_s22ConfigurableInputStateV10CodingKeysON;
}

uint64_t _s10GaugeStyleO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23791D2EC + 4 * byte_237A92997[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23791D320 + 4 * byte_237A92992[v4]))();
}

uint64_t sub_23791D320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23791D330);
  return result;
}

uint64_t sub_23791D33C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23791D344);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23791D348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10GaugeStyleO10CodingKeysOMa()
{
  return &_s10GaugeStyleO10CodingKeysON;
}

ValueMetadata *_s10GaugeStyleO18CircularCodingKeysOMa()
{
  return &_s10GaugeStyleO18CircularCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO17CompassCodingKeysOMa()
{
  return &_s10GaugeStyleO17CompassCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO14DialCodingKeysOMa()
{
  return &_s10GaugeStyleO14DialCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO20ImageGroupCodingKeysOMa()
{
  return &_s10GaugeStyleO20ImageGroupCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO21TextElementCodingKeysOMa()
{
  return &_s10GaugeStyleO21TextElementCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO26MapsMediaBlurBarCodingKeysOMa()
{
  return &_s10GaugeStyleO26MapsMediaBlurBarCodingKeysON;
}

uint64_t _s10GaugeStyleO18CircularCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23791D410 + 4 * byte_237A9299C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23791D430 + 4 * byte_237A929A1[v4]))();
}

_BYTE *sub_23791D410(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23791D430(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23791D438(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23791D440(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23791D448(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23791D450(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10GaugeStyleO21ProgressBarCodingKeysOMa()
{
  return &_s10GaugeStyleO21ProgressBarCodingKeysON;
}

uint64_t _s10GaugeStyleO21CircularConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10GaugeStyleO21CircularConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23791D548 + 4 * byte_237A929AB[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23791D57C + 4 * byte_237A929A6[v4]))();
}

uint64_t sub_23791D57C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D584(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23791D58CLL);
  return result;
}

uint64_t sub_23791D598(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23791D5A0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23791D5A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D5AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10GaugeStyleO21CircularConfigurationV10CodingKeysOMa()
{
  return &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON;
}

uint64_t _s31RemainingRangeTextConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23791D614 + 4 * byte_237A929B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23791D648 + 4 * byte_237A929B0[v4]))();
}

uint64_t sub_23791D648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23791D658);
  return result;
}

uint64_t sub_23791D664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23791D66CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23791D670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23791D678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18GaugeConfigurationV10CodingKeysOMa()
{
  return &_s18GaugeConfigurationV10CodingKeysON;
}

unint64_t sub_23791D698()
{
  unint64_t result;

  result = qword_256821840;
  if (!qword_256821840)
  {
    result = MEMORY[0x23B81FA98](&unk_237A934E8, &_s18GaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821840);
  }
  return result;
}

unint64_t sub_23791D6E0()
{
  unint64_t result;

  result = qword_256821848;
  if (!qword_256821848)
  {
    result = MEMORY[0x23B81FA98](&unk_237A935A0, &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821848);
  }
  return result;
}

unint64_t sub_23791D728()
{
  unint64_t result;

  result = qword_256821850;
  if (!qword_256821850)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93658, &_s10GaugeStyleO21ProgressBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821850);
  }
  return result;
}

unint64_t sub_23791D770()
{
  unint64_t result;

  result = qword_256821858;
  if (!qword_256821858)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93760, &_s10GaugeStyleO21TextElementCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821858);
  }
  return result;
}

unint64_t sub_23791D7B8()
{
  unint64_t result;

  result = qword_256821860;
  if (!qword_256821860)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93818, &_s10GaugeStyleO20ImageGroupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821860);
  }
  return result;
}

unint64_t sub_23791D800()
{
  unint64_t result;

  result = qword_256821868;
  if (!qword_256821868)
  {
    result = MEMORY[0x23B81FA98](&unk_237A938D0, &_s10GaugeStyleO14DialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821868);
  }
  return result;
}

unint64_t sub_23791D848()
{
  unint64_t result;

  result = qword_256821870;
  if (!qword_256821870)
  {
    result = MEMORY[0x23B81FA98](&unk_237A939D8, &_s10GaugeStyleO18CircularCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821870);
  }
  return result;
}

unint64_t sub_23791D890()
{
  unint64_t result;

  result = qword_256821878;
  if (!qword_256821878)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93A90, &_s10GaugeStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821878);
  }
  return result;
}

unint64_t sub_23791D8D8()
{
  unint64_t result;

  result = qword_256821880;
  if (!qword_256821880)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93B80, &_s22ConfigurableInputStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821880);
  }
  return result;
}

unint64_t sub_23791D920()
{
  unint64_t result;

  result = qword_256821888;
  if (!qword_256821888)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93C38, &_s31RemainingRangeTextConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821888);
  }
  return result;
}

unint64_t sub_23791D968()
{
  unint64_t result;

  result = qword_256821890;
  if (!qword_256821890)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93CF0, &_s11BoundsLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821890);
  }
  return result;
}

unint64_t sub_23791D9B0()
{
  unint64_t result;

  result = qword_256821898;
  if (!qword_256821898)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93DA8, &_s25UnitSensitiveBoundsLabelsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821898);
  }
  return result;
}

unint64_t sub_23791D9F8()
{
  unint64_t result;

  result = qword_2568218A0;
  if (!qword_2568218A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93E60, &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218A0);
  }
  return result;
}

unint64_t sub_23791DA40()
{
  unint64_t result;

  result = qword_2568218A8;
  if (!qword_2568218A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93F18, &_s18UnitSensitiveLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218A8);
  }
  return result;
}

unint64_t sub_23791DA88()
{
  unint64_t result;

  result = qword_2568218B0;
  if (!qword_2568218B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93E88, &_s18UnitSensitiveLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218B0);
  }
  return result;
}

unint64_t sub_23791DAD0()
{
  unint64_t result;

  result = qword_2568218B8;
  if (!qword_2568218B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93EB0, &_s18UnitSensitiveLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218B8);
  }
  return result;
}

unint64_t sub_23791DB18()
{
  unint64_t result;

  result = qword_2568218C0;
  if (!qword_2568218C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93DD0, &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218C0);
  }
  return result;
}

unint64_t sub_23791DB60()
{
  unint64_t result;

  result = qword_2568218C8;
  if (!qword_2568218C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93DF8, &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218C8);
  }
  return result;
}

unint64_t sub_23791DBA8()
{
  unint64_t result;

  result = qword_2568218D0;
  if (!qword_2568218D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93D18, &_s25UnitSensitiveBoundsLabelsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218D0);
  }
  return result;
}

unint64_t sub_23791DBF0()
{
  unint64_t result;

  result = qword_2568218D8;
  if (!qword_2568218D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93D40, &_s25UnitSensitiveBoundsLabelsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218D8);
  }
  return result;
}

unint64_t sub_23791DC38()
{
  unint64_t result;

  result = qword_2568218E0;
  if (!qword_2568218E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93C60, &_s11BoundsLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218E0);
  }
  return result;
}

unint64_t sub_23791DC80()
{
  unint64_t result;

  result = qword_2568218E8;
  if (!qword_2568218E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93C88, &_s11BoundsLabelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218E8);
  }
  return result;
}

unint64_t sub_23791DCC8()
{
  unint64_t result;

  result = qword_2568218F0;
  if (!qword_2568218F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93BA8, &_s31RemainingRangeTextConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218F0);
  }
  return result;
}

unint64_t sub_23791DD10()
{
  unint64_t result;

  result = qword_2568218F8;
  if (!qword_2568218F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93BD0, &_s31RemainingRangeTextConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568218F8);
  }
  return result;
}

unint64_t sub_23791DD58()
{
  unint64_t result;

  result = qword_256821900;
  if (!qword_256821900)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93AB8, &_s22ConfigurableInputStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821900);
  }
  return result;
}

unint64_t sub_23791DDA0()
{
  unint64_t result;

  result = qword_256821908;
  if (!qword_256821908)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93AE0, &_s22ConfigurableInputStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821908);
  }
  return result;
}

unint64_t sub_23791DDE8()
{
  unint64_t result;

  result = qword_256821910;
  if (!qword_256821910)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93948, &_s10GaugeStyleO18CircularCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821910);
  }
  return result;
}

unint64_t sub_23791DE30()
{
  unint64_t result;

  result = qword_256821918;
  if (!qword_256821918)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93970, &_s10GaugeStyleO18CircularCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821918);
  }
  return result;
}

unint64_t sub_23791DE78()
{
  unint64_t result;

  result = qword_256821920;
  if (!qword_256821920)
  {
    result = MEMORY[0x23B81FA98](&unk_237A938F8, &_s10GaugeStyleO17CompassCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821920);
  }
  return result;
}

unint64_t sub_23791DEC0()
{
  unint64_t result;

  result = qword_256821928;
  if (!qword_256821928)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93920, &_s10GaugeStyleO17CompassCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821928);
  }
  return result;
}

unint64_t sub_23791DF08()
{
  unint64_t result;

  result = qword_256821930;
  if (!qword_256821930)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93840, &_s10GaugeStyleO14DialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821930);
  }
  return result;
}

unint64_t sub_23791DF50()
{
  unint64_t result;

  result = qword_256821938;
  if (!qword_256821938)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93868, &_s10GaugeStyleO14DialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821938);
  }
  return result;
}

unint64_t sub_23791DF98()
{
  unint64_t result;

  result = qword_256821940;
  if (!qword_256821940)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93788, &_s10GaugeStyleO20ImageGroupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821940);
  }
  return result;
}

unint64_t sub_23791DFE0()
{
  unint64_t result;

  result = qword_256821948;
  if (!qword_256821948)
  {
    result = MEMORY[0x23B81FA98](&unk_237A937B0, &_s10GaugeStyleO20ImageGroupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821948);
  }
  return result;
}

unint64_t sub_23791E028()
{
  unint64_t result;

  result = qword_256821950;
  if (!qword_256821950)
  {
    result = MEMORY[0x23B81FA98](&unk_237A936D0, &_s10GaugeStyleO21TextElementCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821950);
  }
  return result;
}

unint64_t sub_23791E070()
{
  unint64_t result;

  result = qword_256821958;
  if (!qword_256821958)
  {
    result = MEMORY[0x23B81FA98](&unk_237A936F8, &_s10GaugeStyleO21TextElementCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821958);
  }
  return result;
}

unint64_t sub_23791E0B8()
{
  unint64_t result;

  result = qword_256821960;
  if (!qword_256821960)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93680, &_s10GaugeStyleO26MapsMediaBlurBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821960);
  }
  return result;
}

unint64_t sub_23791E100()
{
  unint64_t result;

  result = qword_256821968;
  if (!qword_256821968)
  {
    result = MEMORY[0x23B81FA98](&unk_237A936A8, &_s10GaugeStyleO26MapsMediaBlurBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821968);
  }
  return result;
}

unint64_t sub_23791E148()
{
  unint64_t result;

  result = qword_256821970;
  if (!qword_256821970)
  {
    result = MEMORY[0x23B81FA98](&unk_237A935C8, &_s10GaugeStyleO21ProgressBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821970);
  }
  return result;
}

unint64_t sub_23791E190()
{
  unint64_t result;

  result = qword_256821978;
  if (!qword_256821978)
  {
    result = MEMORY[0x23B81FA98](&unk_237A935F0, &_s10GaugeStyleO21ProgressBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821978);
  }
  return result;
}

unint64_t sub_23791E1D8()
{
  unint64_t result;

  result = qword_256821980;
  if (!qword_256821980)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93A00, &_s10GaugeStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821980);
  }
  return result;
}

unint64_t sub_23791E220()
{
  unint64_t result;

  result = qword_256821988;
  if (!qword_256821988)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93A28, &_s10GaugeStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821988);
  }
  return result;
}

unint64_t sub_23791E268()
{
  unint64_t result;

  result = qword_256821990;
  if (!qword_256821990)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93510, &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821990);
  }
  return result;
}

unint64_t sub_23791E2B0()
{
  unint64_t result;

  result = qword_256821998;
  if (!qword_256821998)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93538, &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821998);
  }
  return result;
}

unint64_t sub_23791E2F8()
{
  unint64_t result;

  result = qword_2568219A0;
  if (!qword_2568219A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93458, &_s18GaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568219A0);
  }
  return result;
}

unint64_t sub_23791E340()
{
  unint64_t result;

  result = qword_2568219A8;
  if (!qword_2568219A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A93480, &_s18GaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568219A8);
  }
  return result;
}

uint64_t sub_23791E384(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C737265646E6572 && a2 == 0xEE00796C6C61636FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AAE580)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23791E4F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6562614C6E696DLL && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6562614C6E696DLL && a2 == 0xED0000726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6562614C78616DLL && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6562614C78616DLL && a2 == 0xED0000726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xEA00000000007372 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000237AB0A50)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_23791E8E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737361706D6F63 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1818323300 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F72476567616D69 && a2 == 0xEA00000000007075 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D656C4574786574 && a2 == 0xEB00000000746E65 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB0A30 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEB00000000726142)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23791EBE8()
{
  unint64_t v0;

  v0 = sub_237A88124();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_23791EC30(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AAF550 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAF570 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB0A70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23791ED70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F427265776F6CLL && a2 == 0xEB0000000073646ELL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F427265707075 && a2 == 0xEB0000000073646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23791EE8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB0A90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23791EF9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23791F0A8()
{
  unint64_t result;

  result = qword_2568219B0;
  if (!qword_2568219B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.Alignment, &type metadata for Instrument.GaugeStyle.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568219B0);
  }
  return result;
}

uint64_t sub_23791F0EC()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23791F118(uint64_t a1)
{
  return *(_QWORD *)(a1 + 480) >> 60;
}

uint64_t sub_23791F124(uint64_t result)
{
  *(_QWORD *)(result + 480) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_23791F134(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v2 = *(_QWORD *)(a1 + 504);
  v52 = *(_QWORD *)(a1 + 496);
  v3 = *(void **)(a1 + 512);
  v4 = *(void **)(a1 + 520);
  v5 = *(void **)(a1 + 528);
  v6 = *(void **)(a1 + 536);
  v7 = *(_QWORD *)(a1 + 544);
  v8 = *(_QWORD *)(a1 + 552);
  v51 = *(_OWORD *)(a1 + 560);
  v50 = *(_OWORD *)(a1 + 576);
  v49 = *(_OWORD *)(a1 + 592);
  v48 = *(_OWORD *)(a1 + 608);
  v47 = *(_OWORD *)(a1 + 624);
  v46 = *(_OWORD *)(a1 + 640);
  v9 = *(_QWORD *)(a1 + 976);
  v45 = *(_OWORD *)(a1 + 656);
  v44 = *(_OWORD *)(a1 + 672);
  v43 = *(_OWORD *)(a1 + 688);
  v42 = *(_OWORD *)(a1 + 704);
  v41 = *(_OWORD *)(a1 + 720);
  v40 = *(_OWORD *)(a1 + 736);
  v39 = *(_OWORD *)(a1 + 752);
  v38 = *(_OWORD *)(a1 + 768);
  v37 = *(_OWORD *)(a1 + 784);
  v36 = *(_OWORD *)(a1 + 800);
  v35 = *(_OWORD *)(a1 + 816);
  v34 = *(_OWORD *)(a1 + 832);
  v33 = *(_OWORD *)(a1 + 848);
  v32 = *(_OWORD *)(a1 + 864);
  v31 = *(_OWORD *)(a1 + 880);
  v30 = *(_OWORD *)(a1 + 896);
  v29 = *(_OWORD *)(a1 + 912);
  v28 = *(_OWORD *)(a1 + 928);
  v27 = *(_OWORD *)(a1 + 944);
  v26 = *(_OWORD *)(a1 + 960);
  v24 = *(_OWORD *)(a1 + 448);
  v25 = *(_OWORD *)(a1 + 464);
  v22 = *(_OWORD *)(a1 + 416);
  v23 = *(_OWORD *)(a1 + 432);
  v20 = *(_OWORD *)(a1 + 384);
  v21 = *(_OWORD *)(a1 + 400);
  v18 = *(_OWORD *)(a1 + 352);
  v19 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 320);
  v17 = *(_OWORD *)(a1 + 336);
  v14 = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 304);
  v12 = *(_OWORD *)(a1 + 256);
  v13 = *(_OWORD *)(a1 + 272);
  v11 = *(_OWORD *)(a1 + 224);
  sub_2378DEB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v11,
    *((uint64_t *)&v11 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    *(_QWORD *)(a1 + 480));
  sub_2378DEB7C(v52, v2, v3, v4, v5, v6, v7, v8, v51, *((void **)&v51 + 1), v50, *((unint64_t *)&v50 + 1), v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v47, *((uint64_t *)&v47 + 1), v46,
    *((uint64_t *)&v46 + 1),
    (void *)v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((void **)&v42 + 1),
    (void *)v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    SBYTE8(v36),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    SBYTE8(v33),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    SBYTE8(v30),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    SBYTE8(v27),
    v26,
    *((uint64_t *)&v26 + 1),
    v9);
  return a1;
}

void KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  type metadata accessor for SkipEncode();
}

uint64_t sub_23791F48C(uint64_t a1)
{
  uint64_t result;

  result = sub_23791F768(a1);
  if ((result & 1) == 0)
    return sub_237A882B0();
  return result;
}

uint64_t SkipEncode.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SkipEncode.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SkipEncode.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t SkipEncode.skippedDestinations.getter@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 52));
  return result;
}

_QWORD *SkipEncode.skippedDestinations.setter(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 52)) = *result;
  return result;
}

uint64_t (*SkipEncode.skippedDestinations.modify())()
{
  return nullsub_1;
}

void SkipEncode.init(wrappedValue:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for SkipEncode();
}

uint64_t sub_23791F5AC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(result + 52)) = v2;
  return result;
}

uint64_t SkipEncode.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v19[5];

  v13 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v19[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23787076C(v14, (uint64_t)v19);
  sub_237A87BC0();
  if (!v6)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a6, v16, a2);
    if (qword_25681E410 != -1)
      swift_once();
    __swift_destroy_boxed_opaque_existential_2Tm(a1);
    v19[0] = a2;
    v19[1] = a3;
    v19[2] = a4;
    v19[3] = a5;
    type metadata accessor for SkipEncode();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm(a1);
}

uint64_t SkipEncode.encode(to:)()
{
  return sub_237A876BC();
}

char *static SkipEncode.setTargetDestination(_:)(char *result)
{
  byte_2568219B8 = *result;
  return result;
}

void static SkipEncode.targetDestination.getter(_BYTE *a1@<X8>)
{
  *a1 = byte_2568219B8;
}

uint64_t sub_23791F734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return SkipEncode.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_23791F754()
{
  return SkipEncode.encode(to:)();
}

uint64_t sub_23791F768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_237A944E8[byte_2568219B8] & *(_QWORD *)(v11 + *(int *)(v8 + 52));
  (*(void (**)(char *))(v7 + 16))(v10);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
    v13 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
    if (swift_dynamicCast())
    {
      v14 = *((_QWORD *)&v18 + 1);
      v15 = v19;
      __swift_project_boxed_opaque_existential_2Tm(&v17, *((uint64_t *)&v18 + 1));
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v17);
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
      sub_2379202C4((uint64_t)&v17);
      v13 = 0;
    }
  }
  return v13 & 1;
}

void type metadata accessor for SkipEncode()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v24 = a4;
  v25 = a5;
  v33 = a3;
  v26 = a2;
  v6 = sub_237A87E0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  v17 = v28;
  result = sub_237A881A8();
  if (!v17)
  {
    v28 = 0;
    v19 = v16;
    v20 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a1) == 1)
    {
      v27 = v11;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v21 = v26;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v26);
      if (qword_25681E410 != -1)
        swift_once();
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v25, v14, a1);
      v29 = a1;
      v30 = v21;
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v22(v19, v10, a1);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v19, a1);
      if (qword_25681E410 != -1)
        swift_once();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, a1);
      v22(v25, v14, a1);
      v29 = a1;
      v30 = v26;
    }
    v31 = v33;
    v32 = v20;
    type metadata accessor for SkipEncode();
  }
  return result;
}

uint64_t UnkeyedDecodingContainer.decode<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  _QWORD v16[4];

  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_237A882EC();
  if (!v6)
  {
    if (qword_25681E410 != -1)
      swift_once();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
    v16[0] = a2;
    v16[1] = a3;
    v16[2] = a4;
    v16[3] = a5;
    type metadata accessor for SkipEncode();
  }
  return result;
}

uint64_t SingleValueDecodingContainer.decode<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  _QWORD v16[4];

  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_237A88448();
  if (!v6)
  {
    if (qword_25681E410 != -1)
      swift_once();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
    v16[0] = a2;
    v16[1] = a3;
    v16[2] = a4;
    v16[3] = a5;
    type metadata accessor for SkipEncode();
  }
  return result;
}

void UnkeyedEncodingContainer.encode<A>(_:)()
{
  type metadata accessor for SkipEncode();
}

uint64_t sub_23791FDBC(uint64_t a1)
{
  uint64_t result;

  result = sub_23791F768(a1);
  if ((result & 1) == 0)
    return sub_237A88304();
  return result;
}

uint64_t sub_23791FE08()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23791FE10()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23791FE88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_23791FF38(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23791FF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23791FFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_237920000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23792005C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2379200B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_237920128 + 4 * byte_237A94450[v8]))();
}

void sub_237920180(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_237920268()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_237920270(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x237920278);
}

void sub_237920294()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23792029C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_2379202A4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x2379202ACLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t sub_2379202C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_237920304(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = sub_237A86E40();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[6];
    *((_BYTE *)a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = v6[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    LOBYTE(v6) = v11[8];
    swift_bridgeObjectRetain();
    j__swift_retain();
    *(_QWORD *)v10 = v12;
    v10[8] = (char)v6;
  }
  return a1;
}

uint64_t sub_2379203C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return j__swift_release();
}

uint64_t sub_237920420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v6 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  LOBYTE(a2) = *((_BYTE *)v10 + 8);
  swift_bridgeObjectRetain();
  j__swift_retain();
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = a2;
  return a1;
}

uint64_t sub_2379204B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v6 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(a2) = *((_BYTE *)v9 + 8);
  j__swift_retain();
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  j__swift_release();
  return a1;
}

uint64_t sub_23792055C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_2379205DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v6 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  LOBYTE(v10) = *((_BYTE *)v10 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = (_BYTE)v10;
  j__swift_release();
  return a1;
}

uint64_t sub_237920670()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23792067C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_237A86E40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_237920704()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237920710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237A86E40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for HalfOpenCircularInstrument()
{
  uint64_t result;

  result = qword_256821A98;
  if (!qword_256821A98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2379207C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237920848()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237920858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = type metadata accessor for HalfOpenCircularInstrument();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 24)))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v2 = v0 + *(int *)(v1 + 28);
    v3 = *(_QWORD *)v2;
    v4 = *(_BYTE *)(v2 + 8);
    j__swift_retain();
    v5 = sub_23796D34C(v3, v4);
    j__swift_release();
    if (!v5)
      sub_237A87248();
  }
  return sub_237A86888();
}

uint64_t sub_237920918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a3 = sub_237A874AC();
  a3[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AD8);
  return sub_23792096C(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_23792096C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;

  v40 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v39 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AF8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v39 - v21;
  sub_237920C88(a2, (uint64_t)&v39 - v21);
  sub_2379211F0(a2, (uint64_t)v16);
  sub_237A86E34();
  v24 = v23;
  sub_237A86DEC();
  v25 = sub_237A86DC8();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v10, 1, v25);
  sub_2378BC024((uint64_t)v10, &qword_256821AE8);
  if ((_DWORD)a2 == 1)
  {
    v26 = 0x3FF7EF9A071C5BB5;
  }
  else
  {
    sub_237A86E04();
    v27 = sub_237A86DD4();
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v7, 1, v27) == 1;
    sub_2378BC024((uint64_t)v7, &qword_256821AE0);
    v26 = qword_237A94530[v28];
  }
  v29 = sub_237920858();
  v30 = type metadata accessor for HalfOpenCircularInstrument();
  v31 = *(_QWORD *)(a1 + *(int *)(v30 + 24));
  v32 = *(_BYTE *)(a1 + *(int *)(v30 + 20));
  sub_2378BBFE0((uint64_t)v22, (uint64_t)v20, &qword_256821AF8);
  sub_2378BBFE0((uint64_t)v16, (uint64_t)v14, &qword_256821AF0);
  v33 = (uint64_t)v20;
  v39 = v20;
  v34 = (uint64_t)v14;
  v35 = v40;
  sub_2378BBFE0(v33, v40, &qword_256821AF8);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B00);
  sub_2378BBFE0(v34, v35 + *(int *)(v36 + 48), &qword_256821AF0);
  v37 = v35 + *(int *)(v36 + 64);
  *(_QWORD *)v37 = v24;
  *(_QWORD *)(v37 + 8) = v26;
  *(_QWORD *)(v37 + 16) = v29;
  *(_QWORD *)(v37 + 24) = v31;
  *(_BYTE *)(v37 + 32) = v32;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_2378BC024((uint64_t)v16, &qword_256821AF0);
  sub_2378BC024((uint64_t)v22, &qword_256821AF8);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2378BC024(v34, &qword_256821AF0);
  return sub_2378BC024((uint64_t)v39, &qword_256821AF8);
}

uint64_t sub_237920C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  __double2 v33;
  double v34;
  CGFloat v35;
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  void (*v58)(char *, uint64_t);
  CGFloat MidX;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  CGFloat MidY;
  uint64_t v69;
  CGFloat *v70;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;

  v85 = a2;
  v89 = *MEMORY[0x24BDAC8D0];
  v3 = sub_237A86D5C();
  v4 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  v84 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237A86BF4();
  v8 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  v82 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A86F84();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237A86E1C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821BA0);
  MEMORY[0x24BDAC7A8](v73);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821BA8);
  v79 = *(_QWORD *)(v20 - 8);
  v80 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v74 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821BB0);
  MEMORY[0x24BDAC7A8](v78);
  v75 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = a1;
  sub_237A868C4();
  v24 = fabs(v23);
  v26 = fabs(v25);
  if (v26 >= v24)
    v26 = v24;
  v27 = v26 * -0.1;
  sub_237A868C4();
  v29 = fabs(v28);
  v31 = fabs(v30);
  if (v31 >= v29)
    v31 = v29;
  v32 = (v31 + v27 + v27) * 0.5;
  v33 = __sincos_stret(0.523598776);
  v34 = v32 + v32;
  v35 = v33.__cosval * (v32 + v32);
  v36 = v33.__sinval * v34;
  sub_237A86E28();
  sub_237A86F90();
  v38 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDF1668], v10);
  v39 = &v19[*(int *)(v73 + 36)];
  v40 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v39[*(int *)(v40 + 32)], v13, v10);
  *(_QWORD *)v39 = 1;
  *(_OWORD *)(v39 + 8) = xmmword_237A94540;
  *((_QWORD *)v39 + 3) = v38;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v41 = v76;
  sub_237A86BE8();
  sub_237922C58();
  sub_23786FAA0(&qword_256821B48, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988], MEMORY[0x24BDEE978]);
  v42 = v74;
  v43 = v81;
  sub_237A87098();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v43);
  sub_2378BC024((uint64_t)v19, &qword_256821BA0);
  v90.origin.x = 0.0;
  v90.origin.y = 0.0;
  v90.size.width = v35;
  v90.size.height = v36;
  CGRectGetWidth(v90);
  v91.origin.x = 0.0;
  v91.origin.y = 0.0;
  v91.size.width = v35;
  v91.size.height = v36;
  CGRectGetHeight(v91);
  sub_237A874AC();
  sub_237A8687C();
  v45 = v79;
  v44 = v80;
  v46 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v42, v80);
  v47 = (_OWORD *)(v46 + *(int *)(v78 + 36));
  v48 = v87;
  *v47 = v86;
  v47[1] = v48;
  v47[2] = v88;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
  sub_237A86DB0();
  v49 = v83;
  sub_237A868D0();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = *(void (**)(char *, uint64_t))(v84 + 8);
  v58(v6, v49);
  v92.origin.x = v51;
  v92.origin.y = v53;
  v92.size.width = v55;
  v92.size.height = v57;
  MidX = CGRectGetMidX(v92);
  sub_237A86DB0();
  sub_237A868D0();
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v58(v6, v49);
  v93.origin.x = v61;
  v93.origin.y = v63;
  v93.size.width = v65;
  v93.size.height = v67;
  MidY = CGRectGetMidY(v93);
  v69 = v85;
  sub_2378BBFE0(v46, v85, &qword_256821BB0);
  v70 = (CGFloat *)(v69 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256821AF8) + 36));
  *v70 = MidX;
  v70[1] = MidY;
  return sub_2378BC024(v46, &qword_256821BB0);
}

uint64_t sub_2379211F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  _BOOL4 v30;
  double v31;
  double v32;
  double v33;
  __double2 v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  void (*v61)(char *, uint64_t);
  CGFloat MidX;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  CGFloat MidY;
  uint64_t v72;
  CGFloat *v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;

  v88 = a2;
  v92 = *MEMORY[0x24BDAC8D0];
  v87 = sub_237A86D5C();
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86BF4();
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_237A86F84();
  v7 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B08);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B10);
  MEMORY[0x24BDAC7A8](v76);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B18);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v78 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B20);
  MEMORY[0x24BDAC7A8](v77);
  v84 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a1;
  sub_237A868C4();
  v24 = v23;
  v26 = v25;
  sub_237A86DEC();
  v27 = sub_237A86DC8();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v22, 1, v27);
  sub_2378BC024((uint64_t)v22, &qword_256821AE8);
  if ((_DWORD)a1 == 1)
  {
    v28 = 0.486198863;
  }
  else
  {
    sub_237A86E04();
    v29 = sub_237A86DD4();
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v19, 1, v29) == 1;
    sub_2378BC024((uint64_t)v19, &qword_256821AE0);
    v28 = dbl_237A94550[v30];
  }
  v31 = fabs(v24);
  v32 = fabs(v26);
  if (v31 >= v32)
    v31 = v32;
  v33 = v31 * 0.5;
  v34 = __sincos_stret(1.57079633 - v28);
  v35 = v33 + v33;
  v36 = (v33 + v33) * v34.__cosval;
  v37 = v35 * v34.__sinval;
  *(_QWORD *)v12 = sub_237A86C6C();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B28);
  sub_2379218A4(&v12[*(int *)(v38 + 44)], 0.0, 0.0, v36, v37);
  sub_237A86F90();
  v40 = v39;
  v41 = v75;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF1668], v75);
  v42 = &v14[*(int *)(v76 + 36)];
  v43 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v42[*(int *)(v43 + 32)], v9, v41);
  *(_QWORD *)v42 = 1;
  *(_OWORD *)(v42 + 8) = xmmword_237A94560;
  *((_QWORD *)v42 + 3) = v40;
  sub_2378BBFE0((uint64_t)v12, (uint64_t)v14, &qword_256821B08);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v41);
  sub_2378BC024((uint64_t)v12, &qword_256821B08);
  v44 = v80;
  sub_237A86BE8();
  sub_237922B40();
  sub_23786FAA0(&qword_256821B48, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988], MEMORY[0x24BDEE978]);
  v45 = v78;
  v46 = v83;
  sub_237A87098();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v46);
  sub_2378BC024((uint64_t)v14, &qword_256821B10);
  v93.origin.x = 0.0;
  v93.origin.y = 0.0;
  v93.size.width = v36;
  v93.size.height = v37;
  CGRectGetWidth(v93);
  v94.origin.x = 0.0;
  v94.origin.y = 0.0;
  v94.size.width = v36;
  v94.size.height = v37;
  CGRectGetHeight(v94);
  sub_237A874AC();
  sub_237A8687C();
  v47 = v79;
  v48 = (uint64_t)v84;
  v49 = v81;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v84, v45, v81);
  v50 = (_OWORD *)(v48 + *(int *)(v77 + 36));
  v51 = v90;
  *v50 = v89;
  v50[1] = v51;
  v50[2] = v91;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v49);
  sub_237A86DB0();
  v52 = v87;
  sub_237A868D0();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v61 = *(void (**)(char *, uint64_t))(v85 + 8);
  v61(v4, v52);
  v95.origin.x = v54;
  v95.origin.y = v56;
  v95.size.width = v58;
  v95.size.height = v60;
  MidX = CGRectGetMidX(v95);
  sub_237A86DB0();
  sub_237A868D0();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v61(v4, v52);
  v96.origin.x = v64;
  v96.origin.y = v66;
  v96.size.width = v68;
  v96.size.height = v70;
  MidY = CGRectGetMidY(v96);
  v72 = v88;
  sub_2378BBFE0(v48, v88, &qword_256821B20);
  v73 = (CGFloat *)(v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256821AF0) + 36));
  *v73 = MidX;
  v73[1] = MidY;
  return sub_2378BC024(v48, &qword_256821B20);
}

uint64_t sub_2379218A4@<X0>(_QWORD *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B50);
  MEMORY[0x24BDAC7A8](v35);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B58);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B60);
  MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B68);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v33 - v23;
  sub_237A86E04();
  v25 = sub_237A86DD4();
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v18, 1, v25);
  sub_2378BC024((uint64_t)v18, &qword_256821AE0);
  if (v26 == 1)
  {
    sub_237A86DE0();
    v27 = &qword_256821B50;
    sub_2378BBFE0((uint64_t)v10, (uint64_t)v13, &qword_256821B50);
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_256821B70, &qword_256821B60, MEMORY[0x24BDF4498]);
    sub_237922BDC();
    sub_237A86D44();
    v28 = (uint64_t)v10;
  }
  else
  {
    *(_QWORD *)v15 = sub_237A86BAC();
    *((_QWORD *)v15 + 1) = 0;
    v15[16] = 1;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B90);
    sub_237921C0C((uint64_t)&v15[*(int *)(v29 + 44)], a2, a3, a4, a5);
    v27 = &qword_256821B60;
    sub_2378BBFE0((uint64_t)v15, (uint64_t)v13, &qword_256821B60);
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_256821B70, &qword_256821B60, MEMORY[0x24BDF4498]);
    sub_237922BDC();
    sub_237A86D44();
    v28 = (uint64_t)v15;
  }
  sub_2378BC024(v28, v27);
  sub_2378BBFE0((uint64_t)v24, (uint64_t)v22, &qword_256821B68);
  v30 = v36;
  *v36 = 0;
  *((_BYTE *)v30 + 8) = 1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B88);
  sub_2378BBFE0((uint64_t)v22, (uint64_t)v30 + *(int *)(v31 + 48), &qword_256821B68);
  sub_2378BC024((uint64_t)v24, &qword_256821B68);
  return sub_2378BC024((uint64_t)v22, &qword_256821B68);
}

uint64_t sub_237921C0C@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  CGFloat v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  CGRect v27;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v26 - v20;
  sub_237A86E04();
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  v22 = CGRectGetWidth(v27) * 0.25;
  sub_237A86DEC();
  sub_2378BBFE0((uint64_t)v21, (uint64_t)v19, &qword_256821AE0);
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v13, &qword_256821AE8);
  sub_2378BBFE0((uint64_t)v19, a1, &qword_256821AE0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821B98);
  v24 = a1 + *(int *)(v23 + 48);
  *(CGFloat *)v24 = v22;
  *(_BYTE *)(v24 + 8) = 0;
  sub_2378BBFE0((uint64_t)v13, a1 + *(int *)(v23 + 64), &qword_256821AE8);
  sub_2378BC024((uint64_t)v15, &qword_256821AE8);
  sub_2378BC024((uint64_t)v21, &qword_256821AE0);
  sub_2378BC024((uint64_t)v13, &qword_256821AE8);
  return sub_2378BC024((uint64_t)v19, &qword_256821AE0);
}

uint64_t sub_237921DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_2378D07D8(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for HalfOpenCircularInstrument);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_237921F28((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *(_QWORD *)a2 = sub_237921F6C;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = 0x3FF0000000000000;
  *(_WORD *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_237921E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HalfOpenCircularInstrument() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  j__swift_release();
  return swift_deallocObject();
}

uint64_t sub_237921F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HalfOpenCircularInstrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237921F6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HalfOpenCircularInstrument() - 8) + 80);
  return sub_237920918(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_237921FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35[5];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821BF8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v35[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_237A868C4();
  v8 = v7;
  v10 = v9;
  sub_237A868C4();
  v12 = v11;
  v14 = v13;
  v16 = *(double *)v1;
  v15 = *(double *)(v1 + 8);
  v17 = v15 * 0.5 + 1.57079633;
  v18 = v17 + 6.28318531 - v15;
  v19 = *(unsigned __int8 *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 24);
  if (v20)
  {
    swift_bridgeObjectRetain();
    sub_237A8756C();
    MEMORY[0x23B81D5F0](v35, v20);
    v21 = sub_237A86888();
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 16);
    swift_retain();
  }
  v22 = v16 * (v18 - v17);
  v23 = v17 + v22;
  if (v19)
    v24 = v17 + v22;
  else
    v24 = v18;
  v25 = fabs(v12);
  v26 = fabs(v14);
  if (v25 >= v26)
    v25 = v26;
  v27 = fabs(v8);
  v28 = fabs(v10);
  if (v27 >= v28)
    v27 = v28;
  v29 = v27 * 0.1;
  v30 = (v25 - v27 * 0.1) * 0.5;
  *v6 = sub_237A874AC();
  v6[1] = v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821C00);
  sub_23792219C(v2, v21, (uint64_t)v6 + *(int *)(v32 + 44), v29, v30, v17, v18, v24, v23);
  swift_release();
  sub_2378BBFE0((uint64_t)v6, a1, &qword_256821BF8);
  return sub_2378BC024((uint64_t)v6, &qword_256821BF8);
}

uint64_t sub_23792219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  double v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  __int128 v93;

  v18 = sub_237A869FC();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_237A8750C();
  v68 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821C08);
  v70 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821C10);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v71 = (uint64_t)&v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v63 - v30;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v32 = 0.0;
    if (*(double *)a1 > 0.0)
      v32 = 1.0;
    v33 = v32;
    *(_QWORD *)&v74 = a2;
    *((float *)&v74 + 2) = v33;
    swift_retain_n();
    v34 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821C20);
    sub_2378B70D4(&qword_256821C28, &qword_256821C20, MEMORY[0x24BDEECA0]);
    v35 = sub_237A86888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v31, 1, 1, v24);
    v36 = 0x3FD6666666666666;
    v37 = 256;
    v38 = v34;
    v39 = a6;
    v40 = a5;
    v41 = a4;
    v69 = v35;
  }
  else
  {
    v69 = a2;
    swift_retain();
    v63 = a4 / -6.0;
    v65 = sub_237A871F4();
    sub_237A867F8();
    v42 = v84;
    v43 = a8;
    v44 = v86;
    v64 = v23;
    v45 = v87;
    v67 = v87;
    v46 = a5;
    v47 = a9;
    v48 = a6;
    v49 = v88;
    v50 = sub_237A874AC();
    v52 = v51;
    v66 = v24;
    sub_237A874AC();
    sub_237A8687C();
    v73 = v90;
    v72 = v92;
    *(double *)&v74 = v63;
    *((_QWORD *)&v74 + 1) = v42;
    *(_QWORD *)&v75 = v85;
    *((_QWORD *)&v75 + 1) = v44;
    a8 = v43;
    a7 = 0.0;
    *(_QWORD *)&v76 = v45;
    *((_QWORD *)&v76 + 1) = v49;
    a6 = v48;
    *(_QWORD *)&v77 = v65;
    WORD4(v77) = 256;
    *(_QWORD *)&v78 = v50;
    *((_QWORD *)&v78 + 1) = v52;
    *(_QWORD *)&v79 = v89;
    BYTE8(v79) = v90;
    *(_QWORD *)&v80 = v91;
    BYTE8(v80) = v92;
    v81 = v93;
    *(double *)&v82 = v47;
    *((double *)&v82 + 1) = v46;
    a5 = v46;
    v83 = 0;
    v53 = v68;
    v54 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v64, *MEMORY[0x24BDF50A0], v21);
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v20, v54, v21);
    v55 = v66;
    sub_2378D07D8((uint64_t)v20, (uint64_t)&v26[*(int *)(v66 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
    v56 = v81;
    *((_OWORD *)v26 + 6) = v80;
    *((_OWORD *)v26 + 7) = v56;
    *((_OWORD *)v26 + 8) = v82;
    *((_QWORD *)v26 + 18) = v83;
    v57 = v77;
    *((_OWORD *)v26 + 2) = v76;
    *((_OWORD *)v26 + 3) = v57;
    v58 = v79;
    *((_OWORD *)v26 + 4) = v78;
    *((_OWORD *)v26 + 5) = v58;
    v59 = v75;
    *(_OWORD *)v26 = v74;
    *((_OWORD *)v26 + 1) = v59;
    sub_2379230F0((uint64_t)&v74);
    sub_237923124((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v21);
    swift_release();
    swift_bridgeObjectRelease();
    sub_237870370((uint64_t)v26, (uint64_t)v31, &qword_256821C08);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v31, 0, 1, v55);
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0.0;
    v40 = 0.0;
    v41 = 0.0;
  }
  v60 = v71;
  sub_2378BBFE0((uint64_t)v31, v71, &qword_256821C10);
  *(double *)a3 = v41;
  *(double *)(a3 + 8) = v40;
  *(double *)(a3 + 16) = v39;
  *(double *)(a3 + 24) = a7;
  *(_QWORD *)(a3 + 32) = v38;
  *(_QWORD *)(a3 + 40) = v37;
  *(_QWORD *)(a3 + 48) = v36;
  *(double *)(a3 + 56) = a4;
  *(double *)(a3 + 64) = a5;
  *(double *)(a3 + 72) = a6;
  *(double *)(a3 + 80) = a8;
  *(_QWORD *)(a3 + 88) = v69;
  *(_WORD *)(a3 + 96) = 256;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821C18);
  sub_2378BBFE0(v60, a3 + *(int *)(v61 + 64), &qword_256821C10);
  swift_retain();
  swift_retain();
  sub_2378BC024((uint64_t)v31, &qword_256821C10);
  sub_2378BC024(v60, &qword_256821C10);
  swift_release();
  return swift_release();
}

uint64_t sub_2379226A8@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v6;
  char v7;
  uint64_t v8;
  _BYTE v9[8];

  v6 = *(_OWORD *)(v1 + 16);
  v7 = *(_BYTE *)(v1 + 32);
  v3 = swift_allocObject();
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_BYTE *)(v3 + 48) = *(_BYTE *)(v1 + 32);
  v8 = v6;
  sub_237870370((uint64_t)&v6 + 8, (uint64_t)v9, &qword_256821BF0);
  *a1 = sub_2379230A8;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v3;
  sub_2379230C8((uint64_t)&v8);
  return sub_2378DD3FC((uint64_t)v9);
}

double sub_237922748@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  char v18;
  _OWORD v19[2];
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  CGRect v28;
  CGRect v29;

  sub_237A87020();
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGRectGetMidX(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGRectGetMidY(v29);
  v21 = 0x3FF0000000000000;
  v22 = 0;
  v23 = 0;
  v24 = 0x3FF0000000000000;
  v25 = 0;
  v26 = 0;
  sub_237A86FFC();
  v19[0] = v12;
  v19[1] = v13;
  v20 = v14;
  sub_237923284((uint64_t)v19, (uint64_t)v27);
  sub_237923300((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379232C0);
  sub_237A867F8();
  sub_237A86FD8();
  sub_2379232D8((uint64_t)v15);
  sub_237923300((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237923338);
  sub_237923300((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237923338);
  result = *(double *)&v16;
  v11 = v17;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 32) = v18;
  return result;
}

double sub_2379228BC@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  sub_237922748((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_23792290C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  sub_237A87188();
  v6 = v5;
  result = sub_237A87188();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v8;
  return result;
}

uint64_t sub_237922958(_OWORD *a1)
{
  _OWORD *v1;

  *v1 = *a1;
  sub_237A87194();
  return sub_237A87194();
}

void (*sub_23792299C(_QWORD *a1))(_OWORD **a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *v1;
  v5 = v1[1];
  sub_237A87188();
  v7 = v6;
  sub_237A87188();
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v7;
  v3[3] = v8;
  return sub_237922A10;
}

void sub_237922A10(_OWORD **a1)
{
  _OWORD *v1;

  v1 = *a1;
  *(_OWORD *)*((_QWORD *)*a1 + 4) = **a1;
  sub_237A87194();
  sub_237A87194();
  free(v1);
}

uint64_t sub_237922A68()
{
  sub_237923350();
  return sub_237A87338();
}

uint64_t sub_237922AB8()
{
  sub_237923350();
  return sub_237A87308();
}

uint64_t sub_237922B08()
{
  sub_237923350();
  return sub_237A87320();
}

unint64_t sub_237922B40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256821B30;
  if (!qword_256821B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821B10);
    v2[0] = sub_2378B70D4(&qword_256821B38, &qword_256821B08, MEMORY[0x24BDF4700]);
    v2[1] = sub_23786FAA0(&qword_256821B40, (uint64_t (*)(uint64_t))type metadata accessor for ScaledSystemFont, (uint64_t)&unk_237A99FE4);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256821B30);
  }
  return result;
}

unint64_t sub_237922BDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256821B78;
  if (!qword_256821B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821B50);
    v2 = sub_23786FAA0(&qword_256821B80, MEMORY[0x24BDF0168], MEMORY[0x24BDF0160]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256821B78);
  }
  return result;
}

unint64_t sub_237922C58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256821BB8;
  if (!qword_256821BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821BA0);
    v2[0] = sub_23786FAA0(&qword_256821BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF01C8], MEMORY[0x24BDF01C0]);
    v2[1] = sub_23786FAA0(&qword_256821B40, (uint64_t (*)(uint64_t))type metadata accessor for ScaledSystemFont, (uint64_t)&unk_237A99FE4);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256821BB8);
  }
  return result;
}

uint64_t destroy for RingOverlay()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RingOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RingOverlay(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RingOverlay(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RingOverlay(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RingOverlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RingOverlay()
{
  return &type metadata for RingOverlay;
}

uint64_t storeEnumTagSinglePayload for HalfOpenCircularInstrument.IndicatorStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237922F1C + 4 * byte_237A94575[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237922F50 + 4 * byte_237A94570[v4]))();
}

uint64_t sub_237922F50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237922F58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237922F60);
  return result;
}

uint64_t sub_237922F6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237922F74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237922F78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237922F80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HalfOpenCircularInstrument.IndicatorStyle()
{
  return &type metadata for HalfOpenCircularInstrument.IndicatorStyle;
}

unint64_t sub_237922FA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256821BC8;
  if (!qword_256821BC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821BD0);
    v2[0] = sub_2378B70D4(&qword_256821BD8, &qword_256821BE0, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256821BC8);
  }
  return result;
}

unint64_t sub_237923028()
{
  unint64_t result;

  result = qword_256821BE8;
  if (!qword_256821BE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94694, &type metadata for HalfOpenCircularInstrument.IndicatorStyle);
    atomic_store(result, (unint64_t *)&qword_256821BE8);
  }
  return result;
}

uint64_t sub_23792306C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23792307C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2379230A8@<X0>(uint64_t a1@<X8>)
{
  return sub_237921FB8(a1);
}

uint64_t sub_2379230C8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_2379230F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_237923124(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A869FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for OpenRing()
{
  return &type metadata for OpenRing;
}

uint64_t sub_237923170()
{
  return sub_2378B70D4(&qword_256821C30, &qword_256821C38, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_23792319C()
{
  return sub_2378B70D4(&qword_256821C40, &qword_256821C48, MEMORY[0x24BDEB358]);
}

uint64_t sub_2379231C8()
{
  return sub_2378B70D4(&qword_256821C50, &qword_256821C58, MEMORY[0x24BDEC5B8]);
}

unint64_t sub_2379231F8()
{
  unint64_t result;

  result = qword_256821C60;
  if (!qword_256821C60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94768, &type metadata for OpenRing);
    atomic_store(result, (unint64_t *)&qword_256821C60);
  }
  return result;
}

unint64_t sub_237923240()
{
  unint64_t result;

  result = qword_256821C68;
  if (!qword_256821C68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A94718, &type metadata for OpenRing);
    atomic_store(result, (unint64_t *)&qword_256821C68);
  }
  return result;
}

uint64_t sub_237923284(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF1B28] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_2379232C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_retain();
  return result;
}

uint64_t sub_2379232D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237923300(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_237923338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

unint64_t sub_237923350()
{
  unint64_t result;

  result = qword_256821C70[0];
  if (!qword_256821C70[0])
  {
    result = MEMORY[0x23B81FA98](&unk_237A947B8, &type metadata for OpenRing);
    atomic_store(result, qword_256821C70);
  }
  return result;
}

Swift::Double_optional __swiftcall Double.doubleValue()()
{
  Swift::Bool v0;
  Swift::Bool v1;
  Swift::Double_optional result;

  v1 = v0;
  LOBYTE(result.value) = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_2379233A0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

Swift::Double_optional __swiftcall Measurement.doubleValue()()
{
  double v0;
  Swift::Bool v1;
  Swift::Double_optional result;

  sub_237A863FC();
  v1 = LOBYTE(v0);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

double sub_2379233C8()
{
  double result;

  *(_QWORD *)&result = (unint64_t)Measurement.doubleValue()();
  return result;
}

Swift::Double_optional __swiftcall String.doubleValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  double v5;
  Swift::Bool v6;
  _BYTE *v7;
  _QWORD v8[3];
  _BOOL8 v9;
  Swift::Double_optional result;

  v9 = 0;
  if ((v1 & 0x1000000000000000) != 0 || !(v1 & 0x2000000000000000 | v0 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_237A87F20();
    swift_bridgeObjectRelease();
    v4 = LOBYTE(v8[0]);
  }
  else
  {
    if ((v1 & 0x2000000000000000) == 0)
    {
      if ((v0 & 0x1000000000000000) != 0)
      {
        v2 = (v1 & 0xFFFFFFFFFFFFFFFLL) + 32;
        swift_bridgeObjectRetain();
      }
      else
      {
        v2 = sub_237A87FE0();
        swift_bridgeObjectRetain();
        if (!v2)
        {
          v3 = 0;
          goto LABEL_7;
        }
      }
      v3 = (_BYTE *)v2;
LABEL_7:
      sub_237923E7C(v3, (BOOL *)v8);
      v4 = LOBYTE(v8[0]);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    v8[0] = v0;
    v8[1] = v1 & 0xFFFFFFFFFFFFFFLL;
    switch((char)v0)
    {
      case 0:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
        swift_bridgeObjectRetain();
        goto LABEL_10;
      default:
        swift_bridgeObjectRetain();
        v7 = (_BYTE *)_swift_stdlib_strtod_clocale();
        if (v7)
          v4 = *v7 == 0;
        else
LABEL_10:
          v4 = 0;
        swift_bridgeObjectRelease();
        break;
    }
  }
LABEL_12:
  if (v4)
    v6 = v9;
  else
    v6 = 0;
  result.value = v5;
  result.is_nil = v6;
  return result;
}

uint64_t sub_237923560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v5 = 0;
  v4[2] = &v5;
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_237923DA0((void (*)(char *__return_ptr, _QWORD *))sub_237923E7C, (uint64_t)v4, v1, v2);
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    return v5;
  else
    return 0;
}

Swift::Double_optional __swiftcall Bool.doubleValue()()
{
  Swift::Bool v0;
  Swift::Double_optional result;

  v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t sub_2379235F0()
{
  _BYTE *v0;

  if (*v0)
    return 0x3FF0000000000000;
  else
    return 0;
}

Swift::Double_optional __swiftcall Int.doubleValue()()
{
  uint64_t v0;
  double v1;
  double v2;
  Swift::Double_optional result;

  v1 = (double)v0;
  v2 = (double)v0;
  result.value = v1;
  result.is_nil = LOBYTE(v2);
  return result;
}

double sub_237923618()
{
  uint64_t *v0;

  return (double)*v0;
}

Swift::Double_optional __swiftcall UInt16.doubleValue()()
{
  unsigned __int16 v0;
  double v1;
  _BOOL8 v2;
  Swift::Double_optional result;

  v1 = (double)v0;
  *(double *)&v2 = v1;
  result.value = v1;
  result.is_nil = v2;
  return result;
}

double sub_237923640(double a1)
{
  _WORD *v1;

  LOWORD(a1) = *v1;
  return (double)*(unint64_t *)&a1;
}

Swift::Double_optional __swiftcall UInt8.doubleValue()()
{
  unsigned __int8 v0;
  double v1;
  _BOOL8 v2;
  Swift::Double_optional result;

  v1 = (double)v0;
  *(double *)&v2 = v1;
  result.value = v1;
  result.is_nil = v2;
  return result;
}

double sub_237923668(double a1)
{
  _BYTE *v1;

  LOBYTE(a1) = *v1;
  return (double)*(unint64_t *)&a1;
}

uint64_t Optional<A>.doubleValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t sub_23792378C(uint64_t a1, uint64_t a2)
{
  return Optional<A>.doubleValue()(a1, *(_QWORD *)(a2 - 8));
}

void InstrumentDataType.identifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t InstrumentDataType.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t InstrumentDataType.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
}

uint64_t InstrumentDataType.__allocating_init(identifier:type:defaultValue:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = swift_allocObject();
  v7 = *(_QWORD **)v6;
  *(_BYTE *)(v6 + 16) = *a1;
  v8 = v7[11];
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7[10] - 8) + 32))(v6 + v7[14], a3);
  return v6;
}

uint64_t InstrumentDataType.init(identifier:type:defaultValue:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v3;
  *(_BYTE *)(v3 + 16) = *a1;
  v5 = v4[11];
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4[10] - 8) + 32))(v3 + v4[14], a3);
  return v3;
}

uint64_t InstrumentDataType.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return v0;
}

uint64_t InstrumentDataType.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t InstrumentDataRange.bounds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = sub_237A877D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InstrumentDataRange.__allocating_init(identifier:type:defaultValue:in:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  InstrumentDataRange.init(identifier:type:defaultValue:in:)(a1, a2, a3, a4);
  return v8;
}

uint64_t InstrumentDataRange.init(identifier:type:defaultValue:in:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v8 = *a1;
  v9 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 152);
  v10 = sub_237A877D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a4, v10);
  v11 = *(_QWORD **)v4;
  *(_BYTE *)(v4 + 16) = v8;
  v12 = v11[11];
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11[10] - 8) + 32))(v4 + v11[14], a3);
  return v4;
}

void InstrumentDataRange.__allocating_init(identifier:type:defaultValue:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InstrumentDataRange.init(identifier:type:defaultValue:)()
{
  sub_237923E90();
}

uint64_t sub_237923A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v2 = sub_237A877D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t InstrumentDataRange.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  v2 = sub_237A877D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t InstrumentDataRange.__deallocating_deinit()
{
  InstrumentDataRange.deinit();
  return swift_deallocClassInstance();
}

uint64_t InstrumentDataCollection.allValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 128) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
}

uint64_t InstrumentDataCollection.__allocating_init(identifier:type:defaultValue:allValues:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v8 = swift_allocObject();
  LOBYTE(a1) = *a1;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v8 + 128) - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 152), a4);
  v9 = *(_QWORD **)v8;
  *(_BYTE *)(v8 + 16) = (_BYTE)a1;
  v10 = v9[11];
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = v10;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9[10] - 8) + 32))(v8 + v9[14], a3);
  return v8;
}

uint64_t InstrumentDataCollection.init(identifier:type:defaultValue:allValues:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v7;
  _QWORD *v8;
  uint64_t v9;

  v7 = *a1;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 128) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 152), a4);
  v8 = *(_QWORD **)v4;
  *(_BYTE *)(v4 + 16) = v7;
  v9 = v8[11];
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8[10] - 8) + 32))(v4 + v8[14], a3);
  return v4;
}

void InstrumentDataCollection.__allocating_init(identifier:type:defaultValue:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InstrumentDataCollection.init(identifier:type:defaultValue:)()
{
  sub_237923EBC();
}

uint64_t sub_237923CD0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 128) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t *InstrumentDataCollection.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 128) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 152));
  return v0;
}

uint64_t InstrumentDataCollection.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 128) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 152));
  return swift_deallocClassInstance();
}

uint64_t sub_237923DA0(void (*a1)(char *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  char v9;
  _QWORD v10[2];
  char v11;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    sub_237A87F20();
    if (!v4)
      v7 = v11;
  }
  else if ((a4 & 0x2000000000000000) != 0)
  {
    v10[0] = a3;
    v10[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    a1(&v9, v10);
    if (!v4)
      v7 = v9;
  }
  else
  {
    if ((a3 & 0x1000000000000000) != 0)
      v6 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v6 = sub_237A87FE0();
    a1((char *)v10, (_QWORD *)v6);
    if (!v4)
      v7 = v10[0];
  }
  return v7 & 1;
}

_BYTE *sub_237923E7C@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_2379240D0(a1, a2);
}

void sub_237923E90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_237923EBC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t dispatch thunk of FloatingPointConvertible.doubleValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_237923F10()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstrumentDataType);
}

uint64_t method lookup function for InstrumentDataType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InstrumentDataType.__allocating_init(identifier:type:defaultValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_237923FB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A877D0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstrumentDataRange);
}

uint64_t method lookup function for InstrumentDataRange()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InstrumentDataRange.__allocating_init(identifier:type:defaultValue:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_237924048()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstrumentDataCollection);
}

uint64_t method lookup function for InstrumentDataCollection()
{
  return swift_lookUpClassMethod();
}

_BYTE *sub_2379240D0@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_237924140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[16];

  v7 = type metadata accessor for HashableWeakBox(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v9 = MEMORY[0x23B81FC48](v11);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  *a5 = v9;
  return result;
}

void HashableWeakBox.base.getter()
{
  JUMPOUT(0x23B81FC48);
}

uint64_t HashableWeakBox.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  result = swift_unknownObjectRelease();
  *(_QWORD *)(a2 + 8) = a1;
  return result;
}

uint64_t HashableWeakBox.hash(into:)()
{
  return sub_237A885E0();
}

BOOL static HashableWeakBox.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
}

uint64_t HashableWeakBox.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_23792428C()
{
  sub_237A885D4();
  HashableWeakBox.hash(into:)();
  return sub_237A88610();
}

void sub_2379242C4()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379242DC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2379242EC()
{
  return 8;
}

_QWORD *sub_2379242F8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_237924308(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_237924330(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_237924358(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_237924380(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_2379243A8(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)(a1 + 8))
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_2379243EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = 0;
  }
  return result;
}

uint64_t type metadata accessor for HashableWeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HashableWeakBox);
}

void sub_237924434(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_237924498()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = v0;
  sub_237924E78(v1 - 112);
}

void sub_23792469C(uint64_t a1)
{
  __asm { BR              X6 }
}

uint64_t sub_2379246F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v19 = a4;
  v20 = a3;
  v21 = a2;
  v22 = a1;
  v23 = v13;
  v24 = v12;
  v25 = v11;
  v26 = v10;
  v27 = v9;
  v28 = v8;
  v29 = v7;
  v30 = v6;
  v31 = v5;
  v32 = a5;
  v17 = 1;
  v18 = 0;
  sub_2378823B8((uint64_t)&v17, 4);
  v15 = swift_retain();
  static GradientColor.singleColor(_:)(v15, v14);
  return swift_release();
}

void sub_237924A68()
{
  JUMPOUT(0x237924A90);
}

void sub_237924AAC(uint64_t a1)
{
  __asm { BR              X6 }
}

uint64_t sub_237924B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v19 = a4;
  v20 = a3;
  v21 = a2;
  v22 = a1;
  v23 = v13;
  v24 = v12;
  v25 = v11;
  v26 = v10;
  v27 = v9;
  v28 = v8;
  v29 = v7;
  v30 = v6;
  v31 = v5;
  v32 = a5;
  v17 = 4;
  v18 = 0;
  sub_2378823B8((uint64_t)&v17, 0);
  v15 = swift_retain();
  static GradientColor.singleColor(_:)(v15, v14);
  return swift_release();
}

void sub_237924E78(uint64_t a1)
{
  __asm { BR              X6 }
}

uint64_t sub_237924ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v19 = a4;
  v20 = a3;
  v21 = a2;
  v22 = a1;
  v23 = v13;
  v24 = v12;
  v25 = v11;
  v26 = v10;
  v27 = v9;
  v28 = v8;
  v29 = v7;
  v30 = v6;
  v31 = v5;
  v32 = a5;
  v17 = 1;
  v18 = 0;
  sub_2378823B8((uint64_t)&v17, 0);
  v15 = swift_retain();
  static GradientColor.singleColor(_:)(v15, v14);
  return swift_release();
}

void sub_237925354()
{
  JUMPOUT(0x23792537CLL);
}

void sub_23792538C()
{
  JUMPOUT(0x23792532CLL);
}

void sub_2379253B8()
{
  JUMPOUT(0x23792532CLL);
}

void sub_2379253E4()
{
  JUMPOUT(0x23792540CLL);
}

void sub_237925424()
{
  JUMPOUT(0x23792544CLL);
}

UIImage_optional __swiftcall UIImage.init(_internalSystemName:)(Swift::String _internalSystemName)
{
  void *ObjCClassFromMetadata;
  void *v2;
  objc_class *v3;
  Swift::Bool v4;
  objc_class *v5;
  UIImage_optional result;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v2 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v3 = (objc_class *)objc_msgSend(ObjCClassFromMetadata, sel__systemImageNamed_, v2);

  v5 = v3;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

UIImage_optional __swiftcall UIImage.init(systemName:size:)(Swift::String systemName, CGSize size)
{
  double height;
  double width;
  void *v4;
  id v5;
  Swift::Bool v6;
  id v7;
  double *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[6];
  UIImage_optional result;

  height = size.height;
  width = size.width;
  v4 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

  if (v5)
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD618]), sel_initWithSize_, width, height);
    v8 = (double *)swift_allocObject();
    *((_QWORD *)v8 + 2) = v5;
    v8[3] = width;
    v8[4] = height;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_237925720;
    *(_QWORD *)(v9 + 24) = v8;
    v17[4] = sub_2378A3110;
    v17[5] = v9;
    v17[0] = MEMORY[0x24BDAC760];
    v17[1] = 1107296256;
    v17[2] = sub_23792574C;
    v17[3] = &block_descriptor_0;
    v10 = _Block_copy(v17);
    swift_retain();
    v11 = v5;
    swift_release();
    v12 = objc_msgSend(v7, sel_imageWithActions_, v10);
    _Block_release(v10);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    v13 = (objc_class *)swift_release();
    if ((v10 & 1) != 0)
    {
      __break(1u);
      goto LABEL_9;
    }
    v14 = objc_msgSend(v12, sel_CGImage);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v14);
      swift_release();

      v7 = v12;
      v12 = v15;
    }
    else
    {
      swift_release();
    }

  }
  v13 = 0;
LABEL_9:
  result.value.super.isa = v13;
  result.is_nil = v6;
  return result;
}

uint64_t sub_2379256FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_237925720()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_23792573C()
{
  return swift_deallocObject();
}

void sub_23792574C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

id CGImageRef.cpImage.getter()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_initWithCGImage_, v0);
}

uint64_t Image.init(asset:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t result;

  v2 = *(void **)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  if (ImageAsset.image.getter())
  {
    sub_2378702E0(v2, v1, v3, v4, v5);
    return _s7SwiftUI5ImageV012CarPlayAssetB0E02cpC0ACSo7UIImageC_tcfC_0();
  }
  else
  {
    sub_237A87F44();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

id KeyedDecodingContainer.decodeIfPresent(_:forKey:)(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v3;
  id v5;
  void *v6;
  uint64_t v8;
  unint64_t v9;

  sub_2379259B4();
  sub_237A881A8();
  if (!v3)
  {
    if (v9 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      v5 = objc_allocWithZone(MEMORY[0x24BEBD640]);
      v6 = (void *)sub_237A86534();
      a3 = objc_msgSend(v5, sel_initWithData_, v6);
      sub_2378709D8(v8, v9);

    }
  }
  return a3;
}

unint64_t sub_2379259B4()
{
  unint64_t result;

  result = qword_256821E78;
  if (!qword_256821E78)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256821E78);
  }
  return result;
}

id KeyedDecodingContainer.decode(_:forKey:)()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v5;
  unint64_t v6;

  sub_2379259B4();
  sub_237A881F0();
  if (!v1)
  {
    v2 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v3 = (void *)sub_237A86534();
    v0 = objc_msgSend(v2, sel_initWithData_, v3);
    sub_23786FD64(v5, v6);

  }
  return v0;
}

Swift::String __swiftcall Data.sha256()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  Swift::String result;

  v1 = v0;
  v2 = sub_237A875FC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_237A875E4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23786FAA0(&qword_256821E80, v3, MEMORY[0x24BDC6AE8]);
  sub_237A875D8();
  __asm { BR              X10 }
  return result;
}

uint64_t sub_237925BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v8 - 112) = v6;
  *(_WORD *)(v8 - 104) = v5;
  *(_BYTE *)(v8 - 102) = BYTE2(v5);
  *(_BYTE *)(v8 - 101) = BYTE3(v5);
  *(_BYTE *)(v8 - 100) = BYTE4(v5);
  *(_BYTE *)(v8 - 99) = BYTE5(v5);
  sub_237A875C0();
  sub_23786FD64(v6, v5);
  sub_237A875CC();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v2);
  sub_23786FAA0(&qword_256821E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62E8]);
  v9 = sub_237A875F0();
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v0);
  *(_QWORD *)(v8 - 112) = MEMORY[0x24BEE4AF8];
  sub_2379D62F4(0, 0, 0);
  v12 = *(_QWORD *)(v8 - 112);
  v13 = *(_QWORD *)(v9 + 16);
  if (v11 != v13)
  {
    if (v11 >= v13)
    {
      __break(1u);
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if (v11 < 0)
      goto LABEL_12;
    if (!v13)
    {
LABEL_13:
      __break(1u);
      JUMPOUT(0x237925F44);
    }
    swift_bridgeObjectRetain();
    *(_OWORD *)(v8 - 128) = xmmword_237A8A9F0;
    v14 = MEMORY[0x24BEE42B0];
    do
    {
      v15 = *(_BYTE *)(v9 + v11 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256821E90);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v8 - 128);
      *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v16 + 64) = v14;
      *(_BYTE *)(v16 + 32) = v15;
      v17 = sub_237A87830();
      v19 = v18;
      *(_QWORD *)(v8 - 112) = v12;
      v21 = *(_QWORD *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2379D62F4(v20 > 1, v21 + 1, 1);
        v12 = *(_QWORD *)(v8 - 112);
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v21 + 1;
      v22 = v12 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
    }
    while (v13 != v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 - 112) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
  sub_237926878();
  v23 = sub_237A87764();
  swift_release();
  return v23;
}

void sub_237925F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = sub_237A87614();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B90];
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_237A87608();
  MEMORY[0x24BDAC7A8](v5);
  sub_23786FAA0(&qword_256821EB8, v4, MEMORY[0x24BDC6B88]);
  sub_237A875D8();
  __asm { BR              X10 }
}

uint64_t sub_237926058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v8 - 112) = v6;
  *(_WORD *)(v8 - 104) = v5;
  *(_BYTE *)(v8 - 102) = BYTE2(v5);
  *(_BYTE *)(v8 - 101) = BYTE3(v5);
  *(_BYTE *)(v8 - 100) = BYTE4(v5);
  *(_BYTE *)(v8 - 99) = BYTE5(v5);
  sub_237A875C0();
  sub_23786FD64(v6, v5);
  sub_237A875CC();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v2);
  sub_23786FAA0(qword_256821EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B58], MEMORY[0x24BDC6B50]);
  v9 = sub_237A875F0();
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v0);
  *(_QWORD *)(v8 - 112) = MEMORY[0x24BEE4AF8];
  sub_2379D62F4(0, 0, 0);
  v12 = *(_QWORD *)(v8 - 112);
  v13 = *(_QWORD *)(v9 + 16);
  if (v11 != v13)
  {
    if (v11 >= v13)
    {
      __break(1u);
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if (v11 < 0)
      goto LABEL_12;
    if (!v13)
    {
LABEL_13:
      __break(1u);
      JUMPOUT(0x2379263E4);
    }
    swift_bridgeObjectRetain();
    *(_OWORD *)(v8 - 128) = xmmword_237A8A9F0;
    v14 = MEMORY[0x24BEE42B0];
    do
    {
      v15 = *(_BYTE *)(v9 + v11 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256821E90);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v8 - 128);
      *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v16 + 64) = v14;
      *(_BYTE *)(v16 + 32) = v15;
      v17 = sub_237A87830();
      v19 = v18;
      *(_QWORD *)(v8 - 112) = v12;
      v21 = *(_QWORD *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2379D62F4(v20 > 1, v21 + 1, 1);
        v12 = *(_QWORD *)(v8 - 112);
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v21 + 1;
      v22 = v12 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
    }
    while (v13 != v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 - 112) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
  sub_237926878();
  v23 = sub_237A87764();
  swift_release();
  return v23;
}

void Data.utf8.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_237926448()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_237A8786C();
  sub_23786FD64(v1, v0);
  return v2;
}

uint64_t sub_2379266D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_2378709EC(a1, a2);
  sub_237926998(a1, a2);
  sub_23786FD64(a1, a2);
  v4 = sub_237A8786C();
  swift_release();
  return v4;
}

uint64_t sub_237926748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237A8786C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_237926780(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_2379267CC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_237A86450();
  v9 = result;
  if (result)
  {
    result = sub_237A86468();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_237A8645C();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_237926780(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

unint64_t sub_237926878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256821EA0;
  if (!qword_256821EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821E98);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256821EA0);
  }
  return result;
}

uint64_t sub_2379268C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t result;

  result = sub_237A86450();
  if (!result || (result = sub_237A86468(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_237A8645C();
      a5(0);
      sub_23786FAA0(a6, a5, a7);
      return sub_237A875C0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_237926998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_237A86558();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_237926A14()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568213E0);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_2378709EC(v2, v0);
    v7 = sub_237A86528();
    sub_23786FD64(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x237926AE8);
    }
  }
  return v4;
}

uint64_t sub_237926B00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237A8786C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_237926B34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821EB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237926B74()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_237926B7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_237A87E0C();
    if (v2 <= 0x3F)
    {
      result = sub_237A87E0C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_237926C3C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  void *v26;
  char *v27;
  char *v28;
  void *v29;
  const void *v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  void *v32;
  const void *v33;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  size_t __n;
  uint64_t v39;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  v14 = v8 | v6 | v12;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || ((v13 + v12 + ((v10 + v12 + ((v9 + ((v6 + 32) & ~v6)) & ~v8)) & ~v12)) & ~v12) + v13 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = v17 + ((v14 & 0xF8 ^ 0x1F8) & (v14 + 16));
    swift_retain();
  }
  else
  {
    v37 = v13 + v12;
    __n = v13;
    v39 = a3[4];
    v19 = ~v8;
    v35 = a3[3];
    v36 = ~v12;
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    v21 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = ((unint64_t)v21 + v6 + 16) & ~v6;
    v24 = ((unint64_t)v22 + v6 + 16) & ~v6;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v25(v23, v24, v4);
    v26 = (void *)((v23 + v9) & v19);
    v27 = (char *)((v24 + v9) & v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v27, 1, v35))
    {
      memcpy(v26, v27, v10);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v26, v27, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v35);
    }
    v28 = &v27[v10];
    v29 = (void *)(((unint64_t)v26 + v10 + v12) & v36);
    v30 = (const void *)((unint64_t)&v28[v12] & v36);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    if (v31(v30, 1, v39))
    {
      memcpy(v29, v30, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v29, v30, v39);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v39);
    }
    v32 = (void *)(((unint64_t)v29 + v37) & v36);
    v33 = (const void *)(((unint64_t)v30 + v37) & v36);
    if (v31(v33, 1, v39))
    {
      memcpy(v32, v33, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v32, v33, v39);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v39);
    }
    return a1;
  }
  return (uint64_t *)v18;
}

uint64_t sub_237926F00(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int (*v17)(unint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  swift_release();
  v4 = *(_QWORD *)(a2[2] - 8);
  v5 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = a2[3];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  v10 = a2[4];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v9;
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  v14 = v13 + v12;
  v15 = ~v12;
  v16 = (v13 + v12) & ~v12;
  v17 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v17(v16, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v16, v10);
  v18 = (v14 | v12) + *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = v18 & v15;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18 & v15, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v19, v10);
  return result;
}

_QWORD *sub_237927058(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  void *v37;
  const void *v38;
  unsigned int (*v40)(const void *, uint64_t, uint64_t);
  _QWORD *v41;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v41 = a1;
  v6 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = a3[2];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_retain();
  v13(v11, v12, v8);
  v14 = a3[3];
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v9 + 64) + v16;
  v18 = (char *)((v17 + v11) & ~v16);
  v19 = (char *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    v20 = *(_DWORD *)(v15 + 84);
    v21 = *(_QWORD *)(v15 + 64);
    if (v20)
      v22 = *(_QWORD *)(v15 + 64);
    else
      v22 = v21 + 1;
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
    v20 = *(_DWORD *)(v15 + 84);
    v21 = *(_QWORD *)(v15 + 64);
  }
  if (v20)
    v23 = v21;
  else
    v23 = v21 + 1;
  v24 = a3[4];
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v23 + v26;
  v28 = (unint64_t)&v18[v27];
  v29 = ~v26;
  v30 = (void *)((unint64_t)&v18[v27] & ~v26);
  v31 = (unint64_t)&v19[v27];
  v32 = (const void *)((unint64_t)&v19[v27] & ~v26);
  v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v40(v32, 1, v24))
  {
    v33 = *(_DWORD *)(v25 + 84);
    v34 = *(_QWORD *)(v25 + 64);
    if (v33)
      v35 = *(_QWORD *)(v25 + 64);
    else
      v35 = v34 + 1;
    memcpy(v30, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v30, v32, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v24);
    v33 = *(_DWORD *)(v25 + 84);
    v34 = *(_QWORD *)(v25 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  v37 = (void *)(((v28 | v26) + v36) & v29);
  v38 = (const void *)(((v31 | v26) + v36) & v29);
  if (v40(v38, 1, v24))
  {
    memcpy(v37, v38, v36);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v37, v38, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
  }
  return v41;
}

_QWORD *sub_2379272A4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  void *v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  size_t v35;
  size_t v36;
  void *v37;
  void *v38;
  int v39;
  int v40;
  _QWORD *v42;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v42 = a1;
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = *(_QWORD *)(a3[2] - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v7 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = a3[3];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (char *)((v16 + v10) & ~v15);
  v18 = (char *)((v16 + v11) & ~v15);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v19(v17, 1, v13);
  v20 = v19(v18, 1, v13);
  if ((_DWORD)v11)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v17, v18, v13);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v17, v18, v21);
LABEL_10:
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  v23 = a3[4];
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = v22 + v25;
  v27 = (unint64_t)&v17[v26];
  v28 = ~v25;
  v29 = (void *)((unint64_t)&v17[v26] & ~v25);
  v30 = (unint64_t)&v18[v26];
  v31 = (void *)((unint64_t)&v18[v26] & ~v25);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v33 = v32(v29, 1, v23);
  v34 = v32(v31, 1, v23);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v29, v31, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v23);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v29, v31, v23);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v29, v23);
  }
  if (*(_DWORD *)(v24 + 84))
    v35 = *(_QWORD *)(v24 + 64);
  else
    v35 = *(_QWORD *)(v24 + 64) + 1;
  memcpy(v29, v31, v35);
LABEL_22:
  if (*(_DWORD *)(v24 + 84))
    v36 = *(_QWORD *)(v24 + 64);
  else
    v36 = *(_QWORD *)(v24 + 64) + 1;
  v37 = (void *)(((v27 | v25) + v36) & v28);
  v38 = (void *)(((v30 | v25) + v36) & v28);
  v39 = v32(v37, 1, v23);
  v40 = v32(v38, 1, v23);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v37, v38, v23);
      return v42;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v37, v23);
    goto LABEL_30;
  }
  if (v40)
  {
LABEL_30:
    memcpy(v37, v38, v36);
    return v42;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v37, v38, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v37, 0, 1, v23);
  return v42;
}

_OWORD *sub_2379275D0(_OWORD *a1, _OWORD *a2, _QWORD *a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  const void *v28;
  int v29;
  size_t v30;
  size_t v31;
  size_t v32;
  void *v33;
  const void *v34;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 16) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  v14 = (char *)((v13 + v8) & ~v12);
  v15 = (char *)((v13 + v9) & ~v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = *(_QWORD *)(v11 + 64);
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (unint64_t)&v14[v23];
  v25 = ~v22;
  v26 = (void *)((unint64_t)&v14[v23] & ~v22);
  v27 = (unint64_t)&v15[v23];
  v28 = (const void *)((unint64_t)&v15[v23] & ~v22);
  v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v28, 1, v20))
  {
    v29 = *(_DWORD *)(v21 + 84);
    v30 = *(_QWORD *)(v21 + 64);
    if (v29)
      v31 = *(_QWORD *)(v21 + 64);
    else
      v31 = v30 + 1;
    memcpy(v26, v28, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v26, v28, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
    v29 = *(_DWORD *)(v21 + 84);
    v30 = *(_QWORD *)(v21 + 64);
  }
  if (v29)
    v32 = v30;
  else
    v32 = v30 + 1;
  v33 = (void *)(((v24 | v22) + v32) & v25);
  v34 = (const void *)(((v27 | v22) + v32) & v25);
  if (v36(v34, 1, v20))
  {
    memcpy(v33, v34, v32);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v33, v34, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v20);
  }
  return a1;
}

_QWORD *sub_237927810(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  void *v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  size_t v36;
  size_t v37;
  void *v38;
  void *v39;
  int v40;
  int v41;
  _QWORD *v43;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v43 = a1;
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = *(_QWORD *)(a3[2] - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v8 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = a3[3];
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v13 + v16;
  v18 = (char *)((v17 + v11) & ~v16);
  v19 = (char *)((v17 + v12) & ~v16);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v12) = v20(v18, 1, v14);
  v21 = v20(v19, 1, v14);
  if ((_DWORD)v12)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v18, v19, v14);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  if (*(_DWORD *)(v15 + 84))
    v22 = *(_QWORD *)(v15 + 64);
  else
    v22 = *(_QWORD *)(v15 + 64) + 1;
  memcpy(v18, v19, v22);
LABEL_10:
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = *(_QWORD *)(v15 + 64) + 1;
  v24 = a3[4];
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v23 + v26;
  v28 = (unint64_t)&v18[v27];
  v29 = ~v26;
  v30 = (void *)((unint64_t)&v18[v27] & ~v26);
  v31 = (unint64_t)&v19[v27];
  v32 = (void *)((unint64_t)&v19[v27] & ~v26);
  v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v34 = v33(v30, 1, v24);
  v35 = v33(v32, 1, v24);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v30, v32, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v24);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v30, v32, v24);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v30, v24);
  }
  if (*(_DWORD *)(v25 + 84))
    v36 = *(_QWORD *)(v25 + 64);
  else
    v36 = *(_QWORD *)(v25 + 64) + 1;
  memcpy(v30, v32, v36);
LABEL_22:
  if (*(_DWORD *)(v25 + 84))
    v37 = *(_QWORD *)(v25 + 64);
  else
    v37 = *(_QWORD *)(v25 + 64) + 1;
  v38 = (void *)(((v28 | v26) + v37) & v29);
  v39 = (void *)(((v31 | v26) + v37) & v29);
  v40 = v33(v38, 1, v24);
  v41 = v33(v39, 1, v24);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v38, v39, v24);
      return v43;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v38, v24);
    goto LABEL_30;
  }
  if (v41)
  {
LABEL_30:
    memcpy(v38, v39, v37);
    return v43;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v38, v39, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v38, 0, 1, v24);
  return v43;
}

uint64_t sub_237927B2C(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v6 <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v5 + 84);
  v11 = a3[4];
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v10 <= v14)
    v15 = v14;
  else
    v15 = v10;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if (v8)
    v17 = *(_QWORD *)(v7 + 64);
  else
    v17 = *(_QWORD *)(v7 + 64) + 1;
  if (v13)
    v18 = *(_QWORD *)(v12 + 64);
  else
    v18 = *(_QWORD *)(v12 + 64) + 1;
  if (!a2)
    return 0;
  v19 = *(unsigned __int8 *)(v5 + 80);
  v20 = *(_QWORD *)(v5 + 64);
  v21 = *(unsigned __int8 *)(v7 + 80);
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = v17 + v22;
  v24 = a2 - v16;
  if (a2 <= v16)
    goto LABEL_40;
  v25 = ((v18 + v22 + ((v23 + ((v20 + v21 + ((v19 + 32) & ~v19)) & ~v21)) & ~v22)) & ~v22) + v18;
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v28 = ((v24 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      v27 = *(_DWORD *)(a1 + v25);
      if (!v27)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v28 > 0xFF)
    {
      v27 = *(unsigned __int16 *)(a1 + v25);
      if (!*(_WORD *)(a1 + v25))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v28 < 2)
    {
LABEL_40:
      if ((v15 & 0x80000000) == 0)
      {
        v31 = *(_QWORD *)(a1 + 8);
        if (v31 >= 0xFFFFFFFF)
          LODWORD(v31) = -1;
        return (v31 + 1);
      }
      v32 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v19 + 16) & ~v19;
      if (v6 == v16)
        return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v5 + 48))(v32, *(unsigned int *)(v5 + 84), v4);
      v33 = (v32 + v20 + v21) & ~v21;
      if (v9 == v16)
      {
        if (v8 >= 2)
        {
          v34 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v33);
          goto LABEL_52;
        }
      }
      else if (v13 >= 2)
      {
        v34 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v12 + 48))((v23 + v33) & ~v22, *(unsigned int *)(v12 + 84), v11);
LABEL_52:
        if (v34 >= 2)
          return v34 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + v25);
  if (!*(_BYTE *)(a1 + v25))
    goto LABEL_40;
LABEL_31:
  v29 = (v27 - 1) << v26;
  if (v25 > 3)
    v29 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v30 = v25;
    else
      v30 = 4;
    __asm { BR              X11 }
  }
  return v16 + v29 + 1;
}

void sub_237927D94(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  BOOL v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v6 = 0;
  v7 = *(_QWORD *)(a4[2] - 8);
  v8 = *(_QWORD *)(a4[3] - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (*(_DWORD *)(v7 + 84) <= v10)
    v11 = v10;
  else
    v11 = *(_DWORD *)(v7 + 84);
  v12 = *(_QWORD *)(a4[4] - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v11 > v14)
    v14 = v11;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  v16 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v16;
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = v16 + v17;
  v19 = *(_QWORD *)(v12 + 64);
  if (!v13)
    ++v19;
  v20 = ((v19
        + v17
        + ((v18
          + ((*(_QWORD *)(v7 + 64)
            + *(unsigned __int8 *)(v8 + 80)
            + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~v17)) & ~v17)
      + v19;
  v21 = a3 >= v15;
  v22 = a3 - v15;
  if (v22 != 0 && v21)
  {
    if (v20 > 3)
    {
      v6 = 1u;
      if (v15 < a2)
        goto LABEL_27;
      goto LABEL_34;
    }
    v23 = ((v22 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v23))
    {
      v6 = 4u;
      if (v15 < a2)
      {
LABEL_27:
        v24 = ~v15 + a2;
        if (v20 < 4)
        {
          if ((_DWORD)v20)
          {
            v25 = v24 & ~(-1 << (8 * v20));
            bzero(a1, v20);
            if ((_DWORD)v20 == 3)
            {
              *a1 = v25;
              *((_BYTE *)a1 + 2) = BYTE2(v25);
            }
            else if ((_DWORD)v20 == 2)
            {
              *a1 = v25;
            }
            else
            {
              *(_BYTE *)a1 = v25;
            }
          }
        }
        else
        {
          bzero(a1, v20);
          *(_DWORD *)a1 = v24;
        }
        __asm { BR              X10 }
      }
LABEL_34:
      __asm { BR              X25 }
    }
    v6 = v23 > 1;
    if (v23 >= 0x100)
      v6 = 2;
  }
  if (v15 < a2)
    goto LABEL_27;
  goto LABEL_34;
}

void sub_237928034()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23792803C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void type metadata accessor for GaugeDataSource()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t sub_237928094()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379280D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  _QWORD v37[10];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v51 = a2;
  v4 = a1[2];
  v45 = a1[3];
  v5 = sub_237A87E0C();
  v43 = a1[4];
  v6 = sub_237A87E0C();
  v7 = a1[5];
  v40 = a1[6];
  v64 = v40;
  v8 = MEMORY[0x24BDF5578];
  v9 = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v5, &v64);
  v63 = a1[7];
  v10 = MEMORY[0x23B81FA98](v8, v6, &v63);
  v48 = v5;
  v49 = v4;
  *(_QWORD *)&v56 = v4;
  *((_QWORD *)&v56 + 1) = v5;
  v46 = v6;
  v57 = v6;
  v58 = MEMORY[0x24BDF5158];
  v59 = v7;
  v60 = v9;
  v41 = v9;
  v39 = v10;
  v61 = v10;
  v62 = MEMORY[0x24BDF5138];
  v11 = sub_237A8729C();
  v50 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v42 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (uint64_t)v38 - v14;
  v15 = sub_237A87E0C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v38 - v20;
  v47 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  if (!v58)
  {
    sub_2379289EC((uint64_t)&v56);
    goto LABEL_5;
  }
  sub_23787076C((uint64_t)&v56, (uint64_t)v52);
  sub_2379289EC((uint64_t)&v56);
  v22 = v53;
  v23 = v54;
  __swift_project_boxed_opaque_existential_2Tm(v52, v53);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  LOBYTE(v22) = v25;
  v26 = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v52);
  if ((v22 & 1) != 0)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v19, 1, 1, v11);
    MEMORY[0x23B81FA98](MEMORY[0x24BDF3EE8], v11);
    goto LABEL_6;
  }
  v38[2] = v38;
  v52[0] = v24;
  v56 = *(_OWORD *)(v47 + 16);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v38[1] = v37;
  v28 = v49;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v38[0] = v37;
  v30 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  v37[9] = sub_237928A74();
  v37[8] = v39;
  v37[6] = v7;
  v37[7] = v41;
  v37[5] = MEMORY[0x24BEE13C8];
  v37[4] = v46;
  v37[2] = v28;
  v37[3] = v48;
  v37[0] = sub_237928A50;
  v37[1] = v37;
  v31 = (uint64_t)v42;
  sub_237A87290();
  MEMORY[0x23B81FA98](MEMORY[0x24BDF3EE8], v11);
  v32 = v44;
  sub_23799E408(v31, v11, v44);
  v33 = v50;
  v34 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v34(v31, v11);
  sub_237991B00(v32, v11, (uint64_t)v19);
  v34(v32, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v19, 0, 1, v11);
LABEL_6:
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v19, v15);
  v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  v35(v19, v15);
  v55 = MEMORY[0x23B81FA98](MEMORY[0x24BDF3EE8], v11);
  MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v15, &v55);
  sub_237991B00((uint64_t)v21, v15, v51);
  return ((uint64_t (*)(char *, uint64_t))v35)(v21, v15);
}

void sub_2379285FC(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for GaugeDataSource();
}

uint64_t sub_237928668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23799E408(v2 + *(int *)(a1 + 72), v1, v4);
  sub_237991B00(v4, v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
}

void sub_2379286BC()
{
  uint64_t v0;

  v0 = sub_237A87E0C();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for GaugeDataSource();
}

uint64_t sub_23792874C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + *(int *)(a1 + 76);
  *(_QWORD *)(v6 - 136) = v1;
  MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v4, v6 - 136);
  sub_23799E408(v7, v4, v5);
  sub_237991B00(v5, v4, *(_QWORD *)(v6 - 144));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
}

void sub_2379287C8()
{
  uint64_t v0;

  v0 = sub_237A87E0C();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for GaugeDataSource();
}

uint64_t sub_237928858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + *(int *)(a1 + 80);
  *(_QWORD *)(v6 - 136) = v1;
  MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v4, v6 - 136);
  sub_23799E408(v7, v4, v5);
  sub_237991B00(v5, v4, *(_QWORD *)(v6 - 144));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
}

void sub_2379288D4()
{
  uint64_t v0;

  v0 = sub_237A87E0C();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for GaugeDataSource();
}

uint64_t sub_237928964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + *(int *)(a1 + 84);
  *(_QWORD *)(v6 - 136) = v1;
  MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v4, v6 - 136);
  sub_23799E408(v7, v4, v5);
  sub_237991B00(v5, v4, *(_QWORD *)(v6 - 144));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
}

uint64_t sub_2379289EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237928A2C()
{
  return sub_237928A5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379285FC);
}

uint64_t sub_237928A38()
{
  return sub_237928A5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379286BC);
}

uint64_t sub_237928A44()
{
  return sub_237928A5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379287C8);
}

uint64_t sub_237928A50()
{
  return sub_237928A5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379288D4);
}

uint64_t sub_237928A5C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t sub_237928A74()
{
  unint64_t result;

  result = qword_256821F48;
  if (!qword_256821F48)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_256821F48);
  }
  return result;
}

uint64_t sub_237928AB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];
  uint64_t v14;
  uint64_t v15;

  v1 = *a1;
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = sub_237A87E0C();
  v6 = sub_237A87E0C();
  v15 = v3;
  v7 = MEMORY[0x24BDF5578];
  v8 = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v5, &v15);
  v14 = v4;
  v9 = MEMORY[0x23B81FA98](v7, v6, &v14);
  v13[1] = v1;
  v13[2] = v5;
  v13[3] = v6;
  v13[4] = MEMORY[0x24BDF5158];
  v13[5] = v2;
  v13[6] = v8;
  v13[7] = v9;
  v13[8] = MEMORY[0x24BDF5138];
  v10 = sub_237A8729C();
  v11 = sub_237A87E0C();
  v13[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDF3EE8], v10);
  return MEMORY[0x23B81FA98](v7, v11, v13);
}

double static NotificationEdgeInsets.default.getter()
{
  return 15.0;
}

__n128 sub_237928BC4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;

  __asm { FMOV            V0.2D, #15.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

uint64_t LocalNotification.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 LocalNotification.image.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v7;
  *(__n128 *)v1 = v7;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*LocalNotification.image.modify())()
{
  return nullsub_1;
}

uint64_t LocalNotification.userDismissible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t LocalNotification.userDismissible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*LocalNotification.userDismissible.modify())()
{
  return nullsub_1;
}

__n128 LocalNotification.init(image:userDismissible:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = v4;
  *(_BYTE *)(a3 + 48) = a2;
  return result;
}

uint64_t LocalNotification.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(void **)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_BYTE *)(v1 + 32);
  sub_237870090(*(void **)v1, v5, v6, v7, v8);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v3, v5, v6, v7, v8);
  return sub_237A885EC();
}

uint64_t sub_237928D64()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D73694472657375;
  else
    return 0x6567616D69;
}

uint64_t sub_237928DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23792E8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237928DCC()
{
  sub_23792CD7C();
  return sub_237A88718();
}

uint64_t sub_237928DF4()
{
  sub_23792CD7C();
  return sub_237A88724();
}

uint64_t LocalNotification.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821F50);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  v12 = *((_QWORD *)v1 + 5);
  v21 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CD7C();
  sub_237A886B8();
  v16 = v13;
  v17 = v7;
  v18 = v6;
  v19 = v8;
  v20 = v12;
  v22 = 0;
  sub_2378888DC();
  v9 = v14;
  sub_237A882B0();
  if (!v9)
  {
    LOBYTE(v16) = 1;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t LocalNotification.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  sub_237A885EC();
  return sub_237A88610();
}

void LocalNotification.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  int v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821F60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CD7C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v27 = 0;
    sub_237888A0C();
    sub_237A881F0();
    v9 = v20;
    v10 = v21;
    v17 = v25;
    v18 = v23;
    LOBYTE(v20) = 1;
    v19 = v22;
    v26 = v24;
    sub_237870090(v9, v21, v22, v23, v24);
    v11 = sub_237A881C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v11 & 1;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    v14 = v18;
    v13 = v19;
    *(_QWORD *)(a2 + 16) = v19;
    *(_QWORD *)(a2 + 24) = v14;
    v15 = v26;
    *(_BYTE *)(a2 + 32) = v26;
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702E0(v9, v10, v13, v14, v15);
  }
}

void sub_23792921C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  LocalNotification.init(from:)(a1, a2);
}

uint64_t sub_237929230(_QWORD *a1)
{
  return LocalNotification.encode(to:)(a1);
}

uint64_t sub_237929244()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t sub_2379292D4(uint64_t a1)
{
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  return sub_237A885EC();
}

uint64_t sub_237929334()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  sub_237A885EC();
  return sub_237A88610();
}

void Instrument.IndicatorConfiguration.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.IndicatorConfiguration.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.IndicatorConfiguration.style.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = v1[9];
  v11 = v1[10];
  v12 = v1[11];
  v13 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_2378DF934(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, (void (*)(void))sub_237870090);
}

__n128 Instrument.IndicatorConfiguration.style.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v6 = a1[3];
  v7 = a1[2];
  v5 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  v3 = *((_QWORD *)a1 + 11);
  sub_2378DF934(v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], (void (*)(void))sub_2378702E0);
  *(_OWORD *)(v1 + 1) = v9;
  *(_OWORD *)(v1 + 3) = v8;
  *(_OWORD *)(v1 + 5) = v7;
  *(_OWORD *)(v1 + 7) = v6;
  result = v5;
  *(__n128 *)(v1 + 9) = v5;
  v1[11] = v2;
  v1[12] = v3;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.IndicatorConfiguration.presentationEdge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t Instrument.IndicatorConfiguration.presentationEdge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = result & 1;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.presentationEdge.modify())()
{
  return nullsub_1;
}

double Instrument.IndicatorConfiguration.containerInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void Instrument.IndicatorConfiguration.containerInsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[14] = a1;
  v4[15] = a2;
  v4[16] = a3;
  v4[17] = a4;
}

uint64_t (*Instrument.IndicatorConfiguration.containerInsets.modify())()
{
  return nullsub_1;
}

_BYTE *Instrument.IndicatorConfiguration.init(dataIdentifier:style:presentationEdge:containerInsets:)@<X0>(_BYTE *result@<X0>, _OWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v8 = a2[1];
  *(_OWORD *)(a4 + 8) = *a2;
  *(_OWORD *)(a4 + 24) = v8;
  v9 = a2[3];
  *(_OWORD *)(a4 + 40) = a2[2];
  *(_OWORD *)(a4 + 56) = v9;
  v10 = a2[5];
  *(_OWORD *)(a4 + 72) = a2[4];
  *(_BYTE *)a4 = *result;
  *(_OWORD *)(a4 + 88) = v10;
  *(_BYTE *)(a4 + 104) = a3 & 1;
  *(double *)(a4 + 112) = a5;
  *(double *)(a4 + 120) = a6;
  *(double *)(a4 + 128) = a7;
  *(double *)(a4 + 136) = a8;
  return result;
}

uint64_t Instrument.IndicatorConfiguration.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v4 = (void *)v1[1];
  v3 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = ~*((_DWORD *)v1 + 10);
  v8 = (void *)v1[7];
  v9 = v1[8];
  v10 = (void *)v1[9];
  v14 = v1[10];
  v15 = v1[6];
  v12 = v1[12];
  v13 = v1[11];
  v16 = (void *)v1[3];
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  if ((v7 & 0xFE) != 0)
  {
    sub_237870090(v4, v3, v16, v5, v6);
    sub_237870090(v8, v9, v10, v14, v13);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_237A885E0();
    ImageAsset.ImageType.hash(into:)(a1);
    sub_237A885E0();
    sub_2378DF934((uint64_t)v4, v3, (uint64_t)v16, v5, v6, v15, (uint64_t)v8, v9, (uint64_t)v10, v14, v13, v12, (void (*)(void))sub_2378702E0);
  }
  sub_237A8681C();
  sub_237A885EC();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  return sub_237A88604();
}

uint64_t sub_237929790()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379297CC + 4 * byte_237A94C30[*v0]))(0x6E65644961746164, 0xEE00726569666974);
}

uint64_t sub_2379297CC()
{
  return 0x656C797473;
}

unint64_t sub_2379297E0()
{
  return 0xD000000000000010;
}

uint64_t sub_2379297FC()
{
  return 0x656E6961746E6F63;
}

uint64_t sub_237929820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23792E9F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237929844()
{
  sub_23792CDC0();
  return sub_237A88718();
}

uint64_t sub_23792986C()
{
  sub_23792CDC0();
  return sub_237A88724();
}

uint64_t Instrument.IndicatorConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821F68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v28 = *((_QWORD *)v1 + 2);
  v29 = v9;
  v10 = *((_QWORD *)v1 + 3);
  v26 = *((_QWORD *)v1 + 4);
  v27 = v10;
  v25 = *((_QWORD *)v1 + 5);
  v24 = *((_QWORD *)v1 + 6);
  v23 = *((_QWORD *)v1 + 7);
  v22 = *((_QWORD *)v1 + 8);
  v21 = *((_QWORD *)v1 + 9);
  v20 = *((_QWORD *)v1 + 10);
  v19 = *((_QWORD *)v1 + 11);
  v18 = *((_QWORD *)v1 + 12);
  v42 = v1[104];
  v11 = *((_QWORD *)v1 + 14);
  v12 = *((_QWORD *)v1 + 15);
  v13 = *((_QWORD *)v1 + 16);
  v14 = *((_QWORD *)v1 + 17);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CDC0();
  sub_237A886B8();
  LOBYTE(v30) = v8;
  v43 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v15 = v42;
    v30 = v29;
    v31 = v28;
    v32 = v27;
    v33 = v26;
    v34 = v25;
    v35 = v24;
    v36 = v23;
    v37 = v22;
    v38 = v21;
    v39 = v20;
    v40 = v19;
    v41 = v18;
    v43 = 1;
    sub_23792CE04();
    sub_237A882B0();
    LOBYTE(v30) = v15;
    v43 = 2;
    sub_23792CE48();
    sub_237A882B0();
    v30 = v11;
    v31 = v12;
    v32 = v13;
    v33 = v14;
    v43 = 3;
    sub_2378DB308();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.IndicatorConfiguration.hashValue.getter()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _BYTE v6[72];
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v1 = v0[7];
  v12 = v0[6];
  v13 = v1;
  v14 = v0[8];
  v2 = v0[3];
  v8 = v0[2];
  v9 = v2;
  v3 = v0[5];
  v10 = v0[4];
  v11 = v3;
  v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if ((~BYTE8(v8) & 0xFE) != 0)
  {
    sub_237A885E0();
    sub_23792CE8C((uint64_t *)v7, (void (*)(void))sub_237870090);
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
    sub_237A885E0();
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
  }
  sub_237A885E0();
  sub_23792CE8C((uint64_t *)v7, (void (*)(void))sub_2378702E0);
  sub_237A8681C();
  sub_237A885EC();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  return sub_237A88610();
}

uint64_t *Instrument.IndicatorConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char v58;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821F88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CDC0();
  sub_237A88688();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  LOBYTE(v53) = 0;
  sub_237888198();
  sub_237A881F0();
  v9 = v35;
  LOBYTE(v53) = 1;
  sub_23792CEE4();
  sub_237A881F0();
  v57 = v9;
  v10 = v35;
  v11 = v36;
  LOBYTE(v53) = 2;
  v30 = v46;
  v31 = v45;
  v32 = v44;
  v33 = v43;
  v28 = v37;
  v27 = v38;
  v26 = v39;
  v25 = v40;
  v29 = v41;
  v34 = v42;
  sub_2378DF934(v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, (void (*)(void))sub_237870090);
  sub_23792CF28();
  sub_237A881F0();
  HIDWORD(v24) = v35;
  v58 = 3;
  sub_2378DB448();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v53;
  v13 = v54;
  v14 = v55;
  v15 = v56;
  *(_BYTE *)a2 = v57;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  v16 = v28;
  v17 = v27;
  *(_QWORD *)(a2 + 24) = v28;
  *(_QWORD *)(a2 + 32) = v17;
  v18 = v26;
  v19 = v25;
  *(_QWORD *)(a2 + 40) = v26;
  *(_QWORD *)(a2 + 48) = v19;
  v20 = v34;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v20;
  v21 = v32;
  *(_QWORD *)(a2 + 72) = v33;
  *(_QWORD *)(a2 + 80) = v21;
  v22 = v30;
  *(_QWORD *)(a2 + 88) = v31;
  *(_QWORD *)(a2 + 96) = v22;
  *(_BYTE *)(a2 + 104) = BYTE4(v24);
  *(_QWORD *)(a2 + 112) = v12;
  *(_QWORD *)(a2 + 120) = v13;
  *(_QWORD *)(a2 + 128) = v14;
  *(_QWORD *)(a2 + 136) = v15;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  LOBYTE(v35) = v57;
  v36 = v10;
  v37 = v11;
  v38 = v16;
  v39 = v17;
  v40 = v18;
  v41 = v19;
  v42 = v29;
  v43 = v34;
  v44 = v33;
  v45 = v32;
  v46 = v31;
  v47 = v30;
  v48 = BYTE4(v24);
  v49 = v12;
  v50 = v13;
  v51 = v14;
  v52 = v15;
  return sub_23792CE8C(&v35, (void (*)(void))sub_2378702E0);
}

uint64_t *sub_23792A240@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.IndicatorConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23792A254(_QWORD *a1)
{
  return Instrument.IndicatorConfiguration.encode(to:)(a1);
}

uint64_t sub_23792A270()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _BYTE v6[72];
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v1 = v0[7];
  v12 = v0[6];
  v13 = v1;
  v14 = v0[8];
  v2 = v0[3];
  v8 = v0[2];
  v9 = v2;
  v3 = v0[5];
  v10 = v0[4];
  v11 = v3;
  v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if ((~BYTE8(v8) & 0xFE) != 0)
  {
    sub_237A885E0();
    sub_23792CE8C((uint64_t *)v7, (void (*)(void))sub_237870090);
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
    sub_237A885E0();
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
  }
  sub_237A885E0();
  sub_23792CE8C((uint64_t *)v7, (void (*)(void))sub_2378702E0);
  sub_237A8681C();
  sub_237A885EC();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  return sub_237A88610();
}

uint64_t Instrument.IndicatorStyle.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 32);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) == 0)
    return MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(void **)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(void **)(v0 + 48);
  v4 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v6 = *(void **)v0;
  v5 = *(_QWORD *)(v0 + 8);
  v11 = *(void **)v0;
  v7 = *(_BYTE *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237A95640;
  *(_QWORD *)(v2 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v2 + 64) = &protocol witness table for ImageAsset;
  v8 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v3;
  *(_BYTE *)(v8 + 48) = v1;
  *(_QWORD *)(v8 + 56) = v12;
  *(_QWORD *)(v2 + 96) = &type metadata for ImageAsset;
  *(_QWORD *)(v2 + 104) = &protocol witness table for ImageAsset;
  v9 = swift_allocObject();
  *(_QWORD *)(v2 + 72) = v9;
  *(_QWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 24) = v14;
  *(_QWORD *)(v9 + 32) = v15;
  *(_QWORD *)(v9 + 40) = v16;
  *(_BYTE *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v17;
  sub_237870090(v11, v5, v4, v3, v1);
  sub_237870090(v13, v14, v15, v16, v7);
  return v2;
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.assets.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(void **)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 40);
  v14 = *(void **)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 88);
  v6 = *(_BYTE *)(v0 + 32);
  v12 = *(_BYTE *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_237A95640;
  *(_QWORD *)(v7 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v7 + 64) = &protocol witness table for ImageAsset;
  v8 = swift_allocObject();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_BYTE *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v7 + 96) = &type metadata for ImageAsset;
  *(_QWORD *)(v7 + 104) = &protocol witness table for ImageAsset;
  v9 = swift_allocObject();
  *(_QWORD *)(v7 + 72) = v9;
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v15;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v13;
  *(_BYTE *)(v9 + 48) = v12;
  *(_QWORD *)(v9 + 56) = v16;
  sub_237870090(v1, v2, v3, v4, v6);
  sub_237870090(v5, v15, v14, v13, v12);
  return v7;
}

void Instrument.IndicatorStyle.restoreAssets(from:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *((_QWORD *)v1 + 4);
  if ((~*((_DWORD *)v1 + 8) & 0xFELL) != 0)
  {
    v5 = (void *)*((_QWORD *)v1 + 6);
    v6 = (void *)*((_QWORD *)v1 + 8);
    v7 = *((_QWORD *)v1 + 9);
    v8 = *((_QWORD *)v1 + 10);
    v11 = *v1;
    v12 = v1[1];
    v10 = *((_QWORD *)v1 + 5);
    *(_QWORD *)&v13 = v10;
    *((_QWORD *)&v13 + 1) = v5;
    *(_QWORD *)&v14 = *((_QWORD *)v1 + 7);
    *((_QWORD *)&v14 + 1) = v6;
    v9 = *((_QWORD *)v1 + 11);
    v15 = *(_QWORD *)v1;
    sub_237870090(*(void **)v1, *((_QWORD *)v1 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
    sub_237870090(v5, v14, v6, v7, v8);
    ImageAsset.restore(from:)(a1);
    if (v2)
    {
      sub_2378702E0((void *)v11, *((uint64_t *)&v11 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
      sub_2378702E0(v5, v14, v6, v7, v8);
    }
    else
    {
      ImageAsset.restore(from:)(a1);
      sub_2378DF934(v15, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v3, v10, (uint64_t)v5, v14, (uint64_t)v6, v7, v8, v9, (void (*)(void))sub_2378702E0);
      *v1 = v11;
      v1[1] = v12;
      *((_QWORD *)v1 + 4) = v3;
      *(__int128 *)((char *)v1 + 40) = v13;
      *(__int128 *)((char *)v1 + 56) = v14;
      *((_QWORD *)v1 + 9) = v7;
      *((_QWORD *)v1 + 10) = v8;
      *((_QWORD *)v1 + 11) = v9;
    }
  }
}

void Instrument.IndicatorStyle.CriticalConfiguration.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;

  ImageAsset.restore(from:)(a1);
  if (!v1)
    ImageAsset.restore(from:)(a1);
}

BOOL Instrument.IndicatorStyle.rendersLocally.getter()
{
  uint64_t v0;

  return (~*(_DWORD *)(v0 + 32) & 0xFELL) != 0;
}

uint64_t Instrument.IndicatorStyle.name.getter()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 32) & 0xFELL) == 0xFE)
    return 0x6567617373656DLL;
  else
    return 0x6C61636974697263;
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.closeButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.closeButton.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v7;
  *(__n128 *)v1 = v7;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.IndicatorStyle.CriticalConfiguration.closeButton.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(void **)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80));
  result = v7;
  *(__n128 *)(v1 + 48) = v7;
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v3;
  *(_BYTE *)(v1 + 80) = v4;
  *(_QWORD *)(v1 + 88) = v5;
  return result;
}

uint64_t (*Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.modify())()
{
  return nullsub_1;
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.init(closeButton:focusedCloseButton:defaultState:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  __n128 result;
  __int128 v12;

  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v10;
  *(_BYTE *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = v7;
  result = *(__n128 *)a2;
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 64) = v12;
  *(_BYTE *)(a3 + 80) = v8;
  *(_QWORD *)(a3 + 88) = v9;
  return result;
}

void Instrument.IndicatorStyle.CriticalConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v6 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(void **)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 72);
  v12 = *(void **)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 32);
  v10 = *(_BYTE *)(v1 + 80);
  sub_237870090(*(void **)v1, v4, v6, v5, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v3, v4, v6, v5, v9);
  sub_237870090(v12, v11, v7, v8, v10);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v12, v11, v7, v8, v10);
}

uint64_t sub_23792ABC8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x74754265736F6C63;
}

uint64_t sub_23792AC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23792EBE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23792AC34()
{
  sub_23792CF98();
  return sub_237A88718();
}

uint64_t sub_23792AC5C()
{
  sub_23792CF98();
  return sub_237A88724();
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  char v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FA0);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  v9 = *((_QWORD *)v1 + 5);
  v18 = *((_QWORD *)v1 + 6);
  v19 = v9;
  v10 = *((_QWORD *)v1 + 7);
  v16 = *((_QWORD *)v1 + 8);
  v17 = v10;
  v11 = *((_QWORD *)v1 + 9);
  v28 = *((unsigned __int8 *)v1 + 80);
  v14 = *((_QWORD *)v1 + 11);
  v15 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CF98();
  sub_237A886B8();
  v23 = v20;
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v27 = v19;
  v29 = 0;
  sub_2378888DC();
  v12 = v21;
  sub_237A882B0();
  if (!v12)
  {
    *(_QWORD *)&v23 = v18;
    *((_QWORD *)&v23 + 1) = v17;
    v24 = v16;
    v25 = v15;
    v26 = v28;
    v27 = v14;
    v29 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v5, v3);
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  return sub_237A88610();
}

void Instrument.IndicatorStyle.CriticalConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  int v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CF98();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v40 = 0;
    sub_237888A0C();
    sub_237A881F0();
    v9 = v34;
    v29 = v38;
    v30 = v36;
    v40 = 1;
    v31 = v35;
    v32 = v33;
    v39 = v37;
    sub_237870090(v33, v34, v35, v36, v37);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v33;
    v23 = v33;
    v12 = v35;
    v11 = v36;
    v25 = v35;
    v26 = v38;
    v27 = v34;
    v13 = v37;
    v24 = v37;
    v14 = v39;
    sub_237870090(v32, v9, v31, v30, v39);
    v15 = v10;
    v16 = v27;
    v28 = v11;
    sub_237870090(v15, v27, v12, v11, v13);
    v18 = v31;
    v17 = v32;
    v19 = v30;
    sub_2378702E0(v32, v9, v31, v30, v14);
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v9;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v19;
    *(_BYTE *)(a2 + 32) = v14;
    v20 = v23;
    *(_QWORD *)(a2 + 40) = v29;
    *(_QWORD *)(a2 + 48) = v20;
    *(_QWORD *)(a2 + 56) = v16;
    v21 = v25;
    v22 = v28;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v22;
    LOBYTE(v17) = v24;
    *(_BYTE *)(a2 + 80) = v24;
    *(_QWORD *)(a2 + 88) = v26;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702E0(v32, v9, v31, v19, v14);
    sub_2378702E0(v20, v27, v21, v28, (char)v17);
  }
}

uint64_t sub_23792B1C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(void **)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 40);
  v14 = *(void **)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 88);
  v6 = *(_BYTE *)(v0 + 32);
  v12 = *(_BYTE *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_237A95640;
  *(_QWORD *)(v7 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v7 + 64) = &protocol witness table for ImageAsset;
  v8 = swift_allocObject();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_BYTE *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v7 + 96) = &type metadata for ImageAsset;
  *(_QWORD *)(v7 + 104) = &protocol witness table for ImageAsset;
  v9 = swift_allocObject();
  *(_QWORD *)(v7 + 72) = v9;
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v15;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v13;
  *(_BYTE *)(v9 + 48) = v12;
  *(_QWORD *)(v9 + 56) = v16;
  sub_237870090(v1, v2, v3, v4, v6);
  sub_237870090(v5, v15, v14, v13, v12);
  return v7;
}

void sub_23792B314(_QWORD *a1)
{
  uint64_t v1;

  ImageAsset.restore(from:)(a1);
  if (!v1)
    ImageAsset.restore(from:)(a1);
}

void sub_23792B344(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Instrument.IndicatorStyle.CriticalConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23792B358(_QWORD *a1)
{
  return Instrument.IndicatorStyle.CriticalConfiguration.encode(to:)(a1);
}

uint64_t sub_23792B370(uint64_t a1)
{
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)(a1);
  return sub_237A885E0();
}

uint64_t sub_23792B410()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t Instrument.IndicatorStyle.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 32);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) == 0)
    return sub_237A885E0();
  v15 = *(_QWORD *)(v1 + 88);
  v5 = *(void **)(v1 + 64);
  v12 = *(_QWORD *)(v1 + 72);
  v13 = *(_QWORD *)(v1 + 80);
  v7 = *(void **)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v14 = *(_QWORD *)(v1 + 40);
  v8 = *(void **)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v11 = *(void **)v1;
  v10 = *(_QWORD *)(v1 + 8);
  sub_237A885E0();
  sub_237870090(v11, v10, v8, v9, v3);
  sub_237870090(v7, v6, v5, v12, v13);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  return sub_2378DF934((uint64_t)v11, v10, (uint64_t)v8, v9, v3, v14, (uint64_t)v7, v6, (uint64_t)v5, v12, v13, v15, (void (*)(void))sub_2378702E0);
}

uint64_t sub_23792B634()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567617373656DLL;
  else
    return 0x6C61636974697263;
}

uint64_t sub_23792B670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23792ECE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23792B694()
{
  sub_23792CFDC();
  return sub_237A88718();
}

uint64_t sub_23792B6BC()
{
  sub_23792CFDC();
  return sub_237A88724();
}

uint64_t sub_23792B6E4()
{
  sub_23792D064();
  return sub_237A88718();
}

uint64_t sub_23792B70C()
{
  sub_23792D064();
  return sub_237A88724();
}

uint64_t sub_23792B734()
{
  sub_23792D020();
  return sub_237A88718();
}

uint64_t sub_23792B75C()
{
  sub_23792D020();
  return sub_237A88724();
}

uint64_t Instrument.IndicatorStyle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FB8);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FC0);
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FC8);
  v41 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(void **)v1;
  v8 = *(_QWORD *)(v1 + 8);
  v39 = *(void **)(v1 + 16);
  v40 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v37 = *(_QWORD *)(v1 + 40);
  v38 = v9;
  v11 = *(void **)(v1 + 48);
  v35 = *(_QWORD *)(v1 + 56);
  v36 = v11;
  v34 = *(void **)(v1 + 64);
  v33 = *(_QWORD *)(v1 + 72);
  v32 = *(_QWORD *)(v1 + 80);
  v28 = *(_QWORD *)(v1 + 88);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23792CFDC();
  sub_237A886B8();
  if ((~(_BYTE)v10 & 0xFE) != 0)
  {
    LOBYTE(v43) = 0;
    v14 = v39;
    v15 = v40;
    v16 = v38;
    sub_237870090(v42, v40, v39, v38, v10);
    v17 = v36;
    v18 = v33;
    v25 = v10;
    sub_237870090(v36, v35, v34, v33, v32);
    sub_23792D064();
    v19 = v26;
    sub_237A88220();
    v43 = v42;
    v44 = v15;
    v45 = v14;
    v46 = v16;
    v47 = v10;
    v48 = v37;
    v49 = v17;
    v20 = v35;
    v21 = (uint64_t)v34;
    v50 = v35;
    v51 = v34;
    v52 = v18;
    v22 = v32;
    v53 = v32;
    v23 = v28;
    v54 = v28;
    sub_23792D0A8();
    v24 = v31;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v24);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v55);
    return sub_2378DF934((uint64_t)v42, v40, (uint64_t)v39, v38, v25, v37, (uint64_t)v36, v20, v21, v33, v22, v23, (void (*)(void))sub_2378702E0);
  }
  else
  {
    LOBYTE(v43) = 1;
    sub_23792D020();
    v12 = v55;
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v7, v12);
  }
}

uint64_t Instrument.IndicatorStyle.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[80];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = ~*(_DWORD *)(v0 + 32);
  v7 = *(void **)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 72);
  v12 = *(void **)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  sub_237A885D4();
  sub_237A885E0();
  if ((v6 & 0xFE) != 0)
  {
    sub_237870090(v1, v2, v3, v4, v5);
    sub_237870090(v7, v13, v12, v8, v10);
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_237A885E0();
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_237A885E0();
    sub_2378DF934((uint64_t)v1, v2, (uint64_t)v3, v4, v5, v14, (uint64_t)v7, v13, (uint64_t)v12, v8, v10, v9, (void (*)(void))sub_2378702E0);
  }
  return sub_237A88610();
}

uint64_t Instrument.IndicatorStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  unsigned __int8 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;

  v33 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FF0);
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821FF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822000);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_23792CFDC();
  v13 = v45;
  sub_237A88688();
  if (v13)
    goto LABEL_9;
  v31 = v5;
  v14 = v34;
  v15 = v35;
  v45 = v9;
  v16 = sub_237A881FC();
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v25 = sub_237A87FB0();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v27 = &type metadata for Instrument.IndicatorStyle;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
LABEL_9:
    v28 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_2Tm(v28);
  }
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    LOBYTE(v37) = 1;
    sub_23792D020();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0uLL;
    v21 = 254;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
  }
  else
  {
    LOBYTE(v37) = 0;
    sub_23792D064();
    sub_237A88154();
    sub_23792D0EC();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
    v20 = v37;
    v22 = v38;
    v21 = v39;
    v23 = v40;
    v24 = v41;
    v17 = v42;
    v18 = v43;
    v19 = v44;
  }
  v28 = (uint64_t)v36;
  v30 = v33;
  *v33 = v20;
  v30[1] = v22;
  *((_QWORD *)v30 + 4) = v21;
  *(_OWORD *)((char *)v30 + 40) = v23;
  *(_OWORD *)((char *)v30 + 56) = v24;
  *((_QWORD *)v30 + 9) = v17;
  *((_QWORD *)v30 + 10) = v18;
  *((_QWORD *)v30 + 11) = v19;
  return __swift_destroy_boxed_opaque_existential_2Tm(v28);
}

uint64_t sub_23792C034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 32);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) == 0)
    return MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(void **)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(void **)(v0 + 48);
  v4 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v6 = *(void **)v0;
  v5 = *(_QWORD *)(v0 + 8);
  v11 = *(void **)v0;
  v7 = *(_BYTE *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237A95640;
  *(_QWORD *)(v2 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v2 + 64) = &protocol witness table for ImageAsset;
  v8 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v3;
  *(_BYTE *)(v8 + 48) = v1;
  *(_QWORD *)(v8 + 56) = v12;
  *(_QWORD *)(v2 + 96) = &type metadata for ImageAsset;
  *(_QWORD *)(v2 + 104) = &protocol witness table for ImageAsset;
  v9 = swift_allocObject();
  *(_QWORD *)(v2 + 72) = v9;
  *(_QWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 24) = v14;
  *(_QWORD *)(v9 + 32) = v15;
  *(_QWORD *)(v9 + 40) = v16;
  *(_BYTE *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v17;
  sub_237870090(v11, v5, v4, v3, v1);
  sub_237870090(v13, v14, v15, v16, v7);
  return v2;
}

void sub_23792C198(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *((_QWORD *)v1 + 4);
  if ((~*((_DWORD *)v1 + 8) & 0xFELL) != 0)
  {
    v5 = (void *)*((_QWORD *)v1 + 6);
    v6 = (void *)*((_QWORD *)v1 + 8);
    v7 = *((_QWORD *)v1 + 9);
    v8 = *((_QWORD *)v1 + 10);
    v11 = *v1;
    v12 = v1[1];
    v10 = *((_QWORD *)v1 + 5);
    *(_QWORD *)&v13 = v10;
    *((_QWORD *)&v13 + 1) = v5;
    *(_QWORD *)&v14 = *((_QWORD *)v1 + 7);
    *((_QWORD *)&v14 + 1) = v6;
    v9 = *((_QWORD *)v1 + 11);
    v15 = *(_QWORD *)v1;
    sub_237870090(*(void **)v1, *((_QWORD *)v1 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
    sub_237870090(v5, v14, v6, v7, v8);
    ImageAsset.restore(from:)(a1);
    if (v2)
    {
      sub_2378702E0((void *)v11, *((uint64_t *)&v11 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
      sub_2378702E0(v5, v14, v6, v7, v8);
    }
    else
    {
      ImageAsset.restore(from:)(a1);
      sub_2378DF934(v15, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v3, v10, (uint64_t)v5, v14, (uint64_t)v6, v7, v8, v9, (void (*)(void))sub_2378702E0);
      *v1 = v11;
      v1[1] = v12;
      *((_QWORD *)v1 + 4) = v3;
      *(__int128 *)((char *)v1 + 40) = v13;
      *(__int128 *)((char *)v1 + 56) = v14;
      *((_QWORD *)v1 + 9) = v7;
      *((_QWORD *)v1 + 10) = v8;
      *((_QWORD *)v1 + 11) = v9;
    }
  }
}

uint64_t sub_23792C338@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.IndicatorStyle.init(from:)(a1, a2);
}

uint64_t sub_23792C34C(_QWORD *a1)
{
  return Instrument.IndicatorStyle.encode(to:)(a1);
}

uint64_t sub_23792C364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 32);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) == 0)
    return sub_237A885E0();
  v15 = *(_QWORD *)(v1 + 88);
  v5 = *(void **)(v1 + 64);
  v12 = *(_QWORD *)(v1 + 72);
  v13 = *(_QWORD *)(v1 + 80);
  v7 = *(void **)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v14 = *(_QWORD *)(v1 + 40);
  v8 = *(void **)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v11 = *(void **)v1;
  v10 = *(_QWORD *)(v1 + 8);
  sub_237A885E0();
  sub_237870090(v11, v10, v8, v9, v3);
  sub_237870090(v7, v6, v5, v12, v13);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  return sub_2378DF934((uint64_t)v11, v10, (uint64_t)v8, v9, v3, v14, (uint64_t)v7, v6, (uint64_t)v5, v12, v13, v15, (void (*)(void))sub_2378702E0);
}

uint64_t sub_23792C4C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[80];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = ~*(_DWORD *)(v0 + 32);
  v7 = *(void **)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 72);
  v12 = *(void **)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  sub_237A885D4();
  sub_237A885E0();
  if ((v6 & 0xFE) != 0)
  {
    sub_237870090(v1, v2, v3, v4, v5);
    sub_237870090(v7, v13, v12, v8, v10);
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_237A885E0();
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_237A885E0();
    sub_2378DF934((uint64_t)v1, v2, (uint64_t)v3, v4, v5, v14, (uint64_t)v7, v13, (uint64_t)v12, v8, v10, v9, (void (*)(void))sub_2378702E0);
  }
  return sub_237A88610();
}

uint64_t _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO21CriticalConfigurationV2eeoiySbAG_AGtFZ_0(__int128 *a1, __int128 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v2 = *((_BYTE *)a1 + 32);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_QWORD *)a1 + 8);
  v18 = *((_QWORD *)a1 + 7);
  v19 = *((_QWORD *)a1 + 6);
  v5 = *((_QWORD *)a1 + 9);
  v6 = *((_BYTE *)a1 + 80);
  v7 = *((_BYTE *)a2 + 32);
  v8 = *((_QWORD *)a2 + 5);
  v9 = *((_QWORD *)a2 + 6);
  v10 = *((_QWORD *)a2 + 7);
  v11 = *((_QWORD *)a2 + 8);
  v12 = *((_QWORD *)a2 + 9);
  v13 = *((_BYTE *)a2 + 80);
  v20 = *((_QWORD *)a2 + 11);
  v21 = *((_QWORD *)a1 + 11);
  v14 = a1[1];
  v25 = *a1;
  v26 = v14;
  v27 = v2;
  v15 = a2[1];
  v22 = *a2;
  v23 = v15;
  v24 = v7;
  v16 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v25, (uint64_t)&v22);
  result = 0;
  if ((v16 & 1) != 0 && v3 == v8)
  {
    *(_QWORD *)&v25 = v19;
    *((_QWORD *)&v25 + 1) = v18;
    *(_QWORD *)&v26 = v4;
    *((_QWORD *)&v26 + 1) = v5;
    v27 = v6;
    *(_QWORD *)&v22 = v9;
    *((_QWORD *)&v22 + 1) = v10;
    *(_QWORD *)&v23 = v11;
    *((_QWORD *)&v23 + 1) = v12;
    v24 = v13;
    return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v25, (uint64_t)&v22) & (v21 == v20);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  _QWORD v96[25];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v8 = ~*((_DWORD *)a1 + 8);
  v9 = a1[6];
  v10 = a1[7];
  v11 = a1[8];
  v12 = a1[9];
  v14 = a1[10];
  v13 = a1[11];
  v15 = *a2;
  v16 = a2[1];
  v17 = a2[2];
  v18 = a2[3];
  v20 = a2[4];
  v19 = a2[5];
  v22 = a2[6];
  v21 = a2[7];
  v23 = a2[8];
  v24 = a2[9];
  v26 = a2[10];
  v25 = a2[11];
  v96[0] = v2;
  v96[1] = v3;
  v96[2] = v4;
  v96[3] = v5;
  v96[4] = v7;
  v96[5] = v6;
  v96[6] = v9;
  v96[7] = v10;
  v96[8] = v11;
  v96[9] = v12;
  v96[10] = v14;
  v96[11] = v13;
  v27 = v15;
  v96[12] = v15;
  v96[13] = v16;
  v28 = v16;
  v96[14] = v17;
  v96[15] = v18;
  v96[16] = v20;
  v96[17] = v19;
  v29 = v22;
  v96[18] = v22;
  v30 = v21;
  v96[19] = v21;
  v96[20] = v23;
  v96[21] = v24;
  v31 = v20 & 0xFE;
  v96[22] = v26;
  v96[23] = v25;
  if ((v8 & 0xFE) != 0)
  {
    if (v31 != 254)
    {
      *(_QWORD *)&v85 = v2;
      *((_QWORD *)&v85 + 1) = v3;
      v86 = v4;
      v87 = v5;
      v88 = v7;
      v89 = v6;
      v90 = v9;
      v91 = v10;
      v92 = v11;
      v93 = v12;
      v94 = v14;
      v95 = v13;
      *(_QWORD *)&v74 = v27;
      *((_QWORD *)&v74 + 1) = v16;
      v56 = v16;
      v57 = v27;
      v75 = v17;
      v76 = v18;
      v77 = v20;
      v78 = v19;
      v79 = v29;
      v54 = v21;
      v55 = v29;
      v80 = v21;
      v81 = v23;
      v82 = v24;
      v83 = v26;
      v84 = v25;
      v52 = v25;
      v50 = v23;
      v71 = v13;
      v73 = v23;
      v39 = v27;
      v53 = v25;
      v40 = v16;
      v41 = v4;
      v58 = v9;
      v59 = v4;
      v62 = v6;
      v63 = v5;
      v42 = v13;
      v43 = v29;
      v60 = v11;
      v61 = v10;
      v44 = v21;
      v45 = v2;
      v68 = v2;
      v69 = v3;
      v46 = v3;
      v47 = v12;
      v66 = v19;
      v67 = v12;
      v64 = v17;
      v65 = v18;
      v48 = v14;
      sub_2378DF934(v39, v40, v17, v18, v20, v19, v43, v44, v50, v24, v26, v52, (void (*)(void))sub_237870090);
      sub_2378DF934(v45, v46, v41, v63, v7, v62, v58, v61, v60, v47, v48, v42, (void (*)(void))sub_237870090);
      sub_2378DF934(v68, v69, v59, v63, v7, v62, v58, v61, v60, v67, v48, v71, (void (*)(void))sub_237870090);
      sub_2378DF934(v57, v56, v64, v65, v20, v66, v55, v54, v73, v24, v26, v53, (void (*)(void))sub_237870090);
      v32 = _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO21CriticalConfigurationV2eeoiySbAG_AGtFZ_0(&v85, &v74);
      sub_23792EDD8((uint64_t)v96);
      sub_2378DF934(v57, v56, v64, v65, v20, v66, v55, v54, v73, v24, v26, v53, (void (*)(void))sub_2378702E0);
      sub_2378DF934(v68, v69, v59, v63, v7, v62, v58, v61, v60, v67, v48, v71, (void (*)(void))sub_2378702E0);
      return v32 & 1;
    }
    goto LABEL_5;
  }
  if (v31 != 254)
  {
LABEL_5:
    v51 = v13;
    v70 = v20;
    v72 = v23;
    v33 = v25;
    v34 = v7;
    v35 = v17;
    v36 = v18;
    v37 = v29;
    v38 = v19;
    sub_2378DF934(v2, v3, v4, v5, v34, v6, v9, v10, v11, v12, v14, v51, (void (*)(void))sub_237870090);
    sub_2378DF934(v27, v28, v35, v36, v70, v38, v37, v30, v72, v24, v26, v33, (void (*)(void))sub_237870090);
    sub_23792EDD8((uint64_t)v96);
    v32 = 0;
    return v32 & 1;
  }
  sub_23792EDD8((uint64_t)v96);
  v32 = 1;
  return v32 & 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV22IndicatorConfigurationV2eeoiySbAE_AEtFZ_0(uint64_t a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[12];
  uint64_t v35[13];

  v32 = *(_QWORD *)(a1 + 16);
  v33 = *(_QWORD *)(a1 + 8);
  v30 = *(_QWORD *)(a1 + 32);
  v31 = *(_QWORD *)(a1 + 24);
  v28 = *(_QWORD *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 40);
  v26 = *(_QWORD *)(a1 + 64);
  v27 = *(_QWORD *)(a1 + 56);
  v24 = *(_QWORD *)(a1 + 80);
  v25 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 88);
  v2 = *a2;
  v3 = *((_QWORD *)a2 + 1);
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  v6 = *((_QWORD *)a2 + 4);
  v7 = *((_QWORD *)a2 + 5);
  v8 = *((_QWORD *)a2 + 6);
  v9 = *((_QWORD *)a2 + 7);
  v20 = *((_QWORD *)a2 + 9);
  v21 = *((_QWORD *)a2 + 8);
  v18 = *((_QWORD *)a2 + 11);
  v19 = *((_QWORD *)a2 + 10);
  v17 = *((_QWORD *)a2 + 12);
  LOBYTE(v35[0]) = *(_BYTE *)a1;
  LOBYTE(v34[0]) = v2;
  v10 = InstrumentDataIdentifier.rawValue.getter();
  v12 = v11;
  if (v10 == InstrumentDataIdentifier.rawValue.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  v35[0] = v33;
  v35[1] = v32;
  v35[2] = v31;
  v35[3] = v30;
  v35[4] = v29;
  v35[5] = v28;
  v35[6] = v27;
  v35[7] = v26;
  v35[8] = v25;
  v35[9] = v24;
  v35[10] = v23;
  v35[11] = v22;
  v34[0] = v3;
  v34[1] = v4;
  v34[2] = v5;
  v34[3] = v6;
  v34[4] = v7;
  v34[5] = v8;
  v34[6] = v9;
  v34[7] = v21;
  v34[8] = v20;
  v34[9] = v19;
  v34[10] = v18;
  v34[11] = v17;
  if ((_s14CarPlayAssetUI10InstrumentV14IndicatorStyleO2eeoiySbAE_AEtFZ_0(v35, v34) & 1) != 0)
  {
    v15 = sub_237A8681C();
    if (v15 == sub_237A8681C())
      return sub_237A8678C();
  }
  return 0;
}

uint64_t _s14CarPlayAssetUI17LocalNotificationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[2];
  char v12;
  _OWORD v13[2];
  char v14;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(unsigned __int8 *)(a1 + 48);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(unsigned __int8 *)(a2 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v8;
  v14 = v2;
  v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  v12 = v5;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v11) & (v3 == v6) & (v4 ^ v7 ^ 1);
}

unint64_t sub_23792CD7C()
{
  unint64_t result;

  result = qword_256821F58;
  if (!qword_256821F58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A955EC, &type metadata for LocalNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256821F58);
  }
  return result;
}

unint64_t sub_23792CDC0()
{
  unint64_t result;

  result = qword_256821F70;
  if (!qword_256821F70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9559C, &_s22IndicatorConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821F70);
  }
  return result;
}

unint64_t sub_23792CE04()
{
  unint64_t result;

  result = qword_256821F78;
  if (!qword_256821F78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle, &type metadata for Instrument.IndicatorStyle);
    atomic_store(result, (unint64_t *)&qword_256821F78);
  }
  return result;
}

unint64_t sub_23792CE48()
{
  unint64_t result;

  result = qword_256821F80;
  if (!qword_256821F80)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEBDB0], MEMORY[0x24BDEBDA8]);
    atomic_store(result, (unint64_t *)&qword_256821F80);
  }
  return result;
}

uint64_t *sub_23792CE8C(uint64_t *a1, void (*a2)(void))
{
  sub_2378DF934(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a2);
  return a1;
}

unint64_t sub_23792CEE4()
{
  unint64_t result;

  result = qword_256821F90;
  if (!qword_256821F90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle, &type metadata for Instrument.IndicatorStyle);
    atomic_store(result, (unint64_t *)&qword_256821F90);
  }
  return result;
}

unint64_t sub_23792CF28()
{
  unint64_t result;

  result = qword_256821F98;
  if (!qword_256821F98)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEBDC0], MEMORY[0x24BDEBDA8]);
    atomic_store(result, (unint64_t *)&qword_256821F98);
  }
  return result;
}

uint64_t sub_23792CF6C()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

unint64_t sub_23792CF98()
{
  unint64_t result;

  result = qword_256821FA8;
  if (!qword_256821FA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9554C, &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821FA8);
  }
  return result;
}

unint64_t sub_23792CFDC()
{
  unint64_t result;

  result = qword_256821FD0;
  if (!qword_256821FD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A954FC, &_s14IndicatorStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821FD0);
  }
  return result;
}

unint64_t sub_23792D020()
{
  unint64_t result;

  result = qword_256821FD8;
  if (!qword_256821FD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A954AC, &_s14IndicatorStyleO17MessageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821FD8);
  }
  return result;
}

unint64_t sub_23792D064()
{
  unint64_t result;

  result = qword_256821FE0;
  if (!qword_256821FE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9545C, &_s14IndicatorStyleO18CriticalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256821FE0);
  }
  return result;
}

unint64_t sub_23792D0A8()
{
  unint64_t result;

  result = qword_256821FE8;
  if (!qword_256821FE8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle.CriticalConfiguration, &type metadata for Instrument.IndicatorStyle.CriticalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256821FE8);
  }
  return result;
}

unint64_t sub_23792D0EC()
{
  unint64_t result;

  result = qword_256822008;
  if (!qword_256822008)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle.CriticalConfiguration, &type metadata for Instrument.IndicatorStyle.CriticalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822008);
  }
  return result;
}

unint64_t sub_23792D13C()
{
  unint64_t result;

  result = qword_256822010;
  if (!qword_256822010)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEB058], MEMORY[0x24BDEB050]);
    atomic_store(result, (unint64_t *)&qword_256822010);
  }
  return result;
}

unint64_t sub_23792D184()
{
  unint64_t result;

  result = qword_256822048;
  if (!qword_256822048)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LocalNotification, &type metadata for LocalNotification);
    atomic_store(result, (unint64_t *)&qword_256822048);
  }
  return result;
}

unint64_t sub_23792D1CC()
{
  unint64_t result;

  result = qword_256822050;
  if (!qword_256822050)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorConfiguration, &type metadata for Instrument.IndicatorConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822050);
  }
  return result;
}

unint64_t sub_23792D214()
{
  unint64_t result;

  result = qword_256822058;
  if (!qword_256822058)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle.CriticalConfiguration, &type metadata for Instrument.IndicatorStyle.CriticalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822058);
  }
  return result;
}

unint64_t sub_23792D25C()
{
  unint64_t result;

  result = qword_256822060;
  if (!qword_256822060)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorStyle, &type metadata for Instrument.IndicatorStyle);
    atomic_store(result, (unint64_t *)&qword_256822060);
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationEdgeInsets()
{
  return &type metadata for NotificationEdgeInsets;
}

void destroy for LocalNotification(uint64_t a1)
{
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for LocalNotification(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for LocalNotification(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalNotification(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v5, v6, v7, v8, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalNotification(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalNotification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalNotification()
{
  return &type metadata for LocalNotification;
}

void _s22IndicatorConfigurationVwxx(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 40) & 0xFELL) != 0)
  {
    sub_2378702E0(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    sub_2378702E0(*(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  }
}

uint64_t _s22IndicatorConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __int128 v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  if ((~*(_DWORD *)(a2 + 40) & 0xFELL) != 0)
  {
    v8 = *(void **)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(void **)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    sub_237870090(v8, v9, v10, v11, v4);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v4;
    v12 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v13 = *(_QWORD *)(a2 + 64);
    v14 = *(void **)(a2 + 72);
    v15 = *(_QWORD *)(a2 + 80);
    LOBYTE(v11) = *(_BYTE *)(a2 + 88);
    sub_237870090(v12, v13, v14, v15, v11);
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 80) = v15;
    *(_BYTE *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v5;
    v6 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v6;
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v16;
  return a1;
}

uint64_t _s22IndicatorConfigurationVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char v41;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = v6 & 0xFE;
  if ((~*(_DWORD *)(a1 + 40) & 0xFELL) != 0)
  {
    if (v7 == 254)
    {
      sub_23792D810(a1 + 8);
      v12 = v5[1];
      *v4 = *v5;
      v4[1] = v12;
      v13 = v5[5];
      v15 = v5[2];
      v14 = v5[3];
      v4[4] = v5[4];
      v4[5] = v13;
      v4[2] = v15;
      v4[3] = v14;
      goto LABEL_9;
    }
    v24 = *(void **)(a2 + 8);
    v25 = *(_QWORD *)(a2 + 16);
    v26 = *(void **)(a2 + 24);
    v27 = *(_QWORD *)(a2 + 32);
    sub_237870090(v24, v25, v26, v27, v6);
    v28 = *(void **)(a1 + 8);
    v29 = *(_QWORD *)(a1 + 16);
    v30 = *(void **)(a1 + 24);
    v31 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 8) = v24;
    *(_QWORD *)(a1 + 16) = v25;
    *(_QWORD *)(a1 + 24) = v26;
    *(_QWORD *)(a1 + 32) = v27;
    v32 = *(_BYTE *)(a1 + 40);
    *(_BYTE *)(a1 + 40) = v6;
    sub_2378702E0(v28, v29, v30, v31, v32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v33 = *(void **)(a2 + 56);
    v34 = *(_QWORD *)(a2 + 64);
    v35 = *(void **)(a2 + 72);
    v36 = *(_QWORD *)(a2 + 80);
    LOBYTE(v27) = *(_BYTE *)(a2 + 88);
    sub_237870090(v33, v34, v35, v36, v27);
    v37 = *(void **)(a1 + 56);
    v38 = *(_QWORD *)(a1 + 64);
    v39 = *(void **)(a1 + 72);
    v40 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 56) = v33;
    *(_QWORD *)(a1 + 64) = v34;
    *(_QWORD *)(a1 + 72) = v35;
    *(_QWORD *)(a1 + 80) = v36;
    v41 = *(_BYTE *)(a1 + 88);
    *(_BYTE *)(a1 + 88) = v27;
    sub_2378702E0(v37, v38, v39, v40, v41);
LABEL_8:
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    goto LABEL_9;
  }
  if (v7 != 254)
  {
    v16 = *(void **)(a2 + 8);
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(void **)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 32);
    sub_237870090(v16, v17, v18, v19, v6);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    *(_BYTE *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v20 = *(void **)(a2 + 56);
    v21 = *(_QWORD *)(a2 + 64);
    v22 = *(void **)(a2 + 72);
    v23 = *(_QWORD *)(a2 + 80);
    LOBYTE(v19) = *(_BYTE *)(a2 + 88);
    sub_237870090(v20, v21, v22, v23, v19);
    *(_QWORD *)(a1 + 56) = v20;
    *(_QWORD *)(a1 + 64) = v21;
    *(_QWORD *)(a1 + 72) = v22;
    *(_QWORD *)(a1 + 80) = v23;
    *(_BYTE *)(a1 + 88) = v19;
    goto LABEL_8;
  }
  v8 = *(_OWORD *)(a2 + 24);
  *v4 = *v5;
  *(_OWORD *)(a1 + 24) = v8;
  v9 = *(_OWORD *)(a2 + 40);
  v10 = *(_OWORD *)(a2 + 56);
  v11 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v11;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v10;
LABEL_9:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t sub_23792D810(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822068);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s22IndicatorConfigurationVwta(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  __int128 v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a1 + 40);
  if ((~(_BYTE)v6 & 0xFE) != 0)
  {
    v7 = *(_QWORD *)(a2 + 40);
    if ((~*(_DWORD *)(a2 + 40) & 0xFELL) != 0)
    {
      v11 = *(void **)(a1 + 8);
      v12 = *(_QWORD *)(a1 + 16);
      v13 = *(void **)(a1 + 24);
      v14 = *(_QWORD *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = v7;
      sub_2378702E0(v11, v12, v13, v14, v6);
      v15 = *(_QWORD *)(a2 + 80);
      v16 = *(_BYTE *)(a2 + 88);
      v17 = *(void **)(a1 + 56);
      v18 = *(_QWORD *)(a1 + 64);
      v19 = *(void **)(a1 + 72);
      v20 = *(_QWORD *)(a1 + 80);
      v21 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v21;
      *(_QWORD *)(a1 + 80) = v15;
      v22 = *(_BYTE *)(a1 + 88);
      *(_BYTE *)(a1 + 88) = v16;
      sub_2378702E0(v17, v18, v19, v20, v22);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      goto LABEL_6;
    }
    sub_23792D810(a1 + 8);
  }
  v8 = v5[3];
  v4[2] = v5[2];
  v4[3] = v8;
  v9 = v5[5];
  v4[4] = v5[4];
  v4[5] = v9;
  v10 = v5[1];
  *v4 = *v5;
  v4[1] = v10;
LABEL_6:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v23 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v23;
  return a1;
}

uint64_t _s22IndicatorConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 104);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s22IndicatorConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_BYTE *)(result + 104) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorConfiguration()
{
  return &type metadata for Instrument.IndicatorConfiguration;
}

void _s14IndicatorStyleOwxx(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 32) & 0x7E) == 0)
  {
    sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  }
}

uint64_t _s14IndicatorStyleOwcp(uint64_t a1, uint64_t *a2)
{
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v4 = *((_BYTE *)a2 + 32);
  if ((v4 & 0x7E) != 0)
  {
    v5 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v5;
    v6 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v6;
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = (void *)a2[2];
    v11 = a2[3];
    sub_237870090((void *)*a2, v9, v10, v11, v4);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v4;
    v12 = (void *)a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    v13 = a2[7];
    v14 = (void *)a2[8];
    v15 = a2[9];
    LOBYTE(v11) = *((_BYTE *)a2 + 80);
    sub_237870090(v12, v13, v14, v15, v11);
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    *(_BYTE *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = a2[11];
  }
  return a1;
}

uint64_t _s14IndicatorStyleOwca(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;

  v4 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 0x7E) != 0)
  {
    if ((v4 & 0x7E) == 0)
    {
      v5 = *(void **)a2;
      v6 = *(_QWORD *)(a2 + 8);
      v7 = *(void **)(a2 + 16);
      v8 = *(_QWORD *)(a2 + 24);
      sub_237870090(*(void **)a2, v6, v7, v8, v4);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v9 = *(void **)(a2 + 48);
      v10 = *(_QWORD *)(a2 + 56);
      v11 = *(void **)(a2 + 64);
      v12 = *(_QWORD *)(a2 + 72);
      LOBYTE(v8) = *(_BYTE *)(a2 + 80);
      sub_237870090(v9, v10, v11, v12, v8);
      *(_QWORD *)(a1 + 48) = v9;
      *(_QWORD *)(a1 + 56) = v10;
      *(_QWORD *)(a1 + 64) = v11;
      *(_QWORD *)(a1 + 72) = v12;
      *(_BYTE *)(a1 + 80) = v8;
LABEL_8:
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      return a1;
    }
  }
  else
  {
    if ((v4 & 0x7E) == 0)
    {
      v17 = *(void **)a2;
      v18 = *(_QWORD *)(a2 + 8);
      v19 = *(void **)(a2 + 16);
      v20 = *(_QWORD *)(a2 + 24);
      sub_237870090(*(void **)a2, v18, v19, v20, v4);
      v21 = *(void **)a1;
      v22 = *(_QWORD *)(a1 + 8);
      v23 = *(void **)(a1 + 16);
      v24 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v20;
      v25 = *(_BYTE *)(a1 + 32);
      *(_BYTE *)(a1 + 32) = v4;
      sub_2378702E0(v21, v22, v23, v24, v25);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v26 = *(void **)(a2 + 48);
      v27 = *(_QWORD *)(a2 + 56);
      v28 = *(void **)(a2 + 64);
      v29 = *(_QWORD *)(a2 + 72);
      LOBYTE(v20) = *(_BYTE *)(a2 + 80);
      sub_237870090(v26, v27, v28, v29, v20);
      v30 = *(void **)(a1 + 48);
      v31 = *(_QWORD *)(a1 + 56);
      v32 = *(void **)(a1 + 64);
      v33 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 48) = v26;
      *(_QWORD *)(a1 + 56) = v27;
      *(_QWORD *)(a1 + 64) = v28;
      *(_QWORD *)(a1 + 72) = v29;
      v34 = *(_BYTE *)(a1 + 80);
      *(_BYTE *)(a1 + 80) = v20;
      sub_2378702E0(v30, v31, v32, v33, v34);
      goto LABEL_8;
    }
    sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  }
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 32);
  v15 = *(_OWORD *)(a2 + 48);
  v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v16;
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v15;
  return a1;
}

uint64_t _s14IndicatorStyleOwta(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;

  v4 = *(_BYTE *)(a1 + 32);
  if ((v4 & 0x7E) == 0)
  {
    v5 = *(_BYTE *)(a2 + 32);
    if ((v5 & 0x7E) == 0)
    {
      v10 = *(void **)a1;
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(void **)(a1 + 16);
      v13 = *(_QWORD *)(a1 + 24);
      v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      *(_BYTE *)(a1 + 32) = v5;
      sub_2378702E0(v10, v11, v12, v13, v4);
      v15 = *(_QWORD *)(a2 + 72);
      v16 = *(_BYTE *)(a2 + 80);
      v17 = *(void **)(a1 + 48);
      v18 = *(_QWORD *)(a1 + 56);
      v19 = *(void **)(a1 + 64);
      v20 = *(_QWORD *)(a1 + 72);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v15;
      v21 = *(_BYTE *)(a1 + 80);
      *(_BYTE *)(a1 + 80) = v16;
      sub_2378702E0(v17, v18, v19, v20, v21);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      return a1;
    }
    sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
    sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  }
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t _s14IndicatorStyleOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 126);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s14IndicatorStyleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

uint64_t sub_23792DE30(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if ((v1 & 0x7E) != 0)
    return 128 - (v1 & 0x7E | (v1 >> 7));
  else
    return 0;
}

double sub_23792DE50(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(a1 + 88) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 - 127;
  }
  else if (a2)
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_BYTE *)(a1 + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorStyle()
{
  return &type metadata for Instrument.IndicatorStyle;
}

void _s14IndicatorStyleO21CriticalConfigurationVwxx(uint64_t a1)
{
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(void **)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_BYTE *)(a2 + 80);
  sub_237870090(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(void **)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 72);
  v18 = *(_BYTE *)(a2 + 80);
  sub_237870090(v14, v15, v16, v17, v18);
  v19 = *(void **)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(void **)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  v23 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v18;
  sub_2378702E0(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v5, v6, v7, v8, v10);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_BYTE *)(a2 + 80);
  v13 = *(void **)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(void **)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v11;
  v17 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v12;
  sub_2378702E0(v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorStyle.CriticalConfiguration()
{
  return &type metadata for Instrument.IndicatorStyle.CriticalConfiguration;
}

ValueMetadata *_s14IndicatorStyleO10CodingKeysOMa()
{
  return &_s14IndicatorStyleO10CodingKeysON;
}

uint64_t _s14IndicatorStyleO18CriticalCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23792E20C + 4 * byte_237A94C34[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23792E22C + 4 * byte_237A94C39[v4]))();
}

_BYTE *sub_23792E20C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23792E22C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23792E234(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23792E23C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23792E244(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23792E24C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14IndicatorStyleO18CriticalCodingKeysOMa()
{
  return &_s14IndicatorStyleO18CriticalCodingKeysON;
}

ValueMetadata *_s14IndicatorStyleO17MessageCodingKeysOMa()
{
  return &_s14IndicatorStyleO17MessageCodingKeysON;
}

ValueMetadata *_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysOMa()
{
  return &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON;
}

uint64_t _s22IndicatorConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23792E2D4 + 4 * byte_237A94C43[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23792E308 + 4 * byte_237A94C3E[v4]))();
}

uint64_t sub_23792E308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23792E310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23792E318);
  return result;
}

uint64_t sub_23792E324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23792E32CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23792E330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23792E338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s22IndicatorConfigurationV10CodingKeysOMa()
{
  return &_s22IndicatorConfigurationV10CodingKeysON;
}

uint64_t _s14IndicatorStyleO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23792E3A0 + 4 * byte_237A94C4D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23792E3D4 + 4 * byte_237A94C48[v4]))();
}

uint64_t sub_23792E3D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23792E3DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23792E3E4);
  return result;
}

uint64_t sub_23792E3F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23792E3F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23792E3FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23792E404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalNotification.CodingKeys()
{
  return &type metadata for LocalNotification.CodingKeys;
}

unint64_t sub_23792E424()
{
  unint64_t result;

  result = qword_256822070;
  if (!qword_256822070)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95104, &type metadata for LocalNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822070);
  }
  return result;
}

unint64_t sub_23792E46C()
{
  unint64_t result;

  result = qword_256822078;
  if (!qword_256822078)
  {
    result = MEMORY[0x23B81FA98](&unk_237A951BC, &_s22IndicatorConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256822078);
  }
  return result;
}

unint64_t sub_23792E4B4()
{
  unint64_t result;

  result = qword_256822080;
  if (!qword_256822080)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95274, &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256822080);
  }
  return result;
}

unint64_t sub_23792E4FC()
{
  unint64_t result;

  result = qword_256822088;
  if (!qword_256822088)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9537C, &_s14IndicatorStyleO18CriticalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256822088);
  }
  return result;
}

unint64_t sub_23792E544()
{
  unint64_t result;

  result = qword_256822090;
  if (!qword_256822090)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95434, &_s14IndicatorStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256822090);
  }
  return result;
}

unint64_t sub_23792E58C()
{
  unint64_t result;

  result = qword_256822098;
  if (!qword_256822098)
  {
    result = MEMORY[0x23B81FA98](&unk_237A952EC, &_s14IndicatorStyleO18CriticalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256822098);
  }
  return result;
}

unint64_t sub_23792E5D4()
{
  unint64_t result;

  result = qword_2568220A0;
  if (!qword_2568220A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95314, &_s14IndicatorStyleO18CriticalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220A0);
  }
  return result;
}

unint64_t sub_23792E61C()
{
  unint64_t result;

  result = qword_2568220A8;
  if (!qword_2568220A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9529C, &_s14IndicatorStyleO17MessageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220A8);
  }
  return result;
}

unint64_t sub_23792E664()
{
  unint64_t result;

  result = qword_2568220B0;
  if (!qword_2568220B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A952C4, &_s14IndicatorStyleO17MessageCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220B0);
  }
  return result;
}

unint64_t sub_23792E6AC()
{
  unint64_t result;

  result = qword_2568220B8;
  if (!qword_2568220B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A953A4, &_s14IndicatorStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220B8);
  }
  return result;
}

unint64_t sub_23792E6F4()
{
  unint64_t result;

  result = qword_2568220C0;
  if (!qword_2568220C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A953CC, &_s14IndicatorStyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220C0);
  }
  return result;
}

unint64_t sub_23792E73C()
{
  unint64_t result;

  result = qword_2568220C8;
  if (!qword_2568220C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A951E4, &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220C8);
  }
  return result;
}

unint64_t sub_23792E784()
{
  unint64_t result;

  result = qword_2568220D0;
  if (!qword_2568220D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9520C, &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220D0);
  }
  return result;
}

unint64_t sub_23792E7CC()
{
  unint64_t result;

  result = qword_2568220D8;
  if (!qword_2568220D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9512C, &_s22IndicatorConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220D8);
  }
  return result;
}

unint64_t sub_23792E814()
{
  unint64_t result;

  result = qword_2568220E0;
  if (!qword_2568220E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95154, &_s22IndicatorConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568220E0);
  }
  return result;
}

unint64_t sub_23792E85C()
{
  unint64_t result;

  result = qword_2568220E8;
  if (!qword_2568220E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95074, &type metadata for LocalNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568220E8);
  }
  return result;
}

unint64_t sub_23792E8A4()
{
  unint64_t result;

  result = qword_2568220F0;
  if (!qword_2568220F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9509C, &type metadata for LocalNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568220F0);
  }
  return result;
}

uint64_t sub_23792E8E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D73694472657375 && a2 == 0xEF656C6269737369)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23792E9F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB0C60 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xEF737465736E4972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23792EBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74754265736F6C63 && a2 == 0xEB000000006E6F74;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB0C80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23792ECE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61636974697263 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23792EDD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v11 = *(_OWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  sub_2378DF934(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), (void (*)(void))sub_2378702E0);
  sub_2378DF934(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v9, v8, (void (*)(void))sub_2378702E0);
  return a1;
}

uint64_t static ImageAsset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[2];
  char v10;
  _OWORD v11[2];
  char v12;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  v12 = v2;
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  v10 = v4;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v9) & (v3 == v5);
}

uint64_t ImageAsset.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if ((char)v0[4] < 0)
    v1 = v0[1];
  else
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id ImageAsset.image.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  int v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v4 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(char *)(v0 + 32);
  if (v5 < 0)
    return ImageAsset.LocalizedImage.image.getter();
  if (!v4)
    return 0;
  swift_bridgeObjectRetain_n();
  v6 = objc_msgSend(v4, sel_regularFileContents);
  if (v6)
  {
    v7 = sub_237A86540();
    v9 = v8;

    v10 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v11 = (void *)sub_237A86534();
    v6 = objc_msgSend(v10, sel_initWithData_, v11);
    sub_23786FD64(v7, v9);

  }
  sub_2378702E0(v2, v1, v4, v3, v5);
  sub_2378702E0(v2, v1, v4, v3, v5);
  return v6;
}

void ImageAsset.restore(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, __int128 *, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v3 = v1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v5);
  *(_QWORD *)&v23 = *(_QWORD *)(v1 + 40);
  if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v6 + 24))(&v23, v5, v6) & 1) != 0)
  {
    v8 = *(void **)v1;
    v7 = *(_QWORD *)(v1 + 8);
    v10 = *(void **)(v1 + 16);
    v9 = *(_QWORD *)(v1 + 24);
    v11 = *(char *)(v1 + 32);
    if (v11 < 0)
    {
      *(_QWORD *)&v23 = *(_QWORD *)v1;
      *((_QWORD *)&v23 + 1) = v7;
      *(_QWORD *)&v24 = v10;
      *((_QWORD *)&v24 + 1) = v9;
      v16 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ImageAsset.LocalizedImage.restore(from:)(a1);
      if (v2)
      {
        v17 = (void *)v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        sub_2378702E0(v8, v7, v10, v9, v11);
        v20 = v24;
        *(_OWORD *)v1 = v23;
        *(_OWORD *)(v1 + 16) = v20;
        *(_BYTE *)(v1 + 32) = 0x80;
      }
    }
    else
    {
      v22 = *(_BYTE *)(v1 + 32);
      v25 = *(_QWORD *)(v1 + 24);
      v12 = a1[3];
      v13 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v12);
      LOBYTE(v23) = 0;
      v14 = *(uint64_t (**)(void *, uint64_t, __int128 *, uint64_t, uint64_t))(v13 + 8);
      v21 = v10;
      swift_bridgeObjectRetain();
      v15 = v14(v8, v7, &v23, v12, v13);
      if (v2)
      {
        sub_2378702E0(v8, v7, v10, v25, v22);
      }
      else
      {
        v18 = v15;

        v19 = v25;
        sub_2378702E0(v8, v7, v10, v25, v22);
        *(_QWORD *)v3 = v8;
        *(_QWORD *)(v3 + 8) = v7;
        *(_QWORD *)(v3 + 16) = v18;
        *(_QWORD *)(v3 + 24) = v19;
        *(_BYTE *)(v3 + 32) = v22 & 1;
      }
    }
  }
}

void ImageAsset.ImageType.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  id v9;

  v4 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v6 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(char *)(v1 + 32);
  if ((v7 & 0x80000000) == 0)
  {
    sub_237A885E0();
    swift_bridgeObjectRetain();
    sub_237870090(v4, v3, v6, v5, v7);
    sub_237A87710();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_237A885EC();
      v8 = v6;
      sub_237A87DDC();

      if ((v7 & 1) == 0)
      {
LABEL_4:
        sub_237A885EC();
        sub_237A88604();
LABEL_9:
        sub_2378702E0(v4, v3, v6, v5, v7);
        return;
      }
    }
    else
    {
      sub_237A885EC();
      if ((v7 & 1) == 0)
        goto LABEL_4;
    }
    sub_237A885EC();
    goto LABEL_9;
  }
  sub_237A885E0();
  sub_237A885EC();
  if (v4)
  {
    v9 = v4;
    sub_237A87DDC();

  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378778F0(a1, v5);
  swift_bridgeObjectRelease();
}

uint64_t sub_23792F3D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x657A696C61636F6CLL;
  else
    return 0x6567616D69;
}

uint64_t sub_23792F41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237934CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23792F440()
{
  sub_237934578();
  return sub_237A88718();
}

uint64_t sub_23792F468()
{
  sub_237934578();
  return sub_237A88724();
}

uint64_t sub_23792F490()
{
  sub_237934644();
  return sub_237A88718();
}

uint64_t sub_23792F4B8()
{
  sub_237934644();
  return sub_237A88724();
}

uint64_t sub_23792F4E0()
{
  sub_2379345BC();
  return sub_237A88718();
}

uint64_t sub_23792F508()
{
  sub_2379345BC();
  return sub_237A88724();
}

void ImageAsset.ImageType.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568220F8);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822100);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822108);
  v40 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)v1;
  v12 = *(void **)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v42 = *(_QWORD *)(v1 + 8);
  v43 = v11;
  v13 = a1[3];
  v14 = a1;
  LODWORD(a1) = *(char *)(v1 + 32);
  __swift_project_boxed_opaque_existential_2Tm(v14, v13);
  sub_237934578();
  v15 = v9;
  sub_237A886B8();
  v41 = (int)a1;
  if ((a1 & 0x80000000) != 0)
  {
    LOBYTE(v44) = 1;
    sub_2379345BC();
    v28 = v10;
    v29 = v10;
    v30 = v12;
    swift_bridgeObjectRetain();
    v31 = v43;
    swift_bridgeObjectRetain();
    sub_237A88220();
    v32 = v42;
    v44 = v10;
    v45 = v42;
    v46 = v30;
    v47 = v31;
    sub_237934600();
    v33 = v36;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v33);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v49);
    v23 = v28;
    v24 = v32;
    v25 = v30;
    v26 = v31;
    v27 = v41;
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_237934644();
    v16 = v42;
    swift_bridgeObjectRetain();
    v17 = v12;
    v18 = v37;
    sub_237A88220();
    v19 = v10;
    v44 = v10;
    v45 = v16;
    v20 = v43;
    v46 = v12;
    v47 = v43;
    v21 = v41;
    v48 = v41 & 1;
    sub_237934688();
    v22 = v39;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v22);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v49);
    v23 = v19;
    v24 = v16;
    v25 = v12;
    v26 = v20;
    v27 = v21;
  }
  sub_2378702E0(v23, v24, v25, v26, v27);
}

uint64_t ImageAsset.ImageType.hashValue.getter()
{
  __int128 *v0;
  char v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = *((_BYTE *)v0 + 32);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

uint64_t ImageAsset.ImageType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  uint64_t v39;

  v30 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822138);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822140);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822148);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_237934578();
  v13 = v39;
  sub_237A88688();
  if (!v13)
  {
    v28 = v4;
    v29 = v5;
    v14 = v32;
    v15 = v33;
    v39 = v9;
    v16 = sub_237A881FC();
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      v17 = v11;
      if ((*(_BYTE *)(v16 + 32) & 1) != 0)
      {
        LOBYTE(v35) = 1;
        sub_2379345BC();
        sub_237A88154();
        sub_2379346CC();
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
        v18 = v35;
        v19 = v36;
        v20 = 0x80;
        v21 = v37;
      }
      else
      {
        LOBYTE(v35) = 0;
        sub_237934644();
        sub_237A88154();
        sub_237934710();
        v26 = v28;
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v8);
        v18 = v35;
        v19 = v36;
        v21 = v37;
        v20 = v38;
      }
      v27 = v30;
      *v30 = v18;
      v27[1] = v19;
      *((_OWORD *)v27 + 1) = v21;
      *((_BYTE *)v27 + 32) = v20;
    }
    else
    {
      v22 = sub_237A87FB0();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
      *v24 = &type metadata for ImageAsset.ImageType;
      sub_237A88160();
      sub_237A87F98();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v34);
}

uint64_t sub_23792FC44@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ImageAsset.ImageType.init(from:)(a1, a2);
}

void sub_23792FC58(_QWORD *a1)
{
  ImageAsset.ImageType.encode(to:)(a1);
}

uint64_t sub_23792FC6C()
{
  __int128 *v0;
  char v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = *((_BYTE *)v0 + 32);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

uint64_t sub_23792FCC0()
{
  __int128 *v0;
  char v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = *((_BYTE *)v0 + 32);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

__n128 ImageAsset.init(type:destination:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *a2;
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = v4;
  return result;
}

void ImageAsset.assetType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void ImageAsset.destination.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
}

_QWORD *ImageAsset.destination.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = *result;
  return result;
}

uint64_t (*ImageAsset.destination.modify())()
{
  return nullsub_1;
}

uint64_t ImageAsset.preferredFilename.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(char *)(v0 + 32);
  if ((v5 & 0x80000000) == 0)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      v6 = objc_msgSend(v4, sel_preferredFilename);
      goto LABEL_6;
    }
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (!v1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v7 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(v7, sel_preferredFilename);
LABEL_6:
  v8 = v6;
  if (v8)
  {
    v9 = sub_237A87818();

    sub_2378702E0(v1, v2, v4, v3, v5);
    return v9;
  }
LABEL_11:
  result = sub_237A880AC();
  __break(1u);
  return result;
}

NSFileWrapper_optional __swiftcall ImageAsset.generateAsset(destination:)(CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  uint64_t v1;
  void *v2;
  id v3;
  Swift::Bool v4;
  objc_class *v5;
  NSFileWrapper_optional result;

  v2 = *(void **)(v1 + 16 * ((*(unsigned __int8 *)(v1 + 32) >> 7) ^ 1u));
  v3 = v2;
  v5 = (objc_class *)v2;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

id ImageAsset.Image.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;

  v1 = *(void **)(v0 + 16);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, sel_regularFileContents);
  if (v2)
  {
    v3 = sub_237A86540();
    v5 = v4;

    v6 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v7 = (void *)sub_237A86534();
    v2 = objc_msgSend(v6, sel_initWithData_, v7);
    sub_23786FD64(v3, v5);

  }
  return v2;
}

id ImageAsset.LocalizedImage.image.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;

  v1 = sub_237A865B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[3];
  sub_237A865AC();
  v7 = sub_237A865A0();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (*(_QWORD *)(v6 + 16)
    && (v10 = sub_2378D2DB8(v7, v9), (v11 & 1) != 0)
    && (v12 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 32 * v10),
        v13 = *v12,
        v14 = v12[1],
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        v5))
  {
    NSFileWrapper.data(contentsOf:)(v13, v14);
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v21 = (void *)sub_237A86534();
    v22 = objc_msgSend(v20, sel_initWithData_, v21);
    sub_23786FD64(v17, v19);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v22;
}

uint64_t ImageAsset.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t result;

  v2 = *(char *)(v1 + 32);
  if (v2 < 0)
    return ImageAsset.LocalizedImage.attributes.getter(a1);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_WORD *)(a1 + 8) = v2 & 1;
  return result;
}

uint64_t ImageAsset.LocalizedImage.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  char v17;
  uint64_t v18;

  v3 = sub_237A865B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 24);
  sub_237A865AC();
  v8 = sub_237A865A0();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (*(_QWORD *)(v7 + 16) && (v11 = sub_2378D2DB8(v8, v10), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(v7 + 56) + 32 * v11;
    v14 = *(_QWORD *)(v13 + 16);
    v15 = *(_BYTE *)(v13 + 24);
    result = swift_bridgeObjectRelease();
    v17 = 0;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v14 = 0;
    v15 = 0;
    v17 = 1;
  }
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 9) = v17;
  return result;
}

void ImageAsset.Image.restore(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v3);
  v5 = *v1;
  v6 = v1[1];
  v9 = 0;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v4 + 8))(v5, v6, &v9, v3, v4);
  if (!v2)
  {
    v8 = v7;

    v1[2] = v8;
  }
}

void ImageAsset.LocalizedImage.restore(from:)(_QWORD *a1)
{
  id *v1;
  uint64_t v2;
  id *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int64_t v44;
  void *v45;
  id v46;
  id v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  id *v68;
  void *v69;
  uint64_t v70;
  id *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  int64_t v77;
  _QWORD *v78;
  unint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  char v82;

  v3 = v1;
  v5 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A8633C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  v14 = v3[1];
  v15 = v3[2];
  v82 = 0;
  v16 = (*(uint64_t (**)(id, id, char *, uint64_t, uint64_t))(v13 + 8))(v14, v15, &v82, v12, v13);
  if (v2)
    return;
  v17 = (void *)v16;
  v72 = v11;
  v73 = v7;
  v74 = v9;
  v75 = v8;
  v70 = 0;
  v71 = v3;
  v18 = v3[3];
  v19 = v18[8];
  v76 = v18 + 8;
  v20 = 1 << *((_BYTE *)v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v77 = (unint64_t)(v20 + 63) >> 6;
  v78 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v24 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v80 = v24;
    if (v22)
    {
      v26 = __clz(__rbit64(v22));
      v27 = (v22 - 1) & v22;
      v28 = v26 | (v23 << 6);
    }
    else
    {
      v29 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_45;
      if (v29 >= v77)
      {
LABEL_42:
        v64 = v17;
        swift_release();
        v65 = objc_allocWithZone(MEMORY[0x24BDD1598]);
        sub_23786A1FC();
        v66 = (void *)sub_237A87650();
        swift_bridgeObjectRelease();
        v67 = objc_msgSend(v65, sel_initDirectoryWithFileWrappers_, v66);

        v68 = v71;
        v69 = (void *)sub_237A877F4();
        objc_msgSend(v67, sel_setPreferredFilename_, v69);

        *v68 = v67;
        return;
      }
      v30 = v76[v29];
      ++v23;
      if (!v30)
      {
        v23 = v29 + 1;
        if (v29 + 1 >= v77)
          goto LABEL_42;
        v30 = v76[v23];
        if (!v30)
        {
          v23 = v29 + 2;
          if (v29 + 2 >= v77)
            goto LABEL_42;
          v30 = v76[v23];
          if (!v30)
          {
            v31 = v29 + 3;
            if (v31 >= v77)
              goto LABEL_42;
            v30 = v76[v31];
            if (!v30)
            {
              while (1)
              {
                v23 = v31 + 1;
                if (__OFADD__(v31, 1))
                  goto LABEL_46;
                if (v23 >= v77)
                  goto LABEL_42;
                v30 = v76[v23];
                ++v31;
                if (v30)
                  goto LABEL_22;
              }
            }
            v23 = v31;
          }
        }
      }
LABEL_22:
      v27 = (v30 - 1) & v30;
      v28 = __clz(__rbit64(v30)) + (v23 << 6);
    }
    v32 = (uint64_t *)(v78[6] + 16 * v28);
    v33 = *v32;
    v34 = v32[1];
    v35 = (uint64_t *)(v78[7] + 32 * v28);
    v36 = *v35;
    v37 = v35[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v38 = v17;
    v39 = objc_msgSend(v17, sel_fileWrappers);
    if (!v39)
      goto LABEL_40;
    v40 = v39;
    sub_23786A1FC();
    v41 = sub_237A87668();

    if (!*(_QWORD *)(v41 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237A86300();
      sub_2378D4298(MEMORY[0x24BEE4AF8]);
      sub_237934754();
      v62 = v72;
      v63 = v75;
      sub_237A864D4();
      sub_237A862D0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v63);
      swift_willThrow();
      swift_release();

      return;
    }
    swift_bridgeObjectRetain();
    v42 = sub_2378D2DB8(v36, v37);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
    v79 = v27;
    v44 = v23;
    v45 = v38;
    v46 = *(id *)(*(_QWORD *)(v41 + 56) + 8 * v42);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v47 = v46;
    v48 = v80;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81 = v48;
    v51 = sub_2378D2DB8(v33, v34);
    v52 = v48[2];
    v53 = (v50 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
      break;
    v55 = v50;
    if (v48[3] >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v24 = v81;
        if ((v50 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_2378C609C();
        v24 = v81;
        if ((v55 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_2378CB0D4(v54, isUniquelyReferenced_nonNull_native);
      v56 = sub_2378D2DB8(v33, v34);
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_47;
      v51 = v56;
      v24 = v81;
      if ((v55 & 1) != 0)
      {
LABEL_5:
        v25 = v24[7];

        *(_QWORD *)(v25 + 8 * v51) = v47;
        goto LABEL_6;
      }
    }
    v24[(v51 >> 6) + 8] |= 1 << v51;
    v58 = (uint64_t *)(v24[6] + 16 * v51);
    *v58 = v33;
    v58[1] = v34;
    *(_QWORD *)(v24[7] + 8 * v51) = v47;
    v59 = v24[2];
    v60 = __OFADD__(v59, 1);
    v61 = v59 + 1;
    if (v60)
      goto LABEL_44;
    v24[2] = v61;
    swift_bridgeObjectRetain();
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v45;
    v23 = v44;
    v22 = v79;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  sub_237A8858C();
  __break(1u);
}

uint64_t ImageAsset.hash(into:)(uint64_t a1)
{
  ImageAsset.ImageType.hash(into:)(a1);
  return sub_237A885E0();
}

uint64_t sub_2379308C4()
{
  _BYTE *v0;

  if (*v0)
    return 0x74616E6974736564;
  else
    return 1701869940;
}

uint64_t sub_237930900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237934DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237930924()
{
  sub_23793479C();
  return sub_237A88718();
}

uint64_t sub_23793094C()
{
  sub_23793479C();
  return sub_237A88724();
}

uint64_t ImageAsset.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822160);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  v12 = *((_QWORD *)v1 + 5);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793479C();
  sub_237A886B8();
  v16 = v13;
  v17 = v7;
  v18 = v6;
  v19 = v8;
  v20 = 0;
  sub_2379347E0();
  v9 = v14;
  sub_237A882B0();
  if (!v9)
  {
    *(_QWORD *)&v16 = v12;
    v20 = 1;
    sub_237934824();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t ImageAsset.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  return sub_237A88610();
}

void ImageAsset.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unsigned __int8 v22;
  int v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793479C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v24 = 0;
    sub_237934868();
    sub_237A881F0();
    v9 = v18;
    v10 = v19;
    v24 = 1;
    v16 = v21;
    v17 = v20;
    v23 = v22;
    sub_237870090(v18, v19, v20, v21, v22);
    sub_2379348AC();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    v11 = v18;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    v13 = v16;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v13;
    v14 = v23;
    *(_BYTE *)(a2 + 32) = v23;
    *(_QWORD *)(a2 + 40) = v11;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702E0(v9, v10, v12, v13, v14);
  }
}

uint64_t sub_237930D70()
{
  uint64_t *v0;
  uint64_t v1;

  if ((char)v0[4] < 0)
    v1 = v0[1];
  else
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_237930DBC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_237930DC4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
}

void *sub_237930DD4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16 * ((*(unsigned __int8 *)(v0 + 32) >> 7) ^ 1u));
  v2 = v1;
  return v1;
}

void sub_237930E08(_QWORD *a1)
{
  ImageAsset.restore(from:)(a1);
}

void sub_237930E1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ImageAsset.init(from:)(a1, a2);
}

uint64_t sub_237930E30(_QWORD *a1)
{
  return ImageAsset.encode(to:)(a1);
}

uint64_t sub_237930E44()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_237930EC4(uint64_t a1)
{
  ImageAsset.ImageType.hash(into:)(a1);
  return sub_237A885E0();
}

uint64_t sub_237930F18()
{
  _BYTE v1[72];

  sub_237A885D4();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_237930F94(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[2];
  char v10;
  _OWORD v11[2];
  char v12;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  v12 = v2;
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  v10 = v4;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v9) & (v3 == v5);
}

void *ImageAsset.Image.file.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void ImageAsset.Image.file.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*ImageAsset.Image.file.modify())()
{
  return nullsub_1;
}

void ImageAsset.Image.attributes.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t ImageAsset.Image.attributes.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 32) = v2;
  return result;
}

uint64_t (*ImageAsset.Image.attributes.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::ImageAsset::Attributes __swiftcall ImageAsset.Attributes.init(baselineOffset:)(CarPlayAssetUI::ImageAsset::Attributes baselineOffset)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)v2 = *(_QWORD *)&baselineOffset.baselineOffset.is_nil;
  *(_BYTE *)(v2 + 8) = v1 & 1;
  return baselineOffset;
}

uint64_t ImageAsset.Image.init(filename:data:attributes:)@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v8 = sub_237A87848();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a3;
  HIDWORD(v27) = *((unsigned __int8 *)a3 + 8);
  v12 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  v13 = (void *)sub_237A86534();
  v14 = objc_msgSend(v12, sel_initRegularFileWithContents_, v13);

  v15 = (void *)sub_237A877F4();
  objc_msgSend(v14, sel_setPreferredFilename_, v15);

  v29 = a1;
  v30 = a2;
  sub_2378709EC(a1, a2);
  sub_237A8783C();
  v16 = sub_237A87824();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v18 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_237A8654C();
    sub_2378709D8(v16, v18);
    v20 = v29;
    v21 = v30;
    sub_2378709EC(v29, v30);
    sub_237925F5C(v20, v21);
    v23 = v22;
    v25 = v24;
    sub_23786FD64(v20, v21);
    sub_23786FD64(v20, v21);
    sub_23786FD64(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = v23;
    *(_QWORD *)(a4 + 8) = v25;
    v26 = v28;
    *(_QWORD *)(a4 + 16) = v14;
    *(_QWORD *)(a4 + 24) = v26;
    *(_BYTE *)(a4 + 32) = BYTE4(v27);
  }
  return result;
}

void ImageAsset.Image.init(file:attributes:)(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;

  v6 = sub_237A87848();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = *((unsigned __int8 *)a2 + 8);
  v12 = objc_msgSend(a1, sel_preferredFilename);
  if (!v12)
    goto LABEL_6;
  v13 = v12;
  v30 = v11;
  sub_237A87818();

  v14 = objc_msgSend(a1, sel_regularFileContents);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_6:

    *(_BYTE *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  v15 = v14;
  v29 = v10;
  v16 = sub_237A86540();
  v18 = v17;

  v31 = v16;
  v32 = v18;
  sub_2378709EC(v16, v18);
  sub_237A8783C();
  v19 = sub_237A87824();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v21 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_237A8654C();
    sub_2378709D8(v19, v21);
    v22 = v31;
    v23 = v32;
    sub_2378709EC(v31, v32);
    sub_237925F5C(v22, v23);
    v25 = v24;
    v27 = v26;
    sub_23786FD64(v22, v23);
    sub_23786FD64(v22, v23);
    sub_23786FD64(v16, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    *(_QWORD *)a3 = v25;
    *(_QWORD *)(a3 + 8) = v27;
    v28 = v29;
    *(_QWORD *)(a3 + 16) = a1;
    *(_QWORD *)(a3 + 24) = v28;
    *(_BYTE *)(a3 + 32) = v30;
    swift_bridgeObjectRelease();
  }
}

uint64_t ImageAsset.Image.init(resource:extension:bundle:attributes:)@<X0>(void *a1@<X4>, uint64_t *a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t result;
  _OWORD *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v59 = a3;
  v5 = sub_237A87848();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A8651C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v51 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v57 = (char *)&v51 - v17;
  v56 = *a2;
  v55 = *((unsigned __int8 *)a2 + 8);
  v18 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v19 = a1;
  v20 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(a1, sel_URLForResource_withExtension_, v18, v20);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  sub_237A86510();

  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v9, v16, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:

    result = sub_2379348F0((uint64_t)v9);
    goto LABEL_7;
  }
  v23 = v11;
  v24 = v57;
  v22(v57, v9, v10);
  v25 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v58, v24, v10);
  v26 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  v27 = sub_237933FE8(v25, 0);
  v30 = v27;
  if (!v27)
  {

LABEL_4:
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_7:
    v29 = (_OWORD *)v59;
    *(_BYTE *)(v59 + 32) = 0;
    *v29 = 0u;
    v29[1] = 0u;
    return result;
  }
  v31 = objc_msgSend(v27, sel_regularFileContents);
  if (!v31)
  {

    goto LABEL_4;
  }
  v32 = v31;
  v58 = (char *)v10;
  v51 = v19;
  v33 = sub_237A86540();
  v35 = v34;

  sub_237A864EC();
  v36 = v24;
  v37 = (void *)sub_237A877F4();
  objc_msgSend(v30, sel_setPreferredFilename_, v37);

  v60 = v33;
  v61 = v35;
  v38 = v33;
  sub_2378709EC(v33, v35);
  v39 = v52;
  sub_237A8783C();
  v40 = sub_237A87824();
  v42 = v41;
  result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v39, v54);
  if (v42 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_237A8654C();
    sub_2378709D8(v40, v42);
    v43 = v60;
    v44 = v61;
    sub_2378709EC(v60, v61);
    sub_237925F5C(v43, v44);
    v46 = v45;
    v48 = v47;
    sub_23786FD64(v43, v44);
    sub_23786FD64(v43, v44);
    sub_23786FD64(v38, v35);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v23 + 8))(v36, v58);
    swift_bridgeObjectRetain();
    v49 = v59;
    *(_QWORD *)v59 = v46;
    *(_QWORD *)(v49 + 8) = v48;
    v50 = v56;
    *(_QWORD *)(v49 + 16) = v30;
    *(_QWORD *)(v49 + 24) = v50;
    *(_BYTE *)(v49 + 32) = v55;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2379318BC(char *a1, char *a2)
{
  return sub_2378D62EC(*a1, *a2);
}

uint64_t sub_2379318C8()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23793194C()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379319AC()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237931A2C@<X0>(char *a1@<X8>)
{
  return sub_237932C64(a1);
}

void sub_237931A38(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x696669746E656469;
  if (*v1)
    v2 = 0x7475626972747461;
  v3 = 0xEA00000000007265;
  if (*v1)
    v3 = 0xEA00000000007365;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_237931A7C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 0x696669746E656469;
}

uint64_t sub_237931ABC@<X0>(char *a1@<X8>)
{
  return sub_237932D44(a1);
}

uint64_t sub_237931AC8()
{
  sub_237934930();
  return sub_237A88718();
}

uint64_t sub_237931AF0()
{
  sub_237934930();
  return sub_237A88724();
}

uint64_t ImageAsset.Image.hash(into:)()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_237A885EC();
    v3 = v1;
    sub_237A87DDC();

    if (v2)
      return sub_237A885EC();
  }
  else
  {
    sub_237A885EC();
    if (v2)
      return sub_237A885EC();
  }
  sub_237A885EC();
  return sub_237A88604();
}

uint64_t static ImageAsset.Attributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t ImageAsset.Image.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568221A0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 24);
  v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237934930();
  sub_237A886B8();
  v14 = 0;
  sub_237A88274();
  if (!v2)
  {
    v10 = v8;
    v11 = v12;
    v13 = 1;
    sub_237934974();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t ImageAsset.Image.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 32);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_237A885EC();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_237A885EC();
    sub_237A88604();
    return sub_237A88610();
  }
  sub_237A885EC();
  v3 = v1;
  sub_237A87DDC();

  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t ImageAsset.Image.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568221B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237934930();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v18 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v17 = 1;
  sub_2379349B8();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v15;
  v13 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237931FE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568222F8);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379368C4();
  sub_237A886B8();
  v14 = 0;
  sub_237A88274();
  if (!v2)
  {
    v10 = v8;
    v11 = v12;
    v13 = 1;
    sub_237934974();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t sub_237932138()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_237A885D4();
  sub_237A87710();
  sub_237A885EC();
  if (v1 != 1)
    sub_237A88604();
  return sub_237A88610();
}

uint64_t sub_2379321C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822308);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379368C4();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v18 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v17 = 1;
  sub_2379349B8();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v15;
  v13 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237932370@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAsset.Image.init(from:)(a1, a2);
}

uint64_t sub_237932384(_QWORD *a1)
{
  return ImageAsset.Image.encode(to:)(a1);
}

uint64_t sub_2379323A0()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 32);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_237A885EC();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_237A885EC();
    sub_237A88604();
    return sub_237A88610();
  }
  sub_237A885EC();
  v3 = v1;
  sub_237A87DDC();

  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t sub_237932470()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 0x656D616E656C6966;
}

uint64_t sub_2379324B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237934EF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379324D4()
{
  sub_2379368C4();
  return sub_237A88718();
}

uint64_t sub_2379324FC()
{
  sub_2379368C4();
  return sub_237A88724();
}

uint64_t sub_237932524@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2379321C4(a1, a2);
}

uint64_t sub_237932538(_QWORD *a1)
{
  return sub_237931FE0(a1);
}

uint64_t sub_237932550()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_237A87710();
  if (v1 == 1)
    return sub_237A885EC();
  sub_237A885EC();
  return sub_237A88604();
}

uint64_t sub_2379325B4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_237A885D4();
  sub_237A87710();
  sub_237A885EC();
  if (v1 != 1)
    sub_237A88604();
  return sub_237A88610();
}

id ImageAsset.LocalizedImage.file.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void ImageAsset.LocalizedImage.file.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ImageAsset.LocalizedImage.file.modify())()
{
  return nullsub_1;
}

void ImageAsset.LocalizedImage.init(imageSet:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;

  v4 = a1;
  v5 = sub_237934FEC(v4);
  if (v2)
  {

    return;
  }
  v8 = v7;
  v55 = a2;
  v56 = v4;
  v9 = v5;
  v10 = v6;
  v11 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  sub_23786A1FC();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_237A87650();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initDirectoryWithFileWrappers_, v12);

  v53 = v10;
  v54 = v9;
  v14 = (void *)sub_237A877F4();
  v52 = v13;
  objc_msgSend(v13, sel_setPreferredFilename_, v14);

  v57 = v8 + 64;
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v58 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  v19 = (_QWORD *)MEMORY[0x24BEE4B00];
  v59 = v8;
  while (1)
  {
    if (v17)
    {
      v60 = (v17 - 1) & v17;
      v61 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_41;
      if (v22 >= v58)
      {
LABEL_38:
        swift_release();

        v50 = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v51 = v50;
        swift_bridgeObjectRelease();

        *v55 = v52;
        v55[1] = v54;
        v55[2] = v53;
        v55[3] = v19;
        return;
      }
      v23 = *(_QWORD *)(v57 + 8 * v22);
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v58)
          goto LABEL_38;
        v23 = *(_QWORD *)(v57 + 8 * v24);
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v58)
            goto LABEL_38;
          v23 = *(_QWORD *)(v57 + 8 * v24);
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v58)
              goto LABEL_38;
            v23 = *(_QWORD *)(v57 + 8 * v25);
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_42;
                if (v24 >= v58)
                  goto LABEL_38;
                v23 = *(_QWORD *)(v57 + 8 * v24);
                ++v25;
                if (v23)
                  goto LABEL_23;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_23:
      v60 = (v23 - 1) & v23;
      v61 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v27 = *v26;
    v28 = v26[1];
    v29 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v21);
    swift_bridgeObjectRetain_n();
    v30 = v29;
    v31 = objc_msgSend(v30, sel_preferredFilename);
    if (v31)
    {
      v32 = v31;
      v33 = sub_237A87818();
      v35 = v34;

    }
    else
    {
      swift_bridgeObjectRetain();
      v33 = v27;
      v35 = v28;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = sub_2378D2DB8(v27, v28);
    v39 = v19[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v19[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v37 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_2378C62C0();
        if ((v42 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_2378CB490(v41, isUniquelyReferenced_nonNull_native);
      v43 = sub_2378D2DB8(v27, v28);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_43;
      v38 = v43;
      if ((v42 & 1) != 0)
      {
LABEL_6:
        v20 = v19[7] + 32 * v38;
        swift_bridgeObjectRelease();
        *(_QWORD *)v20 = v33;
        *(_QWORD *)(v20 + 8) = v35;
        *(_QWORD *)(v20 + 16) = 0;
        *(_BYTE *)(v20 + 24) = 1;
        goto LABEL_7;
      }
    }
    v19[(v38 >> 6) + 8] |= 1 << v38;
    v45 = (uint64_t *)(v19[6] + 16 * v38);
    *v45 = v27;
    v45[1] = v28;
    v46 = v19[7] + 32 * v38;
    *(_QWORD *)v46 = v33;
    *(_QWORD *)(v46 + 8) = v35;
    *(_QWORD *)(v46 + 16) = 0;
    *(_BYTE *)(v46 + 24) = 1;
    v47 = v19[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_40;
    v19[2] = v49;
    swift_bridgeObjectRetain();
LABEL_7:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v8 = v59;
    v17 = v60;
    v18 = v61;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_237A8858C();
  __break(1u);
}

uint64_t sub_237932AF4(char *a1, char *a2)
{
  return sub_2378D6394(*a1, *a2);
}

uint64_t sub_237932B00()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237932B80()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237932BDC()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237932C58@<X0>(char *a1@<X8>)
{
  return sub_237932C64(a1);
}

uint64_t sub_237932C64@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_237932CBC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x696669746E656469;
  if (*v1)
    v2 = 0x736567616D69;
  v3 = 0xEA00000000007265;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_237932CFC()
{
  _BYTE *v0;

  if (*v0)
    return 0x736567616D69;
  else
    return 0x696669746E656469;
}

uint64_t sub_237932D38@<X0>(char *a1@<X8>)
{
  return sub_237932D44(a1);
}

uint64_t sub_237932D44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_237932DA0()
{
  sub_2379355AC();
  return sub_237A88718();
}

uint64_t sub_237932DC8()
{
  sub_2379355AC();
  return sub_237A88724();
}

uint64_t ImageAsset.LocalizedImage.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)v1)
  {
    sub_237A885EC();
    v5 = v3;
    sub_237A87DDC();

  }
  else
  {
    sub_237A885EC();
  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378778F0(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t ImageAsset.LocalizedImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568221C8);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379355AC();
  sub_237A886B8();
  v13 = 0;
  sub_237A88274();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568221D8);
    sub_237935634(&qword_2568221E0, (uint64_t (*)(void))sub_2379355F0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ImageAsset.LocalizedImage.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _BYTE v5[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A885EC();
  if (v1)
  {
    v3 = v1;
    sub_237A87DDC();

  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378778F0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t ImageAsset.LocalizedImage.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568221F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379355AC();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v16 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568221D8);
  v15 = 1;
  sub_237935634(&qword_2568221F8, (uint64_t (*)(void))sub_2379356A8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = 0;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379332A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ImageAsset.LocalizedImage.init(from:)(a1, a2);
}

uint64_t sub_2379332B8(_QWORD *a1)
{
  return ImageAsset.LocalizedImage.encode(to:)(a1);
}

uint64_t sub_2379332D0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)v1)
  {
    sub_237A885EC();
    v5 = v3;
    sub_237A87DDC();

  }
  else
  {
    sub_237A885EC();
  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378778F0(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237933370()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _BYTE v5[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A885EC();
  if (v1)
  {
    v3 = v1;
    sub_237A87DDC();

  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378778F0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t ImageAsset.Attributes.baselineOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ImageAsset.Attributes.baselineOffset.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ImageAsset.Attributes.baselineOffset.modify())()
{
  return nullsub_1;
}

uint64_t ImageAsset.Attributes.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_237A885EC();
  sub_237A885EC();
  return sub_237A88604();
}

uint64_t sub_2379334A4()
{
  return 0x656E696C65736162;
}

uint64_t sub_2379334C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237933580()
{
  sub_2379356EC();
  return sub_237A88718();
}

uint64_t sub_2379335A8()
{
  sub_2379356EC();
  return sub_237A88724();
}

uint64_t ImageAsset.Attributes.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822208);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379356EC();
  sub_237A886B8();
  sub_237A88244();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ImageAsset.Attributes.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_237A885D4();
  sub_237A885EC();
  if (v1 != 1)
    sub_237A88604();
  return sub_237A88610();
}

uint64_t ImageAsset.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379356EC();
  sub_237A88688();
  if (!v2)
  {
    v9 = sub_237A88184();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237933854@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAsset.Attributes.init(from:)(a1, a2);
}

uint64_t sub_237933868(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822208);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379356EC();
  sub_237A886B8();
  sub_237A88244();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23793395C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_237A885EC();
  sub_237A885EC();
  return sub_237A88604();
}

uint64_t sub_2379339AC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_237A885D4();
  sub_237A885EC();
  if (v1 != 1)
    sub_237A88604();
  return sub_237A88610();
}

uint64_t sub_237933A18(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 8))
      return 1;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t sub_237933A4C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822368);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237936CAC();
  sub_237A886B8();
  v14 = 0;
  sub_237A8822C();
  if (!v5)
  {
    v13 = 1;
    sub_237A8822C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_237933B74()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C61636F6CLL;
  else
    return 0x656D616E656C6966;
}

uint64_t sub_237933BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379370B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237933BD0()
{
  sub_237936CAC();
  return sub_237A88718();
}

uint64_t sub_237933BF8()
{
  sub_237936CAC();
  return sub_237A88724();
}

uint64_t sub_237933C20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2379349FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_237933C4C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_237933A4C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_237933C68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_QWORD *)(v2 + 56);
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(v4 - 2))
      {
        v13 = *((_OWORD *)v4 - 1);
        v10 = *(v4 - 3);
        v11 = *v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2379D6524(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        v8 = v13;
        if (v7 >= v6 >> 1)
        {
          sub_2379D6524(v6 > 1, v7 + 1, 1);
          v8 = v13;
        }
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v9 = v5 + 32 * v7;
        *(_QWORD *)(v9 + 32) = v10;
        *(_OWORD *)(v9 + 40) = v8;
        *(_QWORD *)(v9 + 56) = v11;
      }
      v4 += 4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  *v1 = v5;
  return result;
}

uint64_t sub_237933D9C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822370);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237936C24();
  sub_237A886B8();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822340);
  sub_237936CF0(&qword_256822378, (uint64_t (*)(void))sub_237936D58, MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_237933EB8()
{
  return 0x736567616D69;
}

uint64_t sub_237933ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736567616D69 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237933F58()
{
  sub_237936C24();
  return sub_237A88718();
}

uint64_t sub_237933F80()
{
  sub_237936C24();
  return sub_237A88724();
}

_QWORD *sub_237933FA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_237934BA8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_237933FD0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_237933D9C(a1, *v1);
}

id sub_237933FE8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v3 = v2;
  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_237A864F8();
  v15[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithURL_options_error_, v6, a2, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_237A8651C();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v15[0];
    sub_237A864E0();

    swift_willThrow();
    v13 = sub_237A8651C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

uint64_t sub_2379340F8(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  double v4;
  char v5;
  BOOL v6;
  char v7;
  uint64_t result;
  char v9;

  v2 = *(double *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(double *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_237A8840C(), result = 0, (v7 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if ((v5 & 1) == 0)
        return 0;
    }
    else
    {
      if (v2 == v4)
        v9 = v5;
      else
        v9 = 1;
      if ((v9 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI05ImageC0V09LocalizedE0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  BOOL v13;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)a1)
  {
    if (!v7)
      return 0;
    sub_23786A1FC();
    v10 = v7;
    v11 = v3;
    v12 = sub_237A87DD0();

    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v13 = v2 == v6 && v5 == v9;
  if (v13 || (sub_237A8840C() & 1) != 0)
    return sub_2379B8EB4(v4, v8);
  return 0;
}

BOOL _s14CarPlayAssetUI05ImageC0V0E0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  char v4;
  void *v5;
  double v6;
  char v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  id v11;
  id v12;
  char v13;
  char v14;

  v2 = *(void **)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a2 + 16);
  v6 = *(double *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_237A8840C(), result = 0, (v9 & 1) != 0))
  {
    if (v2)
    {
      if (!v5)
        return 0;
      sub_23786A1FC();
      v11 = v5;
      v12 = v2;
      v13 = sub_237A87DD0();

      if ((v13 & 1) == 0)
        return 0;
    }
    else if (v5)
    {
      return 0;
    }
    if ((v4 & 1) == 0)
    {
      if (v3 == v6)
        v14 = v7;
      else
        v14 = 1;
      return (v14 & 1) == 0;
    }
    return (v7 & 1) != 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  char v12;
  char v13;
  char v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(char *)(a1 + 32);
  v8 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(void **)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(char *)(a2 + 32);
  if (v6 < 0)
  {
    if (v11 < 0)
    {
      v21 = *(void **)a1;
      v22 = v2;
      v23 = v5;
      v24 = v4;
      v16 = v8;
      v17 = v7;
      v18 = v10;
      v19 = v9;
      sub_237870090(v8, v7, v10, v9, v11);
      sub_237870090(v3, v2, v5, v4, v6);
      sub_237870090(v3, v2, v5, v4, v6);
      sub_237870090(v8, v7, v10, v9, v11);
      v12 = _s14CarPlayAssetUI05ImageC0V09LocalizedE0V2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
      goto LABEL_7;
    }
  }
  else if ((v11 & 0x80000000) == 0)
  {
    v21 = *(void **)a1;
    v22 = v2;
    v23 = v5;
    v24 = v4;
    v25 = v6 & 1;
    v16 = v8;
    v17 = v7;
    v18 = v10;
    v19 = v9;
    v20 = v11 & 1;
    sub_237870090(v8, v7, v10, v9, v11);
    sub_237870090(v3, v2, v5, v4, v6);
    sub_237870090(v3, v2, v5, v4, v6);
    sub_237870090(v8, v7, v10, v9, v11);
    v12 = _s14CarPlayAssetUI05ImageC0V0E0V2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
LABEL_7:
    v15 = v12;
    sub_2378702E0(v3, v2, v5, v4, v6);
    sub_2378702E0(v8, v7, v10, v9, v11);
    sub_2378702E0(v8, v7, v10, v9, v11);
    sub_2378702E0(v3, v2, v5, v4, v6);
    v13 = v15;
    return v13 & 1;
  }
  sub_237870090(*(void **)a1, v2, v5, v4, v6);
  sub_237870090(v8, v7, v10, v9, v11);
  sub_2378702E0(v3, v2, v5, v4, v6);
  sub_2378702E0(v8, v7, v10, v9, v11);
  v13 = 0;
  return v13 & 1;
}

unint64_t sub_237934578()
{
  unint64_t result;

  result = qword_256822110;
  if (!qword_256822110)
  {
    result = MEMORY[0x23B81FA98](&unk_237A962CC, &type metadata for ImageAsset.ImageType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822110);
  }
  return result;
}

unint64_t sub_2379345BC()
{
  unint64_t result;

  result = qword_256822118;
  if (!qword_256822118)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9627C, &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822118);
  }
  return result;
}

unint64_t sub_237934600()
{
  unint64_t result;

  result = qword_256822120;
  if (!qword_256822120)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.LocalizedImage, &type metadata for ImageAsset.LocalizedImage);
    atomic_store(result, (unint64_t *)&qword_256822120);
  }
  return result;
}

unint64_t sub_237934644()
{
  unint64_t result;

  result = qword_256822128;
  if (!qword_256822128)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9622C, &type metadata for ImageAsset.ImageType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822128);
  }
  return result;
}

unint64_t sub_237934688()
{
  unint64_t result;

  result = qword_256822130;
  if (!qword_256822130)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Image, &type metadata for ImageAsset.Image);
    atomic_store(result, (unint64_t *)&qword_256822130);
  }
  return result;
}

unint64_t sub_2379346CC()
{
  unint64_t result;

  result = qword_256822150;
  if (!qword_256822150)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.LocalizedImage, &type metadata for ImageAsset.LocalizedImage);
    atomic_store(result, (unint64_t *)&qword_256822150);
  }
  return result;
}

unint64_t sub_237934710()
{
  unint64_t result;

  result = qword_256822158;
  if (!qword_256822158)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Image, &type metadata for ImageAsset.Image);
    atomic_store(result, (unint64_t *)&qword_256822158);
  }
  return result;
}

unint64_t sub_237934754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681E730;
  if (!qword_25681E730)
  {
    v1 = sub_237A8633C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDCAEE0], v1);
    atomic_store(result, (unint64_t *)&qword_25681E730);
  }
  return result;
}

unint64_t sub_23793479C()
{
  unint64_t result;

  result = qword_256822168;
  if (!qword_256822168)
  {
    result = MEMORY[0x23B81FA98](&unk_237A961DC, &type metadata for ImageAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822168);
  }
  return result;
}

unint64_t sub_2379347E0()
{
  unint64_t result;

  result = qword_256822170;
  if (!qword_256822170)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.ImageType, &type metadata for ImageAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_256822170);
  }
  return result;
}

unint64_t sub_237934824()
{
  unint64_t result;

  result = qword_256822178;
  if (!qword_256822178)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_256822178);
  }
  return result;
}

unint64_t sub_237934868()
{
  unint64_t result;

  result = qword_256822188;
  if (!qword_256822188)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.ImageType, &type metadata for ImageAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_256822188);
  }
  return result;
}

unint64_t sub_2379348AC()
{
  unint64_t result;

  result = qword_256822190;
  if (!qword_256822190)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_256822190);
  }
  return result;
}

uint64_t sub_2379348F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_237934930()
{
  unint64_t result;

  result = qword_2568221A8;
  if (!qword_2568221A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9618C, &type metadata for ImageAsset.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568221A8);
  }
  return result;
}

unint64_t sub_237934974()
{
  unint64_t result;

  result = qword_2568221B0;
  if (!qword_2568221B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Attributes, &type metadata for ImageAsset.Attributes);
    atomic_store(result, (unint64_t *)&qword_2568221B0);
  }
  return result;
}

unint64_t sub_2379349B8()
{
  unint64_t result;

  result = qword_2568221C0;
  if (!qword_2568221C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Attributes, &type metadata for ImageAsset.Attributes);
    atomic_store(result, (unint64_t *)&qword_2568221C0);
  }
  return result;
}

uint64_t sub_2379349FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822358);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237936CAC();
  sub_237A88688();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_237A8816C();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_237A8816C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

_QWORD *sub_237934BA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822330);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237936C24();
  sub_237A88688();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822340);
    sub_237936CF0(&qword_256822348, (uint64_t (*)(void))sub_237936C68, MEMORY[0x24BEE12D0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_237934CEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A696C61636F6CLL && a2 == 0xEE006567616D4964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237934DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237934EF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237934FEC(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;

  v3 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_237A8633C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_isDirectory))
    goto LABEL_40;
  v8 = objc_msgSend(a1, sel_preferredFilename);
  if (!v8)
  {
    sub_237A862E8();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_237934754();
    sub_237A864D4();
    v9 = v7;
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_willThrow();
    goto LABEL_6;
  }

  v9 = a1;
  NSFileWrapper.data(contentsOf:)(0x73746E65746E6F43, 0xED00006E6F736A2ELL);
  if (v1)
  {
LABEL_6:

    return (uint64_t)v9;
  }
  v12 = v10;
  v13 = v11;
  sub_237A86360();
  swift_allocObject();
  sub_237A86354();
  sub_237936908();
  sub_237A86348();
  v63 = v12;
  v64 = v13;
  swift_release();
  sub_237933C68();
  v15 = *(_QWORD *)(v68 + 16);
  v62 = v68;
  if (!v15)
  {
    v65 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_37:
    swift_bridgeObjectRelease();
    v56 = v63;
    v55 = v64;
    sub_237925F5C(v63, v64);
    v9 = v57;

    sub_23786FD64(v56, v55);
    return (uint64_t)v9;
  }
  v16 = (uint64_t *)(v68 + 56);
  v65 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v17 = *(v16 - 2);
    v18 = *v16;
    if (*v16)
      v19 = v17 == 0;
    else
      v19 = 1;
    if (v19)
      goto LABEL_12;
    v20 = *(v16 - 3);
    v21 = *(v16 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = objc_msgSend(a1, sel_fileWrappers);
    if (!v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v23 = v22;
    v66 = v21;
    sub_23786A1FC();
    v24 = sub_237A87668();

    if (!*(_QWORD *)(v24 + 16) || (v25 = sub_2378D2DB8(v20, v17), (v26 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    v27 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v27, sel_regularFileContents);
    if (!v28)
    {
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
    v29 = v28;
    v61 = v27;
    v30 = sub_237A86540();
    v32 = v31;

    v33 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    sub_2378709EC(v30, v32);
    v34 = (void *)sub_237A86534();
    v35 = objc_msgSend(v33, sel_initWithData_, v34);
    sub_23786FD64(v30, v32);

    if (!v35)
    {
      sub_23786FD64(v30, v32);
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
    v59 = v30;
    v60 = v32;
    v61 = v61;
    v36 = v65;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = v36;
    v39 = sub_2378D2DB8(v66, v18);
    v40 = v36[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      break;
    v43 = v38;
    if (v36[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2378C609C();
    }
    else
    {
      sub_2378CB0D4(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_2378D2DB8(v66, v18);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_41;
      v39 = v44;
    }
    v46 = v61;
    v47 = v67;
    v65 = v67;
    if ((v43 & 1) != 0)
    {
      v48 = v67[7];

      *(_QWORD *)(v48 + 8 * v39) = v46;
    }
    else
    {
      v67[(v39 >> 6) + 8] |= 1 << v39;
      v49 = (_QWORD *)(v47[6] + 16 * v39);
      *v49 = v66;
      v49[1] = v18;
      *(_QWORD *)(v47[7] + 8 * v39) = v46;
      v50 = v47[2];
      v51 = __OFADD__(v50, 1);
      v52 = v50 + 1;
      if (v51)
        goto LABEL_39;
      v47[2] = v52;
      swift_bridgeObjectRetain();
    }
    v54 = v59;
    v53 = v60;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23786FD64(v54, v53);
LABEL_12:
    v16 += 4;
    if (!--v15)
      goto LABEL_37;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  sub_237A880AC();
  __break(1u);
LABEL_41:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

unint64_t sub_2379355AC()
{
  unint64_t result;

  result = qword_2568221D0;
  if (!qword_2568221D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9613C, &type metadata for ImageAsset.LocalizedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568221D0);
  }
  return result;
}

unint64_t sub_2379355F0()
{
  unint64_t result;

  result = qword_2568221E8;
  if (!qword_2568221E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96114, &type metadata for ImageAsset.LocalizedImage.ImageData);
    atomic_store(result, (unint64_t *)&qword_2568221E8);
  }
  return result;
}

uint64_t sub_237935634(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568221D8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379356A8()
{
  unint64_t result;

  result = qword_256822200;
  if (!qword_256822200)
  {
    result = MEMORY[0x23B81FA98](&unk_237A960EC, &type metadata for ImageAsset.LocalizedImage.ImageData);
    atomic_store(result, (unint64_t *)&qword_256822200);
  }
  return result;
}

unint64_t sub_2379356EC()
{
  unint64_t result;

  result = qword_256822210;
  if (!qword_256822210)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9609C, &type metadata for ImageAsset.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822210);
  }
  return result;
}

unint64_t sub_237935734()
{
  unint64_t result;

  result = qword_256822220;
  if (!qword_256822220)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.ImageType, &type metadata for ImageAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_256822220);
  }
  return result;
}

unint64_t sub_23793577C()
{
  unint64_t result;

  result = qword_256822228;
  if (!qword_256822228)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset, &type metadata for ImageAsset);
    atomic_store(result, (unint64_t *)&qword_256822228);
  }
  return result;
}

unint64_t sub_2379357C4()
{
  unint64_t result;

  result = qword_256822230;
  if (!qword_256822230)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Image, &type metadata for ImageAsset.Image);
    atomic_store(result, (unint64_t *)&qword_256822230);
  }
  return result;
}

unint64_t sub_23793580C()
{
  unint64_t result;

  result = qword_256822238;
  if (!qword_256822238)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.LocalizedImage, &type metadata for ImageAsset.LocalizedImage);
    atomic_store(result, (unint64_t *)&qword_256822238);
  }
  return result;
}

unint64_t sub_237935854()
{
  unint64_t result;

  result = qword_256822240;
  if (!qword_256822240)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset.Attributes, &type metadata for ImageAsset.Attributes);
    atomic_store(result, (unint64_t *)&qword_256822240);
  }
  return result;
}

uint64_t initializeWithCopy for ImageAsset(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for ImageAsset(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ImageAsset(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v5, v6, v7, v8, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ImageAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset()
{
  return &type metadata for ImageAsset;
}

uint64_t initializeWithCopy for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2378702E0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_2378702E0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.ImageType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ImageAsset.ImageType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_237935C6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_237935C78(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_237935C88(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType()
{
  return &type metadata for ImageAsset.ImageType;
}

void destroy for ImageAsset.Image(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithTake for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.Image(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.Image()
{
  return &type metadata for ImageAsset.Image;
}

uint64_t destroy for ImageAsset.LocalizedImage(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ImageAsset.LocalizedImage(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageAsset.LocalizedImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImageAsset.LocalizedImage(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.LocalizedImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.LocalizedImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage()
{
  return &type metadata for ImageAsset.LocalizedImage;
}

uint64_t storeEnumTagSinglePayload for ImageAsset.Attributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.Attributes()
{
  return &type metadata for ImageAsset.Attributes;
}

ValueMetadata *type metadata accessor for ImageAsset.Attributes.CodingKeys()
{
  return &type metadata for ImageAsset.Attributes.CodingKeys;
}

uint64_t initializeWithCopy for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.LocalizedImage.ImageData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.LocalizedImage.ImageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.ImageData()
{
  return &type metadata for ImageAsset.LocalizedImage.ImageData;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.CodingKeys()
{
  return &type metadata for ImageAsset.LocalizedImage.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.Image.CodingKeys()
{
  return &type metadata for ImageAsset.Image.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.CodingKeys()
{
  return &type metadata for ImageAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.CodingKeys()
{
  return &type metadata for ImageAsset.ImageType.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.ImageCodingKeys()
{
  return &type metadata for ImageAsset.ImageType.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.LocalizedImageCodingKeys()
{
  return &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys;
}

unint64_t sub_237936298()
{
  unint64_t result;

  result = qword_256822248;
  if (!qword_256822248)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95B4C, &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822248);
  }
  return result;
}

unint64_t sub_2379362E0()
{
  unint64_t result;

  result = qword_256822250;
  if (!qword_256822250)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95C04, &type metadata for ImageAsset.ImageType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822250);
  }
  return result;
}

unint64_t sub_237936328()
{
  unint64_t result;

  result = qword_256822258;
  if (!qword_256822258)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95CBC, &type metadata for ImageAsset.ImageType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822258);
  }
  return result;
}

unint64_t sub_237936370()
{
  unint64_t result;

  result = qword_256822260;
  if (!qword_256822260)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95D74, &type metadata for ImageAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822260);
  }
  return result;
}

unint64_t sub_2379363B8()
{
  unint64_t result;

  result = qword_256822268;
  if (!qword_256822268)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95E64, &type metadata for ImageAsset.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822268);
  }
  return result;
}

unint64_t sub_237936400()
{
  unint64_t result;

  result = qword_256822270;
  if (!qword_256822270)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95F54, &type metadata for ImageAsset.LocalizedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822270);
  }
  return result;
}

unint64_t sub_237936448()
{
  unint64_t result;

  result = qword_256822278;
  if (!qword_256822278)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95F7C, &type metadata for ImageAsset.LocalizedImage.ImageData);
    atomic_store(result, (unint64_t *)&qword_256822278);
  }
  return result;
}

unint64_t sub_237936490()
{
  unint64_t result;

  result = qword_256822280;
  if (!qword_256822280)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96074, &type metadata for ImageAsset.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822280);
  }
  return result;
}

unint64_t sub_2379364D8()
{
  unint64_t result;

  result = qword_256822288;
  if (!qword_256822288)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95FE4, &type metadata for ImageAsset.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822288);
  }
  return result;
}

unint64_t sub_237936520()
{
  unint64_t result;

  result = qword_256822290;
  if (!qword_256822290)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9600C, &type metadata for ImageAsset.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822290);
  }
  return result;
}

unint64_t sub_237936568()
{
  unint64_t result;

  result = qword_256822298;
  if (!qword_256822298)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95E8C, &type metadata for ImageAsset.LocalizedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822298);
  }
  return result;
}

unint64_t sub_2379365B0()
{
  unint64_t result;

  result = qword_2568222A0;
  if (!qword_2568222A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95EB4, &type metadata for ImageAsset.LocalizedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222A0);
  }
  return result;
}

unint64_t sub_2379365F8()
{
  unint64_t result;

  result = qword_2568222A8;
  if (!qword_2568222A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95D9C, &type metadata for ImageAsset.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222A8);
  }
  return result;
}

unint64_t sub_237936640()
{
  unint64_t result;

  result = qword_2568222B0;
  if (!qword_2568222B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95DC4, &type metadata for ImageAsset.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222B0);
  }
  return result;
}

unint64_t sub_237936688()
{
  unint64_t result;

  result = qword_2568222B8;
  if (!qword_2568222B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95CE4, &type metadata for ImageAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222B8);
  }
  return result;
}

unint64_t sub_2379366D0()
{
  unint64_t result;

  result = qword_2568222C0;
  if (!qword_2568222C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95D0C, &type metadata for ImageAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222C0);
  }
  return result;
}

unint64_t sub_237936718()
{
  unint64_t result;

  result = qword_2568222C8;
  if (!qword_2568222C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95B74, &type metadata for ImageAsset.ImageType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222C8);
  }
  return result;
}

unint64_t sub_237936760()
{
  unint64_t result;

  result = qword_2568222D0;
  if (!qword_2568222D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95B9C, &type metadata for ImageAsset.ImageType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222D0);
  }
  return result;
}

unint64_t sub_2379367A8()
{
  unint64_t result;

  result = qword_2568222D8;
  if (!qword_2568222D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95ABC, &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222D8);
  }
  return result;
}

unint64_t sub_2379367F0()
{
  unint64_t result;

  result = qword_2568222E0;
  if (!qword_2568222E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95AE4, &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222E0);
  }
  return result;
}

unint64_t sub_237936838()
{
  unint64_t result;

  result = qword_2568222E8;
  if (!qword_2568222E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95C2C, &type metadata for ImageAsset.ImageType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222E8);
  }
  return result;
}

unint64_t sub_237936880()
{
  unint64_t result;

  result = qword_2568222F0;
  if (!qword_2568222F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A95C54, &type metadata for ImageAsset.ImageType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568222F0);
  }
  return result;
}

unint64_t sub_2379368C4()
{
  unint64_t result;

  result = qword_256822300;
  if (!qword_256822300)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96488, &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822300);
  }
  return result;
}

unint64_t sub_237936908()
{
  unint64_t result;

  result = qword_256822310;
  if (!qword_256822310)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96460, &type metadata for ImageSet.Content);
    atomic_store(result, (unint64_t *)&qword_256822310);
  }
  return result;
}

uint64_t destroy for ImageSet()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14CarPlayAssetUI8ImageSetVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ImageSet(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImageSet(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ImageSet()
{
  return &type metadata for ImageSet;
}

uint64_t getEnumTagSinglePayload for ImageSet.Content.Image(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageSet.Content.Image(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.Image()
{
  return &type metadata for ImageSet.Content.Image;
}

ValueMetadata *type metadata accessor for ImageSet.Content()
{
  return &type metadata for ImageSet.Content;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.ImageData.CodingKeys()
{
  return &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys;
}

unint64_t sub_237936B50()
{
  unint64_t result;

  result = qword_256822318;
  if (!qword_256822318)
  {
    result = MEMORY[0x23B81FA98](&unk_237A963C0, &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822318);
  }
  return result;
}

unint64_t sub_237936B98()
{
  unint64_t result;

  result = qword_256822320;
  if (!qword_256822320)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96330, &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822320);
  }
  return result;
}

unint64_t sub_237936BE0()
{
  unint64_t result;

  result = qword_256822328;
  if (!qword_256822328)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96358, &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822328);
  }
  return result;
}

unint64_t sub_237936C24()
{
  unint64_t result;

  result = qword_256822338;
  if (!qword_256822338)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96698, &type metadata for ImageSet.Content.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822338);
  }
  return result;
}

unint64_t sub_237936C68()
{
  unint64_t result;

  result = qword_256822350;
  if (!qword_256822350)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96438, &type metadata for ImageSet.Content.Image);
    atomic_store(result, (unint64_t *)&qword_256822350);
  }
  return result;
}

unint64_t sub_237936CAC()
{
  unint64_t result;

  result = qword_256822360;
  if (!qword_256822360)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96648, &type metadata for ImageSet.Content.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822360);
  }
  return result;
}

uint64_t sub_237936CF0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256822340);
    v8 = a2();
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237936D58()
{
  unint64_t result;

  result = qword_256822380;
  if (!qword_256822380)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96410, &type metadata for ImageSet.Content.Image);
    atomic_store(result, (unint64_t *)&qword_256822380);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10ImageAssetV14LocalizedImageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237936DE8 + 4 * byte_237A95655[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237936E1C + 4 * byte_237A95650[v4]))();
}

uint64_t sub_237936E1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237936E24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237936E2CLL);
  return result;
}

uint64_t sub_237936E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237936E40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237936E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237936E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.Image.CodingKeys()
{
  return &type metadata for ImageSet.Content.Image.CodingKeys;
}

uint64_t _s14CarPlayAssetUI10ImageAssetV10AttributesV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237936EA8 + 4 * byte_237A9565A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237936EC8 + 4 * byte_237A9565F[v4]))();
}

_BYTE *sub_237936EA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237936EC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237936ED0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237936ED8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237936EE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237936EE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.CodingKeys()
{
  return &type metadata for ImageSet.Content.CodingKeys;
}

unint64_t sub_237936F08()
{
  unint64_t result;

  result = qword_256822388;
  if (!qword_256822388)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96568, &type metadata for ImageSet.Content.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822388);
  }
  return result;
}

unint64_t sub_237936F50()
{
  unint64_t result;

  result = qword_256822390;
  if (!qword_256822390)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96620, &type metadata for ImageSet.Content.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822390);
  }
  return result;
}

unint64_t sub_237936F98()
{
  unint64_t result;

  result = qword_256822398;
  if (!qword_256822398)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96590, &type metadata for ImageSet.Content.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822398);
  }
  return result;
}

unint64_t sub_237936FE0()
{
  unint64_t result;

  result = qword_2568223A0;
  if (!qword_2568223A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A965B8, &type metadata for ImageSet.Content.Image.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568223A0);
  }
  return result;
}

unint64_t sub_237937028()
{
  unint64_t result;

  result = qword_2568223A8;
  if (!qword_2568223A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A964D8, &type metadata for ImageSet.Content.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568223A8);
  }
  return result;
}

unint64_t sub_237937070()
{
  unint64_t result;

  result = qword_2568223B0;
  if (!qword_2568223B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96500, &type metadata for ImageSet.Content.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568223B0);
  }
  return result;
}

uint64_t sub_2379370B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23793719C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v1, 0);
    v2 = v15;
    v4 = type metadata accessor for Zone();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = (uint64_t *)(v6 + *(int *)(v4 + 20));
      v10 = *v8;
      v9 = v8[1];
      v11 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_2379D62F4(v12 > 1, v11 + 1, 1);
      v6 += v7;
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v13 = v15 + 16 * v11;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2379372A0()
{
  return sub_2379372D8(sub_2379372A0, (void (*)(uint64_t))sub_23788072C);
}

uint64_t sub_2379372BC()
{
  return sub_2379372D8(sub_2379372BC, (void (*)(uint64_t))sub_237880B88);
}

uint64_t sub_2379372D8(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void (*v24)(uint64_t);
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[2];
  uint64_t v30;

  v24 = a2;
  v3 = sub_237A88658();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568200D8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v30 = MEMORY[0x24BEE4AF8];
  sub_237A88640();
  v13 = sub_237A88634();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_6;
  v21 = v4;
  v22 = v3;
  v23 = a1;
  sub_2378BBFE0((uint64_t)v12, (uint64_t)v10, &qword_2568200D8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v10, v13) != *MEMORY[0x24BEE4380])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
LABEL_6:
    v19 = sub_237A8864C();
    MEMORY[0x24BDAC7A8](v19);
    *(&v21 - 2) = (uint64_t)&v30;
    sub_237A88064();
    swift_release();
    goto LABEL_9;
  }
  sub_237A8864C();
  sub_2378BE530(&v25);
  swift_release();
  if (v27)
  {
    v28 = v25;
    sub_2378BF370(&v26, v29);
    sub_2378BF380((uint64_t)v29, (uint64_t)&v26);
    v15 = sub_237A8861C();
    v16 = v23(v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    v24(v16);
    v17 = qword_2568200E8;
    v18 = &v28;
  }
  else
  {
    v17 = &qword_2568200E0;
    v18 = &v25;
  }
  sub_2378BC024((uint64_t)v18, v17);
LABEL_9:
  sub_2378BC024((uint64_t)v12, &qword_2568200D8);
  return v30;
}

uint64_t sub_23793754C(_OWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  ValueMetadata *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v20[3];
  char v21;
  _OWORD v22[3];
  _OWORD v23[2];

  v4 = sub_237A88658();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v23);
  sub_237A8861C();
  v8 = (ValueMetadata *)sub_237A88628();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if (v8 == &type metadata for Theme.ColorID)
  {
    v22[2] = *a1;
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v23);
    sub_2378BF370(v23, v22);
    swift_dynamicCast();
    v13 = v20[1];
    v14 = v20[2];
    v15 = v21;
    v16 = (_QWORD *)*a2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v16;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_237895660(0, v16[2] + 1, 1, v16);
      v16 = (_QWORD *)result;
      *a2 = result;
    }
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_237895660((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
      v16 = (_QWORD *)result;
      *a2 = result;
    }
    v16[2] = v18 + 1;
    v19 = &v16[3 * v18];
    v19[4] = v13;
    v19[5] = v14;
    *((_BYTE *)v19 + 48) = v15;
  }
  else
  {
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v23);
    v10 = sub_237A8861C();
    v11 = sub_2379372A0(v10);
    v9(v7, v4);
    return sub_23788072C(v11);
  }
  return result;
}

uint64_t sub_237937728(_OWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  ValueMetadata *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _OWORD v17[3];
  _OWORD v18[2];
  char v19;

  v4 = sub_237A88658();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v18);
  sub_237A8861C();
  v8 = (ValueMetadata *)sub_237A88628();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if (v8 == &type metadata for InstrumentDataIdentifier)
  {
    v17[2] = *a1;
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v18);
    sub_2378BF370(v18, v17);
    swift_dynamicCast();
    v13 = v19;
    v14 = *a2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v14;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_237896264(0, *(_QWORD *)(v14 + 16) + 1, 1, (char *)v14);
      v14 = result;
      *a2 = result;
    }
    v16 = *(_QWORD *)(v14 + 16);
    v15 = *(_QWORD *)(v14 + 24);
    if (v16 >= v15 >> 1)
    {
      result = (uint64_t)sub_237896264((char *)(v15 > 1), v16 + 1, 1, (char *)v14);
      v14 = result;
    }
    *(_QWORD *)(v14 + 16) = v16 + 1;
    *(_BYTE *)(v14 + v16 + 32) = v13;
    *a2 = v14;
  }
  else
  {
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v18);
    v10 = sub_237A8861C();
    v11 = sub_2379372BC(v10);
    v9(v7, v4);
    return sub_237880B88(v11);
  }
  return result;
}

uint64_t Layout.colorIDs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[4];

  v1 = sub_237A88658();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for Layout();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  sub_2378D07D8(v0, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  sub_237A8861C();
  v6 = sub_2379372A0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = sub_2378BFC30(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for Layout()
{
  uint64_t result;

  result = qword_256822590;
  if (!qword_256822590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LayoutType.displayName.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x79616C7265764FLL;
  else
    return 0x7972616D697250;
}

CarPlayAssetUI::LayoutType_optional __swiftcall LayoutType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::LayoutType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static LayoutType.allCases.getter()
{
  return &unk_25096A610;
}

uint64_t LayoutType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x79616C7265766FLL;
  else
    return 0x7972616D697270;
}

uint64_t sub_237937ADC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D564C(*a1, *a2);
}

CarPlayAssetUI::LayoutType_optional sub_237937AE8(Swift::String *a1)
{
  return LayoutType.init(rawValue:)(*a1);
}

void sub_237937AF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x7972616D697270;
  if (*v1)
    v2 = 0x79616C7265766FLL;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_237937B2C()
{
  sub_2379417B8();
  return sub_237A87A34();
}

uint64_t sub_237937B88()
{
  sub_2379417B8();
  return sub_237A879EC();
}

void sub_237937BD4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A450;
}

uint64_t sub_237937BE4()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237937C58()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237937CA0()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t static Layout.== infix(_:_:)()
{
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_237A877DC() & 1;
}

uint64_t Layout.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, &qword_256820D58);
}

uint64_t Layout.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Layout() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Layout.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Layout() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Layout.displayName.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.zones.getter()
{
  type metadata accessor for Layout();
  return swift_bridgeObjectRetain();
}

uint64_t Layout.zones.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Layout() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.zones.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.layoutStyleID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for Layout() + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t Layout.layoutStyleID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(v1 + *(int *)(type metadata accessor for Layout() + 28));
  result = swift_bridgeObjectRelease();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*Layout.layoutStyleID.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.backgroundColor.getter()
{
  type metadata accessor for Layout();
  return swift_retain();
}

uint64_t Layout.backgroundColor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Layout() + 32);
  result = swift_release();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.backgroundColor.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.layoutType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Layout();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t Layout.layoutType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Layout();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*Layout.layoutType.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

__n128 Layout.systemUILayout.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v3 = v1 + *(int *)(type metadata accessor for Layout() + 40);
  v4 = *(_WORD *)(v3 + 64);
  v5 = *(_BYTE *)(v3 + 66);
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  result = *(__n128 *)(v3 + 32);
  v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 66) = v5;
  *(_WORD *)(a1 + 64) = v4;
  return result;
}

__n128 sub_2379380BC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v3 = a1 + *(int *)(type metadata accessor for Layout() + 40);
  v4 = *(_WORD *)(v3 + 64);
  v5 = *(_BYTE *)(v3 + 66);
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  result = *(__n128 *)(v3 + 32);
  v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(_BYTE *)(a2 + 66) = v5;
  *(_WORD *)(a2 + 64) = v4;
  return result;
}

__n128 sub_23793810C(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v8 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_WORD *)a1 + 32);
  v5 = *((_BYTE *)a1 + 66);
  v6 = a2 + *(int *)(type metadata accessor for Layout() + 40);
  *(_OWORD *)v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  result = v8;
  *(__n128 *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_BYTE *)(v6 + 66) = v5;
  *(_WORD *)(v6 + 64) = v4;
  return result;
}

__n128 Layout.systemUILayout.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v8 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_WORD *)a1 + 32);
  v5 = *((_BYTE *)a1 + 66);
  v6 = v1 + *(int *)(type metadata accessor for Layout() + 40);
  *(_OWORD *)v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  result = v8;
  *(__n128 *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_BYTE *)(v6 + 66) = v5;
  *(_WORD *)(v6 + 64) = v4;
  return result;
}

uint64_t (*Layout.systemUILayout.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

double Layout.safeAreaInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Layout() + 44));
}

uint64_t Layout.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for Layout();
  v10 = (double *)(v4 + *(int *)(result + 44));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*Layout.safeAreaInsets.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

void *Layout.preview.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v1 + *(int *)(type metadata accessor for Layout() + 48);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(_BYTE *)(v3 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  return sub_23793EACC(v4, v5, v6, v7, v8, v9, v10, v11);
}

void *sub_237938324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = a1 + *(int *)(type metadata accessor for Layout() + 48);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  v11 = *(_BYTE *)(v3 + 56);
  *(_BYTE *)(a2 + 56) = v11;
  return sub_23793EACC(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_23793837C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(void **)a1;
  v19 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v9 = a2 + *(int *)(type metadata accessor for Layout() + 48);
  v10 = *(_QWORD *)(v9 + 8);
  v17 = *(_QWORD *)(v9 + 16);
  v18 = *(_QWORD *)v9;
  v15 = *(_QWORD *)(v9 + 32);
  v16 = *(_QWORD *)(v9 + 24);
  v13 = *(_QWORD *)(v9 + 48);
  v14 = *(_QWORD *)(v9 + 40);
  v12 = *(_BYTE *)(v9 + 56);
  sub_23793EACC(v2, v19, v3, v4, v5, v6, v7, v8);
  result = sub_23793EB30(v18, v10, v17, v16, v15, v14, v13, v12);
  *(_QWORD *)v9 = v2;
  *(_QWORD *)(v9 + 8) = v19;
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v4;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v7;
  *(_BYTE *)(v9 + 56) = v8;
  return result;
}

__n128 Layout.preview.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  v4 = v1 + *(int *)(type metadata accessor for Layout() + 48);
  sub_23793EB30(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_BYTE *)(v4 + 56));
  *(_OWORD *)v4 = v8;
  *(_OWORD *)(v4 + 16) = v7;
  result = v6;
  *(__n128 *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = v3;
  return result;
}

uint64_t (*Layout.preview.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.wallpapers.getter()
{
  type metadata accessor for Layout();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237938538(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for Layout() + 52);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t Layout.wallpapers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Layout() + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.wallpapers.modify())(_QWORD)
{
  type metadata accessor for Layout();
  return nullsub_1;
}

uint64_t Layout.init(id:template:displaySize:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>)
{
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[3];
  uint64_t v53;
  char v54;
  uint64_t v55[2];
  _OWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  char v60;
  char v61[9];

  v48 = a8;
  v50 = a5;
  v51 = a2;
  v47 = a1;
  v49 = a9;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a3) = *a3;
  v44 = *a4;
  v43 = a4[1];
  v42 = a4[2];
  v29 = *((_QWORD *)a4 + 6);
  v30 = *((_QWORD *)a4 + 7);
  v45 = *((unsigned __int16 *)a4 + 32);
  LOBYTE(a4) = *((_BYTE *)a4 + 66);
  v31 = *a6;
  v32 = a6[1];
  v41 = *a7;
  v40 = a7[1];
  v39 = a7[2];
  v38 = *((_QWORD *)a7 + 6);
  LOBYTE(a7) = *((_BYTE *)a7 + 56);
  sub_2378BBFE0(a1, (uint64_t)v28, &qword_256820D58);
  v33 = (uint64_t *)(v51 + *(int *)(type metadata accessor for LayoutTemplate() + 20));
  v34 = v33[1];
  v46 = *v33;
  swift_bridgeObjectRetain();
  v35 = LayoutTemplate.scaledZones(for:)(a10, a11);
  v61[0] = (char)a3;
  v56[0] = v44;
  v56[1] = v43;
  v56[2] = v42;
  v57 = v29;
  v58 = v30;
  v60 = (char)a4;
  v59 = v45;
  v55[0] = v31;
  v55[1] = v32;
  v52[0] = v41;
  v52[1] = v40;
  v52[2] = v39;
  v53 = v38;
  v54 = (char)a7;
  Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)((uint64_t)v28, v46, v34, v35, v61, (uint64_t *)v56, v50, v55, v49, a12, a13, a14, a15, (uint64_t)v52, v48);
  sub_2378DE6A4(v51, (uint64_t (*)(_QWORD))type metadata accessor for LayoutTemplate);
  return sub_2378BC024(v47, &qword_256820D58);
}

uint64_t Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15)
{
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double *v32;
  uint64_t result;
  int v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  uint64_t v57;

  v43 = a6[1];
  v44 = *a6;
  v41 = a6[3];
  v42 = a6[2];
  v39 = a6[5];
  v40 = a6[4];
  v37 = a6[7];
  v38 = a6[6];
  v35 = *((unsigned __int8 *)a6 + 66);
  v36 = *a5;
  v34 = *((unsigned __int16 *)a6 + 32);
  v45 = *a8;
  v46 = a8[1];
  v47 = *(_QWORD *)a14;
  v48 = *(_QWORD *)(a14 + 8);
  v49 = *(_QWORD *)(a14 + 16);
  v50 = *(_QWORD *)(a14 + 24);
  v51 = *(_QWORD *)(a14 + 32);
  v52 = *(_QWORD *)(a14 + 40);
  v53 = *(_QWORD *)(a14 + 48);
  v55 = *(_BYTE *)(a14 + 56);
  v21 = (int *)type metadata accessor for Layout();
  v22 = (_QWORD *)(a9 + v21[7]);
  *v22 = 0;
  v22[1] = 0;
  v23 = a9 + v21[10];
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_BYTE *)(v23 + 66) = 0;
  *(_WORD *)(v23 + 64) = 512;
  *(_QWORD *)(v23 + 72) = 2;
  v24 = a9 + v21[12];
  *(_OWORD *)(v24 + 16) = 0u;
  *(_OWORD *)(v24 + 32) = 0u;
  *(_OWORD *)(v24 + 41) = 0u;
  *(_OWORD *)v24 = 0u;
  *(_QWORD *)(v24 + 64) = 2;
  v25 = (_QWORD *)(a9 + v21[13]);
  *v25 = MEMORY[0x24BEE4AF8];
  v25[1] = 2;
  v57 = a4;
  v26 = sub_23793719C(a4);
  v27 = swift_bridgeObjectRetain();
  v28 = sub_2378BF3D8(v27);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v28 + 16);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  if (v29 == v30)
  {
    sub_2378BBFE0(a1, a9, &qword_256820D58);
    v31 = (_QWORD *)(a9 + v21[5]);
    *v31 = a2;
    v31[1] = a3;
    *(_QWORD *)(a9 + v21[6]) = v57;
    *(_BYTE *)(a9 + v21[9]) = v36;
    *(_QWORD *)(a9 + v21[8]) = a7;
    v32 = (double *)(a9 + v21[11]);
    *v32 = a10;
    v32[1] = a11;
    v32[2] = a12;
    v32[3] = a13;
    *(_QWORD *)v23 = v44;
    *(_QWORD *)(v23 + 8) = v43;
    *(_QWORD *)(v23 + 16) = v42;
    *(_QWORD *)(v23 + 24) = v41;
    *(_QWORD *)(v23 + 32) = v40;
    *(_QWORD *)(v23 + 40) = v39;
    *(_QWORD *)(v23 + 48) = v38;
    *(_QWORD *)(v23 + 56) = v37;
    *(_BYTE *)(v23 + 66) = (v34 | (v35 << 16)) >> 16;
    *(_WORD *)(v23 + 64) = v34;
    swift_retain();
    swift_bridgeObjectRelease();
    *v22 = v45;
    v22[1] = v46;
    sub_23793EB30(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24), *(_QWORD *)(v24 + 32), *(_QWORD *)(v24 + 40), *(_QWORD *)(v24 + 48), *(_BYTE *)(v24 + 56));
    *(_QWORD *)v24 = v47;
    *(_QWORD *)(v24 + 8) = v48;
    *(_QWORD *)(v24 + 16) = v49;
    *(_QWORD *)(v24 + 24) = v50;
    *(_QWORD *)(v24 + 32) = v51;
    *(_QWORD *)(v24 + 40) = v52;
    *(_QWORD *)(v24 + 48) = v53;
    *(_BYTE *)(v24 + 56) = v55;
    swift_release();
    swift_bridgeObjectRelease();
    *v25 = a15;
    return sub_2378BC024(a1, &qword_256820D58);
  }
  else
  {
    sub_23793EB30(v47, v48, v49, v50, v51, v52, v53, v55);
    swift_bridgeObjectRelease();
    sub_237A87F44();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    sub_23793719C(v57);
    MEMORY[0x23B81E700]();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Layout.resize(from:to:)(CGSize from, CGSize to)
{
  uint64_t v2;
  double height;
  double width;
  double v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  CGFloat *v26;
  CGFloat v27;
  CGFloat v28;
  double v29;
  double v30;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  double v35;
  double v36;
  CGFloat a;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  double v42;
  double v43;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CGAffineTransform v70;
  uint64_t v71;
  CGRect v72;
  CGRect v73;

  height = to.height;
  width = to.width;
  v5 = from.height;
  v6 = from.width;
  v69 = type metadata accessor for Component();
  v61 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Zone();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v55 - v14;
  v16 = *(int *)(type metadata accessor for Layout() + 24);
  v57 = v2;
  v56 = v16;
  v17 = *(_QWORD *)(v2 + v16);
  v18 = *(_QWORD *)(v17 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  if (v18)
  {
    v20 = width / v6;
    v71 = MEMORY[0x24BEE4AF8];
    v21 = height / v5;
    v22 = v17;
    swift_bridgeObjectRetain();
    sub_2379D64EC(0, v18, 0);
    v23 = 0;
    v24 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v55[1] = v22;
    v67 = v24;
    v66 = v22 + v24;
    v25 = *(_QWORD *)(v10 + 72);
    v65 = v25;
    v60 = v9;
    v59 = v13;
    v58 = v15;
    v62 = v18;
    do
    {
      v68 = v23;
      sub_2378D07D8(v66 + v25 * v23, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      sub_2378D07D8((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v26 = (CGFloat *)&v15[*(int *)(v9 + 24)];
      v27 = *v26;
      v28 = v26[1];
      v29 = v26[2];
      v30 = v26[3];
      CGAffineTransformMakeScale(&v70, v20, v21);
      v72.origin.x = v27;
      v72.origin.y = v28;
      v72.size.width = v29;
      v72.size.height = v30;
      v73 = CGRectApplyAffineTransform(v72, &v70);
      *(CGRect *)v26 = v73;
      if (v73.size.width != v29 || v73.size.height != v30)
      {
        v32 = *(int *)(v9 + 28);
        v33 = *(_QWORD *)&v15[v32];
        v34 = *(_QWORD *)(v33 + 16);
        if (v34)
        {
          v35 = v73.size.width;
          v36 = v73.size.height;
          v64 = *(int *)(v9 + 28);
          *(_QWORD *)&v70.a = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_2379D64B4(0, v34, 0);
          a = v70.a;
          v38 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
          v63 = v33;
          v39 = v33 + v38;
          v40 = *(_QWORD *)(v61 + 72);
          do
          {
            sub_2378D07D8(v39, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Component);
            v41 = (double *)&v8[*(int *)(v69 + 28)];
            v42 = *v41;
            v43 = v41[1];
            *v41 = v35;
            v41[1] = v36;
            if (v35 != v42 || v36 != v43)
              sub_237981C70(v35 / v42, v36 / v43);
            v70.a = a;
            v46 = *(_QWORD *)(*(_QWORD *)&a + 16);
            v45 = *(_QWORD *)(*(_QWORD *)&a + 24);
            if (v46 >= v45 >> 1)
            {
              sub_2379D64B4(v45 > 1, v46 + 1, 1);
              a = v70.a;
            }
            *(_QWORD *)(*(_QWORD *)&a + 16) = v46 + 1;
            sub_2378D0858((uint64_t)v8, *(_QWORD *)&a + v38 + v46 * v40, (uint64_t (*)(_QWORD))type metadata accessor for Component);
            v39 += v40;
            --v34;
          }
          while (v34);
          swift_bridgeObjectRelease_n();
          v47 = v58;
          *(CGFloat *)&v58[v64] = a;
          v15 = v47;
          v9 = v60;
          v13 = v59;
          v18 = v62;
        }
        else
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)&v15[v32] = MEMORY[0x24BEE4AF8];
          v18 = v62;
        }
      }
      sub_2378DE6A4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v19 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2379D64EC(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v71;
      }
      v49 = *(_QWORD *)(v19 + 16);
      v48 = *(_QWORD *)(v19 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_2379D64EC(v48 > 1, v49 + 1, 1);
        v19 = v71;
      }
      v50 = v67;
      v51 = v68 + 1;
      *(_QWORD *)(v19 + 16) = v49 + 1;
      v25 = v65;
      v52 = v19 + v50 + v49 * v65;
      v23 = v51;
      sub_2378D0858((uint64_t)v15, v52, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    }
    while (v23 != v18);
    swift_bridgeObjectRelease();
    v53 = v57;
    v54 = v56;
  }
  else
  {
    v53 = v57;
    v54 = v56;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + v54) = v19;
}

uint64_t sub_2379390C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379390E8 + 4 * byte_237A966F0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2379390E8()
{
  return 0x4E79616C70736964;
}

uint64_t sub_237939108()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_23793911C()
{
  return 0x745374756F79616CLL;
}

uint64_t sub_237939140()
{
  return 0x756F72676B636162;
}

uint64_t sub_237939164()
{
  return 0x795474756F79616CLL;
}

uint64_t sub_237939180()
{
  return 0x49556D6574737973;
}

uint64_t sub_2379391A4()
{
  return 0x6165724165666173;
}

uint64_t sub_2379391C8()
{
  return 0x77656976657270;
}

uint64_t sub_2379391E0()
{
  return 0x657061706C6C6177;
}

uint64_t sub_237939200()
{
  unsigned __int8 *v0;

  return sub_2379390C0(*v0);
}

uint64_t sub_237939208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237941060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23793922C()
{
  sub_23793EB94();
  return sub_237A88718();
}

uint64_t sub_237939254()
{
  sub_23793EB94();
  return sub_237A88724();
}

uint64_t Layout.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int16 v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  __int128 v17;
  __int128 *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820350);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793EB94();
  sub_237A886B8();
  LOBYTE(v26) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  sub_23793ED08(&qword_2568223C0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A882B0();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for Layout();
    LOBYTE(v26) = 1;
    sub_237A88274();
    *(_QWORD *)&v26 = *(_QWORD *)(v3 + v9[6]);
    v32 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568223C8);
    sub_23793EDAC(&qword_2568223D0, &qword_2568223D8, (uint64_t)&protocol conformance descriptor for Zone, MEMORY[0x24BEE12A0]);
    sub_237A882B0();
    v26 = *(_OWORD *)(v3 + v9[7]);
    v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
    sub_23789E470(&qword_25681F380, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_237A88268();
    *(_QWORD *)&v26 = *(_QWORD *)(v3 + v9[8]);
    v32 = 4;
    sub_237879654();
    sub_237A882B0();
    LOBYTE(v26) = *(_BYTE *)(v3 + v9[9]);
    v32 = 5;
    sub_23793EBD8();
    sub_237A882B0();
    v10 = (__int128 *)(v3 + v9[10]);
    v11 = *((_WORD *)v10 + 32);
    v12 = *((_BYTE *)v10 + 66);
    v13 = *((_QWORD *)v10 + 9);
    v14 = v10[1];
    v26 = *v10;
    v27 = v14;
    v15 = v10[3];
    v28 = v10[2];
    v29 = v15;
    BYTE2(v30) = v12;
    LOWORD(v30) = v11;
    v31 = v13;
    v32 = 6;
    if ((qword_237A97160[byte_2568219B8] & v13) == 0 && (v11 & 0xFF00) != 0x200)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568223E8);
      sub_23793EC1C(&qword_2568223F0, &qword_2568223E8, (uint64_t (*)(void))sub_23793EC80, MEMORY[0x24BEE4AA8]);
      sub_237A882B0();
    }
    v16 = (__int128 *)(v3 + v9[11]);
    v17 = v16[1];
    v26 = *v16;
    v27 = v17;
    v32 = 7;
    sub_2378DB308();
    sub_237A882B0();
    v18 = (__int128 *)(v3 + v9[12]);
    v19 = *((_QWORD *)v18 + 6);
    v20 = *((_BYTE *)v18 + 56);
    v21 = *((_QWORD *)v18 + 8);
    v22 = v18[1];
    v26 = *v18;
    v27 = v22;
    v28 = v18[2];
    *(_QWORD *)&v29 = v19;
    BYTE8(v29) = v20;
    v30 = v21;
    v32 = 8;
    if ((qword_237A97160[byte_2568219B8] & v21) == 0 && (_QWORD)v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256822400);
      sub_23793EC1C(&qword_256822408, &qword_256822400, (uint64_t (*)(void))sub_23793ECC4, MEMORY[0x24BEE4AA8]);
      sub_237A882B0();
    }
    v23 = *(_QWORD *)(v3 + v9[13] + 8);
    v24 = swift_bridgeObjectRetain();
    sub_2378C3228(v24, v23, 9);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Layout.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  __int8 *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t *v24;
  uint64_t v25;
  int8x16_t *v26;
  int32x2_t v28;
  int64x2_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int v35;
  uint64_t v36;
  int8x16_t *v37;
  int8x16_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  int8x16_t *v60;
  char *v61;
  int *v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  unsigned __int16 v67;
  unsigned __int8 v68;
  char v69;

  v55 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v3);
  v56 = &v51.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v51.i8[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Layout();
  v10 = (int *)MEMORY[0x24BDAC7A8](v9);
  v12 = &v51.i8[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = &v12[v10[7]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v60 = (int8x16_t *)v13;
  v14 = &v12[v10[10]];
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v14[66] = 0;
  *((_WORD *)v14 + 32) = 512;
  *((_QWORD *)v14 + 9) = 2;
  v15 = &v12[v10[12]];
  *(_OWORD *)(v15 + 41) = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  *(_OWORD *)v15 = 0u;
  *((_QWORD *)v15 + 8) = 2;
  v61 = v12;
  v62 = v10;
  v16 = &v12[v10[13]];
  *(_QWORD *)v16 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v16 + 1) = 2;
  v59 = v16;
  v17 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_23793EB94();
  v18 = v58;
  sub_237A88688();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    swift_bridgeObjectRelease();
    sub_23793EB30(*(_QWORD *)v15, *((_QWORD *)v15 + 1), *((_QWORD *)v15 + 2), *((_QWORD *)v15 + 3), *((_QWORD *)v15 + 4), *((_QWORD *)v15 + 5), *((_QWORD *)v15 + 6), v15[56]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v58 = v6;
    v63.i8[0] = 0;
    sub_23793ED08(&qword_256822420, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v19 = (uint64_t)v56;
    sub_237A881F0();
    v20 = v5;
    v21 = (uint64_t)v61;
    sub_237870370(v19, (uint64_t)v61, &qword_256820D58);
    v63.i8[0] = 1;
    v22 = sub_237A881B4();
    v23 = v62;
    v24 = (uint64_t *)(v21 + v62[5]);
    *v24 = v22;
    v24[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568223C8);
    v69 = 2;
    sub_23793EDAC(&qword_256822428, &qword_256822430, (uint64_t)&protocol conformance descriptor for Zone, MEMORY[0x24BEE12D0]);
    sub_237A881F0();
    v26 = v60;
    *(_QWORD *)(v21 + v23[6]) = v63.i64[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
    v56 = v8;
    v69 = 3;
    sub_23789E470(&qword_25681F340, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_237A881A8();
    *v26 = v63;
    v69 = 4;
    sub_237879610();
    sub_237A881F0();
    *(_QWORD *)(v21 + v23[8]) = v63.i64[0];
    v69 = 5;
    sub_23793EE30();
    sub_237A881F0();
    *(_BYTE *)(v21 + v23[9]) = v63.i8[0];
    v69 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568223E8);
    sub_23793EC1C(&qword_256822440, &qword_2568223E8, (uint64_t (*)(void))sub_23793EE74, MEMORY[0x24BEE4AC0]);
    sub_237A881A8();
    v28 = vdup_n_s32((v67 & 0xFF00) == 768);
    v29.i64[0] = v28.u32[0];
    v29.i64[1] = v28.u32[1];
    v30 = (int8x16_t)vcgezq_s64(vshlq_n_s64(v29, 0x3FuLL));
    v31 = vandq_s8(v63, v30);
    v32 = vandq_s8(v64, v30);
    v33 = vandq_s8(v65, v30);
    v34 = vandq_s8(v66, v30);
    if ((v67 & 0xFF00) == 0x300)
      v35 = 512;
    else
      v35 = v67 | (v68 << 16);
    if (qword_25681E410 != -1)
    {
      v53 = v32;
      v54 = v31;
      v52 = v33;
      v51 = v34;
      swift_once();
      v34 = v51;
      v33 = v52;
      v32 = v53;
      v31 = v54;
    }
    v36 = qword_256825198;
    *(int8x16_t *)v14 = v31;
    *((int8x16_t *)v14 + 1) = v32;
    *((int8x16_t *)v14 + 2) = v33;
    *((int8x16_t *)v14 + 3) = v34;
    v14[66] = BYTE2(v35);
    *((_WORD *)v14 + 32) = v35;
    *((_QWORD *)v14 + 9) = v36;
    v69 = 7;
    sub_2378DB448();
    sub_237A881F0();
    v37 = (int8x16_t *)(v21 + v62[11]);
    v38 = v64;
    *v37 = v63;
    v37[1] = v38;
    v69 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822400);
    sub_23793EC1C(&qword_256822450, &qword_256822400, (uint64_t (*)(void))sub_23793EEB8, MEMORY[0x24BEE4AC0]);
    sub_237A881A8();
    v39 = v64.i64[0];
    if (v64.i64[0] == 1)
    {
      if (qword_25681E410 != -1)
        swift_once();
      v40 = 0;
      v54.i64[0] = 0;
      v39 = 0;
      v53.i64[0] = 0;
      v52.i64[0] = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v51.i64[0] = qword_256825198;
    }
    else
    {
      v40 = v63.i64[0];
      v42 = v66.i64[0];
      v43 = v66.i8[8];
      v54.i64[0] = v63.i64[1];
      v53.i64[0] = v64.i64[1];
      v41 = v65.i64[1];
      v52.i64[0] = v65.i64[0];
      sub_23793EACC((void *)v63.i64[0], v63.i64[1], v64.i64[0], v64.i64[1], v65.i64[0], v65.i64[1], v66.i64[0], v66.i8[8]);
      if (qword_25681E410 != -1)
        swift_once();
      v51.i64[0] = qword_256825198;
      sub_23793EF40(v40, v54.i64[0], v39, v53.i64[0], v52.i64[0], v41, v42, v43);
    }
    v44 = v54.i64[0];
    *(_QWORD *)v15 = v40;
    *((_QWORD *)v15 + 1) = v44;
    v45 = v53.i64[0];
    *((_QWORD *)v15 + 2) = v39;
    *((_QWORD *)v15 + 3) = v45;
    *((_QWORD *)v15 + 4) = v52.i64[0];
    *((_QWORD *)v15 + 5) = v41;
    *((_QWORD *)v15 + 6) = v42;
    v15[56] = v43;
    *((_QWORD *)v15 + 8) = v51.i64[0];
    v69 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820348);
    sub_23793EC1C(&qword_256822460, &qword_256820348, (uint64_t (*)(void))sub_23793EEFC, MEMORY[0x24BEE12D0]);
    sub_237A881A8();
    v46 = v63.i64[0];
    if (v63.i64[0])
    {
      v47 = qword_25681E410;
      swift_bridgeObjectRetain();
      if (v47 != -1)
        swift_once();
      v48 = qword_256825198;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_25681E410 != -1)
        swift_once();
      v48 = qword_256825198;
      v46 = MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v20);
    v49 = (uint64_t *)v59;
    swift_bridgeObjectRelease();
    *v49 = v46;
    v49[1] = v48;
    v50 = (uint64_t)v61;
    sub_2378D07D8((uint64_t)v61, v55, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    return sub_2378DE6A4(v50, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  }
}

uint64_t sub_23793A0D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, &qword_256820D58);
}

uint64_t sub_23793A0FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Layout.init(from:)(a1, a2);
}

uint64_t sub_23793A110(_QWORD *a1)
{
  return Layout.encode(to:)(a1);
}

uint64_t sub_23793A124()
{
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_237A877DC() & 1;
}

uint64_t Layout.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD v66[2];
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  int *v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  int v79;
  __int128 v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[496];
  _QWORD v89[64];
  _OWORD v90[9];
  uint64_t v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = (int *)type metadata accessor for Layout();
  v72 = v0;
  v4 = *(_QWORD *)(v0 + v71[6]);
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v90[0] = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(type metadata accessor for Zone() - 8);
    v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v10 = swift_bridgeObjectRetain();
      sub_2378809FC(v10);
      v8 += v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)&v90[0];
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v90[0] = v5;
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(type metadata accessor for Component() - 8);
    v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v16 = swift_bridgeObjectRetain();
      sub_2378809E8(v16);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease_n();
    v17 = *(_QWORD *)&v90[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v86 = v5;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = type metadata accessor for Slot();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v17 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v22 = *(_QWORD *)(v20 + 72);
    v66[1] = &v87;
    v68 = v17;
    swift_bridgeObjectRetain();
    v69 = 0;
    v67 = xmmword_237A8A9F0;
    v70 = xmmword_237A95640;
    v73 = v3;
    v84 = v22;
    v85 = v19;
    do
    {
      sub_2378BBFE0(v21 + *(int *)(v85 + 36), (uint64_t)v3, &qword_25681F430);
      v24 = type metadata accessor for Instrument();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v3, 1, v24) == 1)
      {
        sub_2378BC024((uint64_t)v3, &qword_25681F430);
        v23 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        sub_23788F46C(&v3[*(int *)(v24 + 20)], v89);
        sub_23788F46C(v89, v90);
        v25 = sub_2378A1BDC((uint64_t)v90);
        if (v25 == 1)
        {
          v44 = (void *)sub_2378A1BF8((uint64_t)v90);
          sub_237918E30(v44, v88);
          v45 = (char *)&loc_23793A5B4 + 4 * byte_237A966FA[sub_237919130((uint64_t)v88)];
          __asm { BR              X9 }
        }
        if (v25 == 2
          && (v26 = sub_2378A1BF8((uint64_t)v90), v27 = *(_QWORD *)(v26 + 40), (~*(_DWORD *)(v26 + 40) & 0xFELL) != 0))
        {
          v28 = *(_QWORD *)(v26 + 96);
          v82 = *(_QWORD *)(v26 + 80);
          v83 = v28;
          v81 = *(void **)(v26 + 72);
          v29 = *(void **)(v26 + 56);
          *(_QWORD *)&v80 = *(_QWORD *)(v26 + 64);
          v74 = v29;
          v75 = v27;
          v78 = *(_QWORD *)(v26 + 48);
          v30 = *(void **)(v26 + 24);
          v31 = *(_QWORD *)(v26 + 32);
          v33 = *(void **)(v26 + 8);
          v76 = *(_QWORD *)(v26 + 16);
          v32 = v76;
          *(_QWORD *)&v77 = v31;
          v79 = *(unsigned __int8 *)(v26 + 88);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
          v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = v70;
          *(_QWORD *)(v23 + 56) = &type metadata for ImageAsset;
          *(_QWORD *)(v23 + 64) = &protocol witness table for ImageAsset;
          v34 = swift_allocObject();
          *(_QWORD *)(v23 + 32) = v34;
          *(_QWORD *)(v34 + 16) = v33;
          *(_QWORD *)(v34 + 24) = v32;
          *(_QWORD *)(v34 + 32) = v30;
          *(_QWORD *)(v34 + 40) = v31;
          *(_BYTE *)(v34 + 48) = v27;
          *(_QWORD *)(v34 + 56) = v78;
          *(_QWORD *)(v23 + 96) = &type metadata for ImageAsset;
          *(_QWORD *)(v23 + 104) = &protocol witness table for ImageAsset;
          v35 = swift_allocObject();
          *(_QWORD *)(v23 + 72) = v35;
          v36 = v80;
          *(_QWORD *)(v35 + 16) = v29;
          *(_QWORD *)(v35 + 24) = v36;
          v38 = v81;
          v37 = v82;
          *(_QWORD *)(v35 + 32) = v81;
          *(_QWORD *)(v35 + 40) = v37;
          v39 = v79;
          *(_BYTE *)(v35 + 48) = v79;
          *(_QWORD *)(v35 + 56) = v83;
          v40 = v33;
          v41 = v84;
          sub_237870090(v40, v76, v30, v77, v75);
          v42 = v38;
          v3 = v73;
          v43 = v37;
          v22 = v41;
          sub_237870090(v74, v36, v42, v43, v39);
        }
        else
        {
          v23 = MEMORY[0x24BEE4AF8];
        }
        sub_2378DE6A4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
      }
      sub_2378805C4(v23);
      v21 += v22;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
    v46 = v86;
  }
  else
  {
    swift_bridgeObjectRelease();
    v69 = 0;
    v46 = MEMORY[0x24BEE4AF8];
  }
  v89[0] = v46;
  v47 = v72 + v71[12];
  v48 = *(_QWORD *)(v47 + 16);
  if (v48)
  {
    v50 = *(_QWORD *)(v47 + 24);
    v49 = *(_QWORD *)(v47 + 32);
    v52 = *(void **)v47;
    v51 = *(_QWORD *)(v47 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(v53 + 56) = &type metadata for CAPackageAsset;
    *(_QWORD *)(v53 + 64) = &protocol witness table for CAPackageAsset;
    v54 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v53 + 32) = v54;
    v54[2] = v52;
    v54[3] = v51;
    v54[4] = v48;
    v54[5] = v50;
    v54[6] = v49;
    v55 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2378805C4(v53);
  }
  v56 = *(_QWORD *)(*(_QWORD *)(v72 + v71[13]) + 16);
  if (v56)
  {
    v57 = swift_bridgeObjectRetain();
    v85 = v56 - 1;
    v80 = xmmword_237A8A9F0;
    v77 = xmmword_237A95640;
    v82 = v57;
    v84 = 32;
    v58 = *(_OWORD *)(v57 + 48);
    v90[0] = *(_OWORD *)(v57 + 32);
    v90[1] = v58;
    v59 = *(_OWORD *)(v57 + 64);
    v60 = *(_OWORD *)(v57 + 80);
    v61 = *(_OWORD *)(v57 + 112);
    v90[4] = *(_OWORD *)(v57 + 96);
    v90[5] = v61;
    v90[2] = v59;
    v90[3] = v60;
    v62 = *(_OWORD *)(v57 + 128);
    v63 = *(_OWORD *)(v57 + 144);
    v64 = *(_OWORD *)(v57 + 160);
    v91 = *(_QWORD *)(v57 + 176);
    v90[7] = v63;
    v90[8] = v64;
    v90[6] = v62;
    __asm { BR              X9 }
  }
  return v89[0];
}

uint64_t Layout.Preview.assets.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v6 + 56) = &type metadata for CAPackageAsset;
  *(_QWORD *)(v6 + 64) = &protocol witness table for CAPackageAsset;
  v7 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v6 + 32) = v7;
  v7[2] = v1;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  v8 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

int *Layout.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  int *result;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(int **, uint64_t, uint64_t);
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  void *v82;
  int *v83;
  uint64_t v84;
  char v85;
  __int128 v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  void *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  int *v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(int *, uint64_t, int **, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  int *v126;
  int *v127;
  void *v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  int *v143;
  uint64_t v144;
  unint64_t v145;
  int *v146;
  _BYTE v147[512];
  _QWORD v148[13];
  char v149;
  __int128 v150;
  __int128 v151;
  int *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  _BYTE v156[512];
  _BYTE v157[520];
  unint64_t v158;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v135 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v108 - v7;
  v134 = type metadata accessor for Instrument();
  v140 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = v1;
  v11 = Layout.preview.modify();
  v13 = *(_QWORD *)(v12 + 16);
  v130 = a1;
  if (v13)
  {
    Layout.Preview.restoreAssets(from:)(a1);
    if (v2)
      return (int *)((uint64_t (*)(_BYTE *, uint64_t))v11)(v157, 1);
    v129 = 0;
  }
  else
  {
    v129 = v2;
  }
  ((void (*)(_BYTE *, _QWORD))v11)(v157, 0);
  result = (int *)type metadata accessor for Layout();
  v115 = result;
  v15 = (void *)result[13];
  v16 = v118;
  v17 = *(_QWORD **)((char *)v15 + v118);
  v18 = v17[2];
  v120 = v10;
  v131 = v8;
  v19 = v134;
  v137 = v18;
  if (v18)
  {
    v119 = xmmword_237A971A0;
    v117 = xmmword_237A97190;
    v116 = xmmword_237A97180;
    v127 = (int *)v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)((char *)v15 + v16) = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_23793E8A8(v17);
      *(_QWORD *)((char *)v15 + v16) = v17;
    }
    if (v17[2])
    {
      v144 = 80;
      v145 = 1;
      v158 = v17[9];
      v146 = (int *)v17[11];
      __asm { BR              X9 }
    }
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    JUMPOUT(0x23793CB6CLL);
  }
  v21 = v115[6];
  v109 = *(_QWORD *)(*(_QWORD *)(v118 + v21) + 16);
  if (!v109)
    return result;
  v22 = 0;
  v133 = v21;
  while (1)
  {
    v23 = *(_QWORD *)(v16 + v21);
    if (v22 >= *(_QWORD *)(v23 + 16))
      goto LABEL_76;
    result = (int *)type metadata accessor for Zone();
    v24 = *((_QWORD *)result - 1);
    v145 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v146 = result;
    v144 = *(_QWORD *)(v24 + 72) * v22;
    v113 = *(_QWORD *)(*(_QWORD *)(v23 + v145 + v144 + result[7]) + 16);
    if (v113)
      break;
LABEL_58:
    if (++v22 == v109)
      return result;
  }
  v25 = 0;
  v139 = v22;
  while (1)
  {
    v26 = *(_QWORD *)(v16 + v21);
    if (v22 >= *(_QWORD *)(v26 + 16))
      goto LABEL_74;
    v27 = *(_QWORD *)(v26 + v145 + v144 + v146[7]);
    if (v25 >= *(_QWORD *)(v27 + 16))
      goto LABEL_75;
    v158 = v25;
    result = (int *)type metadata accessor for Component();
    v28 = *((_QWORD *)result - 1);
    v29 = v158;
    v142 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v143 = result;
    v141 = *(_QWORD *)(v28 + 72) * v158;
    v136 = *(_QWORD *)(*(_QWORD *)(v27 + v142 + v141 + result[8]) + 16);
    if (v136)
      break;
LABEL_16:
    v25 = v29 + 1;
    if (v25 == v113)
      goto LABEL_58;
  }
  v30 = 0;
  while (1)
  {
    v31 = *(_QWORD *)(v16 + v21);
    if (v22 >= *(_QWORD *)(v31 + 16))
      break;
    v32 = *(_QWORD *)(v31 + v145 + v144 + v146[7]);
    if (v29 >= *(_QWORD *)(v32 + 16))
      goto LABEL_63;
    v33 = *(_QWORD *)(v32 + v142 + v141 + v143[8]);
    if (v30 >= *(_QWORD *)(v33 + 16))
      goto LABEL_64;
    v34 = type metadata accessor for Slot();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v137 = *(_QWORD *)(v35 + 72) * v30;
    v138 = v36;
    sub_2378BBFE0(v33 + v36 + v137 + *(int *)(v34 + 36), (uint64_t)v8, &qword_25681F430);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v8, 1, v19) == 1)
    {
      result = (int *)sub_2378BC024((uint64_t)v8, &qword_25681F430);
      goto LABEL_22;
    }
    sub_2378D0858((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    v37 = &v10[*(int *)(v19 + 20)];
    sub_23788F46C(v37, v156);
    sub_23788F46C(v156, v157);
    v38 = sub_2378A1BDC((uint64_t)v157);
    if (v38 == 1)
    {
      v51 = (void *)sub_2378A1BF8((uint64_t)v157);
      sub_237918E30(v51, &v152);
      v52 = sub_237919130((uint64_t)&v152);
      v132 = v37;
      __asm { BR              X9 }
    }
    if (v38 == 2)
    {
      v132 = v37;
      v39 = sub_2378A1BF8((uint64_t)v157);
      v40 = *(int **)(v39 + 8);
      v41 = *(_QWORD *)(v39 + 16);
      v42 = *(void **)(v39 + 24);
      v43 = *(_QWORD *)(v39 + 40);
      v121 = *(_QWORD *)(v39 + 32);
      v122 = v41;
      v44 = *(int **)(v39 + 48);
      v125 = *(int **)(v39 + 56);
      v126 = v40;
      v45 = *(_QWORD *)(v39 + 64);
      *(_QWORD *)&v119 = *(_QWORD *)(v39 + 72);
      v123 = *(_QWORD *)(v39 + 80);
      v124 = v45;
      v46 = *(_QWORD *)(v39 + 88);
      v127 = *(int **)(v39 + 96);
      v128 = v42;
      if ((~(_BYTE)v43 & 0xFE) == 0)
      {
        v47 = v16;
        v48 = v46;
        sub_2378DE6E0(v156, sub_2378DE7AC);
        v49 = v48;
        v16 = v47;
        v50 = v119;
LABEL_47:
        v85 = *(_BYTE *)(v39 + 104);
        LOBYTE(v148[0]) = *(_BYTE *)v39;
        v148[1] = v126;
        v148[2] = v122;
        v148[3] = v128;
        v148[4] = v121;
        v148[5] = v43;
        v148[6] = v44;
        v148[7] = v125;
        v148[8] = v124;
        v148[9] = v50;
        v148[10] = v123;
        v148[11] = v49;
        v148[12] = v127;
        v149 = v85;
        v86 = *(_OWORD *)(v39 + 128);
        v150 = *(_OWORD *)(v39 + 112);
        v151 = v86;
        sub_23793F458(v148);
        sub_23788F46C(v148, v132);
        v8 = v131;
        v10 = v120;
        v19 = v134;
        goto LABEL_48;
      }
      *(_QWORD *)&v117 = (char)v43;
      v114 = v46;
      LODWORD(v116) = (char)v46;
      v54 = v130[3];
      v53 = v130[4];
      __swift_project_boxed_opaque_existential_2Tm(v130, v54);
      v115 = v44;
      v152 = v44;
      v55 = *(uint64_t (**)(int **, uint64_t, uint64_t))(v53 + 24);
      sub_23788F46C(v156, v147);
      v56 = (uint64_t *)sub_2378A1BF8((uint64_t)v147);
      sub_23788F46C(v156, v148);
      v57 = (uint64_t *)sub_2378A1BF8((uint64_t)v148);
      sub_23793F4C0(v57);
      sub_23793F4C0(v56);
      if ((v55(&v152, v54, v53) & 1) != 0)
      {
        if ((v117 & 0x80000000) == 0)
        {
          v58 = v130[4];
          v112 = v130[3];
          v110 = v58;
          __swift_project_boxed_opaque_existential_2Tm(v130, v112);
          LOBYTE(v152) = 0;
          v111 = *(uint64_t (**)(int *, uint64_t, int **, uint64_t, uint64_t))(v58 + 8);
          v59 = v128;
          v60 = v128;
          v61 = v122;
          swift_bridgeObjectRetain();
          v62 = v126;
          v63 = v129;
          v64 = v111(v126, v61, &v152, v112, v110);
          v129 = v63;
          if (v63)
          {
            v98 = v59;
            v99 = v121;
            v100 = v117;
            sub_2378702E0(v62, v61, v59, v121, v117);
            v101 = (uint64_t)v120;
            v102 = v62;
            v103 = v61;
            v74 = v124;
            v75 = v125;
            v104 = v123;
            v105 = v98;
            goto LABEL_68;
          }
          v65 = (void *)v64;

          v66 = v61;
          v67 = v117;
          sub_2378702E0(v62, v66, v59, v121, v117);
          *(_QWORD *)&v117 = v67 & 1;
          v128 = v65;
          goto LABEL_36;
        }
        v152 = v126;
        v19 = v121;
        v79 = v122;
        v153 = v122;
        v154 = v128;
        v155 = v121;
        v80 = v126;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81 = v129;
        v68 = v130;
        ImageAsset.LocalizedImage.restore(from:)(v130);
        v129 = v81;
        v16 = v118;
        if (v81)
          goto LABEL_65;
        sub_2378702E0(v126, v79, v128, v19, v117);
        v126 = v152;
        *(_QWORD *)&v117 = 128;
        v128 = v154;
        v121 = v155;
        v122 = v153;
      }
      else
      {
LABEL_36:
        v16 = v118;
        v68 = v130;
      }
      v69 = v68[3];
      v70 = v68[4];
      __swift_project_boxed_opaque_existential_2Tm(v68, v69);
      v152 = v127;
      if (((*(uint64_t (**)(int **, uint64_t, uint64_t))(v70 + 24))(&v152, v69, v70) & 1) != 0)
      {
        if ((v116 & 0x80000000) != 0)
        {
          v152 = v125;
          v153 = v124;
          v82 = (void *)v119;
          v154 = (void *)v119;
          v155 = v123;
          v83 = v125;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v84 = v129;
          ImageAsset.LocalizedImage.restore(from:)(v68);
          v129 = v84;
          v21 = v133;
          if (v84)
          {
            v107 = v152;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v101 = (uint64_t)v120;
            v99 = v121;
            v75 = v125;
            v102 = v126;
            v103 = v122;
            v104 = v123;
            v74 = v124;
            goto LABEL_67;
          }
          sub_2378702E0(v125, v124, v82, v123, v116);
          sub_2378DE6E0(v156, sub_2378DE7AC);
          sub_2378DE6E0(v156, sub_2378DE7AC);
          v124 = v153;
          v125 = v152;
          LOBYTE(v49) = 0x80;
          v50 = (uint64_t)v154;
          v123 = v155;
        }
        else
        {
          v71 = v68[4];
          v112 = v68[3];
          v110 = v71;
          __swift_project_boxed_opaque_existential_2Tm(v68, v112);
          LOBYTE(v152) = 0;
          v111 = *(uint64_t (**)(int *, uint64_t, int **, uint64_t, uint64_t))(v71 + 8);
          v72 = (void *)v119;
          v73 = (id)v119;
          v74 = v124;
          swift_bridgeObjectRetain();
          v75 = v125;
          v76 = v129;
          v77 = v111(v125, v74, &v152, v112, v110);
          v129 = v76;
          if (v76)
          {
            v104 = v123;
            sub_2378702E0(v75, v74, v72, v123, v116);
            v101 = (uint64_t)v120;
            v99 = v121;
            v102 = v126;
            v103 = v122;
LABEL_67:
            v105 = v128;
            v100 = v117;
            goto LABEL_68;
          }
          v78 = v77;

          sub_2378702E0(v75, v74, v72, v123, v116);
          sub_2378DE6E0(v156, sub_2378DE7AC);
          sub_2378DE6E0(v156, sub_2378DE7AC);
          LOBYTE(v49) = v114 & 1;
          v50 = v78;
          v16 = v118;
          v21 = v133;
        }
      }
      else
      {
        sub_2378DE6E0(v156, sub_2378DE7AC);
        sub_2378DE6E0(v156, sub_2378DE7AC);
        v21 = v133;
        v50 = v119;
        LOBYTE(v49) = v114;
      }
      v43 = v117;
      v49 = v49;
      v44 = v115;
      goto LABEL_47;
    }
LABEL_48:
    v87 = v135;
    sub_2378D07D8((uint64_t)v10, v135, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v140 + 56))(v87, 0, 1, v19);
    v88 = *(_QWORD *)(v16 + v21);
    v89 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v16 + v21) = v88;
    if ((v89 & 1) == 0)
    {
      v88 = sub_23793E8D0(v88);
      *(_QWORD *)(v16 + v21) = v88;
    }
    if (v139 >= *(_QWORD *)(v88 + 16))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      JUMPOUT(0x23793CA24);
    }
    v90 = v88 + v145 + v144;
    v91 = v146[7];
    v92 = *(_QWORD *)(v90 + v91);
    v93 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v90 + v91) = v92;
    if ((v93 & 1) == 0)
    {
      v92 = sub_23793E880(v92);
      *(_QWORD *)(v90 + v91) = v92;
    }
    if (v158 >= *(_QWORD *)(v92 + 16))
      goto LABEL_70;
    v94 = v92 + v142 + v141;
    v95 = v143[8];
    v96 = *(_QWORD *)(v94 + v95);
    v97 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v94 + v95) = v96;
    if ((v97 & 1) == 0)
    {
      v96 = sub_23793E8BC(v96);
      *(_QWORD *)(v94 + v95) = v96;
    }
    v21 = v133;
    v19 = v134;
    if (v30 >= *(_QWORD *)(v96 + 16))
      goto LABEL_71;
    sub_23790760C(v135, v96 + v138 + v137 + *(int *)(v34 + 36));
    result = (int *)sub_2378DE6A4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
LABEL_22:
    ++v30;
    v22 = v139;
    v29 = v158;
    if (v136 == v30)
      goto LABEL_16;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  v106 = v152;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v101 = (uint64_t)v120;
  v99 = v19;
  v74 = v124;
  v75 = v125;
  v103 = v122;
  v104 = v123;
  v105 = v128;
  v100 = v117;
  v102 = v126;
LABEL_68:
  sub_2378702E0(v102, v103, v105, v99, v100);
  sub_2378702E0(v75, v74, (void *)v119, v104, v116);
  sub_2378DE6E0(v156, sub_2378DE7AC);
  return (int *)sub_2378DE6A4(v101, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
}

void Layout.Preview.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;

  v3 = (id *)v1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v5);
  v14 = 1;
  if (((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 24))(&v14, v5, v6) & 1) != 0)
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_2Tm(a1, v7);
    v9 = *(_QWORD *)(v1 + 8);
    v10 = *(_QWORD *)(v1 + 16);
    v13 = 0;
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v8 + 8))(v9, v10, &v13, v7, v8);
    if (!v2)
    {
      v12 = (void *)v11;

      *v3 = v12;
    }
  }
}

uint64_t Layout.updating(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[16];
  uint64_t v42;
  _QWORD v43[7];
  char v44;
  uint64_t v45[2];
  _OWORD v46[4];
  __int16 v47;
  char v48;
  char v49;
  _BYTE v50[24];

  v39 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v6;
  v7 = (int *)type metadata accessor for Layout();
  v8 = *(_QWORD *)(a1 + v7[6]);
  v42 = v2;
  swift_bridgeObjectRetain();
  v38 = sub_2378D6998((void (*)(uint64_t))sub_23793F51C, (uint64_t)v41, v8, (uint64_t)v50);
  swift_bridgeObjectRelease();
  sub_2378BBFE0(v2, (uint64_t)v6, &qword_256820D58);
  v9 = (uint64_t *)(a1 + v7[5]);
  v11 = *v9;
  v10 = v9[1];
  v36 = v11;
  v40 = v10;
  v12 = v7[10];
  v49 = *(_BYTE *)(a1 + v7[9]);
  v13 = a1 + v12;
  LOWORD(v12) = *(_WORD *)(a1 + v12 + 64);
  v14 = *(_BYTE *)(v13 + 66);
  v15 = *(_OWORD *)(v13 + 16);
  v46[0] = *(_OWORD *)v13;
  v46[1] = v15;
  v16 = *(_OWORD *)(v13 + 48);
  v46[2] = *(_OWORD *)(v13 + 32);
  v46[3] = v16;
  v48 = v14;
  v47 = v12;
  v17 = v7[7];
  v35 = *(_QWORD *)(a1 + v7[8]);
  v18 = v7[12];
  v19 = (double *)(a1 + v7[11]);
  v20 = *v19;
  v21 = v19[1];
  v22 = v19[2];
  v23 = v19[3];
  v24 = *(_QWORD *)(a1 + v17 + 8);
  v45[0] = *(_QWORD *)(a1 + v17);
  v45[1] = v24;
  v26 = *(_QWORD *)(a1 + v18 + 8);
  v27 = *(_QWORD *)(a1 + v18 + 16);
  v28 = *(_QWORD *)(a1 + v18 + 24);
  v29 = *(_QWORD *)(a1 + v18 + 32);
  v30 = *(_QWORD *)(a1 + v18 + 40);
  v31 = *(_QWORD *)(a1 + v18 + 48);
  LOBYTE(v8) = *(_BYTE *)(a1 + v18 + 56);
  v43[0] = *(_QWORD *)(a1 + v18);
  v25 = (void *)v43[0];
  v43[1] = v26;
  v43[2] = v27;
  v43[3] = v28;
  v43[4] = v29;
  v43[5] = v30;
  v43[6] = v31;
  v44 = v8;
  v32 = *(_QWORD *)(a1 + v7[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = v35;
  swift_retain();
  sub_23793EACC(v25, v26, v27, v28, v29, v30, v31, v8);
  swift_bridgeObjectRetain();
  return Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)((uint64_t)v37, v36, v40, v38, &v49, (uint64_t *)v46, v33, v45, v39, v20, v21, v22, v23, (uint64_t)v43, v32);
}

uint64_t sub_23793CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D38);
  MEMORY[0x24BDAC7A8](v7);
  v31 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Zone();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v30 = (uint64_t)&v27 - v14;
  v15 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for Layout() + 24));
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v27 = a3;
    v28 = a1;
    v29 = v3;
    v17 = v15 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v18 = (_QWORD *)(a1 + *(int *)(v9 + 20));
    v19 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2378D07D8(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v20 = &v13[*(int *)(v9 + 20)];
      v21 = *(_QWORD *)v20 == *v18 && *((_QWORD *)v20 + 1) == v18[1];
      if (v21 || (sub_237A8840C() & 1) != 0)
        break;
      sub_2378DE6A4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      v17 += v19;
      if (!--v16)
      {
        v22 = 1;
        a1 = v28;
        a3 = v27;
        goto LABEL_12;
      }
    }
    v23 = v31;
    sub_2378D0858((uint64_t)v13, v31, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v22 = 0;
    a1 = v28;
    a3 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    v22 = 1;
LABEL_12:
    v23 = v31;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v23, v22, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9) == 1)
  {
    sub_2378BC024(v23, &qword_256820D38);
    return sub_2378D07D8(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  }
  else
  {
    v25 = v23;
    v26 = v30;
    sub_2378D0858(v25, v30, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    Zone.updating(with:)(a1, a3);
    return sub_2378DE6A4(v26, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  }
}

int *sub_23793D154(_QWORD *a1)
{
  return Layout.restoreAssets(from:)(a1);
}

uint64_t Layout.isUserSelectable.getter()
{
  uint64_t v0;
  char v1;

  if ((*(_BYTE *)(v0 + *(int *)(type metadata accessor for Layout() + 36)) & 1) != 0)
    v1 = sub_237A8840C();
  else
    v1 = 1;
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t Layout.Preview.AppearanceState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    sub_237A885E0();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 8);
    sub_237A885E0();
    sub_2378780B4(a1, v3);
    v3 = v4;
  }
  return sub_2378780B4(a1, v3);
}

uint64_t sub_23793D248()
{
  _BYTE *v0;

  if (*v0)
    return 0x796C6E4F6B726164;
  else
    return 0x63696D616E7964;
}

uint64_t sub_23793D284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237941508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23793D2A8()
{
  sub_23793F538();
  return sub_237A88718();
}

uint64_t sub_23793D2D0()
{
  sub_23793F538();
  return sub_237A88724();
}

uint64_t sub_23793D2F8()
{
  sub_23793F57C();
  return sub_237A88718();
}

uint64_t sub_23793D320()
{
  sub_23793F57C();
  return sub_237A88724();
}

uint64_t sub_23793D348()
{
  _BYTE *v0;

  if (*v0)
    return 1802658148;
  else
    return 0x746867696CLL;
}

uint64_t sub_23793D378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379415F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23793D39C()
{
  sub_23793F644();
  return sub_237A88718();
}

uint64_t sub_23793D3C4()
{
  sub_23793F644();
  return sub_237A88724();
}

uint64_t Layout.Preview.AppearanceState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822470);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822478);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822480);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v1;
  v20 = v1[1];
  v12 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793F538();
  sub_237A886B8();
  if ((v12 & 1) != 0)
  {
    LOBYTE(v29) = 1;
    sub_23793F57C();
    v13 = v27;
    sub_237A88220();
    v29 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822498);
    sub_23793F5C0();
    v14 = v22;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
  }
  else
  {
    LOBYTE(v29) = 0;
    sub_23793F644();
    v16 = v27;
    sub_237A88220();
    v29 = v25;
    v28 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822498);
    sub_23793F5C0();
    v17 = v24;
    v18 = v26;
    sub_237A882B0();
    if (!v18)
    {
      v29 = v20;
      v28 = 1;
      sub_237A882B0();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  }
}

uint64_t Layout.Preview.AppearanceState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_237A885D4();
  sub_237A885E0();
  if ((v3 & 1) != 0)
    v2 = v1;
  else
    sub_2378780B4((uint64_t)v5, v1);
  sub_2378780B4((uint64_t)v5, v2);
  return sub_237A88610();
}

uint64_t Layout.Preview.AppearanceState.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568224B0);
  v4 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  v38 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568224B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568224C0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_23793F538();
  v15 = v41;
  sub_237A88688();
  if (v15)
    goto LABEL_6;
  v16 = v39;
  v35 = v11;
  v41 = v13;
  v17 = sub_237A881FC();
  v18 = (char *)v17;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v21 = sub_237A87FB0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v23 = &type metadata for Layout.Preview.AppearanceState;
    v24 = v41;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v10);
LABEL_6:
    v31 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_2Tm(v31);
  }
  if ((*(_BYTE *)(v17 + 32) & 1) != 0)
  {
    v19 = *(_BYTE *)(v17 + 32);
    LOBYTE(v44) = 1;
    sub_23793F57C();
    v20 = v41;
    sub_237A88154();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822498);
    sub_23793F688();
    v28 = v37;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v10);
    v29 = 0;
    v30 = v44;
    v31 = (uint64_t)v40;
  }
  else
  {
    v26 = *(_BYTE *)(v17 + 32);
    LOBYTE(v44) = 0;
    sub_23793F644();
    v27 = v9;
    sub_237A88154();
    v39 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822498);
    LOBYTE(v43) = 0;
    sub_23793F688();
    sub_237A881F0();
    v38 = v44;
    v42 = 1;
    sub_237A881F0();
    v32 = v35;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v10);
    v29 = v43;
    v31 = (uint64_t)v40;
    v19 = v26;
    v30 = v38;
  }
  v33 = v36;
  *v36 = v30;
  v33[1] = v29;
  *((_BYTE *)v33 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_2Tm(v31);
}

uint64_t sub_23793DBEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Layout.Preview.AppearanceState.init(from:)(a1, a2);
}

uint64_t sub_23793DC00(_QWORD *a1)
{
  return Layout.Preview.AppearanceState.encode(to:)(a1);
}

uint64_t sub_23793DC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_237A885D4();
  sub_237A885E0();
  if ((v3 & 1) != 0)
    v2 = v1;
  else
    sub_2378780B4((uint64_t)v5, v1);
  sub_2378780B4((uint64_t)v5, v2);
  return sub_237A88610();
}

uint64_t sub_23793DC94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    sub_237A885E0();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 8);
    sub_237A885E0();
    sub_2378780B4(a1, v3);
    v3 = v4;
  }
  return sub_2378780B4(a1, v3);
}

uint64_t sub_23793DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_237A885D4();
  sub_237A885E0();
  if ((v3 & 1) != 0)
    v2 = v1;
  else
    sub_2378780B4((uint64_t)v5, v1);
  sub_2378780B4((uint64_t)v5, v2);
  return sub_237A88610();
}

uint64_t Layout.Preview.package.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  id v6;

  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  v4 = *((_QWORD *)v1 + 4);
  v5 = *v1;
  *(_OWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v4;
  v6 = (id)v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Layout.Preview.package.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *(void **)v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*Layout.Preview.package.modify())()
{
  return nullsub_1;
}

uint64_t Layout.Preview.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_237908B80(v2, v3, v4);
}

uint64_t Layout.Preview.state.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_237908D68(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_BYTE *)(v1 + 56) = v4;
  return result;
}

uint64_t (*Layout.Preview.state.modify())()
{
  return nullsub_1;
}

__n128 Layout.Preview.init(package:stateForPaletteID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 32);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(__n128 *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = a2;
  *(_QWORD *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 56) = 1;
  return result;
}

__n128 Layout.Preview.init(package:state:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unsigned __int8 v4;
  __int128 v5;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2[1].n128_u8[0];
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 32) = v3;
  result = *a2;
  *(__n128 *)(a3 + 40) = *a2;
  *(_BYTE *)(a3 + 56) = v4;
  return result;
}

uint64_t Layout.Preview.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  if (*(_QWORD *)v1)
  {
    sub_237A885EC();
    v7 = v3;
    sub_237A87DDC();

  }
  else
  {
    sub_237A885EC();
  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  if ((v6 & 1) != 0)
    v5 = v4;
  else
    sub_2378780B4(a1, v4);
  return sub_2378780B4(a1, v5);
}

uint64_t sub_23793DFE0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 0x6567616B636170;
}

uint64_t sub_23793E018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379416D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23793E03C()
{
  sub_23793F70C();
  return sub_237A88718();
}

uint64_t sub_23793E064()
{
  sub_23793F70C();
  return sub_237A88724();
}

uint64_t Layout.Preview.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568224D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v14 = v1[1];
  v15 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v12 = *((_QWORD *)v1 + 6);
  v13 = v9;
  v19 = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793F70C();
  sub_237A886B8();
  v16 = v15;
  v17 = v14;
  v18 = v10;
  v20 = 0;
  sub_23793F750();
  sub_237A882B0();
  if (!v2)
  {
    *(_QWORD *)&v16 = v13;
    *((_QWORD *)&v16 + 1) = v12;
    LOBYTE(v17) = v19;
    v20 = 1;
    sub_23793F794();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Layout.Preview.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  _BYTE v7[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 56);
  sub_237A885D4();
  sub_237A885EC();
  if (v1)
  {
    v5 = v1;
    sub_237A87DDC();

  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  if ((v4 & 1) != 0)
    v3 = v2;
  else
    sub_2378780B4((uint64_t)v7, v2);
  sub_2378780B4((uint64_t)v7, v3);
  return sub_237A88610();
}

void Layout.Preview.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568224F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23793F70C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v31 = 0;
    sub_23793F7D8();
    sub_237A881F0();
    v9 = v26;
    v10 = v28;
    v21 = v29;
    v22 = v27;
    v11 = v30;
    v31 = 1;
    v12 = sub_23793F81C();
    v23 = v9;
    v24 = v12;
    v13 = v9;
    v14 = v10;
    v25 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = (uint64_t)v26;
    v16 = v27;
    v17 = v28;
    v18 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v15, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v19 = v22;
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v19;
    v20 = v21;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v20;
    *(_QWORD *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 40) = v15;
    *(_QWORD *)(a2 + 48) = v16;
    *(_BYTE *)(a2 + 56) = v17;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_237908D68(v15, v16, v17);
  }
}

uint64_t sub_23793E588()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v6 + 56) = &type metadata for CAPackageAsset;
  *(_QWORD *)(v6 + 64) = &protocol witness table for CAPackageAsset;
  v7 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v6 + 32) = v7;
  v7[2] = v1;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  v8 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void sub_23793E634(_QWORD *a1)
{
  Layout.Preview.restoreAssets(from:)(a1);
}

void sub_23793E648(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Layout.Preview.init(from:)(a1, a2);
}

uint64_t sub_23793E65C(_QWORD *a1)
{
  return Layout.Preview.encode(to:)(a1);
}

uint64_t sub_23793E674(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  if (*(_QWORD *)v1)
  {
    sub_237A885EC();
    v7 = v3;
    sub_237A87DDC();

  }
  else
  {
    sub_237A885EC();
  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  if ((v6 & 1) != 0)
    v5 = v4;
  else
    sub_2378780B4(a1, v4);
  return sub_2378780B4(a1, v5);
}

uint64_t sub_23793E770()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  _BYTE v7[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 56);
  sub_237A885D4();
  sub_237A885EC();
  if (v1)
  {
    v5 = v1;
    sub_237A87DDC();

  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  if ((v4 & 1) != 0)
    v3 = v2;
  else
    sub_2378780B4((uint64_t)v7, v2);
  sub_2378780B4((uint64_t)v7, v3);
  return sub_237A88610();
}

uint64_t sub_23793E880(unint64_t a1)
{
  return sub_237895BE4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_23793E894(uint64_t a1)
{
  return sub_23789601C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_23793E8A8(_QWORD *a1)
{
  return sub_237896128(0, a1[2], 0, a1);
}

uint64_t sub_23793E8BC(unint64_t a1)
{
  return sub_237896114(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23793E8D0(unint64_t a1)
{
  return sub_237896250(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23793E8E4(unint64_t a1)
{
  return sub_237895680(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23793E8F8(_QWORD *a1)
{
  return sub_23789657C(0, a1[2], 0, a1);
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      v4 = 1;
      sub_237908B80(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 1);
      sub_237908B80(v2, v3, 1);
      v8 = sub_2379B626C(v2, v5);
      v7 = 1;
      goto LABEL_8;
    }
LABEL_5:
    sub_237908B80(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_237908B80(v2, v3, v4);
    v8 = 0;
    goto LABEL_8;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_5;
  sub_237908B80(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0);
  sub_237908B80(v2, v3, 0);
  v4 = 0;
  v7 = 0;
  v8 = 0;
  if ((sub_2379B626C(v2, v5) & 1) != 0)
  {
    v8 = sub_2379B626C(v3, v6);
    v4 = 0;
    v7 = 0;
  }
LABEL_8:
  sub_237908D68(v2, v3, v4);
  sub_237908D68(v5, v6, v7);
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV2eeoiySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  char v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_QWORD *)a1 + 6);
  v5 = *((_BYTE *)a1 + 56);
  v6 = *((_QWORD *)a2 + 4);
  v7 = *((_QWORD *)a2 + 5);
  v8 = *((_QWORD *)a2 + 6);
  v9 = *((_BYTE *)a2 + 56);
  v10 = a1[1];
  v17 = *a1;
  v18 = v10;
  v19 = v2;
  v11 = a2[1];
  v14 = *a2;
  v15 = v11;
  v16 = v6;
  if ((_s14CarPlayAssetUI09CAPackageC0V2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v14) & 1) != 0)
  {
    *(_QWORD *)&v17 = v3;
    *((_QWORD *)&v17 + 1) = v4;
    LOBYTE(v18) = v5;
    *(_QWORD *)&v14 = v7;
    *((_QWORD *)&v14 + 1) = v8;
    LOBYTE(v15) = v9;
    v12 = _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateO2eeoiySbAG_AGtFZ_0((uint64_t)&v17, (uint64_t)&v14);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void *sub_23793EACC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  id v11;

  if (a3)
  {
    v11 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)sub_237908B80(a6, a7, a8 & 1);
  }
  return result;
}

uint64_t sub_23793EB30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  void *v11;

  if (a3)
  {
    v11 = (void *)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return sub_237908D68(a6, a7, a8 & 1);
  }
  return result;
}

unint64_t sub_23793EB94()
{
  unint64_t result;

  result = qword_2568223B8;
  if (!qword_2568223B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9710C, &type metadata for Layout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568223B8);
  }
  return result;
}

unint64_t sub_23793EBD8()
{
  unint64_t result;

  result = qword_2568223E0;
  if (!qword_2568223E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutType, &type metadata for LayoutType);
    atomic_store(result, (unint64_t *)&qword_2568223E0);
  }
  return result;
}

uint64_t sub_23793EC1C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x23B81FA98](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23793EC80()
{
  unint64_t result;

  result = qword_2568223F8;
  if (!qword_2568223F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SystemUILayout, &type metadata for SystemUILayout);
    atomic_store(result, (unint64_t *)&qword_2568223F8);
  }
  return result;
}

unint64_t sub_23793ECC4()
{
  unint64_t result;

  result = qword_256822410;
  if (!qword_256822410)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview, &type metadata for Layout.Preview);
    atomic_store(result, (unint64_t *)&qword_256822410);
  }
  return result;
}

uint64_t sub_23793ED08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820D58);
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v7[0] = sub_23786FAA0(&qword_256820318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v7[1] = sub_23786FAA0(&qword_256820320, v6, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23793EDAC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568223C8);
    v10 = sub_23786FAA0(a2, (uint64_t (*)(uint64_t))type metadata accessor for Zone, a3);
    result = MEMORY[0x23B81FA98](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23793EE30()
{
  unint64_t result;

  result = qword_256822438;
  if (!qword_256822438)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutType, &type metadata for LayoutType);
    atomic_store(result, (unint64_t *)&qword_256822438);
  }
  return result;
}

unint64_t sub_23793EE74()
{
  unint64_t result;

  result = qword_256822448;
  if (!qword_256822448)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SystemUILayout, &type metadata for SystemUILayout);
    atomic_store(result, (unint64_t *)&qword_256822448);
  }
  return result;
}

unint64_t sub_23793EEB8()
{
  unint64_t result;

  result = qword_256822458;
  if (!qword_256822458)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview, &type metadata for Layout.Preview);
    atomic_store(result, (unint64_t *)&qword_256822458);
  }
  return result;
}

unint64_t sub_23793EEFC()
{
  unint64_t result;

  result = qword_256822468;
  if (!qword_256822468)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper, &type metadata for Wallpaper);
    atomic_store(result, (unint64_t *)&qword_256822468);
  }
  return result;
}

uint64_t sub_23793EF40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a3 != 1)
    return sub_23793EB30(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

void *sub_23793EF50(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, unint64_t a11)
{
  void *v12;
  id v13;
  id v15;

  v12 = result;
  switch(a11 >> 61)
  {
    case 0uLL:
      return (void *)swift_retain();
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      swift_bridgeObjectRetain();
      v13 = v12;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3uLL:
      swift_retain();
      return (void *)swift_retain();
    case 4uLL:
      sub_237870090(result, a2, a3, a4, a5);
      result = a7;
      a2 = a8;
      a3 = a9;
      a4 = a10;
      a5 = a11;
LABEL_6:
      result = (void *)sub_237870090(result, a2, a3, a4, a5);
      break;
    case 5uLL:
      swift_bridgeObjectRetain();
      v15 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_8:
      result = (void *)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23793F0B0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v10;
  uint64_t v11;
  void *v12;

  v2 = *(void **)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(void **)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v10 = *(_OWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23793EF50(v12, v11, v2, v3, v4, v5, v6, v7, (void *)v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23793F168()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23793F19C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v10;
  uint64_t v11;
  void *v12;

  v2 = *(void **)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(void **)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v10 = *(_OWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23793F258(v12, v11, v2, v3, v4, v5, v6, v7, (void *)v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23793F258(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, unint64_t a11)
{
  void *v12;

  v12 = a1;
  switch(a11 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      goto LABEL_6;
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_8;
    case 3uLL:
      swift_release();
LABEL_4:
      swift_release();
      return;
    case 4uLL:
      sub_2378702E0(a1, a2, a3, a4, a5);
      a1 = a7;
      a2 = a8;
      a3 = a9;
      a4 = a10;
      a5 = a11;
LABEL_6:
      sub_2378702E0(a1, a2, a3, a4, a5);
      break;
    case 5uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_23793F398()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23793F3C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_23793F3F0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x1000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

_QWORD *sub_23793F458(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x2000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t *sub_23793F4C0(uint64_t *a1)
{
  sub_2378DF934(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], (void (*)(void))sub_237870090);
  return a1;
}

uint64_t sub_23793F51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23793CEF0(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_23793F538()
{
  unint64_t result;

  result = qword_256822488;
  if (!qword_256822488)
  {
    result = MEMORY[0x23B81FA98](&unk_237A970BC, &type metadata for Layout.Preview.AppearanceState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822488);
  }
  return result;
}

unint64_t sub_23793F57C()
{
  unint64_t result;

  result = qword_256822490;
  if (!qword_256822490)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9706C, &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822490);
  }
  return result;
}

unint64_t sub_23793F5C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568224A0;
  if (!qword_2568224A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256822498);
    v2[0] = sub_23789E470(&qword_25681E9D0, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568224A0);
  }
  return result;
}

unint64_t sub_23793F644()
{
  unint64_t result;

  result = qword_2568224A8;
  if (!qword_2568224A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9701C, &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568224A8);
  }
  return result;
}

unint64_t sub_23793F688()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568224C8;
  if (!qword_2568224C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256822498);
    v2[0] = sub_23789E470(&qword_25681EA08, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = MEMORY[0x24BEE0D38];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568224C8);
  }
  return result;
}

unint64_t sub_23793F70C()
{
  unint64_t result;

  result = qword_2568224D8;
  if (!qword_2568224D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96FCC, &type metadata for Layout.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568224D8);
  }
  return result;
}

unint64_t sub_23793F750()
{
  unint64_t result;

  result = qword_2568224E0;
  if (!qword_2568224E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for CAPackageAsset, &type metadata for CAPackageAsset);
    atomic_store(result, (unint64_t *)&qword_2568224E0);
  }
  return result;
}

unint64_t sub_23793F794()
{
  unint64_t result;

  result = qword_2568224E8;
  if (!qword_2568224E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview.AppearanceState, &type metadata for Layout.Preview.AppearanceState);
    atomic_store(result, (unint64_t *)&qword_2568224E8);
  }
  return result;
}

unint64_t sub_23793F7D8()
{
  unint64_t result;

  result = qword_2568224F8;
  if (!qword_2568224F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for CAPackageAsset, &type metadata for CAPackageAsset);
    atomic_store(result, (unint64_t *)&qword_2568224F8);
  }
  return result;
}

unint64_t sub_23793F81C()
{
  unint64_t result;

  result = qword_256822500;
  if (!qword_256822500)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview.AppearanceState, &type metadata for Layout.Preview.AppearanceState);
    atomic_store(result, (unint64_t *)&qword_256822500);
  }
  return result;
}

unint64_t sub_23793F864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256822508;
  if (!qword_256822508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256822510);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256822508);
  }
  return result;
}

unint64_t sub_23793F8B4()
{
  unint64_t result;

  result = qword_256822518;
  if (!qword_256822518)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutType, &type metadata for LayoutType);
    atomic_store(result, (unint64_t *)&qword_256822518);
  }
  return result;
}

unint64_t sub_23793F8FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256822520;
  if (!qword_256822520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820D58);
    v2 = sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256822520);
  }
  return result;
}

unint64_t sub_23793F97C()
{
  unint64_t result;

  result = qword_256822528;
  if (!qword_256822528)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview.AppearanceState, &type metadata for Layout.Preview.AppearanceState);
    atomic_store(result, (unint64_t *)&qword_256822528);
  }
  return result;
}

unint64_t sub_23793F9C4()
{
  unint64_t result;

  result = qword_256822530;
  if (!qword_256822530)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Layout.Preview, &type metadata for Layout.Preview);
    atomic_store(result, (unint64_t *)&qword_256822530);
  }
  return result;
}

uint64_t sub_23793FA18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Layout() + 52));
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for LayoutType()
{
  return &type metadata for LayoutType;
}

_QWORD *initializeBufferWithCopyOfBuffer for Layout(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
    v18 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v19 = (_OWORD *)((char *)a1 + v18);
    v20 = (_OWORD *)((char *)a2 + v18);
    v21 = v20[4];
    v22 = v20[2];
    v19[3] = v20[3];
    v19[4] = v21;
    v23 = v20[1];
    *v19 = *v20;
    v19[1] = v23;
    v19[2] = v22;
    v24 = a3[11];
    v25 = a3[12];
    v26 = (_OWORD *)((char *)a1 + v24);
    v27 = (_OWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    v31 = *(_QWORD *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v31)
    {
      v32 = *(void **)v30;
      v33 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v33;
      v34 = *((_QWORD *)v30 + 3);
      v35 = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 2) = v31;
      *((_QWORD *)v29 + 3) = v34;
      *((_QWORD *)v29 + 4) = v35;
      v36 = *((_QWORD *)v30 + 5);
      v37 = *((_QWORD *)v30 + 6);
      v38 = v30[56];
      v39 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237908B80(v36, v37, v38);
      *((_QWORD *)v29 + 5) = v36;
      *((_QWORD *)v29 + 6) = v37;
      v29[56] = v38;
    }
    else
    {
      v41 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v41;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *(_OWORD *)(v29 + 41) = *(_OWORD *)(v30 + 41);
    }
    *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
    v42 = a3[13];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    v45 = *v44;
    v46 = v44[1];
    *v43 = v45;
    v43[1] = v46;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 48);
  if (*(_QWORD *)(v5 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237908D68(*(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_BYTE *)(v5 + 56));
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  v20 = v19[4];
  v21 = v19[2];
  v18[3] = v19[3];
  v18[4] = v20;
  v22 = v19[1];
  *v18 = *v19;
  v18[1] = v22;
  v18[2] = v21;
  v23 = a3[11];
  v24 = a3[12];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v30)
  {
    v31 = *(void **)v29;
    v32 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v32;
    v33 = *(_QWORD *)(v29 + 24);
    v34 = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = v33;
    *(_QWORD *)(v28 + 32) = v34;
    v35 = *(_QWORD *)(v29 + 40);
    v36 = *(_QWORD *)(v29 + 48);
    v37 = *(_BYTE *)(v29 + 56);
    v38 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v35, v36, v37);
    *(_QWORD *)(v28 + 40) = v35;
    *(_QWORD *)(v28 + 48) = v36;
    *(_BYTE *)(v28 + 56) = v37;
  }
  else
  {
    v39 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v39;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 41) = *(_OWORD *)(v29 + 41);
  }
  *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
  v40 = a3[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  v44 = v42[1];
  *v41 = v43;
  v41[1] = v44;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *(_OWORD *)(v15 + 16);
  v17 = *(_OWORD *)(v15 + 32);
  v18 = *(_OWORD *)(v15 + 48);
  *(_DWORD *)(v14 + 63) = *(_DWORD *)(v15 + 63);
  *(_OWORD *)(v14 + 32) = v17;
  *(_OWORD *)(v14 + 48) = v18;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 72) = *(_QWORD *)(v15 + 72);
  v19 = a3[11];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  v22 = a3[12];
  v23 = a1 + v22;
  v24 = (__int128 *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = *(_QWORD *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      v27 = *(void **)v23;
      v28 = *(void **)v24;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v29 = v28;

      *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
      *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30 = *((_QWORD *)v24 + 5);
      v31 = *((_QWORD *)v24 + 6);
      v32 = *((_BYTE *)v24 + 56);
      sub_237908B80(v30, v31, v32);
      v33 = *(_QWORD *)(v23 + 40);
      v34 = *(_QWORD *)(v23 + 48);
      v35 = *(_BYTE *)(v23 + 56);
      *(_QWORD *)(v23 + 40) = v30;
      *(_QWORD *)(v23 + 48) = v31;
      *(_BYTE *)(v23 + 56) = v32;
      sub_237908D68(v33, v34, v35);
    }
    else
    {
      sub_237909C0C(v23);
      v42 = v24[1];
      v41 = v24[2];
      v43 = *v24;
      *(_OWORD *)(v23 + 41) = *(__int128 *)((char *)v24 + 41);
      *(_OWORD *)(v23 + 16) = v42;
      *(_OWORD *)(v23 + 32) = v41;
      *(_OWORD *)v23 = v43;
    }
  }
  else if (v26)
  {
    v36 = *(void **)v24;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
    *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
    *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    v37 = *((_QWORD *)v24 + 5);
    v38 = *((_QWORD *)v24 + 6);
    v39 = *((_BYTE *)v24 + 56);
    v40 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v37, v38, v39);
    *(_QWORD *)(v23 + 40) = v37;
    *(_QWORD *)(v23 + 48) = v38;
    *(_BYTE *)(v23 + 56) = v39;
  }
  else
  {
    v44 = *v24;
    v45 = v24[1];
    v46 = v24[2];
    *(_OWORD *)(v23 + 41) = *(__int128 *)((char *)v24 + 41);
    *(_OWORD *)(v23 + 16) = v45;
    *(_OWORD *)(v23 + 32) = v46;
    *(_OWORD *)v23 = v44;
  }
  *(_QWORD *)(v23 + 64) = *((_QWORD *)v24 + 8);
  v47 = a3[13];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
  return a1;
}

uint64_t initializeWithTake for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = v11[4];
  v13 = v11[2];
  v10[3] = v11[3];
  v10[4] = v12;
  v14 = v11[1];
  *v10 = *v11;
  v10[1] = v14;
  v10[2] = v13;
  v15 = a3[11];
  v16 = a3[12];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
  v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_DWORD *)(v18 + 63) = *(_DWORD *)(v19 + 63);
  v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
  v22 = a3[11];
  v23 = a3[12];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  if (!*(_QWORD *)(a1 + v23 + 16))
    goto LABEL_5;
  if (!*(_QWORD *)(v28 + 16))
  {
    sub_237909C0C(a1 + v23);
LABEL_5:
    v36 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v36;
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 41) = *(_OWORD *)(v28 + 41);
    goto LABEL_6;
  }
  v29 = *(void **)v27;
  *(_QWORD *)v27 = *(_QWORD *)v28;

  v30 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 32) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_BYTE *)(v28 + 56);
  v33 = *(_QWORD *)(v27 + 40);
  v34 = *(_QWORD *)(v27 + 48);
  v35 = *(_BYTE *)(v27 + 56);
  *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
  *(_BYTE *)(v27 + 56) = v32;
  sub_237908D68(v33, v34, v35);
LABEL_6:
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
  v37 = a3[13];
  v38 = a1 + v37;
  v39 = (_QWORD *)(a2 + v37);
  *(_QWORD *)(a1 + v37) = *v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 8) = v39[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379403E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Layout()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237940474(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2379404F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Layout.Preview(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_237908D68(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for Layout.Preview(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237908B80(v6, v7, v8);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  return a1;
}

uint64_t assignWithCopy for Layout.Preview(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = a2;
  v4 = *(void **)a1;
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = v2[1];
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (uint64_t)v2[5];
  v8 = (uint64_t)v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_237908B80(v7, v8, (char)v2);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_237908D68(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for Layout.Preview(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v7;
  sub_237908D68(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout.Preview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Layout.Preview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview()
{
  return &type metadata for Layout.Preview;
}

uint64_t destroy for Layout.Preview.AppearanceState(uint64_t a1)
{
  return sub_237908D68(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_237908B80(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Layout.Preview.AppearanceState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_237908B80(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_237908D68(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Layout.Preview.AppearanceState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_237908D68(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout.Preview.AppearanceState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Layout.Preview.AppearanceState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2379409B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2379409B8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState()
{
  return &type metadata for Layout.Preview.AppearanceState;
}

ValueMetadata *type metadata accessor for Layout.Preview.CodingKeys()
{
  return &type metadata for Layout.Preview.CodingKeys;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.CodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.CodingKeys;
}

uint64_t _s14CarPlayAssetUI10LayoutTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237940A40 + 4 * byte_237A9672E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237940A74 + 4 * byte_237A96729[v4]))();
}

uint64_t sub_237940A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237940A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237940A84);
  return result;
}

uint64_t sub_237940A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237940A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237940A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237940AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.DynamicCodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Layout.Preview.AppearanceState.DarkOnlyCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237940B00 + 4 * byte_237A96733[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237940B20 + 4 * byte_237A96738[v4]))();
}

_BYTE *sub_237940B00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237940B20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237940B28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237940B30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237940B38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237940B40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.DarkOnlyCodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Layout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_237940BA8 + 4 * byte_237A96742[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_237940BDC + 4 * byte_237A9673D[v4]))();
}

uint64_t sub_237940BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237940BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237940BECLL);
  return result;
}

uint64_t sub_237940BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237940C00);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_237940C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237940C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Layout.CodingKeys()
{
  return &type metadata for Layout.CodingKeys;
}

unint64_t sub_237940C2C()
{
  unint64_t result;

  result = qword_2568225E8;
  if (!qword_2568225E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96CC4, &type metadata for Layout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568225E8);
  }
  return result;
}

unint64_t sub_237940C74()
{
  unint64_t result;

  result = qword_2568225F0;
  if (!qword_2568225F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96D7C, &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568225F0);
  }
  return result;
}

unint64_t sub_237940CBC()
{
  unint64_t result;

  result = qword_2568225F8;
  if (!qword_2568225F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96E34, &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568225F8);
  }
  return result;
}

unint64_t sub_237940D04()
{
  unint64_t result;

  result = qword_256822600;
  if (!qword_256822600)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96EEC, &type metadata for Layout.Preview.AppearanceState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822600);
  }
  return result;
}

unint64_t sub_237940D4C()
{
  unint64_t result;

  result = qword_256822608;
  if (!qword_256822608)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96FA4, &type metadata for Layout.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822608);
  }
  return result;
}

unint64_t sub_237940D94()
{
  unint64_t result;

  result = qword_256822610;
  if (!qword_256822610)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96F14, &type metadata for Layout.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822610);
  }
  return result;
}

unint64_t sub_237940DDC()
{
  unint64_t result;

  result = qword_256822618;
  if (!qword_256822618)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96F3C, &type metadata for Layout.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822618);
  }
  return result;
}

unint64_t sub_237940E24()
{
  unint64_t result;

  result = qword_256822620;
  if (!qword_256822620)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96DA4, &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822620);
  }
  return result;
}

unint64_t sub_237940E6C()
{
  unint64_t result;

  result = qword_256822628;
  if (!qword_256822628)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96DCC, &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822628);
  }
  return result;
}

unint64_t sub_237940EB4()
{
  unint64_t result;

  result = qword_256822630;
  if (!qword_256822630)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96CEC, &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822630);
  }
  return result;
}

unint64_t sub_237940EFC()
{
  unint64_t result;

  result = qword_256822638;
  if (!qword_256822638)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96D14, &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822638);
  }
  return result;
}

unint64_t sub_237940F44()
{
  unint64_t result;

  result = qword_256822640;
  if (!qword_256822640)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96E5C, &type metadata for Layout.Preview.AppearanceState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822640);
  }
  return result;
}

unint64_t sub_237940F8C()
{
  unint64_t result;

  result = qword_256822648;
  if (!qword_256822648)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96E84, &type metadata for Layout.Preview.AppearanceState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822648);
  }
  return result;
}

unint64_t sub_237940FD4()
{
  unint64_t result;

  result = qword_256822650;
  if (!qword_256822650)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96C34, &type metadata for Layout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822650);
  }
  return result;
}

unint64_t sub_23794101C()
{
  unint64_t result;

  result = qword_256822658;
  if (!qword_256822658)
  {
    result = MEMORY[0x23B81FA98](&unk_237A96C5C, &type metadata for Layout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822658);
  }
  return result;
}

uint64_t sub_237941060(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xED00004449656C79 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x795474756F79616CLL && a2 == 0xEA00000000006570 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49556D6574737973 && a2 == 0xEE0074756F79614CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x77656976657270 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x657061706C6C6177 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_237941508(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x63696D616E7964 && a2 == 0xE700000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C6E4F6B726164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2379415F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2379416D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616B636170 && a2 == 0xE700000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2379417B8()
{
  unint64_t result;

  result = qword_256822660;
  if (!qword_256822660)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutType, &type metadata for LayoutType);
    atomic_store(result, (unint64_t *)&qword_256822660);
  }
  return result;
}

uint64_t sub_2379417FC(_OWORD *a1)
{
  uint64_t v1;

  return sub_237937728(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_237941814(_OWORD *a1)
{
  uint64_t v1;

  return sub_23793754C(a1, *(uint64_t **)(v1 + 16));
}

CarPlayAssetUI::DriverAssistanceLabelState_optional __swiftcall DriverAssistanceLabelState.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (CarPlayAssetUI::DriverAssistanceLabelState_optional)rawValue;
}

uint64_t DriverAssistanceLabelState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

CarPlayAssetUI::DriverAssistanceLabelState_optional sub_23794185C(Swift::Int *a1)
{
  return DriverAssistanceLabelState.init(rawValue:)(*a1);
}

void DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *DriverAssistanceDataIdentifiers.speedDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 5);
}

_BYTE *DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::DriverAssistanceDataIdentifiers __swiftcall DriverAssistanceDataIdentifiers.init(cruiseControlSpeedDataIdentifier:cruiseControlStateDataIdentifier:speedDataIdentifier:speedUnitDataIdentifier:speedMaxDataIdentifier:speedLimitedDataIdentifier:)(CarPlayAssetUI::InstrumentDataIdentifier cruiseControlSpeedDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier cruiseControlStateDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier speedDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier speedUnitDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier speedMaxDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier speedLimitedDataIdentifier)
{
  _BYTE *v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  CarPlayAssetUI::DriverAssistanceDataIdentifiers result;

  v7 = *(_BYTE *)cruiseControlStateDataIdentifier;
  v8 = *(_BYTE *)speedDataIdentifier;
  v9 = *(_BYTE *)speedUnitDataIdentifier;
  v10 = *(_BYTE *)speedMaxDataIdentifier;
  v11 = *(_BYTE *)speedLimitedDataIdentifier;
  *v6 = *(_BYTE *)cruiseControlSpeedDataIdentifier;
  v6[1] = v7;
  v6[2] = v8;
  v6[3] = v9;
  v6[4] = v10;
  v6[5] = v11;
  result.cruiseControlSpeedDataIdentifier = cruiseControlSpeedDataIdentifier;
  return result;
}

uint64_t DriverAssistanceDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237941AE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237941B1C + 4 * byte_237A971B0[a1]))(0xD000000000000020, 0x8000000237AB0D10);
}

uint64_t sub_237941B70()
{
  unsigned __int8 *v0;

  return sub_237941AE4(*v0);
}

uint64_t sub_237941B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379429D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_237941B9C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_237941BA8()
{
  sub_237942554();
  return sub_237A88718();
}

uint64_t sub_237941BD0()
{
  sub_237942554();
  return sub_237A88724();
}

uint64_t DriverAssistanceDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  int v10;
  char v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822668);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v18 = v1[2];
  v19 = v9;
  v10 = v1[3];
  v16 = v1[4];
  v17 = v10;
  v15 = v1[5];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237942554();
  sub_237A886B8();
  v31 = v8;
  v30 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v11 = v17;
    v12 = v18;
    v29 = v19;
    v28 = 1;
    sub_237A882B0();
    v27 = v12;
    v26 = 2;
    sub_237A882B0();
    v25 = v11;
    v24 = 3;
    sub_237A882B0();
    v23 = v16;
    v22 = 4;
    sub_237A882B0();
    v21 = v15;
    v20 = 5;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DriverAssistanceDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  DriverAssistanceDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

uint64_t DriverAssistanceDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  char v26;
  unsigned __int8 v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  unsigned __int8 v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822678);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237942554();
  sub_237A88688();
  if (!v2)
  {
    v30 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v31;
    v28 = 1;
    sub_237A881F0();
    v19 = v9;
    v10 = v29;
    v26 = 2;
    sub_237A881F0();
    v18 = v10;
    v11 = v27;
    v24 = 3;
    sub_237A881F0();
    v17 = v11;
    v12 = v25;
    v22 = 4;
    sub_237A881F0();
    v16 = v12;
    LOBYTE(v12) = v23;
    v20 = 5;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v21;
    *a2 = v19;
    a2[1] = v18;
    a2[2] = v17;
    a2[3] = v16;
    a2[4] = v12;
    a2[5] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23794213C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DriverAssistanceDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237942150(_QWORD *a1)
{
  return DriverAssistanceDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_237942164()
{
  sub_237A885D4();
  DriverAssistanceDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379421B8()
{
  sub_237A885D4();
  DriverAssistanceDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

uint64_t _s14CarPlayAssetUI31DriverAssistanceDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v4 & 1) == 0)
      return v5 & 1;
  }
  v6 = InstrumentDataIdentifier.rawValue.getter();
  v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v10 & 1) == 0)
      return v5 & 1;
  }
  v11 = InstrumentDataIdentifier.rawValue.getter();
  v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v15 & 1) == 0)
      return v5 & 1;
  }
  v16 = InstrumentDataIdentifier.rawValue.getter();
  v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v20 & 1) == 0)
      return v5 & 1;
  }
  v21 = InstrumentDataIdentifier.rawValue.getter();
  v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v25 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v25 & 1) == 0)
      return v5 & 1;
  }
  v26 = InstrumentDataIdentifier.rawValue.getter();
  v28 = v27;
  if (v26 == InstrumentDataIdentifier.rawValue.getter() && v28 == v29)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_237942554()
{
  unint64_t result;

  result = qword_256822670;
  if (!qword_256822670)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97454, &type metadata for DriverAssistanceDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822670);
  }
  return result;
}

unint64_t sub_23794259C()
{
  unint64_t result;

  result = qword_256822680;
  if (!qword_256822680)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DriverAssistanceLabelState, &type metadata for DriverAssistanceLabelState);
    atomic_store(result, (unint64_t *)&qword_256822680);
  }
  return result;
}

unint64_t sub_2379425E4()
{
  unint64_t result;

  result = qword_256822688;
  if (!qword_256822688)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DriverAssistanceDataIdentifiers, &type metadata for DriverAssistanceDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256822688);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DriverAssistanceLabelState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237942674 + 4 * byte_237A971BB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2379426A8 + 4 * byte_237A971B6[v4]))();
}

uint64_t sub_2379426A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379426B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379426B8);
  return result;
}

uint64_t sub_2379426C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379426CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2379426D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379426D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceLabelState()
{
  return &type metadata for DriverAssistanceLabelState;
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DriverAssistanceDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xC9 && a1[6])
    return (*(_DWORD *)a1 + 201);
  v3 = *a1;
  v4 = v3 >= 0x38;
  v5 = v3 - 56;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DriverAssistanceDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC8)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 201;
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 55;
  }
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceDataIdentifiers()
{
  return &type metadata for DriverAssistanceDataIdentifiers;
}

uint64_t getEnumTagSinglePayload for DriverAssistanceDataIdentifiers.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DriverAssistanceDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23794287C + 4 * byte_237A971C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2379428B0 + 4 * byte_237A971C0[v4]))();
}

uint64_t sub_2379428B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379428B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379428C0);
  return result;
}

uint64_t sub_2379428CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379428D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2379428D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379428E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceDataIdentifiers.CodingKeys()
{
  return &type metadata for DriverAssistanceDataIdentifiers.CodingKeys;
}

unint64_t sub_237942900()
{
  unint64_t result;

  result = qword_256822690;
  if (!qword_256822690)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9742C, &type metadata for DriverAssistanceDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822690);
  }
  return result;
}

unint64_t sub_237942948()
{
  unint64_t result;

  result = qword_256822698;
  if (!qword_256822698)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9739C, &type metadata for DriverAssistanceDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822698);
  }
  return result;
}

unint64_t sub_237942990()
{
  unint64_t result;

  result = qword_2568226A0;
  if (!qword_2568226A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A973C4, &type metadata for DriverAssistanceDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226A0);
  }
  return result;
}

uint64_t sub_2379429D4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000020 && a2 == 0x8000000237AB0D10 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000237AB0D40 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB0D70 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AB0D90 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB0DB0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000237AB0DD0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void TemperatureDataIdentifiers.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TemperatureDataIdentifiers.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureMinDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *TemperatureDataIdentifiers.temperatureMinDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureMinDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *TemperatureDataIdentifiers.temperatureMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *TemperatureDataIdentifiers.temperatureStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 5);
}

_BYTE *TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureUnitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 6);
}

_BYTE *TemperatureDataIdentifiers.temperatureUnitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureUnitDataIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t TemperatureDataIdentifiers.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = sub_237A7FE88(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TemperatureDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237942F14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237942F54 + 4 * byte_237A974B0[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

unint64_t sub_237942F54()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_237942F7C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_237942FE4()
{
  unsigned __int8 *v0;

  return sub_237942F14(*v0);
}

uint64_t sub_237942FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237943E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237943010()
{
  sub_237943B28();
  return sub_237A88718();
}

uint64_t sub_237943038()
{
  sub_237943B28();
  return sub_237A88724();
}

uint64_t TemperatureDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char v13;
  char v14;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568226A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v20 = v1[2];
  v21 = v9;
  v10 = v1[3];
  v18 = v1[4];
  v19 = v10;
  v11 = v1[5];
  v16 = v1[6];
  v17 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237943B28();
  sub_237A886B8();
  v35 = v8;
  v34 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v19;
    v12 = v20;
    v14 = v18;
    v33 = v21;
    v32 = 1;
    sub_237A882B0();
    v31 = v12;
    v30 = 2;
    sub_237A882B0();
    v29 = v13;
    v28 = 3;
    sub_237A882B0();
    v27 = v14;
    v26 = 4;
    sub_237A882B0();
    v25 = v17;
    v24 = 5;
    sub_237A882B0();
    v23 = v16;
    v22 = 6;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TemperatureDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  TemperatureDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

uint64_t TemperatureDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  unsigned __int8 v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568226B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237943B28();
  sub_237A88688();
  if (!v2)
  {
    v32 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v33;
    v30 = 1;
    sub_237A881F0();
    v19 = v9;
    v10 = v31;
    v28 = 2;
    sub_237A881F0();
    v18 = v10;
    v11 = v29;
    v26 = 3;
    sub_237A881F0();
    v17 = v11;
    v12 = v27;
    v24 = 4;
    sub_237A881F0();
    v16 = v12;
    LOBYTE(v12) = v25;
    v22 = 5;
    sub_237A881F0();
    HIDWORD(v15) = v23;
    v20 = 6;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v21;
    *a2 = v19;
    a2[1] = v18;
    a2[2] = v17;
    a2[3] = v16;
    a2[4] = v12;
    a2[5] = BYTE4(v15);
    a2[6] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237943634@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return TemperatureDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237943648(_QWORD *a1)
{
  return TemperatureDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_23794365C()
{
  sub_237A885D4();
  TemperatureDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379436B8()
{
  sub_237A885D4();
  TemperatureDataIdentifiers.hash(into:)();
  return sub_237A88610();
}

double static TemperatureDataIdentifiers.engineTemperature.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 404034579;
  *(_DWORD *)a1 = 404034579;
  *(_WORD *)(a1 + 4) = 5910;
  *(_BYTE *)(a1 + 6) = 44;
  return result;
}

double static TemperatureDataIdentifiers.batteryTemperature.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 84017408;
  *(_DWORD *)a1 = 84017408;
  *(_WORD *)(a1 + 4) = 1027;
  *(_BYTE *)(a1 + 6) = 44;
  return result;
}

uint64_t _s14CarPlayAssetUI26TemperatureDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v4 & 1) == 0)
      return v5 & 1;
  }
  v6 = InstrumentDataIdentifier.rawValue.getter();
  v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v10 & 1) == 0)
      return v5 & 1;
  }
  v11 = InstrumentDataIdentifier.rawValue.getter();
  v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v15 & 1) == 0)
      return v5 & 1;
  }
  v16 = InstrumentDataIdentifier.rawValue.getter();
  v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v20 & 1) == 0)
      return v5 & 1;
  }
  v21 = InstrumentDataIdentifier.rawValue.getter();
  v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v25 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v25 & 1) == 0)
      return v5 & 1;
  }
  v26 = InstrumentDataIdentifier.rawValue.getter();
  v28 = v27;
  if (v26 == InstrumentDataIdentifier.rawValue.getter() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v30 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v30 & 1) == 0)
      return v5 & 1;
  }
  v31 = InstrumentDataIdentifier.rawValue.getter();
  v33 = v32;
  if (v31 == InstrumentDataIdentifier.rawValue.getter() && v33 == v34)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_237943B28()
{
  unint64_t result;

  result = qword_2568226B0;
  if (!qword_2568226B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97680, &type metadata for TemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226B0);
  }
  return result;
}

unint64_t sub_237943B70()
{
  unint64_t result;

  result = qword_2568226C0;
  if (!qword_2568226C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TemperatureDataIdentifiers, &type metadata for TemperatureDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_2568226C0);
  }
  return result;
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TemperatureDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xC9 && a1[7])
    return (*(_DWORD *)a1 + 201);
  v3 = *a1;
  v4 = v3 >= 0x38;
  v5 = v3 - 56;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC8)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 201;
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 7) = 1;
  }
  else
  {
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 7) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 55;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureDataIdentifiers()
{
  return &type metadata for TemperatureDataIdentifiers;
}

uint64_t storeEnumTagSinglePayload for TemperatureDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_237943CB0 + 4 * byte_237A974BC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_237943CE4 + 4 * byte_237A974B7[v4]))();
}

uint64_t sub_237943CE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237943CEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237943CF4);
  return result;
}

uint64_t sub_237943D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237943D08);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_237943D0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237943D14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemperatureDataIdentifiers.CodingKeys()
{
  return &type metadata for TemperatureDataIdentifiers.CodingKeys;
}

unint64_t sub_237943D34()
{
  unint64_t result;

  result = qword_2568226C8;
  if (!qword_2568226C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97658, &type metadata for TemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226C8);
  }
  return result;
}

unint64_t sub_237943D7C()
{
  unint64_t result;

  result = qword_2568226D0;
  if (!qword_2568226D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A975C8, &type metadata for TemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226D0);
  }
  return result;
}

unint64_t sub_237943DC4()
{
  unint64_t result;

  result = qword_2568226D8;
  if (!qword_2568226D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A975F0, &type metadata for TemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226D8);
  }
  return result;
}

uint64_t sub_237943E08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB0090 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB00B0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000237AB0DF0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000237AB0E10 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000237AB0E40 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000237AB0E70)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_2379440D0(uint64_t a1, char a2)
{
  sub_237A885D4();
  __asm { BR              X10 }
}

uint64_t sub_237944120()
{
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t Instrument.native.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;
  BOOL v4;
  _BYTE v5[512];
  _BYTE v6[512];

  v1 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v0 + *(int *)(v1 + 20)), v5);
  sub_23788F46C(v5, v6);
  v2 = sub_2378A1BDC((uint64_t)v6);
  result = 0;
  switch(v2)
  {
    case 1:
      result = *(unsigned __int8 *)(sub_2378A1BF8((uint64_t)v6) + 496);
      break;
    case 2:
      v4 = (~*(_DWORD *)(sub_2378A1BF8((uint64_t)v6) + 40) & 0xFELL) == 0;
      goto LABEL_6;
    case 3:
    case 4:
    case 5:
      sub_2378A1BF8((uint64_t)v6);
      result = 1;
      break;
    case 8:
      v4 = *(_QWORD *)(sub_2378A1BF8((uint64_t)v6) + 8) == 0;
LABEL_6:
      result = !v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for Instrument()
{
  uint64_t result;

  result = qword_2568228B8;
  if (!qword_2568228B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237944308()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = *(_QWORD *)(sub_2379372BC() + 16);
  if (v0)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v0, 0);
    v1 = 0;
    v2 = v11;
    do
    {
      v3 = sub_237A87854();
      v5 = v4;
      v7 = *(_QWORD *)(v11 + 16);
      v6 = *(_QWORD *)(v11 + 24);
      if (v7 >= v6 >> 1)
        sub_2379D62F4(v6 > 1, v7 + 1, 1);
      ++v1;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v8 = v11 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v3;
      *(_QWORD *)(v8 + 40) = v5;
    }
    while (v0 != v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x24BEE4AF8];
  }
  v9 = sub_2378BF3D8(v2);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Instrument.Kind.appBundleId.getter()
{
  const void *v0;
  uint64_t v1;
  _BYTE v3[512];
  _BYTE v4[512];

  sub_23788F46C(v0, v3);
  sub_23788F46C(v3, v4);
  if (sub_2378A1BDC((uint64_t)v4) != 6)
    return 0;
  v1 = *(_QWORD *)sub_2378A1BF8((uint64_t)v4);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.init(id:kind:backgroundColor:shadowID:)@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[496];
  _BYTE v38[496];
  _BYTE v39[512];
  _BYTE v40[512];
  _BYTE v41[520];

  v33 = a4;
  v34 = a5;
  v35 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  sub_23788F46C(a2, v40);
  sub_237A86588();
  sub_2378BBFE0((uint64_t)v14, (uint64_t)v12, &qword_256820328);
  if (qword_25681E410 != -1)
    swift_once();
  v15 = qword_256825198;
  sub_2378BC024((uint64_t)v14, &qword_256820328);
  sub_237870370((uint64_t)v12, a6, &qword_256820328);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820330) + 52);
  *(_QWORD *)(a6 + v16) = v15;
  v17 = v35;
  sub_2378BBFE0(v35, (uint64_t)v14, &qword_256820328);
  sub_2378BC024(a6, &qword_256820330);
  sub_2378BBFE0((uint64_t)v14, (uint64_t)v12, &qword_256820328);
  v18 = qword_256825198;
  sub_2378BC024((uint64_t)v14, &qword_256820328);
  sub_237870370((uint64_t)v12, a6, &qword_256820328);
  *(_QWORD *)(a6 + v16) = v18;
  v19 = type metadata accessor for Instrument();
  sub_23788F46C(v40, (void *)(a6 + *(int *)(v19 + 20)));
  v20 = a6 + *(int *)(v19 + 24);
  *(_QWORD *)v20 = a3;
  *(_WORD *)(v20 + 24) = 256;
  v21 = v34;
  *(_QWORD *)(v20 + 32) = v33;
  *(_QWORD *)(v20 + 40) = v21;
  sub_23788F46C(v40, v41);
  swift_retain();
  sub_2378DE6E0(v40, sub_2378DD44C);
  *(_QWORD *)(v20 + 8) = Instrument.Kind.defaultVerifierIdentifier.getter();
  *(_QWORD *)(v20 + 16) = v22;
  sub_23788F46C(v40, v41);
  if (sub_2378A1BDC((uint64_t)v41) != 1)
  {
    sub_2378DE6E0(v40, sub_2378DD44C);
    goto LABEL_8;
  }
  v23 = (void *)sub_2378A1BF8((uint64_t)v41);
  sub_237918E30(v23, v38);
  if (sub_237919130((uint64_t)v38) != 3
    || (v24 = (const void *)sub_23791914C((uint64_t)v38),
        sub_23791924C(v24, v37),
        sub_23791F118((uint64_t)v37)))
  {
    sub_23788F46C(v40, v39);
    v25 = sub_2378A1BF8((uint64_t)v39);
    sub_237918F98(v25);
LABEL_8:
    swift_release();
LABEL_9:
    v26 = 0;
    goto LABEL_10;
  }
  v36 = *(_BYTE *)sub_23791F124((uint64_t)v37);
  if (InstrumentDataIdentifier.rawValue.getter() == 0x53656C6369686576 && v28 == 0xEC00000064656570)
  {
    sub_23788F46C(v40, v39);
    v29 = sub_2378A1BF8((uint64_t)v39);
    sub_237918F98(v29);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = sub_237A8840C();
    sub_23788F46C(v40, v39);
    v31 = sub_2378A1BF8((uint64_t)v39);
    sub_237918F98(v31);
    swift_release();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
      goto LABEL_9;
  }
  v26 = 1;
LABEL_10:
  sub_2378BC024(v17, &qword_256820328);
  sub_2378DE6E0(v40, sub_2378DE7AC);
  *(_BYTE *)(v20 + 24) = v26;
  sub_23788F46C(v40, v39);
  result = sub_2378A1BDC((uint64_t)v39);
  if ((_DWORD)result == 9)
  {
LABEL_13:
    *(_BYTE *)(v20 + 25) = 0;
    return result;
  }
  if ((_DWORD)result == 2)
  {
    sub_2378A1BF8((uint64_t)v39);
    result = sub_2378DE6E0(v40, sub_2378DE7AC);
    goto LABEL_13;
  }
  return sub_2378DE6E0(v40, sub_2378DE7AC);
}

uint64_t sub_237944890@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822A10);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - v12;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822710);
  sub_23794DA08(qword_2568228D8, &qword_256820328, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  result = sub_237A881A8();
  if (!v2)
  {
    v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2378BC024((uint64_t)v6, &qword_256822A10);
      v16 = v15;
      sub_237A86588();
      if (qword_25681E410 != -1)
        swift_once();
      v17 = qword_256825198;
    }
    else
    {
      sub_237870370((uint64_t)v6, (uint64_t)v13, &qword_256820328);
      sub_2378BBFE0((uint64_t)v13, (uint64_t)v11, &qword_256820328);
      if (qword_25681E410 != -1)
        swift_once();
      v17 = qword_256825198;
      sub_2378BC024((uint64_t)v13, &qword_256820328);
      v18 = (uint64_t)v11;
      v16 = v15;
      sub_237870370(v18, v15, &qword_256820328);
    }
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)(v16 + *(int *)(result + 52)) = v17;
  }
  return result;
}

uint64_t sub_237944ACC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568229F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - v12;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822A00);
  sub_23794DA08(&qword_256822A08, &qword_2568202F8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  result = sub_237A881A8();
  if (!v2)
  {
    v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2378BC024((uint64_t)v6, &qword_2568229F8);
      v16 = v15;
      sub_237A86588();
      if (qword_25681E410 != -1)
        swift_once();
      v17 = qword_256825198;
    }
    else
    {
      sub_237870370((uint64_t)v6, (uint64_t)v13, &qword_2568202F8);
      sub_2378BBFE0((uint64_t)v13, (uint64_t)v11, &qword_2568202F8);
      if (qword_25681E410 != -1)
        swift_once();
      v17 = qword_256825198;
      sub_2378BC024((uint64_t)v13, &qword_2568202F8);
      v18 = (uint64_t)v11;
      v16 = v15;
      sub_237870370(v18, v15, &qword_2568202F8);
    }
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
    *(_QWORD *)(v16 + *(int *)(result + 52)) = v17;
  }
  return result;
}

void *Instrument.restoreAssets(from:)(_QWORD *a1)
{
  type metadata accessor for Instrument();
  return Instrument.Kind.restoreAssets(from:)(a1);
}

uint64_t Instrument.Configuration.backgroundColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.Configuration.backgroundColor.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*Instrument.Configuration.backgroundColor.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.verifierIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.Configuration.verifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Instrument.Configuration.verifierIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.persistent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Instrument.Configuration.persistent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*Instrument.Configuration.persistent.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.clipsToShape.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t Instrument.Configuration.clipsToShape.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*Instrument.Configuration.clipsToShape.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.shadowID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.Configuration.shadowID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Instrument.Configuration.shadowID.modify())()
{
  return nullsub_1;
}

uint64_t sub_237944EAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237944EE8 + 4 * byte_237A976F0[*v0]))(0x756F72676B636162, 0xEF726F6C6F43646ELL);
}

unint64_t sub_237944EE8()
{
  return 0xD000000000000012;
}

uint64_t sub_237944F04()
{
  return 0x6574736973726570;
}

uint64_t sub_237944F20()
{
  return 0x536F547370696C63;
}

uint64_t sub_237944F40()
{
  return 0x4449776F64616873;
}

uint64_t sub_237944F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23794F7B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237944F7C()
{
  sub_23794B698();
  return sub_237A88718();
}

uint64_t sub_237944FA4()
{
  sub_23794B698();
  return sub_237A88724();
}

uint64_t Instrument.Configuration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568226E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v15 = v1[2];
  v16 = v8;
  LODWORD(v8) = *((unsigned __int8 *)v1 + 24);
  v13 = *((unsigned __int8 *)v1 + 25);
  v14 = v8;
  v10 = v1[4];
  v12[0] = v1[5];
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23794B698();
  sub_237A886B8();
  v22 = v9;
  v21 = 0;
  sub_237879654();
  sub_237A882B0();
  if (!v2)
  {
    v20 = 1;
    sub_237A8822C();
    v19 = 2;
    sub_237A88280();
    v18 = 3;
    sub_237A88280();
    v17 = 4;
    sub_237A8822C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.Configuration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568226F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23794B698();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
    sub_237879610();
    sub_237A881F0();
    v9 = v29;
    v27 = 1;
    swift_retain();
    v10 = sub_237A8816C();
    v12 = v11;
    v23 = v10;
    v26 = 2;
    swift_bridgeObjectRetain();
    v22 = sub_237A881C0();
    v25 = 3;
    v21 = sub_237A881C0();
    v24 = 4;
    v13 = sub_237A8816C();
    v15 = v14;
    v21 &= 1u;
    v22 &= 1u;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = v23;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v18;
    *(_QWORD *)(a2 + 16) = v12;
    *(_BYTE *)(a2 + 24) = v22;
    *(_BYTE *)(a2 + 25) = v21;
    *(_QWORD *)(a2 + 32) = v17;
    *(_QWORD *)(a2 + 40) = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_23794545C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.Configuration.init(from:)(a1, a2);
}

uint64_t sub_237945470(_QWORD *a1)
{
  return Instrument.Configuration.encode(to:)(a1);
}

uint64_t Instrument.NavigationStyle.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x726143206E727554;
  else
    return 7364941;
}

CarPlayAssetUI::Instrument::NavigationStyle_optional __swiftcall Instrument.NavigationStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::Instrument::NavigationStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static Instrument.NavigationStyle.allCases.getter()
{
  return &unk_25096A688;
}

uint64_t Instrument.NavigationStyle.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x647261436E727574;
  else
    return 7364973;
}

uint64_t sub_23794555C(char *a1, char *a2)
{
  return sub_2378D575C(*a1, *a2);
}

CarPlayAssetUI::Instrument::NavigationStyle_optional sub_237945568(Swift::String *a1)
{
  return Instrument.NavigationStyle.init(rawValue:)(*a1);
}

void sub_237945574(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7364973;
  if (*v1)
    v2 = 0x647261436E727574;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_2379455AC(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A400;
}

uint64_t sub_2379455BC()
{
  sub_23794FC78();
  return sub_237A87A34();
}

uint64_t sub_237945618()
{
  sub_23794FC78();
  return sub_237A879EC();
}

uint64_t sub_237945664()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379456DC()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237945730()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379457A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x726143206E727554;
  else
    return 7364941;
}

uint64_t Instrument.PunchThroughType.description.getter()
{
  return 0x676E6974746553;
}

uint64_t Instrument.PunchThroughType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static Instrument.PunchThroughType.allCases.getter()
{
  return &unk_25096A6E8;
}

uint64_t Instrument.PunchThroughType.rawValue.getter()
{
  return 0x676E6974746573;
}

uint64_t sub_23794586C@<X0>(BOOL *a1@<X8>)
{
  return sub_237949738(a1);
}

void sub_237945878(_QWORD *a1@<X8>)
{
  *a1 = 0x676E6974746573;
  a1[1] = 0xE700000000000000;
}

void sub_237945894(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A428;
}

uint64_t sub_2379458A4()
{
  sub_23794FC34();
  return sub_237A87A34();
}

uint64_t sub_237945900()
{
  sub_23794FC34();
  return sub_237A879EC();
}

uint64_t sub_23794594C()
{
  return sub_237949678();
}

uint64_t sub_237945964()
{
  return sub_237A87710();
}

uint64_t sub_23794597C()
{
  return sub_2379496E4();
}

uint64_t sub_237945994()
{
  return 0x676E6974746553;
}

void Instrument.Kind.icon.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_237945A34 + 4 * byte_237A976F5[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_237945A34()
{
  uint64_t v1;

  sub_2378A1BF8((uint64_t)&v1);
  return 0x6567756167;
}

void Instrument.Kind.shortName.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_237945B80 + 4 * byte_237A976FF[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_237945B80()
{
  uint64_t v1;

  sub_2378A1BF8((uint64_t)&v1);
  return 0x6567756147;
}

void Instrument.Kind.name.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_237945CD8 + 4 * word_237A9770A[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_237945CD8()
{
  char v1[13];
  char v2;
  __int16 v3;
  uint64_t v4;

  sub_2378A1BF8((uint64_t)&v4);
  strcpy(v1, "Navigation (");
  v2 = 0;
  v3 = -5120;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return *(_QWORD *)v1;
}

void Instrument.Kind.detail.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_2379461BC + 4 * byte_237A9771E[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_2379461BC()
{
  uint64_t v0;
  uint64_t v2;

  sub_2378A1BF8((uint64_t)&v2);
  return v0 + 30;
}

uint64_t Instrument.Kind.defaultVerifierIdentifier.getter()
{
  const void *v0;
  int v1;
  void *v3;
  const void *v4;
  uint64_t v5;
  char v6;
  _BYTE v7[496];
  _BYTE __dst[496];
  _BYTE v9[512];
  _BYTE v10[512];

  sub_23788F46C(v0, v9);
  sub_23788F46C(v9, v10);
  v1 = sub_2378A1BDC((uint64_t)v10);
  if (v1 != 1)
  {
    if (v1 == 2)
    {
      sub_2378A1BF8((uint64_t)v10);
      return 0x6163696669746F6ELL;
    }
    return 0;
  }
  v3 = (void *)sub_2378A1BF8((uint64_t)v10);
  sub_237918E30(v3, __dst);
  if (sub_237919130((uint64_t)__dst) == 3)
  {
    v4 = (const void *)sub_23791914C((uint64_t)__dst);
    sub_23791924C(v4, v7);
    if (sub_23791F118((uint64_t)v7) == 2)
    {
      sub_23791F124((uint64_t)v7);
      if (InstrumentDataIdentifier.rawValue.getter() == 0x73696D736E617274 && v5 == 0xEC0000006E6F6973)
      {
        sub_23791A20C((uint64_t)v3, (voidsub_2378DD81C);
        sub_23791A20C((uint64_t)v3, (voidsub_2378DD81C);
        sub_2378DE6E0(v9, sub_2378DD44C);
        swift_bridgeObjectRelease();
LABEL_10:
        sub_23791A20C((uint64_t)v3, (voidsub_2378DEB7C);
        sub_23791A20C((uint64_t)v3, (voidsub_2378DEB7C);
        sub_2378DE6E0(v9, sub_2378DE7AC);
        return 0x6C646E7270;
      }
      v6 = sub_237A8840C();
      sub_23791A20C((uint64_t)v3, (voidsub_2378DD81C);
      sub_23791A20C((uint64_t)v3, (voidsub_2378DD81C);
      sub_2378DE6E0(v9, sub_2378DD44C);
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        goto LABEL_10;
      sub_23791A20C((uint64_t)v3, (voidsub_2378DEB7C);
      sub_2378DE6E0(v9, sub_2378DE7AC);
      sub_23791A20C((uint64_t)v3, (voidsub_2378DEB7C);
    }
  }
  return 0;
}

BOOL Instrument.Kind.defaultPersistent.getter()
{
  const void *v0;
  void *v1;
  const void *v2;
  uint64_t v4;
  char v5;
  _BYTE v6[496];
  _BYTE __dst[496];
  _BYTE v8[512];
  _BYTE v9[512];

  sub_23788F46C(v0, v8);
  sub_23788F46C(v8, v9);
  if (sub_2378A1BDC((uint64_t)v9) != 1)
    return 0;
  v1 = (void *)sub_2378A1BF8((uint64_t)v9);
  sub_237918E30(v1, __dst);
  if (sub_237919130((uint64_t)__dst) != 3)
    return 0;
  v2 = (const void *)sub_23791914C((uint64_t)__dst);
  sub_23791924C(v2, v6);
  if (sub_23791F118((uint64_t)v6))
    return 0;
  sub_23791F124((uint64_t)v6);
  if (InstrumentDataIdentifier.rawValue.getter() == 0x53656C6369686576 && v4 == 0xEC00000064656570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  return (v5 & 1) != 0;
}

void Instrument.Kind.focusableStateDataIdentifier.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[520];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_237946668 + 4 * byte_237A97728[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X11 }
}

uint64_t sub_237946668()
{
  _BYTE *v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2378A1BF8((uint64_t)&v2);
  *v0 = 56;
  return result;
}

void sub_237946688()
{
  sub_2378A1BF8((uint64_t)&STACK[0x208]);
  JUMPOUT(0x237946674);
}

void Instrument.Kind.hash(into:)()
{
  const void *v0;
  char *v1;
  _BYTE v2[512];
  _BYTE v3[520];

  sub_23788F46C(v0, v2);
  sub_23788F46C(v2, v3);
  v1 = (char *)sub_2379466FC + 4 * word_237A97732[sub_2378A1BDC((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_2379466FC()
{
  uint64_t v1;

  sub_2378A1BF8((uint64_t)&v1);
  sub_237A885E0();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t Instrument.Kind.hashValue.getter()
{
  const void *v0;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v3);
  sub_23788F46C(v3, v2);
  sub_237A885D4();
  Instrument.Kind.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237946D2C()
{
  const void *v0;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v3);
  sub_23788F46C(v3, v2);
  sub_237A885D4();
  Instrument.Kind.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237946D88()
{
  const void *v0;
  _BYTE v2[512];
  _BYTE v3[512];

  sub_23788F46C(v0, v3);
  sub_23788F46C(v3, v2);
  sub_237A885D4();
  Instrument.Kind.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v1, (uint64_t)v5, &qword_256820330);
  return sub_237870370((uint64_t)v5, a1, &qword_256820328);
}

uint64_t sub_237946E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v6, &qword_256820330);
  return sub_237870370((uint64_t)v6, a2, &qword_256820328);
}

uint64_t sub_237946F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v6, &qword_256820328);
  return sub_23794B8CC((uint64_t)v6, a2, &qword_256820328);
}

uint64_t Instrument.id.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23794B8CC(a1, v1, &qword_256820328);
}

uint64_t (*Instrument.id.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.kind.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[520];

  v3 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v1 + *(int *)(v3 + 20)), v5);
  sub_23788F46C(v5, a1);
  return sub_2378DE6E0(v5, sub_2378DD44C);
}

void *Instrument.kind.setter(const void *a1)
{
  uint64_t v1;
  void *v2;
  _BYTE v4[512];
  _BYTE v5[520];

  sub_23788F46C(a1, v4);
  v2 = (void *)(v1 + *(int *)(type metadata accessor for Instrument() + 20));
  sub_23788F46C(v2, v5);
  sub_2378DE6E0(v5, sub_2378DE7AC);
  return sub_23788F46C(v4, v2);
}

uint64_t (*Instrument.kind.modify())(_QWORD)
{
  type metadata accessor for Instrument();
  return nullsub_1;
}

uint64_t Instrument.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for Instrument() + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 24);
  v7 = *(_BYTE *)(v3 + 25);
  v9 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 25) = v7;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

__n128 Instrument.configuration.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  __n128 *v7;
  __n128 result;
  __n128 v9;

  v9 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = a1[1].n128_u8[9];
  v5 = a1[2].n128_u64[0];
  v6 = a1[2].n128_u64[1];
  v7 = (__n128 *)(v1 + *(int *)(type metadata accessor for Instrument() + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v9;
  *v7 = v9;
  v7[1].n128_u64[0] = v2;
  v7[1].n128_u8[8] = v3;
  v7[1].n128_u8[9] = v4;
  v7[2].n128_u64[0] = v5;
  v7[2].n128_u64[1] = v6;
  return result;
}

uint64_t (*Instrument.configuration.modify())(_QWORD)
{
  type metadata accessor for Instrument();
  return nullsub_1;
}

BOOL Instrument.external.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v5[512];

  v1 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v0 + *(int *)(v1 + 20)), v5);
  v2 = sub_2378A1BDC((uint64_t)v5);
  return !v2 || v2 == 6;
}

uint64_t Instrument.trackable.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE v10[512];
  _BYTE v11[520];

  v1 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v0 + *(int *)(v1 + 20)), v10);
  sub_23788F46C(v10, v11);
  v2 = sub_2378A1BDC((uint64_t)v11);
  if (v2 == 4)
  {
    v6 = sub_2378A1BF8((uint64_t)v11);
    v4 = *(_QWORD *)(v6 + 8);
    v5 = *(_QWORD *)(v6 + 16);
  }
  else
  {
    if (v2 != 3)
    {
      v8 = 0;
      return v8 & 1;
    }
    v3 = (uint64_t *)sub_2378A1BF8((uint64_t)v11);
    v4 = *v3;
    v5 = v3[1];
  }
  if (v4 == 0x7765695673616461 && v5 == 0xE800000000000000)
    v8 = 1;
  else
    v8 = sub_237A8840C();
  return v8 & 1;
}

uint64_t Instrument.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[496];
  _BYTE v23[512];
  _BYTE v24[520];

  v1 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v0 + *(int *)(v1 + 20)), v23);
  sub_23788F46C(v23, v24);
  v2 = sub_2378A1BDC((uint64_t)v24);
  if (v2 == 1)
  {
    v13 = (void *)sub_2378A1BF8((uint64_t)v24);
    sub_237918E30(v13, v22);
    v14 = (char *)&loc_2379474B4 + 4 * byte_237A97746[sub_237919130((uint64_t)v22)];
    __asm { BR              X10 }
  }
  if (v2 != 2)
    return MEMORY[0x24BEE4AF8];
  v3 = sub_2378A1BF8((uint64_t)v24);
  v4 = *(_QWORD *)(v3 + 40);
  if ((~*(_DWORD *)(v3 + 40) & 0xFELL) == 0)
    return MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(v3 + 80);
  v21 = *(_QWORD *)(v3 + 96);
  v18 = *(_QWORD *)(v3 + 64);
  v19 = *(void **)(v3 + 72);
  v16 = *(_QWORD *)(v3 + 48);
  v17 = *(void **)(v3 + 56);
  v6 = *(void **)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  v8 = *(void **)(v3 + 8);
  v7 = *(_QWORD *)(v3 + 16);
  v9 = *(_BYTE *)(v3 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_237A95640;
  *(_QWORD *)(v10 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v10 + 64) = &protocol witness table for ImageAsset;
  v11 = swift_allocObject();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v7;
  *(_QWORD *)(v11 + 32) = v6;
  *(_QWORD *)(v11 + 40) = v5;
  *(_BYTE *)(v11 + 48) = v4;
  *(_QWORD *)(v11 + 56) = v16;
  *(_QWORD *)(v10 + 96) = &type metadata for ImageAsset;
  *(_QWORD *)(v10 + 104) = &protocol witness table for ImageAsset;
  v12 = swift_allocObject();
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v12 + 16) = v17;
  *(_QWORD *)(v12 + 24) = v18;
  *(_QWORD *)(v12 + 32) = v19;
  *(_QWORD *)(v12 + 40) = v20;
  *(_BYTE *)(v12 + 48) = v9;
  *(_QWORD *)(v12 + 56) = v21;
  sub_237870090(v8, v7, v6, v5, v4);
  sub_237870090(v17, v18, v19, v20, v9);
  return v10;
}

void sub_237947600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  uint64_t v58;
  char v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;

  v58 = sub_23791923C((uint64_t)&a58);
  v59 = *(_BYTE *)(v58 + 24);
  v60 = *(_QWORD *)(v58 + 32);
  v61 = *(void **)(v58 + 40);
  v62 = *(_QWORD *)(v58 + 48);
  v63 = *(_BYTE *)(v58 + 56);
  v64 = *(_BYTE *)(v58 + 57);
  v66 = *(_QWORD *)(v58 + 64);
  v65 = *(_QWORD *)(v58 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v67 + 56) = &type metadata for InstrumentFont;
  *(_QWORD *)(v67 + 64) = &protocol witness table for InstrumentFont;
  v68 = swift_allocObject();
  *(_QWORD *)(v67 + 32) = v68;
  *(_BYTE *)(v68 + 16) = v59;
  *(_QWORD *)(v68 + 24) = v60;
  *(_QWORD *)(v68 + 32) = v61;
  *(_QWORD *)(v68 + 40) = v62;
  *(_BYTE *)(v68 + 48) = v63;
  *(_BYTE *)(v68 + 49) = v64;
  *(_QWORD *)(v68 + 56) = v66;
  *(_QWORD *)(v68 + 64) = v65;
  v69 = v61;
  swift_bridgeObjectRetain();
  JUMPOUT(0x2379475D8);
}

void sub_23794769C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  const void *v58;

  v58 = (const void *)sub_23791923C((uint64_t)&a58);
  sub_23791A19C(v58, &a17);
  sub_23791A1D8((uint64_t)&a17);
  sub_23791A1E4((uint64_t)&a17);
  JUMPOUT(0x2379475D0);
}

uint64_t Instrument.Kind.assets.getter()
{
  const void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE __dst[496];
  _BYTE v22[512];
  _BYTE v23[520];

  sub_23788F46C(v0, v22);
  sub_23788F46C(v22, v23);
  v1 = sub_2378A1BDC((uint64_t)v23);
  if (v1 == 1)
  {
    v5 = (void *)sub_2378A1BF8((uint64_t)v23);
    sub_237918E30(v5, __dst);
    Instrument.GaugeStyle.assets.getter();
    return v6;
  }
  else if (v1 == 2
         && (v2 = sub_2378A1BF8((uint64_t)v23), v3 = *(_QWORD *)(v2 + 40), (~*(_DWORD *)(v2 + 40) & 0xFELL) != 0))
  {
    v19 = *(_QWORD *)(v2 + 80);
    v20 = *(_QWORD *)(v2 + 96);
    v17 = *(_QWORD *)(v2 + 64);
    v18 = *(void **)(v2 + 72);
    v15 = *(_QWORD *)(v2 + 48);
    v16 = *(void **)(v2 + 56);
    v8 = *(void **)(v2 + 24);
    v7 = *(_QWORD *)(v2 + 32);
    v10 = *(void **)(v2 + 8);
    v9 = *(_QWORD *)(v2 + 16);
    v11 = *(_BYTE *)(v2 + 88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_237A95640;
    *(_QWORD *)(v4 + 56) = &type metadata for ImageAsset;
    *(_QWORD *)(v4 + 64) = &protocol witness table for ImageAsset;
    v12 = swift_allocObject();
    *(_QWORD *)(v4 + 32) = v12;
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v9;
    *(_QWORD *)(v12 + 32) = v8;
    *(_QWORD *)(v12 + 40) = v7;
    *(_BYTE *)(v12 + 48) = v3;
    *(_QWORD *)(v12 + 56) = v15;
    *(_QWORD *)(v4 + 96) = &type metadata for ImageAsset;
    *(_QWORD *)(v4 + 104) = &protocol witness table for ImageAsset;
    v13 = swift_allocObject();
    *(_QWORD *)(v4 + 72) = v13;
    *(_QWORD *)(v13 + 16) = v16;
    *(_QWORD *)(v13 + 24) = v17;
    *(_QWORD *)(v13 + 32) = v18;
    *(_QWORD *)(v13 + 40) = v19;
    *(_BYTE *)(v13 + 48) = v11;
    *(_QWORD *)(v13 + 56) = v20;
    sub_237870090(v10, v9, v8, v7, v3);
    sub_237870090(v16, v17, v18, v19, v11);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

void *Instrument.Kind.restoreAssets(from:)(_QWORD *a1)
{
  const void *v1;
  uint64_t v2;
  void *result;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  char v30;
  __int128 v31;
  _QWORD *v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  void *v36;
  uint64_t *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  char v42;
  void *v43;
  void *v44;
  _QWORD v45[64];
  void *__dst[64];
  _QWORD v47[13];
  char v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[512];
  _BYTE v52[520];
  void *v53;

  sub_23788F46C(v1, v51);
  sub_23788F46C(v51, v52);
  result = (void *)sub_2378A1BDC((uint64_t)v52);
  if ((_DWORD)result == 1)
  {
    v34 = (const void *)sub_2378A1BF8((uint64_t)v52);
    memcpy(__dst, v34, sizeof(__dst));
    sub_23788F46C(v51, v47);
    v35 = sub_2378A1BF8((uint64_t)v47);
    sub_237918F98(v35);
    Instrument.GaugeStyle.restoreAssets(from:)();
    if (v2)
    {
      memcpy(v45, __dst, sizeof(v45));
      return (void *)sub_237919064((uint64_t)v45);
    }
    sub_2378DE6E0(v51, sub_2378DE7AC);
    memcpy(v45, __dst, sizeof(v45));
    sub_23793F3F0(v45);
    v32 = v45;
    v33 = (void *)v1;
  }
  else
  {
    if ((_DWORD)result != 2)
      return result;
    v43 = (void *)v1;
    v5 = sub_2378A1BF8((uint64_t)v52);
    v6 = *(void **)(v5 + 8);
    v7 = *(void **)(v5 + 16);
    v9 = *(void **)(v5 + 24);
    v8 = *(void **)(v5 + 32);
    v11 = *(_QWORD *)(v5 + 40);
    v10 = *(void **)(v5 + 48);
    v12 = ~*(_DWORD *)(v5 + 40);
    v14 = *(void **)(v5 + 56);
    v13 = *(void **)(v5 + 64);
    v15 = *(void **)(v5 + 72);
    v16 = *(void **)(v5 + 80);
    v17 = *(_QWORD *)(v5 + 88);
    v18 = *(void **)(v5 + 96);
    v53 = v13;
    v44 = v14;
    if ((v12 & 0xFE) != 0)
    {
      __dst[0] = v6;
      __dst[1] = v7;
      __dst[2] = v9;
      __dst[3] = v8;
      LOBYTE(__dst[4]) = v11;
      __dst[5] = v10;
      __dst[6] = v14;
      __dst[7] = v13;
      __dst[8] = v15;
      __dst[9] = v16;
      LOBYTE(__dst[10]) = v17;
      __dst[11] = v18;
      v36 = v15;
      v40 = (uint64_t)v16;
      v42 = v17;
      sub_23788F46C(v51, v47);
      v37 = (uint64_t *)sub_2378A1BF8((uint64_t)v47);
      sub_23793F4C0(v37);
      sub_237870090(v6, (uint64_t)v7, v9, (uint64_t)v8, v11);
      sub_237870090(v44, (uint64_t)v53, v36, v40, v42);
      ImageAsset.restore(from:)(a1);
      if (v2)
      {
        sub_2378702E0(__dst[0], (uint64_t)__dst[1], __dst[2], (uint64_t)__dst[3], (char)__dst[4]);
        sub_2378702E0(__dst[6], (uint64_t)__dst[7], __dst[8], (uint64_t)__dst[9], (char)__dst[10]);
        return (void *)sub_2378DE6E0(v51, sub_2378DE7AC);
      }
      ImageAsset.restore(from:)(a1);
      sub_2378DE6E0(v51, sub_2378DE7AC);
      sub_2378DE6E0(v51, sub_2378DE7AC);
      v25 = __dst[0];
      v29 = __dst[1];
      v9 = __dst[2];
      v8 = __dst[3];
      v26 = LOBYTE(__dst[4]);
      v24 = __dst[5];
      v28 = __dst[6];
      v27 = __dst[7];
      v20 = __dst[8];
      v21 = __dst[9];
      v22 = LOBYTE(__dst[10]);
      v23 = __dst[11];
    }
    else
    {
      v39 = v6;
      v41 = v7;
      v38 = v10;
      v19 = v11;
      v20 = v15;
      v21 = v16;
      v22 = v17;
      v23 = v18;
      sub_2378DE6E0(v51, sub_2378DE7AC);
      v24 = v38;
      v25 = v39;
      v26 = v19;
      v27 = v53;
      v28 = v14;
      v29 = v41;
    }
    v30 = *(_BYTE *)(v5 + 104);
    LOBYTE(v47[0]) = *(_BYTE *)v5;
    v47[1] = v25;
    v47[2] = v29;
    v47[3] = v9;
    v47[4] = v8;
    v47[5] = v26;
    v47[6] = v24;
    v47[7] = v28;
    v47[8] = v27;
    v47[9] = v20;
    v47[10] = v21;
    v47[11] = v22;
    v47[12] = v23;
    v48 = v30;
    v31 = *(_OWORD *)(v5 + 128);
    v49 = *(_OWORD *)(v5 + 112);
    v50 = v31;
    sub_23793F458(v47);
    v32 = v47;
    v33 = v43;
  }
  return sub_23788F46C(v32, v33);
}

uint64_t Instrument.dataIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _BYTE v9[512];

  v1 = sub_237A88658();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v0 + *(int *)(v5 + 20)), v9);
  v8[3] = &type metadata for Instrument.Kind;
  v8[0] = swift_allocObject();
  sub_23788F46C(v9, (void *)(v8[0] + 16));
  sub_2378DE6E0(v9, sub_2378DD44C);
  sub_237A8861C();
  v6 = sub_237944308();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_237947CCC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684957547;
  if (*v0 != 1)
    v1 = 0x72756769666E6F63;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_237947D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23794FA0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237947D44()
{
  sub_23794B800();
  return sub_237A88718();
}

uint64_t sub_237947D6C()
{
  sub_23794B800();
  return sub_237A88724();
}

uint64_t Instrument.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;
  __int128 v19;
  _BYTE v20[520];
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820338);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23794B800();
  sub_237A886B8();
  sub_2378C2CCC(v3, 0);
  if (!v2)
  {
    v9 = type metadata accessor for Instrument();
    sub_23788F46C((const void *)(v3 + *(int *)(v9 + 20)), v20);
    sub_23788F46C(v20, &v15);
    v21 = 1;
    sub_23794B844();
    sub_237A882B0();
    v10 = v3 + *(int *)(v9 + 24);
    v11 = *(_BYTE *)(v10 + 24);
    v12 = *(_BYTE *)(v10 + 25);
    v15 = *(_QWORD *)v10;
    v16 = *(_OWORD *)(v10 + 8);
    v17 = v11;
    v18 = v12;
    v19 = *(_OWORD *)(v10 + 32);
    v21 = 2;
    sub_23794B888();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  char v35;
  __int128 v36;
  _BYTE v37[512];
  _BYTE v38[536];

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822710);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v30 = type metadata accessor for Instrument();
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A86588();
  sub_2378BBFE0((uint64_t)v13, (uint64_t)v11, &qword_256820328);
  if (qword_25681E410 != -1)
    swift_once();
  v16 = qword_256825198;
  sub_2378BC024((uint64_t)v13, &qword_256820328);
  sub_237870370((uint64_t)v11, (uint64_t)v15, &qword_256820328);
  *(_QWORD *)&v15[*(int *)(v3 + 52)] = v16;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23794B800();
  v17 = v31;
  sub_237A88688();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return sub_2378BC024((uint64_t)v15, &qword_256820330);
  }
  else
  {
    v18 = v29;
    sub_237944890(0, v29);
    sub_23794B8CC(v18, (uint64_t)v15, &qword_256820330);
    v38[535] = 1;
    sub_23794B910();
    v19 = v28;
    sub_237A881F0();
    v20 = v30;
    sub_23788F46C(v38, v37);
    sub_23788F46C(v37, &v15[*(int *)(v20 + 20)]);
    v38[534] = 2;
    sub_23794B954();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v19);
    v21 = v34;
    v22 = v35;
    v23 = &v15[*(int *)(v20 + 24)];
    *(_QWORD *)v23 = v32;
    *(_OWORD *)(v23 + 8) = v33;
    v23[24] = v21;
    v23[25] = v22;
    *((_OWORD *)v23 + 2) = v36;
    sub_2378A1B5C((uint64_t)v15, v26);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return sub_2378A1BA0((uint64_t)v15);
  }
}

uint64_t sub_23794831C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237948354 + 4 * byte_237A97758[a1]))(0x697461676976616ELL, 0xEA00000000006E6FLL);
}

uint64_t sub_237948354()
{
  return 0x6567756167;
}

uint64_t sub_237948368()
{
  return 0x6F74616369646E69;
}

uint64_t sub_237948384()
{
  return 0x7274537475706E69;
}

uint64_t sub_2379483A4()
{
  return 0x72685468636E7570;
}

unint64_t sub_2379483C4()
{
  return 0xD000000000000010;
}

uint64_t sub_2379483E0()
{
  return 1970169197;
}

uint64_t sub_2379483F0()
{
  return 0x6F50746567646977;
}

uint64_t sub_237948414(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23794844C + 4 * byte_237A97760[a1]))(0x697461676976616ELL, 0xEA00000000006E6FLL);
}

uint64_t sub_23794844C()
{
  return 0x6567756167;
}

uint64_t sub_237948460()
{
  return 0x6F74616369646E69;
}

uint64_t sub_23794847C()
{
  return 0x7274537475706E69;
}

uint64_t sub_23794849C()
{
  return 0x72685468636E7570;
}

unint64_t sub_2379484BC()
{
  return 0xD000000000000010;
}

uint64_t sub_2379484D8()
{
  return 1970169197;
}

uint64_t sub_2379484E8()
{
  return 0x6F50746567646977;
}

void *sub_237948510(_QWORD *a1)
{
  return Instrument.Kind.restoreAssets(from:)(a1);
}

uint64_t sub_237948534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v1, (uint64_t)v5, &qword_256820330);
  return sub_237870370((uint64_t)v5, a1, &qword_256820328);
}

uint64_t sub_2379485BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.init(from:)(a1, a2);
}

uint64_t sub_2379485D0(_QWORD *a1)
{
  return Instrument.encode(to:)(a1);
}

void sub_2379485E4(char *a1)
{
  sub_2378D5CEC(*a1);
}

void sub_2379485F0()
{
  char *v0;

  sub_2379440D0(0, *v0);
}

void sub_2379485FC(uint64_t a1)
{
  char *v1;

  sub_2379D3B88(a1, *v1);
}

void sub_237948604(uint64_t a1)
{
  char *v1;

  sub_2379440D0(a1, *v1);
}

uint64_t sub_23794860C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FB5C();
  *a1 = result;
  return result;
}

uint64_t sub_237948638@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23794831C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_237948660()
{
  unsigned __int8 *v0;

  return sub_237948414(*v0);
}

uint64_t sub_237948668@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FB5C();
  *a1 = result;
  return result;
}

uint64_t sub_23794868C()
{
  sub_23794B998();
  return sub_237A88718();
}

uint64_t sub_2379486B4()
{
  sub_23794B998();
  return sub_237A88724();
}

void sub_2379486DC(char *a1)
{
  sub_2378D5B40(*a1);
}

void sub_2379486E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237A885D4();
  __asm { BR              X9 }
}

uint64_t sub_237948738()
{
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

void sub_2379487CC()
{
  __asm { BR              X10 }
}

uint64_t sub_23794880C()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

void sub_23794888C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237A885D4();
  __asm { BR              X9 }
}

uint64_t sub_2379488D8()
{
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23794896C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FBA4();
  *a1 = result;
  return result;
}

uint64_t sub_237948998()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2379489CC + 4 * byte_237A97774[*v0]))();
}

void sub_2379489CC(char *a1@<X8>)
{
  strcpy(a1, "rendersLocally");
  a1[15] = -18;
}

void sub_2379489F4(char *a1@<X8>)
{
  strcpy(a1, "backgroundBlur");
  a1[15] = -18;
}

void sub_237948A1C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "configuration");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_237948A44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237948A78 + 4 * byte_237A97778[*v0]))(0x7974536567756167, 0xEA0000000000656CLL);
}

uint64_t sub_237948A78()
{
  return 0x4C737265646E6572;
}

uint64_t sub_237948A9C()
{
  return 0x756F72676B636162;
}

uint64_t sub_237948AC0()
{
  return 0x72756769666E6F63;
}

uint64_t sub_237948AE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FBA4();
  *a1 = result;
  return result;
}

uint64_t sub_237948B08()
{
  sub_23794BD84();
  return sub_237A88718();
}

uint64_t sub_237948B30()
{
  sub_23794BD84();
  return sub_237A88724();
}

uint64_t sub_237948B58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5958(*a1, *a2);
}

uint64_t sub_237948B64()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237948C18()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237948CA8()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237948D58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FBEC();
  *a1 = result;
  return result;
}

void sub_237948D84(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE00726569666974;
  v4 = 0xE500000000000000;
  v5 = 0x656C797473;
  if (v2 != 1)
  {
    v5 = 0x72756769666E6F63;
    v4 = 0xED00006E6F697461;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E65644961746164;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_237948DF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 0x72756769666E6F63;
  if (*v0)
    return v1;
  else
    return 0x6E65644961746164;
}

uint64_t sub_237948E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23794FBEC();
  *a1 = result;
  return result;
}

uint64_t sub_237948E8C()
{
  sub_23794BCFC();
  return sub_237A88718();
}

uint64_t sub_237948EB4()
{
  sub_23794BCFC();
  return sub_237A88724();
}

uint64_t sub_237948EDC(char *a1, char *a2)
{
  return sub_2378D5A90(*a1, *a2);
}

uint64_t sub_237948EE8()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237948F74()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237948FDC()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237949064@<X0>(char *a1@<X8>)
{
  return sub_237932C64(a1);
}

void sub_237949070(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E6F697461636F6CLL;
  if (*v1)
    v2 = 0x72756769666E6F63;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xED00006E6F697461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379490BC()
{
  _BYTE *v0;

  if (*v0)
    return 0x72756769666E6F63;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_237949104@<X0>(char *a1@<X8>)
{
  return sub_237932D44(a1);
}

uint64_t sub_237949110()
{
  sub_23794B9DC();
  return sub_237A88718();
}

uint64_t sub_237949138()
{
  sub_23794B9DC();
  return sub_237A88724();
}

uint64_t sub_237949160(char *a1, char *a2)
{
  return sub_2378D58AC(*a1, *a2);
}

uint64_t sub_23794916C()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379491F4()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237949258()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379492DC@<X0>(char *a1@<X8>)
{
  return sub_237932C64(a1);
}

void sub_2379492E8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x696669746E656469;
  if (*v1)
    v2 = 0xD000000000000017;
  v3 = 0x8000000237AAE580;
  if (!*v1)
    v3 = 0xEA00000000007265;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_237949330()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x696669746E656469;
}

uint64_t sub_237949374@<X0>(char *a1@<X8>)
{
  return sub_237932D44(a1);
}

uint64_t sub_237949380()
{
  sub_23794BCB8();
  return sub_237A88718();
}

uint64_t sub_2379493A8()
{
  sub_23794BCB8();
  return sub_237A88724();
}

uint64_t sub_2379493D0(char *a1, char *a2)
{
  return sub_2378D57F8(*a1, *a2);
}

uint64_t sub_2379493DC()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23794946C()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379494D8()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237949564@<X0>(char *a1@<X8>)
{
  return sub_237932C64(a1);
}

void sub_237949570(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x696669746E656469;
  if (*v1)
    v2 = 0x6E65644961746164;
  v3 = 0xEA00000000007265;
  if (*v1)
    v3 = 0xEE00726569666974;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379495C0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E65644961746164;
  else
    return 0x696669746E656469;
}

uint64_t sub_23794960C@<X0>(char *a1@<X8>)
{
  return sub_237932D44(a1);
}

uint64_t sub_237949618()
{
  sub_23794BC0C();
  return sub_237A88718();
}

uint64_t sub_237949640()
{
  sub_23794BC0C();
  return sub_237A88724();
}

uint64_t sub_237949668()
{
  return sub_237949678();
}

uint64_t sub_237949678()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_2379496C4()
{
  return sub_237A87710();
}

uint64_t sub_2379496D4()
{
  return sub_2379496E4();
}

uint64_t sub_2379496E4()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_23794972C@<X0>(BOOL *a1@<X8>)
{
  return sub_237949738(a1);
}

uint64_t sub_237949738@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_237949784(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_237949798@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2379497EC()
{
  sub_23794BB1C();
  return sub_237A88718();
}

uint64_t sub_237949814()
{
  sub_23794BB1C();
  return sub_237A88724();
}

uint64_t Instrument.Kind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v41 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822728);
  v46 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822730);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822738);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822740);
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v42 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822748);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822750);
  v11 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822758);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v18);
  sub_23794B998();
  v44 = v17;
  v19 = v48;
  sub_237A88688();
  if (v19)
  {
    v26 = v47;
  }
  else
  {
    v28[1] = v11;
    v28[2] = v13;
    v28[3] = 0;
    v48 = v15;
    v20 = v44;
    v21 = sub_237A881FC();
    if (*(_QWORD *)(v21 + 16))
    {
      v22 = *(unsigned __int8 *)(v21 + 32);
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    v23 = sub_237A87FB0();
    swift_allocError();
    v25 = v24;
    v46 = v14;
    v26 = v47;
    __swift_project_boxed_opaque_existential_2Tm(v47, v47[3]);
    sub_237A88664();
    sub_237A87F98();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D8], v23);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v46);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
}

void Instrument.Kind.encode(to:)(_QWORD *a1)
{
  const void *v1;
  const void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[8];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE v26[512];
  _BYTE v27[520];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227C0);
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227C8);
  v14[6] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[4] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227D0);
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v17 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227D8);
  v14[5] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v14[3] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227E0);
  v14[1] = *(_QWORD *)(v9 - 8);
  v14[2] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227E8);
  MEMORY[0x24BDAC7A8](v10);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568227F0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23788F46C(v2, v26);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23794B998();
  v24 = v12;
  sub_237A886B8();
  sub_23788F46C(v26, v27);
  v13 = (char *)sub_23794A580 + 4 * word_237A9778C[sub_2378A1BDC((uint64_t)v27)];
  __asm { BR              X10 }
}

uint64_t sub_23794A580()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)sub_2378A1BF8(v0 + 1752);
  *(_BYTE *)(v0 + 208) = 0;
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  sub_237A88214();
  *(_BYTE *)(v0 + 208) = v1;
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 728, *(_QWORD *)(v0 + 752));
  sub_23794BFC4();
  sub_237A88304();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(v3, v2);
  return __swift_destroy_boxed_opaque_existential_2Tm(v0 + 728);
}

void sub_23794AB60()
{
  uint64_t v0;

  sub_2378A1BF8(v0 + 1752);
  sub_237A880AC();
  __break(1u);
}

uint64_t sub_23794AC04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.Kind.init(from:)(a1, a2);
}

void sub_23794AC18(_QWORD *a1)
{
  Instrument.Kind.encode(to:)(a1);
}

void *sub_23794AC30(_QWORD *a1)
{
  return Instrument.Kind.restoreAssets(from:)(a1);
}

void _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  const void *v1;
  const void *v2;
  const void *v3;
  char *v4;
  _BYTE v5[512];
  _BYTE v6[512];
  _BYTE v7[512];
  uint64_t v8;
  _BYTE v9[520];

  v1 = (const void *)MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  sub_23788F46C(v1, v5);
  sub_23788F46C(v3, v6);
  sub_23788F46C(v5, v7);
  sub_23788F46C(v6, &v8);
  sub_23788F46C(v5, v9);
  v4 = (char *)sub_23794ACDC + 4 * word_237A977A2[sub_2378A1BDC((uint64_t)v9)];
  __asm { BR              X10 }
}

uint64_t sub_23794ACDC()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  char v8;
  _BYTE v9[1024];
  _BYTE v10[512];
  _BYTE v11[1024];
  uint64_t v12;

  v0 = *(unsigned __int8 *)sub_2378A1BF8((uint64_t)&v12);
  sub_23788F46C(v10, v9);
  if (sub_2378A1BDC((uint64_t)v9))
  {
    sub_2378DE6E0(v10, sub_2378DD44C);
    sub_23794FCBC((uint64_t)v11);
LABEL_18:
    v7 = 0;
    return v7 & 1;
  }
  v1 = *(unsigned __int8 *)sub_2378A1BF8((uint64_t)v9);
  if (v0)
    v2 = 0x647261436E727574;
  else
    v2 = 7364973;
  if (v0)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE300000000000000;
  if (v1)
    v4 = 0x647261436E727574;
  else
    v4 = 7364973;
  if (v1)
    v5 = 0xE800000000000000;
  else
    v5 = 0xE300000000000000;
  if (v2 != v4 || v3 != v5)
  {
    v8 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23794FCBC((uint64_t)v11);
    if ((v8 & 1) != 0)
    {
      v7 = 1;
      return v7 & 1;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
  sub_23794FCBC((uint64_t)v11);
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_23794B698()
{
  unint64_t result;

  result = qword_2568226E8;
  if (!qword_2568226E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98884, &type metadata for Instrument.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226E8);
  }
  return result;
}

uint64_t sub_23794B6DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23794B708()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23794B734()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(v0 + 480);
  v18 = *(_OWORD *)(v0 + 496);
  v15 = *(_OWORD *)(v0 + 448);
  v16 = *(_OWORD *)(v0 + 464);
  v13 = *(_OWORD *)(v0 + 416);
  v14 = *(_OWORD *)(v0 + 432);
  v11 = *(_OWORD *)(v0 + 384);
  v12 = *(_OWORD *)(v0 + 400);
  v9 = *(_OWORD *)(v0 + 352);
  v10 = *(_OWORD *)(v0 + 368);
  v7 = *(_OWORD *)(v0 + 320);
  v8 = *(_OWORD *)(v0 + 336);
  v5 = *(_OWORD *)(v0 + 288);
  v6 = *(_OWORD *)(v0 + 304);
  v3 = *(_OWORD *)(v0 + 256);
  v4 = *(_OWORD *)(v0 + 272);
  v2 = *(_OWORD *)(v0 + 224);
  sub_2378DE7AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(void **)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_QWORD *)(v0 + 192),
    *(_QWORD *)(v0 + 200),
    *(_QWORD *)(v0 + 208),
    *(_QWORD *)(v0 + 216),
    v2,
    *((void **)&v2 + 1),
    *(void **)(v0 + 240),
    *(_QWORD *)(v0 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(_QWORD *)(v0 + 512));
  return swift_deallocObject();
}

unint64_t sub_23794B800()
{
  unint64_t result;

  result = qword_2568226F8;
  if (!qword_2568226F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98834, &type metadata for Instrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568226F8);
  }
  return result;
}

unint64_t sub_23794B844()
{
  unint64_t result;

  result = qword_256822700;
  if (!qword_256822700)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.Kind, &type metadata for Instrument.Kind);
    atomic_store(result, (unint64_t *)&qword_256822700);
  }
  return result;
}

unint64_t sub_23794B888()
{
  unint64_t result;

  result = qword_256822708;
  if (!qword_256822708)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.Configuration, &type metadata for Instrument.Configuration);
    atomic_store(result, (unint64_t *)&qword_256822708);
  }
  return result;
}

uint64_t sub_23794B8CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_23794B910()
{
  unint64_t result;

  result = qword_256822718;
  if (!qword_256822718)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.Kind, &type metadata for Instrument.Kind);
    atomic_store(result, (unint64_t *)&qword_256822718);
  }
  return result;
}

unint64_t sub_23794B954()
{
  unint64_t result;

  result = qword_256822720;
  if (!qword_256822720)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.Configuration, &type metadata for Instrument.Configuration);
    atomic_store(result, (unint64_t *)&qword_256822720);
  }
  return result;
}

unint64_t sub_23794B998()
{
  unint64_t result;

  result = qword_256822760;
  if (!qword_256822760)
  {
    result = MEMORY[0x23B81FA98](&unk_237A987E4, &type metadata for Instrument.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822760);
  }
  return result;
}

unint64_t sub_23794B9DC()
{
  unint64_t result;

  result = qword_256822768;
  if (!qword_256822768)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98794, &type metadata for Instrument.Kind.PopoverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822768);
  }
  return result;
}

unint64_t sub_23794BA20()
{
  unint64_t result;

  result = qword_256822770;
  if (!qword_256822770)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverConfiguration, &type metadata for Instrument.PopoverConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822770);
  }
  return result;
}

_QWORD *sub_23794BA64(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x8000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

double sub_23794BACC(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  a1[30] = 0u;
  a1[31] = xmmword_237A988E0;
  return result;
}

unint64_t sub_23794BB1C()
{
  unint64_t result;

  result = qword_256822778;
  if (!qword_256822778)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98744, &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822778);
  }
  return result;
}

unint64_t sub_23794BB60()
{
  unint64_t result;

  result = qword_256822780;
  if (!qword_256822780)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PunchThroughType, &type metadata for Instrument.PunchThroughType);
    atomic_store(result, (unint64_t *)&qword_256822780);
  }
  return result;
}

_QWORD *sub_23794BBA4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x5000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_23794BC0C()
{
  unint64_t result;

  result = qword_256822788;
  if (!qword_256822788)
  {
    result = MEMORY[0x23B81FA98](&unk_237A986F4, &type metadata for Instrument.Kind.PunchThroughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822788);
  }
  return result;
}

_QWORD *sub_23794BC50(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x4000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_23794BCB8()
{
  unint64_t result;

  result = qword_256822790;
  if (!qword_256822790)
  {
    result = MEMORY[0x23B81FA98](&unk_237A986A4, &type metadata for Instrument.Kind.InputStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822790);
  }
  return result;
}

unint64_t sub_23794BCFC()
{
  unint64_t result;

  result = qword_256822798;
  if (!qword_256822798)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98654, &type metadata for Instrument.Kind.IndicatorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822798);
  }
  return result;
}

unint64_t sub_23794BD40()
{
  unint64_t result;

  result = qword_2568227A0;
  if (!qword_2568227A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorConfiguration, &type metadata for Instrument.IndicatorConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568227A0);
  }
  return result;
}

unint64_t sub_23794BD84()
{
  unint64_t result;

  result = qword_2568227A8;
  if (!qword_2568227A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98604, &type metadata for Instrument.Kind.GaugeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568227A8);
  }
  return result;
}

unint64_t sub_23794BDC8()
{
  unint64_t result;

  result = qword_2568227B0;
  if (!qword_2568227B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeConfiguration, &type metadata for Instrument.GaugeConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568227B0);
  }
  return result;
}

unint64_t sub_23794BE0C()
{
  unint64_t result;

  result = qword_2568227B8;
  if (!qword_2568227B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.NavigationStyle, &type metadata for Instrument.NavigationStyle);
    atomic_store(result, (unint64_t *)&qword_2568227B8);
  }
  return result;
}

_QWORD *sub_23794BE50(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_23794BEB4()
{
  unint64_t result;

  result = qword_2568227F8;
  if (!qword_2568227F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverConfiguration, &type metadata for Instrument.PopoverConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568227F8);
  }
  return result;
}

unint64_t sub_23794BEF8()
{
  unint64_t result;

  result = qword_256822800;
  if (!qword_256822800)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PunchThroughType, &type metadata for Instrument.PunchThroughType);
    atomic_store(result, (unint64_t *)&qword_256822800);
  }
  return result;
}

unint64_t sub_23794BF3C()
{
  unint64_t result;

  result = qword_256822808;
  if (!qword_256822808)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.IndicatorConfiguration, &type metadata for Instrument.IndicatorConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822808);
  }
  return result;
}

unint64_t sub_23794BF80()
{
  unint64_t result;

  result = qword_256822810;
  if (!qword_256822810)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeConfiguration, &type metadata for Instrument.GaugeConfiguration);
    atomic_store(result, (unint64_t *)&qword_256822810);
  }
  return result;
}

unint64_t sub_23794BFC4()
{
  unint64_t result;

  result = qword_256822818;
  if (!qword_256822818)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.NavigationStyle, &type metadata for Instrument.NavigationStyle);
    atomic_store(result, (unint64_t *)&qword_256822818);
  }
  return result;
}

uint64_t sub_23794C008()
{
  return sub_23794C098(&qword_256822820, &qword_256822828);
}

unint64_t sub_23794C030()
{
  unint64_t result;

  result = qword_256822830;
  if (!qword_256822830)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.NavigationStyle, &type metadata for Instrument.NavigationStyle);
    atomic_store(result, (unint64_t *)&qword_256822830);
  }
  return result;
}

uint64_t sub_23794C074()
{
  return sub_23794C098(&qword_256822838, &qword_256822840);
}

uint64_t sub_23794C098(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23794C0DC()
{
  unint64_t result;

  result = qword_256822848;
  if (!qword_256822848)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PunchThroughType, &type metadata for Instrument.PunchThroughType);
    atomic_store(result, (unint64_t *)&qword_256822848);
  }
  return result;
}

unint64_t sub_23794C124()
{
  unint64_t result;

  result = qword_256822850;
  if (!qword_256822850)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.Kind, &type metadata for Instrument.Kind);
    atomic_store(result, (unint64_t *)&qword_256822850);
  }
  return result;
}

unint64_t sub_23794C16C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256822858;
  if (!qword_256822858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820328);
    v2 = sub_2378D057C(&qword_256820278, MEMORY[0x24BDCEA88]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256822858);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Instrument(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void *v85;
  void *v86;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    v21 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)((char *)a1 + *(int *)(v8 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 52));
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v59 = a3;
    v58 = a2;
    v85 = (void *)v11[10];
    v86 = (void *)v11[9];
    v83 = v11[12];
    v84 = v11[11];
    v81 = v11[14];
    v82 = v11[13];
    v79 = v11[16];
    v80 = v11[15];
    v77 = v11[18];
    v78 = v11[17];
    v75 = (void *)v11[20];
    v76 = v11[19];
    v73 = v11[22];
    v74 = v11[21];
    v71 = v11[24];
    v72 = v11[23];
    v69 = v11[26];
    v70 = v11[25];
    v67 = (void *)v11[28];
    v68 = (void *)v11[27];
    v66 = v11[29];
    v65 = v11[30];
    v64 = v11[31];
    v63 = v11[32];
    v62 = v11[33];
    v61 = v11[34];
    v60 = v11[35];
    v29 = v11[36];
    v30 = v11[37];
    v31 = v11[38];
    v32 = v11[39];
    v57 = a1;
    v33 = v11[40];
    v34 = v11[41];
    v35 = v11[42];
    v36 = v11[43];
    v37 = v11[44];
    v38 = v11[45];
    v39 = v11[46];
    v40 = v11[47];
    v41 = v11[48];
    v42 = v11[49];
    v43 = v11[50];
    v44 = v11[51];
    v45 = v11[52];
    v46 = v11[53];
    v47 = v11[54];
    v48 = v11[55];
    v49 = v11[56];
    v50 = v11[57];
    v51 = v11[58];
    v52 = v11[59];
    v53 = v11[60];
    v54 = v11[61];
    v55 = v11[62];
    v56 = v11[63];
    v12 = (void *)v11[8];
    v13 = *v11;
    v14 = v11[1];
    v15 = (void *)v11[2];
    v16 = (void *)v11[3];
    v17 = (void *)v11[4];
    v18 = (void *)v11[5];
    v19 = v11[6];
    v20 = v11[7];
    sub_2378DD44C(*v11, v14, v15, v16, v17, v18, v19, v20, v12, v86, v85, v84, v83, v82, v81, v80, v79, v78, v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v67,
      v66,
      v65,
      v64,
      v63,
      v62,
      v61,
      v60,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55);
    *v10 = v13;
    v10[1] = v14;
    v10[2] = (uint64_t)v15;
    v10[3] = (uint64_t)v16;
    v10[4] = (uint64_t)v17;
    v10[5] = (uint64_t)v18;
    v10[6] = v19;
    v10[7] = v20;
    v10[8] = (uint64_t)v12;
    v21 = v57;
    v10[9] = (uint64_t)v86;
    v10[10] = (uint64_t)v85;
    v10[11] = v84;
    v10[12] = v83;
    v10[13] = v82;
    v10[14] = v81;
    v10[15] = v80;
    v10[16] = v79;
    v10[17] = v78;
    v10[18] = v77;
    v10[19] = v76;
    v10[20] = (uint64_t)v75;
    v10[21] = v74;
    v10[22] = v73;
    v10[23] = v72;
    v10[24] = v71;
    v10[25] = v70;
    v10[26] = v69;
    v10[27] = (uint64_t)v68;
    v10[28] = (uint64_t)v67;
    v10[29] = v66;
    v10[30] = v65;
    v10[31] = v64;
    v10[32] = v63;
    v10[33] = v62;
    v10[34] = v61;
    v10[35] = v60;
    v10[36] = v29;
    v10[37] = v30;
    v10[38] = v31;
    v10[39] = v32;
    v10[40] = v33;
    v10[41] = v34;
    v10[42] = v35;
    v10[43] = v36;
    v10[44] = v37;
    v10[45] = v38;
    v10[46] = v39;
    v10[47] = v40;
    v10[48] = v41;
    v10[49] = v42;
    v10[50] = v43;
    v10[51] = v44;
    v10[52] = v45;
    v10[53] = v46;
    v10[54] = v47;
    v10[55] = v48;
    v10[56] = v49;
    v10[57] = v50;
    v10[58] = v51;
    v10[59] = v52;
    v10[60] = v53;
    v10[61] = v54;
    v10[62] = v55;
    v10[63] = v56;
    v22 = *(int *)(v59 + 24);
    v23 = (char *)v57 + v22;
    v24 = (char *)v58 + v22;
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
    *((_WORD *)v23 + 12) = *((_WORD *)v24 + 12);
    v26 = *((_QWORD *)v24 + 5);
    *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
    *((_QWORD *)v23 + 5) = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v21;
}

uint64_t destroy for Instrument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v21 = *(_OWORD *)(v5 + 464);
  v22 = *(_OWORD *)(v5 + 480);
  v19 = *(_OWORD *)(v5 + 432);
  v20 = *(_OWORD *)(v5 + 448);
  v17 = *(_OWORD *)(v5 + 400);
  v18 = *(_OWORD *)(v5 + 416);
  v15 = *(_OWORD *)(v5 + 368);
  v16 = *(_OWORD *)(v5 + 384);
  v13 = *(_OWORD *)(v5 + 336);
  v14 = *(_OWORD *)(v5 + 352);
  v11 = *(_OWORD *)(v5 + 304);
  v12 = *(_OWORD *)(v5 + 320);
  v9 = *(_OWORD *)(v5 + 272);
  v10 = *(_OWORD *)(v5 + 288);
  v7 = *(_OWORD *)(v5 + 240);
  v8 = *(_OWORD *)(v5 + 256);
  sub_2378DE7AC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(void **)(v5 + 16), *(void **)(v5 + 24), *(void **)(v5 + 32), *(void **)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(void **)(v5 + 64), *(void **)(v5 + 72), *(void **)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 112), *(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144),
    *(_QWORD *)(v5 + 152),
    *(void **)(v5 + 160),
    *(_QWORD *)(v5 + 168),
    *(_QWORD *)(v5 + 176),
    *(_QWORD *)(v5 + 184),
    *(_QWORD *)(v5 + 192),
    *(_QWORD *)(v5 + 200),
    *(_QWORD *)(v5 + 208),
    *(void **)(v5 + 216),
    *(void **)(v5 + 224),
    *(_QWORD *)(v5 + 232),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    SBYTE8(v17),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    SBYTE8(v20),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    *(_QWORD *)(v5 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  void *v83;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v55 = a2;
  v54 = a1;
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v82 = (void *)v10[10];
  v83 = (void *)v10[9];
  v80 = v10[12];
  v81 = v10[11];
  v78 = v10[14];
  v79 = v10[13];
  v76 = v10[16];
  v77 = v10[15];
  v74 = v10[18];
  v75 = v10[17];
  v72 = (void *)v10[20];
  v73 = v10[19];
  v70 = v10[22];
  v71 = v10[21];
  v68 = v10[24];
  v69 = v10[23];
  v66 = v10[26];
  v67 = v10[25];
  v64 = (void *)v10[28];
  v65 = (void *)v10[27];
  v63 = v10[29];
  v62 = v10[30];
  v61 = v10[31];
  v60 = v10[32];
  v59 = v10[33];
  v58 = v10[34];
  v57 = v10[35];
  v26 = v10[36];
  v27 = v10[37];
  v28 = v10[38];
  v29 = v10[39];
  v30 = v10[40];
  v31 = v10[41];
  v32 = v10[42];
  v33 = v10[43];
  v34 = v10[44];
  v35 = v10[45];
  v36 = v10[46];
  v37 = v10[47];
  v38 = v10[48];
  v39 = v10[49];
  v40 = v10[50];
  v41 = v10[51];
  v42 = v10[52];
  v43 = v10[53];
  v44 = v10[54];
  v45 = v10[55];
  v46 = v10[56];
  v47 = v10[57];
  v48 = v10[58];
  v49 = v10[59];
  v50 = v10[60];
  v51 = v10[61];
  v52 = v10[62];
  v53 = v10[63];
  v11 = (void *)v10[8];
  v12 = *v10;
  v13 = v10[1];
  v14 = (void *)v10[2];
  v15 = (void *)v10[3];
  v16 = (void *)v10[4];
  v17 = (void *)v10[5];
  v18 = v10[6];
  v19 = v10[7];
  sub_2378DD44C(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v83, v82, v81, v80, v79, v78, v77, v76, v75, v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v63,
    v62,
    v61,
    v60,
    v59,
    v58,
    v57,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52);
  *v9 = v12;
  v9[1] = v13;
  v9[2] = (uint64_t)v14;
  v9[3] = (uint64_t)v15;
  v9[4] = (uint64_t)v16;
  v9[5] = (uint64_t)v17;
  v9[6] = v18;
  v9[7] = v19;
  v9[8] = (uint64_t)v11;
  v9[9] = (uint64_t)v83;
  v9[10] = (uint64_t)v82;
  v9[11] = v81;
  v9[12] = v80;
  v9[13] = v79;
  v9[14] = v78;
  v9[15] = v77;
  v9[16] = v76;
  v9[17] = v75;
  v9[18] = v74;
  v9[19] = v73;
  v9[20] = (uint64_t)v72;
  v9[21] = v71;
  v9[22] = v70;
  v9[23] = v69;
  v9[24] = v68;
  v9[25] = v67;
  v9[26] = v66;
  v9[27] = (uint64_t)v65;
  v9[28] = (uint64_t)v64;
  v9[29] = v63;
  v9[30] = v62;
  v9[31] = v61;
  v9[32] = v60;
  v9[33] = v59;
  v9[34] = v58;
  v9[35] = v57;
  v9[36] = v26;
  v9[37] = v27;
  v9[38] = v28;
  v9[39] = v29;
  v9[40] = v30;
  v9[41] = v31;
  v9[42] = v32;
  v9[43] = v33;
  v9[44] = v34;
  v9[45] = v35;
  v9[46] = v36;
  v9[47] = v37;
  v9[48] = v38;
  v9[49] = v39;
  v9[50] = v40;
  v9[51] = v41;
  v9[52] = v42;
  v9[53] = v43;
  v9[54] = v44;
  v9[55] = v45;
  v9[56] = v46;
  v9[57] = v47;
  v9[58] = v48;
  v9[59] = v49;
  v9[60] = v50;
  v9[61] = v51;
  v9[62] = v52;
  v9[63] = v53;
  v20 = *(int *)(a3 + 24);
  v21 = v54 + v20;
  v22 = v55 + v20;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_WORD *)(v21 + 24) = *(_WORD *)(v22 + 24);
  v24 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v24;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v54;
}

uint64_t assignWithCopy for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v8 = a2;
  v82 = a2;
  v80 = a1;
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = (uint64_t *)(v8 + v9);
  v117 = v11[1];
  v118 = *v11;
  v115 = (void *)v11[3];
  v116 = (void *)v11[2];
  v113 = (void *)v11[5];
  v114 = (void *)v11[4];
  v111 = v11[7];
  v112 = v11[6];
  v109 = (void *)v11[9];
  v110 = (void *)v11[8];
  v107 = v11[11];
  v108 = (void *)v11[10];
  v105 = v11[13];
  v106 = v11[12];
  v103 = v11[15];
  v104 = v11[14];
  v102 = v11[16];
  v101 = v11[17];
  v100 = v11[18];
  v99 = v11[19];
  v98 = (void *)v11[20];
  v97 = v11[21];
  v96 = v11[22];
  v95 = v11[23];
  v94 = v11[24];
  v93 = v11[25];
  v92 = v11[26];
  v91 = (void *)v11[27];
  v90 = (void *)v11[28];
  v89 = v11[29];
  v88 = v11[30];
  v87 = v11[31];
  v86 = v11[32];
  v85 = v11[33];
  v84 = v11[34];
  v83 = v11[35];
  v13 = v11[37];
  v12 = v11[38];
  v15 = v11[39];
  v14 = v11[40];
  v17 = v11[41];
  v16 = v11[42];
  v19 = v11[43];
  v18 = v11[44];
  v20 = v11[45];
  v61 = v11[36];
  v62 = v11[46];
  v63 = v11[47];
  v64 = v11[48];
  v65 = v11[49];
  v66 = v11[50];
  v67 = v11[51];
  v68 = v11[52];
  v69 = v11[53];
  v70 = v11[54];
  v71 = v11[55];
  v72 = v11[56];
  v73 = v11[57];
  v74 = v11[58];
  v75 = v11[59];
  v76 = v11[60];
  v77 = v11[61];
  v78 = v11[62];
  v79 = v11[63];
  sub_2378DD44C(*v11, v117, v116, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v61,
    v13,
    v12,
    v15,
    v14,
    v17,
    v16,
    v19,
    v18,
    v20,
    v62,
    v63,
    *((_OWORD *)v11 + 24),
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78);
  v21 = *(_QWORD *)v10;
  v22 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v10 = v118;
  *(_QWORD *)(v10 + 8) = v117;
  v23 = *(void **)(v10 + 16);
  v24 = *(void **)(v10 + 24);
  *(_QWORD *)(v10 + 16) = v116;
  *(_QWORD *)(v10 + 24) = v115;
  v25 = *(void **)(v10 + 32);
  v26 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 32) = v114;
  *(_QWORD *)(v10 + 40) = v113;
  v27 = *(_QWORD *)(v10 + 48);
  v28 = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v10 + 48) = v112;
  *(_QWORD *)(v10 + 56) = v111;
  v29 = *(_OWORD *)(v10 + 64);
  v30 = *(_OWORD *)(v10 + 80);
  *(_QWORD *)(v10 + 64) = v110;
  *(_QWORD *)(v10 + 72) = v109;
  *(_QWORD *)(v10 + 80) = v108;
  *(_QWORD *)(v10 + 88) = v107;
  v31 = *(_OWORD *)(v10 + 96);
  v32 = *(_OWORD *)(v10 + 112);
  *(_QWORD *)(v10 + 96) = v106;
  *(_QWORD *)(v10 + 104) = v105;
  *(_QWORD *)(v10 + 112) = v104;
  *(_QWORD *)(v10 + 120) = v103;
  v33 = *(_OWORD *)(v10 + 128);
  v34 = *(_OWORD *)(v10 + 144);
  *(_QWORD *)(v10 + 128) = v102;
  *(_QWORD *)(v10 + 136) = v101;
  *(_QWORD *)(v10 + 144) = v100;
  *(_QWORD *)(v10 + 152) = v99;
  v35 = *(_OWORD *)(v10 + 160);
  v36 = *(_OWORD *)(v10 + 176);
  *(_QWORD *)(v10 + 160) = v98;
  *(_QWORD *)(v10 + 168) = v97;
  *(_QWORD *)(v10 + 176) = v96;
  *(_QWORD *)(v10 + 184) = v95;
  v37 = *(_OWORD *)(v10 + 192);
  v38 = *(_OWORD *)(v10 + 208);
  *(_QWORD *)(v10 + 192) = v94;
  *(_QWORD *)(v10 + 200) = v93;
  *(_QWORD *)(v10 + 208) = v92;
  *(_QWORD *)(v10 + 216) = v91;
  v39 = *(_OWORD *)(v10 + 224);
  v40 = *(_OWORD *)(v10 + 240);
  *(_QWORD *)(v10 + 224) = v90;
  *(_QWORD *)(v10 + 232) = v89;
  *(_QWORD *)(v10 + 240) = v88;
  *(_QWORD *)(v10 + 248) = v87;
  v41 = *(_OWORD *)(v10 + 256);
  v42 = *(_OWORD *)(v10 + 272);
  *(_QWORD *)(v10 + 256) = v86;
  *(_QWORD *)(v10 + 264) = v85;
  *(_QWORD *)(v10 + 272) = v84;
  *(_QWORD *)(v10 + 280) = v83;
  v43 = *(_OWORD *)(v10 + 288);
  v44 = *(_OWORD *)(v10 + 304);
  *(_QWORD *)(v10 + 288) = v61;
  *(_QWORD *)(v10 + 296) = v13;
  *(_QWORD *)(v10 + 304) = v12;
  *(_QWORD *)(v10 + 312) = v15;
  v45 = *(_OWORD *)(v10 + 320);
  v46 = *(_OWORD *)(v10 + 336);
  *(_QWORD *)(v10 + 320) = v14;
  *(_QWORD *)(v10 + 328) = v17;
  *(_QWORD *)(v10 + 336) = v16;
  *(_QWORD *)(v10 + 344) = v19;
  v47 = *(_OWORD *)(v10 + 352);
  v48 = *(_OWORD *)(v10 + 368);
  *(_QWORD *)(v10 + 352) = v18;
  *(_QWORD *)(v10 + 360) = v20;
  *(_QWORD *)(v10 + 368) = v62;
  *(_QWORD *)(v10 + 376) = v63;
  v49 = *(_OWORD *)(v10 + 384);
  v50 = *(_OWORD *)(v10 + 400);
  *(_QWORD *)(v10 + 384) = v64;
  *(_QWORD *)(v10 + 392) = v65;
  *(_QWORD *)(v10 + 400) = v66;
  *(_QWORD *)(v10 + 408) = v67;
  v51 = *(_OWORD *)(v10 + 416);
  v52 = *(_OWORD *)(v10 + 432);
  *(_QWORD *)(v10 + 416) = v68;
  *(_QWORD *)(v10 + 424) = v69;
  *(_QWORD *)(v10 + 432) = v70;
  *(_QWORD *)(v10 + 440) = v71;
  v53 = *(_OWORD *)(v10 + 448);
  v54 = *(_OWORD *)(v10 + 464);
  *(_QWORD *)(v10 + 448) = v72;
  *(_QWORD *)(v10 + 456) = v73;
  *(_QWORD *)(v10 + 464) = v74;
  *(_QWORD *)(v10 + 472) = v75;
  v55 = *(_OWORD *)(v10 + 480);
  *(_QWORD *)(v10 + 480) = v76;
  *(_QWORD *)(v10 + 488) = v77;
  v56 = *(_QWORD *)(v10 + 496);
  *(_QWORD *)(v10 + 496) = v78;
  *(_QWORD *)(v10 + 504) = v79;
  sub_2378DE7AC(v21, v22, v23, v24, v25, v26, v27, v28, (void *)v29, *((void **)&v29 + 1), (void *)v30, *((unint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34,
    *((uint64_t *)&v34 + 1),
    (void *)v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((void **)&v38 + 1),
    (void *)v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    SBYTE8(v47),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56);
  v57 = *(int *)(a3 + 24);
  v58 = v80 + v57;
  v59 = v82 + v57;
  *(_QWORD *)(v80 + v57) = *(_QWORD *)(v82 + v57);
  swift_retain();
  swift_release();
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  *(_QWORD *)(v58 + 16) = *(_QWORD *)(v59 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v58 + 24) = *(_BYTE *)(v59 + 24);
  *(_BYTE *)(v58 + 25) = *(_BYTE *)(v59 + 25);
  *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
  *(_QWORD *)(v58 + 40) = *(_QWORD *)(v59 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v80;
}

uint64_t initializeWithTake for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x200uLL);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  return a1;
}

uint64_t assignWithTake for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = (_OWORD *)(a2 + v8);
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(void **)(v9 + 16);
  v14 = *(void **)(v9 + 24);
  v15 = *(void **)(v9 + 32);
  v16 = *(void **)(v9 + 40);
  v17 = *(_QWORD *)(v9 + 48);
  v18 = *(_QWORD *)(v9 + 56);
  v19 = *(_OWORD *)(v9 + 64);
  v20 = *(_OWORD *)(v9 + 80);
  v21 = *(_OWORD *)(v9 + 96);
  v22 = *(_OWORD *)(v9 + 112);
  v23 = *(_OWORD *)(v9 + 128);
  v24 = *(_OWORD *)(v9 + 144);
  v25 = *(_OWORD *)(v9 + 160);
  v26 = *(_OWORD *)(v9 + 176);
  v27 = *(_OWORD *)(v9 + 192);
  v28 = *(_OWORD *)(v9 + 208);
  v29 = *(_OWORD *)(v9 + 224);
  v30 = *(_OWORD *)(v9 + 240);
  v31 = *(_OWORD *)(v9 + 256);
  v32 = *(_OWORD *)(v9 + 272);
  v33 = *(_OWORD *)(v9 + 288);
  v34 = *(_OWORD *)(v9 + 304);
  v35 = *(_OWORD *)(v9 + 320);
  v36 = *(_OWORD *)(v9 + 336);
  v37 = *(_OWORD *)(v9 + 352);
  v38 = *(_OWORD *)(v9 + 368);
  v39 = *(_OWORD *)(v9 + 384);
  v40 = *(_OWORD *)(v9 + 400);
  v41 = *(_OWORD *)(v9 + 416);
  v42 = *(_OWORD *)(v9 + 432);
  v43 = *(_OWORD *)(v9 + 448);
  v44 = *(_OWORD *)(v9 + 464);
  v45 = *(_OWORD *)(v9 + 480);
  v46 = *(_QWORD *)(v9 + 496);
  v47 = v10[1];
  *(_OWORD *)v9 = *v10;
  *(_OWORD *)(v9 + 16) = v47;
  v48 = v10[3];
  *(_OWORD *)(v9 + 32) = v10[2];
  *(_OWORD *)(v9 + 48) = v48;
  v49 = v10[5];
  *(_OWORD *)(v9 + 64) = v10[4];
  *(_OWORD *)(v9 + 80) = v49;
  v50 = v10[7];
  *(_OWORD *)(v9 + 96) = v10[6];
  *(_OWORD *)(v9 + 112) = v50;
  v51 = v10[9];
  *(_OWORD *)(v9 + 128) = v10[8];
  *(_OWORD *)(v9 + 144) = v51;
  v52 = v10[11];
  *(_OWORD *)(v9 + 160) = v10[10];
  *(_OWORD *)(v9 + 176) = v52;
  v53 = v10[13];
  *(_OWORD *)(v9 + 192) = v10[12];
  *(_OWORD *)(v9 + 208) = v53;
  v54 = v10[15];
  *(_OWORD *)(v9 + 224) = v10[14];
  *(_OWORD *)(v9 + 240) = v54;
  v55 = v10[17];
  *(_OWORD *)(v9 + 256) = v10[16];
  *(_OWORD *)(v9 + 272) = v55;
  v56 = v10[19];
  *(_OWORD *)(v9 + 288) = v10[18];
  *(_OWORD *)(v9 + 304) = v56;
  v57 = v10[21];
  *(_OWORD *)(v9 + 320) = v10[20];
  *(_OWORD *)(v9 + 336) = v57;
  v58 = v10[23];
  *(_OWORD *)(v9 + 352) = v10[22];
  *(_OWORD *)(v9 + 368) = v58;
  v59 = v10[25];
  *(_OWORD *)(v9 + 384) = v10[24];
  *(_OWORD *)(v9 + 400) = v59;
  v60 = v10[27];
  *(_OWORD *)(v9 + 416) = v10[26];
  *(_OWORD *)(v9 + 432) = v60;
  v61 = v10[29];
  *(_OWORD *)(v9 + 448) = v10[28];
  *(_OWORD *)(v9 + 464) = v61;
  v62 = v10[31];
  *(_OWORD *)(v9 + 480) = v10[30];
  *(_OWORD *)(v9 + 496) = v62;
  sub_2378DE7AC(v11, v12, v13, v14, v15, v16, v17, v18, (void *)v19, *((void **)&v19 + 1), (void *)v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
    *((uint64_t *)&v24 + 1),
    (void *)v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((void **)&v28 + 1),
    (void *)v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    SBYTE8(v34),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    SBYTE8(v37),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    SBYTE8(v40),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    SBYTE8(v43),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  v63 = *(int *)(a3 + 24);
  v64 = a1 + v63;
  v65 = a2 + v63;
  *(_QWORD *)(a1 + v63) = *(_QWORD *)v65;
  swift_release();
  v66 = *(_QWORD *)(v65 + 16);
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(v65 + 8);
  *(_QWORD *)(v64 + 16) = v66;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v64 + 24) = *(_BYTE *)(v65 + 24);
  *(_BYTE *)(v64 + 25) = *(_BYTE *)(v65 + 25);
  v67 = *(_QWORD *)(v65 + 40);
  *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
  *(_QWORD *)(v64 + 40) = v67;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Instrument()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23794D714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((*(_QWORD *)(a1 + *(int *)(a3 + 20) + 336) >> 3) > 0x80000000)
    return -(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 336) >> 3);
  return 0;
}

uint64_t storeEnumTagSinglePayload for Instrument()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

double sub_23794D7A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  }
  else
  {
    v11 = a1 + *(int *)(a4 + 20);
    result = 0.0;
    *(_OWORD *)(v11 + 304) = 0u;
    *(_OWORD *)(v11 + 320) = 0u;
    *(_OWORD *)(v11 + 272) = 0u;
    *(_OWORD *)(v11 + 288) = 0u;
    *(_OWORD *)(v11 + 240) = 0u;
    *(_OWORD *)(v11 + 256) = 0u;
    *(_OWORD *)(v11 + 208) = 0u;
    *(_OWORD *)(v11 + 224) = 0u;
    *(_OWORD *)(v11 + 176) = 0u;
    *(_OWORD *)(v11 + 192) = 0u;
    *(_OWORD *)(v11 + 144) = 0u;
    *(_OWORD *)(v11 + 160) = 0u;
    *(_OWORD *)(v11 + 112) = 0u;
    *(_OWORD *)(v11 + 128) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_OWORD *)(v11 + 96) = 0u;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(_OWORD *)v11 = 0u;
    *(_QWORD *)(v11 + 336) = 8 * -(int)a2;
    *(_OWORD *)(v11 + 344) = 0u;
    *(_OWORD *)(v11 + 360) = 0u;
    *(_OWORD *)(v11 + 376) = 0u;
    *(_OWORD *)(v11 + 392) = 0u;
    *(_OWORD *)(v11 + 408) = 0u;
    *(_OWORD *)(v11 + 424) = 0u;
    *(_OWORD *)(v11 + 440) = 0u;
    *(_OWORD *)(v11 + 456) = 0u;
    *(_OWORD *)(v11 + 472) = 0u;
    *(_OWORD *)(v11 + 488) = 0u;
    *(_QWORD *)(v11 + 504) = 0;
  }
  return result;
}

uint64_t sub_23794D874()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23794D8F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23794D8F0()
{
  uint64_t result;

  result = qword_2568228C8;
  if (!qword_2568228C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820328);
    sub_23794D9AC();
    sub_23794DA08(qword_2568228D8, &qword_256820328, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_23794DA08(&qword_256820340, &qword_256820328, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    type metadata accessor for SkipEncode();
  }
  return result;
}

unint64_t sub_23794D9AC()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_2568228D0;
  if (!qword_2568228D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820328);
    v2 = &protocol witness table for UUID;
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568228D0);
  }
  return result;
}

uint64_t sub_23794DA08(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_2378D057C(&qword_256820318, MEMORY[0x24BDCEAA8]);
    v7[1] = sub_2378D057C(&qword_256820320, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](a3, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for Instrument.Configuration()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Instrument.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Instrument.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Configuration()
{
  return &type metadata for Instrument.Configuration;
}

ValueMetadata *type metadata accessor for Instrument.NavigationStyle()
{
  return &type metadata for Instrument.NavigationStyle;
}

ValueMetadata *type metadata accessor for Instrument.PunchThroughType()
{
  return &type metadata for Instrument.PunchThroughType;
}

void destroy for Instrument.Kind(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v15 = *(_OWORD *)(a1 + 464);
  v16 = *(_OWORD *)(a1 + 480);
  v13 = *(_OWORD *)(a1 + 432);
  v14 = *(_OWORD *)(a1 + 448);
  v11 = *(_OWORD *)(a1 + 400);
  v12 = *(_OWORD *)(a1 + 416);
  v9 = *(_OWORD *)(a1 + 368);
  v10 = *(_OWORD *)(a1 + 384);
  v7 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 352);
  v5 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 320);
  v3 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 288);
  v1 = *(_OWORD *)(a1 + 240);
  v2 = *(_OWORD *)(a1 + 256);
  sub_2378DE7AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v1,
    *((uint64_t *)&v1 + 1),
    v2,
    *((uint64_t *)&v2 + 1),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    SBYTE8(v5),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    SBYTE8(v8),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(_QWORD *)(a1 + 496));
}

uint64_t *initializeWithCopy for Instrument.Kind(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  void *v67;

  v66 = (void *)a2[10];
  v67 = (void *)a2[9];
  v64 = a2[12];
  v65 = a2[11];
  v62 = a2[14];
  v63 = a2[13];
  v60 = a2[16];
  v61 = a2[15];
  v58 = a2[18];
  v59 = a2[17];
  v56 = (void *)a2[20];
  v57 = a2[19];
  v54 = a2[22];
  v55 = a2[21];
  v52 = a2[24];
  v53 = a2[23];
  v50 = a2[26];
  v51 = a2[25];
  v48 = (void *)a2[28];
  v49 = (void *)a2[27];
  v47 = a2[29];
  v46 = a2[30];
  v45 = a2[31];
  v44 = a2[32];
  v43 = a2[33];
  v42 = a2[34];
  v41 = a2[35];
  v13 = a2[36];
  v14 = a2[37];
  v15 = a2[38];
  v16 = a2[39];
  v17 = a2[40];
  v18 = a2[41];
  v19 = a2[42];
  v20 = a2[43];
  v21 = a2[44];
  v22 = a2[45];
  v23 = a2[46];
  v24 = a2[47];
  v25 = a2[48];
  v26 = a2[49];
  v27 = a2[50];
  v28 = a2[51];
  v29 = a2[52];
  v30 = a2[53];
  v31 = a2[54];
  v32 = a2[55];
  v33 = a2[56];
  v34 = a2[57];
  v35 = a2[58];
  v36 = a2[59];
  v37 = a2[60];
  v38 = a2[61];
  v39 = a2[62];
  v40 = a2[63];
  v3 = (void *)a2[8];
  v4 = *a2;
  v5 = a2[1];
  v6 = (void *)a2[2];
  v7 = (void *)a2[3];
  v8 = (void *)a2[4];
  v9 = (void *)a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_2378DD44C(*a2, v5, v6, v7, v8, v9, v10, v11, v3, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58,
    v57,
    v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = (uint64_t)v7;
  a1[4] = (uint64_t)v8;
  a1[5] = (uint64_t)v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = (uint64_t)v3;
  a1[9] = (uint64_t)v67;
  a1[10] = (uint64_t)v66;
  a1[11] = v65;
  a1[12] = v64;
  a1[13] = v63;
  a1[14] = v62;
  a1[15] = v61;
  a1[16] = v60;
  a1[17] = v59;
  a1[18] = v58;
  a1[19] = v57;
  a1[20] = (uint64_t)v56;
  a1[21] = v55;
  a1[22] = v54;
  a1[23] = v53;
  a1[24] = v52;
  a1[25] = v51;
  a1[26] = v50;
  a1[27] = (uint64_t)v49;
  a1[28] = (uint64_t)v48;
  a1[29] = v47;
  a1[30] = v46;
  a1[31] = v45;
  a1[32] = v44;
  a1[33] = v43;
  a1[34] = v42;
  a1[35] = v41;
  a1[36] = v13;
  a1[37] = v14;
  a1[38] = v15;
  a1[39] = v16;
  a1[40] = v17;
  a1[41] = v18;
  a1[42] = v19;
  a1[43] = v20;
  a1[44] = v21;
  a1[45] = v22;
  a1[46] = v23;
  a1[47] = v24;
  a1[48] = v25;
  a1[49] = v26;
  a1[50] = v27;
  a1[51] = v28;
  a1[52] = v29;
  a1[53] = v30;
  a1[54] = v31;
  a1[55] = v32;
  a1[56] = v33;
  a1[57] = v34;
  a1[58] = v35;
  a1[59] = v36;
  a1[60] = v37;
  a1[61] = v38;
  a1[62] = v39;
  a1[63] = v40;
  return a1;
}

uint64_t assignWithCopy for Instrument.Kind(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;

  v102 = *a2;
  v103 = a2[1];
  v100 = (void *)a2[3];
  v101 = (void *)a2[2];
  v98 = (void *)a2[5];
  v99 = (void *)a2[4];
  v96 = a2[7];
  v97 = a2[6];
  v94 = (void *)a2[9];
  v95 = (void *)a2[8];
  v92 = a2[11];
  v93 = (void *)a2[10];
  v90 = a2[13];
  v91 = a2[12];
  v88 = a2[15];
  v89 = a2[14];
  v87 = a2[16];
  v86 = a2[17];
  v85 = a2[18];
  v84 = a2[19];
  v83 = (void *)a2[20];
  v82 = a2[21];
  v81 = a2[22];
  v80 = a2[23];
  v79 = a2[24];
  v78 = a2[25];
  v77 = a2[26];
  v76 = (void *)a2[27];
  v75 = (void *)a2[28];
  v74 = a2[29];
  v73 = a2[30];
  v72 = a2[31];
  v71 = a2[32];
  v70 = a2[33];
  v69 = a2[34];
  v68 = a2[35];
  v4 = a2[37];
  v3 = a2[38];
  v6 = a2[39];
  v5 = a2[40];
  v8 = a2[41];
  v7 = a2[42];
  v10 = a2[43];
  v9 = a2[44];
  v11 = a2[45];
  v49 = a2[36];
  v50 = a2[46];
  v51 = a2[47];
  v52 = a2[48];
  v53 = a2[49];
  v54 = a2[50];
  v55 = a2[51];
  v56 = a2[52];
  v57 = a2[53];
  v58 = a2[54];
  v59 = a2[55];
  v60 = a2[56];
  v61 = a2[57];
  v62 = a2[58];
  v63 = a2[59];
  v64 = a2[60];
  v65 = a2[61];
  v66 = a2[62];
  v67 = a2[63];
  sub_2378DD44C(*a2, v103, v101, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v49,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v50,
    v51,
    *((_OWORD *)a2 + 24),
    v53,
    v54,
    v55,
    v56,
    v57,
    *((_OWORD *)a2 + 27),
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v102;
  *(_QWORD *)(a1 + 8) = v103;
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v101;
  *(_QWORD *)(a1 + 24) = v100;
  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v99;
  *(_QWORD *)(a1 + 40) = v98;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v97;
  *(_QWORD *)(a1 + 56) = v96;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v95;
  *(_QWORD *)(a1 + 72) = v94;
  *(_QWORD *)(a1 + 80) = v93;
  *(_QWORD *)(a1 + 88) = v92;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v91;
  *(_QWORD *)(a1 + 104) = v90;
  *(_QWORD *)(a1 + 112) = v89;
  *(_QWORD *)(a1 + 120) = v88;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v87;
  *(_QWORD *)(a1 + 136) = v86;
  *(_QWORD *)(a1 + 144) = v85;
  *(_QWORD *)(a1 + 152) = v84;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v83;
  *(_QWORD *)(a1 + 168) = v82;
  *(_QWORD *)(a1 + 176) = v81;
  *(_QWORD *)(a1 + 184) = v80;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v79;
  *(_QWORD *)(a1 + 200) = v78;
  *(_QWORD *)(a1 + 208) = v77;
  *(_QWORD *)(a1 + 216) = v76;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v75;
  *(_QWORD *)(a1 + 232) = v74;
  *(_QWORD *)(a1 + 240) = v73;
  *(_QWORD *)(a1 + 248) = v72;
  v32 = *(_OWORD *)(a1 + 256);
  v33 = *(_OWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 256) = v71;
  *(_QWORD *)(a1 + 264) = v70;
  *(_QWORD *)(a1 + 272) = v69;
  *(_QWORD *)(a1 + 280) = v68;
  v34 = *(_OWORD *)(a1 + 288);
  v35 = *(_OWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 288) = v49;
  *(_QWORD *)(a1 + 296) = v4;
  *(_QWORD *)(a1 + 304) = v3;
  *(_QWORD *)(a1 + 312) = v6;
  v36 = *(_OWORD *)(a1 + 320);
  v37 = *(_OWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 320) = v5;
  *(_QWORD *)(a1 + 328) = v8;
  *(_QWORD *)(a1 + 336) = v7;
  *(_QWORD *)(a1 + 344) = v10;
  v38 = *(_OWORD *)(a1 + 352);
  v39 = *(_OWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 352) = v9;
  *(_QWORD *)(a1 + 360) = v11;
  *(_QWORD *)(a1 + 368) = v50;
  *(_QWORD *)(a1 + 376) = v51;
  v40 = *(_OWORD *)(a1 + 384);
  v41 = *(_OWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 384) = v52;
  *(_QWORD *)(a1 + 392) = v53;
  *(_QWORD *)(a1 + 400) = v54;
  *(_QWORD *)(a1 + 408) = v55;
  v42 = *(_OWORD *)(a1 + 416);
  v43 = *(_OWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v56;
  *(_QWORD *)(a1 + 424) = v57;
  *(_QWORD *)(a1 + 432) = v58;
  *(_QWORD *)(a1 + 440) = v59;
  v44 = *(_OWORD *)(a1 + 448);
  v45 = *(_OWORD *)(a1 + 464);
  *(_QWORD *)(a1 + 448) = v60;
  *(_QWORD *)(a1 + 456) = v61;
  *(_QWORD *)(a1 + 464) = v62;
  *(_QWORD *)(a1 + 472) = v63;
  v46 = *(_OWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 480) = v64;
  *(_QWORD *)(a1 + 488) = v65;
  v47 = *(_QWORD *)(a1 + 496);
  *(_QWORD *)(a1 + 496) = v66;
  *(_QWORD *)(a1 + 504) = v67;
  sub_2378DE7AC(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((void **)&v20 + 1), (void *)v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    SBYTE8(v35),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  return a1;
}

uint64_t assignWithTake for Instrument.Kind(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 240);
  v24 = *(_OWORD *)(a1 + 256);
  v25 = *(_OWORD *)(a1 + 272);
  v26 = *(_OWORD *)(a1 + 288);
  v27 = *(_OWORD *)(a1 + 304);
  v28 = *(_OWORD *)(a1 + 320);
  v29 = *(_OWORD *)(a1 + 336);
  v30 = *(_OWORD *)(a1 + 352);
  v31 = *(_OWORD *)(a1 + 368);
  v32 = *(_OWORD *)(a1 + 384);
  v33 = *(_OWORD *)(a1 + 400);
  v34 = *(_OWORD *)(a1 + 416);
  v35 = *(_OWORD *)(a1 + 432);
  v36 = *(_OWORD *)(a1 + 448);
  v37 = *(_OWORD *)(a1 + 464);
  v38 = *(_OWORD *)(a1 + 480);
  v39 = *(_QWORD *)(a1 + 496);
  v40 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v40;
  v41 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v41;
  v42 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v42;
  v43 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v43;
  v44 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v44;
  v45 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v45;
  v46 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v46;
  v47 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v47;
  v48 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v48;
  v49 = a2[19];
  *(_OWORD *)(a1 + 288) = a2[18];
  *(_OWORD *)(a1 + 304) = v49;
  v50 = a2[21];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v50;
  v51 = a2[23];
  *(_OWORD *)(a1 + 352) = a2[22];
  *(_OWORD *)(a1 + 368) = v51;
  v52 = a2[25];
  *(_OWORD *)(a1 + 384) = a2[24];
  *(_OWORD *)(a1 + 400) = v52;
  v53 = a2[27];
  *(_OWORD *)(a1 + 416) = a2[26];
  *(_OWORD *)(a1 + 432) = v53;
  v54 = a2[29];
  *(_OWORD *)(a1 + 448) = a2[28];
  *(_OWORD *)(a1 + 464) = v54;
  v55 = a2[31];
  *(_OWORD *)(a1 + 480) = a2[30];
  *(_OWORD *)(a1 + 496) = v55;
  sub_2378DE7AC(v4, v5, v6, v7, v8, v9, v10, v11, (void *)v12, *((void **)&v12 + 1), (void *)v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    SBYTE8(v27),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39);
  return a1;
}

double storeEnumTagSinglePayload for Instrument.Kind(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 504) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 512) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 336) = 8 * -a2;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(_OWORD *)(a1 + 488) = 0u;
      *(_QWORD *)(a1 + 504) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 512) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23794EA50(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (a2 < 9)
  {
    v2 = *(_QWORD *)(result + 360) & 7;
    v3 = *(_QWORD *)(result + 384) & 7;
    v4 = *(_QWORD *)(result + 408) & 7;
    v5 = *(_QWORD *)(result + 432) & 7;
    v6 = *(_QWORD *)(result + 456) & 7;
    v7 = *(_QWORD *)(result + 480) & 0xFE00000000000007;
    v8 = *(_QWORD *)(result + 496) & 1 | (a2 << 60);
    *(_QWORD *)(result + 336) &= 7uLL;
    *(_QWORD *)(result + 360) = v2;
    *(_QWORD *)(result + 384) = v3;
    *(_QWORD *)(result + 408) = v4;
    *(_QWORD *)(result + 432) = v5;
    *(_QWORD *)(result + 456) = v6;
    *(_QWORD *)(result + 480) = v7;
    *(_QWORD *)(result + 496) = v8;
  }
  else
  {
    *(_QWORD *)result = (a2 - 9);
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)(result + 488) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 496) = xmmword_237A988E0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind()
{
  return &type metadata for Instrument.Kind;
}

uint64_t storeEnumTagSinglePayload for Instrument.Kind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23794EB98 + 4 * byte_237A977BB[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23794EBCC + 4 * byte_237A977B6[v4]))();
}

uint64_t sub_23794EBCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EBD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23794EBDCLL);
  return result;
}

uint64_t sub_23794EBE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23794EBF0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23794EBF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EBFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.CodingKeys()
{
  return &type metadata for Instrument.Kind.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Instrument.Kind.GaugeCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23794EC64 + 4 * byte_237A977C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23794EC98 + 4 * byte_237A977C0[v4]))();
}

uint64_t sub_23794EC98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794ECA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23794ECA8);
  return result;
}

uint64_t sub_23794ECB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23794ECBCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23794ECC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794ECC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.GaugeCodingKeys()
{
  return &type metadata for Instrument.Kind.GaugeCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.IndicatorCodingKeys()
{
  return &type metadata for Instrument.Kind.IndicatorCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.InputStreamCodingKeys()
{
  return &type metadata for Instrument.Kind.InputStreamCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PunchThroughCodingKeys()
{
  return &type metadata for Instrument.Kind.PunchThroughCodingKeys;
}

uint64_t _s14CarPlayAssetUI10InstrumentV16PunchThroughTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23794ED58 + 4 * byte_237A977CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23794ED78 + 4 * byte_237A977CF[v4]))();
}

_BYTE *sub_23794ED58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23794ED78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23794ED80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23794ED88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23794ED90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23794ED98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PunchThroughTypeCodingKeys()
{
  return &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys;
}

uint64_t _s14CarPlayAssetUI10InstrumentV15NavigationStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23794EE00 + 4 * byte_237A977D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23794EE34 + 4 * byte_237A977D4[v4]))();
}

uint64_t sub_23794EE34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EE3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23794EE44);
  return result;
}

uint64_t sub_23794EE50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23794EE58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23794EE5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EE64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PopoverCodingKeys()
{
  return &type metadata for Instrument.Kind.PopoverCodingKeys;
}

uint64_t _s14CarPlayAssetUI10InstrumentV4KindO19IndicatorCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23794EECC + 4 * byte_237A977E3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23794EF00 + 4 * byte_237A977DE[v4]))();
}

uint64_t sub_23794EF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23794EF10);
  return result;
}

uint64_t sub_23794EF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23794EF24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23794EF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.CodingKeys()
{
  return &type metadata for Instrument.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Instrument.Configuration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23794EF98 + 4 * byte_237A977ED[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23794EFCC + 4 * byte_237A977E8[v4]))();
}

uint64_t sub_23794EFCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EFD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23794EFDCLL);
  return result;
}

uint64_t sub_23794EFE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23794EFF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23794EFF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23794EFFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Configuration.CodingKeys()
{
  return &type metadata for Instrument.Configuration.CodingKeys;
}

unint64_t sub_23794F01C()
{
  unint64_t result;

  result = qword_256822910;
  if (!qword_256822910)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97E94, &type metadata for Instrument.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822910);
  }
  return result;
}

unint64_t sub_23794F064()
{
  unint64_t result;

  result = qword_256822918;
  if (!qword_256822918)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97F4C, &type metadata for Instrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822918);
  }
  return result;
}

unint64_t sub_23794F0AC()
{
  unint64_t result;

  result = qword_256822920;
  if (!qword_256822920)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9803C, &type metadata for Instrument.Kind.PopoverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822920);
  }
  return result;
}

unint64_t sub_23794F0F4()
{
  unint64_t result;

  result = qword_256822928;
  if (!qword_256822928)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9812C, &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822928);
  }
  return result;
}

unint64_t sub_23794F13C()
{
  unint64_t result;

  result = qword_256822930;
  if (!qword_256822930)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9821C, &type metadata for Instrument.Kind.PunchThroughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822930);
  }
  return result;
}

unint64_t sub_23794F184()
{
  unint64_t result;

  result = qword_256822938;
  if (!qword_256822938)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9830C, &type metadata for Instrument.Kind.InputStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822938);
  }
  return result;
}

unint64_t sub_23794F1CC()
{
  unint64_t result;

  result = qword_256822940;
  if (!qword_256822940)
  {
    result = MEMORY[0x23B81FA98](&unk_237A983FC, &type metadata for Instrument.Kind.IndicatorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822940);
  }
  return result;
}

unint64_t sub_23794F214()
{
  unint64_t result;

  result = qword_256822948;
  if (!qword_256822948)
  {
    result = MEMORY[0x23B81FA98](&unk_237A984EC, &type metadata for Instrument.Kind.GaugeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822948);
  }
  return result;
}

unint64_t sub_23794F25C()
{
  unint64_t result;

  result = qword_256822950;
  if (!qword_256822950)
  {
    result = MEMORY[0x23B81FA98](&unk_237A985DC, &type metadata for Instrument.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822950);
  }
  return result;
}

unint64_t sub_23794F2A4()
{
  unint64_t result;

  result = qword_256822958;
  if (!qword_256822958)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98424, &type metadata for Instrument.Kind.GaugeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822958);
  }
  return result;
}

unint64_t sub_23794F2EC()
{
  unint64_t result;

  result = qword_256822960;
  if (!qword_256822960)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9844C, &type metadata for Instrument.Kind.GaugeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822960);
  }
  return result;
}

unint64_t sub_23794F334()
{
  unint64_t result;

  result = qword_256822968;
  if (!qword_256822968)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98334, &type metadata for Instrument.Kind.IndicatorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822968);
  }
  return result;
}

unint64_t sub_23794F37C()
{
  unint64_t result;

  result = qword_256822970;
  if (!qword_256822970)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9835C, &type metadata for Instrument.Kind.IndicatorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822970);
  }
  return result;
}

unint64_t sub_23794F3C4()
{
  unint64_t result;

  result = qword_256822978;
  if (!qword_256822978)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98244, &type metadata for Instrument.Kind.InputStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822978);
  }
  return result;
}

unint64_t sub_23794F40C()
{
  unint64_t result;

  result = qword_256822980;
  if (!qword_256822980)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9826C, &type metadata for Instrument.Kind.InputStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822980);
  }
  return result;
}

unint64_t sub_23794F454()
{
  unint64_t result;

  result = qword_256822988;
  if (!qword_256822988)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98154, &type metadata for Instrument.Kind.PunchThroughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822988);
  }
  return result;
}

unint64_t sub_23794F49C()
{
  unint64_t result;

  result = qword_256822990;
  if (!qword_256822990)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9817C, &type metadata for Instrument.Kind.PunchThroughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822990);
  }
  return result;
}

unint64_t sub_23794F4E4()
{
  unint64_t result;

  result = qword_256822998;
  if (!qword_256822998)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98064, &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822998);
  }
  return result;
}

unint64_t sub_23794F52C()
{
  unint64_t result;

  result = qword_2568229A0;
  if (!qword_2568229A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9808C, &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229A0);
  }
  return result;
}

unint64_t sub_23794F574()
{
  unint64_t result;

  result = qword_2568229A8;
  if (!qword_2568229A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97F74, &type metadata for Instrument.Kind.PopoverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229A8);
  }
  return result;
}

unint64_t sub_23794F5BC()
{
  unint64_t result;

  result = qword_2568229B0;
  if (!qword_2568229B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97F9C, &type metadata for Instrument.Kind.PopoverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229B0);
  }
  return result;
}

unint64_t sub_23794F604()
{
  unint64_t result;

  result = qword_2568229B8;
  if (!qword_2568229B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98514, &type metadata for Instrument.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229B8);
  }
  return result;
}

unint64_t sub_23794F64C()
{
  unint64_t result;

  result = qword_2568229C0;
  if (!qword_2568229C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9853C, &type metadata for Instrument.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229C0);
  }
  return result;
}

unint64_t sub_23794F694()
{
  unint64_t result;

  result = qword_2568229C8;
  if (!qword_2568229C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97EBC, &type metadata for Instrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229C8);
  }
  return result;
}

unint64_t sub_23794F6DC()
{
  unint64_t result;

  result = qword_2568229D0;
  if (!qword_2568229D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97EE4, &type metadata for Instrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229D0);
  }
  return result;
}

unint64_t sub_23794F724()
{
  unint64_t result;

  result = qword_2568229D8;
  if (!qword_2568229D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97E04, &type metadata for Instrument.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229D8);
  }
  return result;
}

unint64_t sub_23794F76C()
{
  unint64_t result;

  result = qword_2568229E0;
  if (!qword_2568229E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A97E2C, &type metadata for Instrument.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568229E0);
  }
  return result;
}

uint64_t sub_23794F7B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB1120 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574736973726570 && a2 == 0xEA0000000000746ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536F547370696C63 && a2 == 0xEC00000065706168 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4449776F64616873 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23794FA0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23794FB5C()
{
  unint64_t v0;

  v0 = sub_237A88124();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_23794FBA4()
{
  unint64_t v0;

  v0 = sub_237A88124();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_23794FBEC()
{
  unint64_t v0;

  v0 = sub_237A88124();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_23794FC34()
{
  unint64_t result;

  result = qword_2568229E8;
  if (!qword_2568229E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PunchThroughType, &type metadata for Instrument.PunchThroughType);
    atomic_store(result, (unint64_t *)&qword_2568229E8);
  }
  return result;
}

unint64_t sub_23794FC78()
{
  unint64_t result;

  result = qword_2568229F0;
  if (!qword_2568229F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.NavigationStyle, &type metadata for Instrument.NavigationStyle);
    atomic_store(result, (unint64_t *)&qword_2568229F0);
  }
  return result;
}

uint64_t sub_23794FCBC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v54 = *(_QWORD *)(a1 + 512);
  v2 = *(_QWORD *)(a1 + 520);
  v3 = *(void **)(a1 + 528);
  v4 = *(void **)(a1 + 536);
  v5 = *(void **)(a1 + 544);
  v6 = *(void **)(a1 + 552);
  v7 = *(_QWORD *)(a1 + 560);
  v8 = *(_QWORD *)(a1 + 568);
  v53 = *(_OWORD *)(a1 + 576);
  v52 = *(_OWORD *)(a1 + 592);
  v51 = *(_OWORD *)(a1 + 608);
  v50 = *(_OWORD *)(a1 + 624);
  v9 = *(_QWORD *)(a1 + 1008);
  v49 = *(_OWORD *)(a1 + 640);
  v48 = *(_OWORD *)(a1 + 656);
  v47 = *(_OWORD *)(a1 + 672);
  v46 = *(_OWORD *)(a1 + 688);
  v45 = *(_OWORD *)(a1 + 704);
  v44 = *(_OWORD *)(a1 + 720);
  v43 = *(_OWORD *)(a1 + 736);
  v42 = *(_OWORD *)(a1 + 752);
  v41 = *(_OWORD *)(a1 + 768);
  v40 = *(_OWORD *)(a1 + 784);
  v39 = *(_OWORD *)(a1 + 800);
  v38 = *(_OWORD *)(a1 + 816);
  v37 = *(_OWORD *)(a1 + 832);
  v36 = *(_OWORD *)(a1 + 848);
  v35 = *(_OWORD *)(a1 + 864);
  v34 = *(_OWORD *)(a1 + 880);
  v33 = *(_OWORD *)(a1 + 896);
  v32 = *(_OWORD *)(a1 + 912);
  v31 = *(_OWORD *)(a1 + 928);
  v30 = *(_OWORD *)(a1 + 944);
  v29 = *(_OWORD *)(a1 + 960);
  v28 = *(_OWORD *)(a1 + 976);
  v27 = *(_OWORD *)(a1 + 992);
  v25 = *(_OWORD *)(a1 + 464);
  v26 = *(_OWORD *)(a1 + 480);
  v23 = *(_OWORD *)(a1 + 432);
  v24 = *(_OWORD *)(a1 + 448);
  v21 = *(_OWORD *)(a1 + 400);
  v22 = *(_OWORD *)(a1 + 416);
  v19 = *(_OWORD *)(a1 + 368);
  v20 = *(_OWORD *)(a1 + 384);
  v17 = *(_OWORD *)(a1 + 336);
  v18 = *(_OWORD *)(a1 + 352);
  v15 = *(_OWORD *)(a1 + 304);
  v16 = *(_OWORD *)(a1 + 320);
  v13 = *(_OWORD *)(a1 + 272);
  v14 = *(_OWORD *)(a1 + 288);
  v11 = *(_OWORD *)(a1 + 240);
  v12 = *(_OWORD *)(a1 + 256);
  sub_2378DE7AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(_QWORD *)(a1 + 496));
  sub_2378DE7AC(v54, v2, v3, v4, v5, v6, v7, v8, (void *)v53, *((void **)&v53 + 1), (void *)v52, *((unint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49, *((uint64_t *)&v49 + 1), v48,
    *((uint64_t *)&v48 + 1),
    (void *)v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((void **)&v44 + 1),
    (void *)v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    SBYTE8(v38),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    SBYTE8(v35),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    SBYTE8(v32),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    SBYTE8(v29),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v9);
  return a1;
}

uint64_t sub_23794FFA8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t result;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CB0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  sub_2378BFF5C(0, &qword_256822C90);
  v16 = a1;
  sub_237A863F0();
  v17 = v16;
  sub_237A863F0();
  sub_2379533F0(&qword_256822CB8, &qword_256822C88);
  result = sub_237A87788();
  if ((result & 1) != 0)
  {
    v19 = &v8[*(int *)(v3 + 48)];
    v20 = (void (*)(char *, char *, uint64_t))v10[4];
    v20(v8, v15, v9);
    v20(v19, v13, v9);
    v21 = &v6[*(int *)(v3 + 48)];
    v22 = (void (*)(char *, char *, uint64_t))v10[2];
    v22(v6, v8, v9);
    v22(v21, v19, v9);
    v23 = v28;
    v20(v28, v6, v9);
    v24 = (void (*)(char *, uint64_t))v10[1];
    v24(v21, v9);
    v25 = &v6[*(int *)(v3 + 48)];
    v20(v6, v8, v9);
    v20(v25, v19, v9);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
    v20(&v23[*(int *)(v26 + 36)], v25, v9);
    return ((uint64_t (*)(char *, uint64_t))v24)(v6, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2379501F8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t result;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D20);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  sub_2378BFF5C(0, (unint64_t *)&qword_2568214F0);
  v16 = a1;
  sub_237A863F0();
  v17 = v16;
  sub_237A863F0();
  sub_2379533F0(&qword_256822D28, &qword_2568214E8);
  result = sub_237A87788();
  if ((result & 1) != 0)
  {
    v19 = &v8[*(int *)(v3 + 48)];
    v20 = (void (*)(char *, char *, uint64_t))v10[4];
    v20(v8, v15, v9);
    v20(v19, v13, v9);
    v21 = &v6[*(int *)(v3 + 48)];
    v22 = (void (*)(char *, char *, uint64_t))v10[2];
    v22(v6, v8, v9);
    v22(v21, v19, v9);
    v23 = v28;
    v20(v28, v6, v9);
    v24 = (void (*)(char *, uint64_t))v10[1];
    v24(v21, v9);
    v25 = &v6[*(int *)(v3 + 48)];
    v20(v6, v8, v9);
    v20(v25, v19, v9);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
    v20(&v23[*(int *)(v26 + 36)], v25, v9);
    return ((uint64_t (*)(char *, uint64_t))v24)(v6, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_237950448@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t result;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  sub_2378BFF5C(0, &qword_256822C60);
  v16 = a1;
  sub_237A863F0();
  v17 = v16;
  sub_237A863F0();
  sub_2379533F0(&qword_256822C78, &qword_256822C58);
  result = sub_237A87788();
  if ((result & 1) != 0)
  {
    v19 = &v8[*(int *)(v3 + 48)];
    v20 = (void (*)(char *, char *, uint64_t))v10[4];
    v20(v8, v15, v9);
    v20(v19, v13, v9);
    v21 = &v6[*(int *)(v3 + 48)];
    v22 = (void (*)(char *, char *, uint64_t))v10[2];
    v22(v6, v8, v9);
    v22(v21, v19, v9);
    v23 = v28;
    v20(v28, v6, v9);
    v24 = (void (*)(char *, uint64_t))v10[1];
    v24(v21, v9);
    v25 = &v6[*(int *)(v3 + 48)];
    v20(v6, v8, v9);
    v20(v25, v19, v9);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
    v20(&v23[*(int *)(v26 + 36)], v25, v9);
    return ((uint64_t (*)(char *, uint64_t))v24)(v6, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_237950698@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t result;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C30);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  sub_2378BFF5C(0, (unint64_t *)&qword_256820048);
  v16 = a1;
  sub_237A863F0();
  v17 = v16;
  sub_237A863F0();
  sub_2379533F0(&qword_256822C38, &qword_25681FFD8);
  result = sub_237A87788();
  if ((result & 1) != 0)
  {
    v19 = &v8[*(int *)(v3 + 48)];
    v20 = (void (*)(char *, char *, uint64_t))v10[4];
    v20(v8, v15, v9);
    v20(v19, v13, v9);
    v21 = &v6[*(int *)(v3 + 48)];
    v22 = (void (*)(char *, char *, uint64_t))v10[2];
    v22(v6, v8, v9);
    v22(v21, v19, v9);
    v23 = v28;
    v20(v28, v6, v9);
    v24 = (void (*)(char *, uint64_t))v10[1];
    v24(v21, v9);
    v25 = &v6[*(int *)(v3 + 48)];
    v20(v6, v8, v9);
    v20(v25, v19, v9);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C20);
    v20(&v23[*(int *)(v26 + 36)], v25, v9);
    return ((uint64_t (*)(char *, uint64_t))v24)(v6, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_2379508E8()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CC0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = 0x3FF0000000000000;
  result = 0.45;
  *(_OWORD *)(v0 + 40) = xmmword_237A988F0;
  *(_BYTE *)(v0 + 16) = 6;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v0 + 32) = &protocol witness table for Double;
  qword_256822A18 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevel.getter()
{
  return sub_2378E39D4(&qword_25681E0F8);
}

uint64_t sub_237950964()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_250969F38;
  *(_BYTE *)(result + 16) = 7;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822A20 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevelState.getter()
{
  return sub_2378E39D4(&qword_25681E100);
}

uint64_t sub_2379509E0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 8;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A28 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevelMarkerLow.getter()
{
  return sub_2378E39D4(&qword_25681E108);
}

uint64_t sub_237950A4C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_250969F70;
  *(_BYTE *)(result + 16) = 9;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822A30 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargePortSideIndicator.getter()
{
  return sub_2378E39D4(&qword_25681E110);
}

uint64_t sub_237950AC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_kilowatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_kilowatts);
  sub_23794FFA8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA8);
  v10 = swift_allocObject();
  sub_237870370((uint64_t)v2, v10 + *(_QWORD *)(*(_QWORD *)v10 + 152), &qword_256822CA0);
  *(_BYTE *)(v10 + 16) = 10;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(v10 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 112), v6, v3);
  qword_256822A38 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargingRate.getter()
{
  return sub_2378E39D4(&qword_25681E118);
}

uint64_t sub_237950C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_25681E2B0 != -1)
    swift_once();
  v0 = qword_256822BD0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = v0;
  v2 = MEMORY[0x24BEE1768];
  *(_BYTE *)(v1 + 16) = 11;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = &protocol witness table for Int;
  qword_256822A40 = v1;
  return swift_bridgeObjectRetain();
}

uint64_t static InstrumentDataTypeCatalog.cruiseControlState.getter()
{
  return sub_2378E39D4(&qword_25681E120);
}

uint64_t sub_237950D34()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 12;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A48 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.cruiseControlSpeed.getter()
{
  return sub_2378E39D4(&qword_25681E128);
}

uint64_t sub_237950DA0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C80);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x647261646E617473;
  *(_QWORD *)(result + 48) = 0xE800000000000000;
  *(_QWORD *)(result + 56) = 0x25096A000;
  *(_BYTE *)(result + 16) = 13;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(result + 32) = &protocol witness table for String;
  qword_256822A50 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.drivingMode.getter()
{
  return sub_2378E39D4(&qword_25681E130);
}

uint64_t sub_237950E2C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x40BF400000000000;
  *(_BYTE *)(result + 16) = 14;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A58 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineMarkerRedlineRPM.getter()
{
  return sub_2378E39D4(&qword_25681E138);
}

uint64_t sub_237950EA0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_milliwatts);
  sub_23794FFA8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA8);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822CA0);
  v10[16] = 16;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822A60 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.enginePower.getter()
{
  return sub_2378E39D4(&qword_25681E140);
}

uint64_t sub_23795106C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 17;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A68 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPM.getter()
{
  return sub_2378E39D4(&qword_25681E148);
}

uint64_t sub_2379510D8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_25096A060;
  *(_BYTE *)(result + 16) = 15;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822A70 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPMState.getter()
{
  return sub_2378E39D4(&qword_25681E150);
}

uint64_t sub_23795114C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x40C3880000000000;
  *(_BYTE *)(result + 16) = 18;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A78 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPMMax.getter()
{
  return sub_2378E39D4(&qword_25681E158);
}

uint64_t sub_2379511C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_celsius);
  sub_2378BFF5C(0, (unint64_t *)&qword_2568214F0);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_celsius);
  sub_2379501F8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D18);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822D10);
  v10[16] = 0;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822A80 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperature.getter()
{
  return sub_2378E39D4(&qword_25681E160);
}

uint64_t sub_237951388()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_25096A2C0;
  *(_BYTE *)(result + 16) = 5;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822A88 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureState.getter()
{
  return sub_2378E39D4(&qword_25681E168);
}

uint64_t sub_2379513FC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 1;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A90 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMin.getter()
{
  return sub_2378E39D4(&qword_25681E170);
}

uint64_t sub_237951468()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x4062C00000000000;
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822A98 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMax.getter()
{
  return sub_2378E39D4(&qword_25681E178);
}

uint64_t sub_2379514DC(uint64_t a1)
{
  return sub_237951528(a1, &qword_256822AA0);
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMarkerCold.getter()
{
  return sub_2378E39D4(&qword_25681E180);
}

uint64_t sub_237951510(uint64_t a1)
{
  return sub_237951528(a1, &qword_256822AA8);
}

uint64_t sub_237951528(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_celsius);
  sub_2378BFF5C(0, (unint64_t *)&qword_2568214F0);
  sub_237A863F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D30);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 44;
  *(_QWORD *)(v8 + 24) = v3;
  *(_QWORD *)(v8 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112), v6, v3);
  *a2 = v8;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMarkerHot.getter()
{
  return sub_2378E39D4(&qword_25681E188);
}

uint64_t sub_23795165C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_celsius);
  sub_2378BFF5C(0, (unint64_t *)&qword_2568214F0);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_celsius);
  sub_2379501F8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D18);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822D10);
  v10[16] = 19;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822AB0 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperature.getter()
{
  return sub_2378E39D4(&qword_25681E190);
}

uint64_t sub_237951828()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 20;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822AB8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMin.getter()
{
  return sub_2378E39D4(&qword_25681E198);
}

uint64_t sub_237951894()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x4062C00000000000;
  *(_BYTE *)(result + 16) = 21;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822AC0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMax.getter()
{
  return sub_2378E39D4(&qword_25681E1A0);
}

uint64_t sub_237951908(uint64_t a1)
{
  return sub_237951528(a1, &qword_256822AC8);
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMarkerCold.getter()
{
  return sub_2378E39D4(&qword_25681E1A8);
}

uint64_t sub_23795193C(uint64_t a1)
{
  return sub_237951528(a1, &qword_256822AD0);
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMarkerHot.getter()
{
  return sub_2378E39D4(&qword_25681E1B0);
}

uint64_t sub_237951970()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_25096A090;
  *(_BYTE *)(result + 16) = 24;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822AD8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureState.getter()
{
  return sub_2378E39D4(&qword_25681E1B8);
}

uint64_t sub_2379519E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_celsius);
  sub_2378BFF5C(0, (unint64_t *)&qword_2568214F0);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_celsius);
  sub_2379501F8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D18);
  v10 = swift_allocObject();
  sub_237870370((uint64_t)v2, v10 + *(_QWORD *)(*(_QWORD *)v10 + 152), &qword_256822D10);
  *(_BYTE *)(v10 + 16) = 36;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(v10 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 112), v6, v3);
  qword_256822AE0 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.outsideTemperature.getter()
{
  return sub_2378E39D4(&qword_25681E1C0);
}

uint64_t sub_237951BB0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BD8);
  result = swift_allocObject();
  *(_BYTE *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 25;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(result + 32) = &protocol witness table for Bool;
  qword_256822AE8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fillLevelLabel.getter()
{
  return sub_2378E39D4(&qword_25681E1C8);
}

double sub_237951C1C()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CC0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = 0x3FF0000000000000;
  result = 0.45;
  *(_OWORD *)(v0 + 40) = xmmword_237A988F0;
  *(_BYTE *)(v0 + 16) = 26;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v0 + 32) = &protocol witness table for Double;
  qword_256822AF0 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevel.getter()
{
  return sub_2378E39D4(&qword_25681E1D0);
}

uint64_t sub_237951C98()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_25096A0C8;
  *(_BYTE *)(result + 16) = 27;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822AF8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevelState.getter()
{
  return sub_2378E39D4(&qword_25681E1D8);
}

uint64_t sub_237951D0C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 28;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822B00 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevelMarkerLow.getter()
{
  return sub_2378E39D4(&qword_25681E1E0);
}

uint64_t sub_237951D78()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BD8);
  result = swift_allocObject();
  *(_BYTE *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 52;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(result + 32) = &protocol witness table for Bool;
  qword_256822B08 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.speedLimited.getter()
{
  return sub_2378E39D4(&qword_25681E1E8);
}

uint64_t sub_237951DE4()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = &unk_25096A100;
  *(_BYTE *)(result + 16) = 29;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822B10 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelPortSideIndicator.getter()
{
  return sub_2378E39D4(&qword_25681E1F0);
}

uint64_t sub_237951E58()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D00);
  v0 = swift_allocObject();
  v1 = _swift_stdlib_malloc_size((const void *)v0);
  v2 = v1 - 32;
  if (v1 < 32)
    v2 = v1 - 25;
  *(_QWORD *)(v0 + 16) = 15;
  *(_QWORD *)(v0 + 24) = 2 * (v2 >> 3);
  *(_OWORD *)(v0 + 32) = xmmword_237A98900;
  *(_OWORD *)(v0 + 48) = xmmword_237A98910;
  *(_OWORD *)(v0 + 64) = xmmword_237A98920;
  *(_OWORD *)(v0 + 80) = xmmword_237A98930;
  *(_OWORD *)(v0 + 96) = xmmword_237A8A9F0;
  *(_OWORD *)(v0 + 112) = xmmword_237A98940;
  *(_OWORD *)(v0 + 128) = xmmword_237A98950;
  *(_QWORD *)(v0 + 144) = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822D08);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 4;
  *(_QWORD *)(result + 48) = v0;
  *(_BYTE *)(result + 16) = 30;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)(result + 32) = &protocol witness table for Int;
  qword_256822B18 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.gearShiftRecommendation.getter()
{
  return sub_2378E39D4(&qword_25681E1F8);
}

uint64_t sub_237951F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CE8);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = &unk_25096A148;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CF0);
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_WORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 16) = 31;
  result = sub_23795339C(&qword_256822CF8, &qword_256822CF0, (uint64_t)&protocol witness table for LocalNotificationState);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = result;
  qword_256822B20 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.localNotification.getter()
{
  return sub_2378E39D4(&qword_25681E200);
}

uint64_t sub_237952008()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C48);
  result = swift_allocObject();
  *(_WORD *)(result + 40) = 164;
  *(_BYTE *)(result + 16) = 25;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE4478];
  *(_QWORD *)(result + 32) = &protocol witness table for UInt16;
  qword_256822B28 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.lengthUnit.getter()
{
  return sub_2378E39D4(&qword_25681E208);
}

uint64_t sub_237952078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CC8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237A95640;
  *(_OWORD *)(v0 + 32) = xmmword_237A98960;
  *(_QWORD *)(v0 + 48) = 0xD000000000000012;
  *(_QWORD *)(v0 + 56) = 0x8000000237AB1140;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = nullsub_1;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = nullsub_1;
  *(_QWORD *)(v0 + 144) = 0;
  v1 = sub_237A87230();
  *(_OWORD *)(v0 + 152) = xmmword_237A98970;
  *(_QWORD *)(v0 + 168) = 0xD000000000000014;
  *(_QWORD *)(v0 + 176) = 0x8000000237AB1160;
  *(_QWORD *)(v0 + 184) = 0xD00000000000002ELL;
  *(_QWORD *)(v0 + 192) = 0x8000000237AB1180;
  *(_QWORD *)(v0 + 208) = 0;
  *(_QWORD *)(v0 + 216) = 0;
  *(_QWORD *)(v0 + 200) = 1;
  *(_OWORD *)(v0 + 224) = xmmword_237A98980;
  *(_QWORD *)(v0 + 240) = 0x8000000237AB11B0;
  *(_QWORD *)(v0 + 248) = v1;
  *(_QWORD *)(v0 + 256) = nullsub_1;
  *(_QWORD *)(v0 + 264) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CD0);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 160) = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CD8);
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_QWORD *)(v2 + 152) = 0;
  *(_BYTE *)(v2 + 16) = 33;
  result = sub_23795339C(&qword_256822CE0, &qword_256822CD8, (uint64_t)&protocol witness table for NotificationModel);
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 32) = result;
  qword_256822B30 = v2;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.message.getter()
{
  return sub_2378E39D4(&qword_25681E210);
}

uint64_t sub_23795221C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CC0);
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0x3FF0000000000000;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 34;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822B38 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.nowPlayingProgess.getter()
{
  return sub_2378E39D4(&qword_25681E218);
}

uint64_t sub_237952290()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_meters);
  sub_2378BFF5C(0, &qword_256822C60);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_meters);
  sub_237950448(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C68);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822C50);
  v10[16] = 35;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822B40 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.odometer.getter()
{
  return sub_2378E39D4(&qword_25681E220);
}

uint64_t sub_237952454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_milliwatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C98);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 37;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(v5 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112), v3, v0);
  qword_256822B48 = v5;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMax.getter()
{
  return sub_2378E39D4(&qword_25681E228);
}

uint64_t sub_237952584()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_milliwatts);
  sub_23794FFA8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA8);
  v10 = swift_allocObject();
  sub_237870370((uint64_t)v2, v10 + *(_QWORD *)(*(_QWORD *)v10 + 152), &qword_256822CA0);
  *(_BYTE *)(v10 + 16) = 38;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(v10 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 112), v6, v3);
  qword_256822B50 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMarkerAvailableMax.getter()
{
  return sub_2378E39D4(&qword_25681E230);
}

uint64_t sub_23795275C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_milliwatts);
  sub_23794FFA8(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA8);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822CA0);
  v10[16] = 39;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822B58 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMarkerAvailableMin.getter()
{
  return sub_2378E39D4(&qword_25681E238);
}

uint64_t sub_237952934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_milliwatts);
  sub_2378BFF5C(0, &qword_256822C90);
  sub_237A863F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C98);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 40;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(v5 + 32) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112), v3, v0);
  qword_256822B60 = v5;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMin.getter()
{
  return sub_2378E39D4(&qword_25681E240);
}

uint64_t sub_237952A64()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C80);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 48;
  *(_QWORD *)(result + 48) = 0xE100000000000000;
  *(_QWORD *)(result + 56) = &unk_25096A1B0;
  *(_BYTE *)(result + 16) = 41;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(result + 32) = &protocol witness table for String;
  qword_256822B68 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.punchThrough.getter()
{
  return sub_2378E39D4(&qword_25681E248);
}

uint64_t sub_237952AE4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_miles);
  sub_2378BFF5C(0, &qword_256822C60);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_miles);
  sub_237950448(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C68);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822C50);
  v10[16] = 42;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822B70 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.remainingDistance.getter()
{
  return sub_2378E39D4(&qword_25681E250);
}

uint64_t sub_237952CA8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BD8);
  result = swift_allocObject();
  *(_BYTE *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 43;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(result + 32) = &protocol witness table for Bool;
  qword_256822B78 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.remainingRangeHidden.getter()
{
  return sub_2378E39D4(&qword_25681E258);
}

uint64_t sub_237952D14()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C48);
  result = swift_allocObject();
  *(_WORD *)(result + 40) = 1081;
  *(_BYTE *)(result + 16) = 44;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE4478];
  *(_QWORD *)(result + 32) = &protocol witness table for UInt16;
  qword_256822B80 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.temperatureUnit.getter()
{
  return sub_2378E39D4(&qword_25681E260);
}

uint64_t sub_237952D84()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C40);
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = &unk_250969898;
  *(_BYTE *)(result + 40) = 68;
  *(_BYTE *)(result + 16) = 45;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE4260];
  *(_QWORD *)(result + 32) = &protocol witness table for UInt8;
  qword_256822B88 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.transmission.getter()
{
  return sub_2378E39D4(&qword_25681E268);
}

uint64_t sub_237952E00()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C20);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_degrees);
  sub_2378BFF5C(0, (unint64_t *)&qword_256820048);
  sub_237A863F0();
  v9 = objc_msgSend(v7, sel_degrees);
  sub_237950698(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C28);
  v10 = (_BYTE *)swift_allocObject();
  sub_237870370((uint64_t)v2, (uint64_t)&v10[*(_QWORD *)(*(_QWORD *)v10 + 152)], &qword_256822C20);
  v10[16] = 46;
  *((_QWORD *)v10 + 3) = v3;
  *((_QWORD *)v10 + 4) = &protocol witness table for Measurement<A>;
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v4 + 32))(&v10[*(_QWORD *)(*(_QWORD *)v10 + 112)], v6, v3);
  off_256822B90 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.trueHeading.getter()
{
  return sub_2378E39D4(&qword_25681E270);
}

uint64_t sub_237952FC4()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 47;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822B98 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeed.getter()
{
  return sub_2378E39D4(&qword_25681E278);
}

uint64_t sub_237953030()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C18);
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = &unk_25096A200;
  *(_WORD *)(result + 40) = 1033;
  *(_BYTE *)(result + 16) = 49;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE4478];
  *(_QWORD *)(result + 32) = &protocol witness table for UInt16;
  qword_256822BA0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeedUnit.getter()
{
  return sub_2378E39D4(&qword_25681E280);
}

uint64_t sub_2379530AC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822C10);
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = 0x406F400000000000;
  *(_BYTE *)(result + 16) = 48;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(result + 32) = &protocol witness table for Double;
  qword_256822BA8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeedMax.getter()
{
  return sub_2378E39D4(&qword_25681E288);
}

uint64_t sub_237953128()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BD8);
  result = swift_allocObject();
  *(_BYTE *)(result + 40) = 1;
  *(_BYTE *)(result + 16) = 51;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(result + 32) = &protocol witness table for Bool;
  qword_256822BB0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.showSecondarySpeed.getter()
{
  return sub_2378E39D4(&qword_25681E290);
}

uint64_t sub_237953198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BF8);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 160) = &unk_25096A228;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C00);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_BYTE *)(v0 + 152) = 0;
  *(_BYTE *)(v0 + 16) = 50;
  result = sub_23795339C(&qword_256822C08, &qword_256822C00, (uint64_t)&protocol witness table for WidgetModel);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = result;
  qword_256822BB8 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.requestContent.getter()
{
  return sub_2378E39D4(&qword_25681E298);
}

uint64_t sub_237953260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BE0);
  v0 = swift_allocObject();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822BE8);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  *(_BYTE *)(v0 + 16) = 53;
  result = sub_23795339C(&qword_256822BF0, &qword_256822BE8, (uint64_t)&protocol witness table for SingleSelectMenuModel);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = result;
  qword_256822BC0 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.menu.getter()
{
  return sub_2378E39D4(&qword_25681E2A0);
}

uint64_t sub_23795330C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256822BD8);
  result = swift_allocObject();
  *(_BYTE *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = 55;
  *(_QWORD *)(result + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(result + 32) = &protocol witness table for Bool;
  qword_256822BC8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.buttonInput.getter()
{
  return sub_2378E39D4(&qword_25681E2A8);
}

ValueMetadata *type metadata accessor for InstrumentDataTypeCatalog()
{
  return &type metadata for InstrumentDataTypeCatalog;
}

void sub_237953388()
{
  qword_256822BD0 = (uint64_t)&unk_250969FB8;
}

uint64_t sub_23795339C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <A> A?, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2379533F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDCB5C0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EnvironmentValues.layoutOutput.getter()
{
  sub_2378A1DE4();
  return sub_237A86B88();
}

uint64_t EnvironmentValues.layoutOutput.setter()
{
  sub_2378A1DE4();
  return sub_237A86B94();
}

uint64_t EnvironmentValues.zoneIdentifier.getter()
{
  sub_2378E3690();
  return sub_237A86B88();
}

uint64_t EnvironmentValues.zoneIdentifier.setter(uint64_t a1)
{
  return sub_237953BC4(a1, &qword_256820880, (void (*)(uint64_t))sub_2378E3690);
}

uint64_t RenderingMode.isThumbnail.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL static RenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RenderingMode.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t RenderingMode.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_23795357C()
{
  sub_237954FF8();
  return sub_237A86930();
}

uint64_t EnvironmentValues.renderingMode.getter()
{
  sub_237953600();
  return sub_237A86B88();
}

unint64_t sub_237953600()
{
  unint64_t result;

  result = qword_256822D98;
  if (!qword_256822D98)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98E14, &type metadata for RenderingModeKey);
    atomic_store(result, (unint64_t *)&qword_256822D98);
  }
  return result;
}

uint64_t EnvironmentValues.renderingMode.setter()
{
  sub_237953600();
  return sub_237A86B94();
}

uint64_t (*EnvironmentValues.renderingMode.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_237953600();
  sub_237A86B88();
  return sub_2379536D8;
}

uint64_t sub_2379536D8(uint64_t a1)
{
  return sub_237954D20(a1);
}

uint64_t sub_2379536E4()
{
  uint64_t result;

  if (qword_25681E000 != -1)
    result = swift_once();
  qword_256822D38 = qword_25681F428;
  return result;
}

uint64_t sub_23795372C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25681E2B8 != -1)
    result = swift_once();
  *a1 = qword_256822D38;
  return result;
}

uint64_t sub_23795377C()
{
  sub_2378A1C9C();
  return sub_237A86930();
}

uint64_t (*EnvironmentValues.layoutOutput.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_2378A1DE4();
  sub_237A86B88();
  return sub_237953818;
}

uint64_t sub_237953818(_QWORD *a1)
{
  a1[1] = *a1;
  return sub_237A86B94();
}

uint64_t sub_23795384C(uint64_t a1)
{
  return sub_2379539CC(a1, &qword_256820880, qword_256822D40, &qword_25681E8E0);
}

uint64_t sub_237953868@<X0>(uint64_t a1@<X8>)
{
  return sub_237953A5C(&qword_25681E2C0, &qword_256820880, (uint64_t)qword_256822D40, a1);
}

uint64_t sub_23795388C()
{
  sub_23793EC1C(&qword_256822E18, &qword_256820880, sub_23795536C, MEMORY[0x24BEE4AB8]);
  return sub_237A86930();
}

void (*EnvironmentValues.zoneIdentifier.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820880) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_2378E3690();
  sub_237A86B88();
  return sub_23795399C;
}

void sub_23795399C(uint64_t **a1, char a2)
{
  sub_237953D1C(a1, a2, &qword_256820880);
}

uint64_t sub_2379539B0(uint64_t a1)
{
  return sub_2379539CC(a1, &qword_256820D50, qword_256822D58, &qword_256820D58);
}

uint64_t sub_2379539CC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __swift_allocate_value_buffer(v6, a3);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
}

uint64_t sub_237953A38@<X0>(uint64_t a1@<X8>)
{
  return sub_237953A5C(&qword_25681E2C8, &qword_256820D50, (uint64_t)qword_256822D58, a1);
}

uint64_t sub_237953A5C@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = __swift_project_value_buffer(v7, a3);
  return sub_2378BBFE0(v8, a4, a2);
}

uint64_t sub_237953AC0()
{
  sub_23793EC1C(&qword_256822E28, &qword_256820D50, sub_2379553D8, MEMORY[0x24BEE4AB8]);
  return sub_237A86930();
}

uint64_t EnvironmentValues.layoutID.getter()
{
  sub_237953B64();
  return sub_237A86B88();
}

unint64_t sub_237953B64()
{
  unint64_t result;

  result = qword_256822DA0;
  if (!qword_256822DA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98DDC, &type metadata for LayoutIdentifierKey);
    atomic_store(result, (unint64_t *)&qword_256822DA0);
  }
  return result;
}

uint64_t EnvironmentValues.layoutID.setter(uint64_t a1)
{
  return sub_237953BC4(a1, &qword_256820D50, (void (*)(uint64_t))sub_237953B64);
}

uint64_t sub_237953BC4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_2378BBFE0(a1, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  a3(v8);
  sub_237A86B94();
  return sub_2378BC024(a1, a2);
}

void (*EnvironmentValues.layoutID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820D50) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_237953B64();
  sub_237A86B88();
  return sub_237953D08;
}

void sub_237953D08(uint64_t **a1, char a2)
{
  sub_237953D1C(a1, a2, &qword_256820D50);
}

void sub_237953D1C(uint64_t **a1, char a2, uint64_t *a3)
{
  uint64_t *v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = *a1;
  sub_2378BBFE0((*a1)[3], (*a1)[2], a3);
  v6 = (void *)v5[3];
  v7 = (void *)v5[1];
  v8 = (void *)v5[2];
  if ((a2 & 1) != 0)
  {
    sub_2378BBFE0(v5[2], v5[1], a3);
    sub_237A86B94();
    sub_2378BC024((uint64_t)v8, a3);
  }
  else
  {
    sub_237A86B94();
  }
  sub_2378BC024((uint64_t)v6, a3);
  free(v6);
  free(v8);
  free(v7);
  free(v5);
}

void sub_237953DE8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t EnvironmentValues.externalViewBuilder.getter()
{
  sub_237953E28();
  return sub_237A86B88();
}

unint64_t sub_237953E28()
{
  unint64_t result;

  result = qword_256822DA8;
  if (!qword_256822DA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98DA4, &type metadata for ExternalViewBuilderKey);
    atomic_store(result, (unint64_t *)&qword_256822DA8);
  }
  return result;
}

uint64_t EnvironmentValues.externalViewBuilder.setter(uint64_t a1)
{
  return sub_237953F8C(a1, (void (*)(uint64_t, _QWORD))sub_237953E28);
}

void (*EnvironmentValues.externalViewBuilder.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237953E28();
  sub_237A86B88();
  return sub_237953EE4;
}

void sub_237953EE4(_QWORD **a1, char a2)
{
  sub_237954050(a1, a2, (uint64_t)&type metadata for ExternalViewBuilderKey, (void (*)(void))sub_2378A2BF4, (void (*)(_QWORD, _QWORD))sub_2378A2C04);
}

uint64_t EnvironmentValues.externalLayoutBackgroundViewBuilder.getter()
{
  sub_237953F34();
  return sub_237A86B88();
}

unint64_t sub_237953F34()
{
  unint64_t result;

  result = qword_256822DB0;
  if (!qword_256822DB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98D6C, &type metadata for ExternalLayoutBackgroundViewBuilderKey);
    atomic_store(result, (unint64_t *)&qword_256822DB0);
  }
  return result;
}

uint64_t EnvironmentValues.externalLayoutBackgroundViewBuilder.setter(uint64_t a1)
{
  return sub_237953F8C(a1, (void (*)(uint64_t, _QWORD))sub_237953F34);
}

uint64_t sub_237953F8C(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  a2(a1, a2);
  return sub_237A86B94();
}

void (*EnvironmentValues.externalLayoutBackgroundViewBuilder.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237953F34();
  sub_237A86B88();
  return sub_237954034;
}

void sub_237954034(_QWORD **a1, char a2)
{
  sub_237954050(a1, a2, (uint64_t)&type metadata for ExternalLayoutBackgroundViewBuilderKey, (void (*)(void))sub_23795547C, (void (*)(_QWORD, _QWORD))sub_237955480);
}

void sub_237954050(_QWORD **a1, char a2, uint64_t a3, void (*a4)(void), void (*a5)(_QWORD, _QWORD))
{
  _QWORD *v6;
  uint64_t v7;

  v6 = *a1;
  v7 = (*a1)[1];
  v6[2] = **a1;
  v6[3] = v7;
  if ((a2 & 1) != 0)
  {
    a4();
    sub_237A86B94();
    a5(*v6, v6[1]);
  }
  else
  {
    sub_237A86B94();
  }
  free(v6);
}

void sub_2379540DC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_2379540EC()
{
  sub_2379553FC();
  return sub_237A86930();
}

uint64_t EnvironmentValues.frameRateLimit.getter()
{
  return sub_237954A4C((void (*)(void))sub_237954150);
}

unint64_t sub_237954150()
{
  unint64_t result;

  result = qword_256822DB8;
  if (!qword_256822DB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98D34, &type metadata for FrameRateLimit);
    atomic_store(result, (unint64_t *)&qword_256822DB8);
  }
  return result;
}

uint64_t EnvironmentValues.frameRateLimit.setter(uint64_t a1, uint64_t a2)
{
  return sub_237954AE8(a1, a2, (void (*)(uint64_t, uint64_t))sub_237954150);
}

void (*EnvironmentValues.frameRateLimit.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237954150();
  sub_237A86B88();
  v4 = *((_BYTE *)v3 + 24);
  *v3 = v3[2];
  *((_BYTE *)v3 + 8) = v4;
  return sub_237954220;
}

void sub_237954220(_QWORD **a1)
{
  sub_237954BB4(a1);
}

void sub_23795422C()
{
  qword_256822D70 = MEMORY[0x24BEE4B00];
}

uint64_t sub_237954240@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25681E2D0 != -1)
    swift_once();
  *a1 = qword_256822D70;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237954290()
{
  sub_23793EC1C(&qword_256822E48, &qword_256822E50, sub_237955458, MEMORY[0x24BEE04D0]);
  return sub_237A86930();
}

uint64_t EnvironmentValues.activeComponents.getter()
{
  uint64_t v1;

  sub_237954338();
  sub_237A86B88();
  return v1;
}

unint64_t sub_237954338()
{
  unint64_t result;

  result = qword_256822DC0;
  if (!qword_256822DC0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98CFC, &type metadata for ActiveComponentsKey);
    atomic_store(result, (unint64_t *)&qword_256822DC0);
  }
  return result;
}

uint64_t sub_23795437C()
{
  sub_237954338();
  swift_bridgeObjectRetain();
  return sub_237A86B94();
}

uint64_t EnvironmentValues.activeComponents.setter()
{
  sub_237954338();
  return sub_237A86B94();
}

uint64_t (*EnvironmentValues.activeComponents.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_237954338();
  sub_237A86B88();
  return sub_23795445C;
}

uint64_t sub_23795445C(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return sub_237A86B94();
  swift_bridgeObjectRetain();
  sub_237A86B94();
  return swift_bridgeObjectRelease();
}

void sub_2379544DC()
{
  qword_256822D78 = 0;
  byte_256822D80 = 1;
}

uint64_t sub_2379544F4@<X0>(uint64_t a1@<X8>)
{
  return sub_23795468C(&qword_25681E2D8, (uint64_t)&qword_256822D78, &qword_256822DD0, a1);
}

uint64_t EnvironmentValues.widgetManager.getter()
{
  return sub_237954708((void (*)(void))sub_23795453C, (uint64_t)&type metadata for WidgetManagerKey, &qword_256822DD8, &qword_256822DD0);
}

unint64_t sub_23795453C()
{
  unint64_t result;

  result = qword_256822DC8;
  if (!qword_256822DC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98CC4, &type metadata for WidgetManagerKey);
    atomic_store(result, (unint64_t *)&qword_256822DC8);
  }
  return result;
}

uint64_t EnvironmentValues.widgetManager.setter(uint64_t a1)
{
  return sub_2379547E4(a1, &qword_256822DD8, (void (*)(uint64_t))sub_23795453C);
}

void (*EnvironmentValues.widgetManager.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_23795453C();
  sub_237A86B88();
  if ((v3[1] & 1) != 0)
  {
    Strong = 0;
    v5 = &qword_256822DD0;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    v5 = &qword_256822DD8;
  }
  sub_2378BC024((uint64_t)v3, v5);
  v3[2] = Strong;
  return sub_23795463C;
}

void sub_23795463C(uint64_t a1, char a2)
{
  sub_237954938(a1, a2, &qword_256822DD8);
}

void sub_237954650()
{
  qword_256822D88 = 0;
  byte_256822D90 = 1;
}

uint64_t sub_237954668@<X0>(uint64_t a1@<X8>)
{
  return sub_23795468C(&qword_25681E2E0, (uint64_t)&qword_256822D88, &qword_256822DE8, a1);
}

uint64_t sub_23795468C@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_2378BBFE0(a2, a4, a3);
}

uint64_t EnvironmentValues.widgetRegistry.getter()
{
  return sub_237954708((void (*)(void))sub_237954784, (uint64_t)&type metadata for WidgetRegistryKey, &qword_256822DF0, &qword_256822DE8);
}

uint64_t sub_237954708(void (*a1)(void), uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t Strong;
  _BYTE v8[16];

  a1();
  sub_237A86B88();
  if ((v8[8] & 1) != 0)
  {
    Strong = 0;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    a4 = a3;
  }
  sub_2378BC024((uint64_t)v8, a4);
  return Strong;
}

unint64_t sub_237954784()
{
  unint64_t result;

  result = qword_256822DE0;
  if (!qword_256822DE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98C8C, &type metadata for WidgetRegistryKey);
    atomic_store(result, (unint64_t *)&qword_256822DE0);
  }
  return result;
}

uint64_t EnvironmentValues.widgetRegistry.setter(uint64_t a1)
{
  return sub_2379547E4(a1, &qword_256822DF0, (void (*)(uint64_t))sub_237954784);
}

uint64_t sub_2379547E4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  _BYTE v7[8];
  uint64_t v8;
  BOOL v9;

  v4 = a1;
  if (a1)
  {
    swift_weakInit();
    swift_weakAssign();
    a1 = sub_237870370((uint64_t)v7, (uint64_t)&v8, a2);
  }
  else
  {
    v8 = 0;
  }
  v9 = v4 == 0;
  a3(a1);
  sub_237A86B94();
  return swift_release();
}

void (*EnvironmentValues.widgetRegistry.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237954784();
  sub_237A86B88();
  if ((v3[1] & 1) != 0)
  {
    Strong = 0;
    v5 = &qword_256822DE8;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    v5 = &qword_256822DF0;
  }
  sub_2378BC024((uint64_t)v3, v5);
  v3[2] = Strong;
  return sub_237954924;
}

void sub_237954924(uint64_t a1, char a2)
{
  sub_237954938(a1, a2, &qword_256822DF0);
}

void sub_237954938(uint64_t a1, char a2, uint64_t *a3)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_BYTE **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (!v5)
    {
      *(_QWORD *)v4 = 0;
      goto LABEL_8;
    }
  }
  else if (!v5)
  {
    *(_QWORD *)v4 = 0;
    goto LABEL_8;
  }
  swift_weakInit();
  v6 = swift_weakAssign();
  sub_237870370(v6, (uint64_t)v4, a3);
LABEL_8:
  v4[8] = v5 == 0;
  sub_237A86B94();
  swift_release();
  free(v4);
}

void sub_237954A28(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0x3FF0000000000000;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t EnvironmentValues.scaleFactor.getter()
{
  return sub_237954A4C((void (*)(void))sub_237954A90);
}

uint64_t sub_237954A4C(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_237A86B88();
  return v2;
}

unint64_t sub_237954A90()
{
  unint64_t result;

  result = qword_256822DF8;
  if (!qword_256822DF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98C54, &type metadata for ScaleFactorKey);
    atomic_store(result, (unint64_t *)&qword_256822DF8);
  }
  return result;
}

uint64_t EnvironmentValues.scaleFactor.setter(uint64_t a1, uint64_t a2)
{
  return sub_237954AE8(a1, a2, (void (*)(uint64_t, uint64_t))sub_237954A90);
}

uint64_t sub_237954AE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a1, a2);
  return sub_237A86B94();
}

void (*EnvironmentValues.scaleFactor.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237954A90();
  sub_237A86B88();
  v4 = *((_BYTE *)v3 + 24);
  *v3 = v3[2];
  *((_BYTE *)v3 + 8) = v4;
  return sub_237954BA8;
}

void sub_237954BA8(_QWORD **a1)
{
  sub_237954BB4(a1);
}

void sub_237954BB4(_QWORD **a1)
{
  _BYTE *v1;
  char v2;

  v2 = *((_BYTE *)*a1 + 8);
  v1 = *a1;
  *((_QWORD *)v1 + 2) = **a1;
  v1[24] = v2;
  sub_237A86B94();
  free(v1);
}

uint64_t sub_237954BF4()
{
  return sub_237A86930();
}

uint64_t EnvironmentValues.canShowCloseButtonFocusEffect.getter()
{
  unsigned __int8 v1;

  sub_237954C38();
  sub_237A86B88();
  return v1;
}

unint64_t sub_237954C38()
{
  unint64_t result;

  result = qword_256822E00;
  if (!qword_256822E00)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98C1C, &type metadata for CanShowCloseButtonFocusEffectKey);
    atomic_store(result, (unint64_t *)&qword_256822E00);
  }
  return result;
}

uint64_t EnvironmentValues.canShowCloseButtonFocusEffect.setter()
{
  sub_237954C38();
  return sub_237A86B94();
}

uint64_t (*EnvironmentValues.canShowCloseButtonFocusEffect.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_237954C38();
  sub_237A86B88();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_237954D14;
}

uint64_t sub_237954D14(uint64_t a1)
{
  return sub_237954D20(a1);
}

uint64_t sub_237954D20(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_237A86B94();
}

uint64_t SymbolImageProvider.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SymbolImageProvider.callAsFunction(_:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_237954D74()
{
  swift_bridgeObjectRetain();
  return sub_237A872CC();
}

void sub_237954DA4(uint64_t (**a1)()@<X8>)
{
  *a1 = sub_237954D74;
  a1[1] = 0;
}

uint64_t EnvironmentValues.symbolImageProvider.getter()
{
  sub_237954DE8();
  return sub_237A86B88();
}

unint64_t sub_237954DE8()
{
  unint64_t result;

  result = qword_256822E08;
  if (!qword_256822E08)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98BE4, &type metadata for SymbolImageProviderKey);
    atomic_store(result, (unint64_t *)&qword_256822E08);
  }
  return result;
}

double sub_237954E2C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237954DE8();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_237954E78()
{
  sub_237954DE8();
  swift_retain();
  return sub_237A86B94();
}

uint64_t EnvironmentValues.symbolImageProvider.setter()
{
  sub_237954DE8();
  return sub_237A86B94();
}

void (*EnvironmentValues.symbolImageProvider.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_237954DE8();
  sub_237A86B88();
  return sub_237954F74;
}

void sub_237954F74(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v2[2] = v4;
  v2[3] = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_237A86B94();
    swift_release();
  }
  else
  {
    sub_237A86B94();
  }
  free(v2);
}

unint64_t sub_237954FF8()
{
  unint64_t result;

  result = qword_256822E10;
  if (!qword_256822E10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for RenderingMode, &type metadata for RenderingMode);
    atomic_store(result, (unint64_t *)&qword_256822E10);
  }
  return result;
}

uint64_t sub_23795503C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_237953600();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_237955088()
{
  sub_237953600();
  return sub_237A86B94();
}

uint64_t sub_237955100@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_237954338();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

double sub_237955170@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237954DE8();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for RenderingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23795520C + 4 * byte_237A989B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237955240 + 4 * asc_237A989B0[v4]))();
}

uint64_t sub_237955240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237955248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237955250);
  return result;
}

uint64_t sub_23795525C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237955264);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237955268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237955270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RenderingMode()
{
  return &type metadata for RenderingMode;
}

ValueMetadata *type metadata accessor for SymbolImageProvider()
{
  return &type metadata for SymbolImageProvider;
}

ValueMetadata *type metadata accessor for SymbolImageProviderKey()
{
  return &type metadata for SymbolImageProviderKey;
}

ValueMetadata *type metadata accessor for CanShowCloseButtonFocusEffectKey()
{
  return &type metadata for CanShowCloseButtonFocusEffectKey;
}

ValueMetadata *type metadata accessor for ScaleFactorKey()
{
  return &type metadata for ScaleFactorKey;
}

ValueMetadata *type metadata accessor for WidgetRegistryKey()
{
  return &type metadata for WidgetRegistryKey;
}

ValueMetadata *type metadata accessor for WidgetManagerKey()
{
  return &type metadata for WidgetManagerKey;
}

ValueMetadata *type metadata accessor for ActiveComponentsKey()
{
  return &type metadata for ActiveComponentsKey;
}

ValueMetadata *type metadata accessor for FrameRateLimit()
{
  return &type metadata for FrameRateLimit;
}

ValueMetadata *type metadata accessor for ExternalLayoutBackgroundViewBuilderKey()
{
  return &type metadata for ExternalLayoutBackgroundViewBuilderKey;
}

ValueMetadata *type metadata accessor for ExternalViewBuilderKey()
{
  return &type metadata for ExternalViewBuilderKey;
}

ValueMetadata *type metadata accessor for LayoutIdentifierKey()
{
  return &type metadata for LayoutIdentifierKey;
}

ValueMetadata *type metadata accessor for RenderingModeKey()
{
  return &type metadata for RenderingModeKey;
}

ValueMetadata *type metadata accessor for ZoneIdentifierKey()
{
  return &type metadata for ZoneIdentifierKey;
}

ValueMetadata *type metadata accessor for LayoutOutputKey()
{
  return &type metadata for LayoutOutputKey;
}

uint64_t sub_23795536C()
{
  return sub_23793EC1C(&qword_256822E20, &qword_25681E8E0, (uint64_t (*)(void))sub_237955390, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
}

unint64_t sub_237955390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256820458;
  if (!qword_256820458)
  {
    v1 = sub_237A86594();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_256820458);
  }
  return result;
}

uint64_t sub_2379553D8()
{
  return sub_23793EC1C(&qword_256822E30, &qword_256820D58, (uint64_t (*)(void))sub_237955390, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
}

unint64_t sub_2379553FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256822E38;
  if (!qword_256822E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256822E40);
    v2 = MEMORY[0x24BEE13F8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256822E38);
  }
  return result;
}

uint64_t sub_237955458()
{
  return sub_23793EC1C(qword_256822E58, qword_2568207C8, (uint64_t (*)(void))sub_237955390, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
}

uint64_t sub_237955488()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2379554D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t inited;

  v3 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  sub_23787076C(a1, inited + 32);
  swift_bridgeObjectRetain();
  sub_237880450(inited);
  return v3;
}

_QWORD *sub_237955578(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_2378D0E08(MEMORY[0x24BEE4AF8]);
  v4[3] = a1;
  v4[4] = a2;
  return v4;
}

uint64_t sub_2379555CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2379555F8()
{
  sub_2379555CC();
  return swift_deallocClassInstance();
}

uint64_t _s14KeyedContainerCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14KeyedContainerCMn);
}

uint64_t sub_237955624(uint64_t a1)
{
  uint64_t v2[4];

  sub_23795568C(a1, v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88490();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_23795568C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28[5];

  v26 = a2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 88);
  v28[3] = v4;
  v28[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v28);
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v11(boxed_opaque_existential_0, a1, v4);
  v12 = sub_2379554D0((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
  v13 = v2[4];
  v14 = _s20SingleValueContainerCMa();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0xE000000000000000;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v15 + 40) = v12;
  *(_QWORD *)(v15 + 48) = v13;
  v11((uint64_t *)v7, a1, v4);
  swift_bridgeObjectRetain();
  v16 = sub_237A614E8((uint64_t)v7, v4);
  v18 = v17;
  v20 = v19;
  LOBYTE(v7) = v21 & 1;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v27 = v2[2];
  v2[2] = 0x8000000000000000;
  sub_237959E70(v15, v16, v18, v20, (char)v7, isUniquelyReferenced_nonNull_native, &v27, (uint64_t)&off_25097A0B8);
  v2[2] = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v23 = v26;
  v26[3] = v14;
  result = sub_23786FAA0(&qword_256822EF0, (uint64_t (*)(uint64_t))_s20SingleValueContainerCMa, (uint64_t)&unk_237A9E958);
  v23[4] = result;
  *v23 = v15;
  return result;
}

uint64_t sub_237955854(uint64_t a1, uint64_t a2)
{
  uint64_t v3[4];

  sub_23795568C(a2, v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v3[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_2379558E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28[5];

  v26 = a2;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 88);
  v28[3] = v4;
  v28[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v28);
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v11(boxed_opaque_existential_0, a1, v4);
  v12 = sub_2379554D0((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
  v13 = v2[4];
  v14 = _s16UnkeyedContainerCMa();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = MEMORY[0x24BEE4AF8];
  v15[3] = v12;
  v15[4] = v13;
  v11((uint64_t *)v7, a1, v4);
  swift_bridgeObjectRetain();
  v16 = sub_237A614E8((uint64_t)v7, v4);
  v18 = v17;
  v20 = v19;
  LOBYTE(v7) = v21 & 1;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v27 = v2[2];
  v2[2] = 0x8000000000000000;
  sub_237959E70((uint64_t)v15, v16, v18, v20, (char)v7, isUniquelyReferenced_nonNull_native, &v27, (uint64_t)&off_25097DC18);
  v2[2] = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v23 = v26;
  v26[3] = v14;
  result = sub_23786FAA0(&qword_256822EE8, (uint64_t (*)(uint64_t))_s16UnkeyedContainerCMa, (uint64_t)&unk_237AA3564);
  v23[4] = result;
  *v23 = v15;
  return result;
}

uint64_t sub_237955AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30[5];

  v28[0] = a3;
  v28[1] = a4;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s14KeyedContainerCMa(0, v11, v12, v12);
  v14 = *(_QWORD *)(v6 + 88);
  v30[3] = v7;
  v30[4] = v14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v30);
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v16(boxed_opaque_existential_0, a2, v7);
  v17 = sub_2379554D0((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v30);
  v18 = v4[4];
  v19 = (_QWORD *)swift_allocObject();
  swift_bridgeObjectRetain();
  v19[2] = sub_2378D0E08(MEMORY[0x24BEE4AF8]);
  v19[3] = v17;
  v19[4] = v18;
  v16((uint64_t *)v10, a2, v7);
  v20 = sub_237A614E8((uint64_t)v10, v7);
  v22 = v21;
  v24 = v23;
  LOBYTE(v10) = v25 & 1;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = v4[2];
  v4[2] = 0x8000000000000000;
  sub_237959FE0((uint64_t)v19, v20, v22, v24, (char)v10, isUniquelyReferenced_nonNull_native, &v29, v13, (uint64_t)&off_250976360);
  v4[2] = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v30[0] = (uint64_t)v19;
  MEMORY[0x23B81FA98](&unk_237A98F20, v13);
  return sub_237A882C8();
}

uint64_t sub_237955C88@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 56) = &type metadata for AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_2378829BC();
  v6 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(v6 + 16) = 0x7265707573;
  *(_QWORD *)(v6 + 24) = 0xE500000000000000;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  swift_bridgeObjectRetain();
  sub_237880450(inited);
  v7 = v4;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = type metadata accessor for _LuaEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = 0;
  v10[5] = 0;
  a1[3] = v9;
  a1[4] = sub_23786FAA0((unint64_t *)&qword_256822EE0, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  *a1 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237955DD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = v2;
  v6 = *v3;
  v7 = v3[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  v9 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_237880450(inited);
  v11 = v3[4];
  v12 = type metadata accessor for _LuaEncoder();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v7;
  v13[3] = v11;
  v13[4] = 0;
  v13[5] = 0;
  a2[3] = v12;
  a2[4] = sub_23786FAA0((unint64_t *)&qword_256822EE0, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  *a2 = v13;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237955F18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_237955F24(uint64_t a1)
{
  return sub_237955624(a1);
}

uint64_t sub_237955F44(char a1, uint64_t a2)
{
  char v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237955F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[2];

  v4[1] = a2;
  v4[0] = a1;
  return sub_237955854((uint64_t)v4, a3);
}

uint64_t sub_237955FC4(uint64_t a1, double a2)
{
  double v3;

  v3 = a2;
  return sub_237955854((uint64_t)&v3, a1);
}

uint64_t sub_237956000(uint64_t a1, float a2)
{
  float v3;

  v3 = a2;
  return sub_237955854((uint64_t)&v3, a1);
}

uint64_t sub_23795603C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237956074(char a1, uint64_t a2)
{
  char v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_2379560AC(__int16 a1, uint64_t a2)
{
  __int16 v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_2379560E4(int a1, uint64_t a2)
{
  int v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_23795611C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237956154()
{
  return sub_237A88550();
}

uint64_t sub_237956168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_2379561A0(char a1, uint64_t a2)
{
  char v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_2379561D8(__int16 a1, uint64_t a2)
{
  __int16 v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237956210(int a1, uint64_t a2)
{
  int v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237956248(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  return sub_237955854((uint64_t)&v3, a2);
}

uint64_t sub_237956280()
{
  return sub_237A8855C();
}

uint64_t sub_237956294(uint64_t a1, uint64_t a2)
{
  return sub_237955854(a1, a2);
}

uint64_t sub_2379562B4()
{
  return sub_237A88544();
}

uint64_t sub_2379562DC()
{
  return sub_237A884D8();
}

uint64_t sub_2379562F0()
{
  return sub_237A884CC();
}

uint64_t sub_237956304()
{
  return sub_237A884E4();
}

uint64_t sub_23795631C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956480(a1, a2, a3, a4, MEMORY[0x24BEE3C98]);
}

uint64_t sub_237956338()
{
  return sub_237A884F0();
}

uint64_t sub_237956350(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956408(a1, a2, a3, a4, MEMORY[0x24BEE3CB8]);
}

uint64_t sub_23795636C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956444(a1, a2, a3, a4, MEMORY[0x24BEE3CC0]);
}

uint64_t sub_237956388(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956480(a1, a2, a3, a4, MEMORY[0x24BEE3CC8]);
}

uint64_t sub_2379563A4()
{
  return sub_237A88514();
}

uint64_t sub_2379563BC()
{
  return sub_237A88520();
}

uint64_t sub_2379563D4()
{
  return sub_237A884FC();
}

uint64_t sub_2379563EC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956408(a1, a2, a3, a4, MEMORY[0x24BEE3CD8]);
}

uint64_t sub_237956408(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_237956428(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956444(a1, a2, a3, a4, MEMORY[0x24BEE3CE8]);
}

uint64_t sub_237956444(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_237956464(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237956480(a1, a2, a3, a4, MEMORY[0x24BEE3CF0]);
}

uint64_t sub_237956480(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2379564A8()
{
  return sub_237A8852C();
}

uint64_t sub_2379564C0()
{
  return sub_237A88538();
}

uint64_t sub_2379564D8()
{
  return sub_237A88508();
}

uint64_t sub_237956500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_237955AAC(a1, a2, a3, a4);
}

uint64_t sub_237956520@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2379558E8(a1, a2);
}

uint64_t sub_237956540@<X0>(_QWORD *a1@<X8>)
{
  return sub_237955C88(a1);
}

uint64_t sub_237956560@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_237955DD8(a1, a2);
}

uint64_t sub_237956580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[7];
  uint64_t v11[2];

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
    return 32123;
  v1 = MEMORY[0x23B81E5BC](8224, 0xE200000000000000, *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16));
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  v5 = sub_2378CD564(v4);
  swift_bridgeObjectRelease();
  v11[0] = (uint64_t)v5;
  sub_237958F34(v11);
  v6 = swift_bridgeObjectRelease();
  v7 = v11[0];
  MEMORY[0x24BDAC7A8](v6);
  v10[2] = v1;
  v10[3] = v3;
  v10[4] = v0;
  v8 = sub_2378D6438((void (*)(_QWORD *__return_ptr, _QWORD *))sub_23795A204, (uint64_t)v10, v7);
  swift_release();
  v11[0] = 2683;
  v11[1] = 0xE200000000000000;
  v10[6] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
  sub_237926878();
  sub_237A87764();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return v11[0];
}

uint64_t sub_237956730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t result;
  unint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v40 = a5;
  v52 = a4;
  v43 = a2;
  v7 = sub_237A86444();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v15 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v42 = *(_QWORD *)(a1 + 16);
  v41 = *(unsigned __int8 *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_2378BE638(v15, v14);
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = sub_237A87728();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_5;
  }
  v50 = v15;
  v51 = v14;
  swift_bridgeObjectRetain();
  sub_237A8642C();
  sub_237A86438();
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v13, v7);
  sub_237879800();
  v20 = sub_237A87E48();
  v22 = v21;
  v24 = v23;
  v19(v11, v7);
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0 && (v20 ^ v22) >= 0x4000)
  {
LABEL_5:
    v50 = v43;
    v51 = a3;
    swift_bridgeObjectRetain();
    sub_237A878E4();
    v26 = v50;
    v25 = v51;
    v50 = 8795;
    v51 = 0xE200000000000000;
    v48 = v15;
    v49 = v14;
    v46 = 34;
    v47 = 0xE100000000000000;
    v44 = 8796;
    v45 = 0xE200000000000000;
    sub_237879800();
    sub_237A87E60();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    v50 = v26;
    v51 = v25;
    swift_bridgeObjectRetain();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    v28 = v50;
    v27 = v51;
    v29 = v52;
    swift_beginAccess();
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      v31 = sub_2378D2FD4(v15, v14, v42, v41);
      if ((v32 & 1) != 0)
      {
LABEL_11:
        v35 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 16 * v31 + 8);
        swift_endAccess();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(ObjectType, v35);
        swift_unknownObjectRelease();
        v50 = v28;
        v51 = v27;
        swift_bridgeObjectRetain();
        sub_237A878E4();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v38 = v51;
        v39 = v40;
        *v40 = v50;
        v39[1] = v38;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    __break(1u);
  }
  v50 = v43;
  v51 = a3;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  v28 = v50;
  v27 = v51;
  v33 = v52;
  swift_beginAccess();
  v30 = *(_QWORD *)(v33 + 16);
  if (*(_QWORD *)(v30 + 16))
  {
    swift_bridgeObjectRetain();
    v31 = sub_2378D2FD4(v15, v14, v42, v41);
    if ((v34 & 1) != 0)
      goto LABEL_11;
    swift_bridgeObjectRelease();
  }
  result = swift_endAccess();
  __break(1u);
  return result;
}

uint64_t sub_237956B5C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_237956B64()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237956B88(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F170);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 480);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[480 * v8])
      memmove(v12, v13, 480 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[480 * v8] || v12 >= &v13[480 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237956D0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568203F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237956E94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568203B8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 120 * v8)
      memmove(v10 + 4, a4 + 4, 120 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 120 * v8 || v12 >= v13 + 120 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F420);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957038(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2379571A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820268);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957304(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2379574A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F200);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23795761C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F40);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F48);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2379577C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8])
      memmove(v12, v13, 120 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[120 * v8] || v12 >= &v13[120 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957944(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957AA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F20);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F28);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957C44(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F30);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 13 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F38);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957DE0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237957E08(a1, a2, a3, a4, &qword_256822F70, &qword_256822F78);
}

uint64_t sub_237957DF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237957E08(a1, a2, a3, a4, &qword_256822F80, &qword_256822F88);
}

uint64_t sub_237957E08(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 1;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 32 * v11)
      memmove(v13 + 4, a4 + 4, 32 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 32 * v11 || v16 >= v17 + 32 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237957F94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F220);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC90);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23795811C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F08);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F10);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2379582C0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F68);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958448(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 95;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 7;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2379585AC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F90);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F98);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958734(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237958784(a1, a2, a3, a4, &qword_25681F168, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
}

uint64_t sub_237958748(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237958784(a1, a2, a3, a4, &qword_25681F180, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_23795875C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237958784(a1, a2, a3, a4, &qword_25681F178, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

uint64_t sub_237958770(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237958784(a1, a2, a3, a4, &qword_25681F1D0, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
}

uint64_t sub_237958784(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958964(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F60);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 479;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 9);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 9);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF58);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958AEC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958C54(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958DB0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822F00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8])
      memmove(v12, v13, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237958F34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237959E48(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_237958F9C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_237958F9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  BOOL v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *__dst;

  v3 = a1[1];
  result = sub_237A882D4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_155;
    if (v3)
      return sub_2379596C4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_163;
  v111 = result;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_121:
      v99 = v11;
      v110 = v8;
      if (v12 >= 2)
      {
        v100 = *v108;
        do
        {
          v101 = v12 - 2;
          if (v12 < 2)
            goto LABEL_150;
          if (!v100)
            goto LABEL_162;
          v102 = v99;
          v103 = *(_QWORD *)&v99[16 * v101 + 32];
          v104 = *(_QWORD *)&v99[16 * v12 + 24];
          sub_2379597A4((char *)(v100 + 32 * v103), (char *)(v100 + 32 * *(_QWORD *)&v99[16 * v12 + 16]), v100 + 32 * v104, __dst);
          if (v1)
            break;
          if (v104 < v103)
            goto LABEL_151;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v102 = sub_237959E0C((uint64_t)v102);
          if (v101 >= *((_QWORD *)v102 + 2))
            goto LABEL_152;
          v105 = &v102[16 * v101 + 32];
          *(_QWORD *)v105 = v103;
          *((_QWORD *)v105 + 1) = v104;
          v106 = *((_QWORD *)v102 + 2);
          if (v12 > v106)
            goto LABEL_153;
          memmove(&v102[16 * v12 + 16], &v102[16 * v12 + 32], 16 * (v106 - v12));
          v99 = v102;
          *((_QWORD *)v102 + 2) = v106 - 1;
          v12 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v110 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_237A87ADC();
    *(_QWORD *)(v7 + 16) = v6;
    v110 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = *a1 + 8;
  v107 = *a1 + 24;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v112 = v3;
  v114 = *a1;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_49;
    v14 = (uint64_t *)(v10 + 32 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_48;
      v19 = 0;
    }
    else
    {
      v19 = sub_237A8840C();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v109 + 32 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_237A8840C()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 4;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_158;
      if (v13 < v20)
      {
        v25 = 32 * v20 - 32;
        v26 = 32 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_161;
            v31 = (_OWORD *)(v10 + v26);
            v32 = (_OWORD *)(v10 + v25);
            v33 = *(_QWORD *)(v10 + v26);
            v34 = *(_QWORD *)(v10 + v26 + 8);
            v35 = *(_QWORD *)(v10 + v26 + 16);
            v36 = *(_BYTE *)(v10 + v26 + 24);
            if (v26 != v25 || v31 >= v32 + 2)
            {
              v29 = v32[1];
              *v31 = *v32;
              v31[1] = v29;
            }
            v30 = v10 + v25;
            *(_QWORD *)v30 = v33;
            *(_QWORD *)(v30 + 8) = v34;
            *(_QWORD *)(v30 + 16) = v35;
            *(_BYTE *)(v30 + 24) = v36;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_48:
      v9 = v20;
    }
LABEL_49:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_154;
      if (v9 - v13 < v111)
        break;
    }
LABEL_70:
    if (v9 < v13)
      goto LABEL_149;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_237959A4C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v49 = *((_QWORD *)v11 + 2);
    v48 = *((_QWORD *)v11 + 3);
    v12 = v49 + 1;
    if (v49 >= v48 >> 1)
      v11 = sub_237959A4C((char *)(v48 > 1), v49 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v50 = v11 + 32;
    v51 = &v11[16 * v49 + 32];
    *(_QWORD *)v51 = v13;
    *((_QWORD *)v51 + 1) = v9;
    if (v49)
    {
      v10 = v114;
      while (1)
      {
        v52 = v12 - 1;
        if (v12 >= 4)
        {
          v57 = &v50[16 * v12];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_138;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_139;
          v64 = v12 - 2;
          v65 = &v50[16 * v12 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_141;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_144;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_148;
            v80 = v55 < v90;
            goto LABEL_108;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v81 = *((_QWORD *)v11 + 4);
            v82 = *((_QWORD *)v11 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_102;
          }
          v54 = *((_QWORD *)v11 + 4);
          v53 = *((_QWORD *)v11 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_140;
        v64 = v12 - 2;
        v70 = &v50[16 * v12 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_143;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_146;
        if (__OFADD__(v74, v79))
          goto LABEL_147;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_108:
          if (v80)
            v52 = v64;
          goto LABEL_110;
        }
LABEL_102:
        if ((v75 & 1) != 0)
          goto LABEL_142;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_145;
        if (v86 < v74)
          goto LABEL_15;
LABEL_110:
        v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v10)
          goto LABEL_160;
        v92 = v11;
        v93 = v10;
        v94 = &v50[16 * v91];
        v95 = *(_QWORD *)v94;
        v96 = &v50[16 * v52];
        v97 = *((_QWORD *)v96 + 1);
        sub_2379597A4((char *)(v93 + 32 * *(_QWORD *)v94), (char *)(v93 + 32 * *(_QWORD *)v96), v93 + 32 * v97, __dst);
        if (v1)
          goto LABEL_118;
        if (v97 < v95)
          goto LABEL_135;
        if (v52 > *((_QWORD *)v92 + 2))
          goto LABEL_136;
        *(_QWORD *)v94 = v95;
        *(_QWORD *)&v50[16 * v91 + 8] = v97;
        v98 = *((_QWORD *)v92 + 2);
        if (v52 >= v98)
          goto LABEL_137;
        v11 = v92;
        v12 = v98 - 1;
        memmove(&v50[16 * v52], v96 + 16, 16 * (v98 - 1 - v52));
        *((_QWORD *)v92 + 2) = v98 - 1;
        v80 = v98 > 2;
        v10 = v114;
        if (!v80)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v114;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_121;
    }
  }
  if (__OFADD__(v13, v111))
    goto LABEL_156;
  if (v13 + v111 >= v3)
    v37 = v3;
  else
    v37 = v13 + v111;
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      v113 = v13;
      v38 = v107 + 32 * v9;
      do
      {
        v39 = v113;
        v40 = v38;
        do
        {
          v41 = (_OWORD *)(v40 - 24);
          v42 = *(_QWORD *)(v40 - 24) == *(_QWORD *)(v40 - 56) && *(_QWORD *)(v40 - 16) == *(_QWORD *)(v40 - 48);
          if (v42 || (sub_237A8840C() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_159;
          v44 = *(_OWORD *)(v40 - 56);
          v43 = *(_OWORD *)(v40 - 40);
          *(_BYTE *)(v40 - 32) = *(_BYTE *)v40;
          v40 -= 32;
          v45 = *(_QWORD *)(v40 + 8);
          v46 = *(_QWORD *)(v40 + 16);
          v47 = *(_QWORD *)(v40 + 24);
          *v41 = v44;
          v41[1] = v43;
          *(_QWORD *)(v40 - 24) = v45;
          *(_QWORD *)(v40 - 16) = v46;
          *(_QWORD *)(v40 - 8) = v47;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v38 += 32;
      }
      while (v9 != v37);
      v9 = v37;
      v13 = v113;
    }
    goto LABEL_70;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  result = sub_237A880A0();
  __break(1u);
  return result;
}

uint64_t sub_2379596C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    v9 = v6;
    v10 = v8;
    while (1)
    {
      result = *(_QWORD *)(v10 - 24);
      v11 = (_OWORD *)(v10 - 24);
      v12 = result == *(_QWORD *)(v10 - 56) && *(_QWORD *)(v10 - 16) == *(_QWORD *)(v10 - 48);
      if (v12 || (result = sub_237A8840C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v14 = *(_OWORD *)(v10 - 56);
      v13 = *(_OWORD *)(v10 - 40);
      *(_BYTE *)(v10 - 32) = *(_BYTE *)v10;
      v10 -= 32;
      v15 = *(_QWORD *)(v10 + 8);
      v16 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      *v11 = v14;
      v11[1] = v13;
      *(_QWORD *)(v10 - 24) = v15;
      *(_QWORD *)(v10 - 16) = v16;
      *(_QWORD *)(v10 - 8) = v17;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2379597A4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  BOOL v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v33 = __src;
  v32 = __dst;
  if (v10 >= v13)
  {
    if (v11 >= -31)
    {
      v20 = 32 * v13;
      if (__dst != a2 || &a2[v20] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v21 = &v4[v20];
      v31 = v21;
      v33 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 32) <= 0xFFFFFFFFFFFFFFC0)
      {
        v22 = (char *)(a3 - 32);
        v23 = v6;
        while (1)
        {
          v24 = v22 + 32;
          v25 = *((_QWORD *)v23 - 4);
          v26 = *((_QWORD *)v23 - 3);
          v23 -= 32;
          v27 = *((_QWORD *)v21 - 4) == v25 && *((_QWORD *)v21 - 3) == v26;
          if (v27 || (sub_237A8840C() & 1) == 0)
          {
            v31 = v21 - 32;
            if (v24 < v21 || v22 >= v21 || v24 != v21)
            {
              v29 = *((_OWORD *)v21 - 1);
              *(_OWORD *)v22 = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 1) = v29;
            }
            v23 = v6;
            v21 -= 32;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v24 != v6 || v22 >= v6)
            {
              v28 = *((_OWORD *)v23 + 1);
              *(_OWORD *)v22 = *(_OWORD *)v23;
              *((_OWORD *)v22 + 1) = v28;
            }
            v33 = v23;
            if (v23 <= v7)
              goto LABEL_50;
          }
          v22 -= 32;
          v6 = v23;
          if (v21 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    v14 = 32 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14);
    v15 = &v4[v14];
    v31 = v15;
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      do
      {
        v16 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v16 || (sub_237A8840C() & 1) == 0)
        {
          if (v7 != v4)
          {
            v19 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v19;
          }
          v4 += 32;
          v32 = v4;
          v17 = v6;
        }
        else
        {
          v17 = v6 + 32;
          if (v7 < v6 || v7 >= v17 || v7 != v6)
          {
            v18 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v18;
          }
        }
        v7 += 32;
        if (v4 >= v15)
          break;
        v6 = v17;
      }
      while ((unint64_t)v17 < a3);
      v33 = v7;
    }
LABEL_50:
    sub_237959CC0((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_237959A4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256822EF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_237959B44(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    result = (char *)sub_237A880F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

char *sub_237959C04(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -120)
  {
    result = (char *)sub_237A880F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 120;
    if (result != v3 || result >= &v3[120 * v6])
      return (char *)memmove(result, v3, 120 * v6);
  }
  return result;
}

char *sub_237959CC0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_237A880F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_237959D64(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_237A880F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_237959E0C(uint64_t a1)
{
  return sub_237959A4C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_237959E20(uint64_t a1)
{
  return sub_237956D0C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_237959E34(_QWORD *a1)
{
  return sub_237956E94(0, a1[2], 0, a1);
}

uint64_t sub_237959E48(uint64_t a1)
{
  return sub_2379571A0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_237959E5C(uint64_t a1)
{
  return sub_237957038(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_237959E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, _QWORD *a7, uint64_t a8)
{
  _QWORD *v14;
  char v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v14 = (_QWORD *)*a7;
  v15 = a5 & 1;
  v17 = sub_2378D2FD4(a2, a3, a4, a5 & 1);
  v18 = v14[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v14[3];
    if (v22 >= v20 && (a6 & 1) != 0)
    {
LABEL_7:
      v23 = (_QWORD *)*a7;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 16 * v17);
        result = swift_unknownObjectRelease();
        *v24 = a1;
        v24[1] = a8;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a6 & 1) == 0)
    {
      sub_2378C648C();
      goto LABEL_7;
    }
    sub_2378CB7CC(v20, a6 & 1);
    v26 = sub_2378D2FD4(a2, a3, a4, v15);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = (_QWORD *)*a7;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23795A150(v17, a2, a3, a4, v15, a1, v23, a8);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237959FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v14;
  char v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v14 = (_QWORD *)*a7;
  v15 = a5 & 1;
  v17 = sub_2378D2FD4(a2, a3, a4, a5 & 1);
  v18 = v14[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v14[3];
    if (v22 >= v20 && (a6 & 1) != 0)
    {
LABEL_7:
      v23 = (_QWORD *)*a7;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 16 * v17);
        result = swift_unknownObjectRelease();
        *v24 = a1;
        v24[1] = a9;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a6 & 1) == 0)
    {
      sub_2378C648C();
      goto LABEL_7;
    }
    sub_2378CB7CC(v20, a6 & 1);
    v26 = sub_2378D2FD4(a2, a3, a4, v15);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = (_QWORD *)*a7;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23795A1A8(v17, a2, a3, a4, v15, a1, v23, a8, a9);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

unint64_t sub_23795A150(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a7[(result >> 6) + 8] |= 1 << result;
  v8 = a7[6] + 32 * result;
  *(_QWORD *)v8 = a2;
  *(_QWORD *)(v8 + 8) = a3;
  *(_QWORD *)(v8 + 16) = a4;
  *(_BYTE *)(v8 + 24) = a5 & 1;
  v9 = (_QWORD *)(a7[7] + 16 * result);
  *v9 = a6;
  v9[1] = a8;
  v10 = a7[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a7[2] = v12;
  return result;
}

unint64_t sub_23795A1A8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a7[(result >> 6) + 8] |= 1 << result;
  v9 = a7[6] + 32 * result;
  *(_QWORD *)v9 = a2;
  *(_QWORD *)(v9 + 8) = a3;
  *(_QWORD *)(v9 + 16) = a4;
  *(_BYTE *)(v9 + 24) = a5 & 1;
  v10 = (_QWORD *)(a7[7] + 16 * result);
  *v10 = a6;
  v10[1] = a9;
  v11 = a7[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a7[2] = v13;
  return result;
}

uint64_t sub_23795A204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_237956730(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t Slot.init(positionId:style:frame:safeAreaInsets:zIndex:instrument:parentPositionId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, CGFloat a10@<D0>, CGFloat a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>)
{
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[6];
  _QWORD v60[5];
  _BYTE v61[48];

  v58 = a8;
  v57 = a7;
  v56 = a6;
  v55 = a5;
  v53 = a2;
  v52 = a1;
  v54 = a4;
  sub_237870370(a4, (uint64_t)v60, &qword_256822FA0);
  v19 = *(double *)v60;
  v20 = v60[1];
  v21 = v60[2];
  v22 = v60[3];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v48 - v27;
  v30 = *a3;
  v29 = a3[1];
  v31 = a3[2];
  v50 = a3[3];
  v49 = a3[4];
  v48 = a3[5];
  v32 = (int *)type metadata accessor for Slot();
  v33 = a9 + v32[9];
  v34 = type metadata accessor for Instrument();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v51 = v33;
  v35(v33, 1, 1, v34);
  v36 = (_QWORD *)(a9 + v32[10]);
  *v36 = 0;
  v36[1] = 0;
  v37 = a9 + v32[11];
  sub_237A86588();
  sub_2378BBFE0((uint64_t)v28, (uint64_t)v26, &qword_2568202F8);
  if (qword_25681E410 != -1)
    swift_once();
  v38 = qword_256825198;
  sub_2378BC024((uint64_t)v28, &qword_2568202F8);
  sub_237870370((uint64_t)v26, v37, &qword_2568202F8);
  *(_QWORD *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v38;
  v39 = v53;
  *(_QWORD *)(a9 + 120) = v52;
  *(_QWORD *)(a9 + 128) = v39;
  *(_QWORD *)a9 = v30;
  *(_QWORD *)(a9 + 8) = v29;
  v40 = v50;
  *(_QWORD *)(a9 + 16) = v31;
  *(_QWORD *)(a9 + 24) = v40;
  v41 = v49;
  v42 = v48;
  *(_QWORD *)(a9 + 32) = v49;
  *(_QWORD *)(a9 + 40) = v42;
  *(CGFloat *)(a9 + 48) = a10;
  *(CGFloat *)(a9 + 56) = a11;
  *(CGFloat *)(a9 + 64) = a12;
  *(CGFloat *)(a9 + 72) = a13;
  sub_237870370(v54, (uint64_t)v61, &qword_256822FA0);
  if (v61[32] == 1)
  {
    v59[0] = v30;
    v59[1] = v29;
    v59[2] = v31;
    v59[3] = v40;
    v59[4] = v41;
    v59[5] = v42;
    v19 = sub_23795B77C((uint64_t)v59, a10, a11, a12, a13);
    v20 = v43;
    v21 = v44;
    v22 = v45;
  }
  *(double *)(a9 + 80) = v19;
  *(_QWORD *)(a9 + 88) = v20;
  *(_QWORD *)(a9 + 96) = v21;
  *(_QWORD *)(a9 + 104) = v22;
  *(_QWORD *)(a9 + 112) = v55;
  sub_23794B8CC(v56, v51, &qword_25681F430);
  result = swift_bridgeObjectRelease();
  v47 = v58;
  *v36 = v57;
  v36[1] = v47;
  return result;
}

uint64_t type metadata accessor for Slot()
{
  uint64_t result;

  result = qword_2568230C8;
  if (!qword_2568230C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Slot.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Slot();
  sub_2378BBFE0(v0 + *(int *)(v4 + 36), (uint64_t)v3, &qword_25681F430);
  v5 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_2378BC024((uint64_t)v3, &qword_25681F430);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = Instrument.assets.getter();
    sub_2378DE6A4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  }
  return v6;
}

uint64_t sub_23795A650()
{
  sub_23795CD58();
  return sub_237A88718();
}

uint64_t sub_23795A678()
{
  sub_23795CD58();
  return sub_237A88724();
}

uint64_t sub_23795A6A0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x75676E6174636572;
  if (*v0 != 1)
    v1 = 0x72656E726F63;
  if (*v0)
    return v1;
  else
    return 0x72616C7563726963;
}

uint64_t sub_23795A700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379601FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23795A724()
{
  sub_23795CC8C();
  return sub_237A88718();
}

uint64_t sub_23795A74C()
{
  sub_23795CC8C();
  return sub_237A88724();
}

uint64_t sub_23795A774()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23795A79C + 4 * byte_237A990A0[*v0]))(1802723693, 0xE400000000000000);
}

uint64_t sub_23795A79C()
{
  return 0x69646152676E6972;
}

uint64_t sub_23795A7B8()
{
  return 0x746E6543676E6972;
}

unint64_t sub_23795A7DC()
{
  return 0xD000000000000015;
}

uint64_t sub_23795A7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237960360(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23795A81C()
{
  sub_23795CCD0();
  return sub_237A88718();
}

uint64_t sub_23795A844()
{
  sub_23795CCD0();
  return sub_237A88724();
}

uint64_t sub_23795A86C()
{
  sub_23795CD14();
  return sub_237A88718();
}

uint64_t sub_23795A894()
{
  sub_23795CD14();
  return sub_237A88724();
}

uint64_t Slot.Style.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822FA8);
  v28 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822FB0);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822FB8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822FC0);
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v29 = *v1;
  v14 = v1[1];
  v13 = v1[2];
  v15 = v1[3];
  v16 = v1[5];
  v27[1] = v1[4];
  v17 = a1[3];
  v18 = a1;
  v19 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(v18, v17);
  sub_23795CC8C();
  sub_237A886B8();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v37) = 1;
      sub_23795CD14();
      v20 = v35;
      sub_237A88220();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v20);
    }
    else
    {
      LOBYTE(v37) = 2;
      sub_23795CCD0();
      v23 = v32;
      v24 = v35;
      sub_237A88220();
      v37 = v29;
      v39 = 0;
      type metadata accessor for CACornerMask(0);
      sub_23786FAA0(&qword_256822FD8, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&protocol conformance descriptor for CACornerMask);
      v25 = v33;
      v26 = v36;
      sub_237A882B0();
      if (!v26)
      {
        v37 = v14;
        v39 = 1;
        sub_23787ADF8();
        sub_237A882B0();
        v37 = v13;
        v38 = v15;
        v39 = 2;
        type metadata accessor for CGPoint(0);
        sub_23786FAA0(&qword_256822FE0, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD878]);
        sub_237A882B0();
        LOBYTE(v37) = 3;
        sub_237A88274();
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v24);
    }
  }
  else
  {
    LOBYTE(v37) = 0;
    sub_23795CD58();
    v22 = v35;
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v22);
  }
}

uint64_t Slot.Style.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822FF8);
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823000);
  *(_QWORD *)&v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823008);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823010);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_23795CC8C();
  v14 = v46;
  sub_237A88688();
  if (!v14)
  {
    v15 = v6;
    v37 = v5;
    v16 = v43;
    v17 = v44;
    v46 = v10;
    v18 = v12;
    v19 = sub_237A881FC();
    v20 = v19;
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      if (*(_BYTE *)(v19 + 32))
      {
        v21 = v42;
        if (*(_BYTE *)(v19 + 32) == 1)
        {
          LOBYTE(v48) = 1;
          sub_23795CD14();
          v22 = v16;
          sub_237A88154();
          v23 = v46;
          (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v9);
          v30 = 0;
          v31 = 0;
          v32 = 0;
          v33 = 0uLL;
          v34 = 1;
        }
        else
        {
          LOBYTE(v48) = 2;
          sub_23795CCD0();
          v28 = v17;
          sub_237A88154();
          v29 = v46;
          v43 = v18;
          type metadata accessor for CACornerMask(0);
          LOBYTE(v48) = 0;
          sub_23786FAA0(&qword_256823018, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&protocol conformance descriptor for CACornerMask);
          v35 = v41;
          sub_237A881F0();
          v30 = v50;
          LOBYTE(v48) = 1;
          sub_23787AE3C();
          sub_237A881F0();
          v31 = v49;
          type metadata accessor for CGPoint(0);
          v47 = 2;
          sub_23786FAA0(&qword_256823020, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD888]);
          sub_237A881F0();
          v40 = v20;
          v39 = v48;
          v47 = 3;
          v32 = sub_237A881B4();
          v34 = v36;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v43, v9);
          v21 = v42;
          v33 = v39;
        }
      }
      else
      {
        LOBYTE(v48) = 0;
        sub_23795CD58();
        sub_237A88154();
        v21 = v42;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v37);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v9);
        v30 = 0;
        v31 = 0;
        v32 = 0;
        v34 = 0;
        v33 = 0uLL;
      }
      *(_QWORD *)v21 = v30;
      *(_QWORD *)(v21 + 8) = v31;
      *(_OWORD *)(v21 + 16) = v33;
      *(_QWORD *)(v21 + 32) = v32;
      *(_QWORD *)(v21 + 40) = v34;
    }
    else
    {
      v24 = sub_237A87FB0();
      swift_allocError();
      v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
      *v26 = &type metadata for Slot.Style;
      sub_237A88160();
      sub_237A87F98();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v45);
}

uint64_t sub_23795B284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Slot.Style.init(from:)(a1, a2);
}

uint64_t sub_23795B298(_QWORD *a1)
{
  return Slot.Style.encode(to:)(a1);
}

uint64_t Slot.style.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_23795CD9C(v2, v3, v4, v5, v6, v7);
}

__n128 Slot.style.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  sub_23795CDB0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Slot.style.modify())()
{
  return nullsub_1;
}

double Slot.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void Slot.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
}

uint64_t (*Slot.frame.modify())()
{
  return nullsub_1;
}

double Slot.safeAreaInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void Slot.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[10] = a1;
  v4[11] = a2;
  v4[12] = a3;
  v4[13] = a4;
}

uint64_t (*Slot.safeAreaInsets.modify())()
{
  return nullsub_1;
}

uint64_t Slot.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t Slot.zIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

uint64_t (*Slot.zIndex.modify())()
{
  return nullsub_1;
}

uint64_t Slot.positionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Slot.positionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return result;
}

uint64_t (*Slot.positionId.modify())()
{
  return nullsub_1;
}

uint64_t Slot.instrument.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Slot();
  return sub_2378BBFE0(v1 + *(int *)(v3 + 36), a1, &qword_25681F430);
}

uint64_t Slot.instrument.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Slot();
  return sub_23794B8CC(a1, v1 + *(int *)(v3 + 36), &qword_25681F430);
}

uint64_t (*Slot.instrument.modify())(_QWORD)
{
  type metadata accessor for Slot();
  return nullsub_1;
}

uint64_t Slot.parentPositionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Slot() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Slot.parentPositionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Slot() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Slot.parentPositionId.modify())(_QWORD)
{
  type metadata accessor for Slot();
  return nullsub_1;
}

uint64_t Slot.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Slot();
  sub_2378BBFE0(v1 + *(int *)(v6 + 44), (uint64_t)v5, &qword_256820300);
  return sub_237870370((uint64_t)v5, a1, &qword_2568202F8);
}

uint64_t sub_23795B5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Slot();
  sub_2378BBFE0(a1 + *(int *)(v7 + 44), (uint64_t)v6, &qword_256820300);
  return sub_237870370((uint64_t)v6, a2, &qword_2568202F8);
}

uint64_t sub_23795B684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v6, &qword_2568202F8);
  v7 = type metadata accessor for Slot();
  return sub_23794B8CC((uint64_t)v6, a2 + *(int *)(v7 + 44), &qword_2568202F8);
}

uint64_t Slot.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Slot();
  return sub_23794B8CC(a1, v1 + *(int *)(v3 + 44), &qword_2568202F8);
}

uint64_t (*Slot.id.modify())(_QWORD)
{
  type metadata accessor for Slot();
  return nullsub_1;
}

double sub_23795B77C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v6;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat height;
  double MinY;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat rect;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v6 = 0.0;
  if (!*(_QWORD *)(a1 + 40))
  {
    v10 = CGRectGetWidth(*(CGRect *)&a2) * 0.707106781;
    v22.origin.x = a2;
    v22.origin.y = a3;
    v22.size.width = a4;
    v22.size.height = a5;
    v11 = CGRectGetHeight(v22) * 0.707106781;
    v23.origin.x = a2;
    v23.origin.y = a3;
    v23.size.width = a4;
    v23.size.height = a5;
    rect = a5;
    v12 = CGRectGetMidX(v23) - v10 * 0.5;
    v24.origin.x = a2;
    v24.origin.y = a3;
    v24.size.width = a4;
    v24.size.height = a5;
    v13 = CGRectGetMidY(v24) - v11 * 0.5;
    v25.origin.x = v12;
    v25.origin.y = v13;
    v25.size.width = v10;
    v25.size.height = v11;
    v20 = round(CGRectGetMinX(v25));
    v26.origin.x = v12;
    v26.origin.y = v13;
    v26.size.width = v10;
    v26.size.height = v11;
    v19 = round(CGRectGetMinY(v26));
    v27.origin.x = v12;
    v27.origin.y = v13;
    v27.size.width = v10;
    v27.size.height = v11;
    v18 = round(CGRectGetWidth(v27));
    v28.origin.x = v12;
    v28.origin.y = v13;
    v28.size.width = v10;
    v28.size.height = v11;
    v29.size.height = round(CGRectGetHeight(v28));
    v29.origin.x = v20;
    v29.origin.y = v19;
    v29.size.width = v18;
    height = v29.size.height;
    v17 = v29.size.height;
    MinY = CGRectGetMinY(v29);
    v30.origin.x = a2;
    v30.origin.y = a3;
    v30.size.width = a4;
    v30.size.height = rect;
    v6 = MinY - CGRectGetMinY(v30);
    v31.origin.x = v20;
    v31.origin.y = v19;
    v31.size.width = v18;
    v31.size.height = height;
    CGRectGetMinX(v31);
    v32.origin.x = a2;
    v32.origin.y = a3;
    v32.size.width = a4;
    v32.size.height = rect;
    CGRectGetMinX(v32);
    v33.origin.x = a2;
    v33.origin.y = a3;
    v33.size.width = a4;
    v33.size.height = rect;
    CGRectGetMaxY(v33);
    v34.origin.x = v20;
    v34.origin.y = v19;
    v34.size.width = v18;
    v34.size.height = v17;
    CGRectGetMaxY(v34);
    v35.origin.x = a2;
    v35.origin.y = a3;
    v35.size.width = a4;
    v35.size.height = rect;
    CGRectGetMaxX(v35);
    v36.origin.x = v20;
    v36.origin.y = v19;
    v36.size.width = v18;
    v36.size.height = v17;
    CGRectGetMaxX(v36);
  }
  return v6;
}

uint64_t sub_23795B9A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23795B9D8 + 4 * byte_237A990A4[a1]))(0x656C797473, 0xE500000000000000);
}

uint64_t sub_23795B9D8()
{
  return 0x656D617266;
}

uint64_t sub_23795B9E8()
{
  return 0x6165724165666173;
}

uint64_t sub_23795BA0C()
{
  return 0x7865646E497ALL;
}

uint64_t sub_23795BA20()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_23795BA3C()
{
  return 0x656D757274736E69;
}

unint64_t sub_23795BA58()
{
  return 0xD000000000000010;
}

uint64_t sub_23795BA74()
{
  return 25705;
}

uint64_t sub_23795BA80()
{
  unsigned __int8 *v0;

  return sub_23795B9A8(*v0);
}

uint64_t sub_23795BA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237960534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23795BAAC()
{
  sub_23795CDC4();
  return sub_237A88718();
}

uint64_t sub_23795BAD4()
{
  sub_23795CDC4();
  return sub_237A88724();
}

uint64_t Slot.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820308);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23795CDC4();
  sub_237A886B8();
  v9 = v3[1];
  v16 = *v3;
  v17 = v9;
  v18 = v3[2];
  v15 = 0;
  sub_23795CE08();
  sub_237A882B0();
  if (!v2)
  {
    v10 = v3[4];
    v16 = v3[3];
    v17 = v10;
    v15 = 1;
    type metadata accessor for CGRect(0);
    sub_23786FAA0(&qword_256820580, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_237A882B0();
    v11 = v3[6];
    v16 = v3[5];
    v17 = v11;
    v15 = 2;
    sub_2378DB308();
    sub_237A882B0();
    LOBYTE(v16) = 3;
    sub_237A88298();
    LOBYTE(v16) = 4;
    sub_237A88274();
    v12 = type metadata accessor for Slot();
    LOBYTE(v16) = 5;
    type metadata accessor for Instrument();
    sub_23786FAA0(&qword_256823038, (uint64_t (*)(uint64_t))type metadata accessor for Instrument, (uint64_t)&protocol conformance descriptor for Instrument);
    sub_237A88268();
    LOBYTE(v16) = 6;
    sub_237A8822C();
    sub_2378C3020((uint64_t)v3 + *(int *)(v12 + 44), 7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Slot.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822A00);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  v16 = type metadata accessor for Slot();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 36)];
  v21 = type metadata accessor for Instrument();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v50 = v20;
  v45 = v21;
  v22(v20, 1, 1);
  v23 = &v19[*(int *)(v16 + 40)];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v49 = v23;
  v24 = (uint64_t)&v19[*(int *)(v16 + 44)];
  sub_237A86588();
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v13, &qword_2568202F8);
  if (qword_25681E410 != -1)
    swift_once();
  v25 = qword_256825198;
  sub_2378BC024((uint64_t)v15, &qword_2568202F8);
  sub_237870370((uint64_t)v13, v24, &qword_2568202F8);
  v26 = *(int *)(v3 + 52);
  v52 = v24;
  *(_QWORD *)(v24 + v26) = v25;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23795CDC4();
  v27 = v51;
  sub_237A88688();
  v28 = (uint64_t)a1;
  if (v27)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378BC024(v50, &qword_25681F430);
    swift_bridgeObjectRelease();
    return sub_2378BC024(v52, &qword_256820300);
  }
  else
  {
    v56 = 0;
    sub_23795CE4C();
    v29 = v48;
    sub_237A881F0();
    v30 = v54;
    *(_OWORD *)v19 = v53;
    *((_OWORD *)v19 + 1) = v30;
    *((_OWORD *)v19 + 2) = v55;
    type metadata accessor for CGRect(0);
    v56 = 1;
    sub_23786FAA0(&qword_2568205C8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_237A881F0();
    v31 = v54;
    *((_OWORD *)v19 + 3) = v53;
    *((_OWORD *)v19 + 4) = v31;
    v56 = 2;
    sub_2378DB448();
    sub_237A881F0();
    v32 = v54;
    *((_OWORD *)v19 + 5) = v53;
    *((_OWORD *)v19 + 6) = v32;
    LOBYTE(v53) = 3;
    *((_QWORD *)v19 + 14) = sub_237A881D8();
    LOBYTE(v53) = 4;
    *((_QWORD *)v19 + 15) = sub_237A881B4();
    *((_QWORD *)v19 + 16) = v33;
    LOBYTE(v53) = 5;
    sub_23786FAA0(&qword_256823048, (uint64_t (*)(uint64_t))type metadata accessor for Instrument, (uint64_t)&protocol conformance descriptor for Instrument);
    v34 = (uint64_t)v46;
    sub_237A881A8();
    v35 = v9;
    sub_23794B8CC(v34, v50, &qword_25681F430);
    LOBYTE(v53) = 6;
    v36 = sub_237A8816C();
    v37 = v49;
    v38 = v36;
    v40 = v39;
    swift_bridgeObjectRelease();
    *v37 = v38;
    v37[1] = v40;
    v41 = v44;
    sub_237944ACC(7, v44);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v29);
    sub_23794B8CC(v41, v52, &qword_256820300);
    sub_23795CE90((uint64_t)v19, v43);
    __swift_destroy_boxed_opaque_existential_2Tm(v28);
    return sub_2378DE6A4((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
  }
}

uint64_t sub_23795C378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v2 + *(int *)(a1 + 44), (uint64_t)v7, &qword_256820300);
  return sub_237870370((uint64_t)v7, a2, &qword_2568202F8);
}

uint64_t sub_23795C410@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Slot.init(from:)(a1, a2);
}

uint64_t sub_23795C424(_QWORD *a1)
{
  return Slot.encode(to:)(a1);
}

uint64_t Slot.shape.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  __int128 v5;

  v3 = v1[5];
  if (v3)
  {
    if (v3 == 1)
    {
      sub_2378E38CC();
    }
    else
    {
      sub_23795C508(*v1, (uint64_t)&v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256823050);
      sub_23795CED4();
    }
  }
  else
  {
    sub_2378E3910();
  }
  result = sub_237A87428();
  *a1 = result;
  return result;
}

__n128 sub_23795C508@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  double *v3;
  CGFloat v6;
  CGFloat v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  CGFloat tx;
  CGFloat ty;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  unsigned __int8 v24;
  CGFloat v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __n128 v33;
  __int128 v34;
  __int128 v35;
  CGAffineTransform v36;
  CGAffineTransform t2;
  CGAffineTransform t1;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  CGRect v44;

  v3 = v2;
  sub_237A87020();
  sub_237A86FF0();
  sub_237A87014();
  sub_237A87014();
  sub_237A87014();
  sub_237A87008();
  sub_237A87008();
  sub_237A87014();
  sub_237A87014();
  sub_237A87014();
  sub_237A87014();
  sub_237A87008();
  sub_237A87014();
  sub_237A87014();
  sub_237A87008();
  sub_237A87008();
  sub_237A86FE4();
  switch(a1)
  {
    case 8:
      CGAffineTransformMakeScale(&t1, -1.0, -1.0);
      v32 = *(_OWORD *)&t1.c;
      v34 = *(_OWORD *)&t1.a;
      v31 = *(_OWORD *)&t1.tx;
      v6 = 282.0;
      v7 = 204.0;
      break;
    case 4:
      CGAffineTransformMakeScale(&t1, 1.0, -1.0);
      v32 = *(_OWORD *)&t1.c;
      v34 = *(_OWORD *)&t1.a;
      v31 = *(_OWORD *)&t1.tx;
      v7 = 204.0;
      v6 = 0.0;
      break;
    case 2:
      CGAffineTransformMakeScale(&t1, -1.0, 1.0);
      v32 = *(_OWORD *)&t1.c;
      v34 = *(_OWORD *)&t1.a;
      v31 = *(_OWORD *)&t1.tx;
      v6 = 282.0;
      v7 = 0.0;
      break;
    default:
      v8 = xmmword_237A99950;
      v10 = xmmword_237A99960;
      v9 = 0uLL;
      v11 = xmmword_237A99960;
      v12 = xmmword_237A99950;
      v13 = 0uLL;
      goto LABEL_9;
  }
  CGAffineTransformMakeTranslation(&t1, v6, v7);
  v9 = v31;
  v8 = v32;
  v10 = v34;
  v11 = *(_OWORD *)&t1.a;
  v12 = *(_OWORD *)&t1.c;
  v13 = *(_OWORD *)&t1.tx;
LABEL_9:
  *(_OWORD *)&t1.a = v10;
  *(_OWORD *)&t1.c = v8;
  *(_OWORD *)&t1.tx = v9;
  *(_OWORD *)&t2.a = v11;
  *(_OWORD *)&t2.c = v12;
  *(_OWORD *)&t2.tx = v13;
  CGAffineTransformConcat(&v36, &t1, &t2);
  v33 = *(__n128 *)&v36.c;
  v35 = *(_OWORD *)&v36.a;
  tx = v36.tx;
  ty = v36.ty;
  v16 = v39;
  v17 = v40;
  v18 = v41;
  v19 = v42;
  v20 = v3[6];
  v21 = v3[7];
  v22 = v3[8];
  v23 = v3[9];
  v24 = v43;
  sub_2379232C0(v39, v40, v41, v42, v43);
  v44.origin.x = v20;
  v44.origin.y = v21;
  v44.size.width = v22;
  v44.size.height = v23;
  v25 = CGRectGetWidth(v44) / 282.0;
  sub_237A8753C();
  v27 = v26;
  v29 = v28;
  sub_237923338(v16, v17, v18, v19, v24);
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v19;
  *(_BYTE *)(a2 + 32) = v24;
  *(_OWORD *)(a2 + 40) = v35;
  result = v33;
  *(__n128 *)(a2 + 56) = v33;
  *(CGFloat *)(a2 + 72) = tx;
  *(CGFloat *)(a2 + 80) = ty;
  *(CGFloat *)(a2 + 88) = v25;
  *(CGFloat *)(a2 + 96) = v25;
  *(_QWORD *)(a2 + 104) = v27;
  *(_QWORD *)(a2 + 112) = v29;
  return result;
}

BOOL Slot.isChild.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Slot() + 40) + 8) != 0;
}

uint64_t EdgeInsets.encode(to:)(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  _BYTE v11[24];
  uint64_t v12;
  double v13;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886A0();
  v13 = a2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  sub_23787ADF8();
  sub_237A88304();
  if (!v5)
  {
    v13 = a3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_237A88304();
    v13 = a4;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_237A88304();
    v13 = a5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_237A88304();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v11);
}

double EdgeInsets.init(from:)(_QWORD *a1)
{
  return sub_23795CF20(a1);
}

void sub_23795CB6C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23795CF20(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
}

uint64_t sub_23795CB98(_QWORD *a1)
{
  double *v1;

  return EdgeInsets.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_23795CBB4()
{
  sub_23786FAA0(&qword_256823198, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_237A893BC);
  return sub_237A87A4C();
}

uint64_t sub_23795CC28()
{
  sub_23786FAA0(&qword_256823198, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_237A893BC);
  return sub_237A87A04();
}

unint64_t sub_23795CC8C()
{
  unint64_t result;

  result = qword_256822FC8;
  if (!qword_256822FC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9976C, &type metadata for Slot.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822FC8);
  }
  return result;
}

unint64_t sub_23795CCD0()
{
  unint64_t result;

  result = qword_256822FD0;
  if (!qword_256822FD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9971C, &type metadata for Slot.Style.CornerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822FD0);
  }
  return result;
}

unint64_t sub_23795CD14()
{
  unint64_t result;

  result = qword_256822FE8;
  if (!qword_256822FE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A996CC, &type metadata for Slot.Style.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822FE8);
  }
  return result;
}

unint64_t sub_23795CD58()
{
  unint64_t result;

  result = qword_256822FF0;
  if (!qword_256822FF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9967C, &type metadata for Slot.Style.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256822FF0);
  }
  return result;
}

uint64_t sub_23795CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if (a6 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23795CDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if (a6 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_23795CDC4()
{
  unint64_t result;

  result = qword_256823028;
  if (!qword_256823028)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9962C, &type metadata for Slot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823028);
  }
  return result;
}

unint64_t sub_23795CE08()
{
  unint64_t result;

  result = qword_256823030;
  if (!qword_256823030)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Slot.Style, &type metadata for Slot.Style);
    atomic_store(result, (unint64_t *)&qword_256823030);
  }
  return result;
}

unint64_t sub_23795CE4C()
{
  unint64_t result;

  result = qword_256823040;
  if (!qword_256823040)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Slot.Style, &type metadata for Slot.Style);
    atomic_store(result, (unint64_t *)&qword_256823040);
  }
  return result;
}

uint64_t sub_23795CE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Slot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23795CED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256823058;
  if (!qword_256823058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823050);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEB718], v1);
    atomic_store(result, (unint64_t *)&qword_256823058);
  }
  return result;
}

double sub_23795CF20(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  double v5;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A88670();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_23787AE3C();
    sub_237A882EC();
    v2 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_237A882EC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_237A882EC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_237A882EC();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v6);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return v2;
}

unint64_t sub_23795D0E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256823060;
  if (!qword_256823060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568202F8);
    v2 = sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256823060);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Slot(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[5];
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    if (v7 >= 2)
    {
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    }
    v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    v11 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v11;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    v12 = v6[9];
    v13 = (char *)(a1 + v12);
    v14 = (char *)a2 + v12;
    *(_QWORD *)(a1 + 128) = a2[16];
    v15 = type metadata accessor for Instrument();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v13[*(int *)(v20 + 52)] = *(_QWORD *)&v14[*(int *)(v20 + 52)];
      v21 = *(int *)(v15 + 20);
      v22 = (uint64_t *)&v13[v21];
      v23 = (uint64_t *)&v14[v21];
      v78 = v16;
      v77 = v13;
      v76 = v15;
      v75 = v14;
      v74 = v6;
      v108 = (void *)v23[8];
      v109 = v23[7];
      v106 = (void *)v23[10];
      v107 = (void *)v23[9];
      v104 = v23[12];
      v105 = v23[11];
      v102 = v23[14];
      v103 = v23[13];
      v100 = v23[16];
      v101 = v23[15];
      v98 = v23[18];
      v99 = v23[17];
      v96 = (void *)v23[20];
      v97 = v23[19];
      v94 = v23[22];
      v95 = v23[21];
      v92 = v23[24];
      v93 = v23[23];
      v90 = v23[26];
      v91 = v23[25];
      v89 = (void *)v23[27];
      v88 = (void *)v23[28];
      v87 = v23[29];
      v86 = v23[30];
      v85 = v23[31];
      v84 = v23[32];
      v83 = v23[33];
      v82 = v23[34];
      v81 = v23[35];
      v80 = v23[36];
      v79 = v23[37];
      v48 = v23[38];
      v49 = v23[39];
      v50 = v23[40];
      v51 = v23[41];
      v52 = v23[42];
      v53 = v23[43];
      v54 = v23[44];
      v55 = v23[45];
      v56 = v23[46];
      v57 = v23[47];
      v58 = v23[48];
      v59 = v23[49];
      v60 = v23[50];
      v61 = v23[51];
      v62 = v23[52];
      v63 = v23[53];
      v64 = v23[54];
      v65 = v23[55];
      v66 = v23[56];
      v67 = v23[57];
      v68 = v23[58];
      v69 = v23[59];
      v70 = v23[60];
      v71 = v23[61];
      v72 = v23[62];
      v73 = v23[63];
      v24 = *v23;
      v25 = v23[1];
      v26 = (void *)v23[2];
      v27 = (void *)v23[3];
      v28 = (void *)v23[4];
      v29 = (void *)v23[5];
      v30 = v23[6];
      sub_2378DD44C(*v23, v25, v26, v27, v28, v29, v30, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99, v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v92,
        v91,
        v90,
        v89,
        v88,
        v87,
        v86,
        v85,
        v84,
        v83,
        v82,
        v81,
        v80,
        v79,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72);
      *v22 = v24;
      v22[1] = v25;
      v22[2] = (uint64_t)v26;
      v22[3] = (uint64_t)v27;
      v22[4] = (uint64_t)v28;
      v22[5] = (uint64_t)v29;
      v22[6] = v30;
      v6 = v74;
      v22[7] = v109;
      v22[8] = (uint64_t)v108;
      v22[9] = (uint64_t)v107;
      v22[10] = (uint64_t)v106;
      v22[11] = v105;
      v22[12] = v104;
      v22[13] = v103;
      v22[14] = v102;
      v22[15] = v101;
      v22[16] = v100;
      v22[17] = v99;
      v22[18] = v98;
      v22[19] = v97;
      v22[20] = (uint64_t)v96;
      v22[21] = v95;
      v22[22] = v94;
      v22[23] = v93;
      v22[24] = v92;
      v22[25] = v91;
      v22[26] = v90;
      v22[27] = (uint64_t)v89;
      v22[28] = (uint64_t)v88;
      v22[29] = v87;
      v22[30] = v86;
      v22[31] = v85;
      v22[32] = v84;
      v22[33] = v83;
      v22[34] = v82;
      v22[35] = v81;
      v22[36] = v80;
      v22[37] = v79;
      v22[38] = v48;
      v22[39] = v49;
      v22[40] = v50;
      v22[41] = v51;
      v22[42] = v52;
      v22[43] = v53;
      v22[44] = v54;
      v22[45] = v55;
      v22[46] = v56;
      v22[47] = v57;
      v22[48] = v58;
      v22[49] = v59;
      v22[50] = v60;
      v22[51] = v61;
      v22[52] = v62;
      v22[53] = v63;
      v22[54] = v64;
      v22[55] = v65;
      v22[56] = v66;
      v22[57] = v67;
      v22[58] = v68;
      v22[59] = v69;
      v22[60] = v70;
      v22[61] = v71;
      v22[62] = v72;
      v22[63] = v73;
      v31 = *(int *)(v76 + 24);
      v32 = &v77[v31];
      v33 = &v75[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
      v35 = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      *((_QWORD *)v32 + 5) = v35;
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v77, 0, 1, v76);
    }
    v37 = v6[10];
    v38 = v6[11];
    v39 = (_QWORD *)(a1 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = a1 + v38;
    v43 = (uint64_t)a2 + v38;
    v44 = sub_237A86594();
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    v45(v42, v43, v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
    *(_QWORD *)(v42 + *(int *)(v46 + 52)) = *(_QWORD *)(v43 + *(int *)(v46 + 52));
  }
  return a1;
}

uint64_t destroy for Slot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (*(_QWORD *)(a1 + 40) >= 2uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for Instrument();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 20);
    v25 = *(_OWORD *)(v7 + 464);
    v26 = *(_OWORD *)(v7 + 480);
    v23 = *(_OWORD *)(v7 + 432);
    v24 = *(_OWORD *)(v7 + 448);
    v21 = *(_OWORD *)(v7 + 400);
    v22 = *(_OWORD *)(v7 + 416);
    v19 = *(_OWORD *)(v7 + 368);
    v20 = *(_OWORD *)(v7 + 384);
    v17 = *(_OWORD *)(v7 + 336);
    v18 = *(_OWORD *)(v7 + 352);
    v15 = *(_OWORD *)(v7 + 304);
    v16 = *(_OWORD *)(v7 + 320);
    v13 = *(_OWORD *)(v7 + 272);
    v14 = *(_OWORD *)(v7 + 288);
    v11 = *(_OWORD *)(v7 + 240);
    v12 = *(_OWORD *)(v7 + 256);
    sub_2378DE7AC(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(void **)(v7 + 16), *(void **)(v7 + 24), *(void **)(v7 + 32), *(void **)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(void **)(v7 + 64), *(void **)(v7 + 72), *(void **)(v7 + 80), *(_QWORD *)(v7 + 88), *(_QWORD *)(v7 + 96), *(_QWORD *)(v7 + 104), *(_QWORD *)(v7 + 112), *(_QWORD *)(v7 + 120), *(_QWORD *)(v7 + 128), *(_QWORD *)(v7 + 136), *(_QWORD *)(v7 + 144),
      *(_QWORD *)(v7 + 152),
      *(void **)(v7 + 160),
      *(_QWORD *)(v7 + 168),
      *(_QWORD *)(v7 + 176),
      *(_QWORD *)(v7 + 184),
      *(_QWORD *)(v7 + 192),
      *(_QWORD *)(v7 + 200),
      *(_QWORD *)(v7 + 208),
      *(void **)(v7 + 216),
      *(void **)(v7 + 224),
      *(_QWORD *)(v7 + 232),
      v11,
      *((uint64_t *)&v11 + 1),
      v12,
      *((uint64_t *)&v12 + 1),
      v13,
      *((uint64_t *)&v13 + 1),
      v14,
      *((uint64_t *)&v14 + 1),
      v15,
      SBYTE8(v15),
      v16,
      *((uint64_t *)&v16 + 1),
      v17,
      *((uint64_t *)&v17 + 1),
      v18,
      SBYTE8(v18),
      v19,
      *((uint64_t *)&v19 + 1),
      v20,
      *((uint64_t *)&v20 + 1),
      v21,
      SBYTE8(v21),
      v22,
      *((uint64_t *)&v22 + 1),
      v23,
      *((uint64_t *)&v23 + 1),
      v24,
      SBYTE8(v24),
      v25,
      *((uint64_t *)&v25 + 1),
      v26,
      *((uint64_t *)&v26 + 1),
      *(_QWORD *)(v7 + 496));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 44);
  v9 = sub_237A86594();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  uint64_t v107;

  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  if (v6 >= 2)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v10 = a3[9];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v13 = type metadata accessor for Instrument();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&v11[*(int *)(v18 + 52)] = *(_QWORD *)&v12[*(int *)(v18 + 52)];
    v19 = *(int *)(v13 + 20);
    v20 = (uint64_t *)&v11[v19];
    v21 = (uint64_t *)&v12[v19];
    v76 = v14;
    v75 = a3;
    v74 = v11;
    v73 = v13;
    v72 = v12;
    v106 = (void *)v21[8];
    v107 = v21[7];
    v104 = (void *)v21[10];
    v105 = (void *)v21[9];
    v102 = v21[12];
    v103 = v21[11];
    v100 = v21[14];
    v101 = v21[13];
    v98 = v21[16];
    v99 = v21[15];
    v96 = v21[18];
    v97 = v21[17];
    v94 = (void *)v21[20];
    v95 = v21[19];
    v92 = v21[22];
    v93 = v21[21];
    v90 = v21[24];
    v91 = v21[23];
    v88 = v21[26];
    v89 = v21[25];
    v87 = (void *)v21[27];
    v86 = (void *)v21[28];
    v85 = v21[29];
    v84 = v21[30];
    v83 = v21[31];
    v82 = v21[32];
    v81 = v21[33];
    v80 = v21[34];
    v79 = v21[35];
    v78 = v21[36];
    v77 = v21[37];
    v46 = v21[38];
    v47 = v21[39];
    v48 = v21[40];
    v49 = v21[41];
    v50 = v21[42];
    v51 = v21[43];
    v52 = v21[44];
    v53 = v21[45];
    v54 = v21[46];
    v55 = v21[47];
    v56 = v21[48];
    v57 = v21[49];
    v58 = v21[50];
    v59 = v21[51];
    v60 = v21[52];
    v61 = v21[53];
    v62 = v21[54];
    v63 = v21[55];
    v64 = v21[56];
    v65 = v21[57];
    v66 = v21[58];
    v67 = v21[59];
    v68 = v21[60];
    v69 = v21[61];
    v70 = v21[62];
    v71 = v21[63];
    v22 = *v21;
    v23 = v21[1];
    v24 = (void *)v21[2];
    v25 = (void *)v21[3];
    v26 = (void *)v21[4];
    v27 = (void *)v21[5];
    v28 = v21[6];
    sub_2378DD44C(*v21, v23, v24, v25, v26, v27, v28, v107, v106, v105, v104, v103, v102, v101, v100, v99, v98, v97, v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70);
    *v20 = v22;
    v20[1] = v23;
    v20[2] = (uint64_t)v24;
    v20[3] = (uint64_t)v25;
    a3 = v75;
    v20[4] = (uint64_t)v26;
    v20[5] = (uint64_t)v27;
    v20[6] = v28;
    v20[7] = v107;
    v20[8] = (uint64_t)v106;
    v20[9] = (uint64_t)v105;
    v20[10] = (uint64_t)v104;
    v20[11] = v103;
    v20[12] = v102;
    v20[13] = v101;
    v20[14] = v100;
    v20[15] = v99;
    v20[16] = v98;
    v20[17] = v97;
    v20[18] = v96;
    v20[19] = v95;
    v20[20] = (uint64_t)v94;
    v20[21] = v93;
    v20[22] = v92;
    v20[23] = v91;
    v20[24] = v90;
    v20[25] = v89;
    v20[26] = v88;
    v20[27] = (uint64_t)v87;
    v20[28] = (uint64_t)v86;
    v20[29] = v85;
    v20[30] = v84;
    v20[31] = v83;
    v20[32] = v82;
    v20[33] = v81;
    v20[34] = v80;
    v20[35] = v79;
    v20[36] = v78;
    v20[37] = v77;
    v20[38] = v46;
    v20[39] = v47;
    v20[40] = v48;
    v20[41] = v49;
    v20[42] = v50;
    v20[43] = v51;
    v20[44] = v52;
    v20[45] = v53;
    v20[46] = v54;
    v20[47] = v55;
    v20[48] = v56;
    v20[49] = v57;
    v20[50] = v58;
    v20[51] = v59;
    v20[52] = v60;
    v20[53] = v61;
    v20[54] = v62;
    v20[55] = v63;
    v20[56] = v64;
    v20[57] = v65;
    v20[58] = v66;
    v20[59] = v67;
    v20[60] = v68;
    v20[61] = v69;
    v20[62] = v70;
    v20[63] = v71;
    v29 = *(int *)(v73 + 24);
    v30 = &v74[v29];
    v31 = &v72[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    *((_WORD *)v30 + 12) = *((_WORD *)v31 + 12);
    v33 = *((_QWORD *)v31 + 5);
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    *((_QWORD *)v30 + 5) = v33;
    v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v74, 0, 1, v73);
  }
  v35 = a3[10];
  v36 = a3[11];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a1 + v36;
  v41 = a2 + v36;
  v42 = sub_237A86594();
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v40 + *(int *)(v44 + 52)) = *(_QWORD *)(v41 + *(int *)(v44 + 52));
  return a1;
}

_QWORD *assignWithCopy for Slot(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  int v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  void *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  unint64_t v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;

  v5 = a2[5];
  if (a1[5] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2378BC024((uint64_t)a1, &qword_256823068);
      v9 = *((_OWORD *)a2 + 1);
      v8 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v9;
      *((_OWORD *)a1 + 2) = v8;
    }
  }
  else if (v5 >= 2)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)a2;
    v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    *(_OWORD *)a1 = v6;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Instrument();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v11;
  v17 = v15(v11, 1, v13);
  v18 = v12;
  v19 = v15(v12, 1, v13);
  if (!v17)
  {
    if (!v19)
    {
      v46 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v16, v12, v46);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v16[*(int *)(v47 + 52)] = *(_QWORD *)&v12[*(int *)(v47 + 52)];
      v48 = v13;
      v49 = *(int *)(v13 + 20);
      v50 = &v16[v49];
      v51 = (uint64_t *)&v12[v49];
      v210 = v51[1];
      v212 = *v51;
      v206 = (void *)v51[3];
      v208 = (void *)v51[2];
      v202 = (void *)v51[5];
      v204 = (void *)v51[4];
      v198 = v51[7];
      v200 = v51[6];
      v194 = (void *)v51[9];
      v196 = (void *)v51[8];
      v190 = v51[11];
      v192 = (void *)v51[10];
      v188 = v51[12];
      v186 = v51[13];
      v184 = v51[14];
      v182 = v51[15];
      v180 = v51[16];
      v178 = v51[17];
      v176 = v51[18];
      v174 = v51[19];
      v172 = (void *)v51[20];
      v170 = v51[21];
      v168 = v51[22];
      v166 = v51[23];
      v164 = v51[24];
      v162 = v51[25];
      v160 = v51[26];
      v158 = (void *)v51[27];
      v156 = (void *)v51[28];
      v154 = v51[29];
      v152 = v51[30];
      v150 = v51[31];
      v148 = v51[32];
      v146 = v51[33];
      v144 = v51[34];
      v142 = v51[35];
      v140 = v51[36];
      v139 = v51[37];
      v107 = v51[38];
      v53 = v51[39];
      v52 = v51[40];
      v109 = v51[41];
      v111 = v51[42];
      v113 = v51[43];
      v115 = v51[44];
      v117 = v51[45];
      v119 = v51[46];
      v54 = v51[47];
      v121 = v51[48];
      v218 = v18;
      v55 = v51[49];
      v123 = v51[50];
      v216 = v16;
      v56 = v51[51];
      v125 = v51[52];
      v58 = v51[53];
      v57 = v51[54];
      v214 = v48;
      v127 = v51[55];
      v129 = v51[56];
      v131 = v51[57];
      v133 = v51[58];
      v134 = v51[59];
      v135 = v51[60];
      v136 = v51[61];
      v137 = v51[62];
      v138 = v51[63];
      sub_2378DD44C(*v51, v210, v208, v206, v204, v202, v200, v198, v196, v194, v192, v190, v188, v186, v184, v182, v180, v178, v176,
        v174,
        v172,
        v170,
        v168,
        v166,
        v164,
        v162,
        v160,
        v158,
        v156,
        v154,
        v152,
        v150,
        v148,
        v146,
        v144,
        v142,
        v140,
        v139,
        v107,
        v53,
        v52,
        v109,
        v111,
        v113,
        v115,
        v117,
        v119,
        v54,
        v121,
        v55,
        v123,
        v56,
        v125,
        v58,
        v57,
        v127,
        v129,
        v131,
        v133,
        v134,
        v135,
        v136,
        v137);
      v59 = *(_QWORD *)v50;
      v60 = *((_QWORD *)v50 + 1);
      *(_QWORD *)v50 = v212;
      *((_QWORD *)v50 + 1) = v210;
      v61 = (void *)*((_QWORD *)v50 + 2);
      v62 = (void *)*((_QWORD *)v50 + 3);
      *((_QWORD *)v50 + 2) = v208;
      *((_QWORD *)v50 + 3) = v206;
      v63 = (void *)*((_QWORD *)v50 + 4);
      v64 = (void *)*((_QWORD *)v50 + 5);
      *((_QWORD *)v50 + 4) = v204;
      *((_QWORD *)v50 + 5) = v202;
      v65 = *((_QWORD *)v50 + 6);
      v66 = *((_QWORD *)v50 + 7);
      *((_QWORD *)v50 + 6) = v200;
      *((_QWORD *)v50 + 7) = v198;
      v67 = *((_OWORD *)v50 + 4);
      v68 = *((_OWORD *)v50 + 5);
      *((_QWORD *)v50 + 8) = v196;
      *((_QWORD *)v50 + 9) = v194;
      *((_QWORD *)v50 + 10) = v192;
      *((_QWORD *)v50 + 11) = v190;
      v69 = *((_OWORD *)v50 + 6);
      v70 = *((_OWORD *)v50 + 7);
      *((_QWORD *)v50 + 12) = v188;
      *((_QWORD *)v50 + 13) = v186;
      *((_QWORD *)v50 + 14) = v184;
      *((_QWORD *)v50 + 15) = v182;
      v71 = *((_OWORD *)v50 + 8);
      v72 = *((_OWORD *)v50 + 9);
      *((_QWORD *)v50 + 16) = v180;
      *((_QWORD *)v50 + 17) = v178;
      *((_QWORD *)v50 + 18) = v176;
      *((_QWORD *)v50 + 19) = v174;
      v73 = *((_OWORD *)v50 + 10);
      v74 = *((_OWORD *)v50 + 11);
      *((_QWORD *)v50 + 20) = v172;
      *((_QWORD *)v50 + 21) = v170;
      *((_QWORD *)v50 + 22) = v168;
      *((_QWORD *)v50 + 23) = v166;
      v75 = *((_OWORD *)v50 + 12);
      v76 = *((_OWORD *)v50 + 13);
      *((_QWORD *)v50 + 24) = v164;
      *((_QWORD *)v50 + 25) = v162;
      *((_QWORD *)v50 + 26) = v160;
      *((_QWORD *)v50 + 27) = v158;
      v77 = *((_OWORD *)v50 + 14);
      v78 = *((_OWORD *)v50 + 15);
      *((_QWORD *)v50 + 28) = v156;
      *((_QWORD *)v50 + 29) = v154;
      *((_QWORD *)v50 + 30) = v152;
      *((_QWORD *)v50 + 31) = v150;
      v79 = *((_OWORD *)v50 + 16);
      v80 = *((_OWORD *)v50 + 17);
      *((_QWORD *)v50 + 32) = v148;
      *((_QWORD *)v50 + 33) = v146;
      *((_QWORD *)v50 + 34) = v144;
      *((_QWORD *)v50 + 35) = v142;
      v81 = *((_OWORD *)v50 + 18);
      v82 = *((_OWORD *)v50 + 19);
      *((_QWORD *)v50 + 36) = v140;
      *((_QWORD *)v50 + 37) = v139;
      *((_QWORD *)v50 + 38) = v107;
      *((_QWORD *)v50 + 39) = v53;
      v83 = *((_OWORD *)v50 + 20);
      v84 = *((_OWORD *)v50 + 21);
      *((_QWORD *)v50 + 40) = v52;
      *((_QWORD *)v50 + 41) = v109;
      *((_QWORD *)v50 + 42) = v111;
      *((_QWORD *)v50 + 43) = v113;
      v85 = *((_OWORD *)v50 + 22);
      v86 = *((_OWORD *)v50 + 23);
      *((_QWORD *)v50 + 44) = v115;
      *((_QWORD *)v50 + 45) = v117;
      *((_QWORD *)v50 + 46) = v119;
      *((_QWORD *)v50 + 47) = v54;
      v87 = *((_OWORD *)v50 + 24);
      v88 = *((_OWORD *)v50 + 25);
      *((_QWORD *)v50 + 48) = v121;
      *((_QWORD *)v50 + 49) = v55;
      *((_QWORD *)v50 + 50) = v123;
      *((_QWORD *)v50 + 51) = v56;
      v89 = *((_OWORD *)v50 + 26);
      v90 = *((_OWORD *)v50 + 27);
      *((_QWORD *)v50 + 52) = v125;
      *((_QWORD *)v50 + 53) = v58;
      *((_QWORD *)v50 + 54) = v57;
      *((_QWORD *)v50 + 55) = v127;
      v91 = *((_OWORD *)v50 + 28);
      v92 = *((_OWORD *)v50 + 29);
      *((_QWORD *)v50 + 56) = v129;
      *((_QWORD *)v50 + 57) = v131;
      *((_QWORD *)v50 + 58) = v133;
      *((_QWORD *)v50 + 59) = v134;
      v93 = *((_OWORD *)v50 + 30);
      *((_QWORD *)v50 + 60) = v135;
      *((_QWORD *)v50 + 61) = v136;
      v94 = *((_QWORD *)v50 + 62);
      *((_QWORD *)v50 + 62) = v137;
      *((_QWORD *)v50 + 63) = v138;
      sub_2378DE7AC(v59, v60, v61, v62, v63, v64, v65, v66, (void *)v67, *((void **)&v67 + 1), (void *)v68, *((unint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        (void *)v73,
        *((uint64_t *)&v73 + 1),
        v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76,
        *((void **)&v76 + 1),
        (void *)v77,
        *((uint64_t *)&v77 + 1),
        v78,
        *((uint64_t *)&v78 + 1),
        v79,
        *((uint64_t *)&v79 + 1),
        v80,
        *((uint64_t *)&v80 + 1),
        v81,
        *((uint64_t *)&v81 + 1),
        v82,
        SBYTE8(v82),
        v83,
        *((uint64_t *)&v83 + 1),
        v84,
        *((uint64_t *)&v84 + 1),
        v85,
        SBYTE8(v85),
        v86,
        *((uint64_t *)&v86 + 1),
        v87,
        *((uint64_t *)&v87 + 1),
        v88,
        SBYTE8(v88),
        v89,
        *((uint64_t *)&v89 + 1),
        v90,
        *((uint64_t *)&v90 + 1),
        v91,
        SBYTE8(v91),
        v92,
        *((uint64_t *)&v92 + 1),
        v93,
        *((uint64_t *)&v93 + 1),
        v94);
      v95 = *(int *)(v214 + 24);
      v96 = &v216[v95];
      v97 = &v218[v95];
      *(_QWORD *)&v216[v95] = *(_QWORD *)&v218[v95];
      swift_retain();
      swift_release();
      *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
      *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v96[24] = v97[24];
      v96[25] = v97[25];
      *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
      *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_2378DE6A4((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v16, v12, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_14;
  }
  v20 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v12, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v215 = v16;
  v217 = v12;
  *(_QWORD *)&v16[*(int *)(v21 + 52)] = *(_QWORD *)&v12[*(int *)(v21 + 52)];
  v213 = v13;
  v22 = *(int *)(v13 + 20);
  v23 = (uint64_t *)&v16[v22];
  v24 = (uint64_t *)&v12[v22];
  v149 = v14;
  v209 = (void *)v24[8];
  v211 = v24[7];
  v205 = (void *)v24[10];
  v207 = (void *)v24[9];
  v201 = v24[12];
  v203 = v24[11];
  v197 = v24[14];
  v199 = v24[13];
  v193 = v24[16];
  v195 = v24[15];
  v189 = v24[18];
  v191 = v24[17];
  v187 = v24[19];
  v185 = (void *)v24[20];
  v183 = v24[21];
  v181 = v24[22];
  v179 = v24[23];
  v177 = v24[24];
  v175 = v24[25];
  v173 = v24[26];
  v171 = (void *)v24[27];
  v169 = (void *)v24[28];
  v167 = v24[29];
  v165 = v24[30];
  v163 = v24[31];
  v161 = v24[32];
  v159 = v24[33];
  v157 = v24[34];
  v155 = v24[35];
  v153 = v24[36];
  v151 = v24[37];
  v98 = v24[38];
  v99 = v24[39];
  v100 = v24[40];
  v101 = v24[41];
  v102 = v24[42];
  v103 = v24[43];
  v104 = v24[44];
  v105 = v24[45];
  v106 = v24[46];
  v108 = v24[47];
  v110 = v24[48];
  v112 = v24[49];
  v114 = v24[50];
  v116 = v24[51];
  v118 = v24[52];
  v120 = v24[53];
  v122 = v24[54];
  v124 = v24[55];
  v126 = v24[56];
  v128 = v24[57];
  v130 = v24[58];
  v132 = v24[59];
  v141 = v24[60];
  v143 = v24[61];
  v145 = v24[62];
  v147 = v24[63];
  v25 = *v24;
  v26 = v24[1];
  v27 = (void *)v24[2];
  v28 = (void *)v24[3];
  v29 = (void *)v24[4];
  v30 = (void *)v24[5];
  v31 = v24[6];
  sub_2378DD44C(*v24, v26, v27, v28, v29, v30, v31, v211, v209, v207, v205, v203, v201, v199, v197, v195, v193, v191, v189,
    v187,
    v185,
    v183,
    v181,
    v179,
    v177,
    v175,
    v173,
    v171,
    v169,
    v167,
    v165,
    v163,
    v161,
    v159,
    v157,
    v155,
    v153,
    v151,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v108,
    *((_OWORD *)v24 + 24),
    v112,
    v114,
    v116,
    v118,
    v120,
    v122,
    v124,
    v126,
    v128,
    v130,
    v132,
    v141,
    v143,
    v145);
  *v23 = v25;
  v23[1] = v26;
  v23[2] = (uint64_t)v27;
  v23[3] = (uint64_t)v28;
  v23[4] = (uint64_t)v29;
  v23[5] = (uint64_t)v30;
  v23[6] = v31;
  v23[7] = v211;
  v23[8] = (uint64_t)v209;
  v23[9] = (uint64_t)v207;
  v23[10] = (uint64_t)v205;
  v23[11] = v203;
  v23[12] = v201;
  v23[13] = v199;
  v23[14] = v197;
  v23[15] = v195;
  v23[16] = v193;
  v23[17] = v191;
  v23[18] = v189;
  v23[19] = v187;
  v23[20] = (uint64_t)v185;
  v23[21] = v183;
  v23[22] = v181;
  v23[23] = v179;
  v23[24] = v177;
  v23[25] = v175;
  v23[26] = v173;
  v23[27] = (uint64_t)v171;
  v23[28] = (uint64_t)v169;
  v23[29] = v167;
  v23[30] = v165;
  v23[31] = v163;
  v23[32] = v161;
  v23[33] = v159;
  v23[34] = v157;
  v23[35] = v155;
  v23[36] = v153;
  v23[37] = v151;
  v23[38] = v98;
  v23[39] = v99;
  v23[40] = v100;
  v23[41] = v101;
  v23[42] = v102;
  v23[43] = v103;
  v23[44] = v104;
  v23[45] = v105;
  v23[46] = v106;
  v23[47] = v108;
  v23[48] = v110;
  v23[49] = v112;
  v23[50] = v114;
  v23[51] = v116;
  v23[52] = v118;
  v23[53] = v120;
  v23[54] = v122;
  v23[55] = v124;
  v23[56] = v126;
  v23[57] = v128;
  v23[58] = v130;
  v23[59] = v132;
  v23[60] = v141;
  v23[61] = v143;
  v23[62] = v145;
  v23[63] = v147;
  v32 = *(int *)(v213 + 24);
  v33 = &v215[v32];
  v34 = &v217[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
  v33[24] = v34[24];
  v33[25] = v34[25];
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
  v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v215, 0, 1, v213);
LABEL_14:
  v37 = a3[10];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[11];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)&v41[*(int *)(v44 + 52)] = *(_QWORD *)&v42[*(int *)(v44 + 52)];
  return a1;
}

uint64_t initializeWithTake for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v9 = a3[9];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v12 = type metadata accessor for Instrument();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&v10[*(int *)(v16 + 52)] = *(_QWORD *)&v11[*(int *)(v16 + 52)];
    memcpy(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], 0x200uLL);
    v17 = *(int *)(v12 + 24);
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v21 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v22 + *(int *)(v25 + 52)) = *(_QWORD *)(v23 + *(int *)(v25 + 52));
  return a1;
}

uint64_t assignWithTake for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  unint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;

  if (*(_QWORD *)(a1 + 40) < 2uLL)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 40);
  if (v6 < 2)
  {
    sub_2378BC024(a1, &qword_256823068);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for Instrument();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v36 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v11, v12, v36);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v11[*(int *)(v37 + 52)] = *(_QWORD *)&v12[*(int *)(v37 + 52)];
      v38 = *(int *)(v13 + 20);
      v39 = &v11[v38];
      v40 = &v12[v38];
      v41 = *(_QWORD *)v39;
      v42 = *((_QWORD *)v39 + 1);
      v43 = (void *)*((_QWORD *)v39 + 2);
      v44 = (void *)*((_QWORD *)v39 + 3);
      v45 = (void *)*((_QWORD *)v39 + 4);
      v46 = (void *)*((_QWORD *)v39 + 5);
      v47 = *((_QWORD *)v39 + 6);
      v48 = *((_QWORD *)v39 + 7);
      v49 = *((_OWORD *)v39 + 4);
      v50 = *((_OWORD *)v39 + 5);
      v51 = *((_OWORD *)v39 + 6);
      v52 = *((_OWORD *)v39 + 7);
      v53 = *((_OWORD *)v39 + 8);
      v54 = *((_OWORD *)v39 + 9);
      v55 = *((_OWORD *)v39 + 10);
      v56 = *((_OWORD *)v39 + 11);
      v57 = *((_OWORD *)v39 + 12);
      v58 = *((_OWORD *)v39 + 13);
      v59 = *((_OWORD *)v39 + 14);
      v60 = *((_OWORD *)v39 + 15);
      v61 = *((_OWORD *)v39 + 16);
      v62 = *((_OWORD *)v39 + 17);
      v63 = *((_OWORD *)v39 + 18);
      v64 = *((_OWORD *)v39 + 19);
      v65 = *((_OWORD *)v39 + 20);
      v66 = *((_OWORD *)v39 + 21);
      v67 = *((_OWORD *)v39 + 22);
      v68 = *((_OWORD *)v39 + 23);
      v69 = *((_OWORD *)v39 + 24);
      v70 = *((_OWORD *)v39 + 25);
      v71 = *((_OWORD *)v39 + 26);
      v72 = *((_OWORD *)v39 + 27);
      v73 = *((_OWORD *)v39 + 28);
      v74 = *((_OWORD *)v39 + 29);
      v75 = *((_OWORD *)v39 + 30);
      v76 = *((_QWORD *)v39 + 62);
      v77 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v77;
      v78 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v78;
      v79 = *((_OWORD *)v40 + 5);
      *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
      *((_OWORD *)v39 + 5) = v79;
      v80 = *((_OWORD *)v40 + 7);
      *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
      *((_OWORD *)v39 + 7) = v80;
      v81 = *((_OWORD *)v40 + 9);
      *((_OWORD *)v39 + 8) = *((_OWORD *)v40 + 8);
      *((_OWORD *)v39 + 9) = v81;
      v82 = *((_OWORD *)v40 + 11);
      *((_OWORD *)v39 + 10) = *((_OWORD *)v40 + 10);
      *((_OWORD *)v39 + 11) = v82;
      v83 = *((_OWORD *)v40 + 13);
      *((_OWORD *)v39 + 12) = *((_OWORD *)v40 + 12);
      *((_OWORD *)v39 + 13) = v83;
      v84 = *((_OWORD *)v40 + 15);
      *((_OWORD *)v39 + 14) = *((_OWORD *)v40 + 14);
      *((_OWORD *)v39 + 15) = v84;
      v85 = *((_OWORD *)v40 + 17);
      *((_OWORD *)v39 + 16) = *((_OWORD *)v40 + 16);
      *((_OWORD *)v39 + 17) = v85;
      v86 = *((_OWORD *)v40 + 19);
      *((_OWORD *)v39 + 18) = *((_OWORD *)v40 + 18);
      *((_OWORD *)v39 + 19) = v86;
      v87 = *((_OWORD *)v40 + 21);
      *((_OWORD *)v39 + 20) = *((_OWORD *)v40 + 20);
      *((_OWORD *)v39 + 21) = v87;
      v88 = *((_OWORD *)v40 + 23);
      *((_OWORD *)v39 + 22) = *((_OWORD *)v40 + 22);
      *((_OWORD *)v39 + 23) = v88;
      v89 = *((_OWORD *)v40 + 25);
      *((_OWORD *)v39 + 24) = *((_OWORD *)v40 + 24);
      *((_OWORD *)v39 + 25) = v89;
      v90 = *((_OWORD *)v40 + 27);
      *((_OWORD *)v39 + 26) = *((_OWORD *)v40 + 26);
      *((_OWORD *)v39 + 27) = v90;
      v91 = *((_OWORD *)v40 + 29);
      *((_OWORD *)v39 + 28) = *((_OWORD *)v40 + 28);
      *((_OWORD *)v39 + 29) = v91;
      v92 = *((_OWORD *)v40 + 31);
      *((_OWORD *)v39 + 30) = *((_OWORD *)v40 + 30);
      *((_OWORD *)v39 + 31) = v92;
      sub_2378DE7AC(v41, v42, v43, v44, v45, v46, v47, v48, (void *)v49, *((void **)&v49 + 1), (void *)v50, *((unint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54,
        *((uint64_t *)&v54 + 1),
        (void *)v55,
        *((uint64_t *)&v55 + 1),
        v56,
        *((uint64_t *)&v56 + 1),
        v57,
        *((uint64_t *)&v57 + 1),
        v58,
        *((void **)&v58 + 1),
        (void *)v59,
        *((uint64_t *)&v59 + 1),
        v60,
        *((uint64_t *)&v60 + 1),
        v61,
        *((uint64_t *)&v61 + 1),
        v62,
        *((uint64_t *)&v62 + 1),
        v63,
        *((uint64_t *)&v63 + 1),
        v64,
        SBYTE8(v64),
        v65,
        *((uint64_t *)&v65 + 1),
        v66,
        *((uint64_t *)&v66 + 1),
        v67,
        SBYTE8(v67),
        v68,
        *((uint64_t *)&v68 + 1),
        v69,
        *((uint64_t *)&v69 + 1),
        v70,
        SBYTE8(v70),
        v71,
        *((uint64_t *)&v71 + 1),
        v72,
        *((uint64_t *)&v72 + 1),
        v73,
        SBYTE8(v73),
        v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76);
      v93 = *(int *)(v13 + 24);
      v94 = &v11[v93];
      v95 = &v12[v93];
      *(_QWORD *)v94 = *(_QWORD *)v95;
      swift_release();
      v96 = *((_QWORD *)v95 + 2);
      *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
      *((_QWORD *)v94 + 2) = v96;
      swift_bridgeObjectRelease();
      v94[24] = v95[24];
      v94[25] = v95[25];
      v97 = *((_QWORD *)v95 + 5);
      *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
      *((_QWORD *)v94 + 5) = v97;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_2378DE6A4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  v18 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)&v11[*(int *)(v19 + 52)] = *(_QWORD *)&v12[*(int *)(v19 + 52)];
  memcpy(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], 0x200uLL);
  v20 = *(int *)(v13 + 24);
  v21 = &v11[v20];
  v22 = &v12[v20];
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_12:
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v31 + *(int *)(v34 + 52)) = *(_QWORD *)(v32 + *(int *)(v34 + 52));
  return a1;
}

uint64_t getEnumTagSinglePayload for Slot()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23795F4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 128);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Slot()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23795F590(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 128) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23795F634()
{
  unint64_t v0;
  unint64_t v1;

  sub_23795F6F0();
  if (v0 <= 0x3F)
  {
    sub_23795F744();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23795F6F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2568230D8)
  {
    type metadata accessor for Instrument();
    v0 = sub_237A87E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2568230D8);
  }
}

uint64_t sub_23795F744()
{
  uint64_t result;

  result = qword_2568230E0;
  if (!qword_2568230E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568202F8);
    sub_23795F7EC();
    sub_23795F848(&qword_256822A08, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_23795F848(&qword_256820310, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    type metadata accessor for SkipEncode();
  }
  return result;
}

unint64_t sub_23795F7EC()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_2568230E8[0];
  if (!qword_2568230E8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568202F8);
    v2 = &protocol witness table for UUID;
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, qword_2568230E8);
  }
  return result;
}

uint64_t sub_23795F848(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568202F8);
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v7[0] = sub_23786FAA0(&qword_256820318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v7[1] = sub_23786FAA0(&qword_256820320, v6, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t destroy for Slot.Style(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for Slot.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for Slot.Style(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Slot.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 40) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 40);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Slot.Style(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Slot.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2 + 1;
  }
  return result;
}

uint64_t sub_23795FB74(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_23795FB8C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 40) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style()
{
  return &type metadata for Slot.Style;
}

uint64_t storeEnumTagSinglePayload for Slot.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23795FC1C + 4 * byte_237A990B3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23795FC50 + 4 * byte_237A990AE[v4]))();
}

uint64_t sub_23795FC50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FC58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23795FC60);
  return result;
}

uint64_t sub_23795FC6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23795FC74);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23795FC78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FC80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Slot.CodingKeys()
{
  return &type metadata for Slot.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Slot.Style.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23795FCE8 + 4 * byte_237A990BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23795FD1C + 4 * byte_237A990B8[v4]))();
}

uint64_t sub_23795FD1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FD24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23795FD2CLL);
  return result;
}

uint64_t sub_23795FD38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23795FD40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23795FD44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FD4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style.CodingKeys()
{
  return &type metadata for Slot.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for Slot.Style.CircularCodingKeys()
{
  return &type metadata for Slot.Style.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for Slot.Style.RectangularCodingKeys()
{
  return &type metadata for Slot.Style.RectangularCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Slot.Style.CornerCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23795FDD4 + 4 * byte_237A990C7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23795FE08 + 4 * byte_237A990C2[v4]))();
}

uint64_t sub_23795FE08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FE10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23795FE18);
  return result;
}

uint64_t sub_23795FE24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23795FE2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23795FE30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23795FE38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style.CornerCodingKeys()
{
  return &type metadata for Slot.Style.CornerCodingKeys;
}

unint64_t sub_23795FE58()
{
  unint64_t result;

  result = qword_256823130;
  if (!qword_256823130)
  {
    result = MEMORY[0x23B81FA98](&unk_237A993F4, &type metadata for Slot.Style.CornerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823130);
  }
  return result;
}

unint64_t sub_23795FEA0()
{
  unint64_t result;

  result = qword_256823138;
  if (!qword_256823138)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9954C, &type metadata for Slot.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823138);
  }
  return result;
}

unint64_t sub_23795FEE8()
{
  unint64_t result;

  result = qword_256823140;
  if (!qword_256823140)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99604, &type metadata for Slot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823140);
  }
  return result;
}

unint64_t sub_23795FF30()
{
  unint64_t result;

  result = qword_256823148;
  if (!qword_256823148)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99574, &type metadata for Slot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823148);
  }
  return result;
}

unint64_t sub_23795FF78()
{
  unint64_t result;

  result = qword_256823150;
  if (!qword_256823150)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9959C, &type metadata for Slot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823150);
  }
  return result;
}

unint64_t sub_23795FFC0()
{
  unint64_t result;

  result = qword_256823158;
  if (!qword_256823158)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9946C, &type metadata for Slot.Style.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823158);
  }
  return result;
}

unint64_t sub_237960008()
{
  unint64_t result;

  result = qword_256823160;
  if (!qword_256823160)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99494, &type metadata for Slot.Style.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823160);
  }
  return result;
}

unint64_t sub_237960050()
{
  unint64_t result;

  result = qword_256823168;
  if (!qword_256823168)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9941C, &type metadata for Slot.Style.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823168);
  }
  return result;
}

unint64_t sub_237960098()
{
  unint64_t result;

  result = qword_256823170;
  if (!qword_256823170)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99444, &type metadata for Slot.Style.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823170);
  }
  return result;
}

unint64_t sub_2379600E0()
{
  unint64_t result;

  result = qword_256823178;
  if (!qword_256823178)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99364, &type metadata for Slot.Style.CornerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823178);
  }
  return result;
}

unint64_t sub_237960128()
{
  unint64_t result;

  result = qword_256823180;
  if (!qword_256823180)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9938C, &type metadata for Slot.Style.CornerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823180);
  }
  return result;
}

unint64_t sub_237960170()
{
  unint64_t result;

  result = qword_256823188;
  if (!qword_256823188)
  {
    result = MEMORY[0x23B81FA98](&unk_237A994BC, &type metadata for Slot.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823188);
  }
  return result;
}

unint64_t sub_2379601B8()
{
  unint64_t result;

  result = qword_256823190;
  if (!qword_256823190)
  {
    result = MEMORY[0x23B81FA98](&unk_237A994E4, &type metadata for Slot.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823190);
  }
  return result;
}

uint64_t sub_2379601FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75676E6174636572 && a2 == 0xEB0000000072616CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72656E726F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_237960360(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646152676E6972 && a2 == 0xEA00000000007375 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6543676E6972 && a2 == 0xEF746E696F507265 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000237AB11F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237960534(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEA00000000006449 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D757274736E69 && a2 == 0xEA0000000000746ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB1210 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t WidgetModel.init(id:isDismissible:dismissedHandler:preferPopoverPresentation:widgetInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v8 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 40) = *(_OWORD *)a7;
  *(_OWORD *)(a8 + 56) = v8;
  v9 = *(_OWORD *)(a7 + 48);
  *(_OWORD *)(a8 + 72) = *(_OWORD *)(a7 + 32);
  v10 = *(_QWORD *)(a7 + 64);
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 17) = a6;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 88) = v9;
  *(_QWORD *)(a8 + 104) = v10;
  *(_BYTE *)(a8 + 112) = (unint64_t)v9 >> 62 == 2;
  return result;
}

uint64_t WidgetModel.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetModel.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetModel.id.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.isDismissible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t WidgetModel.isDismissible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*WidgetModel.isDismissible.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.preferPopoverPresentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t WidgetModel.preferPopoverPresentation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*WidgetModel.preferPopoverPresentation.modify())()
{
  return nullsub_1;
}

uint64_t sub_237960978@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_237961184;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_2378A2BF4(v3);
}

uint64_t sub_2379609DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_237961184;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 24);
  sub_2378A2BF4(v3);
  result = sub_2378A2C04(v7);
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v5;
  return result;
}

uint64_t WidgetModel.dismissedHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_2378A2BF4(v1);
  return v1;
}

uint64_t WidgetModel.dismissedHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2378A2C04(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*WidgetModel.dismissedHandler.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.widgetInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  v8 = v1[11];
  v9 = v1[12];
  v10 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_23788F390(v2, v3, v4, v5, v6, v7, v8);
}

__n128 WidgetModel.widgetInfo.setter(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v7 = *a1;
  v5 = a1[2];
  v6 = a1[1];
  v4 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  sub_2378902DC(v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
  *(_OWORD *)(v1 + 5) = v7;
  *(_OWORD *)(v1 + 7) = v6;
  *(_OWORD *)(v1 + 9) = v5;
  result = v4;
  *(__n128 *)(v1 + 11) = v4;
  v1[13] = v2;
  return result;
}

uint64_t (*WidgetModel.widgetInfo.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.isLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t WidgetModel.isLocal.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = result;
  return result;
}

uint64_t (*WidgetModel.isLocal.modify())()
{
  return nullsub_1;
}

Swift::Double_optional __swiftcall WidgetModel.doubleValue()()
{
  Swift::Bool v0;
  Swift::Double_optional result;

  v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t _s14CarPlayAssetUI11WidgetModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  char v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[4];
  uint64_t v19;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(_OWORD *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 56);
  v6 = *(_OWORD *)(a1 + 72);
  v7 = *(_OWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(unsigned __int8 *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 17);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    v11 = 0;
    if (v2 != v9 || ((v3 ^ v10) & 1) != 0)
      return v11 & 1;
LABEL_9:
    v18[0] = v4;
    v18[1] = v5;
    v18[2] = v6;
    v18[3] = v7;
    v19 = v8;
    _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0((uint64_t)v18);
    return v11 & 1;
  }
  v14 = *(_OWORD *)(a1 + 88);
  v15 = *(_OWORD *)(a1 + 72);
  v16 = *(_OWORD *)(a1 + 56);
  v17 = *(_OWORD *)(a1 + 40);
  v12 = sub_237A8840C();
  v11 = 0;
  if ((v12 & 1) != 0 && ((v2 ^ v9) & 1) == 0)
  {
    v5 = v16;
    v4 = v17;
    v7 = v14;
    v6 = v15;
    if (((v3 ^ v10) & 1) == 0)
      goto LABEL_9;
  }
  return v11 & 1;
}

uint64_t destroy for WidgetModel(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  if (a1[3])
    swift_release();
  return sub_2378902DC(a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
}

uint64_t initializeWithCopy for WidgetModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  sub_23788F390(v8, v9, v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for WidgetModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)(a2 + 24);
  if (!v4)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
LABEL_8:
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v24 = *(_QWORD *)(a2 + 104);
  sub_23788F390(v8, v9, v10, v11, v12, v13, v14);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v24;
  sub_2378902DC(v16, v17, v18, v19, v20, v21, v22);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for WidgetModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  if (!v6)
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
LABEL_8:
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v9;
  sub_2378902DC(v10, v11, v12, v13, v14, v15, v16);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetModel()
{
  return &type metadata for WidgetModel;
}

uint64_t sub_237961160()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237961184()
{
  uint64_t v0;

  return sub_2379D9078(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_237961190(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  char *v21;
  NSObject *v22;
  uint64_t result;
  char *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  os_signpost_id_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  const char *v40;
  char *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v40 = a2;
  v3 = sub_237A86624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for AppearanceLogger();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_237A86654();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v16 = a1 + *(int *)(v9 + 20);
  v42 = *(const char **)v16;
  v17 = *(_BYTE *)(v16 + 16);
  v18 = a1;
  v19 = v8;
  sub_237961F38(v18, (uint64_t)v11);
  sub_237A86618();
  v20 = sub_237A8663C();
  v39 = sub_237A87D88();
  if ((sub_237A87DF4() & 1) == 0)
  {

    sub_237962134((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v36 = v13;
  v37 = v12;
  v38 = v4;
  if ((v17 & 1) != 0)
  {
    v21 = v41;
    if ((unint64_t)v42 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v42 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      if (v42 >> 16 <= 0x10)
      {
        v22 = v20;
        v42 = &v45;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  v21 = v41;
  if (!v42)
  {
LABEL_18:
    result = sub_237962134((uint64_t)v11);
    __break(1u);
    return result;
  }
  v22 = v20;
LABEL_10:
  v24 = v19;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v21, v19, v3);
  v25 = (uint8_t *)swift_slowAlloc();
  v26 = swift_slowAlloc();
  v44 = v26;
  *(_DWORD *)v25 = 136315138;
  v27 = (uint64_t *)&v11[*(int *)(v9 + 24)];
  v28 = v27[1];
  v35 = v3;
  if (v28)
  {
    v29 = *v27;
    v30 = v28;
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v43 = sub_2378FD9C8(v29, v30, &v44);
  sub_237A87E24();
  swift_bridgeObjectRelease();
  sub_237962134((uint64_t)v11);
  v31 = sub_237A8660C();
  _os_signpost_emit_with_name_impl(&dword_237866000, v22, (os_signpost_type_t)v39, v31, v42, v40, v25, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x23B81FB7C](v26, -1, -1);
  MEMORY[0x23B81FB7C](v25, -1, -1);

  v32 = *(void (**)(char *, uint64_t))(v38 + 8);
  v33 = v35;
  v32(v24, v35);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  return ((uint64_t (*)(char *, uint64_t))v32)(v21, v33);
}

uint64_t sub_2379614F4()
{
  return sub_237A86840();
}

uint64_t sub_23796150C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)();
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v4 = v3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823248);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237961F38(v4, (uint64_t)v9);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  sub_237961F80((uint64_t)v9, v14 + v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823250);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, a1, v15);
  v16 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *v16 = sub_237961FC4;
  v16[1] = (uint64_t (*)())v14;
  v16[2] = 0;
  v16[3] = 0;
  sub_237961F38(v4, (uint64_t)v9);
  v17 = swift_allocObject();
  sub_237961F80((uint64_t)v9, v17 + v13);
  sub_2379620AC((uint64_t)v12, a3);
  v18 = (_QWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256823258) + 36));
  *v18 = 0;
  v18[1] = 0;
  v18[2] = sub_237962060;
  v18[3] = v17;
  return sub_2379620F4((uint64_t)v12);
}

uint64_t sub_2379616A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_237A86678();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237A86654();
  __swift_allocate_value_buffer(v4, qword_256870628);
  __swift_project_value_buffer(v4, (uint64_t)qword_256870628);
  if (qword_25681E2F0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256870640);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_237A86630();
}

uint64_t sub_23796178C(uint64_t a1)
{
  return sub_2379617EC(a1, qword_256870640);
}

uint64_t sub_2379617A8(uint64_t a1)
{
  return sub_2379617EC(a1, qword_256870658);
}

uint64_t sub_2379617C4(uint64_t a1)
{
  return sub_2379617EC(a1, qword_256870670);
}

uint64_t sub_2379617EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_237A86678();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_237A8666C();
}

uint64_t sub_237961860()
{
  uint64_t result;

  sub_237961A08();
  result = sub_237A87E00();
  qword_2568231A0 = result;
  return result;
}

id static OS_os_log.runtimeIssuesLog.getter()
{
  if (qword_25681E308 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_2568231A0;
}

void static OS_os_log.runtimeIssuesLog.setter(uint64_t a1)
{
  void *v2;

  if (qword_25681E308 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_2568231A0;
  qword_2568231A0 = a1;

}

uint64_t (*static OS_os_log.runtimeIssuesLog.modify())()
{
  if (qword_25681E308 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess_0;
}

unint64_t sub_237961A08()
{
  unint64_t result;

  result = qword_2568231A8;
  if (!qword_2568231A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568231A8);
  }
  return result;
}

uint64_t *sub_237961A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86654();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_237961AF0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237961B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237961BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237961C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

