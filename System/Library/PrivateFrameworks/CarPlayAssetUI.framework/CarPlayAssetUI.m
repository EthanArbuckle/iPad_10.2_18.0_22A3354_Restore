BOOL static ArcPackageExporter.ScriptVersion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArcPackageExporter.ScriptVersion.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t ArcPackageExporter.ScriptVersion.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

BOOL sub_23786814C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_237868164()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2378681A8()
{
  return sub_237A885E0();
}

uint64_t sub_2378681D0()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t ArcPackageExporter.Destination.hash(into:)()
{
  return sub_237A885E0();
}

BOOL static ArcPackageExporter.Destination.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArcPackageExporter.Destination.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

BOOL sub_237868290(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id ArcPackageExporter.fileWrapper.getter()
{
  id *v0;

  return *v0;
}

void ArcPackageExporter.destination.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

CarPlayAssetUI::ArcPackageExporter __swiftcall ArcPackageExporter.init(fileWrapper:destination:)(NSFileWrapper fileWrapper, CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  objc_class *v5;
  CarPlayAssetUI::ArcPackageExporter::Destination v6;
  objc_class *v7;
  objc_class *v8;
  unint64_t v9;
  Swift::String v10;
  unint64_t v11;
  CarPlayAssetUI::ArcPackageExporter result;

  v3 = v2;
  v4 = *(unsigned __int8 *)destination;
  v5 = fileWrapper.super.isa;
  v8 = v5;
  v9 = (unint64_t)v5;
  if (v4 == 2)
  {
    v10._countAndFlagsBits = 114;
    v10._object = (void *)0xE100000000000000;
    v11 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v10, 1);
    if (!v11)
    {
      v5 = (objc_class *)sub_237A880AC();
      __break(1u);
      goto LABEL_6;
    }
    v9 = v11;

  }
  *(_QWORD *)v3 = v8;
  *(_BYTE *)(v3 + 8) = v4;
  *(_QWORD *)(v3 + 16) = v9;
LABEL_6:
  result.resourcesFileWrapper.super.isa = v7;
  result.fileWrapper.super.isa = v5;
  result.destination = v6;
  return result;
}

void ArcPackageExporter.update(document:oldDocument:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  id v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  id v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  char v120;
  uint64_t v121;
  _BYTE v122[208];
  _QWORD v123[6];
  unsigned __int8 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;

  v3 = *(_QWORD *)(a1 + 16);
  v81 = *(_QWORD *)a1;
  v83 = *(_QWORD *)(a1 + 8);
  v133 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v85 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 48);
  v67 = *(_QWORD *)(a1 + 72);
  v68 = *(_QWORD *)(a1 + 56);
  v64 = *(_QWORD *)(a1 + 88);
  v66 = *(_QWORD *)(a1 + 80);
  v77 = *(_QWORD *)(a1 + 64);
  v78 = *(_QWORD *)(a1 + 96);
  v63 = *(_BYTE *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v44 = *(_OWORD *)(a1 + 120);
  v43 = *(void **)(a1 + 192);
  sub_237870370(a2, (uint64_t)v122, &qword_25681E560);
  v55 = *(id *)v2;
  v54 = *(unsigned __int8 *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  sub_237870370((uint64_t)v122, (uint64_t)v123, &qword_25681E560);
  v53 = v7;
  if (sub_23786A188((uint64_t)v123) == 1)
  {
    v57 = 0;
    v8 = 0;
    v9 = 0;
    v70 = 0;
    v71 = 0;
    v46 = 0;
    v47 = 0;
    v73 = 0;
    v75 = 0;
    v10 = 0;
    v51 = 0;
    v52 = 0;
    v49 = 0;
    v50 = 0;
    v48 = 0;
  }
  else
  {
    v57 = v123[0];
    v8 = v123[1];
    v79 = v123[2];
    v11 = v123[3];
    v46 = v123[4];
    v70 = v123[5];
    v73 = v124;
    v75 = v125;
    v10 = v126;
    v51 = v128;
    v52 = v127;
    v50 = v129;
    v12 = v3;
    v13 = v5;
    v14 = v4;
    v15 = v130;
    v48 = v131;
    v16 = v132;
    swift_bridgeObjectRetain();
    v71 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = v15;
    v4 = v14;
    v5 = v13;
    v3 = v12;
    swift_bridgeObjectRetain();
    v47 = v16;
    swift_bridgeObjectRetain();
    v9 = v79;
  }
  v58 = v8;
  v59 = v3;
  v61 = v4;
  v56 = v10;
  v80 = v9;
  v87 = v81;
  v88 = v83;
  v89 = v3;
  v90 = v133;
  v91 = v85;
  v92 = v4;
  v93 = v5;
  v17 = v67;
  v18 = v78;
  v94 = v68;
  v95 = v77;
  v19 = v66;
  v96 = v67;
  v97 = v66;
  v98 = v64;
  v99 = v78;
  v20 = v63;
  v100 = v63;
  v101 = v6;
  swift_bridgeObjectRetain();
  v21 = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v83;
  v23 = v59;
  v24 = v85;
  v25 = v81;
  v26 = v64;
  v27 = v68;
  v28 = v5;
  v29 = v61;
  v30 = v71;
  v32 = v73;
  v31 = v75;
  if (v54 == 1)
  {
    ArcPackage.removeLocalNotifications()();
    v30 = v71;
    v32 = v73;
    v31 = v75;
    v25 = v87;
    v22 = v88;
    v23 = v89;
    v133 = v90;
    v24 = v91;
    v29 = v92;
    v28 = v93;
    v27 = v94;
    v21 = v95;
    v17 = v96;
    v19 = v97;
    v26 = v98;
    v18 = v99;
    v20 = v100;
    v6 = v101;
  }
  v82 = v25;
  v84 = v22;
  v86 = v24;
  v87 = v25;
  v69 = v27;
  v65 = v26;
  v60 = v23;
  v72 = v30;
  v74 = v32;
  v76 = v31;
  v119 = v55;
  v120 = v54;
  v121 = v53;
  v88 = v22;
  v89 = v23;
  v90 = v133;
  v91 = v24;
  v62 = v29;
  v92 = v29;
  v93 = v28;
  v94 = v27;
  v95 = v21;
  v96 = v17;
  v97 = v19;
  v98 = v26;
  v99 = v18;
  v100 = v20;
  v101 = v6;
  v104 = v57;
  v105 = v58;
  v106 = v80;
  v107 = v30;
  v108 = v46;
  v109 = v70;
  v110 = v32;
  v111 = v31;
  v112 = v56;
  v113 = v52;
  v114 = v51;
  v115 = v50;
  v116 = v49;
  v117 = v48;
  v118 = v47;
  sub_237868CBC((uint64_t)&v87, &v104);
  if (v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23786A1A0(v57, v58);
    return;
  }
  v119 = v55;
  v120 = v54;
  v121 = v53;
  v87 = v82;
  v88 = v84;
  v89 = v60;
  v90 = v133;
  v91 = v86;
  v92 = v62;
  v93 = v28;
  v94 = v69;
  v95 = v21;
  v96 = v17;
  v97 = v19;
  v98 = v65;
  v99 = v18;
  v100 = v20;
  v101 = v6;
  v104 = v57;
  v105 = v58;
  v106 = v80;
  v107 = v72;
  v108 = v46;
  v109 = v70;
  v110 = v74;
  v111 = v76;
  v112 = v56;
  v113 = v52;
  v114 = v51;
  v115 = v50;
  v116 = v49;
  v117 = v48;
  v118 = v47;
  sub_237869090((uint64_t)&v87, (uint64_t)&v104);
  v119 = v55;
  v120 = v54;
  v121 = v53;
  v87 = v82;
  v88 = v84;
  v89 = v60;
  v90 = v133;
  v91 = v86;
  v92 = v62;
  v93 = v28;
  v94 = v69;
  v95 = v21;
  v96 = v17;
  v97 = v19;
  v98 = v65;
  v99 = v18;
  v100 = v20;
  v101 = v6;
  v104 = v57;
  v105 = v58;
  v106 = v80;
  v107 = v72;
  v108 = v46;
  v109 = v70;
  v110 = v74;
  v111 = v76;
  v112 = v56;
  v113 = v52;
  v114 = v51;
  v115 = v50;
  v116 = v49;
  v117 = v48;
  v118 = v47;
  sub_237869718((uint64_t)&v87, (uint64_t)&v104);
  v119 = v55;
  v120 = v54;
  v121 = v53;
  v87 = v82;
  v88 = v84;
  v89 = v60;
  v90 = v133;
  v91 = v86;
  v92 = v62;
  v93 = v28;
  v94 = v69;
  v95 = v21;
  v96 = v17;
  v97 = v19;
  v98 = v65;
  v99 = v18;
  v100 = v20;
  v101 = v6;
  sub_237869A28((uint64_t)&v87);
  sub_23786A1A0(v57, v58);
  v119 = v55;
  v120 = v54;
  v121 = v53;
  v104 = v82;
  v105 = v84;
  v106 = v60;
  v107 = v133;
  v108 = v86;
  v109 = v62;
  LOBYTE(v110) = v28;
  v111 = v69;
  v112 = v21;
  v113 = v17;
  v114 = v19;
  v115 = v65;
  v116 = v18;
  LOBYTE(v117) = v20;
  v118 = v6;
  v103 = v44;
  sub_237869E90((uint64_t)&v104, (uint64_t *)&v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237870370((uint64_t)v122, (uint64_t)&v87, &qword_25681E560);
  if (sub_23786A188((uint64_t)&v87) == 1 || !v102)
  {
    v33 = v43;
    if (!v43)
      return;
  }
  else
  {
    v33 = v102;
  }
  v34 = v33;
  if (v54 != 2)
  {
    v35 = v55;
    v36 = objc_msgSend(v55, sel_fileWrappers, v56, v52, v51, v50, v49, v48, v47);
    if (v36)
    {
      v37 = v36;
      sub_23786A1FC();
      v38 = sub_237A87668();

      if (*(_QWORD *)(v38 + 16) && (v39 = sub_2378D2DB8(0x736172747845, 0xE600000000000000), (v40 & 1) != 0))
      {
        v41 = *(id *)(*(_QWORD *)(v38 + 56) + 8 * v39);
        swift_bridgeObjectRelease();
        v35 = v55;
        objc_msgSend(v55, sel_removeFileWrapper_, v41);

      }
      else
      {
        swift_bridgeObjectRelease();
        v35 = v55;
      }
    }
    v42 = objc_msgSend(v35, sel_addFileWrapper_, v34);

    v34 = v42;
  }

}

uint64_t sub_237868CBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  char v26;
  Swift::String v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = a2[1];
  v5 = *(unsigned __int8 *)(v2 + 8);
  v6 = *(void **)(v2 + 16);
  if (v4)
  {
    v43 = *(void **)(v2 + 16);
    v7 = a2[8];
    v8 = a2[11];
    v10 = a2[12];
    v9 = a2[13];
    v11 = a2[14];
    v46 = *a2;
    v44 = a2[10];
    v45 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = v5;
    v12 = sub_237977C48(v5);
    if (v3)
      return sub_23786A1A0(v46, v4);
    v17 = v12;
    v40 = v9;
    v41 = v11;
    v38 = v8;
    v39 = v10;
    v36 = v45;
    v37 = v44;
    v35 = v7;
    v16 = v13;
    sub_23786A1A0(v46, v4);
    v6 = v43;
    v15 = v17;
    v5 = v42;
  }
  else
  {
    v15 = 0;
    v16 = 0xF000000000000000;
  }
  v18 = sub_237977C48(v5);
  if (v3)
    return sub_2378709D8(v15, v16);
  v20 = v18;
  v21 = v19;
  if (v5 == 2)
    v22 = 0x446567616B636150;
  else
    v22 = 0x2E6567616B636170;
  if (v5 == 2)
    v23 = (void *)0xEF61756C2E617461;
  else
    v23 = (void *)0xEC0000006E6F736ALL;
  sub_2378709EC(v18, v19);
  v47 = v15;
  if (v16 >> 60 == 15)
  {
    sub_2378709D8(v15, v16);
    sub_2378709D8(v20, v21);
  }
  else
  {
    sub_237870A30(v15, v16);
    sub_23786E60C(v15, v16);
    v24 = v15;
    v26 = v25;
    sub_23786FD64(v20, v21);
    sub_2378709D8(v24, v16);
    if ((v26 & 1) != 0)
    {
      v27._countAndFlagsBits = v22;
      v27._object = v23;
      v28 = (void *)NSFileWrapper.child(at:)(v27);

      if (v28)
        goto LABEL_25;
    }
  }
  v29 = objc_msgSend(v6, sel_fileWrappers, v35, v36, v37, v38, v39, v40, v41);
  if (v29)
  {
    v30 = v29;
    sub_23786A1FC();
    v31 = sub_237A87668();

    if (*(_QWORD *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_2378D2DB8(v22, (uint64_t)v23);
      if ((v33 & 1) != 0)
      {
        v34 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_removeFileWrapper_, v34);

        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_24:
  NSFileWrapper.addRegularFile(withContents:fileName:)(v20, v21, v22, (uint64_t)v23);
  swift_bridgeObjectRelease();
LABEL_25:
  sub_23786FD64(v20, v21);
  sub_2378709D8(v47, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237869090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  char v43;
  uint64_t result;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  unsigned __int8 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_OWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v13 = *(_BYTE *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 112);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
  {
    v16 = *(_QWORD *)(a2 + 112);
    v75 = v4;
    v77 = v3;
    v17 = *(_BYTE *)(a2 + 104);
    v73 = v5;
    v19 = *(_QWORD *)(a2 + 88);
    v18 = *(_QWORD *)(a2 + 96);
    v20 = v7;
    v21 = v8;
    v23 = *(_QWORD *)(a2 + 56);
    v22 = *(_QWORD *)(a2 + 64);
    v24 = v9;
    v25 = *(_BYTE *)(a2 + 48);
    v26 = v11;
    v28 = *(_QWORD *)(a2 + 16);
    v27 = *(_QWORD *)(a2 + 24);
    v86 = *(_QWORD *)a2;
    v87 = v15;
    v88 = v28;
    v89 = v27;
    v79 = v10;
    v81 = v6;
    v90 = *(_OWORD *)(a2 + 32);
    LOBYTE(v91) = v25 & 1;
    v92 = v23;
    v93 = v22;
    v94 = *(_OWORD *)(a2 + 72);
    v95 = v19;
    v96 = v18;
    LOBYTE(v97) = v17 & 1;
    v98 = v16;
    v29 = v2;
    v30 = v13;
    v31 = v14;
    ArcPackage.infoPlistContent.getter((uint64_t)&v110);
    v14 = v31;
    v13 = v30;
    v2 = v29;
    v11 = v26;
    v9 = v24;
    v8 = v21;
    v7 = v20;
    v5 = v73;
    v4 = v75;
    v10 = v79;
    v6 = v81;
    v32 = v110;
    v67 = v111;
    v33 = v113;
    v124 = v112;
    v34 = v114;
    v85 = v116;
    v83 = v115;
    v84 = v117;
    v35 = v121;
    v66 = v120;
    v3 = v77;
    v36 = v122;
    v37 = v118 | ((unint64_t)v119 << 8);
    v38 = v123;
  }
  else
  {
    v32 = 0;
    v67 = 0;
    v124 = 0;
    v33 = 0;
    v34 = 0;
    v83 = 0;
    v84 = 0;
    v85 = 0;
    v37 = 0;
    v66 = 0;
    v35 = 0;
    v36 = 0;
    v38 = 0;
  }
  v86 = v2;
  v87 = v3;
  v88 = v4;
  v89 = v5;
  v90 = v6;
  LOBYTE(v91) = v7;
  v92 = v8;
  v93 = v9;
  v94 = v10;
  v95 = v11;
  v96 = v12;
  LOBYTE(v97) = v13;
  v98 = v14;
  ArcPackage.infoPlistContent.getter((uint64_t)&v110);
  v76 = v112;
  v78 = v110;
  v80 = v117;
  v74 = v118;
  v82 = v121;
  v69 = v113;
  v70 = v111;
  v68 = v115;
  v64 = v116;
  v65 = v114;
  v62 = v120;
  v63 = v119;
  v61 = v122;
  v60 = v123;
  if (v33)
  {
    v86 = v32;
    v87 = v67;
    v88 = v124;
    v89 = v33;
    *(_QWORD *)&v90 = v34;
    *((_QWORD *)&v90 + 1) = v83;
    v91 = v85;
    v92 = v84;
    v93 = v37;
    *(_QWORD *)&v94 = v66;
    *((_QWORD *)&v94 + 1) = v35;
    v95 = v36;
    LOBYTE(v96) = v38;
    sub_23787097C(v32, v67, v124, v33);
    v59 = _s14CarPlayAssetUI9InfoPlistV2eeoiySbAC_ACtFZ_0((uint64_t)&v86, (uint64_t)&v110);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v58) = v38;
    v56 = v35;
    v57 = v36;
    v54 = v37;
    v55 = v66;
    sub_2378708DC(v32, v67, v124, v33);
    v39 = v71;
    if ((v59 & 1) != 0)
    {
      v40 = objc_msgSend(v71, sel_fileWrappers, v37, v66, v56, v36, v58);
      if (v40)
      {
        v41 = v40;
        sub_23786A1FC();
        v42 = sub_237A87668();

        if (*(_QWORD *)(v42 + 16))
        {
          sub_2378D2DB8(0x696C702E6F666E49, 0xEA00000000007473);
          if ((v43 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    v86 = v32;
    v87 = v67;
    v88 = v124;
    v89 = 0;
    *(_QWORD *)&v90 = v34;
    *((_QWORD *)&v90 + 1) = v83;
    v91 = v85;
    v92 = v84;
    v93 = v37;
    *(_QWORD *)&v94 = v66;
    *((_QWORD *)&v94 + 1) = v35;
    v95 = v36;
    LOBYTE(v96) = v38;
    v97 = v110;
    v98 = v111;
    v99 = v112;
    v100 = v113;
    v101 = v114;
    v102 = v115;
    v103 = v116;
    v104 = v117;
    v105 = v118 | ((unint64_t)v119 << 8);
    v106 = v120;
    v107 = v121;
    v108 = v122;
    v109 = v123;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237870808(&v86);
    v39 = v71;
  }
  v45 = objc_msgSend(v39, sel_fileWrappers, v54, v55, v56, v57, v58);
  if (v45)
  {
    v46 = v45;
    sub_23786A1FC();
    v47 = sub_237A87668();

    if (*(_QWORD *)(v47 + 16) && (v48 = sub_2378D2DB8(0x696C702E6F666E49, 0xEA00000000007473), (v49 & 1) != 0))
    {
      v50 = *(id *)(*(_QWORD *)(v47 + 56) + 8 * v48);
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_removeFileWrapper_, v50);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_237A864C8();
  swift_allocObject();
  sub_237A864BC();
  sub_237A864A4();
  v86 = v78;
  v87 = v70;
  v88 = v76;
  v89 = v69;
  *(_QWORD *)&v90 = v65;
  *((_QWORD *)&v90 + 1) = v68;
  v91 = v64;
  v92 = v80;
  LOBYTE(v93) = v74;
  BYTE1(v93) = v63;
  *(_QWORD *)&v94 = v62;
  *((_QWORD *)&v94 + 1) = v82;
  v95 = v61;
  LOBYTE(v96) = v60;
  sub_237870938();
  v51 = sub_237A864B0();
  v53 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v72)
  {
    NSFileWrapper.addRegularFile(withContents:fileName:)(v51, v53, 0x696C702E6F666E49, 0xEA00000000007473);
    swift_bridgeObjectRelease();
    return sub_23786FD64(v51, v53);
  }
  return result;
}

unint64_t sub_237869718(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t i;
  unint64_t result;
  char v12;
  const void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE v26[480];
  _OWORD v27[30];
  _BYTE v28[480];
  uint64_t v29;
  char v30;
  void *v31;
  _QWORD v32[60];
  uint64_t __dst[61];
  _QWORD *v34;

  v4 = *(_QWORD **)(a1 + 112);
  v34 = *(_QWORD **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 112);
  v6 = (void *)v2[2];
  v7 = v4[2];
  v23 = v7;
  if (!v7)
  {
LABEL_14:
    if (v34)
    {
      swift_bridgeObjectRetain();
      v14 = *(_QWORD *)(v5 + 16);
      if (!v14)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v5 = MEMORY[0x24BEE4AF8];
      v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v14)
        return swift_bridgeObjectRelease();
    }
    v15 = 0;
    v34 = v4 + 5;
    v25 = v6;
    v16 = v23;
    while (1)
    {
      memcpy(__dst, (const void *)(v5 + 32 + 480 * v15), 0x1E0uLL);
      v17 = __dst[0];
      v18 = __dst[1];
      if (v16)
      {
        v19 = v34;
        while (1)
        {
          v20 = *(v19 - 1) == v17 && *v19 == v18;
          if (v20 || (sub_237A8840C() & 1) != 0)
            break;
          v19 += 60;
          if (!--v16)
            goto LABEL_27;
        }
      }
      else
      {
LABEL_27:
        v32[0] = v17;
        v32[1] = v18;
        sub_23786FE8C((uint64_t)__dst);
        swift_bridgeObjectRetain();
        v21 = sub_2379A6EA0(v32);
        if (v3)
        {
          sub_2378700DC((uint64_t)__dst);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v22 = v21;
        objc_msgSend(v25, sel_removeFileWrapper_, v21);

        sub_2378700DC((uint64_t)__dst);
        swift_bridgeObjectRelease();
      }
      v16 = v23;
      if (++v15 == v14)
        return swift_bridgeObjectRelease();
      if (v15 >= *(_QWORD *)(v5 + 16))
      {
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
  }
  v24 = *v2;
  v8 = *((_BYTE *)v2 + 8);
  swift_bridgeObjectRetain();
  memcpy(__dst, v4 + 4, 0x1E0uLL);
  v9 = v7 - 1;
  for (i = 64; ; i += 60)
  {
    v29 = v24;
    v30 = v8;
    v31 = v6;
    memcpy(v28, __dst, sizeof(v28));
    if (!v34 || (result = sub_2379D697C(v5, __dst[0], __dst[1]), (v12 & 1) != 0))
    {
      sub_23787032C(v27);
      goto LABEL_9;
    }
    if ((result & 0x8000000000000000) != 0)
      break;
    if (result >= *(_QWORD *)(v5 + 16))
      goto LABEL_36;
    v13 = (const void *)(v5 + 32 + 480 * result);
    memcpy(v26, v13, sizeof(v26));
    memmove(v27, v13, 0x1E0uLL);
    nullsub_1(v27);
    sub_23786FE8C((uint64_t)v26);
LABEL_9:
    sub_237870370((uint64_t)v27, (uint64_t)v32, &qword_25681E758);
    sub_237870370((uint64_t)v32, (uint64_t)v27, &qword_25681E758);
    sub_23786FE8C((uint64_t)__dst);
    sub_23786A400(v28, (uint64_t)v27);
    sub_2378703B4((uint64_t)v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return sub_2378700DC((uint64_t)__dst);
    }
    sub_2378700DC((uint64_t)__dst);
    if (!v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    memcpy(__dst, &v4[i], 0x1E0uLL);
    --v9;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_237869A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char **p_name;
  id v7;
  void *v8;
  id v9;
  void *v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  _QWORD v40[2];
  _QWORD __dst[61];
  int64_t v42;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 112);
  v37 = *(_QWORD *)(v3 + 16);
  if (!v37)
    return;
  v36 = v3 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
  p_name = &stru_250985FF8.name;
  v35 = v3;
  while (2)
  {
    memcpy(__dst, (const void *)(v36 + 480 * v4), 0x1E0uLL);
    v40[0] = __dst[0];
    v40[1] = __dst[1];
    sub_23786FE8C((uint64_t)__dst);
    swift_bridgeObjectRetain();
    v7 = sub_2379A6EA0(v40);
    if (v2)
    {
      sub_2378700DC((uint64_t)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v8 = v7;
    swift_bridgeObjectRelease();
    v40[0] = v5;
    v9 = objc_msgSend(v8, p_name[180]);
    v39 = v8;
    if (v9)
    {
      v10 = v9;
      sub_23786A1FC();
      v11 = sub_237A87668();

    }
    else
    {
      v11 = sub_2378D1444(v5);
    }
    v12 = 0;
    v38 = v4 + 1;
    v13 = v11 + 64;
    v14 = 1 << *(_BYTE *)(v11 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & *(_QWORD *)(v11 + 64);
    v42 = (unint64_t)(v14 + 63) >> 6;
    while (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
LABEL_29:
      v22 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      v23 = v22;
      if (objc_msgSend(v23, sel_isDirectory))
      {
        v24 = objc_msgSend(v23, p_name[180]);
        if (v24)
        {
          v25 = v24;
          sub_23786A1FC();
          v26 = sub_237A87668();

        }
        else
        {
          v26 = MEMORY[0x24BEE4B00];
        }
        v27 = *(_QWORD *)(v26 + 16);
        swift_bridgeObjectRelease();
        if (!v27)
        {
          v28 = v23;
          MEMORY[0x23B81E6D0]();
          if (*(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_237A87AB8();
          sub_237A87AE8();
          sub_237A87AAC();
          p_name = &stru_250985FF8.name;
        }
      }

      swift_bridgeObjectRelease();
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      break;
    }
    if (v19 >= v42)
      goto LABEL_36;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (v20)
      goto LABEL_28;
    v12 = v19 + 1;
    if (v19 + 1 >= v42)
      goto LABEL_36;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    if (v20)
      goto LABEL_28;
    v12 = v19 + 2;
    if (v19 + 2 >= v42)
      goto LABEL_36;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    if (v20)
    {
LABEL_28:
      v16 = (v20 - 1) & v20;
      v18 = __clz(__rbit64(v20)) + (v12 << 6);
      goto LABEL_29;
    }
    v21 = v19 + 3;
    if (v21 < v42)
    {
      v20 = *(_QWORD *)(v13 + 8 * v21);
      if (!v20)
      {
        while (1)
        {
          v12 = v21 + 1;
          if (__OFADD__(v21, 1))
            goto LABEL_53;
          if (v12 >= v42)
            goto LABEL_36;
          v20 = *(_QWORD *)(v13 + 8 * v12);
          ++v21;
          if (v20)
            goto LABEL_28;
        }
      }
      v12 = v21;
      goto LABEL_28;
    }
LABEL_36:
    swift_release();
    v29 = v40[0];
    if (v40[0] >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_237A880C4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v31 = v35;
    v4 = v38;
    v5 = MEMORY[0x24BEE4AF8];
    if (v30)
    {
      if (v30 < 1)
        goto LABEL_55;
      for (i = 0; i != v30; ++i)
      {
        if ((v29 & 0xC000000000000001) != 0)
          v33 = (id)MEMORY[0x23B81EBEC](i, v29);
        else
          v33 = *(id *)(v29 + 8 * i + 32);
        v34 = v33;
        objc_msgSend(v39, sel_removeFileWrapper_, v33, v35);

      }
    }

    swift_bridgeObjectRelease();
    sub_2378700DC((uint64_t)__dst);
    if (v38 == v37)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v2 = 0;
    p_name = (char **)(&stru_250985FF8 + 8);
    if (v38 < *(_QWORD *)(v31 + 16))
      continue;
    break;
  }
  __break(1u);
LABEL_55:
  __break(1u);
}

uint64_t sub_237869E90(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  ValueMetadata *v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  ValueMetadata *v32;
  unint64_t v33;
  unint64_t v34;

  v5 = *a2;
  v4 = a2[1];
  v6 = *(unsigned __int8 *)(v2 + 8);
  v7 = *(void **)(v2 + 16);
  v32 = &type metadata for EditableTheme;
  v33 = sub_23786FCDC();
  v34 = sub_23786FD20();
  *(_QWORD *)&v31 = v5;
  *((_QWORD *)&v31 + 1) = v4;
  if ((v6 - 1) >= 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = v5;
    v26 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = swift_bridgeObjectRetain();
    v9 = sub_23786A238(v8);
    swift_bridgeObjectRelease();
    v28 = &type metadata for ResolvedTheme;
    v29 = sub_23786FDA8();
    v30 = sub_23786FDEC();
    *(_QWORD *)&v27 = swift_allocObject();
    EditableTheme.optimize(for:)(v9, (_QWORD *)(v27 + 16));
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v31);
    sub_23786FE74(&v27, &v31);
  }
  if (v6 == 2)
    v10 = 0x746144656D656854;
  else
    v10 = 0x736A2E656D656874;
  if (v6 == 2)
    v11 = 0xED000061756C2E61;
  else
    v11 = 0xEA00000000006E6FLL;
  v12 = objc_msgSend(v7, sel_fileWrappers, v25, v26, (_QWORD)v27);
  if (v12)
  {
    v13 = v12;
    sub_23786A1FC();
    v14 = sub_237A87668();

    if (*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      v15 = sub_2378D2DB8(v10, v11);
      if ((v16 & 1) != 0)
      {
        v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_removeFileWrapper_, v17);

        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  v18 = v32;
  v19 = v34;
  __swift_project_boxed_opaque_existential_2Tm(&v31, (uint64_t)v32);
  LOBYTE(v27) = v6;
  v20 = sub_2379A6B10((unsigned __int8 *)&v27, (uint64_t)v18, v19);
  if (!v3)
  {
    v22 = v20;
    v23 = v21;
    NSFileWrapper.addRegularFile(withContents:fileName:)(v20, v21, v10, v11);
    swift_bridgeObjectRelease();
    sub_23786FD64(v22, v23);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v31);
}

_QWORD *static ArcPackageExporter.getScripts(from:for:)(uint64_t a1, unsigned __int8 *a2)
{
  return sub_23786EE88(a1, a2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B81FA80]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23786A188(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23786A1A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23786A1FC()
{
  unint64_t result;

  result = qword_25681E568;
  if (!qword_25681E568)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25681E568);
  }
  return result;
}

uint64_t sub_23786A238(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v3 = MEMORY[0x24BEE4AF8];
  for (i = 56; ; i += 480)
  {
    v5 = *(_QWORD *)(a1 + i);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = *(_QWORD *)(v3 + 16);
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *(_QWORD *)(v3 + 24) >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v3 = sub_237895680(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = *(_QWORD *)(v3 + 16);
        v12 = (*(_QWORD *)(v3 + 24) >> 1) - v11;
        v13 = type metadata accessor for Layout();
        if (v12 < v6)
          goto LABEL_28;
        v14 = *(_QWORD *)(v13 - 8);
        v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v16 = *(_QWORD *)(v14 + 72);
        v17 = v3 + v15 + v16 * v11;
        v18 = v5 + v15;
        v19 = v16 * v6;
        v20 = v17 + v19;
        v21 = v18 + v19;
        if (v18 < v20 && v17 < v21)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v6)
        {
          v23 = *(_QWORD *)(v3 + 16);
          v24 = __OFADD__(v23, v6);
          v25 = v23 + v6;
          if (v24)
            goto LABEL_29;
          *(_QWORD *)(v3 + 16) = v25;
        }
        goto LABEL_4;
      }
    }
    if (v6)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

void sub_23786A400(const void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unsigned int v13;
  void *v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t i;
  BOOL v47;
  unint64_t v48;
  int64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  id v79;
  unsigned int v80;
  uint64_t v81;
  id v82;
  id v83;
  char v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  int64_t v97;
  unint64_t v98;
  unint64_t j;
  unint64_t v100;
  id v101;
  int64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  int64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  Swift::String v129;
  void *v130;
  unint64_t v131;
  void *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  int v145;
  _QWORD *v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  _QWORD *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  BOOL v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v161;
  id v162;
  int64_t v163;
  id v164;
  int64_t v165;
  int64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int8 v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  id v177;
  uint64_t v178;
  unint64_t v179;
  id v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  _QWORD v184[2];
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  int64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  id v201;
  uint64_t v202;
  id v203;
  unint64_t v204;
  char *v205;
  uint64_t v206;
  int64_t v207;
  id v208;
  __int128 v209[30];
  _QWORD v210[60];
  uint64_t v211;
  _QWORD *v212;
  id v213;
  char *v214;
  id v215;
  char v216;
  id v217;
  _BYTE v218[480];
  _QWORD v219[60];
  uint64_t v220;
  uint64_t v221;
  _QWORD v222[60];
  _BYTE v223[488];
  char *v224;

  v6 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v6);
  v200 = (char *)v184 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A8633C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v222, a1, sizeof(v222));
  sub_237870370(a2, (uint64_t)v223, &qword_25681E758);
  v12 = *(void **)v2;
  v13 = *(unsigned __int8 *)(v2 + 8);
  v14 = *(void **)(v2 + 16);
  v219[0] = v222[0];
  v219[1] = v222[1];
  swift_bridgeObjectRetain();
  v15 = sub_2379A6EA0(v219);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v187 = v8;
  v208 = v15;
  v224 = v11;
  v186 = v9;
  v194 = v13;
  swift_bridgeObjectRelease();
  memcpy(v219, v222, sizeof(v219));
  sub_23786FE8C((uint64_t)v222);
  sub_2379BE8E4(v219, &v220);
  v16 = 0;
  sub_237870370((uint64_t)v223, (uint64_t)v218, &qword_25681E758);
  if (sub_23786A188((uint64_t)v218) == 1)
  {
    v198 = 0;
    v199 = 0;
  }
  else
  {
    sub_237870370((uint64_t)v223, (uint64_t)v210, &qword_25681E758);
    memcpy(v209, v210, sizeof(v209));
    sub_23786FE8C((uint64_t)v210);
    sub_2379BE8E4(v209, &v211);
    v198 = v211;
    v199 = v212;
  }
  v193 = v220;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v12;
  v18 = v194;
  *(_BYTE *)(v17 + 24) = v194;
  *(_QWORD *)(v17 + 32) = v14;
  v19 = v221;
  v20 = v12;
  v21 = v14;
  v22 = v20;
  v23 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = sub_23786E884(v19, v22, v18, v23);
  v184[1] = v17;
  swift_release();
  swift_bridgeObjectRelease();
  v25 = sub_2378BC638(v24);
  v190 = v22;
  v185 = v25;
  if (v198)
  {
    v26 = v22;
    v27 = v23;
    v29 = v198;
    v28 = v199;
    sub_2378707B0(v198);
    v30 = swift_bridgeObjectRetain();
    v31 = v18;
    v32 = v28;
    v33 = sub_23786E884(v30, v26, v31, v27);
    swift_bridgeObjectRelease();

    v34 = sub_2378BC638(v33);
    sub_2378706C8(v29);
    v35 = v185;
  }
  else
  {
    v35 = v25;
    v34 = MEMORY[0x24BEE4B08];
    v32 = v199;
  }
  if (*(_QWORD *)(v34 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
  {
    v210[0] = v35;
    swift_bridgeObjectRetain();
    v36 = v35;
    sub_23786CF84(v34);
    v189 = v210[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v36 = v35;
    v189 = sub_23786D118(v34, v35);
  }
  if (*(_QWORD *)(v36 + 16) <= *(_QWORD *)(v34 + 16) >> 3)
  {
    v210[0] = v34;
    swift_bridgeObjectRetain();
    sub_23786CF84(v36);
    v37 = v210[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v37 = sub_23786D118(v36, v34);
  }
  swift_bridgeObjectRetain();
  v188 = sub_23786D580(v34, v36);
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v37 + 56);
  v191 = v37 + 56;
  v39 = 1 << *(_BYTE *)(v37 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & v38;
  v192 = (unint64_t)(v39 + 63) >> 6;
  swift_bridgeObjectRetain();
  v42 = 0;
  v201 = v23;
  v196 = v37;
  v43 = v224;
  if (!v41)
    goto LABEL_19;
LABEL_18:
  v44 = __clz(__rbit64(v41));
  v45 = (v41 - 1) & v41;
  for (i = v44 | (v42 << 6); ; i = __clz(__rbit64(v48)) + (v42 << 6))
  {
    v204 = v45;
    v205 = (char *)v42;
    if (!v198 || !v32[2])
      goto LABEL_205;
    v50 = v43;
    v51 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * i);
    v52 = *v51;
    v53 = v51[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = sub_2378D2DB8(v52, v53);
    if ((v55 & 1) == 0)
      goto LABEL_204;
    v56 = *(_QWORD *)(v32[7] + 32 * v54 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v206 = v56;
    v57 = (void *)sub_237A877F4();
    v58 = objc_msgSend(v57, sel_lastPathComponent);
    v59 = sub_237A87818();
    v61 = v60;

    v62 = HIBYTE(v61) & 0xF;
    v195 = v59;
    if ((v61 & 0x2000000000000000) == 0)
      v62 = v59 & 0xFFFFFFFFFFFFLL;
    if (!v62)
    {
      swift_bridgeObjectRelease();
      sub_237A86324();
      sub_2378D4298(MEMORY[0x24BEE4AF8]);
      sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
      v91 = v187;
      sub_237A864D4();
      sub_237A862D0();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v50, v91);
      swift_willThrow();

      swift_release();
      swift_release();

      sub_2378706C8(v198);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_74:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v202 = v61;
    v203 = v57;
    v63 = objc_msgSend(v57, sel_stringByDeletingLastPathComponent);
    sub_237A87818();
    v65 = v64;

    v66 = (void *)sub_237A877F4();
    v67 = objc_msgSend(v66, sel_pathComponents);

    v68 = sub_237A87A94();
    v69 = *(_QWORD *)(v68 + 16);
    v207 = v16;
    if (!v69)
    {
      v79 = v208;
      swift_bridgeObjectRelease();
LABEL_45:
      v80 = objc_msgSend(v79, sel_isDirectory);
      v82 = v201;
      v81 = v202;
      v32 = v199;
      if (!v80)
      {
        swift_bridgeObjectRelease();
LABEL_53:

        swift_bridgeObjectRelease();
        v43 = v224;
        goto LABEL_70;
      }
      sub_23786A1FC();
      v83 = v79;
      v84 = sub_237A87DD0();

      swift_bridgeObjectRelease();
      if ((v84 & 1) != 0)
        goto LABEL_53;
      v85 = objc_msgSend(v83, sel_fileWrappers);
      if (!v85)
      {
        swift_bridgeObjectRelease();

        goto LABEL_67;
      }
      v86 = v85;
      v87 = sub_237A87668();

      if (!*(_QWORD *)(v87 + 16))
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_67:
        v43 = v224;
LABEL_69:

LABEL_70:
        v23 = v82;
        v16 = v207;
        goto LABEL_71;
      }
      swift_bridgeObjectRetain();
      v88 = sub_2378D2DB8(v195, v81);
      v43 = v224;
      if ((v89 & 1) == 0)
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
      v90 = *(id *)(*(_QWORD *)(v87 + 56) + 8 * v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v83, sel_removeFileWrapper_, v90);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v37 = v196;
      v41 = v204;
      v42 = (int64_t)v205;
      v23 = v82;
      v16 = v207;
      if (!v204)
        goto LABEL_19;
      goto LABEL_18;
    }
    v197 = v65;
    v70 = v208;
    v71 = (uint64_t *)(v68 + 40);
    v43 = v224;
    while (1)
    {
      v73 = *(v71 - 1);
      v72 = *v71;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v70, sel_isDirectory))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_60;
      }
      v74 = objc_msgSend(v70, sel_fileWrappers);
      if (!v74)
      {

LABEL_57:
        v43 = v224;
        goto LABEL_59;
      }
      v75 = v74;
      sub_23786A1FC();
      v76 = sub_237A87668();

      if (!*(_QWORD *)(v76 + 16))
      {

        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      swift_bridgeObjectRetain();
      v77 = sub_2378D2DB8(v73, v72);
      v43 = v224;
      if ((v78 & 1) == 0)
        break;
      v71 += 2;
      v79 = *(id *)(*(_QWORD *)(v76 + 56) + 8 * v77);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v70 = v79;
      if (!--v69)
      {
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_60:
    swift_bridgeObjectRelease();
    v16 = v207;
    v23 = v201;
    v32 = v199;
LABEL_71:
    swift_bridgeObjectRelease();
    v37 = v196;
    v41 = v204;
    v42 = (int64_t)v205;
    if (v204)
      goto LABEL_18;
LABEL_19:
    v47 = __OFADD__(v42++, 1);
    if (v47)
    {
      __break(1u);
LABEL_199:
      __break(1u);
      goto LABEL_200;
    }
    if (v42 >= v192)
      break;
    v48 = *(_QWORD *)(v191 + 8 * v42);
    if (v48)
      goto LABEL_29;
    v49 = v42 + 1;
    if (v42 + 1 >= v192)
      break;
    v48 = *(_QWORD *)(v191 + 8 * v49);
    if (v48)
      goto LABEL_28;
    v49 = v42 + 2;
    if (v42 + 2 >= v192)
      break;
    v48 = *(_QWORD *)(v191 + 8 * v49);
    if (v48)
      goto LABEL_28;
    v49 = v42 + 3;
    if (v42 + 3 >= v192)
      break;
    v48 = *(_QWORD *)(v191 + 8 * v49);
    if (!v48)
    {
      while (1)
      {
        v42 = v49 + 1;
        if (__OFADD__(v49, 1))
          break;
        if (v42 >= v192)
          goto LABEL_75;
        v48 = *(_QWORD *)(v191 + 8 * v42);
        ++v49;
        if (v48)
          goto LABEL_29;
      }
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
LABEL_28:
    v42 = v49;
LABEL_29:
    v45 = (v48 - 1) & v48;
  }
LABEL_75:
  swift_release();
  v92 = *(_QWORD *)(v189 + 56);
  v206 = v189 + 56;
  v93 = 1 << *(_BYTE *)(v189 + 32);
  v94 = -1;
  if (v93 < 64)
    v94 = ~(-1 << v93);
  v95 = v94 & v92;
  v207 = (unint64_t)(v93 + 63) >> 6;
  v96 = (char *)v221;
  swift_bridgeObjectRetain();
  v97 = 0;
  v224 = v96;
  if (!v95)
    goto LABEL_79;
LABEL_78:
  v98 = __clz(__rbit64(v95));
  v95 &= v95 - 1;
  for (j = v98 | (v97 << 6); ; j = __clz(__rbit64(v100)) + (v97 << 6))
  {
    v103 = (uint64_t *)(*(_QWORD *)(v189 + 48) + 16 * j);
    v104 = v103[1];
    v105 = v193;
    if (!*(_QWORD *)(v193 + 16))
    {
      memset(v209, 0, 40);
      swift_bridgeObjectRetain();
      goto LABEL_215;
    }
    v106 = *v103;
    swift_bridgeObjectRetain_n();
    v107 = sub_2378D2DB8(v106, v104);
    if ((v108 & 1) != 0)
      sub_23787076C(*(_QWORD *)(v105 + 56) + 40 * v107, (uint64_t)v209);
    else
      memset(v209, 0, 40);
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v209[1] + 1))
      goto LABEL_215;
    v109 = v97;
    sub_237870734(v209, (uint64_t)v210);
    if (!*((_QWORD *)v96 + 2) || (v110 = sub_2378D2DB8(v106, v104), (v111 & 1) == 0))
    {
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
      goto LABEL_216;
    }
    v112 = *((_QWORD *)v96 + 7) + 32 * v110;
    v113 = *(_QWORD *)v112;
    v114 = *(_QWORD *)(v112 + 8);
    v115 = *(_BYTE *)(v112 + 16);
    v116 = *(_QWORD *)(v112 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v211 = (uint64_t)v190;
    LOBYTE(v212) = v194;
    v213 = v201;
    *(_QWORD *)&v209[0] = v113;
    *((_QWORD *)&v209[0] + 1) = v114;
    LOBYTE(v209[1]) = v115;
    *((_QWORD *)&v209[1] + 1) = v116;
    sub_23786BE34(v210, (uint64_t *)v209, (uint64_t)v208);
    if (v16)
    {
      swift_release();

      swift_bridgeObjectRelease();
      sub_2378706C8(v198);

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_74;
    }
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
    swift_bridgeObjectRelease();
    v96 = v224;
    v97 = v109;
    if (v95)
      goto LABEL_78;
LABEL_79:
    v47 = __OFADD__(v97++, 1);
    if (v47)
      goto LABEL_199;
    if (v97 >= v207)
      break;
    v100 = *(_QWORD *)(v206 + 8 * v97);
    v101 = v208;
    if (!v100)
    {
      v102 = v97 + 1;
      if (v97 + 1 >= v207)
        goto LABEL_106;
      v100 = *(_QWORD *)(v206 + 8 * v102);
      if (!v100)
      {
        v102 = v97 + 2;
        if (v97 + 2 >= v207)
          goto LABEL_106;
        v100 = *(_QWORD *)(v206 + 8 * v102);
        if (!v100)
        {
          v102 = v97 + 3;
          if (v97 + 3 >= v207)
            goto LABEL_106;
          v100 = *(_QWORD *)(v206 + 8 * v102);
          if (!v100)
          {
            while (1)
            {
              v97 = v102 + 1;
              if (__OFADD__(v102, 1))
                goto LABEL_202;
              if (v97 >= v207)
                goto LABEL_106;
              v100 = *(_QWORD *)(v206 + 8 * v97);
              ++v102;
              if (v100)
                goto LABEL_89;
            }
          }
        }
      }
      v97 = v102;
    }
LABEL_89:
    v95 = (v100 - 1) & v100;
  }
  v101 = v208;
LABEL_106:
  swift_release();
  v117 = *(_QWORD *)(v185 + 16);
  swift_bridgeObjectRelease();
  v118 = swift_bridgeObjectRetain();
  v119 = *(_QWORD *)(sub_2378BC638(v118) + 16);
  swift_bridgeObjectRelease();
  LODWORD(v195) = v117 != v119;
  if (v117 != v119)
  {
    swift_retain();
    v120 = swift_bridgeObjectRetain();
    v121 = sub_23786ECC8(v120, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_23787069C);
    swift_bridgeObjectRelease();
    swift_release();
    v122 = sub_2378BC638(v121);
    v123 = sub_2378CD738(v122);
    swift_bridgeObjectRelease();
    sub_2379BEB7C((uint64_t)v123);
    swift_release();
  }
  v124 = 0;
  v125 = *(_QWORD *)(v188 + 56);
  v197 = v188 + 56;
  v126 = 1 << *(_BYTE *)(v188 + 32);
  v127 = -1;
  if (v126 < 64)
    v127 = ~(-1 << v126);
  v128 = v127 & v125;
  v200 = (char *)((unint64_t)(v126 + 63) >> 6);
  while (2)
  {
    if (v128)
    {
      v131 = __clz(__rbit64(v128));
      v132 = (void *)((v128 - 1) & v128);
      v133 = v131 | (v124 << 6);
      goto LABEL_127;
    }
    v47 = __OFADD__(v124++, 1);
    if (v47)
      goto LABEL_201;
    if (v124 >= (uint64_t)v200)
    {
LABEL_174:
      swift_release();
      sub_2378706C8(v198);
      swift_bridgeObjectRelease();
      if ((v195 & 1) != 0)
      {
        v166 = v16;
        swift_bridgeObjectRelease();
      }
      else
      {
        v166 = v16;
        v167 = *(_QWORD *)(v189 + 16);
        swift_bridgeObjectRelease();
        if (!v167)
        {
          v183 = *(_QWORD *)(v196 + 16);
          swift_bridgeObjectRelease();
          if (!v183)
          {
            sub_237870370((uint64_t)v223, (uint64_t)v210, &qword_25681E758);
            if (sub_23786A188((uint64_t)v210) != 1)
            {

              swift_release();
LABEL_197:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
          }
LABEL_178:
          v168 = v221;
          v169 = v194;
          if (v194 == 2)
            v170 = 0xD000000000000015;
          else
            v170 = 0xD000000000000013;
          if (v194 == 2)
            v171 = 0x8000000237AAF270;
          else
            v171 = 0x8000000237AAF250;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v172 = objc_msgSend(v101, sel_fileWrappers);
          if (!v172)
            goto LABEL_191;
          v173 = v172;
          sub_23786A1FC();
          v174 = sub_237A87668();

          if (*(_QWORD *)(v174 + 16))
          {
            swift_bridgeObjectRetain();
            v175 = sub_2378D2DB8(v170, v171);
            if ((v176 & 1) != 0)
            {
              v177 = *(id *)(*(_QWORD *)(v174 + 56) + 8 * v175);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_msgSend(v101, sel_removeFileWrapper_, v177);

LABEL_190:
              v169 = v194;
LABEL_191:
              swift_bridgeObjectRetain();
              v178 = sub_237978320(v169, v168);
              v180 = v190;
              if (v166)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();

                return;
              }
              v181 = v178;
              v182 = v179;
              swift_bridgeObjectRelease();
              NSFileWrapper.addRegularFile(withContents:fileName:)(v181, v182, v170, v171);
              swift_bridgeObjectRelease();
              sub_23786FD64(v181, v182);

              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v101 = v208;
              goto LABEL_197;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_190;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_178;
    }
    v134 = *(_QWORD *)(v197 + 8 * v124);
    if (!v134)
    {
      v135 = v124 + 1;
      if (v124 + 1 >= (uint64_t)v200)
        goto LABEL_174;
      v134 = *(_QWORD *)(v197 + 8 * v135);
      if (v134)
        goto LABEL_125;
      v135 = v124 + 2;
      if (v124 + 2 >= (uint64_t)v200)
        goto LABEL_174;
      v134 = *(_QWORD *)(v197 + 8 * v135);
      if (v134)
        goto LABEL_125;
      v135 = v124 + 3;
      if (v124 + 3 >= (uint64_t)v200)
        goto LABEL_174;
      v134 = *(_QWORD *)(v197 + 8 * v135);
      if (v134)
      {
LABEL_125:
        v124 = v135;
        goto LABEL_126;
      }
      while (1)
      {
        v124 = v135 + 1;
        if (__OFADD__(v135, 1))
          break;
        if (v124 >= (uint64_t)v200)
        {
          v101 = v208;
          goto LABEL_174;
        }
        v134 = *(_QWORD *)(v197 + 8 * v124);
        ++v135;
        if (v134)
          goto LABEL_126;
      }
LABEL_203:
      __break(1u);
LABEL_204:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v201;
LABEL_205:

      goto LABEL_213;
    }
LABEL_126:
    v132 = (void *)((v134 - 1) & v134);
    v133 = __clz(__rbit64(v134)) + (v124 << 6);
LABEL_127:
    v136 = (uint64_t *)(*(_QWORD *)(v188 + 48) + 16 * v133);
    v137 = v136[1];
    v138 = v221;
    if (!*(_QWORD *)(v221 + 16))
    {

      swift_bridgeObjectRetain();
      goto LABEL_216;
    }
    v203 = v132;
    v139 = *v136;
    swift_bridgeObjectRetain_n();
    v140 = sub_2378D2DB8(v139, v137);
    if ((v141 & 1) == 0)
      goto LABEL_212;
    v202 = v138;
    v142 = *(_QWORD *)(v138 + 56) + 32 * v140;
    v144 = *(_QWORD *)v142;
    v143 = *(_QWORD **)(v142 + 8);
    v145 = *(unsigned __int8 *)(v142 + 16);
    v224 = *(char **)(v142 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!v198)
      goto LABEL_212;
    v146 = v199;
    if (!v199[2])
      goto LABEL_212;
    v204 = v124;
    v207 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v147 = sub_2378D2DB8(v139, v137);
    if ((v148 & 1) != 0)
    {
      v149 = v146[7] + 32 * v147;
      v151 = *(void **)v149;
      v150 = *(_QWORD **)(v149 + 8);
      LODWORD(v206) = *(unsigned __int8 *)(v149 + 16);
      v205 = *(char **)(v149 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v152 = v193;
      if (*(_QWORD *)(v193 + 16) && (v153 = sub_2378D2DB8(v139, v137), (v154 & 1) != 0))
        sub_23787076C(*(_QWORD *)(v152 + 56) + 40 * v153, (uint64_t)v209);
      else
        memset(v209, 0, 40);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v209[1] + 1))
      {
        sub_237870734(v209, (uint64_t)v210);
        v155 = (void *)v144 == v151 && v143 == v150;
        if (v155 || (sub_237A8840C() & 1) != 0)
        {
          if (v145)
            v156 = 1953394534;
          else
            v156 = 0x6567616D69;
          if (v145)
            v157 = 0xE400000000000000;
          else
            v157 = 0xE500000000000000;
          if ((_DWORD)v206)
            v158 = 1953394534;
          else
            v158 = 0x6567616D69;
          if ((_DWORD)v206)
            v159 = 0xE400000000000000;
          else
            v159 = 0xE500000000000000;
          if (v156 == v158 && v157 == v159)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v161 = sub_237A8840C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v161 & 1) == 0)
              goto LABEL_162;
          }
          if (v224 != v205)
            goto LABEL_162;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v129._countAndFlagsBits = v144;
          v129._object = v143;
          v101 = v208;
          v130 = (void *)NSFileWrapper.child(at:)(v129);
          swift_bridgeObjectRelease();

          if (v130)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            v16 = v207;
LABEL_113:
            v128 = (unint64_t)v203;
            v124 = v204;
            continue;
          }
          v211 = (uint64_t)v190;
          LOBYTE(v212) = v194;
          v164 = v201;
          v213 = v201;
          *(_QWORD *)&v209[0] = v144;
          *((_QWORD *)&v209[0] + 1) = v143;
          LOBYTE(v209[1]) = v145;
          *((_QWORD *)&v209[1] + 1) = v224;
          v165 = v207;
          sub_23786BE34(v210, (uint64_t *)v209, (uint64_t)v101);
          v16 = v165;
          if (!v165)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            goto LABEL_113;
          }

          swift_bridgeObjectRelease();
          sub_2378706C8(v198);

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
        }
        else
        {
LABEL_162:
          v215 = v190;
          v216 = v194;
          v162 = v201;
          v217 = v201;
          *(_QWORD *)&v209[0] = v144;
          *((_QWORD *)&v209[0] + 1) = v143;
          LOBYTE(v209[1]) = v145;
          *((_QWORD *)&v209[1] + 1) = v224;
          v211 = (uint64_t)v151;
          v212 = v150;
          LOBYTE(v213) = v206;
          v214 = v205;
          v163 = v207;
          v101 = v208;
          sub_23786C18C(v210, (uint64_t)v209, (uint64_t)&v211, (uint64_t)v208);
          v16 = v163;
          if (!v163)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v195) = 1;
            goto LABEL_113;
          }

          swift_bridgeObjectRelease();
          sub_2378706C8(v198);

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_74;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_215:

      sub_2378706F4((uint64_t)v209);
      goto LABEL_216;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_212:
  swift_bridgeObjectRelease();

LABEL_213:
LABEL_216:
  sub_237A880AC();
  __break(1u);
}

void sub_23786BB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;

  v0 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_237A8633C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_237A877F4();
  v6 = objc_msgSend(v5, sel_lastPathComponent);
  v7 = sub_237A87818();
  v9 = v8;

  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    sub_237A86324();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_willThrow();

    return;
  }
  v11 = objc_msgSend(v5, sel_stringByDeletingLastPathComponent);
  v12 = sub_237A87818();
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  v16 = (void *)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v15, 0);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v17 = objc_msgSend(v16, sel_fileWrappers);
    if (!v17)
    {

      swift_bridgeObjectRelease();
      return;
    }
    v18 = v17;
    sub_23786A1FC();
    v19 = sub_237A87668();

    if (*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      v20 = sub_2378D2DB8(v7, v9);
      if ((v21 & 1) != 0)
      {
        v22 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_removeFileWrapper_, v22);

        swift_bridgeObjectRelease();
        return;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {

  }
  swift_bridgeObjectRelease();
}

void sub_23786BE34(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v36 = a3;
  v6 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_237A8633C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v37 = a2[1];
  v38 = v11;
  v12 = *(_BYTE *)(v3 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  v39 = v12;
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 40))(&v39, v13, v14);
  if (!v15)
  {
    sub_237A862F4();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_willThrow();
    return;
  }
  v16 = (void *)v15;
  v34 = v10;
  v35 = v8;
  v17 = (void *)sub_237A877F4();
  v18 = objc_msgSend(v17, sel_lastPathComponent);
  v19 = sub_237A87818();
  v21 = v20;

  swift_bridgeObjectRelease();
  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    sub_237A86324();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v31 = v34;
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v7);
LABEL_11:
    swift_willThrow();

    return;
  }
  v23 = objc_msgSend(v17, sel_stringByDeletingLastPathComponent);
  v24 = sub_237A87818();
  v26 = v25;

  v27._countAndFlagsBits = v24;
  v27._object = v26;
  v28 = (void *)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v27, 1);
  swift_bridgeObjectRelease();
  v29 = v35;
  if (!v28)
  {
    v32 = v7;
    sub_237A862F4();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v33 = v34;
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v32);
    goto LABEL_11;
  }
  NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v16);

  if (!v30)
    swift_bridgeObjectRelease();
}

void sub_23786C18C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  void *v45;
  Swift::String v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;

  v61 = a4;
  v8 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A8633C();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a2;
  v62 = *(void **)(a2 + 8);
  v13 = *(unsigned __int8 *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)a3;
  v15 = *(void **)(a3 + 8);
  v17 = *(_BYTE *)(a3 + 16);
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *v4;
  v20 = *((unsigned __int8 *)v4 + 8);
  v21 = v4[2];
  if (v13)
    v22 = 1953394534;
  else
    v22 = 0x6567616D69;
  if (v13)
    v23 = 0xE400000000000000;
  else
    v23 = 0xE500000000000000;
  if (*(_BYTE *)(a3 + 16))
    v24 = 1953394534;
  else
    v24 = 0x6567616D69;
  if (*(_BYTE *)(a3 + 16))
    v25 = 0xE400000000000000;
  else
    v25 = 0xE500000000000000;
  if (v22 == v24 && v23 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v52 = v21;
    v53 = v20;
    v54 = v19;
    v55 = v14;
    v56 = a1;
    v26 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      v63 = v16;
      v64 = v15;
      v65 = v17;
      v66 = v18;
      v28 = v61;
      v29 = v70;
      sub_23786BB58();
      if (!v29)
      {
        v68 = v53;
        v69 = v52;
        v63 = v12;
        v64 = v62;
        v65 = v13;
        v66 = v55;
        v67 = v54;
        sub_23786BE34(v56, &v63, v28);
      }
      return;
    }
  }
  v27 = v15;
  if ((v12 != v16 || v62 != v15) && (sub_237A8840C() & 1) == 0)
  {
    v30 = (void *)sub_237A877F4();
    v31 = objc_msgSend(v30, sel_lastPathComponent);

    if (!v31)
    {
      sub_237A87818();
      v31 = (id)sub_237A877F4();
      swift_bridgeObjectRelease();
    }
    v32 = (void *)sub_237A877F4();
    v33 = objc_msgSend(v32, sel_stringByDeletingPathExtension);

    v34 = sub_237A87818();
    v36 = v35;

    v37._countAndFlagsBits = v34;
    v37._object = v36;
    v38 = (void *)NSFileWrapper.child(at:)(v37);
    swift_bridgeObjectRelease();
    if (v38)
    {
      v39 = (void *)sub_237A877F4();
      v40 = objc_msgSend(v39, sel_stringByDeletingPathExtension);

      v41 = sub_237A87818();
      v43 = v42;

      v44._countAndFlagsBits = v41;
      v44._object = v43;
      v45 = (void *)NSFileWrapper.child(at:)(v44);
      swift_bridgeObjectRelease();
      if (v45)
      {
        v46._countAndFlagsBits = v16;
        v46._object = v27;
        v47 = (unint64_t)NSFileWrapper.child(at:)(v46);
        if (v47)
        {
          v48 = (void *)v47;
          objc_msgSend(v38, sel_removeFileWrapper_, v47);
          objc_msgSend(v48, sel_setPreferredFilename_, v31);

          NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v48);
          if (!v49)
            swift_bridgeObjectRelease();
          return;
        }

        v38 = v45;
      }

    }
    sub_237A86324();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v50 = v57;
    v51 = v60;
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v51);
    swift_willThrow();
  }
}

uint64_t sub_23786C5C0(uint64_t a1, uint64_t a2)
{
  return sub_23786C88C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23786C5D8()
{
  return sub_237A865D0();
}

uint64_t sub_23786C5E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x23B81D23C](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_23786C630(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x23B81D248](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_23786C684(double *a1@<X8>)
{
  *a1 = MEMORY[0x23B81D254]();
}

BOOL sub_23786C6A8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_23786C6BC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23786C6CC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_23786C6E4(double *a1, double *a2)
{
  return *a1 == *a2;
}

double sub_23786C6FC@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_23786C708()
{
  return sub_237A87BB4();
}

uint64_t sub_23786C710()
{
  return sub_237A88604();
}

uint64_t sub_23786C740()
{
  return sub_237A885C8();
}

uint64_t sub_23786C750(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_237A87800();
  *a2 = 0;
  return result;
}

uint64_t sub_23786C7C4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_237A8780C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23786C840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_237A87818();
  v2 = sub_237A877F4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23786C880(uint64_t a1, uint64_t a2)
{
  return sub_23786C88C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23786C88C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_237A87818();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23786C8C8()
{
  sub_237A87818();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23786C908()
{
  uint64_t v0;

  sub_237A87818();
  sub_237A885D4();
  sub_237A87710();
  v0 = sub_237A88610();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23786C978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_237A87818();
  v2 = v1;
  if (v0 == sub_237A87818() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23786CA00()
{
  sub_23786FAA0(&qword_25681E700, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_237A89738);
  sub_23786FAA0(&qword_25681E708, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_237A896D8);
  return sub_237A88118();
}

uint64_t sub_23786CA84()
{
  sub_23786FAA0(&qword_25681E6E8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237A89890);
  sub_23786FAA0(&qword_25681E6F0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237A89830);
  sub_23786FC98();
  return sub_237A88118();
}

uint64_t sub_23786CB24()
{
  sub_23786FAA0(&qword_25681E720, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A89920);
  sub_23786FAA0(&qword_25681E728, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A8946C);
  return sub_237A88118();
}

uint64_t sub_23786CBA8()
{
  sub_23786FAA0(&qword_25681E710, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237A895E0);
  sub_23786FAA0(&qword_25681E718, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237A89580);
  return sub_237A88118();
}

uint64_t sub_23786CC2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A877F4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23786CC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237A87818();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23786CC98()
{
  sub_23786FAA0(&qword_25681E7B0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89B28);
  sub_23786FAA0(&qword_25681E7B8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89A7C);
  return sub_237A88118();
}

void sub_23786CD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23786CD7C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23786CF60);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_23786CF84(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23786DC3C(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23786D118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_2378707DC();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_237A885D4();
      swift_bridgeObjectRetain();
      sub_237A87710();
      v19 = sub_237A88610();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_237A8840C() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_237A8840C() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_23786DDC8((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_2378707DC();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_23786DDC8((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_2378707DC();
      MEMORY[0x23B81FB7C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23786D580(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23786D700((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23786D700((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x23B81FB7C](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23786D700(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v20 = sub_237A88610();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_237A8840C() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_237A8840C() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_237A885D4();
    swift_bridgeObjectRetain();
    sub_237A87710();
    v47 = sub_237A88610();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_237A8840C() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_2379FFEB0(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_237A8840C() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_23786DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  v6 = sub_237A88610();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_237A8840C() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_237A8840C() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2379006F4();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23786E0BC(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23786DDC8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_2379FFEB0(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v22 = sub_237A88610();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_237A8840C() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_237A8840C() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

unint64_t sub_23786E0BC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_237A87EA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_237A885D4();
        swift_bridgeObjectRetain();
        sub_237A87710();
        v10 = sub_237A88610();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23786E280(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, unsigned __int8 a5, void *a6)
{
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  id v27;
  id v28;
  uint64_t v29;

  result = swift_allocObject();
  v13 = 0;
  v14 = 0;
  v15 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a3 + 64);
  *(_QWORD *)(result + 16) = a4;
  *(_BYTE *)(result + 24) = a5;
  *(_QWORD *)(result + 32) = a6;
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v21 = v20 | (v14 << 6);
LABEL_21:
    v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 32 * v21 + 24);
    if (a5 == 1)
    {
      if ((a5 & v25) != 0)
      {
LABEL_24:
        *(unint64_t *)((char *)a1 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
        if (__OFADD__(v13++, 1))
        {
          __break(1u);
LABEL_27:
          v27 = a4;
          v28 = a6;
          v29 = sub_2379033B4(a1, a2, v13, a3);

          swift_release();
          return v29;
        }
      }
    }
    else if (a5 != 2 || (v25 & 2) != 0)
    {
      goto LABEL_24;
    }
  }
  v22 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v22 >= v19)
    goto LABEL_27;
  v23 = *(_QWORD *)(v15 + 8 * v22);
  ++v14;
  if (v23)
    goto LABEL_20;
  v14 = v22 + 1;
  if (v22 + 1 >= v19)
    goto LABEL_27;
  v23 = *(_QWORD *)(v15 + 8 * v14);
  if (v23)
    goto LABEL_20;
  v14 = v22 + 2;
  if (v22 + 2 >= v19)
    goto LABEL_27;
  v23 = *(_QWORD *)(v15 + 8 * v14);
  if (v23)
  {
LABEL_20:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
    goto LABEL_21;
  }
  v24 = v22 + 3;
  if (v24 >= v19)
    goto LABEL_27;
  v23 = *(_QWORD *)(v15 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_27;
    v23 = *(_QWORD *)(v15 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23786E484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_23786CD1C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_23786E558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_237A86450();
  v11 = result;
  if (result)
  {
    result = sub_237A86468();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_237A8645C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23786CD1C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_23786E60C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23786E658()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23786E68C + dword_23786E864[v0 >> 62]))();
}

uint64_t sub_23786E69C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_23786E884(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t isStackAllocationSafe;
  void *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[2];
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_BYTE *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = a4;
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = a2;
  v13 = a4;
  v24 = v12;
  isStackAllocationSafe = (uint64_t)v13;
  v15 = (void *)isStackAllocationSafe;
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v16 = (char *)v23 - ((8 * v11 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v16, 8 * v11);
    v17 = v24;
    v18 = v15;
    v19 = v23[1];
    v20 = sub_23786E280((unint64_t *)v16, v11, a1, v17, a3, v18);
    if (v19)
      swift_willThrow();
    else
      a3 = v20;
    swift_release();
  }
  else
  {
    v21 = (void *)swift_slowAlloc();
    bzero(v21, 8 * v11);
    a3 = sub_23786E280((unint64_t *)v21, v11, a1, v24, a3, v15);
    MEMORY[0x23B81FB7C](v21, -1, -1);
    swift_release();
  }

  return a3;
}

uint64_t sub_23786EAA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD *))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  int64_t v31;

  v25 = (unint64_t *)result;
  v26 = 0;
  v6 = 0;
  v27 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v31 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    v20 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v31)
      return sub_2379033B4(v25, a2, v26, a3);
    v21 = *(_QWORD *)(v27 + 8 * v20);
    ++v6;
    if (!v21)
    {
      v6 = v20 + 1;
      if (v20 + 1 >= v31)
        return sub_2379033B4(v25, a2, v26, a3);
      v21 = *(_QWORD *)(v27 + 8 * v6);
      if (!v21)
      {
        v6 = v20 + 2;
        if (v20 + 2 >= v31)
          return sub_2379033B4(v25, a2, v26, a3);
        v21 = *(_QWORD *)(v27 + 8 * v6);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v9 = (v21 - 1) & v21;
    v11 = __clz(__rbit64(v21)) + (v6 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(a3 + 56) + 32 * v11;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_BYTE *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    v28[0] = v16;
    v28[1] = v17;
    v29 = v18;
    v30 = v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    LOBYTE(v13) = a4(v13, v14, v28);
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease_n();
    if ((v13 & 1) == 0)
    {
      *(unint64_t *)((char *)v25 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_2379033B4(v25, a2, v26, a3);
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v31)
    return sub_2379033B4(v25, a2, v26, a3);
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
  {
    v6 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v6 >= v31)
      return sub_2379033B4(v25, a2, v26, a3);
    v21 = *(_QWORD *)(v27 + 8 * v6);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23786ECC8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v3 = v2;
  v14[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    v11 = sub_23786EAA0((uint64_t)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a2);
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    v11 = sub_23786EAA0((uint64_t)v12, v8, a1, a2);
    swift_release();
    MEMORY[0x23B81FB7C](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

_QWORD *sub_23786EE88(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  id v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;

  v5 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A8633C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_237A8651C();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a2;
  (*(void (**)(char *, uint64_t))(v16 + 16))(v14, a1);
  v17 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  v18 = sub_237933FE8((uint64_t)v14, 0);
  if (v2)
    return v17;
  v19 = v18;
  v45 = v7;
  v46 = v11;
  v47 = v9;
  v48 = v8;
  if (!objc_msgSend(v18, sel_isDirectory))
  {
    sub_237A862E8();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v22 = v46;
    v23 = v48;
    sub_237A864D4();
    v17 = v22;
    sub_237A862D0();
    (*(void (**)(_QWORD *, uint64_t))(v47 + 8))(v22, v23);
    swift_willThrow();

    return v17;
  }
  v51 = MEMORY[0x24BEE4AF8];
  v20 = objc_msgSend(v19, sel_fileWrappers);
  v43 = 0;
  v44 = v19;
  if (v20)
  {
    v17 = v20;
    sub_23786A1FC();
    v21 = sub_237A87668();

  }
  else
  {
    v21 = sub_2378D1444(MEMORY[0x24BEE4AF8]);
  }
  v24 = 0;
  v25 = *(_QWORD *)(v21 + 64);
  v49 = v21 + 64;
  v26 = 1 << *(_BYTE *)(v21 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v50 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v32 = v31 | (v24 << 6);
      goto LABEL_31;
    }
    v33 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v33 >= v50)
      goto LABEL_34;
    v34 = *(_QWORD *)(v49 + 8 * v33);
    ++v24;
    if (!v34)
    {
      v24 = v33 + 1;
      if (v33 + 1 >= v50)
        goto LABEL_34;
      v34 = *(_QWORD *)(v49 + 8 * v24);
      if (!v34)
      {
        v24 = v33 + 2;
        if (v33 + 2 >= v50)
          goto LABEL_34;
        v34 = *(_QWORD *)(v49 + 8 * v24);
        if (!v34)
          break;
      }
    }
LABEL_30:
    v28 = (v34 - 1) & v34;
    v32 = __clz(__rbit64(v34)) + (v24 << 6);
LABEL_31:
    v36 = *(void **)(*(_QWORD *)(v21 + 56) + 8 * v32);
    if (v15)
    {
      v17 = *(_QWORD **)(*(_QWORD *)(v21 + 48) + 16 * v32);
      swift_bridgeObjectRetain();
      v37 = v36;
      if ((sub_237A87950() & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      swift_bridgeObjectRetain();
      v29 = v36;
    }
    v30 = v36;
    v17 = &v51;
    MEMORY[0x23B81E6D0]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_237A87AB8();
    sub_237A87AE8();
    sub_237A87AAC();
LABEL_14:

    swift_bridgeObjectRelease();
  }
  v35 = v33 + 3;
  if (v35 < v50)
  {
    v34 = *(_QWORD *)(v49 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        v24 = v35 + 1;
        if (__OFADD__(v35, 1))
          break;
        if (v24 >= v50)
          goto LABEL_34;
        v34 = *(_QWORD *)(v49 + 8 * v24);
        ++v35;
        if (v34)
          goto LABEL_30;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      v41 = sub_237A880C4();
      swift_bridgeObjectRelease();
      v39 = v47;
      v38 = v48;
      v40 = v46;
      if (!v41)
        goto LABEL_40;
LABEL_36:

      return v17;
    }
    v24 = v35;
    goto LABEL_30;
  }
LABEL_34:
  swift_release();
  v17 = (_QWORD *)v51;
  if (v51 >> 62)
    goto LABEL_39;
  v39 = v47;
  v38 = v48;
  v40 = v46;
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_36;
LABEL_40:
  swift_bridgeObjectRelease();
  sub_237A862E8();
  sub_2378D4298(MEMORY[0x24BEE4AF8]);
  sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
  sub_237A864D4();
  v17 = v40;
  sub_237A862D0();
  (*(void (**)(_QWORD *, uint64_t))(v39 + 8))(v40, v38);
  swift_willThrow();

  return v17;
}

unint64_t sub_23786F388()
{
  unint64_t result;

  result = qword_25681E570;
  if (!qword_25681E570)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackageExporter.ScriptVersion, &type metadata for ArcPackageExporter.ScriptVersion);
    atomic_store(result, (unint64_t *)&qword_25681E570);
  }
  return result;
}

unint64_t sub_23786F3D0()
{
  unint64_t result;

  result = qword_25681E578;
  if (!qword_25681E578)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackageExporter.Destination, &type metadata for ArcPackageExporter.Destination);
    atomic_store(result, (unint64_t *)&qword_25681E578);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ArcPackageExporter(id *a1)
{

}

uint64_t assignWithCopy for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcPackageExporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter()
{
  return &type metadata for ArcPackageExporter;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter.ScriptVersion(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcPackageExporter.ScriptVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23786F6BC + 4 * byte_237A89155[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23786F6F0 + 4 * byte_237A89150[v4]))();
}

uint64_t sub_23786F6F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23786F6F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23786F700);
  return result;
}

uint64_t sub_23786F70C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23786F714);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23786F718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23786F720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23786F72C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23786F738(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter.ScriptVersion()
{
  return &type metadata for ArcPackageExporter.ScriptVersion;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter.Destination(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcPackageExporter.Destination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23786F830 + 4 * byte_237A8915F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23786F864 + 4 * byte_237A8915A[v4]))();
}

uint64_t sub_23786F864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23786F86C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23786F874);
  return result;
}

uint64_t sub_23786F880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23786F888);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23786F88C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23786F894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23786F8A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter.Destination()
{
  return &type metadata for ArcPackageExporter.Destination;
}

void type metadata accessor for CHSWidgetFamily(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E640);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E648);
}

void type metadata accessor for SystemDesign(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E650);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E658);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E660);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E668);
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E670);
}

uint64_t sub_23786F950(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23786F970(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E678);
}

uint64_t _s7PaletteV14LinearGradientVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.BezierCurve(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.BezierCurve(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E680);
}

uint64_t sub_23786FA48()
{
  return sub_23786FAA0(&qword_25681E688, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A89430);
}

uint64_t sub_23786FA74()
{
  return sub_23786FAA0(&qword_25681E690, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A89404);
}

uint64_t sub_23786FAA0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B81FA98](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23786FAE0()
{
  return sub_23786FAA0(&qword_25681E698, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237A89544);
}

uint64_t sub_23786FB0C()
{
  return sub_23786FAA0(&qword_25681E6A0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237A89518);
}

uint64_t sub_23786FB38()
{
  return sub_23786FAA0(&qword_25681E6A8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237A895B4);
}

uint64_t sub_23786FB64()
{
  return sub_23786FAA0(&qword_25681E6B0, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_237A8969C);
}

uint64_t sub_23786FB90()
{
  return sub_23786FAA0(&qword_25681E6B8, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_237A89670);
}

uint64_t sub_23786FBBC()
{
  return sub_23786FAA0(&qword_25681E6C0, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_237A8970C);
}

uint64_t sub_23786FBE8()
{
  return sub_23786FAA0(&qword_25681E6C8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237A897F4);
}

uint64_t sub_23786FC14()
{
  return sub_23786FAA0(&qword_25681E6D0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237A897C8);
}

uint64_t sub_23786FC40()
{
  return sub_23786FAA0(&qword_25681E6D8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237A89864);
}

uint64_t sub_23786FC6C()
{
  return sub_23786FAA0(&qword_25681E6E0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A894A0);
}

unint64_t sub_23786FC98()
{
  unint64_t result;

  result = qword_25681E6F8;
  if (!qword_25681E6F8)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE50D0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25681E6F8);
  }
  return result;
}

unint64_t sub_23786FCDC()
{
  unint64_t result;

  result = qword_25681E738;
  if (!qword_25681E738)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for EditableTheme, &type metadata for EditableTheme);
    atomic_store(result, (unint64_t *)&qword_25681E738);
  }
  return result;
}

unint64_t sub_23786FD20()
{
  unint64_t result;

  result = qword_25681E740;
  if (!qword_25681E740)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for EditableTheme, &type metadata for EditableTheme);
    atomic_store(result, (unint64_t *)&qword_25681E740);
  }
  return result;
}

uint64_t sub_23786FD64(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_23786FDA8()
{
  unint64_t result;

  result = qword_25681E748;
  if (!qword_25681E748)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ResolvedTheme, &type metadata for ResolvedTheme);
    atomic_store(result, (unint64_t *)&qword_25681E748);
  }
  return result;
}

unint64_t sub_23786FDEC()
{
  unint64_t result;

  result = qword_25681E750;
  if (!qword_25681E750)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ResolvedTheme, &type metadata for ResolvedTheme);
    atomic_store(result, (unint64_t *)&qword_25681E750);
  }
  return result;
}

uint64_t sub_23786FE30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_OWORD *sub_23786FE74(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_23786FE8C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;

  v3 = *(void **)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 64);
  v4 = *(void **)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(void **)(a1 + 128);
  v11 = *(void **)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 208);
  v17 = *(void **)(a1 + 200);
  v14 = *(_QWORD *)(a1 + 224);
  v15 = *(void **)(a1 + 216);
  v13 = *(_QWORD *)(a1 + 232);
  v22 = *(_QWORD *)(a1 + 280);
  v23 = *(void **)(a1 + 272);
  v20 = *(_QWORD *)(a1 + 296);
  v21 = *(void **)(a1 + 288);
  v19 = *(_QWORD *)(a1 + 304);
  v27 = *(_QWORD *)(a1 + 352);
  v28 = *(void **)(a1 + 344);
  v26 = *(void **)(a1 + 360);
  v25 = *(_QWORD *)(a1 + 368);
  v31 = *(_QWORD *)(a1 + 400);
  v32 = *(void **)(a1 + 392);
  v29 = *(_QWORD *)(a1 + 416);
  v30 = *(void **)(a1 + 408);
  v18 = *(_BYTE *)(a1 + 376);
  v24 = *(_BYTE *)(a1 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787007C(v3, v2, v4, v5, v6);
  swift_bridgeObjectRetain();
  sub_23787007C(v7, v12, v11, v10, v9);
  swift_bridgeObjectRetain();
  sub_23787007C(v17, v16, v15, v14, v13);
  swift_bridgeObjectRetain();
  sub_23787007C(v23, v22, v21, v20, v19);
  swift_bridgeObjectRetain();
  sub_237870090(v28, v27, v26, v25, v18);
  sub_237870090(v32, v31, v30, v29, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_23787007C(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0)
    return (void *)sub_237870090(a1, a2, a3, a4, a5);
  return a1;
}

uint64_t sub_237870090(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  id v5;
  id v6;

  if (a5 < 0)
  {
    v6 = a1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = a3;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2378700DC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;

  v3 = *(void **)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 64);
  v4 = *(void **)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(void **)(a1 + 128);
  v11 = *(void **)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 208);
  v17 = *(void **)(a1 + 200);
  v14 = *(_QWORD *)(a1 + 224);
  v15 = *(void **)(a1 + 216);
  v13 = *(_QWORD *)(a1 + 232);
  v22 = *(_QWORD *)(a1 + 280);
  v23 = *(void **)(a1 + 272);
  v20 = *(_QWORD *)(a1 + 296);
  v21 = *(void **)(a1 + 288);
  v19 = *(_QWORD *)(a1 + 304);
  v27 = *(_QWORD *)(a1 + 352);
  v28 = *(void **)(a1 + 344);
  v26 = *(void **)(a1 + 360);
  v25 = *(_QWORD *)(a1 + 368);
  v31 = *(_QWORD *)(a1 + 400);
  v32 = *(void **)(a1 + 392);
  v29 = *(_QWORD *)(a1 + 416);
  v30 = *(void **)(a1 + 408);
  v18 = *(_BYTE *)(a1 + 376);
  v24 = *(_BYTE *)(a1 + 424);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378702CC(v3, v2, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_2378702CC(v7, v12, v11, v10, v9);
  swift_bridgeObjectRelease();
  sub_2378702CC(v17, v16, v15, v14, v13);
  swift_bridgeObjectRelease();
  sub_2378702CC(v23, v22, v21, v20, v19);
  swift_bridgeObjectRelease();
  sub_2378702E0(v28, v27, v26, v25, v18);
  sub_2378702E0(v32, v31, v30, v29, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2378702CC(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0)
    sub_2378702E0(a1, a2, a3, a4, a5);
}

void sub_2378702E0(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    a3 = a1;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

}

double sub_23787032C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_237870370(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2378703B4(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v14 = *(_OWORD *)(a1 + 400);
  v15 = *(_OWORD *)(a1 + 416);
  v12 = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 384);
  v10 = *(_OWORD *)(a1 + 336);
  v11 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 208);
  sub_23787046C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(void **)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(void **)(a1 + 200),
    v3,
    *((void **)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    (void *)v6,
    *((uint64_t *)&v6 + 1),
    (void *)v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((void **)&v10 + 1),
    v11,
    *((void **)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((void **)&v13 + 1),
    v14,
    *((void **)&v14 + 1),
    v15,
    SBYTE8(v15));
  return a1;
}

uint64_t sub_23787046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,void *a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,void *a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,void *a46,uint64_t a47,char a48,uint64_t a49,void *a50,uint64_t a51,void *a52,uint64_t a53,char a54)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2378702CC(a8, a9, a10, a11, a12);
    swift_bridgeObjectRelease();
    sub_2378702CC(a17, a18, a19, a20, a21);
    swift_bridgeObjectRelease();
    sub_2378702CC(a26, a27, a28, a29, a30);
    swift_bridgeObjectRelease();
    sub_2378702CC(a35, a36, a37, a38, a39);
    swift_bridgeObjectRelease();
    sub_2378702E0(a44, a45, a46, a47, a48);
    sub_2378702E0(a50, a51, a52, a53, a54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237870670()
{
  uint64_t v0;

  return swift_deallocObject();
}

BOOL sub_23787069C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(v3 + 24);
  if (!*(_BYTE *)(v3 + 24))
    return 1;
  if ((_DWORD)v4 != 1)
    v4 = 2;
  return (v4 & *(_QWORD *)(a3 + 24)) != 0;
}

uint64_t sub_2378706C8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2378706F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237870734(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_2Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23787076C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2378707B0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378707DC()
{
  return swift_release();
}

_QWORD *__swift_project_boxed_opaque_existential_2Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *sub_237870808(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v6 = a1[13];
  v2 = a1[15];
  v5 = a1[14];
  v3 = a1[16];
  sub_2378708DC(*a1, a1[1], a1[2], a1[3]);
  sub_2378708DC(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_2378708DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_237870938()
{
  unint64_t result;

  result = qword_25681E768;
  if (!qword_25681E768)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InfoPlist, &type metadata for InfoPlist);
    atomic_store(result, (unint64_t *)&qword_25681E768);
  }
  return result;
}

uint64_t sub_23787097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378709D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23786FD64(a1, a2);
  return a1;
}

uint64_t sub_2378709EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_237870A30(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2378709EC(a1, a2);
  return a1;
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E770);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E778);
}

void type metadata accessor for CTRun(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E780);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E788);
}

void type metadata accessor for CTLine(uint64_t a1)
{
  sub_237870AA8(a1, &qword_25681E790);
}

void sub_237870AA8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_237870AEC()
{
  return sub_23786FAA0(&qword_25681E798, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89A40);
}

uint64_t sub_237870B18()
{
  return sub_23786FAA0(&qword_25681E7A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89A14);
}

uint64_t sub_237870B44()
{
  return sub_23786FAA0(&qword_25681E7A8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89AB0);
}

uint64_t dispatch thunk of FocusableContent.isFocusable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t WidgetRegistry.__allocating_init(widgets:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_237872088(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t WidgetRegistry.init(widgets:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_237872088(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_237870C10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[4];
  uint64_t v36;

  v5 = sub_237A86594();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_OWORD *)a1 + 1);
  v10 = *((_OWORD *)a1 + 3);
  v35[2] = *((_OWORD *)a1 + 2);
  v35[3] = v10;
  v11 = a1[8];
  v33 = a1[7];
  v36 = v11;
  v35[0] = *(_OWORD *)a1;
  v35[1] = v9;
  v12 = *a1;
  v27 = a1[1];
  v28 = a1[2];
  v29 = a1[3];
  v13 = a1[5];
  v31 = a1[4];
  v32 = v13;
  v14 = (uint64_t *)(v2 + 16);
  v30 = *((unsigned __int8 *)a1 + 48);
  swift_beginAccess();
  v15 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_5;
  sub_237872300((uint64_t)v35);
  swift_bridgeObjectRetain();
  v16 = sub_2378D318C((uint64_t *)v35);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_237872354((uint64_t)v35);
LABEL_5:
    sub_237A86588();
    v19 = sub_237A86570();
    v20 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_6;
  }
  v18 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v16);
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_237872354((uint64_t)v35);
LABEL_6:
  swift_beginAccess();
  sub_237872300((uint64_t)v35);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v34 = *v14;
  *v14 = 0x8000000000000000;
  sub_23787125C(v19, v20, (uint64_t *)v35, isUniquelyReferenced_nonNull_native);
  *v14 = v34;
  swift_bridgeObjectRelease();
  sub_237872354((uint64_t)v35);
  swift_endAccess();
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v20;
  v23 = v27;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v23;
  v24 = v29;
  *(_QWORD *)(a2 + 32) = v28;
  *(_QWORD *)(a2 + 40) = v24;
  v25 = v32;
  *(_QWORD *)(a2 + 48) = v31;
  *(_QWORD *)(a2 + 56) = v25;
  *(_BYTE *)(a2 + 64) = v30;
  *(_QWORD *)(a2 + 72) = v33;
  *(_QWORD *)(a2 + 80) = v11;
  return sub_237872300((uint64_t)v35);
}

uint64_t WidgetRegistry.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetRegistry.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_237870E7C(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_2Tm(v19);
        return sub_237870734(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C3CF8();
      goto LABEL_7;
    }
    sub_2378C712C(v15, a4 & 1);
    v21 = sub_2378D2DB8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCDEC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237870FB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_2378D2DB8(a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_13;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_9;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_2378C3EE0();
    goto LABEL_9;
  }
  sub_2378C7450(v20, a7 & 1);
  v23 = sub_2378D2DB8(a5, a6);
  if ((v21 & 1) != (v24 & 1))
  {
LABEL_13:
    result = sub_237A8858C();
    __break(1u);
    return result;
  }
  v17 = v23;
LABEL_9:
  v25 = *v8;
  if ((v21 & 1) != 0)
  {
    v26 = v25[7] + 32 * v17;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v26 = a1;
    *(_QWORD *)(v26 + 8) = a2;
    *(_BYTE *)(v26 + 16) = a3 & 1;
    *(_QWORD *)(v26 + 24) = a4;
  }
  else
  {
    sub_2378CCE58(v17, a5, a6, a1, a2, a3 & 1, a4, v25);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_237871118(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 88 * v12;
        v20 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v19 + 48) = v20;
        *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 64);
        *(_BYTE *)(v19 + 80) = *(_BYTE *)(a1 + 80);
        v21 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)v19 = *(_OWORD *)a1;
        *(_OWORD *)(v19 + 16) = v21;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_2378C4260();
      goto LABEL_7;
    }
    sub_2378C7AA0(result, a4 & 1);
    result = sub_2378D2DB8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCEB0(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_23787125C(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D318C(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = swift_bridgeObjectRelease();
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C45E0();
      goto LABEL_7;
    }
    sub_2378C8128(v15, a4 & 1);
    v21 = sub_2378D318C(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCF1C(v12, (uint64_t)a3, a1, a2, v18);
      return sub_237872300((uint64_t)a3);
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237871380(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C4FB8();
      goto LABEL_7;
    }
    sub_2378C93CC(v15, a4 & 1);
    v21 = sub_2378D2DB4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCF80(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2378714B0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_237872430((uint64_t)a1, v18[7] + (v12 << 7));
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C4FC4();
      goto LABEL_7;
    }
    sub_2378C93D8(v15, a4 & 1);
    v20 = sub_2378D2DB4(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_237872430((uint64_t)a1, v18[7] + (v12 << 7));
LABEL_11:
      sub_2378CCF84(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2378715D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C51D0();
      goto LABEL_7;
    }
    sub_2378C983C(v15, a4 & 1);
    v21 = sub_2378D2DB4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCF80(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237871708(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237871A3C(a1, a2, a3, (void (*)(void))sub_2378C55CC, (void (*)(void))sub_2378C9EE8, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_2378CD03C);
}

uint64_t sub_23787172C(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_2378D3230(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v19[7] + v13) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2378C55E0();
    goto LABEL_7;
  }
  sub_2378C9EFC(result, a3 & 1);
  result = sub_2378D3230(a2);
  if ((v17 & 1) != (v20 & 1))
  {
LABEL_14:
    result = sub_237A8858C();
    __break(1u);
    return result;
  }
  v13 = result;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_2378723E8(a2, (uint64_t)v10);
  return sub_2378CD048(v13, (uint64_t)v10, a1 & 1, v19);
}

uint64_t sub_23787187C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t result;
  unint64_t v29;
  char v30;
  uint64_t v31;
  int v32;

  v7 = (_QWORD **)v6;
  v32 = a4;
  v31 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_2378D3230(a5);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    v23 = *v7;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 32 * v17;
      v25 = *(_QWORD *)(v24 + 8);
      v26 = *(_QWORD *)(v24 + 16);
      v27 = *(_BYTE *)(v24 + 24);
      swift_release();
      result = sub_2378724B0(v25, v26, v27);
      *(_QWORD *)v24 = a1;
      *(_QWORD *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = v31;
      *(_BYTE *)(v24 + 24) = v32;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_2378C5814();
    goto LABEL_7;
  }
  sub_2378CA298(v20, a6 & 1);
  v29 = sub_2378D3230(a5);
  if ((v21 & 1) != (v30 & 1))
  {
LABEL_14:
    result = sub_237A8858C();
    __break(1u);
    return result;
  }
  v17 = v29;
  v23 = *v7;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_2378723E8(a5, (uint64_t)v14);
  return sub_2378CD0E4(v17, (uint64_t)v14, a1, a2, v31, v32, v23);
}

uint64_t sub_237871A18(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237871A3C(a1, a2, a3, (void (*)(void))sub_2378C5AB0, (void (*)(void))sub_2378CA684, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_2378CD1A8);
}

uint64_t sub_237871A3C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t (*a7)(unint64_t, char *, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t (*v32)(unint64_t, char *, uint64_t, uint64_t);
  uint64_t v33;

  v31 = a5;
  v32 = a7;
  v10 = v7;
  v33 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v7;
  v18 = sub_2378D3230(a2);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v10;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = *(_QWORD *)(v24 + 56);
      v26 = a6(0);
      return sub_23787246C(v33, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a6);
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v31();
  v28 = sub_2378D3230(a2);
  if ((v22 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_237A8858C();
    __break(1u);
    return result;
  }
  v18 = v28;
  v24 = *v10;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_2378723E8(a2, (uint64_t)v15);
  return v32(v18, v15, v33, v24);
}

uint64_t sub_237871BB8(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v7 = a2 & 1;
  v8 = (_QWORD *)*v3;
  v10 = sub_2378D32B8(a2 & 1);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return result;
      }
      return sub_2378CD278(v10, v7, a1, v16);
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_2378C5F10();
      goto LABEL_7;
    }
    sub_2378CADD0(result, a3 & 1);
    result = sub_2378D32B8(v7);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2378CD278(v10, v7, a1, v16);
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237871CC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_237871F34(a1, a2, a3, a4, (void (*)(void))sub_2378C6660, (void (*)(void))sub_2378CBB20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378CCF80);
}

void sub_237871CDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2378D2DB8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2378C6824();
      goto LABEL_7;
    }
    sub_2378CBE04(v15, a4 & 1);
    v20 = sub_2378D2DB8(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2378CCF80(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_237A8858C();
  __break(1u);
}

unint64_t sub_237871E08(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2378D2ED4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_2378724C4((uint64_t)a1, v16[7] + 48 * v10);
      return sub_2378CD320(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2378C69D8();
      goto LABEL_7;
    }
    sub_2378CC118(v13, a3 & 1);
    v18 = sub_2378D2ED4(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_2378724C4((uint64_t)a1, v16[7] + 48 * v10);
      return sub_2378CD320(v10, a2, a1, v16);
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237871F18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_237871F34(a1, a2, a3, a4, (void (*)(void))sub_2378C6DC8, (void (*)(void))sub_2378CC7CC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378CCF80);
}

uint64_t sub_237871F34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;

  v10 = v7;
  v15 = *v7;
  v17 = sub_2378D2DB8(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        result = swift_release();
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = sub_2378D2DB8(a2, a3);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237872088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *i;
  uint64_t *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v2 = v1;
  v4 = sub_237A86594();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v2;
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4B00];
  v7 = (_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return v37;
  for (i = (__int128 *)(a1 + 32); ; i = (__int128 *)((char *)i + 72))
  {
    v11 = i[3];
    v43 = i[2];
    v44 = v11;
    v45 = *((_QWORD *)i + 8);
    v12 = i[1];
    v41 = *i;
    v42 = v12;
    sub_237872300((uint64_t)&v41);
    sub_237872300((uint64_t)&v41);
    sub_237A86588();
    v13 = sub_237A86570();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40 = (_QWORD *)*v7;
    v17 = v40;
    *v7 = 0x8000000000000000;
    v19 = sub_2378D318C((uint64_t *)&v41);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = v40;
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2378C45E0();
        v26 = v40;
        if ((v23 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2378C8128(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_2378D318C((uint64_t *)&v41);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_19;
      v19 = v24;
      v26 = v40;
      if ((v23 & 1) != 0)
      {
LABEL_3:
        v10 = (uint64_t *)(v26[7] + 16 * v19);
        swift_bridgeObjectRelease();
        *v10 = v13;
        v10[1] = v15;
        goto LABEL_4;
      }
    }
    v26[(v19 >> 6) + 8] |= 1 << v19;
    v27 = v26[6] + 72 * v19;
    *(_OWORD *)v27 = v41;
    v28 = v42;
    v29 = v43;
    v30 = v44;
    *(_QWORD *)(v27 + 64) = v45;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    *(_OWORD *)(v27 + 16) = v28;
    v31 = (uint64_t *)(v26[7] + 16 * v19);
    *v31 = v13;
    v31[1] = v15;
    v32 = v26[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_18;
    v26[2] = v34;
    sub_237872300((uint64_t)&v41);
LABEL_4:
    *v7 = v26;
    swift_bridgeObjectRelease();
    sub_237872354((uint64_t)&v41);
    swift_endAccess();
    sub_237872354((uint64_t)&v41);
    if (!--v8)
      return v37;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237872300(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237872354(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for WidgetRegistry()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetRegistry.__allocating_init(widgets:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WidgetRegistry.getWidget(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_2378723E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237872430(uint64_t a1, uint64_t a2)
{
  _s7PaletteVwta(a2, a1);
  return a2;
}

uint64_t sub_23787246C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2378724B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2378724C4(uint64_t a1, uint64_t a2)
{
  assignWithTake for ImageAsset(a2, a1);
  return a2;
}

__n128 static Theme.Palette.RepresentedColorScheme.duoTone(tone1:tone2:)@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;

  v4 = *a1;
  v5 = a1[1];
  v6 = *a2;
  v7 = a2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_237A89BC0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = v4;
  *(_QWORD *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = 0x3FDFFFD60E94EE39;
  *(_QWORD *)(v8 + 64) = v4;
  *(_QWORD *)(v8 + 72) = v5;
  *(_QWORD *)(v8 + 80) = 0x3FE0000000000000;
  *(_QWORD *)(v8 + 88) = v6;
  *(_QWORD *)(v8 + 96) = v7;
  *(_QWORD *)(v8 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(v8 + 112) = v6;
  *(_QWORD *)(v8 + 120) = v7;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  sub_237A87560();
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = v10;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 40) = 2;
  return result;
}

__n128 Theme.Palette.LinearGradient.Stop.init(location:color:)@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  __n128 result;

  *(double *)a2 = a3;
  result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

uint64_t Theme.Palette.LinearGradient.init(stops:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

void Theme.Palette.RepresentedColorScheme.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23787264C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  return sub_237876B84(v0, v4, v3, v2, v1, 0);
}

uint64_t static Theme.Palette.LinearGradient.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_237875A34(*a1, *a2) & 1) != 0 && (sub_237A87548() & 1) != 0)
    return sub_237A87548();
  else
    return 0;
}

uint64_t sub_23787282C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237872858 + 4 * byte_237A89BD4[*v0]))(0x656C676E6973, 0xE600000000000000);
}

uint64_t sub_237872858()
{
  return 0x4363696D616E7964;
}

uint64_t sub_237872878()
{
  return 0x72477261656E696CLL;
}

uint64_t sub_23787289C()
{
  return 0x6C6F6369746C756DLL;
}

uint64_t sub_2378728B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237879F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378728DC()
{
  return 0;
}

void sub_2378728E8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2378728F4()
{
  sub_237879478();
  return sub_237A88718();
}

uint64_t sub_23787291C()
{
  sub_237879478();
  return sub_237A88724();
}

uint64_t sub_237872944()
{
  return 1;
}

uint64_t sub_237872950()
{
  return sub_237A885E0();
}

uint64_t sub_237872978()
{
  return 12383;
}

void sub_237872988(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_237872994()
{
  sub_237879588();
  return sub_237A88718();
}

uint64_t sub_2378729BC()
{
  sub_237879588();
  return sub_237A88724();
}

uint64_t sub_2378729E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237872A60()
{
  sub_237879500();
  return sub_237A88718();
}

uint64_t sub_237872A88()
{
  sub_237879500();
  return sub_237A88724();
}

uint64_t sub_237872AB0()
{
  return 0;
}

uint64_t sub_237872ABC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_237872AE8()
{
  sub_2378794BC();
  return sub_237A88718();
}

uint64_t sub_237872B10()
{
  sub_2378794BC();
  return sub_237A88724();
}

uint64_t sub_237872B38()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_237872B78()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_237872BB4()
{
  return 0x726F6C6F63;
}

uint64_t sub_237872BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237872C54()
{
  sub_237879698();
  return sub_237A88718();
}

uint64_t sub_237872C7C()
{
  sub_237879698();
  return sub_237A88724();
}

void Theme.Palette.RepresentedColorScheme.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[8];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E900);
  v12[6] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v12[4] = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E908);
  v12[7] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v12[5] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E910);
  v12[2] = *(_QWORD *)(v5 - 8);
  v12[3] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v12[1] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E918);
  v12[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E920);
  v19 = *(_QWORD *)(v8 - 8);
  v20 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 8);
  v16 = v9;
  v10 = *(_QWORD *)(v1 + 32);
  v17 = *(_QWORD *)(v1 + 24);
  v18 = v10;
  v11 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237879478();
  sub_237A886B8();
  __asm { BR              X9 }
}

uint64_t sub_237872E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 128) = 0;
  sub_237879698();
  swift_retain();
  v5 = *(_QWORD *)(v4 - 136);
  sub_237A88220();
  *(_QWORD *)(v4 - 128) = v3;
  sub_237879654();
  sub_237A882B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 8))(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v0, v5);
  return sub_237876B84(v3, *(_QWORD *)(v4 - 176), *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 152), 0);
}

void Theme.Palette.RepresentedColorScheme.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  sub_237A885D4();
  __asm { BR              X9 }
}

uint64_t sub_237873188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  sub_237876B84(v0, v4, v3, v2, v1, 0);
  return sub_237A88610();
}

uint64_t Theme.Palette.RepresentedColorScheme.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[8];
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v30 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E978);
  v24[6] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E980);
  v24[7] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E988);
  v6 = *(_QWORD *)(v5 - 8);
  v24[4] = v5;
  v24[5] = v6;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E990);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E998);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v16);
  sub_237879478();
  v17 = v32;
  sub_237A88688();
  if (!v17)
  {
    v24[1] = v9;
    v24[2] = v11;
    v24[3] = 0;
    v32 = v13;
    v18 = v15;
    v19 = sub_237A881FC();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X9 }
    v20 = sub_237A87FB0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v22 = &type metadata for Theme.Palette.RepresentedColorScheme;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v31);
}

void sub_2378735E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 168) = v1;
  *(_BYTE *)(v3 - 120) = 1;
  sub_237879588();
  v4 = v0;
  v5 = *(_QWORD *)(v3 - 216);
  sub_237A88154();
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
    sub_237879720(&qword_25681E9B0, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
    v6 = *(_QWORD *)(v3 - 208);
    v7 = *(_QWORD *)(v3 - 160);
    sub_237A881F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v7, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 8))(v2, v4);
    JUMPOUT(0x2378738F4);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2378735B8);
}

void sub_2378736B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 168) = v1;
  *(_BYTE *)(v5 - 120) = 2;
  sub_237879500();
  v6 = v0;
  v7 = *(_QWORD *)(v5 - 216);
  sub_237A88154();
  if (v7)
    JUMPOUT(0x2378736FCLL);
  sub_2378796DC();
  sub_237A881F0();
  v8 = *(_QWORD *)(v5 - 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 8))(v3, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
  JUMPOUT(0x2378738F0);
}

void sub_237873714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 120) = 3;
  sub_2378794BC();
  v3 = *(_QWORD *)(v2 - 168);
  v4 = *(_QWORD *)(v2 - 216);
  sub_237A88154();
  if (v4)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x2378735B8);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 192) + 8))(v3, *(_QWORD *)(v2 - 176));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v0);
  JUMPOUT(0x2378738B4);
}

uint64_t sub_237873908@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.RepresentedColorScheme.init(from:)(a1, a2);
}

void sub_23787391C(_QWORD *a1)
{
  Theme.Palette.RepresentedColorScheme.encode(to:)(a1);
}

void sub_237873938()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  sub_237A885D4();
  __asm { BR              X9 }
}

uint64_t sub_237873988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  sub_237876B84(v0, v4, v3, v2, v1, 0);
  return sub_237A88610();
}

uint64_t Theme.Palette.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Theme.Palette.backgroundOverrideColor.getter()
{
  return swift_retain();
}

uint64_t Theme.Palette.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.representedColorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_23787978C(v2, v3, v4, v5, v6, v7);
}

uint64_t Theme.Palette.sortIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t Theme.Palette.accentColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  a1[1] = v3;
  return sub_2378797D4(v2);
}

uint64_t Theme.Palette.prominent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t Theme.Palette.init(colorSet:colorMap:explicitColorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(_QWORD **)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, _QWORD *);
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t *__return_ptr, _QWORD **);
  uint64_t (*v62)(_QWORD **);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 56);
  v57 = *(_QWORD *)(a1 + 48);
  v58 = *(_QWORD *)(a1 + 32);
  v52 = *(_BYTE *)(a1 + 64);
  v55 = *(_QWORD **)a1;
  v56 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_BYTE *)(a1 + 96);
  v59 = *(_QWORD *)(a1 + 80);
  v60 = *(_QWORD *)(a1 + 104);
  v62 = *a2;
  v65 = *(_QWORD **)a1;
  v66 = v6;
  sub_237879800();
  v54 = v6;
  swift_bridgeObjectRetain();
  v13 = sub_237A87E3C();
  v47 = v14;
  v48 = v13;
  v50 = v11;
  v51 = v9;
  v53 = v10;
  v49 = v12;
  if (a3)
  {
    v65 = v55;
    v66 = v6;
    v67 = v7;
    v68 = v8;
    v69 = v58;
    v70 = v9;
    v71 = v57;
    v72 = v10;
    v73 = v52;
    v74 = v56;
    v75 = v59;
    v76 = v11;
    v77 = v12;
    v78 = v60;
    v15 = (void (*)(uint64_t *__return_ptr, _QWORD *))v62(&v65);
    v16 = (_QWORD *)sub_237879BAC(MEMORY[0x24BEE4B00], a3, v15);
    swift_release();
    swift_bridgeObjectRelease();
    v17 = v10;
    swift_release();
    v18 = v52;
LABEL_19:
    v43 = v59;
    goto LABEL_20;
  }
  v65 = v55;
  v66 = v6;
  v67 = v7;
  v68 = v8;
  v69 = v58;
  v70 = v9;
  v71 = v57;
  v72 = v10;
  v73 = v52;
  v74 = v56;
  v75 = v59;
  v76 = v11;
  v77 = v12;
  v78 = v60;
  v61 = (void (*)(uint64_t *__return_ptr, _QWORD **))v62(&v65);
  v19 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  v20 = v8;
  v21 = *(_QWORD *)(v19 + 16);
  v22 = v20;
  if (!v21)
  {
    v43 = v59;
    v18 = v52;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)MEMORY[0x24BEE4B00];
    v8 = v22;
    v17 = v53;
LABEL_20:
    swift_retain();
    sub_23787978C(v8, v58, v9, v57, v17, v18);
    sub_2378797D4(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237876B84(v8, v58, v9, v57, v17, v18);
    sub_23787A14C(v59);
    result = swift_release();
    *(_QWORD *)a4 = v55;
    *(_QWORD *)(a4 + 8) = v54;
    *(_QWORD *)(a4 + 16) = v48;
    *(_QWORD *)(a4 + 24) = v47;
    *(_QWORD *)(a4 + 32) = v60;
    *(_QWORD *)(a4 + 40) = v16;
    *(_QWORD *)(a4 + 48) = v8;
    *(_QWORD *)(a4 + 56) = v58;
    *(_QWORD *)(a4 + 64) = v51;
    *(_QWORD *)(a4 + 72) = v57;
    *(_QWORD *)(a4 + 80) = v53;
    *(_BYTE *)(a4 + 88) = v18;
    *(_QWORD *)(a4 + 96) = v56;
    *(_QWORD *)(a4 + 104) = v59;
    *(_QWORD *)(a4 + 112) = v50;
    *(_BYTE *)(a4 + 120) = v49;
    return result;
  }
  v45 = v20;
  v46 = a4;
  swift_bridgeObjectRetain();
  v23 = (unsigned __int8 *)(v19 + 48);
  v24 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v63 = v21;
    v26 = *((_QWORD *)v23 - 2);
    v27 = *((_QWORD *)v23 - 1);
    v28 = *v23;
    v65 = (_QWORD *)v26;
    v66 = v27;
    LOBYTE(v67) = v28;
    sub_23787A11C(v26, v27, v28);
    sub_23787A11C(v26, v27, v28);
    swift_bridgeObjectRetain();
    v61(&v64, &v65);
    v29 = v64;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = v24;
    v32 = sub_2378D2DC4(v26, v27, v28);
    v33 = v24[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v24[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v16 = v65;
        if ((v31 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_2378C47F0();
        v16 = v65;
        if ((v36 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_2378C8570(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_2378D2DC4(v26, v27, v28);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_24;
      v32 = v37;
      v16 = v65;
      if ((v36 & 1) != 0)
      {
LABEL_5:
        v25 = v16[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v25 + 8 * v32) = v29;
        goto LABEL_6;
      }
    }
    v16[(v32 >> 6) + 8] |= 1 << v32;
    v39 = v16[6] + 24 * v32;
    *(_QWORD *)v39 = v26;
    *(_QWORD *)(v39 + 8) = v27;
    *(_BYTE *)(v39 + 16) = v28;
    *(_QWORD *)(v16[7] + 8 * v32) = v29;
    v40 = v16[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_23;
    v16[2] = v42;
    sub_23787A11C(v26, v27, v28);
LABEL_6:
    v23 += 24;
    swift_bridgeObjectRelease();
    sub_23787A134(v26, v27, v28);
    sub_23787A134(v26, v27, v28);
    swift_bridgeObjectRelease();
    v24 = v16;
    v21 = v63 - 1;
    if (v63 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      v8 = v45;
      a4 = v46;
      v9 = v51;
      v17 = v53;
      v18 = v52;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t Theme.Palette.merging(colors:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v3 = v1[1];
  v16 = v1[2];
  v17 = *v1;
  v4 = v1[5];
  v13 = v1[4];
  v14 = v1[3];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v15 = v1[10];
  v21 = v1[12];
  v18 = v1[14];
  v19 = v1[13];
  v20 = *((_BYTE *)v1 + 120);
  v9 = *((_BYTE *)v1 + 88);
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_237874160(v10, v4);
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v15;
  *(_BYTE *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v21;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 120) = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v5, v6, v7, v8, v15, v9);
  return sub_2378797D4(v19);
}

uint64_t sub_237874160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_2378C39D0(a1, (uint64_t)sub_2378CDA88, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t Theme.Palette.subset(colorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v5 = v2[1];
  v17 = v2[2];
  v18 = *v2;
  v13 = v2[4];
  v16 = v2[6];
  v6 = v2[8];
  v14 = v2[3];
  v15 = v2[7];
  v7 = v2[9];
  v8 = v2[10];
  v22 = v2[12];
  v19 = v2[14];
  v20 = v2[13];
  v21 = *((_BYTE *)v2 + 120);
  v9 = *((_BYTE *)v2 + 88);
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23787A7E8(v10, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_BYTE *)(a2 + 88) = v9;
  *(_QWORD *)(a2 + 96) = v22;
  *(_QWORD *)(a2 + 104) = v20;
  *(_QWORD *)(a2 + 112) = v19;
  *(_BYTE *)(a2 + 120) = v21;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v16, v15, v6, v7, v8, v9);
  return sub_2378797D4(v20);
}

void Theme.Palette.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v5 = *(unsigned __int8 *)(v1 + 88);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885EC();
  if (v4)
  {
    swift_retain();
    sub_237A871E8();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_237878280(a1, v3);
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_23787443C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  sub_237876B84(v0, v2, v3, v4, v5, 0);
  sub_237A885E0();
  sub_237A885EC();
  if (v6)
  {
    swift_retain();
    swift_retain();
    sub_237A871E8();
    sub_237A871E8();
    sub_23787A14C(v6);
  }
  return sub_237A885EC();
}

uint64_t sub_2378745E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237874608 + 4 * byte_237A89BEC[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_237874608()
{
  return 0x4E79616C70736964;
}

unint64_t sub_237874628()
{
  return 0xD000000000000017;
}

uint64_t sub_237874648()
{
  return 0x73726F6C6F63;
}

unint64_t sub_23787465C()
{
  return 0xD000000000000016;
}

uint64_t sub_237874678()
{
  return 0x65646E4974726F73;
}

uint64_t sub_237874698()
{
  return 0x6F43746E65636361;
}

uint64_t sub_2378746B8()
{
  return 0x6E656E696D6F7270;
}

uint64_t sub_2378746D4()
{
  unsigned __int8 *v0;

  return sub_2378745E0(*v0);
}

uint64_t sub_2378746DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23787B03C(a1, a2);
  *a3 = result;
  return result;
}

void sub_237874700(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23787470C()
{
  sub_23787A99C();
  return sub_237A88718();
}

uint64_t sub_237874734()
{
  sub_23787A99C();
  return sub_237A88724();
}

uint64_t Theme.Palette.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = v1[2];
  v31 = v1[3];
  v32 = v9;
  v10 = v1[4];
  v29 = v1[5];
  v30 = v10;
  v11 = v1[6];
  v27 = v1[7];
  v28 = v11;
  v12 = v1[9];
  v24 = v1[8];
  v25 = v12;
  v26 = v1[10];
  v40 = *((unsigned __int8 *)v1 + 88);
  v13 = v1[12];
  v21 = v1[13];
  v22 = v1[14];
  v23 = v13;
  v20[3] = *((unsigned __int8 *)v1 + 120);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787A99C();
  sub_237A886B8();
  v34 = v7;
  v35 = v8;
  v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  sub_23787AB28(&qword_25681E9D0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v14 = v33;
  sub_237A882B0();
  if (!v14)
  {
    v15 = v29;
    v16 = v30;
    v18 = v27;
    v17 = v28;
    LOBYTE(v34) = 1;
    sub_237A88274();
    v34 = v16;
    v41 = 2;
    sub_237879654();
    sub_237A88268();
    v34 = v15;
    v41 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9D8);
    sub_23787A9E0(&qword_25681E9E0, (uint64_t (*)(void))sub_23787AA5C, (uint64_t (*)(void))sub_23787AAA0, MEMORY[0x24BEE04C0]);
    sub_237A882B0();
    v34 = v17;
    v35 = v18;
    v36 = v24;
    v37 = v25;
    v38 = v26;
    v39 = v40;
    v41 = 4;
    sub_23787AAE4();
    sub_237A882B0();
    LOBYTE(v34) = 5;
    sub_237A88298();
    v34 = v21;
    v35 = v22;
    v41 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
    sub_237879720(&qword_25681E958, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
    sub_237A88268();
    LOBYTE(v34) = 7;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Theme.Palette.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t Theme.Palette.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  _BYTE v69[7];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  _DWORD v75[3];
  uint64_t v76;

  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA00);
  v5 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787A99C();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  v51 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  LOBYTE(v52) = 0;
  sub_23787AB28(&qword_25681EA08, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A881F0();
  v9 = v59;
  v10 = v60;
  LOBYTE(v59) = 1;
  swift_bridgeObjectRetain();
  v11 = (uint64_t)a1;
  v49 = sub_237A881B4();
  v50 = v9;
  v12 = v10;
  LOBYTE(v52) = 2;
  v14 = v13;
  sub_237879610();
  swift_bridgeObjectRetain();
  sub_237A881A8();
  v15 = v14;
  v16 = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9D8);
  LOBYTE(v52) = 3;
  sub_23787A9E0(&qword_25681EA10, (uint64_t (*)(void))sub_23787AB8C, (uint64_t (*)(void))sub_23787ABD0, MEMORY[0x24BEE04E0]);
  swift_retain();
  sub_237A881F0();
  v48 = v16;
  v17 = v59;
  LOBYTE(v52) = 4;
  sub_23787AC14();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v47 = v12;
  v39 = v17;
  v18 = v59;
  LOBYTE(v59) = 5;
  v19 = v18;
  v45 = v62;
  v46 = v60;
  v44 = v61;
  v43 = v63;
  sub_23787978C(v18, v60, v61, *((uint64_t *)&v61 + 1), v62, v63);
  v20 = sub_237A881D8();
  v40 = v19;
  v37 = v20;
  v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
  LOBYTE(v52) = 6;
  sub_237879720(&qword_25681E9B0, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
  sub_237A881A8();
  v21 = v59;
  v74 = 7;
  v42 = v60;
  sub_2378797D4(v59);
  v22 = sub_237A881C0();
  v41 = v21;
  LOBYTE(v17) = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v76);
  LODWORD(v76) = v17 & 1;
  *(_QWORD *)&v52 = v50;
  *((_QWORD *)&v52 + 1) = v12;
  *(_QWORD *)&v53 = v49;
  *((_QWORD *)&v53 + 1) = v15;
  v36 = v15;
  *(_QWORD *)&v54 = v48;
  *((_QWORD *)&v54 + 1) = v39;
  v23 = v45;
  *(_QWORD *)&v55 = v40;
  *((_QWORD *)&v55 + 1) = v46;
  v24 = v44;
  v56 = v44;
  *(_QWORD *)&v57 = v45;
  LOBYTE(v12) = v43;
  BYTE8(v57) = v43;
  *(_QWORD *)&v58[0] = v37;
  *((_QWORD *)&v58[0] + 1) = v21;
  v25 = v42;
  *(_QWORD *)&v58[1] = v42;
  BYTE8(v58[1]) = v17 & 1;
  sub_23787AC58((uint64_t)&v52);
  sub_23787A14C(v21);
  sub_237876B84(v40, v46, v24, *((uint64_t *)&v24 + 1), v23, v12);
  v26 = v47;
  swift_bridgeObjectRelease();
  v27 = v36;
  swift_bridgeObjectRelease();
  v28 = v48;
  swift_release();
  v29 = v39;
  swift_bridgeObjectRelease();
  v30 = v57;
  v31 = v51;
  v51[4] = v56;
  v31[5] = v30;
  v31[6] = v58[0];
  *(_OWORD *)((char *)v31 + 105) = *(_OWORD *)((char *)v58 + 9);
  v32 = v53;
  *v31 = v52;
  v31[1] = v32;
  v33 = v55;
  v31[2] = v54;
  v31[3] = v33;
  __swift_destroy_boxed_opaque_existential_2Tm(v11);
  v59 = v50;
  v60 = v26;
  *(_QWORD *)&v61 = v49;
  *((_QWORD *)&v61 + 1) = v27;
  v62 = v28;
  v63 = v29;
  v64 = v40;
  v65 = v46;
  v66 = v44;
  v67 = v45;
  v68 = v12;
  *(_DWORD *)v69 = v75[0];
  *(_DWORD *)&v69[3] = *(_DWORD *)((char *)v75 + 3);
  v70 = v37;
  v71 = v41;
  v72 = v25;
  v73 = v76;
  return sub_23787AD04((uint64_t)&v59);
}

uint64_t sub_237875268@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Theme.Palette.init(from:)(a1, a2);
}

uint64_t sub_23787527C(_QWORD *a1)
{
  return Theme.Palette.encode(to:)(a1);
}

uint64_t sub_237875294@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2378752A0()
{
  _BYTE v1[72];

  sub_237A885D4();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t sub_2378752E0()
{
  _BYTE v1[72];

  sub_237A885D4();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

double Theme.Palette.LinearGradient.Stop.location.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Theme.Palette.LinearGradient.Stop.location.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*Theme.Palette.LinearGradient.Stop.location.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.Stop.color.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

__n128 Theme.Palette.LinearGradient.Stop.color.setter(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  swift_release();
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  return result;
}

uint64_t (*Theme.Palette.LinearGradient.Stop.color.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.Stop.hash(into:)()
{
  sub_237A88604();
  swift_retain();
  swift_retain();
  sub_237A871E8();
  sub_237A871E8();
  swift_release();
  return swift_release();
}

uint64_t sub_237875420()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F6C6F63;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_237875458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23787B38C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23787547C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_237875488()
{
  sub_23787ADB4();
  return sub_237A88718();
}

uint64_t sub_2378754B0()
{
  sub_23787ADB4();
  return sub_237A88724();
}

uint64_t Theme.Palette.LinearGradient.Stop.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = *(_OWORD *)(v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787ADB4();
  sub_237A886B8();
  *(_QWORD *)&v11 = v8;
  v12 = 0;
  sub_23787ADF8();
  sub_237A882B0();
  if (!v2)
  {
    v11 = v10;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
    sub_237879720(&qword_25681E958, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Theme.Palette.LinearGradient.Stop.hashValue.getter()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A871E8();
  sub_237A871E8();
  return sub_237A88610();
}

uint64_t Theme.Palette.LinearGradient.Stop.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787ADB4();
  sub_237A88688();
  if (!v2)
  {
    v13 = 0;
    sub_23787AE3C();
    sub_237A881F0();
    v9 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
    v13 = 1;
    sub_237879720(&qword_25681E9B0, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *(_QWORD *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237875854@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.LinearGradient.Stop.init(from:)(a1, a2);
}

uint64_t sub_237875868(_QWORD *a1)
{
  return Theme.Palette.LinearGradient.Stop.encode(to:)(a1);
}

uint64_t sub_237875880()
{
  sub_237A88604();
  sub_237A871E8();
  return sub_237A871E8();
}

uint64_t sub_2378758D0()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A871E8();
  sub_237A871E8();
  return sub_237A88610();
}

uint64_t Theme.Palette.LinearGradient.stops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.LinearGradient.stops.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Theme.Palette.LinearGradient.stops.modify())()
{
  return nullsub_1;
}

double Theme.Palette.LinearGradient.startPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void Theme.Palette.LinearGradient.startPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*Theme.Palette.LinearGradient.startPoint.modify())()
{
  return nullsub_1;
}

double Theme.Palette.LinearGradient.endPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void Theme.Palette.LinearGradient.endPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*Theme.Palette.LinearGradient.endPoint.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_237876AEC(a1, v3);
  swift_bridgeObjectRelease();
  sub_237A87554();
  return sub_237A87554();
}

uint64_t sub_237875A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  char v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a2 + 48;
    for (i = a1 + 48; *(double *)(i - 16) == *(double *)(v3 - 16); i += 24)
    {
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      if ((sub_237A871C4() & 1) == 0)
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        return 0;
      }
      v5 = sub_237A871C4();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      if ((v5 & 1) == 0)
        return 0;
      v3 += 24;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_237875B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  char v6;
  _BYTE v8[136];
  _BYTE v9[136];
  _BYTE v10[136];
  _BYTE v11[136];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    for (i = v2 - 1; ; --i)
    {
      sub_23787D0C8(v3, (uint64_t)v10);
      sub_23787D0C8((uint64_t)v10, (uint64_t)v9);
      sub_23787D0C8(v4, (uint64_t)v11);
      sub_23787D0C8((uint64_t)v11, (uint64_t)v8);
      _s14CarPlayAssetUI14VisibilityRuleO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v8);
      if ((v6 & 1) == 0)
        break;
      if (!i)
        return 1;
      v4 += 136;
      v3 += 136;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_237875C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); *(i - 4) == *(v3 - 4); i += 5)
    {
      v5 = *(i - 1);
      v6 = *i;
      v7 = *(v3 - 1);
      v8 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_237A8840C() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_237A8840C() & 1) == 0)
        break;
      v3 += 5;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_237875CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 48);
    for (i = (_QWORD *)(a1 + 48); *((unsigned __int8 *)i - 16) == *((unsigned __int8 *)v3 - 16); i += 5)
    {
      v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_237A8840C() & 1) == 0)
        break;
      v3 += 5;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_237875D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_237875DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  swift_retain();
  swift_retain();
  v5 = sub_237A871C4();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0)
    return 0;
  v6 = a1 + 40;
  v7 = a2 + 40;
  v8 = v2 - 1;
  do
  {
    v9 = v8 == 0;
    if (!v8)
      break;
    v6 += 8;
    v7 += 8;
    swift_retain();
    swift_retain();
    v10 = sub_237A871C4();
    swift_release();
    swift_release();
    --v8;
  }
  while ((v10 & 1) != 0);
  return v9;
}

BOOL sub_237875EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (double *)(a1 + 40);
  v6 = (double *)(a2 + 40);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_237875F64()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696F507472617473;
  if (*v0 != 1)
    v1 = 0x746E696F50646E65;
  if (*v0)
    return v1;
  else
    return 0x73706F7473;
}

uint64_t sub_237875FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23787B474(a1, a2);
  *a3 = result;
  return result;
}

void sub_237875FE4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_237875FF0()
{
  sub_23787AE80();
  return sub_237A88718();
}

uint64_t sub_237876018()
{
  sub_23787AE80();
  return sub_237A88724();
}

uint64_t Theme.Palette.LinearGradient.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787AE80();
  sub_237A886B8();
  v14 = v8;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA68);
  sub_23787AF4C(&qword_25681EA70, (uint64_t (*)(void))sub_23787AEC4, MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  if (!v2)
  {
    v14 = v9;
    v15 = v10;
    v16 = 1;
    sub_23787AF08();
    sub_237A882B0();
    v14 = v11;
    v15 = v12;
    v16 = 2;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Theme.Palette.LinearGradient.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876AEC((uint64_t)v3, v1);
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t Theme.Palette.LinearGradient.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787AE80();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EA68);
  v14 = 0;
  sub_23787AF4C(&qword_25681EA90, (uint64_t (*)(void))sub_23787AFB4, MEMORY[0x24BEE12D0]);
  sub_237A881F0();
  v9 = v13;
  v14 = 1;
  sub_23787AFF8();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v10 = v13;
  v14 = 2;
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v13;
  *(_QWORD *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 24) = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378764A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.LinearGradient.init(from:)(a1, a2);
}

uint64_t sub_2378764B4(_QWORD *a1)
{
  return Theme.Palette.LinearGradient.encode(to:)(a1);
}

uint64_t sub_2378764C8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876AEC((uint64_t)v3, v1);
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t sub_237876544()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_237A885E0();
  if (v2)
  {
    v3 = v1 + 48;
    do
    {
      v3 += 24;
      sub_237A88604();
      swift_retain();
      swift_retain();
      sub_237A871E8();
      sub_237A871E8();
      swift_release();
      swift_release();
      --v2;
    }
    while (v2);
  }
  sub_237A87554();
  return sub_237A87554();
}

uint64_t sub_237876618()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876AEC((uint64_t)v3, v1);
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t sub_237876690(uint64_t *a1, uint64_t *a2)
{
  if ((sub_237875A34(*a1, *a2) & 1) != 0 && (sub_237A87548() & 1) != 0)
    return sub_237A87548();
  else
    return 0;
}

uint64_t sub_23787672C(char *a1, char *a2)
{
  return sub_2378D4B3C(*a1, *a2);
}

uint64_t sub_237876738()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237876790()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378767BC()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237876810@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23787686C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 120;
  if (*v1)
    v2 = 121;
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_237876888()
{
  _BYTE *v0;

  if (*v0)
    return 121;
  else
    return 120;
}

uint64_t sub_2378768A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_237876900()
{
  sub_23787B750();
  return sub_237A88718();
}

uint64_t sub_237876928()
{
  sub_23787B750();
  return sub_237A88724();
}

double UnitPoint.init(from:)(_QWORD *a1)
{
  return sub_23787B5CC(a1);
}

uint64_t UnitPoint.encode(to:)(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  double v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EAA8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787B750();
  sub_237A886B8();
  v14 = a2;
  v13 = 0;
  sub_23787ADF8();
  sub_237A882B0();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_237876AAC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_23787B5CC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_237876AD4(_QWORD *a1)
{
  double *v1;

  return UnitPoint.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_237876AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_237A885E0();
  if (v3)
  {
    v5 = a2 + 48;
    do
    {
      v5 += 24;
      sub_237A88604();
      swift_retain();
      swift_retain();
      sub_237A871E8();
      sub_237A871E8();
      swift_release();
      result = swift_release();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_237876B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2)
    return swift_bridgeObjectRelease();
  if (a6 == 1)
  {
    swift_release();
  }
  else if (a6)
  {
    return result;
  }
  return swift_release();
}

uint64_t sub_237876BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_237A885E0();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 4;
      result = sub_237A885F8();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_237876C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_237A885E0();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 8;
      result = sub_237A88604();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_237876C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_19;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A871E8();
    swift_release();
    result = sub_237A88610();
    v8 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237876E24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v19 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v16 >= v6)
      goto LABEL_19;
    v17 = *(_QWORD *)(v19 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_19;
      v17 = *(_QWORD *)(v19 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_18:
    v5 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_5:
    v12 = *(_QWORD *)(a2 + 56) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    sub_237A885E0();
    sub_23787A11C(v13, v14, v15);
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_23787A134(v13, v14, v15);
    result = sub_237A88610();
    v8 ^= result;
  }
  v18 = v16 + 2;
  if (v18 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v17 = *(_QWORD *)(v19 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237877000(uint64_t a1, uint64_t a2)
{
  return sub_237877028(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D134, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D138);
}

uint64_t sub_237877014(uint64_t a1, uint64_t a2)
{
  return sub_237877028(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0B4);
}

uint64_t sub_237877028(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;

  v22 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v21 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_20;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v14 >= v21)
      goto LABEL_22;
    v15 = *(_QWORD *)(v22 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v21)
        goto LABEL_22;
      v15 = *(_QWORD *)(v22 + 8 * v11);
      if (!v15)
        break;
    }
LABEL_19:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_20:
    v17 = *(_QWORD *)(a2 + 56) + 24 * v13;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 16);
    sub_237A885E0();
    sub_237A885E0();
    if ((_DWORD)v20 == 255)
    {
      a3(v19, v18, 255);
    }
    else
    {
      a3(v19, v18, v20);
      Theme.ColorID.rawValue.getter();
      sub_237A87710();
      swift_bridgeObjectRelease();
      a4(v19, v18, v20);
    }
    result = sub_237A88610();
    v10 ^= result;
  }
  v16 = v14 + 2;
  if (v16 >= v21)
  {
LABEL_22:
    swift_release();
    return sub_237A885E0();
  }
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v21)
      goto LABEL_22;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_237877240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_19;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
LABEL_5:
    sub_237A885E0();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v8 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2378773DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v11 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v11)
      goto LABEL_19;
    v9 = *(_QWORD *)(v12 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v11)
        goto LABEL_19;
      v9 = *(_QWORD *)(v12 + 8 * v7);
      if (!v9)
        break;
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
LABEL_5:
    sub_237A885E0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v6 ^= result;
  }
  v10 = v8 + 2;
  if (v10 >= v11)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v9 = *(_QWORD *)(v12 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v11)
      goto LABEL_19;
    v9 = *(_QWORD *)(v12 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2378775A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  id v23;
  id v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  _OWORD v29[4];
  uint64_t v30;

  v26 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v25 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    v28 = v7;
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v25)
      goto LABEL_31;
    v12 = *(_QWORD *)(v26 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v25)
        goto LABEL_31;
      v12 = *(_QWORD *)(v26 + 8 * v8);
      if (!v12)
        break;
    }
LABEL_20:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    v14 = *(_QWORD *)(a2 + 56) + 48 * v10;
    v16 = *(void **)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v18 = *(void **)(v14 + 16);
    v17 = *(_QWORD *)(v14 + 24);
    v19 = *(char *)(v14 + 32);
    v20 = *(_QWORD *)(a1 + 64);
    v21 = *(_OWORD *)(a1 + 16);
    v29[0] = *(_OWORD *)a1;
    v29[1] = v21;
    v22 = *(_OWORD *)(a1 + 48);
    v29[2] = *(_OWORD *)(a1 + 32);
    v29[3] = v22;
    v30 = v20;
    sub_237A885E0();
    if ((v19 & 0x80000000) == 0)
    {
      sub_237A885E0();
      swift_bridgeObjectRetain();
      sub_237870090(v16, v15, v18, v17, v19);
      sub_237870090(v16, v15, v18, v17, v19);
      sub_237A87710();
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_237A885EC();
        v23 = v18;
        sub_237A87DDC();

        if ((v19 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        sub_237A885EC();
        if ((v19 & 1) == 0)
        {
LABEL_28:
          sub_237A885EC();
          sub_237A88604();
          goto LABEL_5;
        }
      }
      sub_237A885EC();
LABEL_5:
      sub_2378702E0(v16, v15, v18, v17, v19);
      goto LABEL_6;
    }
    sub_237A885E0();
    sub_237A885EC();
    if (v16)
    {
      sub_237870090(v16, v15, v18, v17, v19);
      v24 = v16;
      sub_237A87DDC();

    }
    else
    {
      sub_237870090(0, v15, v18, v17, v19);
    }
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2378778F0((uint64_t)v29, v17);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_237A885E0();
    sub_2378702E0(v16, v15, v18, v17, v19);
    result = sub_237A88610();
    v7 = result ^ v28;
  }
  v13 = v11 + 2;
  if (v13 >= v25)
  {
LABEL_31:
    swift_release();
    return sub_237A885E0();
  }
  v12 = *(_QWORD *)(v26 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v25)
      goto LABEL_31;
    v12 = *(_QWORD *)(v26 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2378778F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int v13;
  int64_t v14;
  uint64_t v15;

  v15 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v14 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v10 >= v14)
      goto LABEL_22;
    v11 = *(_QWORD *)(v15 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v14)
        goto LABEL_22;
      v11 = *(_QWORD *)(v15 + 8 * v7);
      if (!v11)
        break;
    }
LABEL_19:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    v13 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + 32 * v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A87710();
    sub_237A885EC();
    if (v13 != 1)
      sub_237A88604();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v6 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v14)
  {
LABEL_22:
    swift_release();
    return sub_237A885E0();
  }
  v11 = *(_QWORD *)(v15 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v14)
      goto LABEL_22;
    v11 = *(_QWORD *)(v15 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_237877AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  v23 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v24 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  for (i = 0; ; i = v27)
  {
    v28 = v6;
    if (v4)
    {
      v26 = (v4 - 1) & v4;
      v27 = i;
      v8 = __clz(__rbit64(v4)) | (i << 6);
      goto LABEL_5;
    }
    v19 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v19 >= v24)
      goto LABEL_19;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    v21 = i + 1;
    if (!v20)
    {
      v21 = i + 2;
      if (i + 2 >= v24)
        goto LABEL_19;
      v20 = *(_QWORD *)(v23 + 8 * v21);
      if (!v20)
        break;
    }
LABEL_18:
    v26 = (v20 - 1) & v20;
    v27 = v21;
    v8 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_5:
    v9 = *(_QWORD *)(a2 + 56) + 96 * v8;
    v11 = *(_QWORD *)(v9 + 24);
    v10 = *(_QWORD *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 48);
    v13 = *(_QWORD *)(v9 + 56);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = *(_QWORD *)(v9 + 80);
    v16 = *(_BYTE *)(v9 + 40);
    v17 = *(_BYTE *)(v9 + 64);
    v18 = *(_BYTE *)(v9 + 88);
    swift_bridgeObjectRetain();
    sub_23787A11C(v11, v10, v16);
    sub_23787A11C(v12, v13, v17);
    sub_23787D0A0(v14, v15, v18);
    sub_237A87710();
    swift_bridgeObjectRelease();
    Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)();
    sub_23787A134(v11, v10, v16);
    sub_23787A134(v12, v13, v17);
    sub_23787D0B4(v14, v15, v18);
    result = sub_237A88610();
    v6 = result ^ v28;
    v4 = v26;
  }
  v22 = i + 3;
  if (i + 3 >= v24)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v20 = *(_QWORD *)(v23 + 8 * v22);
  if (v20)
  {
    v21 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v24)
      goto LABEL_19;
    v20 = *(_QWORD *)(v23 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237877D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;

  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_19;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v12 >= v7)
      goto LABEL_21;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_21;
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (!v13)
        break;
    }
LABEL_18:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_19:
    v15 = *(_QWORD *)(a2 + 48) + 24 * v11;
    if (*(_BYTE *)(v15 + 8) == 1)
      __asm { BR              X8 }
    swift_retain();
    sub_237A882E0();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A885E0();
    sub_237A871E8();
    swift_release();
    v8 ^= sub_237A88610();
  }
  v14 = v12 + 2;
  if (v14 < v7)
  {
    v13 = *(_QWORD *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        v9 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v9 >= v7)
          goto LABEL_21;
        v13 = *(_QWORD *)(v3 + 8 * v9);
        ++v14;
        if (v13)
          goto LABEL_18;
      }
LABEL_23:
      __break(1u);
      JUMPOUT(0x237878098);
    }
    v9 = v14;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  return sub_237A885E0();
}

uint64_t sub_2378780B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_18:
    v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease_n();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v7 ^= result;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237878280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  _OWORD v25[4];
  uint64_t v26;

  v24 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v20 >= v23)
      goto LABEL_19;
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v23)
        goto LABEL_19;
      v21 = *(_QWORD *)(v24 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_18:
    v6 = (v21 - 1) & v21;
    v11 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    v12 = *(_QWORD *)(a2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v11);
    v16 = *(_BYTE *)(v12 + 16);
    v17 = *(_QWORD *)(a1 + 64);
    v18 = *(_OWORD *)(a1 + 16);
    v25[0] = *(_OWORD *)a1;
    v25[1] = v18;
    v19 = *(_OWORD *)(a1 + 48);
    v25[2] = *(_OWORD *)(a1 + 32);
    v25[3] = v19;
    v26 = v17;
    sub_23787A11C(v13, v14, v16);
    swift_bridgeObjectRetain();
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_23787A134(v13, v14, v16);
    sub_237876C74((uint64_t)v25, v15);
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v8 ^= result;
  }
  v22 = v20 + 2;
  if (v22 >= v23)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v23)
      goto LABEL_19;
    v21 = *(_QWORD *)(v24 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237878474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v33;
  int64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v29 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v30 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  for (i = 0; ; i = v34)
  {
    v36 = v6;
    if (v4)
    {
      v33 = (v4 - 1) & v4;
      v34 = i;
      v8 = __clz(__rbit64(v4)) | (i << 6);
      goto LABEL_5;
    }
    v25 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v25 >= v30)
      goto LABEL_19;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    v27 = i + 1;
    if (!v26)
    {
      v27 = i + 2;
      if (i + 2 >= v30)
        goto LABEL_19;
      v26 = *(_QWORD *)(v29 + 8 * v27);
      if (!v26)
        break;
    }
LABEL_18:
    v33 = (v26 - 1) & v26;
    v34 = v27;
    v8 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_5:
    v9 = *(_QWORD *)(a2 + 48) + 112 * v8;
    v10 = *(_QWORD *)(v9 + 8);
    v12 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    v13 = *(_QWORD *)(v9 + 32);
    v14 = *(_QWORD *)(v9 + 40);
    v16 = *(_QWORD *)(v9 + 48);
    v15 = *(_QWORD *)(v9 + 56);
    v17 = *(_QWORD *)(v9 + 72);
    v18 = *(_QWORD *)(v9 + 80);
    v19 = *(_QWORD *)(v9 + 88);
    v20 = *(_BYTE *)(v9 + 96);
    v21 = *(_QWORD *)(v9 + 104);
    v37 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v8);
    v35 = *(_BYTE *)(v9 + 64);
    v40 = *(_QWORD *)v9;
    v41 = v10;
    v42 = v12;
    v43 = v11;
    v44 = v13;
    v45 = v14;
    v46 = v16;
    v47 = v15;
    v48 = v35;
    v49 = v17;
    v50 = v18;
    v51 = v19;
    v52 = v20;
    v53 = v21;
    v22 = *(_QWORD *)(a1 + 64);
    v23 = *(_OWORD *)(a1 + 16);
    v38[0] = *(_OWORD *)a1;
    v38[1] = v23;
    v24 = *(_OWORD *)(a1 + 48);
    v38[2] = *(_OWORD *)(a1 + 32);
    v38[3] = v24;
    v39 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v11, v13, v14, v16, v15, v35);
    sub_2378797D4(v18);
    swift_retain();
    swift_bridgeObjectRetain();
    ColorSet.hash(into:)((uint64_t)v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237876B84(v11, v13, v14, v16, v15, v35);
    sub_23787A14C(v18);
    swift_release();
    sub_237878710((uint64_t)v38, v37);
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v6 = result ^ v36;
    v4 = v33;
  }
  v28 = i + 3;
  if (i + 3 >= v30)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v26 = *(_QWORD *)(v29 + 8 * v28);
  if (v26)
  {
    v27 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v30)
      goto LABEL_19;
    v26 = *(_QWORD *)(v29 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237878710(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  _OWORD v30[4];
  uint64_t v31;

  v27 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v26 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v29 = v6;
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_20;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v26)
      goto LABEL_24;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v26)
        goto LABEL_24;
      v12 = *(_QWORD *)(v27 + 8 * v7);
      if (!v12)
        break;
    }
LABEL_19:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_20:
    v14 = 24 * v10;
    v15 = *(_QWORD *)(a2 + 48) + v14;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v18 = (uint64_t *)(*(_QWORD *)(a2 + 56) + v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_BYTE *)(v15 + 16);
    v22 = *(_QWORD *)(a1 + 64);
    v23 = *(_OWORD *)(a1 + 16);
    v30[0] = *(_OWORD *)a1;
    v30[1] = v23;
    v24 = *(_OWORD *)(a1 + 48);
    v30[2] = *(_OWORD *)(a1 + 32);
    v30[3] = v24;
    v31 = v22;
    sub_23787D104(v19, v20);
    sub_23787A11C(v17, v16, v21);
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_23787A134(v17, v16, v21);
    if (v20 < 0)
    {
      sub_237A885E0();
      sub_237876C74((uint64_t)v30, v19);
      sub_23787D110(v19, v20);
      v8 = v29;
    }
    else
    {
      sub_237A885E0();
      if ((v20 & 1) != 0)
        __asm { BR              X9 }
      sub_237A882E0();
      v8 = v29;
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_237A885E0();
    }
    v6 = sub_237A88610() ^ v8;
  }
  v13 = v11 + 2;
  if (v13 < v26)
  {
    v12 = *(_QWORD *)(v27 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v7 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        if (v7 >= v26)
          goto LABEL_24;
        v12 = *(_QWORD *)(v27 + 8 * v7);
        ++v13;
        if (v12)
          goto LABEL_19;
      }
LABEL_26:
      __break(1u);
      JUMPOUT(0x237878A7CLL);
    }
    v7 = v13;
    goto LABEL_19;
  }
LABEL_24:
  swift_release();
  return sub_237A885E0();
}

uint64_t sub_237878A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v11 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v11)
      goto LABEL_19;
    v9 = *(_QWORD *)(v12 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v11)
        goto LABEL_19;
      v9 = *(_QWORD *)(v12 + 8 * v7);
      if (!v9)
        break;
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A88604();
    sub_237A88604();
    sub_237A88604();
    sub_237A88604();
    result = sub_237A88610();
    v6 ^= result;
  }
  v10 = v8 + 2;
  if (v10 >= v11)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v9 = *(_QWORD *)(v12 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v11)
      goto LABEL_19;
    v9 = *(_QWORD *)(v12 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237878C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v28;
  _OWORD v29[4];
  uint64_t v30;

  v25 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v24 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  for (i = 0; ; i = v28)
  {
    if (v4)
    {
      v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v28 = i;
      v9 = v8 | (i << 6);
      goto LABEL_5;
    }
    v20 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v20 >= v24)
      goto LABEL_19;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    v22 = i + 1;
    if (!v21)
    {
      v22 = i + 2;
      if (i + 2 >= v24)
        goto LABEL_19;
      v21 = *(_QWORD *)(v25 + 8 * v22);
      if (!v21)
        break;
    }
LABEL_18:
    v4 = (v21 - 1) & v21;
    v28 = v22;
    v9 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_5:
    v10 = *(_QWORD *)(a2 + 56) + (v9 << 6);
    v12 = *(void **)v10;
    v11 = *(_QWORD *)(v10 + 8);
    v13 = *(void **)(v10 + 16);
    v14 = *(_QWORD *)(v10 + 24);
    v15 = *(_QWORD *)(v10 + 48);
    v16 = *(_BYTE *)(v10 + 32);
    v17 = *(_QWORD *)(a1 + 64);
    v18 = *(_OWORD *)(a1 + 16);
    v29[0] = *(_OWORD *)a1;
    v29[1] = v18;
    v19 = *(_OWORD *)(a1 + 48);
    v29[2] = *(_OWORD *)(a1 + 32);
    v29[3] = v19;
    v30 = v17;
    swift_bridgeObjectRetain();
    sub_237870090(v12, v11, v13, v14, v16);
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237870090(v12, v11, v13, v14, v16);
    ImageAsset.ImageType.hash(into:)((uint64_t)v29);
    sub_237A885E0();
    sub_2378702E0(v12, v11, v13, v14, v16);
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v29, v15);
    swift_bridgeObjectRelease();
    sub_237A885E0();
    sub_2378702E0(v12, v11, v13, v14, v16);
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v6 ^= result;
  }
  v23 = i + 3;
  if (i + 3 >= v24)
  {
LABEL_19:
    swift_release();
    return sub_237A885E0();
  }
  v21 = *(_QWORD *)(v25 + 8 * v23);
  if (v21)
  {
    v22 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v24)
      goto LABEL_19;
    v21 = *(_QWORD *)(v25 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

void _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_237878F68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (v3)
  {
    v21 = v0;
    v22 = v1;
    sub_23787978C(v1, v0, v11, v10, v6, v3);
    sub_23787978C(v9, v8, v7, v5, v4, v2);
    sub_237876B84(v9, v8, v7, v5, v4, v2);
    sub_237876B84(v22, v21, v11, v10, v6, v3);
    return 0;
  }
  else
  {
    v12 = v1;
    v20 = v11;
    v13 = v11;
    v14 = v10;
    v15 = v10;
    v16 = v6;
    v17 = v0;
    sub_23787978C(v1, v0, v13, v15, v6, 0);
    sub_23787978C(v9, v8, v7, v5, v4, 0);
    v18 = sub_237A871C4();
    sub_237876B84(v9, v8, v7, v5, v4, 0);
    sub_237876B84(v12, v17, v20, v14, v16, 0);
    return v18 & 1;
  }
}

unint64_t sub_237879478()
{
  unint64_t result;

  result = qword_25681E928;
  if (!qword_25681E928)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A970, &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E928);
  }
  return result;
}

unint64_t sub_2378794BC()
{
  unint64_t result;

  result = qword_25681E930;
  if (!qword_25681E930)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A920, &_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E930);
  }
  return result;
}

unint64_t sub_237879500()
{
  unint64_t result;

  result = qword_25681E938;
  if (!qword_25681E938)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A8D0, &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E938);
  }
  return result;
}

unint64_t sub_237879544()
{
  unint64_t result;

  result = qword_25681E940;
  if (!qword_25681E940)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient, &type metadata for Theme.Palette.LinearGradient);
    atomic_store(result, (unint64_t *)&qword_25681E940);
  }
  return result;
}

unint64_t sub_237879588()
{
  unint64_t result;

  result = qword_25681E948;
  if (!qword_25681E948)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A880, &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E948);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B81FA8C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_237879610()
{
  unint64_t result;

  result = qword_25681E960;
  if (!qword_25681E960)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_25681E960);
  }
  return result;
}

unint64_t sub_237879654()
{
  unint64_t result;

  result = qword_25681E968;
  if (!qword_25681E968)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_25681E968);
  }
  return result;
}

unint64_t sub_237879698()
{
  unint64_t result;

  result = qword_25681E970;
  if (!qword_25681E970)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A830, &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E970);
  }
  return result;
}

unint64_t sub_2378796DC()
{
  unint64_t result;

  result = qword_25681E9A8;
  if (!qword_25681E9A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient, &type metadata for Theme.Palette.LinearGradient);
    atomic_store(result, (unint64_t *)&qword_25681E9A8);
  }
  return result;
}

uint64_t sub_237879720(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E950);
    v6[0] = sub_237879610();
    v6[1] = sub_237879654();
    result = MEMORY[0x23B81FA98](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23787978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2)
    return swift_bridgeObjectRetain();
  if (a6 == 1)
  {
    swift_retain();
  }
  else if (a6)
  {
    return result;
  }
  return swift_retain();
}

uint64_t sub_2378797D4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_237879800()
{
  unint64_t result;

  result = qword_25681E9B8;
  if (!qword_25681E9B8)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25681E9B8);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO7PaletteV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];
  uint64_t v30;
  char v31;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v27 = *(_OWORD *)(a1 + 64);
  v28 = *(_OWORD *)(a1 + 48);
  v26 = *(_QWORD *)(a1 + 80);
  v25 = *(_BYTE *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v23 = *(_QWORD *)(a2 + 96);
  v24 = *(_QWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a2 + 104);
  v19 = *(unsigned __int8 *)(a2 + 120);
  v20 = *(unsigned __int8 *)(a1 + 120);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_237A8840C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_237A8840C(), result = 0, (v12 & 1) != 0))
    {
      if (v3)
      {
        if (!v9)
          return 0;
        swift_retain();
        swift_retain();
        v13 = sub_237A871C4();
        swift_release();
        swift_release();
        if ((v13 & 1) == 0)
          return 0;
      }
      else if (v9)
      {
        return 0;
      }
      if ((sub_2379B6470(v5, v8) & 1) == 0)
        return 0;
      v29[0] = v28;
      v29[1] = v27;
      v30 = v26;
      v31 = v25;
      _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0((uint64_t)v29);
      v15 = v14;
      result = 0;
      if ((v15 & 1) != 0 && v24 == v23)
      {
        if (v22)
        {
          v16 = v21;
          if (v21)
          {
            sub_2378797D4(v22);
            sub_2378797D4(v21);
            if ((sub_237A871C4() & 1) != 0)
            {
              v17 = sub_237A871C4();
              sub_23787A14C(v21);
              sub_23787A14C(v22);
              if ((v17 & 1) != 0)
                return v20 ^ v19 ^ 1u;
              return 0;
            }
            sub_23787A14C(v21);
            v18 = v22;
LABEL_24:
            sub_23787A14C(v18);
            return 0;
          }
        }
        else
        {
          v16 = v21;
          if (!v21)
            return v20 ^ v19 ^ 1u;
        }
        sub_2378797D4(v22);
        sub_2378797D4(v16);
        sub_23787A14C(v22);
        v18 = v16;
        goto LABEL_24;
      }
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO7PaletteV14LinearGradientV4StopV2eeoiySbAI_AItFZ_0(double *a1, double *a2)
{
  char v2;

  if (*a1 == *a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if ((sub_237A871C4() & 1) != 0)
    {
      v2 = sub_237A871C4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v2 & 1) != 0)
        return 1;
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  return 0;
}

uint64_t sub_237879BAC(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t i;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[2];
  char v41;
  uint64_t v42;

  v35 = a2 + 56;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v36 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v39)
  {
    if (v7)
    {
      v38 = (v7 - 1) & v7;
      v39 = i;
      v10 = __clz(__rbit64(v7)) | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v11 >= v36)
      {
LABEL_35:
        swift_release();
        return (uint64_t)a1;
      }
      v12 = *(_QWORD *)(v35 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v36)
          goto LABEL_35;
        v12 = *(_QWORD *)(v35 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v36)
            goto LABEL_35;
          v12 = *(_QWORD *)(v35 + 8 * v13);
          if (!v12)
          {
            v13 = i + 4;
            if (i + 4 >= v36)
              goto LABEL_35;
            v12 = *(_QWORD *)(v35 + 8 * v13);
            if (!v12)
            {
              v14 = i + 5;
              if (i + 5 >= v36)
                goto LABEL_35;
              v12 = *(_QWORD *)(v35 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v13 >= v36)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v35 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v38 = (v12 - 1) & v12;
      v39 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = *(_QWORD *)(a2 + 48) + 24 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(unsigned __int8 *)(v15 + 16);
    v40[0] = v16;
    v40[1] = v17;
    v41 = v18;
    sub_23787A11C(v16, v17, v18);
    sub_23787A11C(v16, v17, v18);
    swift_bridgeObjectRetain();
    a3(&v42, v40);
    v19 = v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40[0] = a1;
    v22 = sub_2378D2DC4(v16, v17, v18);
    v23 = a1[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (a1[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v29 = (_QWORD *)v40[0];
        if ((v21 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_2378C47F0();
        v29 = (_QWORD *)v40[0];
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_2378C8570(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_2378D2DC4(v16, v17, v18);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_40;
      v22 = v27;
      v29 = (_QWORD *)v40[0];
      if ((v26 & 1) != 0)
      {
LABEL_4:
        v9 = v29[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 8 * v22) = v19;
        goto LABEL_5;
      }
    }
    v29[(v22 >> 6) + 8] |= 1 << v22;
    v30 = v29[6] + 24 * v22;
    *(_QWORD *)v30 = v16;
    *(_QWORD *)(v30 + 8) = v17;
    *(_BYTE *)(v30 + 16) = v18;
    *(_QWORD *)(v29[7] + 8 * v22) = v19;
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_37;
    v29[2] = v33;
    sub_23787A11C(v16, v17, v18);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_23787A134(v16, v17, v18);
    sub_23787A134(v16, v17, v18);
    swift_bridgeObjectRelease();
    a1 = v29;
    v7 = v38;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237879F24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4363696D616E7964 && a2 == 0xEC000000726F6C6FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72477261656E696CLL && a2 == 0xEE00746E65696461 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F6369746C756DLL && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23787A11C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23787A134(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23787A14C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23787A178(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;

  v4 = 0;
  v7 = *(_QWORD *)(a3 + 64);
  v5 = a3 + 64;
  v6 = v7;
  v8 = 1 << *(_BYTE *)(v5 - 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & v6;
  v25 = v5;
  v26 = (unint64_t)(v8 + 63) >> 6;
  v29 = a4 + 56;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v4 << 6);
LABEL_22:
    if (*(_QWORD *)(a4 + 16))
    {
      v27 = v10;
      v28 = v4;
      v16 = *(_QWORD *)(a3 + 48) + 24 * v12;
      v18 = *(_QWORD *)v16;
      v17 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      sub_237A885D4();
      sub_23787A11C(v18, v17, v19);
      swift_bridgeObjectRetain();
      Theme.ColorID.rawValue.getter();
      sub_237A87710();
      swift_bridgeObjectRelease();
      v20 = sub_237A88610() & ~(-1 << *(_BYTE *)(a4 + 32));
      if (((*(_QWORD *)(v29 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        __asm { BR              X8 }
      swift_bridgeObjectRelease();
      sub_23787A134(v18, v17, v19);
      v10 = v27;
      v4 = v28;
    }
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= v26)
    return sub_23790367C(a1, a2, 0, a3);
  v14 = *(_QWORD *)(v25 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_21;
  v4 = v13 + 1;
  if (v13 + 1 >= v26)
    return sub_23790367C(a1, a2, 0, a3);
  v14 = *(_QWORD *)(v25 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v4 = v13 + 2;
  if (v13 + 2 >= v26)
    return sub_23790367C(a1, a2, 0, a3);
  v14 = *(_QWORD *)(v25 + 8 * v4);
  if (v14)
  {
LABEL_21:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 3;
  if (v15 < v26)
  {
    v14 = *(_QWORD *)(v25 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v4 >= v26)
          return sub_23790367C(a1, a2, 0, a3);
        v14 = *(_QWORD *)(v25 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_21;
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x23787A7C0);
    }
    v4 = v15;
    goto LABEL_21;
  }
  return sub_23790367C(a1, a2, 0, a3);
}

uint64_t sub_23787A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_23787A178((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_23787A178((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x23B81FB7C](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

unint64_t sub_23787A99C()
{
  unint64_t result;

  result = qword_25681E9C8;
  if (!qword_25681E9C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A7E0, &_s7PaletteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681E9C8);
  }
  return result;
}

uint64_t sub_23787A9E0(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E9D8);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23787AA5C()
{
  unint64_t result;

  result = qword_25681E9E8;
  if (!qword_25681E9E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorID, &type metadata for Theme.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681E9E8);
  }
  return result;
}

unint64_t sub_23787AAA0()
{
  unint64_t result;

  result = qword_25681E9F0;
  if (!qword_25681E9F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for GradientColor, &type metadata for GradientColor);
    atomic_store(result, (unint64_t *)&qword_25681E9F0);
  }
  return result;
}

unint64_t sub_23787AAE4()
{
  unint64_t result;

  result = qword_25681E9F8;
  if (!qword_25681E9F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.RepresentedColorScheme, &type metadata for Theme.Palette.RepresentedColorScheme);
    atomic_store(result, (unint64_t *)&qword_25681E9F8);
  }
  return result;
}

uint64_t sub_23787AB28(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E8F0);
    v6[0] = MEMORY[0x24BEE0D38];
    v6[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B81FA98](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23787AB8C()
{
  unint64_t result;

  result = qword_25681EA18;
  if (!qword_25681EA18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorID, &type metadata for Theme.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681EA18);
  }
  return result;
}

unint64_t sub_23787ABD0()
{
  unint64_t result;

  result = qword_25681EA20;
  if (!qword_25681EA20)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for GradientColor, &type metadata for GradientColor);
    atomic_store(result, (unint64_t *)&qword_25681EA20);
  }
  return result;
}

unint64_t sub_23787AC14()
{
  unint64_t result;

  result = qword_25681EA28;
  if (!qword_25681EA28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.RepresentedColorScheme, &type metadata for Theme.Palette.RepresentedColorScheme);
    atomic_store(result, (unint64_t *)&qword_25681EA28);
  }
  return result;
}

uint64_t sub_23787AC58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v2, v3, v4, v5, v6, v7);
  sub_2378797D4(v9);
  return a1;
}

uint64_t sub_23787AD04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_237876B84(v2, v3, v4, v5, v6, v7);
  sub_23787A14C(v9);
  return a1;
}

unint64_t sub_23787ADB4()
{
  unint64_t result;

  result = qword_25681EA38;
  if (!qword_25681EA38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A790, &_s7PaletteV14LinearGradientV4StopV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EA38);
  }
  return result;
}

unint64_t sub_23787ADF8()
{
  unint64_t result;

  result = qword_25681EA40;
  if (!qword_25681EA40)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25681EA40);
  }
  return result;
}

unint64_t sub_23787AE3C()
{
  unint64_t result;

  result = qword_25681EA50;
  if (!qword_25681EA50)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25681EA50);
  }
  return result;
}

unint64_t sub_23787AE80()
{
  unint64_t result;

  result = qword_25681EA60;
  if (!qword_25681EA60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A740, &_s7PaletteV14LinearGradientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EA60);
  }
  return result;
}

unint64_t sub_23787AEC4()
{
  unint64_t result;

  result = qword_25681EA78;
  if (!qword_25681EA78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient.Stop, &type metadata for Theme.Palette.LinearGradient.Stop);
    atomic_store(result, (unint64_t *)&qword_25681EA78);
  }
  return result;
}

unint64_t sub_23787AF08()
{
  unint64_t result;

  result = qword_25681EA80;
  if (!qword_25681EA80)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for UnitPoint, MEMORY[0x24BDF54C0]);
    atomic_store(result, (unint64_t *)&qword_25681EA80);
  }
  return result;
}

uint64_t sub_23787AF4C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681EA68);
    v8 = a2();
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23787AFB4()
{
  unint64_t result;

  result = qword_25681EA98;
  if (!qword_25681EA98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient.Stop, &type metadata for Theme.Palette.LinearGradient.Stop);
    atomic_store(result, (unint64_t *)&qword_25681EA98);
  }
  return result;
}

unint64_t sub_23787AFF8()
{
  unint64_t result;

  result = qword_25681EAA0;
  if (!qword_25681EAA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for UnitPoint, MEMORY[0x24BDF54C0]);
    atomic_store(result, (unint64_t *)&qword_25681EAA0);
  }
  return result;
}

uint64_t sub_23787B03C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AAF2F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AAF310 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646E4974726F73 && a2 == 0xE900000000000078 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23787B38C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23787B474(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73706F7473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696F507472617473 && a2 == 0xEA0000000000746ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F50646E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

double sub_23787B5CC(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  double v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23787B750();
  sub_237A88688();
  if (!v1)
  {
    HIBYTE(v9) = 0;
    sub_23787AE3C();
    sub_237A881F0();
    v2 = v10;
    HIBYTE(v9) = 1;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return v2;
}

unint64_t sub_23787B750()
{
  unint64_t result;

  result = qword_25681EAB0;
  if (!qword_25681EAB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A6F0, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EAB0);
  }
  return result;
}

unint64_t sub_23787B798()
{
  unint64_t result;

  result = qword_25681EAB8;
  if (!qword_25681EAB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.RepresentedColorScheme, &type metadata for Theme.Palette.RepresentedColorScheme);
    atomic_store(result, (unint64_t *)&qword_25681EAB8);
  }
  return result;
}

unint64_t sub_23787B7E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25681EAC0;
  if (!qword_25681EAC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E8F0);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25681EAC0);
  }
  return result;
}

unint64_t sub_23787B840()
{
  unint64_t result;

  result = qword_25681EAC8;
  if (!qword_25681EAC8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette, &type metadata for Theme.Palette);
    atomic_store(result, (unint64_t *)&qword_25681EAC8);
  }
  return result;
}

unint64_t sub_23787B888()
{
  unint64_t result;

  result = qword_25681EAD0;
  if (!qword_25681EAD0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient.Stop, &type metadata for Theme.Palette.LinearGradient.Stop);
    atomic_store(result, (unint64_t *)&qword_25681EAD0);
  }
  return result;
}

unint64_t sub_23787B8D0()
{
  unint64_t result;

  result = qword_25681EAD8;
  if (!qword_25681EAD8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette.LinearGradient, &type metadata for Theme.Palette.LinearGradient);
    atomic_store(result, (unint64_t *)&qword_25681EAD8);
  }
  return result;
}

uint64_t _s7PaletteVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_237876B84(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  result = *(_QWORD *)(a1 + 104);
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s7PaletteVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23787978C(v7, v8, v9, v10, v11, v15);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v15;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v12;
    *(_QWORD *)(a1 + 112) = v13;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t _s7PaletteVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_BYTE *)(a2 + 88);
  sub_23787978C(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v9;
  sub_237876B84(v10, v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  if (!v16)
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 104) = v17;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_8;
  }
  if (!v17)
  {
    sub_23787BC04(a1 + 104);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 104) = v17;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t sub_23787BC04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s7PaletteVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 80) = v6;
  v14 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v7;
  sub_237876B84(v8, v9, v10, v11, v12, v14);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  if (!v16)
    goto LABEL_5;
  if (!v15)
  {
    sub_23787BC04(a1 + 104);
LABEL_5:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 104) = v15;
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
LABEL_6:
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t _s7PaletteVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 121))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7PaletteVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette()
{
  return &type metadata for Theme.Palette;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwxx(uint64_t a1)
{
  return sub_237876B84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_23787978C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_23787978C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_237876B84(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_237876B84(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_23787C024(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23787C03C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.RepresentedColorScheme()
{
  return &type metadata for Theme.Palette.RepresentedColorScheme;
}

uint64_t _s7PaletteV14LinearGradientVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s7PaletteV14LinearGradientVwcp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s7PaletteV14LinearGradientVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7PaletteV14LinearGradientVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t _s7PaletteV14LinearGradientVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7PaletteV14LinearGradientVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.LinearGradient()
{
  return &type metadata for Theme.Palette.LinearGradient;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwxx()
{
  swift_release();
  return swift_release();
}

_QWORD *_s7PaletteV14LinearGradientV4StopVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s7PaletteV14LinearGradientV4StopVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7PaletteV14LinearGradientV4StopVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.LinearGradient.Stop()
{
  return &type metadata for Theme.Palette.LinearGradient.Stop;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t _s7PaletteV14LinearGradientV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23787C41C + 4 * byte_237A89BFD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23787C450 + 4 * byte_237A89BF8[v4]))();
}

uint64_t sub_23787C450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23787C460);
  return result;
}

uint64_t sub_23787C46C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23787C474);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23787C478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7PaletteV14LinearGradientV10CodingKeysOMa()
{
  return &_s7PaletteV14LinearGradientV10CodingKeysON;
}

uint64_t _s10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23787C4E8 + 4 * byte_237A89C07[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23787C51C + 4 * byte_237A89C02[v4]))();
}

uint64_t sub_23787C51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23787C52CLL);
  return result;
}

uint64_t sub_23787C538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23787C540);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23787C544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7PaletteV14LinearGradientV4StopV10CodingKeysOMa()
{
  return &_s7PaletteV14LinearGradientV4StopV10CodingKeysON;
}

uint64_t _s7PaletteV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7PaletteV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23787C644 + 4 * byte_237A89C11[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23787C678 + 4 * byte_237A89C0C[v4]))();
}

uint64_t sub_23787C678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23787C688);
  return result;
}

uint64_t sub_23787C694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23787C69CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23787C6A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C6A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7PaletteV10CodingKeysOMa()
{
  return &_s7PaletteV10CodingKeysON;
}

uint64_t _s7PaletteV22RepresentedColorSchemeO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7PaletteV22RepresentedColorSchemeO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23787C7A0 + 4 * byte_237A89C1B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23787C7D4 + 4 * byte_237A89C16[v4]))();
}

uint64_t sub_23787C7D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C7DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23787C7E4);
  return result;
}

uint64_t sub_23787C7F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23787C7F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23787C7FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23787C804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO10CodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON;
}

uint64_t sub_23787C82C()
{
  return 0;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON;
}

uint64_t getEnumTagSinglePayload for ImageGroupConfiguration.InstrumentDataTransformationType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23787C8E4 + 4 * byte_237A89C20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23787C904 + 4 * byte_237A89C25[v4]))();
}

_BYTE *sub_23787C8E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23787C904(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23787C90C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23787C914(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23787C91C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23787C924(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysON;
}

unint64_t sub_23787C954()
{
  unint64_t result;

  result = qword_25681EAE0;
  if (!qword_25681EAE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A188, &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EAE0);
  }
  return result;
}

unint64_t sub_23787C99C()
{
  unint64_t result;

  result = qword_25681EAE8;
  if (!qword_25681EAE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A240, &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EAE8);
  }
  return result;
}

unint64_t sub_23787C9E4()
{
  unint64_t result;

  result = qword_25681EAF0;
  if (!qword_25681EAF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A2F8, &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EAF0);
  }
  return result;
}

unint64_t sub_23787CA2C()
{
  unint64_t result;

  result = qword_25681EAF8;
  if (!qword_25681EAF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A3B0, &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EAF8);
  }
  return result;
}

unint64_t sub_23787CA74()
{
  unint64_t result;

  result = qword_25681EB00;
  if (!qword_25681EB00)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A468, &_s7PaletteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB00);
  }
  return result;
}

unint64_t sub_23787CABC()
{
  unint64_t result;

  result = qword_25681EB08;
  if (!qword_25681EB08)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A520, &_s7PaletteV14LinearGradientV4StopV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB08);
  }
  return result;
}

unint64_t sub_23787CB04()
{
  unint64_t result;

  result = qword_25681EB10;
  if (!qword_25681EB10)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A5D8, &_s7PaletteV14LinearGradientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB10);
  }
  return result;
}

unint64_t sub_23787CB4C()
{
  unint64_t result;

  result = qword_25681EB18;
  if (!qword_25681EB18)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A6C8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB18);
  }
  return result;
}

unint64_t sub_23787CB94()
{
  unint64_t result;

  result = qword_25681EB20;
  if (!qword_25681EB20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A600, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB20);
  }
  return result;
}

unint64_t sub_23787CBDC()
{
  unint64_t result;

  result = qword_25681EB28;
  if (!qword_25681EB28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A628, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB28);
  }
  return result;
}

unint64_t sub_23787CC24()
{
  unint64_t result;

  result = qword_25681EB30;
  if (!qword_25681EB30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A548, &_s7PaletteV14LinearGradientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB30);
  }
  return result;
}

unint64_t sub_23787CC6C()
{
  unint64_t result;

  result = qword_25681EB38;
  if (!qword_25681EB38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A570, &_s7PaletteV14LinearGradientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB38);
  }
  return result;
}

unint64_t sub_23787CCB4()
{
  unint64_t result;

  result = qword_25681EB40;
  if (!qword_25681EB40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A490, &_s7PaletteV14LinearGradientV4StopV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB40);
  }
  return result;
}

unint64_t sub_23787CCFC()
{
  unint64_t result;

  result = qword_25681EB48;
  if (!qword_25681EB48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A4B8, &_s7PaletteV14LinearGradientV4StopV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB48);
  }
  return result;
}

unint64_t sub_23787CD44()
{
  unint64_t result;

  result = qword_25681EB50;
  if (!qword_25681EB50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A3D8, &_s7PaletteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB50);
  }
  return result;
}

unint64_t sub_23787CD8C()
{
  unint64_t result;

  result = qword_25681EB58;
  if (!qword_25681EB58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A400, &_s7PaletteV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB58);
  }
  return result;
}

unint64_t sub_23787CDD4()
{
  unint64_t result;

  result = qword_25681EB60;
  if (!qword_25681EB60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A268, &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB60);
  }
  return result;
}

unint64_t sub_23787CE1C()
{
  unint64_t result;

  result = qword_25681EB68;
  if (!qword_25681EB68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A290, &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB68);
  }
  return result;
}

unint64_t sub_23787CE64()
{
  unint64_t result;

  result = qword_25681EB70;
  if (!qword_25681EB70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A1B0, &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB70);
  }
  return result;
}

unint64_t sub_23787CEAC()
{
  unint64_t result;

  result = qword_25681EB78;
  if (!qword_25681EB78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A1D8, &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB78);
  }
  return result;
}

unint64_t sub_23787CEF4()
{
  unint64_t result;

  result = qword_25681EB80;
  if (!qword_25681EB80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A0F8, &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB80);
  }
  return result;
}

unint64_t sub_23787CF3C()
{
  unint64_t result;

  result = qword_25681EB88;
  if (!qword_25681EB88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A120, &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB88);
  }
  return result;
}

unint64_t sub_23787CF84()
{
  unint64_t result;

  result = qword_25681EB90;
  if (!qword_25681EB90)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A0A8, &_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB90);
  }
  return result;
}

unint64_t sub_23787CFCC()
{
  unint64_t result;

  result = qword_25681EB98;
  if (!qword_25681EB98)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A0D0, &_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EB98);
  }
  return result;
}

unint64_t sub_23787D014()
{
  unint64_t result;

  result = qword_25681EBA0;
  if (!qword_25681EBA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A320, &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EBA0);
  }
  return result;
}

unint64_t sub_23787D05C()
{
  unint64_t result;

  result = qword_25681EBA8;
  if (!qword_25681EBA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8A348, &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EBA8);
  }
  return result;
}

uint64_t sub_23787D0A0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_23787A11C(a1, a2, a3);
  return a1;
}

uint64_t sub_23787D0B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_23787A134(a1, a2, a3);
  return a1;
}

uint64_t sub_23787D0C8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy136_8(a2, a1);
  return a2;
}

uint64_t sub_23787D104(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 < 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23787D110(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ColorMap.explicit(colorIDs:colorSet:)(uint64_t a1, uint64_t *a2)
{
  uint64_t (**v2)(uint64_t *);
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t *);
  void (*v10)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v4 = a2[7];
  v5 = *((_BYTE *)a2 + 64);
  v6 = a2[11];
  v7 = *((_BYTE *)a2 + 96);
  v8 = a2[13];
  v9 = *v2;
  v13 = *a2;
  v14 = *(_OWORD *)(a2 + 1);
  v15 = *(_OWORD *)(a2 + 3);
  v16 = *(_OWORD *)(a2 + 5);
  v17 = v4;
  v18 = v5;
  v19 = *(_OWORD *)(a2 + 9);
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v10 = (void (*)(uint64_t *__return_ptr, _QWORD *))v9(&v13);
  v11 = sub_237879BAC(MEMORY[0x24BEE4B00], a1, v10);
  swift_release();
  return v11;
}

uint64_t ColorMap.allColorIDs(colorSet:)(uint64_t a1)
{
  uint64_t (**v1)(_QWORD **);
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD **);
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  void (*v33)(uint64_t *__return_ptr, _QWORD **);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_BYTE *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *v1;
  v37 = *(_QWORD **)a1;
  v8 = *(_OWORD *)(a1 + 24);
  v38 = *(_OWORD *)(a1 + 8);
  v39 = v8;
  v40 = *(_OWORD *)(a1 + 40);
  v41 = v2;
  v42 = v3;
  v43 = *(_OWORD *)(a1 + 72);
  v44 = v4;
  v45 = v5;
  v46 = v6;
  v33 = (void (*)(uint64_t *__return_ptr, _QWORD **))v7(&v37);
  v9 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
    swift_release();
    v27 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v27;
  }
  swift_bridgeObjectRetain();
  v11 = (unsigned __int8 *)(v9 + 48);
  v12 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v35 = v10;
    v14 = *((_QWORD *)v11 - 2);
    v15 = *((_QWORD *)v11 - 1);
    v16 = *v11;
    v37 = (_QWORD *)v14;
    *(_QWORD *)&v38 = v15;
    BYTE8(v38) = v16;
    sub_23787A11C(v14, v15, v16);
    sub_23787A11C(v14, v15, v16);
    swift_bridgeObjectRetain();
    v33(&v36, &v37);
    v17 = v36;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v12;
    v20 = sub_2378D2DC4(v14, v15, v16);
    v21 = v12[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    v34 = v17;
    if (v12[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v27 = v37;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2378C47F0();
        v27 = v37;
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2378C8570(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_2378D2DC4(v14, v15, v16);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_21;
      v20 = v25;
      v27 = v37;
      if ((v24 & 1) != 0)
      {
LABEL_3:
        v13 = v27[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v13 + 8 * v20) = v34;
        goto LABEL_4;
      }
    }
    v27[(v20 >> 6) + 8] |= 1 << v20;
    v28 = v27[6] + 24 * v20;
    *(_QWORD *)v28 = v14;
    *(_QWORD *)(v28 + 8) = v15;
    *(_BYTE *)(v28 + 16) = v16;
    *(_QWORD *)(v27[7] + 8 * v20) = v34;
    v29 = v27[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_20;
    v27[2] = v31;
    sub_23787A11C(v14, v15, v16);
LABEL_4:
    v11 += 24;
    swift_bridgeObjectRelease();
    sub_23787A134(v14, v15, v16);
    sub_23787A134(v14, v15, v16);
    swift_bridgeObjectRelease();
    v12 = v27;
    v10 = v35 - 1;
    if (v35 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_23787D4D4()
{
  sub_237A885D4();
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23787D540()
{
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23787D598()
{
  sub_237A885D4();
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23787D600()
{
  return sub_2378D4F80();
}

uint64_t ColorSet.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ColorSet.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ColorSet.representedColorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_23787978C(v2, v3, v4, v5, v6, v7);
}

uint64_t ColorSet.sortIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ColorSet.accentColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v2;
  a1[1] = v3;
  return sub_2378797D4(v2);
}

uint64_t ColorSet.prominent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t ColorSet.backgroundOverrideColor.getter()
{
  return swift_retain();
}

uint64_t ColorSet.init(id:color1:color2:color3:color4:color5:color6:color7:color8:activeCruiseControl:speedAssist:inactiveCruiseControl:lowState:criticalState:redline:homologatedSecondaryLabel:representedColorScheme:sortIndex:accentColor:prominent:backgroundOverrideColor:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, uint64_t *a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t inited;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[3];
  __int128 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  _BYTE v87[8];
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char v143;

  v22 = 0;
  v75 = a1[1];
  v76 = *a1;
  v23 = *a2;
  v24 = *((_BYTE *)a2 + 8);
  v25 = *a3;
  v26 = *((_BYTE *)a3 + 8);
  v27 = *a4;
  v28 = *((_BYTE *)a4 + 8);
  v29 = *a5;
  v30 = *((_BYTE *)a5 + 8);
  v31 = *a6;
  v32 = *((_BYTE *)a6 + 8);
  v86 = v23;
  v33 = *a7;
  v34 = *((_BYTE *)a7 + 8);
  v87[0] = v24;
  v35 = *a8;
  v36 = *((_BYTE *)a8 + 8);
  v90 = v25;
  v37 = *a10;
  v38 = *((_BYTE *)a10 + 8);
  v91 = v26;
  v39 = *a11;
  v40 = *((_BYTE *)a11 + 8);
  v94 = v27;
  v41 = *a12;
  v42 = *((_BYTE *)a12 + 8);
  v95 = v28;
  v43 = *a13;
  v44 = *((_BYTE *)a13 + 8);
  v98 = v29;
  v45 = *a14;
  v46 = *((_BYTE *)a14 + 8);
  v99 = v30;
  v47 = *a15;
  v48 = *((_BYTE *)a15 + 8);
  v102 = v31;
  v49 = *a16;
  v50 = *((_BYTE *)a16 + 8);
  v103 = v32;
  v51 = *a17;
  v52 = *((_BYTE *)a17 + 8);
  v106 = v33;
  v107 = v34;
  v108 = 7;
  v73 = *a18;
  v74 = a18[1];
  v110 = v35;
  v111 = v36;
  v112 = 8;
  v53 = a18[2];
  v70 = a18[3];
  v114 = v37;
  v67 = a18[4];
  v68 = v53;
  v69 = *((_BYTE *)a18 + 40);
  v115 = v38;
  v71 = *a20;
  v72 = a20[1];
  v83 = xmmword_237A8A9D0;
  v118 = v39;
  v119 = v40;
  v122 = v41;
  v84 = 1;
  v85 = 0;
  v123 = v42;
  v88 = 2;
  v89 = 0;
  v126 = v43;
  v92 = 3;
  v93 = 0;
  v127 = v44;
  v96 = 4;
  v97 = 0;
  v130 = v45;
  v100 = 5;
  v101 = 0;
  v131 = v46;
  v104 = 6;
  v105 = 0;
  v109 = 0;
  v113 = 0;
  v116 = 0;
  v117 = 1;
  v120 = 1;
  v121 = 1;
  v124 = 2;
  v125 = 1;
  v128 = 3;
  v129 = 1;
  v132 = 4;
  v133 = 1;
  v134 = v47;
  v135 = v48;
  v136 = 5;
  v137 = 1;
  v138 = v49;
  v139 = v50;
  v140 = 6;
  v142 = v51;
  v143 = v52;
  v82[0] = MEMORY[0x24BEE4AF8];
  v141 = 1;
  do
  {
    v57 = *(_QWORD *)&v87[v22 - 8];
    if ((v87[v22] & 1) != 0)
    {
      v54 = swift_bridgeObjectRetain();
      v55 = v57;
    }
    else
    {
      swift_retain();
      v58 = sub_237A8723C();
      v80 = sub_237A8723C();
      v59 = sub_237A8723C();
      v79 = sub_237A8723C();
      v60 = sub_237A8723C();
      v81 = v22;
      v61 = sub_237A8723C();
      v78 = sub_237A8723C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBC8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_237A8A9E0;
      *(_QWORD *)(inited + 32) = 0;
      *(_QWORD *)(inited + 40) = v58;
      *(_QWORD *)(inited + 48) = 1;
      *(_QWORD *)(inited + 56) = v80;
      *(_QWORD *)(inited + 64) = 2;
      *(_QWORD *)(inited + 72) = v59;
      *(_QWORD *)(inited + 80) = 3;
      *(_QWORD *)(inited + 88) = v79;
      *(_QWORD *)(inited + 96) = 4;
      *(_QWORD *)(inited + 104) = v60;
      *(_QWORD *)(inited + 112) = 5;
      *(_QWORD *)(inited + 120) = v61;
      *(_QWORD *)(inited + 128) = 6;
      *(_QWORD *)(inited + 136) = v78;
      v55 = sub_2378D4758((_QWORD *)inited);
      swift_setDeallocating();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBD0);
      swift_arrayDestroy();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v22 = v81;
      swift_release();
      swift_release();
      v54 = sub_23788276C(v57, 0);
    }
    MEMORY[0x24BDAC7A8](v54);
    v56 = sub_2378824F0(v55, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_237882750);
    swift_bridgeObjectRelease();
    sub_237880888(v56);
    v22 += 32;
  }
  while (v22 != 480);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBB8);
  swift_arrayDestroy();
  if (*(_QWORD *)(v82[0] + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBC0);
    v63 = sub_237A880E8();
  }
  else
  {
    v63 = MEMORY[0x24BEE4B00];
  }
  v82[0] = v63;
  v64 = swift_bridgeObjectRetain();
  sub_237881554(v64, 1, v82);
  result = swift_bridgeObjectRelease();
  v66 = v82[0];
  *(_QWORD *)a9 = v76;
  *(_QWORD *)(a9 + 8) = v75;
  *(_QWORD *)(a9 + 16) = v66;
  *(_QWORD *)(a9 + 24) = v73;
  *(_QWORD *)(a9 + 32) = v74;
  *(_QWORD *)(a9 + 40) = v68;
  *(_QWORD *)(a9 + 48) = v70;
  *(_QWORD *)(a9 + 56) = v67;
  *(_BYTE *)(a9 + 64) = v69;
  *(_QWORD *)(a9 + 72) = a19;
  *(_QWORD *)(a9 + 80) = v71;
  *(_QWORD *)(a9 + 88) = v72;
  *(_BYTE *)(a9 + 96) = a21 & 1;
  *(_QWORD *)(a9 + 104) = a22;
  return result;
}

__n128 ColorSet.init(id:colors:representedColorScheme:sortIndex:accentColor:prominent:backgroundOverrideColor:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __n128 result;

  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a3;
  v9 = a1[1];
  v10 = *(_QWORD *)(a3 + 32);
  v11 = *(_BYTE *)(a3 + 40);
  *(_QWORD *)a8 = *a1;
  *(_QWORD *)(a8 + 8) = v9;
  *(_QWORD *)(a8 + 16) = a2;
  *(_OWORD *)(a8 + 40) = v8;
  *(_QWORD *)(a8 + 56) = v10;
  *(_BYTE *)(a8 + 64) = v11;
  *(_QWORD *)(a8 + 72) = a4;
  result = *a5;
  *(__n128 *)(a8 + 80) = *a5;
  *(_BYTE *)(a8 + 96) = a6;
  *(_QWORD *)(a8 + 104) = a7;
  return result;
}

uint64_t ColorSet.color(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v5 = *a1;
  v6 = *((_BYTE *)a1 + 8);
  v7 = v3[7];
  v8 = *((_BYTE *)v3 + 64);
  v9 = v3[11];
  v10 = *((_BYTE *)v3 + 96);
  v11 = v3[13];
  v16 = *v3;
  v17 = *(_OWORD *)(v3 + 1);
  v18 = *(_OWORD *)(v3 + 3);
  v19 = *(_OWORD *)(v3 + 5);
  v20 = v7;
  v21 = v8;
  v22 = *(_OWORD *)(v3 + 9);
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v14 = v5;
  v15 = v6;
  sub_2378823B8((uint64_t)&v14, a2);
  v12 = swift_retain();
  static GradientColor.singleColor(_:)(v12, a3);
  return swift_release();
}

uint64_t ColorSet.color(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2378823B8(a1, a2);
  return swift_retain();
}

uint64_t ColorSet.color(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 8);
  v6 = a1[2];
  v7 = v2[7];
  v8 = *((_BYTE *)v2 + 64);
  v9 = v2[11];
  v10 = *((_BYTE *)v2 + 96);
  v11 = v2[13];
  v16 = *v2;
  v17 = *(_OWORD *)(v2 + 1);
  v18 = *(_OWORD *)(v2 + 3);
  v19 = *(_OWORD *)(v2 + 5);
  v20 = v7;
  v21 = v8;
  v22 = *(_OWORD *)(v2 + 9);
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v14 = v4;
  v15 = v5;
  sub_2378823B8((uint64_t)&v14, v6);
  v12 = swift_retain();
  static GradientColor.singleColor(_:)(v12, a2);
  return swift_release();
}

void ColorSet.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(v1 + 64);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237877D7C(a1, v3);
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_23787DEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  sub_237876B84(v1, v3, v5, v6, v7, 0);
  sub_237A885E0();
  sub_237A885EC();
  if (v2)
  {
    swift_retain();
    swift_retain();
    sub_237A871E8();
    sub_237A871E8();
    sub_23787A14C(v2);
  }
  sub_237A885EC();
  if (!v0)
    return sub_237A885EC();
  sub_237A885EC();
  swift_retain();
  sub_237A871E8();
  return swift_release();
}

uint64_t sub_23787E0BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23787E0E4 + 4 * byte_237A8AA0C[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23787E0E4()
{
  return 0x73726F6C6F63;
}

unint64_t sub_23787E0F8()
{
  return 0xD000000000000016;
}

uint64_t sub_23787E114()
{
  return 0x65646E4974726F73;
}

uint64_t sub_23787E134()
{
  return 0x6F43746E65636361;
}

uint64_t sub_23787E154()
{
  return 0x6E656E696D6F7270;
}

unint64_t sub_23787E170()
{
  return 0xD000000000000017;
}

uint64_t sub_23787E190()
{
  unsigned __int8 *v0;

  return sub_23787E0BC(*v0);
}

uint64_t sub_23787E198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23788354C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23787E1BC(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23787E1C8()
{
  sub_237882778();
  return sub_237A88718();
}

uint64_t sub_23787E1F0()
{
  sub_237882778();
  return sub_237A88724();
}

uint64_t ColorSet.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  char v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v28 = v1[3];
  v29 = v9;
  v10 = v1[4];
  v26 = v1[5];
  v27 = v10;
  v11 = v1[6];
  v24 = v1[7];
  v25 = v11;
  v37 = *((unsigned __int8 *)v1 + 64);
  v12 = v1[9];
  v21 = v1[10];
  v22 = v1[11];
  v23 = v12;
  v20 = *((unsigned __int8 *)v1 + 96);
  v19 = v1[13];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237882778();
  sub_237A886B8();
  v31 = v8;
  v32 = v7;
  v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  sub_23787AB28(&qword_25681E9D0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v13 = v30;
  sub_237A882B0();
  if (!v13)
  {
    v14 = v25;
    v15 = v26;
    v16 = v27;
    v17 = v28;
    v31 = v29;
    v38 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBE8);
    sub_2378827BC();
    sub_237A882B0();
    v31 = v17;
    v32 = v16;
    v33 = v15;
    v34 = v14;
    v35 = v24;
    v36 = v37;
    v38 = 2;
    sub_23787AAE4();
    sub_237A882B0();
    LOBYTE(v31) = 3;
    sub_237A88298();
    v31 = v21;
    v32 = v22;
    v38 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
    sub_237879720(&qword_25681E958, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
    sub_237A88268();
    LOBYTE(v31) = 5;
    sub_237A88280();
    v31 = v19;
    v38 = 6;
    sub_237879654();
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ColorSet.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _BYTE v7[72];
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = v0[7];
  v2 = *((_BYTE *)v0 + 64);
  v3 = v0[11];
  v4 = *((_BYTE *)v0 + 96);
  v5 = v0[13];
  v8 = *v0;
  v9 = *(_OWORD *)(v0 + 1);
  v10 = *(_OWORD *)(v0 + 3);
  v11 = *(_OWORD *)(v0 + 5);
  v12 = v1;
  v13 = v2;
  v14 = *(_OWORD *)(v0 + 9);
  v15 = v3;
  v16 = v4;
  v17 = v5;
  sub_237A885D4();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_237A88610();
}

uint64_t ColorSet.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  int v50;
  char v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237882778();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  v51 = 0;
  sub_23787AB28(&qword_25681EA08, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A881F0();
  v43 = a2;
  v10 = v44;
  v9 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBE8);
  v51 = 1;
  sub_2378828C0();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v41 = v10;
  v11 = v44;
  v51 = 2;
  sub_23787AC14();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v40 = v11;
  v12 = v44;
  v13 = v46;
  v14 = v47;
  LOBYTE(v44) = 3;
  v38 = v12;
  v39 = v45;
  v42 = v48;
  v50 = v49;
  sub_23787978C(v12, v45, v46, v47, v48, v49);
  v33 = sub_237A881D8();
  v36 = v14;
  v37 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E950);
  v51 = 4;
  sub_237879720(&qword_25681E9B0, (uint64_t)&protocol conformance descriptor for <A> DynamicAppearanceValue<A>);
  sub_237A881A8();
  v15 = v44;
  v16 = v45;
  LOBYTE(v44) = 5;
  sub_2378797D4(v15);
  v17 = sub_237A881C0();
  v34 = v16;
  v35 = v15;
  LODWORD(v32) = v17;
  v51 = 6;
  sub_237879610();
  sub_237A881A8();
  v31 = v32 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v32 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v38;
  v19 = v39;
  v20 = v36;
  v21 = v50;
  sub_23787978C(v38, v39, v37, v36, v42, v50);
  v22 = v35;
  sub_2378797D4(v35);
  swift_retain();
  sub_23787A14C(v22);
  v23 = v37;
  sub_237876B84(v18, v19, v37, v20, v42, v21);
  swift_bridgeObjectRelease();
  v24 = v40;
  swift_bridgeObjectRelease();
  v25 = v43;
  *v43 = v41;
  v25[1] = v9;
  v25[2] = v24;
  v25[3] = v18;
  v25[4] = v19;
  v25[5] = v23;
  v26 = v42;
  v25[6] = v20;
  v25[7] = v26;
  *((_BYTE *)v25 + 64) = v21;
  v27 = v34;
  v28 = v35;
  v25[9] = v33;
  v25[10] = v28;
  v25[11] = v27;
  *((_BYTE *)v25 + 96) = v31;
  v25[13] = v32;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(v18, v19, v37, v20, v42, v50);
  sub_23787A14C(v28);
  return swift_release();
}

uint64_t sub_23787EB80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ColorSet.init(from:)(a1, a2);
}

uint64_t sub_23787EB94(_QWORD *a1)
{
  return ColorSet.encode(to:)(a1);
}

uint64_t sub_23787EBA8()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _BYTE v7[72];
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = v0[7];
  v2 = *((_BYTE *)v0 + 64);
  v3 = v0[11];
  v4 = *((_BYTE *)v0 + 96);
  v5 = v0[13];
  v8 = *v0;
  v9 = *(_OWORD *)(v0 + 1);
  v10 = *(_OWORD *)(v0 + 3);
  v11 = *(_OWORD *)(v0 + 5);
  v12 = v1;
  v13 = v2;
  v14 = *(_OWORD *)(v0 + 9);
  v15 = v3;
  v16 = v4;
  v17 = v5;
  sub_237A885D4();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_237A88610();
}

uint64_t sub_23787EC3C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _BYTE v7[72];
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = v0[7];
  v2 = *((_BYTE *)v0 + 64);
  v3 = v0[11];
  v4 = *((_BYTE *)v0 + 96);
  v5 = v0[13];
  v8 = *v0;
  v9 = *(_OWORD *)(v0 + 1);
  v10 = *(_OWORD *)(v0 + 3);
  v11 = *(_OWORD *)(v0 + 5);
  v12 = v1;
  v13 = v2;
  v14 = *(_OWORD *)(v0 + 9);
  v15 = v3;
  v16 = v4;
  v17 = v5;
  sub_237A885D4();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_237A88610();
}

uint64_t static ColorSet.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_237A8840C();
}

uint64_t sub_23787ECFC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_237A8840C();
}

uint64_t sub_23787ED2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_237A8840C() ^ 1;
  return v7 & 1;
}

uint64_t sub_23787ED68(_QWORD *a1, _QWORD *a2)
{
  char v3;

  if (*a1 == *a2 && a1[1] == a2[1])
    v3 = 1;
  else
    v3 = sub_237A8840C() ^ 1;
  return v3 & 1;
}

uint64_t sub_23787EDB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_237A8840C();
}

unint64_t static ColorSet.shades(color0:color1:color2:color3:color4:color5:color6:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t inited;
  unint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9E0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 64) = 2;
  *(_QWORD *)(inited + 72) = a3;
  *(_QWORD *)(inited + 80) = 3;
  *(_QWORD *)(inited + 88) = a4;
  *(_QWORD *)(inited + 96) = 4;
  *(_QWORD *)(inited + 104) = a5;
  *(_QWORD *)(inited + 112) = 5;
  *(_QWORD *)(inited + 120) = a6;
  *(_QWORD *)(inited + 128) = 6;
  *(_QWORD *)(inited + 136) = a7;
  v15 = sub_2378D4758((_QWORD *)inited);
  swift_setDeallocating();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBD0);
  swift_arrayDestroy();
  return v15;
}

uint64_t ColorSet.ColorID.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  char v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  char v29;
  _QWORD v30[3];

  v6 = HIBYTE(a2) & 0xF;
  v7 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = v6;
  else
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    goto LABEL_54;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v9 = (unsigned __int8 *)sub_237A87FE0();
      v10 = sub_237881A24(v9, v7, 10);
      if ((v11 & 1) == 0)
        goto LABEL_10;
LABEL_54:
      if (a1 == 0xD000000000000013 && a2 == 0x8000000237AAF370 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v12 = 0;
        v19 = 0;
LABEL_58:
        v18 = 1;
        goto LABEL_59;
      }
      if (a1 == 0x7373416465657073 && a2 == 0xEB00000000747369 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v19 = 0;
        v12 = 1;
        goto LABEL_58;
      }
      if (a1 == 0xD000000000000015 && a2 == 0x8000000237AAF350 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v19 = 0;
        v18 = 1;
        v12 = 2;
        goto LABEL_59;
      }
      if (a1 == 0x6574617453776F6CLL && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v19 = 0;
        v18 = 1;
        v12 = 3;
        goto LABEL_59;
      }
      if (a1 == 0x6C61636974697263 && a2 == 0xED00006574617453 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v19 = 0;
        v18 = 1;
        v12 = 4;
        goto LABEL_59;
      }
      if (a1 == 0x656E696C646572 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v19 = 0;
        v18 = 1;
        v12 = 5;
        goto LABEL_59;
      }
      if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAF330)
      {
        result = swift_bridgeObjectRelease();
LABEL_89:
        v19 = 0;
        v18 = 1;
        v12 = 6;
        goto LABEL_59;
      }
LABEL_88:
      v29 = sub_237A8840C();
      result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        v12 = 0;
        v18 = 0;
        v19 = 1;
        goto LABEL_59;
      }
      goto LABEL_89;
    }
    v30[0] = a1;
    v30[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 == 43)
    {
      if (!v6)
        goto LABEL_87;
      if (v6 == 1)
        goto LABEL_82;
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_32;
      v12 = (BYTE1(a1) - 48);
      if (v6 != 2)
      {
        if ((BYTE2(a1) - 48) > 9u)
          goto LABEL_32;
        v12 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
        v13 = v6 - 3;
        if (v6 != 3)
        {
          v14 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            v15 = *v14 - 48;
            if (v15 > 9)
              goto LABEL_32;
            v16 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_32;
            v12 = v16 + v15;
            if (__OFADD__(v16, v15))
              goto LABEL_32;
            LOBYTE(v6) = 0;
            ++v14;
            if (!--v13)
              goto LABEL_35;
          }
        }
      }
    }
    else
    {
      if (a1 == 45)
      {
        if (v6)
        {
          if (v6 != 1)
          {
            if ((BYTE1(a1) - 48) > 9u)
              goto LABEL_32;
            if (v6 == 2)
            {
              LOBYTE(v6) = 0;
              v12 = -(uint64_t)(BYTE1(a1) - 48);
              goto LABEL_35;
            }
            if ((BYTE2(a1) - 48) > 9u)
              goto LABEL_32;
            v12 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
            v24 = v6 - 3;
            if (v6 != 3)
            {
              v25 = (unsigned __int8 *)v30 + 3;
              while (1)
              {
                v26 = *v25 - 48;
                if (v26 > 9)
                  goto LABEL_32;
                v27 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_32;
                v12 = v27 - v26;
                if (__OFSUB__(v27, v26))
                  goto LABEL_32;
                LOBYTE(v6) = 0;
                ++v25;
                if (!--v24)
                  goto LABEL_35;
              }
            }
            goto LABEL_34;
          }
LABEL_82:
          v12 = 0;
LABEL_35:
          if ((v6 & 1) == 0)
            goto LABEL_36;
          goto LABEL_54;
        }
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      if (!v6 || (a1 - 48) > 9u)
      {
LABEL_32:
        v12 = 0;
        LOBYTE(v6) = 1;
        goto LABEL_35;
      }
      v12 = (a1 - 48);
      if (v6 != 1)
      {
        if ((BYTE1(a1) - 48) > 9u)
          goto LABEL_32;
        v12 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
        v20 = v6 - 2;
        if (v6 != 2)
        {
          v21 = (unsigned __int8 *)v30 + 2;
          while (1)
          {
            v22 = *v21 - 48;
            if (v22 > 9)
              goto LABEL_32;
            v23 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_32;
            v12 = v23 + v22;
            if (__OFADD__(v23, v22))
              goto LABEL_32;
            LOBYTE(v6) = 0;
            ++v21;
            if (!--v20)
              goto LABEL_35;
          }
        }
      }
    }
LABEL_34:
    LOBYTE(v6) = 0;
    goto LABEL_35;
  }
  v10 = sub_237881940(a1, a2, 10);
  if ((v28 & 1) != 0)
    goto LABEL_54;
LABEL_10:
  v12 = (uint64_t)v10;
LABEL_36:
  result = swift_bridgeObjectRelease();
  v18 = 0;
  v19 = 0;
LABEL_59:
  *(_QWORD *)a3 = v12;
  *(_BYTE *)(a3 + 8) = v18;
  *(_BYTE *)(a3 + 9) = v19;
  return result;
}

uint64_t ColorSet.ColorID.rawValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X10 }
  return sub_237A882E0();
}

uint64_t sub_23787F60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ColorSet.ColorID.init(rawValue:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_23787F618@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ColorSet.ColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ColorSet.ColorID.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (*(_BYTE *)(v1 + 8) == 1)
    __asm { BR              X10 }
  v3 = sub_237A882E0();
  v5 = v4;
  a1[3] = (uint64_t)&type metadata for AnyCodingKey;
  a1[4] = sub_2378829BC();
  result = swift_allocObject();
  *a1 = result;
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  return result;
}

uint64_t ColorSet.ColorID.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;

  v6 = sub_237A88700();
  ColorSet.ColorID.init(rawValue:)(v6, v7, (uint64_t)&v11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  v9 = v12;
  v10 = v13;
  *(_QWORD *)a3 = v11;
  *(_BYTE *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 9) = v10;
  return result;
}

uint64_t ColorSet.ColorID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A8867C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_2Tm(v7, v7[3]);
    v5 = sub_237A8843C();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v7);
    *(_QWORD *)a2 = v5;
    *(_BYTE *)(a2 + 8) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t ColorSet.ColorID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  char v2;
  _BYTE v4[24];
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 8);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886AC();
  if ((v2 & 1) != 0)
  {
    ColorSet.ColorID.rawValue.getter();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_237A88460();
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_237A88478();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v4);
}

uint64_t sub_23787FA30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorSet.ColorID.init(from:)(a1, a2);
}

uint64_t sub_23787FA44(_QWORD *a1)
{
  return ColorSet.ColorID.encode(to:)(a1);
}

uint64_t Pair<>.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = ColorSet.ColorID.rawValue.getter();
  v4 = v3;
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = (uint64_t)&type metadata for AnyCodingKey;
  a1[4] = sub_2378829BC();
  result = swift_allocObject();
  *a1 = result;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  return result;
}

uint64_t Pair<>.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  _BYTE v46[16];
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_237A88700();
  v8 = v7;
  v48 = 95;
  v49 = 0xE100000000000000;
  v47 = &v48;
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)sub_237880F60(0x7FFFFFFFFFFFFFFFLL, 1, sub_237882A4C, (uint64_t)v46, v6, v8);
  swift_bridgeObjectRelease();
  if (v9[2] != 2)
    goto LABEL_3;
  v10 = v9[4];
  v11 = v9[5];
  v12 = v9[6];
  v13 = v9[7];
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x23B81E4C0](v10, v11, v12, v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  ColorSet.ColorID.init(rawValue:)(v14, v16, (uint64_t)&v48);
  if ((v49 & 0x100) != 0)
  {
LABEL_3:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
    result = swift_bridgeObjectRelease();
LABEL_4:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_BYTE *)(a3 + 24) = 1;
    return result;
  }
  if (v9[2] < 2uLL)
  {
    __break(1u);
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  v45 = v48;
  v18 = v49;
  v19 = v9[8];
  v20 = v9[9];
  v21 = v9[10];
  v22 = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x23B81E4C0](v19, v20, v21, v22);
  v25 = v24;
  result = swift_bridgeObjectRelease();
  v26 = HIBYTE(v25) & 0xF;
  v27 = v23 & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0)
    v28 = HIBYTE(v25) & 0xF;
  else
    v28 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v28)
    goto LABEL_58;
  if ((v25 & 0x1000000000000000) != 0)
  {
    v30 = (uint64_t)sub_237881940(v23, v25, 10);
    LOBYTE(v23) = v44;
    goto LABEL_49;
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((v23 & 0x1000000000000000) != 0)
      v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v29 = (unsigned __int8 *)sub_237A87FE0();
    v30 = (uint64_t)sub_237881A24(v29, v27, 10);
    LOBYTE(v23) = v31 & 1;
LABEL_49:
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
      *(_QWORD *)a3 = v45;
      *(_QWORD *)(a3 + 8) = v18 & 1;
      *(_QWORD *)(a3 + 16) = v30;
      *(_BYTE *)(a3 + 24) = 0;
      return result;
    }
LABEL_59:
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
    goto LABEL_4;
  }
  v48 = v23;
  v49 = v25 & 0xFFFFFFFFFFFFFFLL;
  if (v23 == 43)
  {
    if (!v26)
      goto LABEL_63;
    if (v26 == 1 || (BYTE1(v23) - 48) > 9u)
      goto LABEL_36;
    v30 = (BYTE1(v23) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v23) - 48) > 9u)
        goto LABEL_36;
      v30 = 10 * (BYTE1(v23) - 48) + (BYTE2(v23) - 48);
      v32 = v26 - 3;
      if (v32)
      {
        v33 = (unsigned __int8 *)&v48 + 3;
        while (1)
        {
          v34 = *v33 - 48;
          if (v34 > 9)
            goto LABEL_36;
          v35 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            goto LABEL_36;
          v30 = v35 + v34;
          if (__OFADD__(v35, v34))
            goto LABEL_36;
          LOBYTE(v23) = 0;
          ++v33;
          if (!--v32)
            goto LABEL_49;
        }
      }
    }
LABEL_48:
    LOBYTE(v23) = 0;
    goto LABEL_49;
  }
  if (v23 != 45)
  {
    if (!v26 || (v23 - 48) > 9u)
      goto LABEL_36;
    v30 = (v23 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v23) - 48) > 9u)
        goto LABEL_36;
      v30 = 10 * (v23 - 48) + (BYTE1(v23) - 48);
      v36 = v26 - 2;
      if (v36)
      {
        v37 = (unsigned __int8 *)&v48 + 2;
        while (1)
        {
          v38 = *v37 - 48;
          if (v38 > 9)
            goto LABEL_36;
          v39 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            goto LABEL_36;
          v30 = v39 + v38;
          if (__OFADD__(v39, v38))
            goto LABEL_36;
          LOBYTE(v23) = 0;
          ++v37;
          if (!--v36)
            goto LABEL_49;
        }
      }
    }
    goto LABEL_48;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v23) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        LOBYTE(v23) = 0;
        v30 = -(uint64_t)(BYTE1(v23) - 48);
        goto LABEL_49;
      }
      if ((BYTE2(v23) - 48) <= 9u)
      {
        v30 = -10 * (BYTE1(v23) - 48) - (BYTE2(v23) - 48);
        v40 = v26 - 3;
        if (!v40)
          goto LABEL_48;
        v41 = (unsigned __int8 *)&v48 + 3;
        while (1)
        {
          v42 = *v41 - 48;
          if (v42 > 9)
            break;
          v43 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            break;
          v30 = v43 - v42;
          if (__OFSUB__(v43, v42))
            break;
          LOBYTE(v23) = 0;
          ++v41;
          if (!--v40)
            goto LABEL_49;
        }
      }
    }
LABEL_36:
    v30 = 0;
    LOBYTE(v23) = 1;
    goto LABEL_49;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t ColorMap.color.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t ColorMap.init(color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

__n128 (*sub_23787FFF4(_OWORD *a1))(__int128 *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[7];

  v2 = a1[5];
  v10[4] = a1[4];
  v10[5] = v2;
  v10[6] = a1[6];
  v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  v5 = (_OWORD *)swift_allocObject();
  v6 = a1[5];
  v5[5] = a1[4];
  v5[6] = v6;
  v5[7] = a1[6];
  v7 = a1[1];
  v5[1] = *a1;
  v5[2] = v7;
  v8 = a1[3];
  v5[3] = a1[2];
  v5[4] = v8;
  sub_237883894((uint64_t)v10);
  return sub_237883994;
}

__n128 sub_237880084(__int128 *a1, __int128 *a2)
{
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v2 = *((_BYTE *)a1 + 16);
  v3 = a2[5];
  v13 = a2[4];
  v14 = v3;
  v15 = a2[6];
  v4 = a2[1];
  v9 = *a2;
  v10 = v4;
  v5 = a2[3];
  v11 = a2[2];
  v12 = v5;
  v7 = *a1;
  v8 = v2;
  sub_237924434((uint64_t)&v7);
  return result;
}

void static ColorSet.defaultColorMap.getter(_QWORD *a1@<X8>)
{
  *a1 = sub_23787FFF4;
  a1[1] = 0;
}

uint64_t static ColorSet.overridableColorMap(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *a2 = sub_237882AA0;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void (*sub_237880138(_OWORD *a1, uint64_t a2))(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];

  v4 = a1[5];
  v12[4] = a1[4];
  v12[5] = v4;
  v12[6] = a1[6];
  v5 = a1[1];
  v12[0] = *a1;
  v12[1] = v5;
  v6 = a1[3];
  v12[2] = a1[2];
  v12[3] = v6;
  v7 = swift_allocObject();
  v8 = a1[2];
  *(_OWORD *)(v7 + 72) = a1[3];
  v9 = a1[5];
  *(_OWORD *)(v7 + 88) = a1[4];
  *(_OWORD *)(v7 + 104) = v9;
  *(_OWORD *)(v7 + 120) = a1[6];
  v10 = a1[1];
  *(_OWORD *)(v7 + 24) = *a1;
  *(_OWORD *)(v7 + 40) = v10;
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 56) = v8;
  swift_bridgeObjectRetain();
  sub_237883894((uint64_t)v12);
  return sub_237883888;
}

void sub_2378801EC(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t inited;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v7 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned __int8 *)(a1 + 16);
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_7;
  sub_23787A11C(*(_QWORD *)a1, v6, v8);
  v10 = sub_2378D2DC4(v7, v6, v8);
  if ((v11 & 1) == 0)
  {
    sub_23787A134(v7, v6, v8);
LABEL_7:
    v26 = a3[4];
    v27 = a3[5];
    v28 = a3[2];
    v38 = a3[3];
    v39 = v26;
    v29 = a3[6];
    v40 = v27;
    v41 = v29;
    v30 = a3[1];
    v35 = *a3;
    v36 = v30;
    v37 = v28;
    v32 = v7;
    v33 = v6;
    v34 = v8;
    sub_237924434((uint64_t)&v32);
    return;
  }
  v12 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v10);
  v13 = *v12;
  v14 = v12[1];
  v15 = v12[2];
  sub_23787D104(*v12, v14);
  sub_23787A134(v7, v6, v8);
  if (v14 < 0)
  {
    *a4 = v13;
  }
  else
  {
    v16 = a3[4];
    v17 = a3[5];
    v18 = a3[2];
    v38 = a3[3];
    v39 = v16;
    v19 = a3[6];
    v40 = v17;
    v41 = v19;
    v20 = a3[1];
    v35 = *a3;
    v36 = v20;
    v37 = v18;
    v32 = v13;
    LOBYTE(v33) = v14 & 1;
    v21 = sub_2378823B8((uint64_t)&v32, v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC68);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = v21;
    v23 = sub_2378D464C((double *)inited);
    swift_setDeallocating();
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC70);
    swift_arrayDestroy();
    v24 = sub_2379BA160(v23);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v24 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
      v25 = sub_237A880E8();
    }
    else
    {
      v25 = MEMORY[0x24BEE4B00];
    }
    *(_QWORD *)&v35 = v25;
    v31 = (_QWORD *)swift_bridgeObjectRetain();
    sub_2379BD4D4(v31, 1, &v35);
    swift_release();
    swift_bridgeObjectRelease();
    *a4 = v35;
  }
}

uint64_t ColorSet.ColorID.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_237880450(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_237895400(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC60);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378805C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_237895520(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC80);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23788072C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_237895660(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237880888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_237895694(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC90);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378809E8(uint64_t a1)
{
  return sub_237880A10(a1, (uint64_t (*)(void))sub_237896114, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

uint64_t sub_2378809FC(uint64_t a1)
{
  return sub_237880A10(a1, (uint64_t (*)(void))sub_237895BE4, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_237880A10(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237880B88(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_237896264(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237880CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23789635C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237880E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_237896468(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237880F60(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2378813FC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_237A87968();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_237A878A8();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_237A878A8();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_237A87980();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_2378957A0(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_2378957A0((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_237A878A8();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_237A87980();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2378957A0(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_2378957A0((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_237A880A0();
  __break(1u);
LABEL_42:
  result = sub_237A880A0();
  __break(1u);
  return result;
}

uint64_t sub_2378813FC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_237A87980();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_2378957A0(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_2378957A0((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_237A880A0();
  __break(1u);
  return result;
}

void sub_237881554(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_BYTE *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 56);
    swift_retain();
    if (v8)
    {
      v10 = (_QWORD *)*a3;
      v11 = sub_2378D2D10(v6, v7, v9);
      v13 = v10[2];
      v14 = (v12 & 1) == 0;
      v15 = __OFADD__(v13, v14);
      v16 = v13 + v14;
      if (v15)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      LOBYTE(v17) = v12;
      if (v10[3] < v16)
      {
        sub_2378C88BC(v16, a2 & 1);
        v11 = sub_2378D2D10(v6, v7, v9);
        if ((v17 & 1) == (v18 & 1))
          goto LABEL_9;
LABEL_7:
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC00);
        v11 = sub_237A8858C();
        __break(1u);
      }
      if ((a2 & 1) == 0)
      {
        v21 = v11;
        sub_2378C49B0();
        v11 = v21;
        if ((v17 & 1) != 0)
        {
LABEL_10:
          v19 = (void *)swift_allocError();
          swift_willThrow();
          v20 = v19;
          __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_release();
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_29;
        }
LABEL_13:
        v22 = (_QWORD *)*a3;
        *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
        v23 = v22[6] + 24 * v11;
        *(_QWORD *)v23 = v6;
        *(_BYTE *)(v23 + 8) = v7;
        *(_QWORD *)(v23 + 16) = v9;
        *(_QWORD *)(v22[7] + 8 * v11) = v8;
        v24 = v22[2];
        v15 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v15)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          sub_237A87F44();
          sub_237A878E4();
          __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC00);
          sub_237A88070();
          sub_237A878E4();
          sub_237A880AC();
          __break(1u);
          return;
        }
        v22[2] = v25;
        if (v5 != 1)
        {
          v17 = (_QWORD *)(a1 + 88);
          v26 = 1;
          while (v26 < *(_QWORD *)(a1 + 16))
          {
            v6 = *(v17 - 3);
            v7 = *((_BYTE *)v17 - 16);
            v9 = *(v17 - 1);
            v8 = *v17;
            swift_retain();
            if (!v8)
              goto LABEL_24;
            v27 = (_QWORD *)*a3;
            v28 = sub_2378D2D10(v6, v7, v9);
            v30 = v27[2];
            v31 = (v29 & 1) == 0;
            v15 = __OFADD__(v30, v31);
            v32 = v30 + v31;
            if (v15)
              goto LABEL_27;
            a2 = v29;
            if (v27[3] < v32)
            {
              sub_2378C88BC(v32, 1);
              v28 = sub_2378D2D10(v6, v7, v9);
              if ((a2 & 1) != (v33 & 1))
                goto LABEL_7;
            }
            if ((a2 & 1) != 0)
              goto LABEL_10;
            v34 = (_QWORD *)*a3;
            *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
            v35 = v34[6] + 24 * v28;
            *(_QWORD *)v35 = v6;
            *(_BYTE *)(v35 + 8) = v7;
            *(_QWORD *)(v35 + 16) = v9;
            *(_QWORD *)(v34[7] + 8 * v28) = v8;
            v36 = v34[2];
            v15 = __OFADD__(v36, 1);
            v37 = v36 + 1;
            if (v15)
              goto LABEL_28;
            ++v26;
            v34[2] = v37;
            v17 += 4;
            if (v5 == v26)
              goto LABEL_24;
          }
          goto LABEL_26;
        }
        goto LABEL_24;
      }
LABEL_9:
      if ((v17 & 1) != 0)
        goto LABEL_10;
      goto LABEL_13;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

unsigned __int8 *sub_237881940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_237A87974();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_237881CA0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_237A87FE0();
  }
LABEL_7:
  v11 = sub_237881A24(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_237881A24(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_237881CA0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_237A87980();
  v4 = sub_237881D1C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_237881D1C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_237881E60(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2378FDE58(v9, 0);
      v12 = sub_237881F4C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x23B81E4D8](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x23B81E4D8);
LABEL_9:
      sub_237A87FE0();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x23B81E4D8]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_237881E60(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_2378FDEBC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_2378FDEBC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_237A8792C();
  }
  __break(1u);
  return result;
}

unint64_t sub_237881F4C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_2378FDEBC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_237A87938();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_237A87FE0();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_2378FDEBC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_237A87914();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI8ColorSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  uint64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v21 = *(_OWORD *)(a1 + 40);
  v22 = *(_OWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v19 = *(unsigned __int8 *)(a2 + 96);
  v20 = *(unsigned __int8 *)(a1 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_237A8840C(), result = 0, (v10 & 1) != 0))
  {
    if ((sub_2379B60A4(v2, v7) & 1) == 0)
      return 0;
    v23[0] = v22;
    v23[1] = v21;
    v24 = v3;
    v25 = v4;
    _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0((uint64_t)v23);
    v13 = v12;
    result = 0;
    if ((v13 & 1) != 0 && v5 == v8)
    {
      if (v6)
      {
        if (v9)
        {
          sub_2378797D4(v6);
          sub_2378797D4(v9);
          if ((sub_237A871C4() & 1) != 0)
          {
            v14 = sub_237A871C4();
            sub_23787A14C(v9);
            sub_23787A14C(v6);
            result = 0;
            if ((v14 & 1) == 0 || ((v20 ^ v19) & 1) != 0)
              return result;
LABEL_20:
            if (v18)
            {
              if (v17)
              {
                swift_retain();
                swift_retain();
                v16 = sub_237A871C4();
                swift_release();
                swift_release();
                if ((v16 & 1) != 0)
                  return 1;
              }
            }
            else if (!v17)
            {
              return 1;
            }
            return 0;
          }
          sub_23787A14C(v9);
          v15 = v6;
LABEL_16:
          sub_23787A14C(v15);
          return 0;
        }
      }
      else if (!v9)
      {
        if (v20 != v19)
          return 0;
        goto LABEL_20;
      }
      sub_2378797D4(v6);
      sub_2378797D4(v9);
      sub_23787A14C(v6);
      v15 = v9;
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_2378823B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;

  v3 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = sub_2378D2D10(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2);
    if ((v5 & 1) != 0)
      return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  }
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t sub_2378824F0(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t))
{
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v36 = MEMORY[0x24BEE4AF8];
  sub_2379D640C(0, v2, 0);
  v3 = v36;
  result = sub_2379FA470(a1);
  v7 = result;
  v8 = 0;
  v9 = a1 + 64;
  v27 = v2;
  v28 = v6;
  v29 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v6)
      goto LABEL_24;
    v31 = v8;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v7);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v7);
    swift_retain();
    v32 = a2(&v33, v13, v14);
    result = swift_release();
    v15 = v33;
    v16 = v34;
    v17 = v35;
    v36 = v3;
    v18 = *(_QWORD *)(v3 + 16);
    v19 = *(_QWORD *)(v3 + 24);
    if (v18 >= v19 >> 1)
    {
      v26 = v35;
      result = sub_2379D640C(v19 > 1, v18 + 1, 1);
      v17 = v26;
      v3 = v36;
    }
    *(_QWORD *)(v3 + 16) = v18 + 1;
    v20 = v3 + 32 * v18;
    *(_QWORD *)(v20 + 32) = v15;
    *(_BYTE *)(v20 + 40) = v16;
    *(_QWORD *)(v20 + 48) = v17;
    *(_QWORD *)(v20 + 56) = v32;
    v10 = 1 << *(_BYTE *)(a1 + 32);
    if (v7 >= v10)
      goto LABEL_25;
    v9 = a1 + 64;
    v21 = *(_QWORD *)(v29 + 8 * v12);
    if ((v21 & (1 << v7)) == 0)
      goto LABEL_26;
    v6 = v28;
    if (*(_DWORD *)(a1 + 36) != v28)
      goto LABEL_27;
    v22 = v21 & (-2 << (v7 & 0x3F));
    if (v22)
    {
      v10 = __clz(__rbit64(v22)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v11 = v27;
    }
    else
    {
      v23 = v12 + 1;
      v24 = (unint64_t)(v10 + 63) >> 6;
      v11 = v27;
      if (v12 + 1 < v24)
      {
        v25 = *(_QWORD *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          v10 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v12)
          {
            v25 = *(_QWORD *)(a1 + 80 + 8 * v12++);
            if (v25)
            {
              v23 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v8 = v31 + 1;
    v7 = v10;
    if (v31 + 1 == v11)
      return v3;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_237882750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)(v2 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v2 + 16);
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = a2;
  return swift_retain();
}

uint64_t sub_23788276C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

unint64_t sub_237882778()
{
  unint64_t result;

  result = qword_25681EBE0;
  if (!qword_25681EBE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8AE10, &type metadata for ColorSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EBE0);
  }
  return result;
}

unint64_t sub_2378827BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25681EBF0;
  if (!qword_25681EBF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681EBE8);
    v2[0] = sub_23788293C(&qword_25681EBF8, (uint64_t)&protocol conformance descriptor for <> Pair<A, B>);
    v2[1] = sub_237879654();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25681EBF0);
  }
  return result;
}

unint64_t sub_237882838()
{
  unint64_t result;

  result = qword_25681EC08;
  if (!qword_25681EC08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet.ColorID, &type metadata for ColorSet.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681EC08);
  }
  return result;
}

unint64_t sub_23788287C()
{
  unint64_t result;

  result = qword_25681EC10;
  if (!qword_25681EC10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet.ColorID, &type metadata for ColorSet.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681EC10);
  }
  return result;
}

unint64_t sub_2378828C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25681EC20;
  if (!qword_25681EC20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681EBE8);
    v2[0] = sub_23788293C(&qword_25681EC28, (uint64_t)&protocol conformance descriptor for <> Pair<A, B>);
    v2[1] = sub_237879610();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25681EC20);
  }
  return result;
}

uint64_t sub_23788293C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681EC00);
    v6[0] = sub_237882838();
    v6[1] = sub_23788287C();
    v6[2] = MEMORY[0x24BEE1798];
    v6[3] = MEMORY[0x24BEE1770];
    result = MEMORY[0x23B81FA98](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378829BC()
{
  unint64_t result;

  result = qword_25681EC30;
  if (!qword_25681EC30)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9984, &type metadata for AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_25681EC30);
  }
  return result;
}

uint64_t sub_237882A00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_237882A4C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_237A8840C() & 1;
}

void (*sub_237882AA0(_OWORD *a1))(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v1;

  return sub_237880138(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_237882AAC()
{
  unint64_t result;

  result = qword_25681EC38;
  if (!qword_25681EC38)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet.ColorID, &type metadata for ColorSet.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681EC38);
  }
  return result;
}

unint64_t sub_237882AF4()
{
  unint64_t result;

  result = qword_25681EC40;
  if (!qword_25681EC40)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet, &type metadata for ColorSet);
    atomic_store(result, (unint64_t *)&qword_25681EC40);
  }
  return result;
}

uint64_t sub_237882B38()
{
  return MEMORY[0x24BEE17E8];
}

uint64_t destroy for ColorSet(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  if (*(_QWORD *)(a1 + 80))
  {
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for ColorSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ColorSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_BYTE *)(a2 + 64);
  sub_23787978C(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  v15 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v9;
  sub_237876B84(v10, v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v17 = *(_QWORD *)(a2 + 80);
  if (!v16)
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 80) = v17;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v17)
  {
    sub_23787BC04(a1 + 80);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 80) = v17;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ColorSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v5;
  v12 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v6;
  sub_237876B84(v7, v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (!v14)
    goto LABEL_5;
  if (!v13)
  {
    sub_23787BC04(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 80) = v13;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
LABEL_6:
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSet()
{
  return &type metadata for ColorSet;
}

uint64_t initializeBufferWithCopyOfBuffer for ColorSet.ColorShadeType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_237882FE0(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_237882FE0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t destroy for ColorSet.ColorShadeType(uint64_t a1)
{
  return sub_23788276C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for ColorSet.ColorShadeType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_237882FE0(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23788276C(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ColorSet.ColorShadeType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23788276C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSet.ColorShadeType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSet.ColorShadeType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_237883128(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_237883130(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.ColorShadeType()
{
  return &type metadata for ColorSet.ColorShadeType;
}

uint64_t getEnumTagSinglePayload for ColorSet.ColorID(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ColorSet.ColorID(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23788319C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2378831B8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.ColorID()
{
  return &type metadata for ColorSet.ColorID;
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorMap(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ColorMap()
{
  return swift_release();
}

_QWORD *assignWithCopy for ColorMap(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ColorMap(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorMap(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorMap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorMap()
{
  return &type metadata for ColorMap;
}

uint64_t getEnumTagSinglePayload for ColorSet.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2378833F4 + 4 * byte_237A8AA26[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_237883428 + 4 * byte_237A8AA21[v4]))();
}

uint64_t sub_237883428(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237883430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237883438);
  return result;
}

uint64_t sub_237883444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23788344CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_237883450(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237883458(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.CodingKeys()
{
  return &type metadata for ColorSet.CodingKeys;
}

unint64_t sub_237883478()
{
  unint64_t result;

  result = qword_25681EC48;
  if (!qword_25681EC48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ADE8, &type metadata for ColorSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EC48);
  }
  return result;
}

unint64_t sub_2378834C0()
{
  unint64_t result;

  result = qword_25681EC50;
  if (!qword_25681EC50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8AD58, &type metadata for ColorSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EC50);
  }
  return result;
}

unint64_t sub_237883508()
{
  unint64_t result;

  result = qword_25681EC58;
  if (!qword_25681EC58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8AD80, &type metadata for ColorSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EC58);
  }
  return result;
}

uint64_t sub_23788354C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AAF310 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646E4974726F73 && a2 == 0xE900000000000078 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AAF2F0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_237883824()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  if (*(_QWORD *)(v0 + 104))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_237883888(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_2378801EC(a1, *(_QWORD *)(v2 + 16), (__int128 *)(v2 + 24), a2);
}

uint64_t sub_237883894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v2, v3, v4, v5, v6, v8);
  sub_2378797D4(v7);
  swift_retain();
  return a1;
}

uint64_t sub_237883938()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  if (*(_QWORD *)(v0 + 96))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

__n128 sub_237883994(__int128 *a1)
{
  _OWORD *v1;
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v2 = *((_BYTE *)a1 + 16);
  v3 = v1[6];
  v13 = v1[5];
  v14 = v3;
  v15 = v1[7];
  v4 = v1[2];
  v9 = v1[1];
  v10 = v4;
  v5 = v1[4];
  v11 = v1[3];
  v12 = v5;
  v7 = *a1;
  v8 = v2;
  sub_237924434((uint64_t)&v7);
  return result;
}

uint64_t sub_2378839F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237883A14()
{
  return swift_deallocObject();
}

uint64_t sub_237883A30()
{
  return swift_deallocClassInstance();
}

id static NSBundle.carplayAssetUI.getter()
{
  uint64_t ObjCClassFromMetadata;

  _s12BundleLoaderCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t _s12BundleLoaderCMa()
{
  return objc_opt_self();
}

uint64_t sub_237883AA4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, _QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  char v31;
  uint64_t v32;
  uint64_t v33;

  v5 = a1;
  v33 = a1;
  v24 = a4 + 64;
  v6 = 1 << *(_BYTE *)(a4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a4 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v27 = v5;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * i);
    v17 = *(_QWORD *)(a4 + 56) + 48 * i;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(void **)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 40);
    v23 = *(_BYTE *)(v17 + 32);
    v30[0] = v16;
    v30[1] = v18;
    v30[2] = v19;
    v30[3] = v20;
    v30[4] = v21;
    v31 = v23;
    v32 = v22;
    sub_237870090(v18, v19, v20, v21, v23);
    a2(&v29, &v33, v30);
    sub_2378702E0(v18, v19, v20, v21, v23);
    v5 = v27;
    result = swift_bridgeObjectRelease();
    if (v28)
    {
LABEL_25:
      swift_release();
      return v5;
    }
    v5 = v29;
    v33 = v29;
    v27 = v29;
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v25)
      goto LABEL_25;
    v14 = *(_QWORD *)(v24 + 8 * v10);
    if (!v14)
      break;
LABEL_17:
    v8 = (v14 - 1) & v14;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v25)
    goto LABEL_25;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v25)
    goto LABEL_25;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v25)
    goto LABEL_25;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 4;
  if (v10 + 4 >= v25)
    goto LABEL_25;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v25)
      goto LABEL_25;
    v14 = *(_QWORD *)(v24 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_17;
  }
LABEL_27:
  __break(1u);
  return result;
}

double static DefaultRedactedColorID.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 26;
  *(_OWORD *)a1 = xmmword_237A8AE70;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double sub_237883D20@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 26;
  *(_OWORD *)a1 = xmmword_237A8AE70;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

void ChargeFuelDataIdentifiers.levelDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ChargeFuelDataIdentifiers.levelDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.levelStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *ChargeFuelDataIdentifiers.levelStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.modify())()
{
  return nullsub_1;
}

double sub_237883DD4()
{
  double result;

  *(_QWORD *)&result = 471669530;
  dword_25681ED30 = 471669530;
  return result;
}

_QWORD *static ChargeFuelDataIdentifiers.fuel.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_237883E3C(&qword_25681DFF0, &dword_25681ED30, a1);
}

double sub_237883E08()
{
  double result;

  *(_QWORD *)&result = 134809350;
  dword_25681ED34 = 134809350;
  return result;
}

_QWORD *static ChargeFuelDataIdentifiers.charge.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_237883E3C(&qword_25681DFF8, &dword_25681ED34, a1);
}

_QWORD *sub_237883E3C@<X0>(_QWORD *result@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*result != -1)
    result = (_QWORD *)swift_once();
  *a3 = *a2;
  return result;
}

uint64_t ChargeFuelDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237883F70(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237883FA8 + 4 * byte_237A8AE90[a1]))(0xD000000000000013, 0x8000000237AAF4D0);
}

uint64_t sub_237883FA8(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_237883FE0()
{
  unsigned __int8 *v0;

  return sub_237883F70(*v0);
}

uint64_t sub_237883FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23788A59C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23788400C()
{
  sub_237888110();
  return sub_237A88718();
}

uint64_t sub_237884034()
{
  sub_237888110();
  return sub_237A88724();
}

uint64_t ChargeFuelDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v15 = v1[2];
  v16 = v9;
  HIDWORD(v14) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888110();
  sub_237A886B8();
  v24 = v8;
  v23 = 0;
  sub_237888154();
  sub_237A882B0();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v5;
  v12 = BYTE4(v14);
  v13 = v15;
  v22 = v16;
  v21 = 1;
  sub_237A882B0();
  v20 = v13;
  v19 = 2;
  sub_237A882B0();
  v18 = v12;
  v17 = 3;
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t ChargeFuelDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t ChargeFuelDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888110();
  sub_237A88688();
  if (!v2)
  {
    v22 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v23;
    v20 = 1;
    sub_237A881F0();
    v15 = v9;
    v10 = v21;
    v18 = 2;
    sub_237A881F0();
    v14 = v10;
    LOBYTE(v10) = v19;
    v16 = 3;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23788454C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ChargeFuelDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237884560(_QWORD *a1)
{
  return ChargeFuelDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_23788457C()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

void RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.modify())()
{
  return nullsub_1;
}

void RemainingRangeDataIdentifiers.unitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *RemainingRangeDataIdentifiers.unitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*RemainingRangeDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RemainingRangeDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23788475C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_23788479C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23788A734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378847C0()
{
  sub_237888300();
  return sub_237A88718();
}

uint64_t sub_2378847E8()
{
  sub_237888300();
  return sub_237A88724();
}

uint64_t RemainingRangeDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888300();
  sub_237A886B8();
  v15 = v8;
  v14 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RemainingRangeDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t RemainingRangeDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888300();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v16;
    v13 = 1;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237884B74@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RemainingRangeDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237884B88(_QWORD *a1)
{
  return RemainingRangeDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_237884BA0()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237884C28()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[296];

  sub_237888344(v1 + 8, (uint64_t)v4);
  sub_237888344((uint64_t)v4, a1);
  return sub_2378884F8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_23788838C);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[288];
  _BYTE v4[296];

  sub_237888344(a1, (uint64_t)v3);
  sub_237888344(v1 + 8, (uint64_t)v4);
  sub_2378884F8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
  return sub_237888344((uint64_t)v3, v1 + 8);
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 296);
  v3 = *(_QWORD *)(v1 + 304);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 312);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304), *(_BYTE *)(v1 + 312));
  *(_QWORD *)(v1 + 296) = v2;
  *(_QWORD *)(v1 + 304) = v3;
  *(_BYTE *)(v1 + 312) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 320);
  v3 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 336);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328), *(_BYTE *)(v1 + 336));
  *(_QWORD *)(v1 + 320) = v2;
  *(_QWORD *)(v1 + 328) = v3;
  *(_BYTE *)(v1 + 336) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 344);
  v3 = *(_QWORD *)(v1 + 352);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 360);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352), *(_BYTE *)(v1 + 360));
  *(_QWORD *)(v1 + 344) = v2;
  *(_QWORD *)(v1 + 352) = v3;
  *(_BYTE *)(v1 + 360) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 368);
  v3 = *(_QWORD *)(v1 + 376);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 384);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 376), *(_BYTE *)(v1 + 384));
  *(_QWORD *)(v1 + 368) = v2;
  *(_QWORD *)(v1 + 376) = v3;
  *(_BYTE *)(v1 + 384) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 392);
  v3 = *(_QWORD *)(v1 + 400);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 408);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 392), *(_QWORD *)(v1 + 400), *(_BYTE *)(v1 + 408));
  *(_QWORD *)(v1 + 392) = v2;
  *(_QWORD *)(v1 + 400) = v3;
  *(_BYTE *)(v1 + 408) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 416);
  v3 = *(_QWORD *)(v1 + 424);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 432);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 416), *(_QWORD *)(v1 + 424), *(_BYTE *)(v1 + 432));
  *(_QWORD *)(v1 + 416) = v2;
  *(_QWORD *)(v1 + 424) = v3;
  *(_BYTE *)(v1 + 432) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 440);
  v3 = *(_QWORD *)(v1 + 448);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 456);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 448), *(_BYTE *)(v1 + 456));
  *(_QWORD *)(v1 + 440) = v2;
  *(_QWORD *)(v1 + 448) = v3;
  *(_BYTE *)(v1 + 456) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 472);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 480);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 472), *(_BYTE *)(v1 + 480));
  *(_QWORD *)(v1 + 464) = v2;
  *(_QWORD *)(v1 + 472) = v3;
  *(_BYTE *)(v1 + 480) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 488) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.modify())()
{
  return nullsub_1;
}

void *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(levelDataIdentifier:levelStateDataIdentifier:levelMarkerLowDataIdentifier:portSideIndicatorDataIdentifier:remainingRangeTextConfiguration:trackColorID:progressColorID:lowLevelColorID:criticallyLowLevelColorID:normalLevelIndicatorColorID:lowLevelIndicatorColorID:criticallyLowLevelIndicatorColorID:redactedIndicatorColorID:)@<X0>(char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, void *a9@<X8>, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  unint64_t v25;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v47[288];
  _QWORD __src[63];

  v27 = *a2;
  v28 = *a1;
  v42 = *a3;
  v17 = *a4;
  sub_237888344(a5, (uint64_t)v47);
  v44 = a6[1];
  v45 = *a6;
  v43 = *((_BYTE *)a6 + 16);
  v18 = *a7;
  v19 = a7[1];
  LOBYTE(a7) = *((_BYTE *)a7 + 16);
  v40 = a8[1];
  v41 = *a8;
  v39 = *((_BYTE *)a8 + 16);
  v37 = a10[1];
  v38 = *a10;
  v20 = *((_BYTE *)a10 + 16);
  v35 = a11[1];
  v36 = *a11;
  v21 = *((_BYTE *)a11 + 16);
  v33 = a12[1];
  v34 = *a12;
  v22 = *((_BYTE *)a12 + 16);
  v31 = a13[1];
  v32 = *a13;
  v23 = *((_BYTE *)a13 + 16);
  v29 = a14[1];
  v30 = *a14;
  v24 = *((_BYTE *)a14 + 16);
  v25 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  LOBYTE(__src[0]) = v28;
  BYTE1(__src[0]) = v27;
  BYTE2(__src[0]) = v17;
  BYTE3(__src[0]) = v42;
  sub_237888344((uint64_t)v47, (uint64_t)&__src[1]);
  __src[37] = v18;
  __src[38] = v19;
  LOBYTE(__src[39]) = (_BYTE)a7;
  __src[40] = v45;
  __src[41] = v44;
  LOBYTE(__src[42]) = v43;
  __src[43] = v41;
  __src[44] = v40;
  LOBYTE(__src[45]) = v39;
  __src[46] = v38;
  __src[47] = v37;
  LOBYTE(__src[48]) = v20;
  __src[49] = v36;
  __src[50] = v35;
  LOBYTE(__src[51]) = v21;
  __src[52] = v34;
  __src[53] = v33;
  LOBYTE(__src[54]) = v22;
  __src[55] = v32;
  __src[56] = v31;
  LOBYTE(__src[57]) = v23;
  __src[58] = v30;
  __src[59] = v29;
  LOBYTE(__src[60]) = v24;
  __src[61] = v25;
  return memcpy(a9, __src, 0x1F0uLL);
}

_QWORD *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.assets.getter()
{
  uint64_t v0;
  _BYTE __dst[274];
  _BYTE v3[288];
  _BYTE v4[8];
  _BYTE v5[274];

  sub_237888344(v0 + 8, (uint64_t)v3);
  sub_237888344((uint64_t)v3, (uint64_t)v4);
  if (sub_2378886F0((uint64_t)v4) == 1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  memcpy(__dst, v5, sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];
  _BYTE v9[288];
  _BYTE v10[288];

  sub_237888344(v1 + 8, (uint64_t)v9);
  sub_237888344((uint64_t)v9, (uint64_t)v10);
  result = sub_2378886F0((uint64_t)v10);
  if ((_DWORD)result != 1)
  {
    v5 = *(_QWORD *)(v1 + 264);
    v6 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
    MEMORY[0x24BDAC7A8](v6);
    v8[2] = a1;
    swift_bridgeObjectRetain();
    v7 = sub_237883AA4(v6, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_237888708, (uint64_t)v8, v5);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v2)
    {
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 264) = v7;
    }
  }
  return result;
}

unint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = sub_237A7FE88(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)(uint64_t a1)
{
  char *v1;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE __dst[274];
  uint64_t v34;
  _QWORD v35[35];
  _BYTE v36[288];
  _BYTE v37[296];

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  sub_237888344((uint64_t)(v1 + 8), (uint64_t)v36);
  v7 = *((_QWORD *)v1 + 37);
  v8 = *((_QWORD *)v1 + 38);
  v9 = v1[312];
  v10 = *((_QWORD *)v1 + 41);
  v13 = *((_QWORD *)v1 + 40);
  v12 = v1[336];
  v15 = *((_QWORD *)v1 + 44);
  v16 = *((_QWORD *)v1 + 43);
  v14 = v1[360];
  v18 = *((_QWORD *)v1 + 47);
  v19 = *((_QWORD *)v1 + 46);
  v17 = v1[384];
  v21 = *((_QWORD *)v1 + 50);
  v22 = *((_QWORD *)v1 + 49);
  v20 = v1[408];
  v24 = *((_QWORD *)v1 + 53);
  v25 = *((_QWORD *)v1 + 52);
  v23 = v1[432];
  v27 = *((_QWORD *)v1 + 56);
  v28 = *((_QWORD *)v1 + 55);
  v26 = v1[456];
  v30 = *((_QWORD *)v1 + 59);
  v31 = *((_QWORD *)v1 + 58);
  v29 = v1[480];
  v32 = *((_QWORD *)v1 + 61);
  v37[0] = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v37[0] = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v37[0] = v5;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v37[0] = v6;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237888344((uint64_t)v36, (uint64_t)v37);
  if (sub_2378886F0((uint64_t)v37) == 1)
  {
    sub_237A885EC();
  }
  else
  {
    sub_237888344((uint64_t)v36, (uint64_t)&v34);
    sub_237A885EC();
    InstrumentDataIdentifier.rawValue.getter();
    sub_237888720((uint64_t)&v34);
    sub_237888720((uint64_t)&v34);
    sub_237A87710();
    swift_bridgeObjectRelease();
    InstrumentDataIdentifier.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    memcpy(__dst, v35, sizeof(__dst));
    MeasurementLabelConfiguration.hash(into:)(a1);
    sub_2378884F8((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    sub_2378884F8((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
  }
  v34 = v7;
  v35[0] = v8;
  LOBYTE(v35[1]) = v9;
  sub_23787A11C(v7, v8, v9);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v7, v8, v9);
  v34 = v13;
  v35[0] = v10;
  LOBYTE(v35[1]) = v12;
  sub_23787A11C(v13, v10, v12);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v13, v10, v12);
  v34 = v16;
  v35[0] = v15;
  LOBYTE(v35[1]) = v14;
  sub_23787A11C(v16, v15, v14);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v16, v15, v14);
  v34 = v19;
  v35[0] = v18;
  LOBYTE(v35[1]) = v17;
  sub_23787A11C(v19, v18, v17);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v19, v18, v17);
  v34 = v22;
  v35[0] = v21;
  LOBYTE(v35[1]) = v20;
  sub_23787A11C(v22, v21, v20);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v22, v21, v20);
  v34 = v25;
  v35[0] = v24;
  LOBYTE(v35[1]) = v23;
  sub_23787A11C(v25, v24, v23);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v25, v24, v23);
  v34 = v28;
  v35[0] = v27;
  LOBYTE(v35[1]) = v26;
  sub_23787A11C(v28, v27, v26);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v28, v27, v26);
  v34 = v31;
  v35[0] = v30;
  LOBYTE(v35[1]) = v29;
  sub_23787A11C(v31, v30, v29);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v31, v30, v29);
  swift_bridgeObjectRetain();
  sub_2378775A8(a1, v32);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237885A88(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237885AC4 + 4 * byte_237A8AE94[a1]))(0xD000000000000013, 0x8000000237AAF4D0);
}

unint64_t sub_237885AC4()
{
  return 0xD000000000000018;
}

void sub_237885BB0()
{
  JUMPOUT(0x237885BBCLL);
}

uint64_t sub_237885BC8()
{
  unsigned __int8 *v0;

  return sub_237885A88(*v0);
}

uint64_t sub_237885BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23788A820(a1, a2);
  *a3 = result;
  return result;
}

void sub_237885BF4(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_237885C00()
{
  sub_237888854();
  return sub_237A88718();
}

uint64_t sub_237885C28()
{
  sub_237888854();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE v54[296];
  int v55;
  char v56;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v55 = v1[1];
  v8 = v1[2];
  v48 = v1[3];
  v49 = v8;
  sub_237888344((uint64_t)(v1 + 8), (uint64_t)v54);
  v47 = *((_QWORD *)v1 + 37);
  v45 = *((_QWORD *)v1 + 38);
  v46 = v1[312];
  v9 = *((_QWORD *)v1 + 41);
  v42 = *((_QWORD *)v1 + 40);
  v43 = v9;
  v44 = v1[336];
  v10 = *((_QWORD *)v1 + 44);
  v39 = *((_QWORD *)v1 + 43);
  v40 = v10;
  v41 = v1[360];
  v11 = *((_QWORD *)v1 + 47);
  v36 = *((_QWORD *)v1 + 46);
  v37 = v11;
  v38 = v1[384];
  v12 = *((_QWORD *)v1 + 50);
  v33 = *((_QWORD *)v1 + 49);
  v34 = v12;
  v35 = v1[408];
  v13 = *((_QWORD *)v1 + 53);
  v30 = *((_QWORD *)v1 + 52);
  v31 = v13;
  v32 = v1[432];
  v14 = *((_QWORD *)v1 + 56);
  v27 = *((_QWORD *)v1 + 55);
  v28 = v14;
  v29 = v1[456];
  v15 = *((_QWORD *)v1 + 59);
  v24 = *((_QWORD *)v1 + 58);
  v25 = v15;
  v26 = v1[480];
  v23 = *((_QWORD *)v1 + 61);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888854();
  sub_237A886B8();
  LOBYTE(v51) = v7;
  v16 = v6;
  v56 = 0;
  sub_237888154();
  v17 = v50;
  sub_237A882B0();
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = v48;
  v19 = v49;
  v20 = v47;
  LOBYTE(v51) = v55;
  v56 = 1;
  sub_237A882B0();
  LOBYTE(v51) = v19;
  v56 = 2;
  sub_237A882B0();
  v50 = v4;
  LOBYTE(v51) = v18;
  v56 = 3;
  sub_237A882B0();
  sub_237888344((uint64_t)v54, (uint64_t)&v51);
  v56 = 4;
  sub_237888898();
  sub_237A88268();
  v51 = v20;
  v52 = v45;
  v53 = v46;
  v56 = 5;
  sub_23787AA5C();
  sub_237A882B0();
  v51 = v42;
  v52 = v43;
  v53 = v44;
  v56 = 6;
  sub_237A882B0();
  v51 = v39;
  v52 = v40;
  v53 = v41;
  v56 = 7;
  sub_237A882B0();
  v51 = v36;
  v52 = v37;
  v53 = v38;
  v56 = 8;
  sub_237A882B0();
  v51 = v33;
  v52 = v34;
  v53 = v35;
  v56 = 9;
  sub_237A882B0();
  v51 = v30;
  v52 = v31;
  v53 = v32;
  v56 = 10;
  v50 = v3;
  sub_237A882B0();
  v51 = v27;
  v52 = v28;
  v53 = v29;
  v56 = 11;
  sub_237A882B0();
  v51 = v24;
  v52 = v25;
  v53 = v26;
  v56 = 12;
  sub_237A882B0();
  v51 = v23;
  v56 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
  sub_237888998(&qword_25681EDA0, (uint64_t (*)(void))sub_2378888DC, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  v21 = v50;
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v16, v21);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hashValue.getter()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[496];

  memcpy(__dst, v0, sizeof(__dst));
  sub_237A885D4();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  _QWORD v78[62];
  uint64_t v79[63];
  _BYTE v80[288];
  uint64_t v81;
  uint64_t v82[62];
  _OWORD v83[18];
  int v84;
  char v85;
  char v86;

  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EDB0);
  v5 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237888920(v83);
  v77 = &v82[1];
  sub_237888344((uint64_t)v83, (uint64_t)&v82[1]);
  v82[61] = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237888854();
  sub_237A88688();
  v75 = a1;
  if (v2)
  {
    v76 = v2;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    goto LABEL_4;
  }
  v8 = v5;
  v73 = a2;
  LOBYTE(v78[0]) = 0;
  sub_237888198();
  sub_237A881F0();
  v9 = LOBYTE(v79[0]);
  LOBYTE(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 1;
  sub_237A881F0();
  v10 = LOBYTE(v79[0]);
  BYTE1(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 2;
  sub_237A881F0();
  v72 = v10;
  v84 = v9;
  v20 = v79[0];
  BYTE2(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 3;
  sub_237A881F0();
  v21 = LOBYTE(v79[0]);
  BYTE3(v82[0]) = v79[0];
  v86 = 4;
  sub_237888954();
  sub_237A881A8();
  sub_237888344((uint64_t)&v81, (uint64_t)v80);
  sub_237888344((uint64_t)v80, (uint64_t)v77);
  LOBYTE(v78[0]) = 5;
  sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_23788838C);
  v71 = sub_23787AB8C();
  sub_237A881F0();
  v69 = v21;
  v22 = LOBYTE(v79[2]);
  v82[37] = v79[0];
  v82[38] = v79[1];
  LOBYTE(v82[39]) = v79[2];
  LOBYTE(v78[0]) = 6;
  v23 = v79[0];
  v70 = v79[1];
  sub_23787A11C(v79[0], v79[1], v79[2]);
  sub_237A881F0();
  v67 = v23;
  v68 = v22;
  v24 = LOBYTE(v79[2]);
  v82[40] = v79[0];
  v82[41] = v79[1];
  LOBYTE(v82[42]) = v79[2];
  LOBYTE(v78[0]) = 7;
  v25 = v79[0];
  v66 = v79[1];
  sub_23787A11C(v79[0], v79[1], v79[2]);
  sub_237A881F0();
  v65 = v24;
  v26 = v79[1];
  v27 = LOBYTE(v79[2]);
  v82[43] = v79[0];
  v82[44] = v79[1];
  LOBYTE(v82[45]) = v79[2];
  LOBYTE(v78[0]) = 8;
  v63 = v79[0];
  v64 = v25;
  sub_23787A11C(v79[0], v79[1], v79[2]);
  sub_237A881F0();
  v76 = 0;
  v61 = v26;
  v62 = v27;
  v82[46] = v79[0];
  v82[47] = v79[1];
  LOBYTE(v82[48]) = v79[2];
  LOBYTE(v78[0]) = 9;
  v28 = v79[0];
  v29 = v79[1];
  v30 = LOBYTE(v79[2]);
  sub_23787A11C(v79[0], v79[1], v79[2]);
  v31 = v76;
  sub_237A881F0();
  v76 = v31;
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_23787A134(v28, v29, v30);
    sub_23787A134(v63, v61, v62);
    sub_23787A134(v64, v66, v65);
    sub_23787A134(v67, v70, v68);
    sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v11 = 1;
    v12 = 1;
    v13 = 1;
    v14 = 1;
    goto LABEL_4;
  }
  v82[49] = v79[0];
  v82[50] = v79[1];
  LOBYTE(v82[51]) = v79[2];
  LOBYTE(v78[0]) = 10;
  v32 = v79[0];
  v59 = v79[1];
  v60 = LOBYTE(v79[2]);
  sub_23787A11C(v79[0], v79[1], v79[2]);
  v33 = v76;
  sub_237A881F0();
  v76 = v33;
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_23787A134(v32, v59, v60);
    sub_23787A134(v28, v29, v30);
    sub_23787A134(v63, v61, v62);
    sub_23787A134(v64, v66, v65);
    sub_23787A134(v67, v70, v68);
    sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v11 = 1;
    v12 = 1;
    v13 = 1;
    v14 = 1;
    v15 = 1;
    goto LABEL_4;
  }
  v82[52] = v79[0];
  v82[53] = v79[1];
  LOBYTE(v82[54]) = v79[2];
  LOBYTE(v78[0]) = 11;
  v57 = v79[0];
  v58 = v79[1];
  v56 = LOBYTE(v79[2]);
  sub_23787A11C(v79[0], v79[1], v79[2]);
  v34 = v76;
  sub_237A881F0();
  v76 = v34;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_23787A134(v57, v58, v56);
    sub_23787A134(v32, v59, v60);
    sub_23787A134(v28, v29, v30);
    sub_23787A134(v63, v61, v62);
    sub_23787A134(v64, v66, v65);
    sub_23787A134(v67, v70, v68);
    sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    v17 = 0;
    v18 = 0;
    v11 = 1;
    v12 = 1;
    v13 = 1;
    v14 = 1;
    v15 = 1;
    v16 = 1;
    goto LABEL_4;
  }
  v82[55] = v79[0];
  v82[56] = v79[1];
  LOBYTE(v82[57]) = v79[2];
  LOBYTE(v78[0]) = 12;
  v53 = v79[0];
  v54 = v79[1];
  v55 = LOBYTE(v79[2]);
  sub_23787A11C(v79[0], v79[1], v79[2]);
  v35 = v76;
  sub_237A881F0();
  v76 = v35;
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_23787A134(v53, v54, v55);
    sub_23787A134(v57, v58, v56);
    sub_23787A134(v32, v59, v60);
    sub_23787A134(v28, v29, v30);
    sub_23787A134(v63, v61, v62);
    sub_23787A134(v64, v66, v65);
    sub_23787A134(v67, v70, v68);
    sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    v18 = 0;
    v11 = 1;
    v12 = 1;
    v13 = 1;
    v14 = 1;
    v15 = 1;
    v16 = 1;
    v17 = 1;
    goto LABEL_4;
  }
  v71 = v79[0];
  v52 = v79[1];
  v36 = LOBYTE(v79[2]);
  v82[58] = v79[0];
  v82[59] = v79[1];
  LOBYTE(v82[60]) = v79[2];
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
  v85 = 13;
  v51 = v36;
  sub_23787A11C(v71, v52, v36);
  sub_237888998(&qword_25681EDC0, (uint64_t (*)(void))sub_237888A0C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
  v37 = v76;
  sub_237A881F0();
  v76 = v37;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_23787A134(v71, v52, v51);
    sub_23787A134(v53, v54, v55);
    sub_23787A134(v57, v58, v56);
    sub_23787A134(v32, v59, v60);
    sub_23787A134(v28, v29, v30);
    sub_23787A134(v63, v61, v62);
    sub_23787A134(v64, v66, v65);
    sub_23787A134(v67, v70, v68);
    sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    v11 = 1;
    v12 = 1;
    v13 = 1;
    v14 = 1;
    v15 = 1;
    v16 = 1;
    v17 = 1;
    v18 = 1;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v75);
    sub_237888344((uint64_t)v77, (uint64_t)v79);
    sub_2378884F8((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
    if (v11)
    {
      sub_23787A134(v82[37], v82[38], v82[39]);
      if (!v12)
        goto LABEL_6;
    }
    else if (!v12)
    {
LABEL_6:
      if (v13)
        goto LABEL_7;
      goto LABEL_15;
    }
    sub_23787A134(v82[40], v82[41], v82[42]);
    if (v13)
    {
LABEL_7:
      sub_23787A134(v82[43], v82[44], v82[45]);
      if (!v14)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    if (!v14)
    {
LABEL_8:
      if (v15)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    sub_23787A134(v82[46], v82[47], v82[48]);
    if (v15)
    {
LABEL_9:
      sub_23787A134(v82[49], v82[50], v82[51]);
      if (!v16)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    if (!v16)
    {
LABEL_10:
      if (v17)
        goto LABEL_11;
      goto LABEL_19;
    }
LABEL_18:
    sub_23787A134(v82[52], v82[53], v82[54]);
    if (v17)
    {
LABEL_11:
      sub_23787A134(v82[55], v82[56], v82[57]);
      if (!v18)
        return swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_19:
    if (!v18)
      return swift_bridgeObjectRelease();
LABEL_20:
    sub_23787A134(v82[58], v82[59], v82[60]);
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
  v38 = v79[62];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v82[61] = v38;
  LOBYTE(v78[0]) = v84;
  BYTE1(v78[0]) = v72;
  BYTE2(v78[0]) = v20;
  BYTE3(v78[0]) = v69;
  sub_237888344((uint64_t)v80, (uint64_t)&v78[1]);
  v78[37] = v67;
  v78[38] = v70;
  LOBYTE(v78[39]) = v68;
  v78[40] = v64;
  v78[41] = v66;
  LOBYTE(v78[42]) = v65;
  v78[43] = v63;
  v78[44] = v61;
  LOBYTE(v78[45]) = v62;
  v47 = v28;
  v48 = v29;
  v78[46] = v28;
  v78[47] = v29;
  v49 = v30;
  LOBYTE(v78[48]) = v30;
  v46 = v32;
  v78[49] = v32;
  v78[50] = v59;
  LOBYTE(v78[51]) = v60;
  v78[52] = v57;
  v78[53] = v58;
  v40 = v55;
  v39 = v56;
  LOBYTE(v78[54]) = v56;
  v42 = v53;
  v41 = v54;
  v78[55] = v53;
  v78[56] = v54;
  LOBYTE(v78[57]) = v55;
  v43 = v71;
  v78[58] = v71;
  v44 = v52;
  v78[59] = v52;
  v45 = v51;
  LOBYTE(v78[60]) = v51;
  v78[61] = v38;
  sub_237888A50((uint64_t)v78);
  swift_bridgeObjectRelease();
  sub_23787A134(v43, v44, v45);
  sub_23787A134(v42, v41, v40);
  sub_23787A134(v57, v58, v39);
  sub_23787A134(v46, v59, v60);
  sub_23787A134(v47, v48, v49);
  sub_23787A134(v63, v61, v62);
  sub_23787A134(v64, v66, v65);
  sub_23787A134(v67, v70, v68);
  sub_2378884F8((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
  memcpy(v73, v78, 0x1F0uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v75);
  memcpy(v79, v82, 0x1F0uLL);
  return sub_237888C08((uint64_t)v79);
}

_QWORD *sub_237886FE4()
{
  uint64_t v0;
  _BYTE __dst[274];
  _BYTE v3[288];
  _BYTE v4[8];
  _BYTE v5[274];

  sub_237888344(v0 + 8, (uint64_t)v3);
  sub_237888344((uint64_t)v3, (uint64_t)v4);
  if (sub_2378886F0((uint64_t)v4) == 1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  memcpy(__dst, v5, sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t sub_23788705C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];
  _BYTE v9[288];
  _BYTE v10[288];

  sub_237888344(v1 + 8, (uint64_t)v9);
  sub_237888344((uint64_t)v9, (uint64_t)v10);
  result = sub_2378886F0((uint64_t)v10);
  if ((_DWORD)result != 1)
  {
    v5 = *(_QWORD *)(v1 + 264);
    v6 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
    MEMORY[0x24BDAC7A8](v6);
    v8[2] = a1;
    swift_bridgeObjectRetain();
    v7 = sub_237883AA4(v6, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_23788B060, (uint64_t)v8, v5);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v2)
    {
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 264) = v7;
    }
  }
  return result;
}

uint64_t sub_237887154@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237887168(_QWORD *a1)
{
  return Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.encode(to:)(a1);
}

uint64_t sub_23788717C()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[496];

  memcpy(__dst, v0, sizeof(__dst));
  sub_237A885D4();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_237A88610();
}

uint64_t sub_2378871D0()
{
  const void *v0;
  _BYTE v2[72];
  _BYTE __dst[496];

  memcpy(__dst, v0, sizeof(__dst));
  sub_237A885D4();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_237A88610();
}

unint64_t sub_23788722C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = sub_237A7FE88(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO015ChargeFuelLevelF13ConfigurationV2eeoiySbAG_AGtFZ_0(char *a1, char *a2)
{
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char v148[288];
  _BYTE v149[288];
  _BYTE __dst[288];
  _BYTE v151[288];
  _QWORD __src[36];
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  _BYTE v157[288];
  _BYTE v158[288];
  _BYTE v159[296];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  sub_237888344((uint64_t)(a1 + 8), (uint64_t)v158);
  v145 = *((_QWORD *)a1 + 37);
  v146 = *((_QWORD *)a1 + 38);
  v147 = a1[312];
  v135 = *((_QWORD *)a1 + 40);
  v136 = *((_QWORD *)a1 + 41);
  v137 = a1[336];
  v122 = *((_QWORD *)a1 + 43);
  v123 = *((_QWORD *)a1 + 44);
  v141 = *((_QWORD *)a1 + 46);
  v142 = *((_QWORD *)a1 + 47);
  v124 = a1[360];
  v125 = a1[384];
  v129 = *((_QWORD *)a1 + 49);
  v130 = *((_QWORD *)a1 + 50);
  v131 = a1[408];
  v116 = *((_QWORD *)a1 + 52);
  v117 = *((_QWORD *)a1 + 53);
  v118 = a1[432];
  v110 = *((_QWORD *)a1 + 55);
  v111 = *((_QWORD *)a1 + 56);
  v112 = a1[456];
  v104 = *((_QWORD *)a1 + 58);
  v105 = *((_QWORD *)a1 + 59);
  v106 = a1[480];
  v100 = *((_QWORD *)a1 + 61);
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  sub_237888344((uint64_t)(a2 + 8), (uint64_t)v159);
  v12 = *((_QWORD *)a2 + 37);
  v143 = *((_QWORD *)a2 + 38);
  v144 = a2[312];
  v132 = *((_QWORD *)a2 + 40);
  v133 = *((_QWORD *)a2 + 41);
  v134 = a2[336];
  v119 = *((_QWORD *)a2 + 43);
  v120 = *((_QWORD *)a2 + 44);
  v121 = a2[360];
  v138 = *((_QWORD *)a2 + 46);
  v139 = *((_QWORD *)a2 + 47);
  v140 = a2[384];
  v126 = *((_QWORD *)a2 + 49);
  v127 = *((_QWORD *)a2 + 50);
  v128 = a2[408];
  v113 = *((_QWORD *)a2 + 52);
  v114 = *((_QWORD *)a2 + 53);
  v115 = a2[432];
  v107 = *((_QWORD *)a2 + 55);
  v108 = *((_QWORD *)a2 + 56);
  v109 = a2[456];
  v101 = *((_QWORD *)a2 + 58);
  v102 = *((_QWORD *)a2 + 59);
  v103 = a2[480];
  v99 = *((_QWORD *)a2 + 61);
  LOBYTE(v153) = v4;
  v157[0] = v8;
  v13 = InstrumentDataIdentifier.rawValue.getter();
  v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = 0;
    if ((v17 & 1) == 0)
      return v18 & 1;
  }
  LOBYTE(v153) = v5;
  v157[0] = v9;
  v19 = InstrumentDataIdentifier.rawValue.getter();
  v21 = v20;
  if (v19 == InstrumentDataIdentifier.rawValue.getter() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = 0;
    if ((v23 & 1) == 0)
      return v18 & 1;
  }
  LOBYTE(v153) = v6;
  v157[0] = v10;
  v24 = InstrumentDataIdentifier.rawValue.getter();
  v26 = v25;
  if (v24 == InstrumentDataIdentifier.rawValue.getter() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v28 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = 0;
    if ((v28 & 1) == 0)
      return v18 & 1;
  }
  LOBYTE(v153) = v7;
  v157[0] = v11;
  v29 = InstrumentDataIdentifier.rawValue.getter();
  v31 = v30;
  if (v29 == InstrumentDataIdentifier.rawValue.getter() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v33 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = 0;
  if ((v33 & 1) != 0)
  {
LABEL_17:
    sub_237888344((uint64_t)v158, (uint64_t)v157);
    if (sub_2378886F0((uint64_t)v157) == 1)
    {
      sub_237888344((uint64_t)v159, (uint64_t)&v153);
      if (sub_2378886F0((uint64_t)&v153) == 1)
      {
LABEL_24:
        v153 = v145;
        v154 = v146;
        v155 = v147;
        __src[0] = v12;
        __src[1] = v143;
        LOBYTE(__src[2]) = v144;
        sub_23787A11C(v145, v146, v147);
        sub_23787A11C(v12, v143, v144);
        Theme.ColorID.rawValue.getter();
        v36 = v35;
        v38 = v37;
        Theme.ColorID.rawValue.getter();
        if (v36 == v40 && v38 == v39)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v12, v143, v144);
          sub_23787A134(v145, v146, v147);
        }
        else
        {
          v41 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v12, v143, v144);
          sub_23787A134(v145, v146, v147);
          if ((v41 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v135;
        v154 = v136;
        v155 = v137;
        __src[0] = v132;
        __src[1] = v133;
        LOBYTE(__src[2]) = v134;
        sub_23787A11C(v135, v136, v137);
        sub_23787A11C(v132, v133, v134);
        Theme.ColorID.rawValue.getter();
        v43 = v42;
        v45 = v44;
        Theme.ColorID.rawValue.getter();
        if (v43 == v47 && v45 == v46)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v132, v133, v134);
          sub_23787A134(v135, v136, v137);
        }
        else
        {
          v48 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v132, v133, v134);
          sub_23787A134(v135, v136, v137);
          if ((v48 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v122;
        v154 = v123;
        v155 = v124;
        __src[0] = v119;
        __src[1] = v120;
        LOBYTE(__src[2]) = v121;
        sub_23787A11C(v122, v123, v124);
        sub_23787A11C(v119, v120, v121);
        Theme.ColorID.rawValue.getter();
        v50 = v49;
        v52 = v51;
        Theme.ColorID.rawValue.getter();
        if (v50 == v54 && v52 == v53)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v119, v120, v121);
          sub_23787A134(v122, v123, v124);
          v55 = v131;
          v57 = v129;
          v56 = v130;
          v58 = v128;
          v60 = v126;
          v59 = v127;
          v61 = v125;
        }
        else
        {
          v62 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v119, v120, v121);
          sub_23787A134(v122, v123, v124);
          v55 = v131;
          v57 = v129;
          v56 = v130;
          v58 = v128;
          v60 = v126;
          v59 = v127;
          v61 = v125;
          if ((v62 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v141;
        v154 = v142;
        v155 = v61;
        __src[0] = v138;
        __src[1] = v139;
        LOBYTE(__src[2]) = v140;
        sub_23787A11C(v141, v142, v61);
        sub_23787A11C(v138, v139, v140);
        Theme.ColorID.rawValue.getter();
        v64 = v63;
        v66 = v65;
        Theme.ColorID.rawValue.getter();
        if (v64 == v68 && v66 == v67)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v138, v139, v140);
          sub_23787A134(v141, v142, v61);
        }
        else
        {
          v69 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v138, v139, v140);
          sub_23787A134(v141, v142, v61);
          if ((v69 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v57;
        v154 = v56;
        v155 = v55;
        __src[0] = v60;
        __src[1] = v59;
        LOBYTE(__src[2]) = v58;
        sub_23787A11C(v57, v56, v55);
        sub_23787A11C(v60, v59, v58);
        Theme.ColorID.rawValue.getter();
        v71 = v70;
        v73 = v72;
        Theme.ColorID.rawValue.getter();
        if (v71 == v75 && v73 == v74)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v60, v59, v58);
          sub_23787A134(v57, v56, v55);
        }
        else
        {
          v76 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v60, v59, v58);
          sub_23787A134(v57, v56, v55);
          if ((v76 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v116;
        v154 = v117;
        v155 = v118;
        __src[0] = v113;
        __src[1] = v114;
        LOBYTE(__src[2]) = v115;
        sub_23787A11C(v116, v117, v118);
        sub_23787A11C(v113, v114, v115);
        Theme.ColorID.rawValue.getter();
        v78 = v77;
        v80 = v79;
        Theme.ColorID.rawValue.getter();
        if (v78 == v82 && v80 == v81)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v113, v114, v115);
          sub_23787A134(v116, v117, v118);
        }
        else
        {
          v83 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v113, v114, v115);
          sub_23787A134(v116, v117, v118);
          if ((v83 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v110;
        v154 = v111;
        v155 = v112;
        __src[0] = v107;
        __src[1] = v108;
        LOBYTE(__src[2]) = v109;
        sub_23787A11C(v110, v111, v112);
        sub_23787A11C(v107, v108, v109);
        Theme.ColorID.rawValue.getter();
        v85 = v84;
        v87 = v86;
        Theme.ColorID.rawValue.getter();
        if (v85 == v89 && v87 == v88)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v107, v108, v109);
          sub_23787A134(v110, v111, v112);
        }
        else
        {
          v90 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787A134(v107, v108, v109);
          sub_23787A134(v110, v111, v112);
          if ((v90 & 1) == 0)
            goto LABEL_57;
        }
        v153 = v104;
        v154 = v105;
        v155 = v106;
        __src[0] = v101;
        __src[1] = v102;
        LOBYTE(__src[2]) = v103;
        sub_23787A11C(v104, v105, v106);
        sub_23787A11C(v101, v102, v103);
        Theme.ColorID.rawValue.getter();
        v92 = v91;
        v94 = v93;
        Theme.ColorID.rawValue.getter();
        if (v92 == v96 && v94 == v95)
        {
          swift_bridgeObjectRelease_n();
          sub_23787A134(v101, v102, v103);
          sub_23787A134(v104, v105, v106);
LABEL_56:
          v18 = sub_2379B9100(v100, v99);
          return v18 & 1;
        }
        v97 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23787A134(v101, v102, v103);
        sub_23787A134(v104, v105, v106);
        if ((v97 & 1) != 0)
          goto LABEL_56;
LABEL_57:
        v18 = 0;
        return v18 & 1;
      }
    }
    else
    {
      sub_237888344((uint64_t)v158, (uint64_t)__src);
      sub_237888344((uint64_t)v159, (uint64_t)&v153);
      if (sub_2378886F0((uint64_t)&v153) != 1)
      {
        sub_237888344((uint64_t)v159, (uint64_t)v149);
        memcpy(v148, v149, 0x11AuLL);
        sub_237888344((uint64_t)v158, (uint64_t)__dst);
        sub_2378884F8((uint64_t)v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_23788838C);
        sub_237888720((uint64_t)__dst);
        v34 = _s14CarPlayAssetUI10InstrumentV31RemainingRangeTextConfigurationV2eeoiySbAE_AEtFZ_0((char *)__src, v148);
        memcpy(v151, __src, 0x11AuLL);
        sub_23788AF30((uint64_t)v151);
        sub_2378884F8((uint64_t)v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_237888584);
        if (!v34)
          goto LABEL_57;
        goto LABEL_24;
      }
      memcpy(__dst, __src, 0x11AuLL);
      sub_237888344((uint64_t)v158, (uint64_t)v151);
      sub_237888720((uint64_t)v151);
      sub_237888720((uint64_t)v151);
      sub_23788AF30((uint64_t)__dst);
    }
    sub_237888344((uint64_t)v158, (uint64_t)&v153);
    sub_237888344((uint64_t)v159, (uint64_t)&v156);
    sub_2378884F8((uint64_t)v159, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_23788838C);
    sub_23788AD88((uint64_t)&v153);
    goto LABEL_57;
  }
  return v18 & 1;
}

uint64_t _s14CarPlayAssetUI25ChargeFuelDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v4 & 1) == 0)
      return v5 & 1;
  }
  v6 = InstrumentDataIdentifier.rawValue.getter();
  v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v10 & 1) == 0)
      return v5 & 1;
  }
  v11 = InstrumentDataIdentifier.rawValue.getter();
  v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v15 & 1) == 0)
      return v5 & 1;
  }
  v16 = InstrumentDataIdentifier.rawValue.getter();
  v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_237888110()
{
  unint64_t result;

  result = qword_25681ED40;
  if (!qword_25681ED40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B4F8, &type metadata for ChargeFuelDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681ED40);
  }
  return result;
}

unint64_t sub_237888154()
{
  unint64_t result;

  result = qword_25681ED48;
  if (!qword_25681ED48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentDataIdentifier, &type metadata for InstrumentDataIdentifier);
    atomic_store(result, (unint64_t *)&qword_25681ED48);
  }
  return result;
}

unint64_t sub_237888198()
{
  unint64_t result;

  result = qword_25681ED58;
  if (!qword_25681ED58)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentDataIdentifier, &type metadata for InstrumentDataIdentifier);
    atomic_store(result, (unint64_t *)&qword_25681ED58);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI29RemainingRangeDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0;
    if ((v5 & 1) == 0)
      return v6 & 1;
  }
  v7 = InstrumentDataIdentifier.rawValue.getter();
  v9 = v8;
  if (v7 == InstrumentDataIdentifier.rawValue.getter() && v9 == v10)
    v6 = 1;
  else
    v6 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_237888300()
{
  unint64_t result;

  result = qword_25681ED68;
  if (!qword_25681ED68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B4A8, &type metadata for RemainingRangeDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681ED68);
  }
  return result;
}

uint64_t sub_237888344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23788838C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  id v28;
  uint64_t result;

  if (a4)
  {
    v28 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787A11C(a12, a13, a14);
    sub_23787A11C(a15, a16, a17);
    sub_23787A11C(a18, a19, a20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2378884CC(a26, a27, a28);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378884CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t result;

  if (a3)
  {
    v3 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378884F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int128 v4;
  __int128 v5;
  __int16 v6;

  v6 = *(_WORD *)(a1 + 280);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    *(_QWORD *)(a1 + 272),
    v6);
  return a1;
}

uint64_t sub_237888584(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  uint64_t result;

  if (a4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(a12, a13, a14);
    sub_23787A134(a15, a16, a17);
    sub_23787A134(a18, a19, a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2378886C4(a26, a27, a28);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2378886C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;

  if (a3)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2378886F0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_237888708(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_2379C541C(a1, a2, *(_QWORD **)(v3 + 16), a3);
}

uint64_t sub_237888720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 208);
  v15 = *(_QWORD *)(a1 + 200);
  v13 = *(void **)(a1 + 216);
  v4 = *(_BYTE *)(a1 + 104);
  v5 = *(_BYTE *)(a1 + 128);
  v6 = *(_BYTE *)(a1 + 152);
  v7 = *(id *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v2, v3, v4);
  sub_23787A11C(v10, v9, v5);
  sub_23787A11C(v12, v11, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378884CC(v15, v14, v13);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_237888854()
{
  unint64_t result;

  result = qword_25681ED88;
  if (!qword_25681ED88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B458, &_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681ED88);
  }
  return result;
}

unint64_t sub_237888898()
{
  unint64_t result;

  result = qword_25681ED90;
  if (!qword_25681ED90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.RemainingRangeTextConfiguration, &type metadata for Instrument.RemainingRangeTextConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681ED90);
  }
  return result;
}

unint64_t sub_2378888DC()
{
  unint64_t result;

  result = qword_25681EDA8;
  if (!qword_25681EDA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset, &type metadata for ImageAsset);
    atomic_store(result, (unint64_t *)&qword_25681EDA8);
  }
  return result;
}

double sub_237888920(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 266) = 0u;
  return result;
}

unint64_t sub_237888954()
{
  unint64_t result;

  result = qword_25681EDB8;
  if (!qword_25681EDB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.RemainingRangeTextConfiguration, &type metadata for Instrument.RemainingRangeTextConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681EDB8);
  }
  return result;
}

uint64_t sub_237888998(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681ED98);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237888A0C()
{
  unint64_t result;

  result = qword_25681EDC8;
  if (!qword_25681EDC8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageAsset, &type metadata for ImageAsset);
    atomic_store(result, (unint64_t *)&qword_25681EDC8);
  }
  return result;
}

uint64_t sub_237888A50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 + 296);
  v2 = *(_QWORD *)(a1 + 304);
  v5 = *(_QWORD *)(a1 + 320);
  v4 = *(_QWORD *)(a1 + 328);
  v12 = *(_QWORD *)(a1 + 352);
  v13 = *(_QWORD *)(a1 + 344);
  v15 = *(_QWORD *)(a1 + 376);
  v16 = *(_QWORD *)(a1 + 368);
  v18 = *(_QWORD *)(a1 + 400);
  v19 = *(_QWORD *)(a1 + 392);
  v21 = *(_QWORD *)(a1 + 424);
  v22 = *(_QWORD *)(a1 + 416);
  v23 = *(_QWORD *)(a1 + 448);
  v24 = *(_QWORD *)(a1 + 440);
  v25 = *(_QWORD *)(a1 + 472);
  v26 = *(_QWORD *)(a1 + 464);
  v6 = *(_BYTE *)(a1 + 312);
  v7 = *(_BYTE *)(a1 + 336);
  v8 = *(_BYTE *)(a1 + 360);
  v9 = *(_BYTE *)(a1 + 384);
  v10 = *(_BYTE *)(a1 + 408);
  v14 = *(_BYTE *)(a1 + 432);
  v17 = *(_BYTE *)(a1 + 456);
  v20 = *(_BYTE *)(a1 + 480);
  sub_23788838C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_OWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(void **)(a1 + 224));
  sub_23787A11C(v3, v2, v6);
  sub_23787A11C(v5, v4, v7);
  sub_23787A11C(v13, v12, v8);
  sub_23787A11C(v16, v15, v9);
  sub_23787A11C(v19, v18, v10);
  sub_23787A11C(v22, v21, v14);
  sub_23787A11C(v24, v23, v17);
  sub_23787A11C(v26, v25, v20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237888C08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 + 296);
  v2 = *(_QWORD *)(a1 + 304);
  v5 = *(_QWORD *)(a1 + 320);
  v4 = *(_QWORD *)(a1 + 328);
  v12 = *(_QWORD *)(a1 + 352);
  v13 = *(_QWORD *)(a1 + 344);
  v15 = *(_QWORD *)(a1 + 376);
  v16 = *(_QWORD *)(a1 + 368);
  v18 = *(_QWORD *)(a1 + 400);
  v19 = *(_QWORD *)(a1 + 392);
  v21 = *(_QWORD *)(a1 + 424);
  v22 = *(_QWORD *)(a1 + 416);
  v23 = *(_QWORD *)(a1 + 448);
  v24 = *(_QWORD *)(a1 + 440);
  v25 = *(_QWORD *)(a1 + 472);
  v26 = *(_QWORD *)(a1 + 464);
  v6 = *(_BYTE *)(a1 + 312);
  v7 = *(_BYTE *)(a1 + 336);
  v8 = *(_BYTE *)(a1 + 360);
  v9 = *(_BYTE *)(a1 + 384);
  v10 = *(_BYTE *)(a1 + 408);
  v14 = *(_BYTE *)(a1 + 432);
  v17 = *(_BYTE *)(a1 + 456);
  v20 = *(_BYTE *)(a1 + 480);
  sub_237888584(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_OWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(void **)(a1 + 224));
  sub_23787A134(v3, v2, v6);
  sub_23787A134(v5, v4, v7);
  sub_23787A134(v13, v12, v8);
  sub_23787A134(v16, v15, v9);
  sub_23787A134(v19, v18, v10);
  sub_23787A134(v22, v21, v14);
  sub_23787A134(v24, v23, v17);
  sub_23787A134(v26, v25, v20);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_237888DCC()
{
  unint64_t result;

  result = qword_25681EDD0;
  if (!qword_25681EDD0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorID, &type metadata for Theme.ColorID);
    atomic_store(result, (unint64_t *)&qword_25681EDD0);
  }
  return result;
}

unint64_t sub_237888E14()
{
  unint64_t result;

  result = qword_25681EE08;
  if (!qword_25681EE08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ChargeFuelDataIdentifiers, &type metadata for ChargeFuelDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_25681EE08);
  }
  return result;
}

unint64_t sub_237888E5C()
{
  unint64_t result;

  result = qword_25681EE10;
  if (!qword_25681EE10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for RemainingRangeDataIdentifiers, &type metadata for RemainingRangeDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_25681EE10);
  }
  return result;
}

unint64_t sub_237888EA4()
{
  unint64_t result;

  result = qword_25681EE18;
  if (!qword_25681EE18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration, &type metadata for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681EE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultRedactedColorID()
{
  return &type metadata for DefaultRedactedColorID;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ChargeFuelDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xC9 && a1[4])
    return (*(_DWORD *)a1 + 201);
  v3 = *a1;
  v4 = v3 >= 0x38;
  v5 = v3 - 56;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ChargeFuelDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC8)
  {
    *(_DWORD *)result = a2 - 201;
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 55;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChargeFuelDataIdentifiers()
{
  return &type metadata for ChargeFuelDataIdentifiers;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RemainingRangeDataIdentifiers(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC9)
    goto LABEL_17;
  if (a2 + 65335 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65335 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65335;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65335;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65335;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 0x38;
  v8 = v6 - 56;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemainingRangeDataIdentifiers(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65335 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65335 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC8)
    return ((uint64_t (*)(void))((char *)&loc_237889084 + 4 * byte_237A8AEA7[v4]))();
  *a1 = a2 - 201;
  return ((uint64_t (*)(void))((char *)sub_2378890B8 + 4 * byte_237A8AEA2[v4]))();
}

uint64_t sub_2378890B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378890C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2378890C8);
  return result;
}

uint64_t sub_2378890D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2378890DCLL);
  *(_BYTE *)result = a2 + 55;
  return result;
}

uint64_t sub_2378890E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378890E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemainingRangeDataIdentifiers()
{
  return &type metadata for RemainingRangeDataIdentifiers;
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwxx(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
    sub_23787A134(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
    sub_23787A134(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_BYTE *)(a1 + 160));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = *(void **)(a1 + 224);
    if (v3)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_23787A134(*(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_BYTE *)(a1 + 312));
  sub_23787A134(*(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_BYTE *)(a1 + 336));
  sub_23787A134(*(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_BYTE *)(a1 + 360));
  sub_23787A134(*(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_BYTE *)(a1 + 384));
  sub_23787A134(*(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_BYTE *)(a1 + 408));
  sub_23787A134(*(_QWORD *)(a1 + 416), *(_QWORD *)(a1 + 424), *(_BYTE *)(a1 + 432));
  sub_23787A134(*(_QWORD *)(a1 + 440), *(_QWORD *)(a1 + 448), *(_BYTE *)(a1 + 456));
  sub_23787A134(*(_QWORD *)(a1 + 464), *(_QWORD *)(a1 + 472), *(_BYTE *)(a1 + 480));
  return swift_bridgeObjectRelease();
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = (void *)(a1 + 8);
  v5 = *(void **)(a2 + 32);
  if (v5)
  {
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v9 = *(_QWORD *)(a2 + 104);
    v10 = *(_BYTE *)(a2 + 112);
    v11 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787A11C(v8, v9, v10);
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v9;
    *(_BYTE *)(a1 + 112) = v10;
    v12 = *(_QWORD *)(a2 + 120);
    v13 = *(_QWORD *)(a2 + 128);
    LOBYTE(v7) = *(_BYTE *)(a2 + 136);
    sub_23787A11C(v12, v13, v7);
    *(_QWORD *)(a1 + 120) = v12;
    *(_QWORD *)(a1 + 128) = v13;
    *(_BYTE *)(a1 + 136) = v7;
    v14 = *(_QWORD *)(a2 + 144);
    v15 = *(_QWORD *)(a2 + 152);
    LOBYTE(v7) = *(_BYTE *)(a2 + 160);
    sub_23787A11C(v14, v15, v7);
    *(_QWORD *)(a1 + 144) = v14;
    *(_QWORD *)(a1 + 152) = v15;
    *(_BYTE *)(a1 + 160) = v7;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    v16 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v16;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v17 = *(void **)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v17;
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
      v18 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v18;
      v19 = v17;
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v20;
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    }
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
    *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
    *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v4, (const void *)(a2 + 8), 0x11AuLL);
  }
  v21 = *(_QWORD *)(a2 + 296);
  v22 = *(_QWORD *)(a2 + 304);
  v23 = *(_BYTE *)(a2 + 312);
  sub_23787A11C(v21, v22, v23);
  *(_QWORD *)(a1 + 296) = v21;
  *(_QWORD *)(a1 + 304) = v22;
  *(_BYTE *)(a1 + 312) = v23;
  v24 = *(_QWORD *)(a2 + 320);
  v25 = *(_QWORD *)(a2 + 328);
  v26 = *(_BYTE *)(a2 + 336);
  sub_23787A11C(v24, v25, v26);
  *(_QWORD *)(a1 + 320) = v24;
  *(_QWORD *)(a1 + 328) = v25;
  *(_BYTE *)(a1 + 336) = v26;
  v27 = *(_QWORD *)(a2 + 344);
  v28 = *(_QWORD *)(a2 + 352);
  v29 = *(_BYTE *)(a2 + 360);
  sub_23787A11C(v27, v28, v29);
  *(_QWORD *)(a1 + 344) = v27;
  *(_QWORD *)(a1 + 352) = v28;
  *(_BYTE *)(a1 + 360) = v29;
  v30 = *(_QWORD *)(a2 + 368);
  v31 = *(_QWORD *)(a2 + 376);
  v32 = *(_BYTE *)(a2 + 384);
  sub_23787A11C(v30, v31, v32);
  *(_QWORD *)(a1 + 368) = v30;
  *(_QWORD *)(a1 + 376) = v31;
  *(_BYTE *)(a1 + 384) = v32;
  v33 = *(_QWORD *)(a2 + 392);
  v34 = *(_QWORD *)(a2 + 400);
  v35 = *(_BYTE *)(a2 + 408);
  sub_23787A11C(v33, v34, v35);
  *(_QWORD *)(a1 + 392) = v33;
  *(_QWORD *)(a1 + 400) = v34;
  *(_BYTE *)(a1 + 408) = v35;
  v36 = *(_QWORD *)(a2 + 416);
  v37 = *(_QWORD *)(a2 + 424);
  v38 = *(_BYTE *)(a2 + 432);
  sub_23787A11C(v36, v37, v38);
  *(_QWORD *)(a1 + 416) = v36;
  *(_QWORD *)(a1 + 424) = v37;
  *(_BYTE *)(a1 + 432) = v38;
  v39 = *(_QWORD *)(a2 + 440);
  v40 = *(_QWORD *)(a2 + 448);
  v41 = *(_BYTE *)(a2 + 456);
  sub_23787A11C(v39, v40, v41);
  *(_QWORD *)(a1 + 440) = v39;
  *(_QWORD *)(a1 + 448) = v40;
  *(_BYTE *)(a1 + 456) = v41;
  v42 = *(_QWORD *)(a2 + 464);
  v43 = *(_QWORD *)(a2 + 472);
  v44 = *(_BYTE *)(a2 + 480);
  sub_23787A11C(v42, v43, v44);
  *(_QWORD *)(a1 + 464) = v42;
  *(_QWORD *)(a1 + 472) = v43;
  *(_BYTE *)(a1 + 480) = v44;
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _OWORD *v28;
  __int128 *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (v6)
  {
    if (v7)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v8 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v8;
      v9 = v8;

      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 96);
      v11 = *(_QWORD *)(a2 + 104);
      v12 = *(_BYTE *)(a2 + 112);
      sub_23787A11C(v10, v11, v12);
      v13 = *(_QWORD *)(a1 + 96);
      v14 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 96) = v10;
      *(_QWORD *)(a1 + 104) = v11;
      v15 = *(_BYTE *)(a1 + 112);
      *(_BYTE *)(a1 + 112) = v12;
      sub_23787A134(v13, v14, v15);
      v16 = *(_QWORD *)(a2 + 120);
      v17 = *(_QWORD *)(a2 + 128);
      v18 = *(_BYTE *)(a2 + 136);
      sub_23787A11C(v16, v17, v18);
      v19 = *(_QWORD *)(a1 + 120);
      v20 = *(_QWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 120) = v16;
      *(_QWORD *)(a1 + 128) = v17;
      v21 = *(_BYTE *)(a1 + 136);
      *(_BYTE *)(a1 + 136) = v18;
      sub_23787A134(v19, v20, v21);
      v22 = *(_QWORD *)(a2 + 144);
      v23 = *(_QWORD *)(a2 + 152);
      v24 = *(_BYTE *)(a2 + 160);
      sub_23787A11C(v22, v23, v24);
      v25 = *(_QWORD *)(a1 + 144);
      v26 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 144) = v22;
      *(_QWORD *)(a1 + 152) = v23;
      v27 = *(_BYTE *)(a1 + 160);
      *(_BYTE *)(a1 + 160) = v24;
      sub_23787A134(v25, v26, v27);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = (_OWORD *)(a1 + 208);
      v29 = (__int128 *)(a2 + 208);
      v30 = *(void **)(a1 + 224);
      v31 = *(_QWORD *)(a2 + 224);
      if (v30)
      {
        if (v31)
        {
          *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
          v32 = *(void **)(a2 + 224);
          *(_QWORD *)(a1 + 224) = v32;
          v33 = v32;

          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
          *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_237889B98(a1 + 208);
          v51 = *(_OWORD *)(a2 + 224);
          v50 = *(_OWORD *)(a2 + 240);
          v52 = *v29;
          *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 224) = v51;
          *(_OWORD *)(a1 + 240) = v50;
          *v28 = v52;
        }
      }
      else if (v31)
      {
        *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        v48 = *(void **)(a2 + 224);
        *(_QWORD *)(a1 + 224) = v48;
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
        *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        v49 = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        v57 = *v29;
        v58 = *(_OWORD *)(a2 + 224);
        v59 = *(_OWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 224) = v58;
        *(_OWORD *)(a1 + 240) = v59;
        *v28 = v57;
      }
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      v60 = *(_DWORD *)(a2 + 284);
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_DWORD *)(a1 + 284) = v60;
      *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
      goto LABEL_18;
    }
    sub_237889BCC(a1 + 8);
LABEL_10:
    memcpy(v4, v5, 0x11AuLL);
    goto LABEL_18;
  }
  if (!v7)
    goto LABEL_10;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v34 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v34;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v35 = *(_QWORD *)(a2 + 96);
  v36 = *(_QWORD *)(a2 + 104);
  v37 = *(_BYTE *)(a2 + 112);
  v38 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v35, v36, v37);
  *(_QWORD *)(a1 + 96) = v35;
  *(_QWORD *)(a1 + 104) = v36;
  *(_BYTE *)(a1 + 112) = v37;
  v39 = *(_QWORD *)(a2 + 120);
  v40 = *(_QWORD *)(a2 + 128);
  v41 = *(_BYTE *)(a2 + 136);
  sub_23787A11C(v39, v40, v41);
  *(_QWORD *)(a1 + 120) = v39;
  *(_QWORD *)(a1 + 128) = v40;
  *(_BYTE *)(a1 + 136) = v41;
  v42 = *(_QWORD *)(a2 + 144);
  v43 = *(_QWORD *)(a2 + 152);
  v44 = *(_BYTE *)(a2 + 160);
  sub_23787A11C(v42, v43, v44);
  *(_QWORD *)(a1 + 144) = v42;
  *(_QWORD *)(a1 + 152) = v43;
  *(_BYTE *)(a1 + 160) = v44;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v45 = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v46 = *(void **)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v46;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    v47 = v46;
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *(_OWORD *)(a2 + 208);
    v54 = *(_OWORD *)(a2 + 224);
    v55 = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v54;
    *(_OWORD *)(a1 + 240) = v55;
    *(_OWORD *)(a1 + 208) = v53;
  }
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  v56 = *(_DWORD *)(a2 + 284);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_DWORD *)(a1 + 284) = v56;
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  swift_bridgeObjectRetain();
LABEL_18:
  v61 = *(_QWORD *)(a2 + 296);
  v62 = *(_QWORD *)(a2 + 304);
  v63 = *(_BYTE *)(a2 + 312);
  sub_23787A11C(v61, v62, v63);
  v64 = *(_QWORD *)(a1 + 296);
  v65 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 296) = v61;
  *(_QWORD *)(a1 + 304) = v62;
  v66 = *(_BYTE *)(a1 + 312);
  *(_BYTE *)(a1 + 312) = v63;
  sub_23787A134(v64, v65, v66);
  v67 = *(_QWORD *)(a2 + 320);
  v68 = *(_QWORD *)(a2 + 328);
  v69 = *(_BYTE *)(a2 + 336);
  sub_23787A11C(v67, v68, v69);
  v70 = *(_QWORD *)(a1 + 320);
  v71 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 320) = v67;
  *(_QWORD *)(a1 + 328) = v68;
  v72 = *(_BYTE *)(a1 + 336);
  *(_BYTE *)(a1 + 336) = v69;
  sub_23787A134(v70, v71, v72);
  v73 = *(_QWORD *)(a2 + 344);
  v74 = *(_QWORD *)(a2 + 352);
  v75 = *(_BYTE *)(a2 + 360);
  sub_23787A11C(v73, v74, v75);
  v76 = *(_QWORD *)(a1 + 344);
  v77 = *(_QWORD *)(a1 + 352);
  *(_QWORD *)(a1 + 344) = v73;
  *(_QWORD *)(a1 + 352) = v74;
  v78 = *(_BYTE *)(a1 + 360);
  *(_BYTE *)(a1 + 360) = v75;
  sub_23787A134(v76, v77, v78);
  v79 = *(_QWORD *)(a2 + 368);
  v80 = *(_QWORD *)(a2 + 376);
  v81 = *(_BYTE *)(a2 + 384);
  sub_23787A11C(v79, v80, v81);
  v82 = *(_QWORD *)(a1 + 368);
  v83 = *(_QWORD *)(a1 + 376);
  *(_QWORD *)(a1 + 368) = v79;
  *(_QWORD *)(a1 + 376) = v80;
  v84 = *(_BYTE *)(a1 + 384);
  *(_BYTE *)(a1 + 384) = v81;
  sub_23787A134(v82, v83, v84);
  v85 = *(_QWORD *)(a2 + 392);
  v86 = *(_QWORD *)(a2 + 400);
  v87 = *(_BYTE *)(a2 + 408);
  sub_23787A11C(v85, v86, v87);
  v88 = *(_QWORD *)(a1 + 392);
  v89 = *(_QWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 392) = v85;
  *(_QWORD *)(a1 + 400) = v86;
  v90 = *(_BYTE *)(a1 + 408);
  *(_BYTE *)(a1 + 408) = v87;
  sub_23787A134(v88, v89, v90);
  v91 = *(_QWORD *)(a2 + 416);
  v92 = *(_QWORD *)(a2 + 424);
  v93 = *(_BYTE *)(a2 + 432);
  sub_23787A11C(v91, v92, v93);
  v94 = *(_QWORD *)(a1 + 416);
  v95 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 416) = v91;
  *(_QWORD *)(a1 + 424) = v92;
  v96 = *(_BYTE *)(a1 + 432);
  *(_BYTE *)(a1 + 432) = v93;
  sub_23787A134(v94, v95, v96);
  v97 = *(_QWORD *)(a2 + 440);
  v98 = *(_QWORD *)(a2 + 448);
  v99 = *(_BYTE *)(a2 + 456);
  sub_23787A11C(v97, v98, v99);
  v100 = *(_QWORD *)(a1 + 440);
  v101 = *(_QWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 440) = v97;
  *(_QWORD *)(a1 + 448) = v98;
  v102 = *(_BYTE *)(a1 + 456);
  *(_BYTE *)(a1 + 456) = v99;
  sub_23787A134(v100, v101, v102);
  v103 = *(_QWORD *)(a2 + 464);
  v104 = *(_QWORD *)(a2 + 472);
  v105 = *(_BYTE *)(a2 + 480);
  sub_23787A11C(v103, v104, v105);
  v106 = *(_QWORD *)(a1 + 464);
  v107 = *(_QWORD *)(a1 + 472);
  *(_QWORD *)(a1 + 464) = v103;
  *(_QWORD *)(a1 + 472) = v104;
  v108 = *(_BYTE *)(a1 + 480);
  *(_BYTE *)(a1 + 480) = v105;
  sub_23787A134(v106, v107, v108);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237889B98(uint64_t a1)
{
  destroy for InstrumentFont(a1);
  return a1;
}

uint64_t sub_237889BCC(uint64_t a1)
{
  _s31RemainingRangeTextConfigurationVwxx(a1);
  return a1;
}

void *__swift_memcpy496_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F0uLL);
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  void *v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  v4 = (_OWORD *)(a1 + 296);
  v5 = (_OWORD *)(a2 + 296);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = (void *)(a1 + 8);
  v7 = (const void *)(a2 + 8);
  v8 = *(void **)(a1 + 32);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 32);
    if (v9)
    {
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v9;

      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
      v10 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRelease();
      v11 = *(_BYTE *)(a2 + 112);
      v12 = *(_QWORD *)(a1 + 96);
      v13 = *(_QWORD *)(a1 + 104);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      v14 = *(_BYTE *)(a1 + 112);
      *(_BYTE *)(a1 + 112) = v11;
      sub_23787A134(v12, v13, v14);
      v15 = *(_BYTE *)(a2 + 136);
      v16 = *(_QWORD *)(a1 + 120);
      v17 = *(_QWORD *)(a1 + 128);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      v18 = *(_BYTE *)(a1 + 136);
      *(_BYTE *)(a1 + 136) = v15;
      sub_23787A134(v16, v17, v18);
      v19 = *(_BYTE *)(a2 + 160);
      v20 = *(_QWORD *)(a1 + 144);
      v21 = *(_QWORD *)(a1 + 152);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      v22 = *(_BYTE *)(a1 + 160);
      *(_BYTE *)(a1 + 160) = v19;
      sub_23787A134(v20, v21, v22);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      v23 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v23;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRelease();
      v24 = *(void **)(a1 + 224);
      if (v24)
      {
        v25 = *(_QWORD *)(a2 + 224);
        if (v25)
        {
          *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
          *(_QWORD *)(a1 + 224) = v25;

          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
          *(_BYTE *)(a1 + 241) = *(_BYTE *)(a2 + 241);
          v26 = *(_QWORD *)(a2 + 256);
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          *(_QWORD *)(a1 + 256) = v26;
          swift_bridgeObjectRelease();
LABEL_10:
          *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
          *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
          *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
          *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
          goto LABEL_11;
        }
        sub_237889B98(a1 + 208);
      }
      v27 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v27;
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      goto LABEL_10;
    }
    sub_237889BCC(a1 + 8);
  }
  memcpy(v6, v7, 0x11AuLL);
LABEL_11:
  v28 = *(_BYTE *)(a2 + 312);
  v29 = *(_QWORD *)(a1 + 296);
  v30 = *(_QWORD *)(a1 + 304);
  *v4 = *v5;
  v31 = *(_BYTE *)(a1 + 312);
  *(_BYTE *)(a1 + 312) = v28;
  sub_23787A134(v29, v30, v31);
  v32 = *(_BYTE *)(a2 + 336);
  v33 = *(_QWORD *)(a1 + 320);
  v34 = *(_QWORD *)(a1 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  v35 = *(_BYTE *)(a1 + 336);
  *(_BYTE *)(a1 + 336) = v32;
  sub_23787A134(v33, v34, v35);
  v36 = *(_BYTE *)(a2 + 360);
  v37 = *(_QWORD *)(a1 + 344);
  v38 = *(_QWORD *)(a1 + 352);
  v4[3] = v5[3];
  v39 = *(_BYTE *)(a1 + 360);
  *(_BYTE *)(a1 + 360) = v36;
  sub_23787A134(v37, v38, v39);
  v40 = *(_BYTE *)(a2 + 384);
  v41 = *(_QWORD *)(a1 + 368);
  v42 = *(_QWORD *)(a1 + 376);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  v43 = *(_BYTE *)(a1 + 384);
  *(_BYTE *)(a1 + 384) = v40;
  sub_23787A134(v41, v42, v43);
  v44 = *(_BYTE *)(a2 + 408);
  v45 = *(_QWORD *)(a1 + 392);
  v46 = *(_QWORD *)(a1 + 400);
  v4[6] = v5[6];
  v47 = *(_BYTE *)(a1 + 408);
  *(_BYTE *)(a1 + 408) = v44;
  sub_23787A134(v45, v46, v47);
  v48 = *(_BYTE *)(a2 + 432);
  v49 = *(_QWORD *)(a1 + 416);
  v50 = *(_QWORD *)(a1 + 424);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  v51 = *(_BYTE *)(a1 + 432);
  *(_BYTE *)(a1 + 432) = v48;
  sub_23787A134(v49, v50, v51);
  v52 = *(_BYTE *)(a2 + 456);
  v53 = *(_QWORD *)(a1 + 440);
  v54 = *(_QWORD *)(a1 + 448);
  v4[9] = v5[9];
  v55 = *(_BYTE *)(a1 + 456);
  *(_BYTE *)(a1 + 456) = v52;
  sub_23787A134(v53, v54, v55);
  v56 = *(_BYTE *)(a2 + 480);
  v57 = *(_QWORD *)(a1 + 464);
  v58 = *(_QWORD *)(a1 + 472);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  v59 = *(_BYTE *)(a1 + 480);
  *(_BYTE *)(a1 + 480) = v56;
  sub_23787A134(v57, v58, v59);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 496))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 488);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 488) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 496) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 488) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 496) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration;
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s33ChargeFuelLevelGaugeConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_23788A0FC + 4 * byte_237A8AEB1[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_23788A130 + 4 * byte_237A8AEAC[v4]))();
}

uint64_t sub_23788A130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23788A140);
  return result;
}

uint64_t sub_23788A14C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23788A154);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_23788A158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysOMa()
{
  return &_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysON;
}

uint64_t storeEnumTagSinglePayload for RemainingRangeDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23788A1C8 + 4 * byte_237A8AEBB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23788A1FC + 4 * byte_237A8AEB6[v4]))();
}

uint64_t sub_23788A1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23788A20CLL);
  return result;
}

uint64_t sub_23788A218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23788A220);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23788A224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemainingRangeDataIdentifiers.CodingKeys()
{
  return &type metadata for RemainingRangeDataIdentifiers.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ChargeFuelDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23788A294 + 4 * byte_237A8AEC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23788A2C8 + 4 * byte_237A8AEC0[v4]))();
}

uint64_t sub_23788A2C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A2D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23788A2D8);
  return result;
}

uint64_t sub_23788A2E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23788A2ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23788A2F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23788A2F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChargeFuelDataIdentifiers.CodingKeys()
{
  return &type metadata for ChargeFuelDataIdentifiers.CodingKeys;
}

unint64_t sub_23788A318()
{
  unint64_t result;

  result = qword_25681EE20;
  if (!qword_25681EE20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B2C0, &type metadata for ChargeFuelDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE20);
  }
  return result;
}

unint64_t sub_23788A360()
{
  unint64_t result;

  result = qword_25681EE28;
  if (!qword_25681EE28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B378, &type metadata for RemainingRangeDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE28);
  }
  return result;
}

unint64_t sub_23788A3A8()
{
  unint64_t result;

  result = qword_25681EE30;
  if (!qword_25681EE30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B430, &_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EE30);
  }
  return result;
}

unint64_t sub_23788A3F0()
{
  unint64_t result;

  result = qword_25681EE38;
  if (!qword_25681EE38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B3A0, &_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EE38);
  }
  return result;
}

unint64_t sub_23788A438()
{
  unint64_t result;

  result = qword_25681EE40;
  if (!qword_25681EE40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B3C8, &_s33ChargeFuelLevelGaugeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681EE40);
  }
  return result;
}

unint64_t sub_23788A480()
{
  unint64_t result;

  result = qword_25681EE48;
  if (!qword_25681EE48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B2E8, &type metadata for RemainingRangeDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE48);
  }
  return result;
}

unint64_t sub_23788A4C8()
{
  unint64_t result;

  result = qword_25681EE50;
  if (!qword_25681EE50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B310, &type metadata for RemainingRangeDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE50);
  }
  return result;
}

unint64_t sub_23788A510()
{
  unint64_t result;

  result = qword_25681EE58;
  if (!qword_25681EE58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B230, &type metadata for ChargeFuelDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE58);
  }
  return result;
}

unint64_t sub_23788A558()
{
  unint64_t result;

  result = qword_25681EE60;
  if (!qword_25681EE60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8B258, &type metadata for ChargeFuelDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE60);
  }
  return result;
}

uint64_t sub_23788A59C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000237AAF4D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000237AAF4F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000237AAF510 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AAF530)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23788A734(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AAF550 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAF570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23788A820(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000237AAF4D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000237AAF4F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000237AAF510 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AAF530 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000237AAF590 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEF4449726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xEC0000004449726FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6576654C776F6CLL && a2 == 0xEF4449726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAF5B0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AAF5D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000237AAF5F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000237AAF610 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000237AAF640 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AAF660)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_23788AD88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 296);
  v20 = *(_QWORD *)(a1 + 288);
  v3 = *(_QWORD *)(a1 + 304);
  v4 = *(void **)(a1 + 312);
  v5 = *(_QWORD *)(a1 + 320);
  v6 = *(_QWORD *)(a1 + 328);
  v7 = *(_QWORD *)(a1 + 336);
  v8 = *(_QWORD *)(a1 + 344);
  v18 = *(_OWORD *)(a1 + 368);
  v19 = *(_OWORD *)(a1 + 352);
  v16 = *(_OWORD *)(a1 + 400);
  v17 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 432);
  v15 = *(_OWORD *)(a1 + 416);
  v12 = *(_OWORD *)(a1 + 464);
  v13 = *(_OWORD *)(a1 + 448);
  v10 = *(_OWORD *)(a1 + 496);
  v11 = *(_OWORD *)(a1 + 480);
  sub_237888584(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_OWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216));
  sub_237888584(v20, v2, v3, v4, v5, v6, v7, v8, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, SBYTE8(v17), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    SBYTE8(v14),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_23788AF30(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 208);
  v15 = *(_QWORD *)(a1 + 200);
  v13 = *(void **)(a1 + 216);
  v5 = *(_BYTE *)(a1 + 104);
  v6 = *(_BYTE *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_23787A134(v3, v4, v5);
  sub_23787A134(v10, v9, v6);
  sub_23787A134(v12, v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378886C4(v15, v14, v13);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23788B060(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_237888708(a1, a2, a3);
}

void __swiftcall AvocadoWidget.init(id:info:)(CarPlayAssetUI::AvocadoWidget *__return_ptr retstr, Swift::String id, CarPlayAssetUI::AvocadoWidgetInfo *info)
{
  Swift::String kind;
  Swift::String extensionBundleIdentifier;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::Bool keepAlive;

  kind = info->kind;
  extensionBundleIdentifier = info->extensionBundleIdentifier;
  countAndFlagsBits = info->containerBundleIdentifier._countAndFlagsBits;
  object = info->containerBundleIdentifier._object;
  keepAlive = info->keepAlive;
  retstr->id = id;
  retstr->info.kind = kind;
  retstr->info.extensionBundleIdentifier = extensionBundleIdentifier;
  retstr->info.containerBundleIdentifier._countAndFlagsBits = countAndFlagsBits;
  retstr->info.containerBundleIdentifier._object = object;
  retstr->info.keepAlive = keepAlive;
  retstr->info.carplayIdentifier = info->carplayIdentifier;
}

uint64_t AppWidgetInfo.carplayIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

CarPlayAssetUI::AppWidgetInfo __swiftcall AppWidgetInfo.init(applicationBundleIdentifier:carplayIdentifier:)(Swift::String applicationBundleIdentifier, Swift::String_optional carplayIdentifier)
{
  Swift::String_optional *v2;
  CarPlayAssetUI::AppWidgetInfo result;

  v2->value = applicationBundleIdentifier;
  v2[1] = carplayIdentifier;
  result.carplayIdentifier = carplayIdentifier;
  result.applicationBundleIdentifier = applicationBundleIdentifier;
  return result;
}

uint64_t AppWidgetInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23788B178()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_23788B1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237891B78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23788B1E0()
{
  sub_23788EF1C();
  return sub_237A88718();
}

uint64_t sub_23788B208()
{
  sub_23788EF1C();
  return sub_237A88724();
}

uint64_t AppWidgetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE68);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EF1C();
  sub_237A886B8();
  v12 = 0;
  sub_237A88274();
  if (!v2)
  {
    v11 = 1;
    sub_237A8822C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t AppWidgetInfo.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t AppWidgetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EF1C();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_237A8816C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788B59C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23788B634()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A87710();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788B6AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23788B744@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_23788B758(_QWORD *a1)
{
  return AppWidgetInfo.encode(to:)(a1);
}

uint64_t AvocadoWidgetInfo.kind.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.extensionBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.containerBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.keepAlive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AvocadoWidgetInfo.carplayIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall AvocadoWidgetInfo.init(kind:extensionBundleIdentifier:containerBundleIdentifier:keepAlive:carplayIdentifier:)(CarPlayAssetUI::AvocadoWidgetInfo *__return_ptr retstr, Swift::String kind, Swift::String extensionBundleIdentifier, Swift::String containerBundleIdentifier, Swift::Bool keepAlive, Swift::String_optional carplayIdentifier)
{
  retstr->kind = kind;
  retstr->extensionBundleIdentifier = extensionBundleIdentifier;
  retstr->containerBundleIdentifier = containerBundleIdentifier;
  retstr->keepAlive = keepAlive;
  retstr->carplayIdentifier = carplayIdentifier;
}

uint64_t AvocadoWidgetInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885EC();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788B964(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23788B990 + 4 * byte_237A8B550[a1]))(1684957547, 0xE400000000000000);
}

unint64_t sub_23788B990()
{
  return 0xD000000000000019;
}

uint64_t sub_23788B9B8()
{
  return 0x76696C417065656BLL;
}

unint64_t sub_23788B9D4()
{
  return 0xD000000000000011;
}

uint64_t sub_23788B9F4()
{
  unsigned __int8 *v0;

  return sub_23788B964(*v0);
}

uint64_t sub_23788B9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237891C64(a1, a2);
  *a3 = result;
  return result;
}

void sub_23788BA20(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23788BA2C()
{
  sub_23788EF60();
  return sub_237A88718();
}

uint64_t sub_23788BA54()
{
  sub_23788EF60();
  return sub_237A88724();
}

uint64_t AvocadoWidgetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 40);
  v15 = v8;
  v13 = *(unsigned __int8 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 64);
  v12[0] = *(_QWORD *)(v1 + 56);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EF60();
  sub_237A886B8();
  v23 = 0;
  v10 = v18;
  sub_237A88274();
  if (!v10)
  {
    v22 = 1;
    sub_237A88274();
    v21 = 2;
    sub_237A88274();
    v20 = 3;
    sub_237A88280();
    v19 = 4;
    sub_237A8822C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AvocadoWidgetInfo.hashValue.getter()
{
  sub_237A885D4();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t AvocadoWidgetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EF60();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v36 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v30 = v9;
  v35 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_237A881B4();
  v31 = v13;
  v27 = v12;
  v34 = 2;
  swift_bridgeObjectRetain();
  v29 = 0;
  v26 = sub_237A881B4();
  v33 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_237A881C0();
  v28 = v15;
  v25 = v16;
  v32 = 4;
  v17 = sub_237A8816C();
  v20 = v19;
  LODWORD(v29) = v25 & 1;
  v21 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v22 = v31;
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v11;
  v23 = v28;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v23;
  *(_BYTE *)(a2 + 48) = v29;
  *(_QWORD *)(a2 + 56) = v21;
  *(_QWORD *)(a2 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788BFEC()
{
  sub_237A885D4();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_23788C054()
{
  sub_237A885D4();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_23788C0B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AvocadoWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_23788C0CC(_QWORD *a1)
{
  return AvocadoWidgetInfo.encode(to:)(a1);
}

uint64_t StreamWidgetInfo.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

CarPlayAssetUI::StreamWidgetInfo __swiftcall StreamWidgetInfo.init(name:)(CarPlayAssetUI::StreamWidgetInfo name)
{
  CarPlayAssetUI::StreamWidgetInfo *v1;

  *v1 = name;
  return name;
}

uint64_t StreamWidgetInfo.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t static StreamWidgetInfo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_237A8840C();
}

uint64_t sub_23788C188()
{
  return 1701667182;
}

uint64_t sub_23788C198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23788C21C()
{
  sub_23788EFA4();
  return sub_237A88718();
}

uint64_t sub_23788C244()
{
  sub_23788EFA4();
  return sub_237A88724();
}

uint64_t StreamWidgetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EFA4();
  sub_237A886B8();
  sub_237A88274();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t StreamWidgetInfo.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t StreamWidgetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EEA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EFA4();
  sub_237A88688();
  if (!v2)
  {
    v9 = sub_237A881B4();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23788C4BC()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_23788C504()
{
  return sub_237A87710();
}

uint64_t sub_23788C50C()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_23788C550(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_237A8840C();
}

uint64_t sub_23788C580@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return StreamWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_23788C594(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EE98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EFA4();
  sub_237A886B8();
  sub_237A88274();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void WidgetInfo.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23788C6CC()
{
  uint64_t v0;

  sub_237A885E0();
  sub_237A87710();
  if (!v0)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788C7F0()
{
  sub_23788F180();
  return sub_237A88718();
}

uint64_t sub_23788C818()
{
  sub_23788F180();
  return sub_237A88724();
}

uint64_t sub_23788C840()
{
  sub_23788F0F8();
  return sub_237A88718();
}

uint64_t sub_23788C868()
{
  sub_23788F0F8();
  return sub_237A88724();
}

uint64_t sub_23788C890()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23788C8B8 + 4 * byte_237A8B559[*v0]))(7368801, 0xE300000000000000);
}

uint64_t sub_23788C8B8()
{
  return 0x6F6461636F7661;
}

uint64_t sub_23788C8D0()
{
  return 0x6D6165727473;
}

uint64_t sub_23788C8E4()
{
  return 0x7974706D65;
}

uint64_t sub_23788C8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237891E60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23788C91C()
{
  sub_23788EFE8();
  return sub_237A88718();
}

uint64_t sub_23788C944()
{
  sub_23788EFE8();
  return sub_237A88724();
}

uint64_t sub_23788C96C()
{
  sub_23788F02C();
  return sub_237A88718();
}

uint64_t sub_23788C994()
{
  sub_23788F02C();
  return sub_237A88724();
}

uint64_t sub_23788C9BC()
{
  sub_23788F070();
  return sub_237A88718();
}

uint64_t sub_23788C9E4()
{
  sub_23788F070();
  return sub_237A88724();
}

void WidgetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EEB0);
  v14 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v12 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EEB8);
  v15 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v13 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EEC0);
  v10[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EEC8);
  v10[5] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EED0);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = v1[1];
  v20 = *v1;
  v21 = v7;
  v8 = v1[2];
  v18 = v1[3];
  v19 = v8;
  v10[4] = v1[4];
  v9 = v1[6];
  v10[3] = v1[5];
  v10[2] = v1[7];
  v10[1] = v1[8];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23788EFE8();
  sub_237A886B8();
  __asm { BR              X10 }
}

uint64_t sub_23788CC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 160) = 0;
  sub_23788F180();
  v4 = *(_QWORD *)(v3 - 168);
  sub_237A88220();
  v5 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(v3 - 192);
  *(_QWORD *)(v3 - 152) = v5;
  v6 = *(_QWORD *)(v3 - 208);
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 200);
  *(_QWORD *)(v3 - 136) = v6;
  sub_23788F1C4();
  sub_237A882B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 280) + 8))(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8))(v0, v4);
}

void WidgetInfo.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_237A885D4();
  __asm { BR              X10 }
}

uint64_t sub_23788CF00()
{
  uint64_t v0;

  sub_237A885E0();
  sub_237A87710();
  sub_237A885EC();
  if (v0)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t WidgetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF18);
  v24 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF20);
  v25 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v28 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF28);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF30);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF38);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_23788EFE8();
  v14 = v32;
  sub_237A88688();
  if (!v14)
  {
    v20[0] = v8;
    v20[1] = v7;
    v20[2] = 0;
    v32 = v10;
    v15 = sub_237A881FC();
    if (*(_QWORD *)(v15 + 16) == 1)
      __asm { BR              X10 }
    v16 = sub_237A87FB0();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v18 = &type metadata for WidgetInfo;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v9);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v31);
}

void sub_23788D670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_237A885D4();
  __asm { BR              X10 }
}

uint64_t sub_23788D6C8()
{
  uint64_t v0;

  sub_237A885E0();
  sub_237A87710();
  sub_237A885EC();
  if (v0)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23788D7B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetInfo.init(from:)(a1, a2);
}

void sub_23788D7C4(_QWORD *a1)
{
  WidgetInfo.encode(to:)(a1);
}

uint64_t WidgetInfo.appWidget.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (v1[6] >> 62)
  {
    v5 = 0;
    v6 = 0;
    v4 = 0;
    v3 = 0;
  }
  else
  {
    v4 = v1[2];
    v3 = v1[3];
    v7 = v1;
    v5 = *v1;
    v6 = v7[1];
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v4;
  a1[3] = v3;
  return result;
}

uint64_t WidgetInfo.avocadoWidget.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;

  if (v1[6] >> 62 == 1)
  {
    v4 = v1[7];
    v3 = v1[8];
    v6 = v1[4];
    v5 = v1[5];
    v8 = v1[2];
    v7 = v1[3];
    v9 = v1[6] & 1;
    v12 = v1;
    v10 = *v1;
    v11 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v5 = 0;
    v9 = 0;
    v4 = 0;
    v3 = 0;
  }
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v8;
  a1[3] = v7;
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = v9;
  a1[7] = v4;
  a1[8] = v3;
  return result;
}

uint64_t WidgetInfo.streamWidget.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  if ((unint64_t)v1[6] >> 62 == 2)
  {
    v3 = *v1;
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v3 = 0;
    result = 0;
  }
  *a1 = v3;
  a1[1] = result;
  return result;
}

void WidgetInfo.instrumentKind.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23788D998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[616];

  v6 = v3;
  v7 = v2;
  v8 = v4;
  v9 = v1;
  sub_23788F4A8(&v6);
  sub_23788F46C(&v6, v10);
  ((void (*)(_BYTE *))nullsub_1)(v10);
  sub_23788F32C((uint64_t)v10, v0);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WidgetInfo.carplayIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = v0[6] >> 62;
  if ((_DWORD)v1 == 1)
  {
    v2 = v0 + 7;
  }
  else
  {
    if ((_DWORD)v1)
      return 0;
    v2 = v0 + 2;
  }
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t AppWidget.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppWidget.info.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v4 = v1[4];
  v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall AppWidget.init(id:info:)(CarPlayAssetUI::AppWidget *__return_ptr retstr, Swift::String id, CarPlayAssetUI::AppWidgetInfo info)
{
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)info.applicationBundleIdentifier._countAndFlagsBits;
  v4 = *(void **)(info.applicationBundleIdentifier._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->info.applicationBundleIdentifier._countAndFlagsBits = v3;
  retstr->info.applicationBundleIdentifier._object = v4;
  retstr->info.carplayIdentifier = *(Swift::String_optional *)(info.applicationBundleIdentifier._countAndFlagsBits + 16);
}

uint64_t AppWidget.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t AppWidget.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23788DE04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_237A87710();
  sub_237A87710();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788DE9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t AvocadoWidget.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidget.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AvocadoWidget.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return AvocadoWidgetInfo.hash(into:)();
}

uint64_t AvocadoWidget.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87710();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_23788E11C()
{
  sub_237A885D4();
  sub_237A87710();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_23788E1B8()
{
  sub_237A87710();
  return AvocadoWidgetInfo.hash(into:)();
}

uint64_t sub_23788E234()
{
  sub_237A885D4();
  sub_237A87710();
  AvocadoWidgetInfo.hash(into:)();
  return sub_237A88610();
}

uint64_t StreamWidget.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StreamWidget.info.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

CarPlayAssetUI::StreamWidget __swiftcall StreamWidget.init(id:info:)(Swift::String id, CarPlayAssetUI::StreamWidgetInfo info)
{
  Swift::String *v2;
  uint64_t v3;
  void *v4;
  CarPlayAssetUI::StreamWidget result;

  v3 = *(_QWORD *)info.name._countAndFlagsBits;
  v4 = *(void **)(info.name._countAndFlagsBits + 8);
  *v2 = id;
  v2[1]._countAndFlagsBits = v3;
  v2[1]._object = v4;
  result.info = info;
  result.id = id;
  return result;
}

uint64_t StreamWidget.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t StreamWidget.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_23788E3F0()
{
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_23788E454()
{
  sub_237A87710();
  return sub_237A87710();
}

uint64_t sub_23788E490()
{
  sub_237A885D4();
  sub_237A87710();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t Widget.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Widget.hashValue.getter()
{
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23788E57C()
{
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23788E5D4()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t Widget.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23788E65C()
{
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t Widget.info.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[8];
  if (v6 >> 62)
  {
    if (v6 >> 62 == 1)
    {
      v8 = v1[9];
      v7 = v1[10];
      v9 = v1[6];
      v10 = v1[7];
      *a1 = v2;
      a1[1] = v3;
      a1[2] = v4;
      a1[3] = v5;
      a1[4] = v9;
      a1[5] = v10;
      a1[6] = v6 & 1 | 0x4000000000000000;
      a1[7] = v8;
      a1[8] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v2;
      a1[1] = v3;
      *((_OWORD *)a1 + 1) = 0u;
      *((_OWORD *)a1 + 2) = 0u;
      a1[7] = 0;
      a1[8] = 0;
      a1[6] = 0x8000000000000000;
    }
  }
  else
  {
    *a1 = v2;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    *((_OWORD *)a1 + 2) = 0u;
    *((_OWORD *)a1 + 3) = 0u;
    a1[8] = 0;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t Widget.carplayIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = v0[8] >> 62;
  if ((_DWORD)v1)
  {
    if ((_DWORD)v1 != 1)
      return 0;
    v2 = v0 + 9;
  }
  else
  {
    v2 = v0 + 4;
  }
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_237A8840C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_237A8840C(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10)
      {
        if (v6 != v11)
          return 0;
LABEL_13:
        if (v19)
        {
          if (!v18 || (v17 != v16 || v19 != v18) && (sub_237A8840C() & 1) == 0)
            return 0;
        }
        else if (v18)
        {
          return 0;
        }
        return 1;
      }
      v15 = sub_237A8840C();
      result = 0;
      if ((v15 & 1) != 0 && ((v6 ^ v11) & 1) == 0)
        goto LABEL_13;
    }
  }
  return result;
}

void _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23788E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71[31];

  if (v17 >> 62)
  {
    v30 = v16;
    v31 = v14;
    v32 = v9;
    v33 = v15;
    v34 = a4;
    v35 = v12;
    v36 = v8;
    v37 = v13;
    v38 = v7;
    v39 = v6;
    v40 = v10;
    v41 = v11;
    sub_23788F390(v30, v31, v33, v35, v37, a6, v17);
    v42 = v41;
    v43 = v40;
    v44 = v32;
    v45 = v34;
    v46 = v36;
    v47 = v38;
    v48 = v39;
LABEL_11:
    sub_23788F390(v42, v43, v44, v45, v46, v47, v48);
    sub_2378920B4(v71);
    goto LABEL_12;
  }
  v69 = v7;
  v70 = v6;
  v67 = v9;
  v68 = v8;
  v63 = v10;
  v64 = v11;
  if (v11 != v16 || v10 != v14)
  {
    v65 = a4;
    v18 = a6;
    v19 = sub_237A8840C();
    a6 = v18;
    v11 = v64;
    a4 = v65;
    v10 = v63;
    v9 = v67;
    v8 = v68;
    v7 = v69;
    v6 = v70;
    if ((v19 & 1) == 0)
    {
LABEL_16:
      sub_23788F390(v16, v14, v15, v12, v13, a6, v17);
      v43 = v63;
      v42 = v64;
      v45 = v65;
      v44 = v67;
      v46 = v68;
      v47 = v69;
      v48 = v70;
      goto LABEL_11;
    }
  }
  if (!a4)
  {
    if (!v12)
    {
      v52 = v16;
      v53 = v14;
      v54 = v9;
      v55 = v15;
      v56 = v8;
      v57 = v13;
      v58 = v7;
      v59 = v6;
      v60 = v10;
      v61 = v11;
      sub_23788F390(v52, v53, v55, 0, v57, a6, v17);
      v23 = v61;
      v24 = v60;
      v25 = v54;
      v26 = 0;
      v27 = v56;
      v28 = v58;
      v29 = v59;
      goto LABEL_20;
    }
    v65 = 0;
    goto LABEL_16;
  }
  if (!v12)
  {
    v65 = a4;
    goto LABEL_16;
  }
  if (v9 == v15 && a4 == v12)
  {
    v20 = v14;
    v21 = v9;
    v22 = a4;
    sub_23788F390(v16, v20, v9, a4, v13, a6, v17);
    v24 = v63;
    v23 = v64;
    v25 = v21;
    v26 = v22;
    v27 = v68;
    v28 = v69;
    v29 = v70;
LABEL_20:
    sub_23788F390(v23, v24, v25, v26, v27, v28, v29);
    sub_2378920B4(v71);
LABEL_21:
    v49 = 1;
    return v49 & 1;
  }
  v66 = a4;
  v50 = a6;
  v51 = sub_237A8840C();
  sub_23788F390(v16, v14, v15, v12, v13, v50, v17);
  sub_23788F390(v64, v63, v67, v66, v68, v69, v70);
  sub_2378920B4(v71);
  if ((v51 & 1) != 0)
    goto LABEL_21;
LABEL_12:
  v49 = 0;
  return v49 & 1;
}

uint64_t _s14CarPlayAssetUI12StreamWidgetV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_237A8840C(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_237A8840C();
  }
  return result;
}

uint64_t _s14CarPlayAssetUI13AppWidgetInfoV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_237A8840C(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_237A8840C() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_23788EF1C()
{
  unint64_t result;

  result = qword_25681EE70;
  if (!qword_25681EE70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C3CC, &type metadata for AppWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE70);
  }
  return result;
}

unint64_t sub_23788EF60()
{
  unint64_t result;

  result = qword_25681EE88;
  if (!qword_25681EE88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C37C, &type metadata for AvocadoWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EE88);
  }
  return result;
}

unint64_t sub_23788EFA4()
{
  unint64_t result;

  result = qword_25681EEA0;
  if (!qword_25681EEA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C32C, &type metadata for StreamWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EEA0);
  }
  return result;
}

unint64_t sub_23788EFE8()
{
  unint64_t result;

  result = qword_25681EED8;
  if (!qword_25681EED8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C2DC, &type metadata for WidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EED8);
  }
  return result;
}

unint64_t sub_23788F02C()
{
  unint64_t result;

  result = qword_25681EEE0;
  if (!qword_25681EEE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C28C, &type metadata for WidgetInfo.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EEE0);
  }
  return result;
}

unint64_t sub_23788F070()
{
  unint64_t result;

  result = qword_25681EEE8;
  if (!qword_25681EEE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C23C, &type metadata for WidgetInfo.StreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EEE8);
  }
  return result;
}

unint64_t sub_23788F0B4()
{
  unint64_t result;

  result = qword_25681EEF0;
  if (!qword_25681EEF0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for StreamWidgetInfo, &type metadata for StreamWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EEF0);
  }
  return result;
}

unint64_t sub_23788F0F8()
{
  unint64_t result;

  result = qword_25681EEF8;
  if (!qword_25681EEF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C1EC, &type metadata for WidgetInfo.AvocadoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EEF8);
  }
  return result;
}

unint64_t sub_23788F13C()
{
  unint64_t result;

  result = qword_25681EF00;
  if (!qword_25681EF00)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AvocadoWidgetInfo, &type metadata for AvocadoWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF00);
  }
  return result;
}

unint64_t sub_23788F180()
{
  unint64_t result;

  result = qword_25681EF08;
  if (!qword_25681EF08)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C19C, &type metadata for WidgetInfo.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EF08);
  }
  return result;
}

unint64_t sub_23788F1C4()
{
  unint64_t result;

  result = qword_25681EF10;
  if (!qword_25681EF10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AppWidgetInfo, &type metadata for AppWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF10);
  }
  return result;
}

unint64_t sub_23788F208()
{
  unint64_t result;

  result = qword_25681EF40;
  if (!qword_25681EF40)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for StreamWidgetInfo, &type metadata for StreamWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF40);
  }
  return result;
}

unint64_t sub_23788F24C()
{
  unint64_t result;

  result = qword_25681EF48;
  if (!qword_25681EF48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AvocadoWidgetInfo, &type metadata for AvocadoWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF48);
  }
  return result;
}

unint64_t sub_23788F290()
{
  unint64_t result;

  result = qword_25681EF50;
  if (!qword_25681EF50)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AppWidgetInfo, &type metadata for AppWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF50);
  }
  return result;
}

double sub_23788F2D4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 336) = 0x7FFFFFFF8;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_QWORD *)(a1 + 504) = 0;
  return result;
}

uint64_t sub_23788F32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t *sub_23788F374(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x80000000;
  return result;
}

uint64_t sub_23788F390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  uint64_t result;

  v7 = a7 >> 62;
  if (!(a7 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if ((_DWORD)v7 != 2)
  {
    if ((_DWORD)v7 != 1)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  return swift_bridgeObjectRetain();
}

_QWORD *sub_23788F404(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x3000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

void *sub_23788F46C(const void *a1, void *a2)
{
  __swift_memcpy512_8(a2, a1);
  return a2;
}

_QWORD *sub_23788F4A8(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x6000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

_QWORD *sub_23788F510(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = result[45] & 7;
  v2 = result[48] & 7;
  v3 = result[51] & 7;
  v4 = result[54] & 7;
  v5 = result[57] & 7;
  v6 = result[60] & 0xFE00000000000007;
  v7 = result[62] & 1 | 0x7000000000000000;
  result[42] &= 7uLL;
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t _s14CarPlayAssetUI13AvocadoWidgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[6];
  char v30;
  __int128 v31;
  _QWORD v32[6];
  char v33;
  __int128 v34;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v9 = *(_OWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_BYTE *)(a2 + 64);
  v17 = *(_OWORD *)(a2 + 72);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v25 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a2 + 24);
  v27 = *(_OWORD *)(a2 + 72);
  v28 = *(_OWORD *)(a1 + 72);
  v24 = *(_QWORD *)(a1 + 40);
  v23 = *(_BYTE *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = sub_237A8840C();
  v15 = v18;
  v16 = v23;
  v14 = v25;
  v10 = v26;
  v17 = v27;
  v9 = v28;
  v5 = v24;
  v20 = v19;
  v21 = 0;
  if ((v20 & 1) != 0)
  {
LABEL_4:
    v32[0] = v2;
    v32[1] = v3;
    v32[2] = v4;
    v32[3] = v5;
    v32[4] = v6;
    v32[5] = v7;
    v33 = v8;
    v34 = v9;
    v29[0] = v11;
    v29[1] = v10;
    v29[2] = v13;
    v29[3] = v12;
    v29[4] = v14;
    v29[5] = v15;
    v30 = v16;
    v31 = v17;
    v21 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v32, (uint64_t)v29);
  }
  return v21 & 1;
}

BOOL _s14CarPlayAssetUI6WidgetO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[6];
  char v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[6];
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[23];

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v58 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  v7 = a1[7];
  v10 = a1[8];
  v9 = a1[9];
  v11 = a1[10];
  v12 = *a2;
  v13 = a2[1];
  v15 = a2[2];
  v14 = a2[3];
  v16 = a2[4];
  v17 = a2[5];
  v18 = a2[6];
  v19 = a2[7];
  v20 = a2[8];
  v21 = a2[9];
  v22 = a2[10];
  v68[0] = *a1;
  v68[1] = v2;
  v59 = v4;
  v68[2] = v4;
  v68[3] = v58;
  v55 = v7;
  v56 = v5;
  v68[4] = v5;
  v68[5] = v6;
  v53 = v9;
  v54 = v8;
  v68[6] = v8;
  v68[7] = v7;
  v68[8] = v10;
  v68[9] = v9;
  v52 = v11;
  v68[10] = v11;
  v68[11] = v12;
  v68[12] = v13;
  v68[13] = v15;
  v68[14] = v14;
  v68[15] = v16;
  v68[16] = v17;
  v68[17] = v18;
  v68[18] = v19;
  v68[19] = v20;
  v68[20] = v21;
  v68[21] = v22;
  v57 = v6;
  if (v10 >> 62)
  {
    if (v10 >> 62 == 1)
    {
      if (v20 >> 62 == 1)
      {
        v48 = v2;
        v50 = v3;
        v44 = v18;
        v46 = v19;
        if (v3 == v12 && v2 == v13 || (v23 = sub_237A8840C(), v18 = v44, v19 = v46, (v23 & 1) != 0))
        {
          v64[0] = v59;
          v64[1] = v58;
          v64[2] = v56;
          v64[3] = v57;
          v64[4] = v54;
          v64[5] = v55;
          v65 = v10 & 1;
          v66 = v53;
          v67 = v52;
          v60[0] = v15;
          v60[1] = v14;
          v60[2] = v16;
          v60[3] = v17;
          v60[4] = v18;
          v60[5] = v19;
          v61 = v20 & 1;
          v62 = v21;
          v63 = v22;
          v24 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v64, (uint64_t)v60);
          goto LABEL_38;
        }
        sub_237890CDC(v12, v13, v15, v14, v16, v17, v44, v46, v20);
        sub_237890CDC(v50, v48, v59, v58, v56, v57, v54, v55, v10);
LABEL_30:
        sub_237891FF8((uint64_t)v68);
        return 0;
      }
LABEL_28:
      v39 = v14;
      v40 = v16;
      v41 = v2;
      v42 = v3;
      sub_237890CDC(v12, v13, v15, v39, v40, v17, v18, v19, v20);
      sub_237890CDC(v42, v41, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_30;
    }
    if (v20 >> 62 != 2)
      goto LABEL_28;
    if (v3 != v12 || v2 != v13)
    {
      v49 = v2;
      v51 = v3;
      v45 = v18;
      v47 = v19;
      v33 = sub_237A8840C();
      v18 = v45;
      v19 = v47;
      v2 = v49;
      v3 = v51;
      if ((v33 & 1) == 0)
        goto LABEL_28;
    }
    if (v59 == v15 && v58 == v14)
    {
      v34 = v16;
      v35 = v17;
      v36 = v2;
      v37 = v3;
      sub_237890CDC(v12, v13, v59, v58, v34, v35, v18, v19, v20);
      sub_237890CDC(v37, v36, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_27;
    }
    v48 = v2;
    v50 = v3;
    v44 = v18;
    v46 = v19;
    goto LABEL_37;
  }
  if (v20 >> 62)
    goto LABEL_28;
  v48 = v2;
  v50 = v3;
  v44 = v18;
  v46 = v19;
  if (v3 != v12 || v2 != v13)
  {
    v25 = sub_237A8840C();
    v18 = v44;
    v19 = v46;
    v2 = v48;
    v3 = v50;
    if ((v25 & 1) == 0)
      goto LABEL_36;
  }
  v26 = v58;
  if (v59 != v15 || v58 != v14)
  {
    v27 = sub_237A8840C();
    v18 = v44;
    v19 = v46;
    v2 = v48;
    v3 = v50;
    v26 = v58;
    if ((v27 & 1) == 0)
    {
LABEL_36:
      sub_237890CDC(v12, v13, v15, v14, v16, v17, v18, v19, v20);
      sub_237890CDC(v50, v48, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_30;
    }
  }
  if (!v57)
  {
    if (!v17)
    {
      sub_237890CDC(v12, v13, v15, v14, v16, 0, v18, v19, v20);
      sub_237890CDC(v50, v48, v59, v58, v56, 0, v54, v55, v10);
      goto LABEL_27;
    }
    v57 = 0;
    goto LABEL_36;
  }
  if (!v17)
    goto LABEL_36;
  if (v56 == v16 && v57 == v17)
  {
    v28 = v12;
    v29 = v26;
    v30 = v14;
    v31 = v2;
    v32 = v3;
    sub_237890CDC(v28, v13, v15, v30, v56, v57, v18, v19, v20);
    sub_237890CDC(v32, v31, v59, v29, v56, v57, v54, v55, v10);
LABEL_27:
    sub_237891FF8((uint64_t)v68);
    return 1;
  }
LABEL_37:
  v24 = sub_237A8840C();
LABEL_38:
  v43 = v24;
  sub_237890CDC(v12, v13, v15, v14, v16, v17, v44, v46, v20);
  sub_237890CDC(v50, v48, v59, v58, v56, v57, v54, v55, v10);
  sub_237891FF8((uint64_t)v68);
  return (v43 & 1) != 0;
}

uint64_t _s14CarPlayAssetUI9AppWidgetV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_237A8840C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (sub_237A8840C() & 1) != 0)
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_237A8840C() & 1) != 0))
          return 1;
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23788FC6C()
{
  unint64_t result;

  result = qword_25681EF68;
  if (!qword_25681EF68)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AppWidgetInfo, &type metadata for AppWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF68);
  }
  return result;
}

unint64_t sub_23788FCB4()
{
  unint64_t result;

  result = qword_25681EF70;
  if (!qword_25681EF70)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AvocadoWidgetInfo, &type metadata for AvocadoWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF70);
  }
  return result;
}

unint64_t sub_23788FCFC()
{
  unint64_t result;

  result = qword_25681EF78;
  if (!qword_25681EF78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for StreamWidgetInfo, &type metadata for StreamWidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF78);
  }
  return result;
}

unint64_t sub_23788FD44()
{
  unint64_t result;

  result = qword_25681EF80;
  if (!qword_25681EF80)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for WidgetInfo, &type metadata for WidgetInfo);
    atomic_store(result, (unint64_t *)&qword_25681EF80);
  }
  return result;
}

uint64_t sub_23788FD88()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_23788FD98()
{
  unint64_t result;

  result = qword_25681EF88;
  if (!qword_25681EF88)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AppWidget, &type metadata for AppWidget);
    atomic_store(result, (unint64_t *)&qword_25681EF88);
  }
  return result;
}

unint64_t sub_23788FDE0()
{
  unint64_t result;

  result = qword_25681EF90;
  if (!qword_25681EF90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AvocadoWidget, &type metadata for AvocadoWidget);
    atomic_store(result, (unint64_t *)&qword_25681EF90);
  }
  return result;
}

unint64_t sub_23788FE28()
{
  unint64_t result;

  result = qword_25681EF98;
  if (!qword_25681EF98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for StreamWidget, &type metadata for StreamWidget);
    atomic_store(result, (unint64_t *)&qword_25681EF98);
  }
  return result;
}

unint64_t sub_23788FE70()
{
  unint64_t result;

  result = qword_25681EFA0;
  if (!qword_25681EFA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Widget, &type metadata for Widget);
    atomic_store(result, (unint64_t *)&qword_25681EFA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppWidgetInfo()
{
  return &type metadata for AppWidgetInfo;
}

uint64_t destroy for AvocadoWidgetInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvocadoWidgetInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvocadoWidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidgetInfo()
{
  return &type metadata for AvocadoWidgetInfo;
}

_QWORD *initializeBufferWithCopyOfBuffer for StreamWidgetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ImageAsset.LocalizedImage.ImageData()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StreamWidgetInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StreamWidgetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamWidgetInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StreamWidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamWidgetInfo()
{
  return &type metadata for StreamWidgetInfo;
}

uint64_t destroy for WidgetInfo(uint64_t a1)
{
  return sub_2378902DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t sub_2378902DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;
  unint64_t v8;

  result = a2;
  v8 = a7 >> 62;
  if (!(a7 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if ((_DWORD)v8 != 2)
  {
    if ((_DWORD)v8 != 1)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for WidgetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  sub_23788F390(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  return a1;
}

uint64_t *assignWithCopy for WidgetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  sub_23788F390(*a2, v4, v5, v6, v7, v8, v9);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  sub_2378902DC(v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for WidgetInfo(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v12;
  a1[8] = v3;
  sub_2378902DC(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 48) = 2 * -a2;
      return result;
    }
    *(_BYTE *)(a1 + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2378905B8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 48) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_2378905D4(uint64_t result)
{
  *(_QWORD *)(result + 48) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2378905E4(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(_QWORD *)(result + 48) = *(_QWORD *)(result + 48) & 1 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0xC000000000000000;
    *(_QWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetInfo()
{
  return &type metadata for WidgetInfo;
}

uint64_t destroy for AppWidget()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppWidget(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppWidget(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for AppWidget(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppWidget(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppWidget()
{
  return &type metadata for AppWidget;
}

uint64_t destroy for AvocadoWidget()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvocadoWidget(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvocadoWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidget()
{
  return &type metadata for AvocadoWidget;
}

uint64_t _s11BoundsLabelVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11BoundsLabelVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s11BoundsLabelVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s11BoundsLabelVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11BoundsLabelVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11BoundsLabelVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamWidget()
{
  return &type metadata for StreamWidget;
}

uint64_t sub_237890CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  unint64_t v9;
  uint64_t result;

  v9 = a9 >> 62;
  if (!(a9 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if ((_DWORD)v9 != 2)
  {
    if ((_DWORD)v9 != 1)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for Widget(uint64_t a1)
{
  return sub_237890DAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

uint64_t sub_237890DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t result;
  unint64_t v10;

  result = a2;
  v10 = a9 >> 62;
  if (!(a9 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((_DWORD)v10 != 2)
  {
    if ((_DWORD)v10 != 1)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for Widget(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  sub_237890CDC(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t assignWithCopy for Widget(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v22 = a2[9];
  v23 = a2[10];
  sub_237890CDC(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v22;
  *(_QWORD *)(a1 + 80) = v23;
  sub_237890DAC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for Widget(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v3;
  sub_237890DAC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Widget(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Widget(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 72) = 0;
      *(_QWORD *)(a1 + 80) = 0;
      *(_QWORD *)(a1 + 64) = 2 * -a2;
      return result;
    }
    *(_BYTE *)(a1 + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2378910EC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 64) >> 62;
}

uint64_t sub_2378910F8(uint64_t result)
{
  *(_QWORD *)(result + 64) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_237891108(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 64) = *(_QWORD *)(result + 64) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for Widget()
{
  return &type metadata for Widget;
}

uint64_t storeEnumTagSinglePayload for WidgetInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237891178 + 4 * byte_237A8B57A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2378911AC + 4 * byte_237A8B575[v4]))();
}

uint64_t sub_2378911AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378911B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378911BCLL);
  return result;
}

uint64_t sub_2378911C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378911D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2378911D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378911DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetInfo.CodingKeys()
{
  return &type metadata for WidgetInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.AppCodingKeys()
{
  return &type metadata for WidgetInfo.AppCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.AvocadoCodingKeys()
{
  return &type metadata for WidgetInfo.AvocadoCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.StreamCodingKeys()
{
  return &type metadata for WidgetInfo.StreamCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.EmptyCodingKeys()
{
  return &type metadata for WidgetInfo.EmptyCodingKeys;
}

uint64_t _s14CarPlayAssetUI10WidgetInfoO13AppCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23789127C + 4 * byte_237A8B57F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23789129C + 4 * byte_237A8B584[v4]))();
}

_BYTE *sub_23789127C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23789129C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378912A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378912AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378912B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378912BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StreamWidgetInfo.CodingKeys()
{
  return &type metadata for StreamWidgetInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AvocadoWidgetInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AvocadoWidgetInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2378913B4 + 4 * byte_237A8B58E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2378913E8 + 4 * byte_237A8B589[v4]))();
}

uint64_t sub_2378913E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378913F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378913F8);
  return result;
}

uint64_t sub_237891404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23789140CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_237891410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237891418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidgetInfo.CodingKeys()
{
  return &type metadata for AvocadoWidgetInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AppWidgetInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237891480 + 4 * byte_237A8B598[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378914B4 + 4 * byte_237A8B593[v4]))();
}

uint64_t sub_2378914B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378914BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378914C4);
  return result;
}

uint64_t sub_2378914D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378914D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378914DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378914E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppWidgetInfo.CodingKeys()
{
  return &type metadata for AppWidgetInfo.CodingKeys;
}

unint64_t sub_237891504()
{
  unint64_t result;

  result = qword_25681EFA8;
  if (!qword_25681EFA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BCD4, &type metadata for AppWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFA8);
  }
  return result;
}

unint64_t sub_23789154C()
{
  unint64_t result;

  result = qword_25681EFB0;
  if (!qword_25681EFB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BD8C, &type metadata for AvocadoWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFB0);
  }
  return result;
}

unint64_t sub_237891594()
{
  unint64_t result;

  result = qword_25681EFB8;
  if (!qword_25681EFB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BE44, &type metadata for StreamWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFB8);
  }
  return result;
}

unint64_t sub_2378915DC()
{
  unint64_t result;

  result = qword_25681EFC0;
  if (!qword_25681EFC0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BF4C, &type metadata for WidgetInfo.StreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFC0);
  }
  return result;
}

unint64_t sub_237891624()
{
  unint64_t result;

  result = qword_25681EFC8;
  if (!qword_25681EFC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C004, &type metadata for WidgetInfo.AvocadoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFC8);
  }
  return result;
}

unint64_t sub_23789166C()
{
  unint64_t result;

  result = qword_25681EFD0;
  if (!qword_25681EFD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C0BC, &type metadata for WidgetInfo.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFD0);
  }
  return result;
}

unint64_t sub_2378916B4()
{
  unint64_t result;

  result = qword_25681EFD8;
  if (!qword_25681EFD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C174, &type metadata for WidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFD8);
  }
  return result;
}

unint64_t sub_2378916FC()
{
  unint64_t result;

  result = qword_25681EFE0;
  if (!qword_25681EFE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C02C, &type metadata for WidgetInfo.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFE0);
  }
  return result;
}

unint64_t sub_237891744()
{
  unint64_t result;

  result = qword_25681EFE8;
  if (!qword_25681EFE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C054, &type metadata for WidgetInfo.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFE8);
  }
  return result;
}

unint64_t sub_23789178C()
{
  unint64_t result;

  result = qword_25681EFF0;
  if (!qword_25681EFF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BF74, &type metadata for WidgetInfo.AvocadoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFF0);
  }
  return result;
}

unint64_t sub_2378917D4()
{
  unint64_t result;

  result = qword_25681EFF8;
  if (!qword_25681EFF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BF9C, &type metadata for WidgetInfo.AvocadoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681EFF8);
  }
  return result;
}

unint64_t sub_23789181C()
{
  unint64_t result;

  result = qword_25681F000;
  if (!qword_25681F000)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BEBC, &type metadata for WidgetInfo.StreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F000);
  }
  return result;
}

unint64_t sub_237891864()
{
  unint64_t result;

  result = qword_25681F008;
  if (!qword_25681F008)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BEE4, &type metadata for WidgetInfo.StreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F008);
  }
  return result;
}

unint64_t sub_2378918AC()
{
  unint64_t result;

  result = qword_25681F010;
  if (!qword_25681F010)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BE6C, &type metadata for WidgetInfo.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F010);
  }
  return result;
}

unint64_t sub_2378918F4()
{
  unint64_t result;

  result = qword_25681F018;
  if (!qword_25681F018)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BE94, &type metadata for WidgetInfo.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F018);
  }
  return result;
}

unint64_t sub_23789193C()
{
  unint64_t result;

  result = qword_25681F020;
  if (!qword_25681F020)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C0E4, &type metadata for WidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F020);
  }
  return result;
}

unint64_t sub_237891984()
{
  unint64_t result;

  result = qword_25681F028;
  if (!qword_25681F028)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C10C, &type metadata for WidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F028);
  }
  return result;
}

unint64_t sub_2378919CC()
{
  unint64_t result;

  result = qword_25681F030;
  if (!qword_25681F030)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BDB4, &type metadata for StreamWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F030);
  }
  return result;
}

unint64_t sub_237891A14()
{
  unint64_t result;

  result = qword_25681F038;
  if (!qword_25681F038)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BDDC, &type metadata for StreamWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F038);
  }
  return result;
}

unint64_t sub_237891A5C()
{
  unint64_t result;

  result = qword_25681F040;
  if (!qword_25681F040)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BCFC, &type metadata for AvocadoWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F040);
  }
  return result;
}

unint64_t sub_237891AA4()
{
  unint64_t result;

  result = qword_25681F048;
  if (!qword_25681F048)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BD24, &type metadata for AvocadoWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F048);
  }
  return result;
}

unint64_t sub_237891AEC()
{
  unint64_t result;

  result = qword_25681F050;
  if (!qword_25681F050)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BC44, &type metadata for AppWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F050);
  }
  return result;
}

unint64_t sub_237891B34()
{
  unint64_t result;

  result = qword_25681F058;
  if (!qword_25681F058)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8BC6C, &type metadata for AppWidgetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F058);
  }
  return result;
}

uint64_t sub_237891B78(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AAF680 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAF6A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237891C64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAF6C0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAF6E0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76696C417065656BLL && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAF6A0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_237891E60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6461636F7661 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6165727473 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237891FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v11 = *(_OWORD *)(a1 + 152);
  sub_237890DAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  sub_237890DAC(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  return a1;
}

uint64_t *sub_2378920B4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[12];
  v6 = a1[13];
  v7 = a1[14];
  v8 = a1[15];
  sub_2378902DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_2378902DC(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.stops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.init(activeColors:activeSecondaryColors:activeTertiaryColors:inactiveColors:inactiveSecondaryColors:inactiveTertiaryColors:stops:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(result + 16);
  if (v8 && *(_QWORD *)(a2 + 16) && (v9 = *(_QWORD *)(a4 + 16)) != 0 && v8 == v9 && *(_QWORD *)(a7 + 16) + 1 == v8)
  {
    *a8 = result;
    a8[1] = a2;
    a8[2] = a3;
    a8[3] = a4;
    a8[4] = a5;
    a8[5] = a6;
    a8[6] = a7;
  }
  else
  {
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  v22 = v1[6];
  sub_237A885E0();
  v9 = *(_QWORD *)(v4 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    do
    {
      ++v10;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  sub_237A885E0();
  v11 = *(_QWORD *)(v3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      ++v12;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  sub_237A885E0();
  v13 = *(_QWORD *)(v6 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      ++v14;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  sub_237A885E0();
  v15 = *(_QWORD *)(v5 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    v16 = 0;
    do
    {
      ++v16;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
  }
  sub_237A885E0();
  v17 = *(_QWORD *)(v8 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = 0;
    do
    {
      ++v18;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
  }
  sub_237A885E0();
  v19 = *(_QWORD *)(v7 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = 0;
    do
    {
      ++v20;
      swift_retain();
      sub_237A871E8();
      swift_release();
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
  }
  return sub_237876C20(a1, v22);
}

uint64_t sub_23789269C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378926D8 + 4 * byte_237A8C430[a1]))(0x6F43657669746361, 0xEC00000073726F6CLL);
}

unint64_t sub_2378926D8()
{
  return 0xD000000000000015;
}

uint64_t sub_237892768()
{
  return 0x73706F7473;
}

uint64_t sub_23789277C()
{
  unsigned __int8 *v0;

  return sub_23789269C(*v0);
}

uint64_t sub_237892784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23789858C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378927A8()
{
  sub_237896E98();
  return sub_237A88718();
}

uint64_t sub_2378927D0()
{
  sub_237896E98();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v21 = v1[2];
  v22 = v8;
  v10 = v1[3];
  v19 = v1[4];
  v20 = v10;
  v11 = v1[5];
  v17 = v1[6];
  v18 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237896E98();
  v12 = v4;
  sub_237A886B8();
  v24 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F070);
  sub_237896EDC(&qword_25681F078, (uint64_t (*)(void))sub_237879654, MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  if (!v2)
  {
    v13 = v20;
    v14 = v21;
    v24 = v22;
    v23 = 1;
    sub_237A882B0();
    v24 = v14;
    v23 = 2;
    v22 = v12;
    sub_237A882B0();
    v24 = v13;
    v23 = 3;
    sub_237A882B0();
    v24 = v19;
    v23 = 4;
    sub_237A882B0();
    v24 = v18;
    v23 = 5;
    sub_237A882B0();
    v24 = v17;
    v23 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F080);
    sub_237898A8C(&qword_25681F088, &qword_25681F080, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
    v4 = v22;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *((_QWORD *)v0 + 6);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v0[2];
  v8 = v1;
  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F090);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237896E98();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F070);
  v31 = 0;
  sub_237896EDC(&qword_25681F098, (uint64_t (*)(void))sub_237879610, MEMORY[0x24BEE12D0]);
  sub_237A881F0();
  v9 = v32;
  v31 = 1;
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v29 = v9;
  v10 = v32;
  v31 = 2;
  swift_bridgeObjectRetain();
  v28 = 0;
  sub_237A881F0();
  v28 = v10;
  v12 = v32;
  v31 = 3;
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v25 = v12;
  v13 = v32;
  v31 = 4;
  swift_bridgeObjectRetain();
  v24 = 0;
  sub_237A881F0();
  v26 = v13;
  v14 = v32;
  v31 = 5;
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v27 = v14;
  v15 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F080);
  v31 = 6;
  sub_237898A8C(&qword_25681F0A0, &qword_25681F080, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v32;
  v17 = v29;
  swift_bridgeObjectRetain();
  v18 = v28;
  swift_bridgeObjectRetain();
  v19 = v25;
  swift_bridgeObjectRetain();
  v20 = v15;
  v21 = v26;
  swift_bridgeObjectRetain();
  v22 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v30;
  *v30 = v17;
  v23[1] = v18;
  v23[2] = v19;
  v23[3] = v21;
  v23[4] = v22;
  v23[5] = v20;
  v23[6] = v16;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237893144@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.DialConfiguration.TickColors.init(from:)(a1, a2);
}

uint64_t sub_237893158(_QWORD *a1)
{
  return Instrument.GaugeStyle.DialConfiguration.TickColors.encode(to:)(a1);
}

uint64_t sub_23789316C()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *((_QWORD *)v0 + 6);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v0[2];
  v8 = v1;
  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

uint64_t sub_2378931C8()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *((_QWORD *)v0 + 6);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v0[2];
  v8 = v1;
  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_237A88610();
}

void Instrument.GaugeStyle.DialConfiguration.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double Instrument.GaugeStyle.DialConfiguration.bounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double Instrument.GaugeStyle.DialConfiguration.minimumAngle.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double Instrument.GaugeStyle.DialConfiguration.maximumAngle.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.primaryTickMarks.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.secondaryTickMarks.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.tertiaryTickMarks.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.tickColors.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[8];
  v3 = v1[9];
  v4 = v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = v1[13];
  v8 = v1[14];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hasNeedle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.iconImageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[18];
  v3 = v1[19];
  v4 = (void *)v1[20];
  v5 = v1[21];
  v6 = v1[22];
  v7 = v1[23];
  v8 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2378884CC(v2, v3, v4);
}

__n128 Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_2378886C4(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), *(void **)(v1 + 160));
  *(_OWORD *)(v1 + 144) = v6;
  *(_OWORD *)(v1 + 160) = v5;
  result = v4;
  *(__n128 *)(v1 + 176) = v4;
  *(_QWORD *)(v1 + 192) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[25];
  v3 = v1[26];
  v4 = (void *)v1[27];
  v5 = v1[28];
  v6 = v1[29];
  v7 = v1[30];
  v8 = v1[31];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2378884CC(v2, v3, v4);
}

__n128 Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_2378886C4(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208), *(void **)(v1 + 216));
  *(_OWORD *)(v1 + 200) = v6;
  *(_OWORD *)(v1 + 216) = v5;
  result = v4;
  *(__n128 *)(v1 + 232) = v4;
  *(_QWORD *)(v1 + 248) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.currentValueMaximumFractionDigits.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.minimumValueLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.maximumValueLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 Instrument.GaugeStyle.DialConfiguration.init(dataIdentifier:bounds:minimumAngle:maximumAngle:primaryTickMarks:secondaryTickMarks:tertiaryTickMarks:tickColors:hasNeedle:iconImageName:currentValueLabelFont:primaryTickMarkLabelFont:currentValueMaximumFractionDigits:minimumValueLabel:maximumValueLabel:)@<Q0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, char a17, __int128 a18, uint64_t a19, uint64_t a20)
{
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 result;

  v20 = *a1;
  v21 = *(_QWORD *)(a5 + 48);
  v22 = *(_QWORD *)(a14 + 48);
  v23 = *(_QWORD *)(a15 + 48);
  *(_BYTE *)a9 = v20;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(double *)(a9 + 32) = a13;
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_QWORD *)(a9 + 56) = a4;
  v24 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(a5 + 32);
  *(_QWORD *)(a9 + 112) = v21;
  *(_BYTE *)(a9 + 120) = a6;
  *(_QWORD *)(a9 + 128) = a7;
  *(_QWORD *)(a9 + 136) = a8;
  v25 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 144) = *(_OWORD *)a14;
  *(_OWORD *)(a9 + 160) = v25;
  *(_OWORD *)(a9 + 176) = *(_OWORD *)(a14 + 32);
  *(_QWORD *)(a9 + 192) = v22;
  v26 = *(_OWORD *)(a15 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a15;
  *(_OWORD *)(a9 + 216) = v26;
  result = *(__n128 *)(a15 + 32);
  *(__n128 *)(a9 + 232) = result;
  *(_QWORD *)(a9 + 248) = v23;
  *(_QWORD *)(a9 + 256) = a16;
  *(_BYTE *)(a9 + 264) = a17 & 1;
  *(_OWORD *)(a9 + 272) = a18;
  *(_QWORD *)(a9 + 288) = a19;
  *(_QWORD *)(a9 + 296) = a20;
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.activeTickColor(for:)(double a1)
{
  const void *v1;
  uint64_t v4;
  _QWORD *v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[38];

  memcpy(v13, v1, sizeof(v13));
  if (a1 < 0.0 || a1 > 1.0)
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v4 = v13[8];
    v5 = (_QWORD *)v13[14];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_237895AD8(0, v5[2] + 1, 1, v5);
      v5 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v8 = v5[2];
    v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_237895AD8((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
      v5 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v9 = v13[2];
    v5[2] = v8 + 1;
    v5[v8 + 4] = v9;
    MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRetain();
    sub_23789887C((uint64_t)v5, v4, (uint64_t (*)(uint64_t, double))sub_237896F44);
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11)
      return sub_237A871F4();
    return v11;
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.inactiveTickColor(for:)(double a1)
{
  const void *v1;
  uint64_t v4;
  _QWORD *v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[38];

  memcpy(v13, v1, sizeof(v13));
  if (a1 < 0.0 || a1 > 1.0)
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v4 = v13[11];
    v5 = (_QWORD *)v13[14];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_237895AD8(0, v5[2] + 1, 1, v5);
      v5 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v8 = v5[2];
    v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_237895AD8((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
      v5 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v9 = v13[2];
    v5[2] = v8 + 1;
    v5[v8 + 4] = v9;
    MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRetain();
    sub_23789887C((uint64_t)v5, v4, (uint64_t (*)(uint64_t, double))sub_237896F44);
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11)
      return sub_237A871F4();
    return v11;
  }
  return result;
}

_QWORD *Instrument.GaugeStyle.DialConfiguration.assets.getter()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  ValueMetadata *v33;
  _UNKNOWN **v34;

  v1 = (void *)v0[20];
  v2 = v0[25];
  v3 = v0[26];
  v4 = (void *)v0[27];
  v5 = v0[28];
  v6 = v0[29];
  v30 = v0[30];
  v31 = v0[31];
  if (!v1)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v17 = v0[31];
    if (!v4)
      return v13;
    goto LABEL_7;
  }
  v25 = v0[29];
  v26 = v0[28];
  v27 = (void *)v0[27];
  v28 = v0[26];
  v29 = v0[25];
  v7 = v0[18];
  v6 = v0[19];
  v8 = v0[22];
  v24 = v0[21];
  v10 = v0[23];
  v9 = v0[24];
  v11 = v1;
  swift_bridgeObjectRetain_n();
  v12 = v11;
  v13 = sub_237895534(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_25681F208, &qword_25681EC80);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_237895534((_QWORD *)(v14 > 1), v15 + 1, 1, v13, &qword_25681F208, &qword_25681EC80);
  v33 = &type metadata for InstrumentFont;
  v34 = &protocol witness table for InstrumentFont;
  v16 = swift_allocObject();
  *(_QWORD *)&v32 = v16;
  *(_BYTE *)(v16 + 16) = v7;
  *(_QWORD *)(v16 + 24) = v6;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v24;
  *(_BYTE *)(v16 + 48) = v8 & 1;
  *(_BYTE *)(v16 + 49) = BYTE1(v8) & 1;
  *(_QWORD *)(v16 + 56) = v10;
  *(_QWORD *)(v16 + 64) = v9;
  v13[2] = v15 + 1;
  sub_237870734(&v32, (uint64_t)&v13[5 * v15 + 4]);
  sub_2378886C4(v7, v6, v1);
  v3 = v28;
  v2 = v29;
  v5 = v26;
  v4 = v27;
  LOWORD(v6) = v25;
  v17 = v31;
  if (v27)
  {
LABEL_7:
    v18 = v4;
    swift_bridgeObjectRetain_n();
    v19 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_237895534(0, v13[2] + 1, 1, v13, &qword_25681F208, &qword_25681EC80);
    v21 = v13[2];
    v20 = v13[3];
    if (v21 >= v20 >> 1)
      v13 = sub_237895534((_QWORD *)(v20 > 1), v21 + 1, 1, v13, &qword_25681F208, &qword_25681EC80);
    v33 = &type metadata for InstrumentFont;
    v34 = &protocol witness table for InstrumentFont;
    v22 = swift_allocObject();
    *(_QWORD *)&v32 = v22;
    *(_BYTE *)(v22 + 16) = v2;
    *(_QWORD *)(v22 + 24) = v3;
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v5;
    *(_BYTE *)(v22 + 48) = v6 & 1;
    *(_BYTE *)(v22 + 49) = BYTE1(v6) & 1;
    *(_QWORD *)(v22 + 56) = v30;
    *(_QWORD *)(v22 + 64) = v17;
    v13[2] = v21 + 1;
    sub_237870734(&v32, (uint64_t)&v13[5 * v21 + 4]);
    sub_2378886C4(v2, v3, v4);
  }
  return v13;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 216);
  v7 = *(unsigned __int8 *)(v1 + 264);
  v8 = *(_QWORD *)(v1 + 280);
  v9 = *(_QWORD *)(v1 + 296);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  sub_237A885E0();
  sub_237A885E0();
  sub_237A885E0();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)(a1);
  sub_237A885EC();
  sub_237A885EC();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_237A885EC();
    InstrumentFont.hash(into:)();
    if (v6)
      goto LABEL_5;
  }
  else
  {
    sub_237A885EC();
    if (v6)
    {
LABEL_5:
      sub_237A885EC();
      InstrumentFont.hash(into:)();
      if (v7)
        goto LABEL_6;
      goto LABEL_11;
    }
  }
  sub_237A885EC();
  if (v7)
  {
LABEL_6:
    sub_237A885EC();
    if (v8)
      goto LABEL_7;
LABEL_12:
    sub_237A885EC();
    if (v9)
      goto LABEL_8;
    return sub_237A885EC();
  }
LABEL_11:
  sub_237A885EC();
  sub_237A885E0();
  if (!v8)
    goto LABEL_12;
LABEL_7:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_8:
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237A87710();
    return swift_bridgeObjectRelease();
  }
  return sub_237A885EC();
}

uint64_t sub_237893F30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237893F70 + 4 * byte_237A8C437[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

uint64_t sub_237893F70()
{
  return 0x73646E756F62;
}

uint64_t sub_237893F84()
{
  return 0x416D756D696E696DLL;
}

unint64_t sub_237893FB0()
{
  return 0xD000000000000010;
}

unint64_t sub_237894098()
{
  return 0xD000000000000011;
}

uint64_t sub_2378940C0()
{
  unsigned __int8 *v0;

  return sub_237893F30(*v0);
}

uint64_t sub_2378940C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237899DF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2378940EC(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_2378940F8()
{
  sub_2378989C0();
  return sub_237A88718();
}

uint64_t sub_237894120()
{
  sub_2378989C0();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  int v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  int v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v9 = *((_QWORD *)v1 + 2);
  v11 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  v39 = *((_QWORD *)v1 + 6);
  v40 = v12;
  v38 = *((_QWORD *)v1 + 7);
  v13 = *((_OWORD *)v1 + 4);
  v36 = *((_OWORD *)v1 + 5);
  v37 = v13;
  v35 = *((_OWORD *)v1 + 6);
  v34 = *((_QWORD *)v1 + 14);
  v46 = v1[120];
  v33 = *((_QWORD *)v1 + 16);
  v32 = *((_QWORD *)v1 + 17);
  v26 = *((_OWORD *)v1 + 9);
  v31 = *((_QWORD *)v1 + 20);
  v30 = *((_QWORD *)v1 + 21);
  v29 = *((_QWORD *)v1 + 22);
  v28 = *((_QWORD *)v1 + 23);
  v27 = *((_QWORD *)v1 + 24);
  v20 = *(_OWORD *)(v1 + 200);
  v25 = *((_QWORD *)v1 + 27);
  v24 = *((_QWORD *)v1 + 28);
  v23 = *((_QWORD *)v1 + 29);
  v22 = *((_QWORD *)v1 + 30);
  v21 = *((_QWORD *)v1 + 31);
  v19 = *((_QWORD *)v1 + 32);
  v18 = v1[264];
  v17[2] = *((_QWORD *)v1 + 34);
  v17[1] = *((_QWORD *)v1 + 35);
  v14 = *((_QWORD *)v1 + 37);
  v17[0] = *((_QWORD *)v1 + 36);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378989C0();
  sub_237A886B8();
  LOBYTE(v42) = v7;
  v47 = 0;
  sub_237888154();
  v15 = v41;
  sub_237A882B0();
  if (v15)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v41 = v14;
  *(_QWORD *)&v42 = v8;
  *((_QWORD *)&v42 + 1) = v9;
  v47 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
  sub_237898A8C(&qword_25681F0C0, &qword_25681F0B8, MEMORY[0x24BEE13D8], MEMORY[0x24BEE08E0]);
  sub_237A882B0();
  *(_QWORD *)&v42 = v11;
  v47 = 2;
  sub_23787ADF8();
  sub_237A882B0();
  *(_QWORD *)&v42 = v10;
  v47 = 3;
  sub_237A882B0();
  LOBYTE(v42) = 4;
  sub_237A88298();
  LOBYTE(v42) = 5;
  sub_237A88298();
  LOBYTE(v42) = 6;
  sub_237A88298();
  v42 = v37;
  v43 = v36;
  v44 = v35;
  v45 = v34;
  v47 = 7;
  sub_237898A04();
  sub_237A882B0();
  LOBYTE(v42) = 8;
  sub_237A88280();
  LOBYTE(v42) = 9;
  sub_237A8822C();
  v42 = v26;
  *(_QWORD *)&v43 = v31;
  *((_QWORD *)&v43 + 1) = v30;
  *(_QWORD *)&v44 = v29;
  *((_QWORD *)&v44 + 1) = v28;
  v45 = v27;
  v47 = 10;
  sub_237898A48();
  sub_237A88268();
  v42 = v20;
  *(_QWORD *)&v43 = v25;
  *((_QWORD *)&v43 + 1) = v24;
  *(_QWORD *)&v44 = v23;
  *((_QWORD *)&v44 + 1) = v22;
  v45 = v21;
  v47 = 11;
  sub_237A88268();
  LOBYTE(v42) = 12;
  sub_237A8825C();
  LOBYTE(v42) = 13;
  sub_237A8822C();
  LOBYTE(v42) = 14;
  sub_237A8822C();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v4 + 8))(0, v3);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

_QWORD *Instrument.GaugeStyle.DialConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  _QWORD v72[38];
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _BYTE v89[7];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _BYTE v114[7];
  char v115;
  _BYTE v116[7];
  _DWORD v117[3];
  uint64_t v118;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v63 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_2378989C0();
  sub_237A88688();
  if (v2)
  {
    v118 = 0;
    v70 = 0;
    v71 = 0;
    v68 = 0;
    v69 = 0;
    v66 = 0;
    v67 = 0;
    v64 = 0;
    v65 = 0;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
    sub_2378886C4(v69, v70, v71);
    return (_QWORD *)sub_2378886C4(v68, v67, v66);
  }
  else
  {
    v53 = a2;
    LOBYTE(v72[0]) = 0;
    sub_237888198();
    sub_237A881F0();
    v10 = v73;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
    LOBYTE(v72[0]) = 1;
    sub_237898A8C(&qword_25681F0E0, &qword_25681F0B8, MEMORY[0x24BEE1400], MEMORY[0x24BEE0900]);
    sub_237A881F0();
    v11 = v73;
    v12 = v74;
    LOBYTE(v72[0]) = 2;
    sub_23787AE3C();
    sub_237A881F0();
    v13 = v73;
    LOBYTE(v72[0]) = 3;
    sub_237A881F0();
    v14 = v73;
    LOBYTE(v73) = 4;
    v15 = sub_237A881D8();
    LOBYTE(v73) = 5;
    v16 = sub_237A881D8();
    LOBYTE(v73) = 6;
    v52 = sub_237A881D8();
    LOBYTE(v72[0]) = 7;
    sub_237898AE8();
    sub_237A881F0();
    v50 = v16;
    v51 = v15;
    v17 = v73;
    v18 = (uint64_t)v74;
    v19 = v75;
    v20 = v76;
    v21 = v78;
    v61 = v77;
    v62 = v79;
    LOBYTE(v73) = 8;
    v56 = v17;
    swift_bridgeObjectRetain();
    v57 = v18;
    swift_bridgeObjectRetain();
    v58 = v19;
    swift_bridgeObjectRetain();
    v59 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = sub_237A881C0();
    LOBYTE(v73) = 9;
    v48 = sub_237A8816C();
    v55 = v22;
    LOBYTE(v72[0]) = 10;
    sub_237898B2C();
    swift_bridgeObjectRetain();
    sub_237A881A8();
    LOBYTE(v72[0]) = 11;
    v69 = v73;
    v70 = (uint64_t)v74;
    v71 = v75;
    v118 = v76;
    v45 = v77;
    v46 = v78;
    v47 = v79;
    sub_2378884CC(v73, (uint64_t)v74, v75);
    sub_237A881A8();
    v23 = v73;
    LOBYTE(v73) = 12;
    v67 = (uint64_t)v74;
    v68 = v23;
    v65 = v76;
    v66 = v75;
    v64 = v77;
    v24 = v78;
    v25 = v79;
    sub_2378884CC(v23, (uint64_t)v74, v75);
    v43 = sub_237A8819C();
    v44 = v26;
    v115 = v26 & 1;
    LOBYTE(v73) = 13;
    v42 = sub_237A8816C();
    v54 = v27;
    v113 = 14;
    swift_bridgeObjectRetain();
    v28 = sub_237A8816C();
    v40 = v29;
    v41 = v28;
    v49 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v72[33]) = v44 & 1;
    LOBYTE(v72[0]) = v10;
    v72[1] = v11;
    v72[2] = v12;
    v72[3] = v13;
    v72[4] = v14;
    v72[5] = v51;
    v72[6] = v50;
    v72[7] = v52;
    v72[8] = v56;
    v72[9] = v57;
    v72[10] = v58;
    v72[11] = v59;
    v72[12] = v61;
    v72[13] = v60;
    v72[14] = v62;
    LOBYTE(v72[15]) = v49;
    v72[16] = v48;
    v72[17] = v55;
    v72[18] = v69;
    v72[19] = v70;
    v72[20] = v71;
    v72[21] = v118;
    v72[22] = v45;
    v72[23] = v46;
    v72[24] = v47;
    v72[25] = v68;
    v30 = v66;
    v72[26] = v67;
    v72[27] = v66;
    v72[28] = v65;
    v72[29] = v64;
    v72[30] = v24;
    v38 = v24;
    v39 = v25;
    v72[31] = v25;
    v72[32] = v43;
    v72[34] = v42;
    v72[35] = v54;
    v72[36] = v41;
    v72[37] = v40;
    sub_237898B70(v72);
    swift_bridgeObjectRelease();
    sub_2378886C4(v68, v67, v30);
    sub_2378886C4(v69, v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v61;
    swift_bridgeObjectRelease();
    v32 = v59;
    swift_bridgeObjectRelease();
    v33 = v58;
    swift_bridgeObjectRelease();
    v34 = v57;
    swift_bridgeObjectRelease();
    v35 = v56;
    swift_bridgeObjectRelease();
    v36 = v55;
    swift_bridgeObjectRelease();
    memcpy(v53, v72, 0x130uLL);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
    LOBYTE(v73) = v10;
    v78 = v51;
    v79 = v50;
    v80 = v52;
    v81 = v35;
    *(_DWORD *)((char *)&v73 + 1) = v117[0];
    HIDWORD(v73) = *(_DWORD *)((char *)v117 + 3);
    v74 = (void *)v11;
    v75 = v12;
    v76 = v13;
    v77 = v14;
    v82 = v34;
    v83 = v33;
    v84 = v32;
    v85 = v31;
    v86 = v60;
    v87 = v62;
    v88 = v49;
    *(_DWORD *)v89 = *(_DWORD *)v116;
    *(_DWORD *)&v89[3] = *(_DWORD *)&v116[3];
    v90 = v48;
    v91 = v36;
    v92 = v69;
    v93 = v70;
    v94 = v71;
    v95 = v118;
    v96 = v45;
    v97 = v46;
    v98 = v47;
    v99 = v68;
    v100 = v67;
    v101 = v66;
    v102 = v65;
    v103 = v64;
    v104 = v38;
    v105 = v39;
    v106 = v43;
    v107 = v115;
    *(_DWORD *)v108 = *(_DWORD *)v114;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v114[3];
    v109 = v42;
    v110 = v54;
    v111 = v41;
    v112 = v40;
    return sub_237898CA4(&v73);
  }
}

_QWORD *sub_23789535C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DialConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237895370(_QWORD *a1)
{
  return Instrument.GaugeStyle.DialConfiguration.encode(to:)(a1);
}

uint64_t sub_237895384()
{
  _BYTE v1[72];

  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t sub_2378953C4()
{
  _BYTE v1[72];

  sub_237A885D4();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

_QWORD *sub_237895400(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237895534(a1, a2, a3, a4, &qword_25681F138, &qword_25681EC60);
}

_QWORD *sub_237895414(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F140);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237897BC8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237895520(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237895534(a1, a2, a3, a4, &qword_25681F208, &qword_25681EC80);
}

_QWORD *sub_237895534(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_237897AC0(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237895660(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2378966B4(a1, a2, a3, a4, &qword_25681F200);
}

_QWORD *sub_237895674(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237896474(a1, a2, a3, a4, &qword_25681F1B8);
}

uint64_t sub_237895680(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237895BF8(a1, a2, a3, a4, &qword_25681F168, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
}

_QWORD *sub_237895694(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F220);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237897DC0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2378957A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F218);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2378982A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2378958AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF60);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[17 * v8 + 4])
          memmove(v12, a4 + 4, 136 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_237897FB0(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2378959CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237897EC8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237895AD8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F210);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237897EC8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237895BE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237895BF8(a1, a2, a3, a4, &qword_25681F180, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_237895BF8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_237A880A0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23789818C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_237895E04(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237898394(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237895F10(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 479;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 9);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[64 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23789849C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23789601C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F150);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789A518(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237896114(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237895BF8(a1, a2, a3, a4, &qword_25681F178, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

_QWORD *sub_237896128(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4])
          memmove(v12, a4 + 4, 152 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789809C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237896250(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237895BF8(a1, a2, a3, a4, &qword_25681F1D0, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
}

char *sub_237896264(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1C8);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789A518(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23789635C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237897CD0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237896468(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237896474(a1, a2, a3, a4, &qword_25681F1A0);
}

_QWORD *sub_237896474(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2378977DC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23789657C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F170);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 480);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[60 * v8 + 4])
          memmove(v12, a4 + 4, 480 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789A424(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2378966A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2378966B4(a1, a2, a3, a4, &qword_25681F160);
}

_QWORD *sub_2378966B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789A5FC(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2378967E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F158);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23789A6EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237896904(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F188);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2378979B4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237896A28(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2378976F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_237896B34(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1B0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 31;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32])
          memmove(v13, a4 + 32, 2 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_23789760C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237896C3C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F198);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2378978C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237896D64()
{
  sub_237A88604();
  return sub_237A88604();
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV10TickColorsV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  v11 = a2[4];
  v10 = a2[5];
  v13 = a2[6];
  v14 = a1[6];
  return (sub_237875DF4(*a1, *a2) & 1) != 0
      && (sub_237875DF4(v2, v7) & 1) != 0
      && (sub_237875DF4(v4, v9) & 1) != 0
      && (sub_237875DF4(v3, v8) & 1) != 0
      && (sub_237875DF4(v6, v11) & 1) != 0
      && (sub_237875DF4(v5, v10) & 1) != 0
      && sub_237875EF0(v14, v13);
}

unint64_t sub_237896E98()
{
  unint64_t result;

  result = qword_25681F068;
  if (!qword_25681F068)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C828, &_s17DialConfigurationV10TickColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F068);
  }
  return result;
}

uint64_t sub_237896EDC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F070);
    v8 = a2();
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, char *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 result;
  char v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v3 = *(double *)(a1 + 8);
  v2 = *(double *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v91 = *(_QWORD *)(a1 + 56);
  v89 = *(_OWORD *)(a1 + 80);
  v90 = *(_OWORD *)(a1 + 64);
  v88 = *(_OWORD *)(a1 + 96);
  v87 = *(_QWORD *)(a1 + 112);
  v83 = *(unsigned __int8 *)(a1 + 120);
  v80 = *(_QWORD *)(a1 + 128);
  v82 = *(_QWORD *)(a1 + 136);
  v74 = *(void **)(a1 + 160);
  v75 = *(_QWORD *)(a1 + 144);
  v76 = *(_QWORD *)(a1 + 168);
  v77 = *(_OWORD *)(a1 + 176);
  v72 = *(_QWORD *)(a1 + 152);
  v73 = *(_QWORD *)(a1 + 192);
  v62 = *(_OWORD *)(a1 + 200);
  v63 = *(_QWORD *)(a1 + 224);
  v64 = *(_OWORD *)(a1 + 232);
  v65 = *(void **)(a1 + 216);
  v61 = *(_QWORD *)(a1 + 248);
  v53 = *(_BYTE *)(a1 + 264);
  v47 = *(_QWORD *)(a1 + 272);
  v49 = *(_QWORD *)(a1 + 256);
  v50 = *(_QWORD *)(a1 + 280);
  v43 = *(_QWORD *)(a1 + 288);
  v45 = *(_QWORD *)(a1 + 296);
  v8 = *a2;
  v10 = *((double *)a2 + 1);
  v9 = *((double *)a2 + 2);
  v12 = *((double *)a2 + 3);
  v11 = *((double *)a2 + 4);
  LOBYTE(v96) = *(_BYTE *)a1;
  v13 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)a2 + 6);
  v84 = *((_OWORD *)a2 + 4);
  v85 = *((_OWORD *)a2 + 5);
  v86 = *((_OWORD *)a2 + 6);
  LOBYTE(v92) = v8;
  v52 = a2[264];
  v15 = *((_QWORD *)a2 + 7);
  v16 = *((_QWORD *)a2 + 14);
  v17 = a2[120];
  v81 = *((_QWORD *)a2 + 17);
  v66 = *((_QWORD *)a2 + 18);
  v67 = *((_QWORD *)a2 + 19);
  v78 = (void *)*((_QWORD *)a2 + 20);
  v79 = *((_QWORD *)a2 + 16);
  v68 = *((_QWORD *)a2 + 21);
  v69 = *((_QWORD *)a2 + 22);
  v70 = *((_QWORD *)a2 + 23);
  v71 = *((_QWORD *)a2 + 24);
  v54 = *((_QWORD *)a2 + 25);
  v55 = *((_QWORD *)a2 + 26);
  v56 = *((_QWORD *)a2 + 28);
  v57 = *((_QWORD *)a2 + 29);
  v58 = *((_QWORD *)a2 + 30);
  v59 = *((_QWORD *)a2 + 31);
  v60 = (void *)*((_QWORD *)a2 + 27);
  v48 = *((_QWORD *)a2 + 32);
  v46 = *((_QWORD *)a2 + 34);
  v51 = *((_QWORD *)a2 + 35);
  v42 = *((_QWORD *)a2 + 36);
  v44 = *((_QWORD *)a2 + 37);
  v18 = InstrumentDataIdentifier.rawValue.getter();
  v20 = v19;
  if (v18 == InstrumentDataIdentifier.rawValue.getter() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    result = 0;
  }
  else
  {
    v23 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v23 & 1) == 0)
      return result;
  }
  if (v3 == v10 && v2 == v9 && v5 == v12 && v4 == v11 && v7 == v13 && v6 == v14 && v91 == v15)
  {
    v96 = v90;
    v97 = v89;
    v98 = v88;
    v99 = v87;
    v92 = v84;
    v93 = v85;
    v94 = v86;
    v95 = v16;
    v24 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV10TickColorsV2eeoiySbAI_AItFZ_0((uint64_t *)&v96, (uint64_t *)&v92);
    result = 0;
    if (v24 && ((v83 ^ v17) & 1) == 0)
    {
      if (v82)
      {
        if (!v81)
          return 0;
        if (v80 != v79 || v82 != v81)
        {
          v25 = sub_237A8840C();
          result = 0;
          if ((v25 & 1) == 0)
            return result;
        }
      }
      else if (v81)
      {
        return 0;
      }
      if (v74)
      {
        v26 = v72;
        *(_QWORD *)&v96 = v75;
        *((_QWORD *)&v96 + 1) = v72;
        *(_QWORD *)&v97 = v74;
        *((_QWORD *)&v97 + 1) = v76;
        v98 = v77;
        v99 = v73;
        if (v78)
        {
          LOBYTE(v92) = v66;
          *((_QWORD *)&v92 + 1) = v67;
          *(_QWORD *)&v93 = v78;
          *((_QWORD *)&v93 + 1) = v68;
          LOWORD(v94) = v69 & 0x101;
          *((_QWORD *)&v94 + 1) = v70;
          v95 = v71;
          sub_2378884CC(v75, v72, v74);
          v27 = v74;
          swift_bridgeObjectRetain();
          v28 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v96, (uint64_t)&v92);
          v29 = (void *)v97;
          swift_bridgeObjectRelease();

          sub_2378886C4(v75, v72, v74);
          if ((v28 & 1) == 0)
            return 0;
          goto LABEL_26;
        }
        v35 = v74;
        swift_bridgeObjectRetain();
        v30 = 0;
      }
      else
      {
        v26 = v72;
        v30 = v78;
        if (!v78)
        {
LABEL_26:
          if (v65)
          {
            v96 = v62;
            *(_QWORD *)&v97 = v65;
            *((_QWORD *)&v97 + 1) = v63;
            v98 = v64;
            v31 = v60;
            v99 = v61;
            if (v60)
            {
              LOBYTE(v92) = v54;
              *((_QWORD *)&v92 + 1) = v55;
              *(_QWORD *)&v93 = v60;
              *((_QWORD *)&v93 + 1) = v56;
              LOWORD(v94) = v57 & 0x101;
              *((_QWORD *)&v94 + 1) = v58;
              v95 = v59;
              sub_2378884CC(v62, *((uint64_t *)&v62 + 1), v65);
              v32 = v65;
              swift_bridgeObjectRetain();
              v33 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v96, (uint64_t)&v92);
              v34 = (void *)v97;
              swift_bridgeObjectRelease();

              sub_2378886C4(v62, *((uint64_t *)&v62 + 1), v65);
              if ((v33 & 1) == 0)
                return 0;
              goto LABEL_33;
            }
            v39 = v65;
            swift_bridgeObjectRetain();
          }
          else
          {
            v31 = v60;
            if (!v60)
            {
LABEL_33:
              if ((v53 & 1) != 0)
              {
                if (!v52)
                  return 0;
              }
              else
              {
                v40 = v52;
                if (v49 != v48)
                  v40 = 1;
                if ((v40 & 1) != 0)
                  return 0;
              }
              if (v50)
              {
                if (!v51)
                  return 0;
                if (v47 != v46 || v50 != v51)
                {
                  v41 = sub_237A8840C();
                  result = 0;
                  if ((v41 & 1) == 0)
                    return result;
                }
              }
              else if (v51)
              {
                return 0;
              }
              if (v45)
                return v44 && (v43 == v42 && v45 == v44 || (sub_237A8840C() & 1) != 0);
              return !v44;
            }
          }
          sub_2378884CC(v54, v55, v31);
          sub_2378886C4(v62, *((uint64_t *)&v62 + 1), v65);
          v36 = v54;
          v37 = v55;
          v38 = v31;
LABEL_38:
          sub_2378886C4(v36, v37, v38);
          return 0;
        }
      }
      sub_2378884CC(v66, v67, v30);
      sub_2378886C4(v75, v26, v74);
      v36 = v66;
      v37 = v67;
      v38 = v30;
      goto LABEL_38;
    }
  }
  return result;
}

char *sub_23789760C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = 2 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_2378976F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_2378977DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378978C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378979B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F190);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237897AC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237897BC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F148);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237897CD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237897DC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC90);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_237897EC8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_237897FB0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 136 * a1 + 32);
    v6 = 136 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789809C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789818C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378982A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_237898394(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789849C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 9) + 32;
    v6 = a3 + (v4 << 9);
    if (v5 >= v6 || v5 + (v4 << 9) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789858C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F43657669746361 && a2 == 0xEC00000073726F6CLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000237AAF850 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000237AAF870 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xEE0073726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AAF890 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AAF8B0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23789887C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, double))
{
  uint64_t v3;
  uint64_t v4;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  v7 = *(double *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = swift_retain();
    if ((a3(v9, v7) & 1) != 0)
      break;
    swift_release();
    if (v3 - 1 != v8)
    {
      v7 = *(double *)(a1 + 8 * v8++ + 40);
      if (v4 != v8)
        continue;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v7;
}

BOOL sub_237898970(double a1)
{
  uint64_t v1;

  return (a1 - *(double *)(*(_QWORD *)(v1 + 16) + 8))
       / (*(double *)(*(_QWORD *)(v1 + 16) + 16) - *(double *)(*(_QWORD *)(v1 + 16) + 8)) >= *(double *)(v1 + 24);
}

uint64_t sub_237898994()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2378989C0()
{
  unint64_t result;

  result = qword_25681F0B0;
  if (!qword_25681F0B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C7D8, &_s17DialConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F0B0);
  }
  return result;
}

unint64_t sub_237898A04()
{
  unint64_t result;

  result = qword_25681F0C8;
  if (!qword_25681F0C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration.TickColors, &type metadata for Instrument.GaugeStyle.DialConfiguration.TickColors);
    atomic_store(result, (unint64_t *)&qword_25681F0C8);
  }
  return result;
}

unint64_t sub_237898A48()
{
  unint64_t result;

  result = qword_25681F0D0;
  if (!qword_25681F0D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont, &type metadata for InstrumentFont);
    atomic_store(result, (unint64_t *)&qword_25681F0D0);
  }
  return result;
}

uint64_t sub_237898A8C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x23B81FA98](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237898AE8()
{
  unint64_t result;

  result = qword_25681F0E8;
  if (!qword_25681F0E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration.TickColors, &type metadata for Instrument.GaugeStyle.DialConfiguration.TickColors);
    atomic_store(result, (unint64_t *)&qword_25681F0E8);
  }
  return result;
}

unint64_t sub_237898B2C()
{
  unint64_t result;

  result = qword_25681F0F0;
  if (!qword_25681F0F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont, &type metadata for InstrumentFont);
    atomic_store(result, (unint64_t *)&qword_25681F0F0);
  }
  return result;
}

_QWORD *sub_237898B70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1[18];
  v2 = a1[19];
  v5 = (void *)a1[20];
  v7 = a1[26];
  v8 = a1[25];
  v6 = (void *)a1[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378884CC(v3, v2, v5);
  sub_2378884CC(v8, v7, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_237898CA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[18];
  v3 = a1[19];
  v5 = (void *)a1[20];
  v7 = a1[26];
  v8 = a1[25];
  v6 = (void *)a1[27];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378886C4(v2, v3, v5);
  sub_2378886C4(v8, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_237898DD8()
{
  unint64_t result;

  result = qword_25681F0F8;
  if (!qword_25681F0F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration.TickColors, &type metadata for Instrument.GaugeStyle.DialConfiguration.TickColors);
    atomic_store(result, (unint64_t *)&qword_25681F0F8);
  }
  return result;
}

unint64_t sub_237898E20()
{
  unint64_t result;

  result = qword_25681F100;
  if (!qword_25681F100)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DialConfiguration, &type metadata for Instrument.GaugeStyle.DialConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681F100);
  }
  return result;
}

uint64_t _s17DialConfigurationVwxx(uint64_t a1)
{
  void *v2;
  void *v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 160);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  v3 = *(void **)(a1 + 216);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17DialConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  v9 = *(void **)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9)
  {
    v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v12 = *(void **)(a2 + 216);
    if (v12)
      goto LABEL_3;
LABEL_5:
    v16 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v16;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v9;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v10 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = v9;
  swift_bridgeObjectRetain();
  v12 = *(void **)(a2 + 216);
  if (!v12)
    goto LABEL_5;
LABEL_3:
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v12;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  v13 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v13;
  v14 = v12;
  swift_bridgeObjectRetain();
LABEL_6:
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v17 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v17;
  v18 = *(_QWORD *)(a2 + 288);
  v19 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = v18;
  *(_QWORD *)(a1 + 296) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17DialConfigurationVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 144);
  v5 = (__int128 *)(a2 + 144);
  v6 = *(void **)(a1 + 160);
  v7 = *(_QWORD *)(a2 + 160);
  if (v6)
  {
    if (v7)
    {
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      v8 = *(void **)(a2 + 160);
      *(_QWORD *)(a1 + 160) = v8;
      v9 = v8;

      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_237889B98(a1 + 144);
      v13 = *(_OWORD *)(a2 + 160);
      v12 = *(_OWORD *)(a2 + 176);
      v14 = *v5;
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = v12;
      *v4 = v14;
    }
  }
  else if (v7)
  {
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    v10 = *(void **)(a2 + 160);
    *(_QWORD *)(a1 + 160) = v10;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v11 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *v5;
    v16 = *(_OWORD *)(a2 + 160);
    v17 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = v17;
    *v4 = v15;
  }
  v18 = (_OWORD *)(a1 + 200);
  v19 = (__int128 *)(a2 + 200);
  v20 = *(void **)(a1 + 216);
  v21 = *(_QWORD *)(a2 + 216);
  if (v20)
  {
    if (v21)
    {
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      v22 = *(void **)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v22;
      v23 = v22;

      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_237889B98(a1 + 200);
      v27 = *(_OWORD *)(a2 + 216);
      v26 = *(_OWORD *)(a2 + 232);
      v28 = *v19;
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v27;
      *(_OWORD *)(a1 + 232) = v26;
      *v18 = v28;
    }
  }
  else if (v21)
  {
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v24 = *(void **)(a2 + 216);
    *(_QWORD *)(a1 + 216) = v24;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    v25 = v24;
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *v19;
    v30 = *(_OWORD *)(a2 + 216);
    v31 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v30;
    *(_OWORD *)(a1 + 232) = v31;
    *v18 = v29;
  }
  v32 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v32;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy304_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t _s17DialConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v5 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 160);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 160);
    if (v7)
    {
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v7;

      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
      v8 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_237889B98(a1 + 144);
  }
  v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
LABEL_6:
  v10 = *(void **)(a1 + 216);
  if (!v10)
  {
LABEL_10:
    v13 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v13;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    goto LABEL_11;
  }
  v11 = *(_QWORD *)(a2 + 216);
  if (!v11)
  {
    sub_237889B98(a1 + 200);
    goto LABEL_10;
  }
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v11;

  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  v12 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v12;
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v14 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17DialConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 304))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17DialConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 304) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DialConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DialConfiguration;
}

uint64_t _s17DialConfigurationV10TickColorsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s17DialConfigurationV10TickColorsVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s17DialConfigurationV10TickColorsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s17DialConfigurationV10TickColorsVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17DialConfigurationV10TickColorsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17DialConfigurationV10TickColorsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DialConfiguration.TickColors()
{
  return &type metadata for Instrument.GaugeStyle.DialConfiguration.TickColors;
}

uint64_t _s17DialConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17DialConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_237899AFC + 4 * byte_237A8C44B[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_237899B30 + 4 * byte_237A8C446[v4]))();
}

uint64_t sub_237899B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237899B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237899B40);
  return result;
}

uint64_t sub_237899B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237899B54);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_237899B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237899B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17DialConfigurationV10CodingKeysOMa()
{
  return &_s17DialConfigurationV10CodingKeysON;
}

uint64_t _s17DialConfigurationV10TickColorsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_237899BC8 + 4 * byte_237A8C455[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_237899BFC + 4 * byte_237A8C450[v4]))();
}

uint64_t sub_237899BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237899C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237899C0CLL);
  return result;
}

uint64_t sub_237899C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237899C20);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_237899C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237899C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17DialConfigurationV10TickColorsV10CodingKeysOMa()
{
  return &_s17DialConfigurationV10TickColorsV10CodingKeysON;
}

unint64_t sub_237899C4C()
{
  unint64_t result;

  result = qword_25681F108;
  if (!qword_25681F108)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C6F8, &_s17DialConfigurationV10TickColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F108);
  }
  return result;
}

unint64_t sub_237899C94()
{
  unint64_t result;

  result = qword_25681F110;
  if (!qword_25681F110)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C7B0, &_s17DialConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F110);
  }
  return result;
}

unint64_t sub_237899CDC()
{
  unint64_t result;

  result = qword_25681F118;
  if (!qword_25681F118)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C720, &_s17DialConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F118);
  }
  return result;
}

unint64_t sub_237899D24()
{
  unint64_t result;

  result = qword_25681F120;
  if (!qword_25681F120)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C748, &_s17DialConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F120);
  }
  return result;
}

unint64_t sub_237899D6C()
{
  unint64_t result;

  result = qword_25681F128;
  if (!qword_25681F128)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C668, &_s17DialConfigurationV10TickColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F128);
  }
  return result;
}

unint64_t sub_237899DB4()
{
  unint64_t result;

  result = qword_25681F130;
  if (!qword_25681F130)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8C690, &_s17DialConfigurationV10TickColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F130);
  }
  return result;
}

uint64_t sub_237899DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x416D756D696E696DLL && a2 == 0xEC000000656C676ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x416D756D6978616DLL && a2 == 0xEC000000656C676ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AAF8D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAF8F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAF910 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F436B636974 && a2 == 0xEA00000000007372 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C6465654E736168 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x67616D496E6F6369 && a2 == 0xED0000656D614E65 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000237AAF930 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000237AAF950 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000237AAF970 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAF9A0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAF9C0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_23789A424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 480 * a1 + 32;
    v6 = a3 + 480 * v4;
    if (v5 >= v6 || v5 + 480 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

char *sub_23789A518(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789A5FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789A6EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t LayerHostView.body.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  type metadata accessor for WrapLayer();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v2 = v1;
  return sub_237A86870();
}

uint64_t type metadata accessor for WrapLayer()
{
  return objc_opt_self();
}

uint64_t sub_23789A874()
{
  return sub_237A870EC();
}

uint64_t sub_23789A88C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  type metadata accessor for WrapLayer();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v2 = v1;
  return sub_237A86870();
}

id sub_23789A9C0()
{
  void *v0;
  id result;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  result = objc_msgSend(v0, sel_sublayers);
  if (result)
  {
    v2 = result;
    sub_23789AD40();
    v3 = sub_237A87A94();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      result = (id)sub_237A880C4();
      v4 = (uint64_t)result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        v5 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0)
            v6 = (id)MEMORY[0x23B81EBEC](v5, v3);
          else
            v6 = *(id *)(v3 + 8 * v5 + 32);
          v7 = v6;
          ++v5;
          objc_msgSend(v0, sel_bounds);
          objc_msgSend(v7, sel_setFrame_);

        }
        while (v4 != v5);
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

id sub_23789AC04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WrapLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23789AC38(void *a1, id a2)
{
  id v4;

  v4 = objc_msgSend(a2, sel_superlayer);

  if (!v4)
    objc_msgSend(a1, sel_addSublayer_, a2);
}

uint64_t sub_23789ACA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23789ACC8(void *a1)
{
  uint64_t v1;

  sub_23789AC38(a1, *(id *)(v1 + 16));
}

uint64_t sub_23789ACD0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LayerHostView()
{
  return &type metadata for LayerHostView;
}

unint64_t sub_23789ACF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681F250;
  if (!qword_25681F250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F258);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEBEC0], v1);
    atomic_store(result, (unint64_t *)&qword_25681F250);
  }
  return result;
}

unint64_t sub_23789AD40()
{
  unint64_t result;

  result = qword_25681F260;
  if (!qword_25681F260)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25681F260);
  }
  return result;
}

CarPlayAssetUI::VehicleType_optional __swiftcall VehicleType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::VehicleType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static VehicleType.allCases.getter()
{
  return &unk_250969A38;
}

uint64_t VehicleType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 4539209;
  else
    return 22085;
}

uint64_t sub_23789AE18(char *a1, char *a2)
{
  return sub_2378D5650(*a1, *a2);
}

uint64_t sub_23789AE24()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23789AE90()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23789AED8()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::VehicleType_optional sub_23789AF40(Swift::String *a1)
{
  return VehicleType.init(rawValue:)(*a1);
}

void sub_23789AF4C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 22085;
  if (*v1)
    v2 = 4539209;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_23789AF78(_QWORD *a1@<X8>)
{
  *a1 = &unk_250969A60;
}

uint64_t sub_23789AF88()
{
  sub_23789B230();
  return sub_237A87A34();
}

uint64_t sub_23789AFE4()
{
  sub_23789B230();
  return sub_237A879EC();
}

void static VehicleType.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_23789B040()
{
  unint64_t result;

  result = qword_25681F268;
  if (!qword_25681F268)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VehicleType, &type metadata for VehicleType);
    atomic_store(result, (unint64_t *)&qword_25681F268);
  }
  return result;
}

unint64_t sub_23789B088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681F270;
  if (!qword_25681F270)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F278);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25681F270);
  }
  return result;
}

unint64_t sub_23789B0D8()
{
  unint64_t result;

  result = qword_25681F280;
  if (!qword_25681F280)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VehicleType, &type metadata for VehicleType);
    atomic_store(result, (unint64_t *)&qword_25681F280);
  }
  return result;
}

unint64_t sub_23789B120()
{
  unint64_t result;

  result = qword_25681F288;
  if (!qword_25681F288)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VehicleType, &type metadata for VehicleType);
    atomic_store(result, (unint64_t *)&qword_25681F288);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VehicleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23789B1B0 + 4 * byte_237A8C8ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23789B1E4 + 4 * asc_237A8C8E8[v4]))();
}

uint64_t sub_23789B1E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23789B1EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23789B1F4);
  return result;
}

uint64_t sub_23789B200(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23789B208);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23789B20C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23789B214(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VehicleType()
{
  return &type metadata for VehicleType;
}

unint64_t sub_23789B230()
{
  unint64_t result;

  result = qword_25681F2C0;
  if (!qword_25681F2C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VehicleType, &type metadata for VehicleType);
    atomic_store(result, (unint64_t *)&qword_25681F2C0);
  }
  return result;
}

void TrackingView.init(identifier:cornerRadius:)(_QWORD *a1@<X8>, double a2@<D0>)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5650]), sel_init);
  v5 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setIdentifier_, v5);

  objc_msgSend(v4, sel_setCornerRadius_, a2);
  *a1 = v4;
}

id TrackingView.body.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_23789B324()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_23789B334@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

ValueMetadata *type metadata accessor for TrackingView()
{
  return &type metadata for TrackingView;
}

unint64_t sub_23789B354()
{
  unint64_t result;

  result = qword_25681F2C8;
  if (!qword_25681F2C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayerHostView, &type metadata for LayerHostView);
    atomic_store(result, (unint64_t *)&qword_25681F2C8);
  }
  return result;
}

BOOL static PresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PresentationStyle.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t PresentationStyle.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

void static AppWidgetInfo.media.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000237AAE480;
  a1[2] = 0;
  a1[3] = 0;
}

double static WidgetInfo.vitals.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_237A8CAC0;
  *(_QWORD *)(a1 + 16) = 0xD00000000000001ALL;
  *(_QWORD *)(a1 + 24) = 0x8000000237AAFB70;
  *(_QWORD *)(a1 + 32) = 0xD000000000000013;
  *(_QWORD *)(a1 + 40) = 0x8000000237AAFB90;
  result = 2.0;
  *(_OWORD *)(a1 + 48) = xmmword_237A8CAD0;
  *(_QWORD *)(a1 + 64) = 0x8000000237AAFBB0;
  return result;
}

double static WidgetInfo.home.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000021;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAFBD0;
  *(_QWORD *)(a1 + 16) = 0xD000000000000025;
  *(_QWORD *)(a1 + 24) = 0x8000000237AAFC00;
  result = 2.21366487e214;
  *(_OWORD *)(a1 + 32) = xmmword_237A8CAE0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0x4000000000000000;
  return result;
}

void static WidgetInfo.reminders.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x8000000237AAFC30;
  a1[2] = 0xD000000000000023;
  a1[3] = 0x8000000237AAFC50;
  a1[4] = 0xD000000000000013;
  a1[5] = 0x8000000237AAFC80;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.findMy.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000022;
  a1[1] = 0x8000000237AAFCA0;
  a1[2] = 0xD000000000000022;
  a1[3] = 0x8000000237AAFCA0;
  a1[4] = 0xD000000000000010;
  a1[5] = 0x8000000237AAFCD0;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.photos.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000002CLL;
  a1[1] = 0x8000000237AAFCF0;
  a1[2] = 0xD00000000000002CLL;
  a1[3] = 0x8000000237AAFCF0;
  a1[4] = 0xD000000000000019;
  a1[5] = 0x8000000237AAFD20;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.batteries.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000237AAFD40;
  a1[2] = 0xD000000000000033;
  a1[3] = 0x8000000237AAFD60;
  a1[4] = 0xD000000000000013;
  a1[5] = 0x8000000237AAFDA0;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.clock.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x8000000237AAFDC0;
  a1[2] = 0xD000000000000026;
  a1[3] = 0x8000000237AAFDE0;
  a1[4] = 0xD000000000000015;
  a1[5] = 0x8000000237AAFE10;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.weatherForecast.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x8000000237AAFE30;
  a1[2] = 0xD000000000000018;
  a1[3] = 0x8000000237AAE3A0;
  a1[4] = 0xD000000000000011;
  a1[5] = 0x8000000237AAE380;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.weather.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000237AAE380;
  a1[2] = 0xD000000000000018;
  a1[3] = 0x8000000237AAE3A0;
  a1[4] = 0xD000000000000011;
  a1[5] = 0x8000000237AAE380;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

double static WidgetInfo.charge.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000013;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAE3C0;
  *(_QWORD *)(a1 + 16) = 0xD000000000000012;
  *(_QWORD *)(a1 + 24) = 0x8000000237AAE3E0;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.trip.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000011;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAE400;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.tires.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000019;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAE420;
  result = 2.21366487e214;
  *(_OWORD *)(a1 + 16) = xmmword_237A8CAF0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.carBodyStatus.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000015;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAE440;
  *(_QWORD *)(a1 + 16) = 0xD000000000000017;
  *(_QWORD *)(a1 + 24) = 0x8000000237AAE460;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.adasView.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 1.38080632e267;
  *(_OWORD *)a1 = xmmword_237A8CB00;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0x8000000000000000;
  return result;
}

double static WidgetInfo.media.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xD000000000000012;
  *(_QWORD *)(a1 + 8) = 0x8000000237AAE480;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

void *static WidgetInfo.allCases.getter()
{
  return &unk_250969A88;
}

void *static WidgetInfo.defaultWidgets.getter()
{
  return &unk_250969CA0;
}

void *static WidgetInfo.defaultMapsMediaWidgets.getter()
{
  return &unk_250969D98;
}

void WidgetInfo.preferredPresentation.getter(_BYTE *a1@<X8>)
{
  char v2;
  _QWORD v3[2];
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3[0] = 0xD000000000000019;
  v3[1] = 0x8000000237AAE420;
  v4 = xmmword_237A8CAF0;
  v5 = 0u;
  v6 = 0u;
  v7 = 0;
  _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0((uint64_t)v3);
  *a1 = v2 & 1;
}

double static WidgetInfo.getWidgetInfo(requestContentIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1 == 0x7765695673616461 && a2 == 0xE800000000000000;
  if (v4 || (v5 = a2, v6 = a1, (sub_237A8840C() & 1) != 0))
  {
    result = 1.38080632e267;
    *(_OWORD *)a3 = xmmword_237A8CB00;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_QWORD *)(a3 + 56) = 0;
    *(_QWORD *)(a3 + 64) = 0;
    *(_QWORD *)(a3 + 48) = 0x8000000000000000;
    return result;
  }
  v25 = (uint64_t *)a3;
  v8 = 7;
  v9 = &qword_250969AB8;
  v26 = v6;
  do
  {
    v10 = *(v9 - 2);
    v11 = *(v9 - 1);
    v12 = *v9;
    v13 = v9[1];
    v15 = v9[2];
    v14 = v9[3];
    v16 = v9[4];
    v17 = v9[5];
    v18 = v9[6];
    v19 = *v9;
    v20 = v13;
    if (v16 >> 62)
    {
      if (v16 >> 62 != 1)
        goto LABEL_8;
      v19 = v9[5];
      v20 = v9[6];
    }
    if (v20)
    {
      if (v19 == v6 && v20 == v5)
        goto LABEL_18;
      v27 = v9[1];
      v28 = *v9;
      v22 = v5;
      v23 = *(v9 - 2);
      v24 = sub_237A8840C();
      v13 = v27;
      v12 = v28;
      v10 = v23;
      v5 = v22;
      v6 = v26;
      if ((v24 & 1) != 0)
      {
LABEL_18:
        *v25 = v10;
        v25[1] = v11;
        v25[2] = v12;
        v25[3] = v13;
        v25[4] = v15;
        v25[5] = v14;
        v25[6] = v16;
        v25[7] = v17;
        v25[8] = v18;
        sub_23788F390(v10, v11, v12, v13, v15, v14, v16);
        return result;
      }
    }
LABEL_8:
    v9 += 9;
    --v8;
  }
  while (v8);
  result = 0.0;
  *((_OWORD *)v25 + 1) = 0u;
  *((_OWORD *)v25 + 2) = 0u;
  *(_OWORD *)v25 = 0u;
  v25[7] = 0;
  v25[8] = 0;
  v25[6] = 0x1FFFFFFFELL;
  return result;
}

void sub_23789BAD4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250969A88;
}

unint64_t sub_23789BAE8()
{
  unint64_t result;

  result = qword_25681F2D0;
  if (!qword_25681F2D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for PresentationStyle, &type metadata for PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_25681F2D0);
  }
  return result;
}

unint64_t sub_23789BB30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681F2D8;
  if (!qword_25681F2D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F2E0);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25681F2D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23789BBC8 + 4 * byte_237A8CB15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23789BBFC + 4 * byte_237A8CB10[v4]))();
}

uint64_t sub_23789BBFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23789BC04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23789BC0CLL);
  return result;
}

uint64_t sub_23789BC18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23789BC20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23789BC24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23789BC2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PresentationStyle()
{
  return &type metadata for PresentationStyle;
}

uint64_t sub_23789BC48(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v26 = MEMORY[0x24BEE4AF8];
  sub_2379D6444(0, v1, 0);
  v2 = v26;
  result = sub_23789DE64(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v22 = v1;
  v23 = v5;
  v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 112 * v6);
    v13 = v12[1];
    v25 = *v12;
    v15 = *(_QWORD *)(v26 + 16);
    v14 = *(_QWORD *)(v26 + 24);
    result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1)
      result = sub_2379D6444(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v26 + 16) = v15 + 1;
    v16 = v26 + 16 * v15;
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v16 + 40) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v17 = *(_QWORD *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Theme.ColorOverride.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  sub_237A885E0();
  if (v4 < 0)
    return sub_237876C74(a1, v3);
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A885E0();
}

uint64_t sub_23789BF10()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F6C6F63;
  else
    return 0x6564616873;
}

uint64_t sub_23789BF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378A112C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23789BF60()
{
  sub_23789E234();
  return sub_237A88718();
}

uint64_t sub_23789BF88()
{
  sub_23789E234();
  return sub_237A88724();
}

uint64_t sub_23789BFB0()
{
  sub_23789E278();
  return sub_237A88718();
}

uint64_t sub_23789BFD8()
{
  sub_23789E278();
  return sub_237A88724();
}

uint64_t sub_23789C000()
{
  return 0x6564616873;
}

uint64_t sub_23789C014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6564616873 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23789C0A0()
{
  sub_23789E2BC();
  return sub_237A88718();
}

uint64_t sub_23789C0C8()
{
  sub_23789E2BC();
  return sub_237A88724();
}

uint64_t Theme.ColorOverride.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F2E8);
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F2F0);
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F2F8);
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v21 = *v1;
  v19 = v1[2];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23789E234();
  sub_237A886B8();
  if (v12 < 0)
  {
    LOBYTE(v24) = 1;
    sub_23789E278();
    v15 = v23;
    sub_237A88220();
    v24 = v21;
    sub_23787AAA0();
    v16 = v18;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v15);
  }
  else
  {
    LOBYTE(v24) = 0;
    sub_23789E2BC();
    v13 = v23;
    sub_237A88220();
    v24 = v21;
    v25 = v12 & 1;
    v26 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC00);
    sub_23788293C(&qword_25681EBF8, (uint64_t)&protocol conformance descriptor for <> Pair<A, B>);
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v13);
  }
}

uint64_t Theme.ColorOverride.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_237A885D4();
  sub_237A885E0();
  if (v2 < 0)
  {
    sub_237876C74((uint64_t)v4, v1);
  }
  else
  {
    ColorSet.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A885E0();
  }
  return sub_237A88610();
}

uint64_t Theme.ColorOverride.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a2;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F318);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F320);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F328);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_23789E234();
  v13 = v36;
  sub_237A88688();
  if (!v13)
  {
    v26 = v5;
    v27 = v7;
    v14 = v29;
    v15 = v30;
    v36 = v9;
    v16 = v31;
    v17 = sub_237A881FC();
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      if ((*(_BYTE *)(v17 + 32) & 1) != 0)
      {
        LOBYTE(v33) = 1;
        sub_23789E278();
        sub_237A88154();
        sub_23787ABD0();
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        v18 = 0;
        v19 = v33;
        v20 = 0x8000000000000000;
      }
      else
      {
        LOBYTE(v33) = 0;
        sub_23789E2BC();
        v24 = v27;
        sub_237A88154();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC00);
        sub_23788293C(&qword_25681EC28, (uint64_t)&protocol conformance descriptor for <> Pair<A, B>);
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v4);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        v19 = v33;
        v20 = v34;
        v18 = v35;
      }
      *v16 = v19;
      v16[1] = v20;
      v16[2] = v18;
    }
    else
    {
      v21 = sub_237A87FB0();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
      *v23 = &type metadata for Theme.ColorOverride;
      sub_237A88160();
      sub_237A87F98();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v32);
}

uint64_t sub_23789C804@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Theme.ColorOverride.init(from:)(a1, a2);
}

uint64_t sub_23789C818(_QWORD *a1)
{
  return Theme.ColorOverride.encode(to:)(a1);
}

uint64_t sub_23789C830(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  sub_237A885E0();
  if (v4 < 0)
    return sub_237876C74(a1, v3);
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A885E0();
}

uint64_t sub_23789C8E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_237A885D4();
  sub_237A885E0();
  if (v2 < 0)
  {
    sub_237876C74((uint64_t)v4, v1);
  }
  else
  {
    ColorSet.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A885E0();
  }
  return sub_237A88610();
}

uint64_t Theme.LayoutStyle.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.id.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.id.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.colorSetOverrides.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultPaletteID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultPaletteID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.defaultPaletteID.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.defaultWallpaperID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultWallpaperID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.defaultWallpaperID.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.paletteIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23789BC48(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Theme.LayoutStyle.init(id:defaultPaletteID:defaultWallpaperID:colorSetOverrides:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;

  v8 = *a1;
  v7 = a1[1];
  v10 = *a2;
  v9 = a2[1];
  v12 = *a3;
  v11 = a3[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_23789BC48(a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v14 = sub_2379D3D64(v10, v9, v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a5 = v8;
    a5[1] = v7;
    a5[2] = a4;
    a5[3] = v10;
    a5[4] = v9;
    a5[5] = v12;
    a5[6] = v11;
  }
  else
  {
    sub_237A87F44();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87854();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

uint64_t Theme.LayoutStyle.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237878474(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t Theme.LayoutStyle.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237878474((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23789CE10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23789CE38 + 4 * byte_237A8CBE0[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_23789CE38()
{
  return 0xD000000000000011;
}

uint64_t sub_23789CE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237878474(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23789CF4C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237878474((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_23789D024()
{
  unsigned __int8 *v0;

  return sub_23789CE10(*v0);
}

uint64_t sub_23789D02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378A120C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23789D050()
{
  sub_23789E300();
  return sub_237A88718();
}

uint64_t sub_23789D078()
{
  sub_23789E300();
  return sub_237A88724();
}

uint64_t Theme.LayoutStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[3];
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD *v70;

  v70 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F330);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23789E300();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v53 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
  LOBYTE(v61[0]) = 0;
  sub_23789E470(&qword_25681F340, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A881F0();
  v9 = v54;
  v52 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  LOBYTE(v61[0]) = 2;
  sub_23789E470(&qword_25681EA08, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v49 = v54;
  v50 = v9;
  v10 = *((_QWORD *)&v54 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F348);
  LOBYTE(v61[0]) = 3;
  sub_23789E470(&qword_25681F350, &qword_25681F348, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  swift_bridgeObjectRetain();
  v51 = 0;
  sub_237A881F0();
  v11 = *((_QWORD *)&v54 + 1);
  v48 = v54;
  LOBYTE(v54) = 1;
  swift_bridgeObjectRetain();
  sub_237A88148();
  v44 = v7;
  v45 = v11;
  v46 = v10;
  v47 = *((_QWORD *)&v9 + 1);
  __swift_project_boxed_opaque_existential_2Tm(v61, v62);
  v12 = sub_237A882F8();
  v13 = (_QWORD *)MEMORY[0x24BEE4B00];
  if ((v12 & 1) != 0)
  {
    v14 = (uint64_t)a1;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v52);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v61);
    v15 = v70;
    v17 = v46;
    v16 = v47;
    *v70 = v50;
    v15[1] = v16;
    v18 = v49;
    v15[2] = v13;
    v15[3] = v18;
    v19 = v48;
    v15[4] = v17;
    v15[5] = v19;
    v15[6] = v45;
    __swift_destroy_boxed_opaque_existential_2Tm(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v14 = (uint64_t)a1;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v61, v62);
    sub_23789E344();
    sub_237A882EC();
    v67 = v58;
    v68 = v59;
    v69 = v60;
    v63 = v54;
    v64 = v55;
    v65 = v56;
    v66 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F360);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v61, v62);
    sub_2378A05C4(&qword_25681F368, (uint64_t (*)(void))sub_23787AB8C, (uint64_t (*)(void))sub_23789E388, MEMORY[0x24BEE04E0]);
    sub_237A882EC();
    v22 = v13;
    v23 = v54;
    sub_237883894((uint64_t)&v63);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v54 = v22;
    v26 = sub_2378D2E58(&v63);
    v27 = v22[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    if (v22[3] < v29)
    {
      v30 = v25;
      sub_2378C9030(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_2378D2E58(&v63);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_22;
      v26 = v31;
      goto LABEL_14;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = v25;
      sub_2378C4D24();
LABEL_14:
      v25 = v30;
    }
    v33 = (_QWORD *)v54;
    if ((v25 & 1) != 0)
    {
      v20 = v23;
      v13 = (_QWORD *)v54;
      v21 = *(_QWORD *)(v54 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v26) = v20;
    }
    else
    {
      *(_QWORD *)(v54 + 8 * (v26 >> 6) + 64) |= 1 << v26;
      v34 = (_OWORD *)(v33[6] + 112 * v26);
      v36 = v64;
      v35 = v65;
      *v34 = v63;
      v34[1] = v36;
      v34[2] = v35;
      v37 = v66;
      v38 = v67;
      v39 = v69;
      v34[5] = v68;
      v34[6] = v39;
      v34[3] = v37;
      v34[4] = v38;
      *(_QWORD *)(v33[7] + 8 * v26) = v23;
      v40 = v33[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_21;
      v13 = v33;
      v33[2] = v42;
      sub_237883894((uint64_t)&v63);
    }
    swift_bridgeObjectRelease();
    sub_23789E3CC((uint64_t)&v63);
    sub_23789E3CC((uint64_t)&v63);
    __swift_project_boxed_opaque_existential_2Tm(v61, v62);
    if ((sub_237A882F8() & 1) != 0)
      goto LABEL_6;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t Theme.LayoutStyle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD *v69;
  char v70[8];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F378);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD **)v1;
  v8 = *(_QWORD *)(v1 + 8);
  v53 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD **)(v1 + 24);
  v54 = *(_QWORD **)(v1 + 32);
  v55 = v9;
  v52 = *(_QWORD **)(v1 + 40);
  v51 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23789E300();
  sub_237A886B8();
  v56 = v7;
  v57 = v8;
  v10 = v3;
  v70[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
  sub_23789E470(&qword_25681F380, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v11 = v6;
  v12 = v73;
  sub_237A882B0();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = v51;
  v15 = v52;
  v16 = v53;
  v50 = v4;
  v56 = v55;
  v57 = (uint64_t)v54;
  v70[0] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
  sub_23789E470(&qword_25681E9D0, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A882B0();
  v56 = v15;
  v57 = v14;
  v70[0] = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F348);
  sub_23789E470(&qword_25681F388, &qword_25681F348, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A882B0();
  v17 = v50;
  LOBYTE(v56) = 1;
  sub_237A88214();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v18 = sub_2378CD470(v16);
  swift_bridgeObjectRelease();
  v56 = v18;
  sub_2378A04E0(&v56);
  swift_bridgeObjectRelease();
  swift_release_n();
  v19 = v56;
  v20 = v56[2];
  if (v20)
  {
    v37 = v6;
    v38 = v10;
    swift_retain();
    v36 = v19;
    v21 = v19 + 9;
    while (1)
    {
      v44 = 0;
      v39 = v20;
      v22 = *(v21 - 3);
      v73 = *(v21 - 2);
      v23 = *(v21 - 1);
      v24 = *v21;
      v25 = v21[1];
      v26 = v21[2];
      v27 = *((unsigned __int8 *)v21 + 24);
      v28 = v21[5];
      v40 = v21[6];
      v29 = (_QWORD *)v21[8];
      v54 = (_QWORD *)v21[9];
      v55 = v29;
      v30 = *((_BYTE *)v21 + 56);
      v31 = v21[4];
      v32 = *(v21 - 4);
      v56 = (_QWORD *)*(v21 - 5);
      v57 = v32;
      v58 = v22;
      v59 = v73;
      v60 = v23;
      v61 = v24;
      v62 = v25;
      v63 = v26;
      v64 = v27;
      v65 = v31;
      v66 = v28;
      v67 = v40;
      v68 = v30;
      v69 = v29;
      v42 = v71;
      v43 = v72;
      v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v70, v71);
      v45 = v32;
      swift_bridgeObjectRetain();
      v46 = v22;
      swift_bridgeObjectRetain();
      v47 = v23;
      v33 = v23;
      v34 = v54;
      v48 = v24;
      v49 = v25;
      v51 = v26;
      LODWORD(v52) = v27;
      sub_23787978C(v73, v33, v24, v25, v26, v27);
      v53 = v28;
      sub_2378797D4(v28);
      sub_2378A0580();
      swift_retain();
      swift_bridgeObjectRetain();
      v35 = v44;
      sub_237A88304();
      if (v35)
        break;
      v56 = v34;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v70, v71);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681F360);
      sub_2378A05C4(&qword_25681F398, (uint64_t (*)(void))sub_23787AA5C, (uint64_t (*)(void))sub_2378A0640, MEMORY[0x24BEE04C0]);
      sub_237A88304();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v73, v47, v48, v49, v51, (char)v52);
      sub_23787A14C(v53);
      swift_bridgeObjectRelease();
      swift_release();
      v21 += 15;
      v20 = v39 - 1;
      if (v39 == 1)
      {
        swift_release();
        v10 = v38;
        v11 = v37;
        v17 = v50;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237876B84(v73, v47, v48, v49, v51, (char)v52);
    sub_23787A14C(v53);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
  }
  else
  {
LABEL_8:
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v10);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v70);
}

uint64_t sub_23789DE3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Theme.LayoutStyle.init(from:)(a1, a2);
}

uint64_t sub_23789DE50(_QWORD *a1)
{
  return Theme.LayoutStyle.encode(to:)(a1);
}

uint64_t sub_23789DE64(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s14CarPlayAssetUI5ThemeO11LayoutStyleV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_237A8840C(), result = 0, (v12 & 1) != 0))
  {
    if ((sub_2379B6854(v2, v8) & 1) != 0)
    {
      if (v3 == v7 && v4 == v10 || (v14 = sub_237A8840C(), result = 0, (v14 & 1) != 0))
      {
        if (v5 == v9 && v6 == v11)
          return 1;
        else
          return sub_237A8840C();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO13ColorOverrideO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      v8 = ColorSet.ColorID.rawValue.getter();
      v10 = v9;
      if (v8 == ColorSet.ColorID.rawValue.getter() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        sub_23787D110(v3, v2);
        sub_23787D110(v6, v5);
        if (v4 == v7)
          return 1;
      }
      else
      {
        v13 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23787D110(v3, v2);
        sub_23787D110(v6, v5);
        if ((v13 & 1) != 0 && v4 == v7)
          return 1;
      }
      return 0;
    }
LABEL_9:
    sub_23787D104(v6, v5);
    sub_23787D110(v3, v2);
    sub_23787D110(v6, v5);
    return 0;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  sub_23787D104(*a2, a2[1]);
  sub_23787D104(v3, v2);
  sub_23787D104(v6, v5);
  sub_23787D104(v3, v2);
  v14 = sub_2379B668C(v3, v6);
  sub_23787D110(v3, v2);
  sub_23787D110(v6, v5);
  sub_23787D110(v6, v5);
  sub_23787D110(v3, v2);
  return v14 & 1;
}

unint64_t sub_23789E234()
{
  unint64_t result;

  result = qword_25681F300;
  if (!qword_25681F300)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D200, &_s13ColorOverrideO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F300);
  }
  return result;
}

unint64_t sub_23789E278()
{
  unint64_t result;

  result = qword_25681F308;
  if (!qword_25681F308)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D1B0, &_s13ColorOverrideO15ColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F308);
  }
  return result;
}

unint64_t sub_23789E2BC()
{
  unint64_t result;

  result = qword_25681F310;
  if (!qword_25681F310)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D160, &_s13ColorOverrideO15ShadeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F310);
  }
  return result;
}

unint64_t sub_23789E300()
{
  unint64_t result;

  result = qword_25681F338;
  if (!qword_25681F338)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D110, &_s11LayoutStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F338);
  }
  return result;
}

unint64_t sub_23789E344()
{
  unint64_t result;

  result = qword_25681F358;
  if (!qword_25681F358)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet, &type metadata for ColorSet);
    atomic_store(result, (unint64_t *)&qword_25681F358);
  }
  return result;
}

unint64_t sub_23789E388()
{
  unint64_t result;

  result = qword_25681F370;
  if (!qword_25681F370)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorOverride, &type metadata for Theme.ColorOverride);
    atomic_store(result, (unint64_t *)&qword_25681F370);
  }
  return result;
}

uint64_t sub_23789E3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(v2, v3, v4, v5, v6, v8);
  sub_23787A14C(v7);
  swift_release();
  return a1;
}

uint64_t sub_23789E470(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BEE0D38];
    v7[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B81FA98](a3, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23789E4D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t result;
  char *v21;
  char v23;
  char *v24;
  char v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  void *__dsta;
  char *__dstb;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  const void *v71;
  char *v72;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 120;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 120;
  v72 = __src;
  v71 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -119)
    {
      if (__dst != a2 || &a2[120 * v10] <= __dst)
        memmove(__dst, a2, 120 * v10);
      v17 = &v4[120 * v10];
      v70 = v17;
      v72 = v5;
      if (v6 < v5 && v9 >= 120)
      {
        __dstb = (char *)(a3 - 120);
        v18 = v5;
        do
        {
          v19 = *(v17 - 56);
          v42 = *((_QWORD *)v17 - 5);
          v45 = *((_QWORD *)v17 - 12);
          v18 -= 120;
          v36 = *((_QWORD *)v18 + 4);
          v37 = *((_QWORD *)v18 + 3);
          v34 = *((_QWORD *)v18 + 5);
          v32 = *((_QWORD *)v18 + 6);
          v28 = v18[64];
          v29 = *((_QWORD *)v18 + 10);
          v30 = *((_QWORD *)v18 + 7);
          v66 = *((_QWORD *)v17 - 11);
          v67 = *((_QWORD *)v17 - 10);
          v68 = *((_QWORD *)v17 - 9);
          v69 = *((_QWORD *)v17 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23787978C(v45, v66, v67, v68, v69, v19);
          sub_2378797D4(v42);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23787978C(v37, v36, v34, v32, v30, v28);
          sub_2378797D4(v29);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v57 == v48 && v58 == v49)
            v23 = 0;
          else
            v23 = sub_237A8840C();
          v24 = __dstb + 120;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v50, v51, v52, v53, v54, v55);
          sub_23787A14C(v56);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v59, v60, v61, v62, v63, v64);
          sub_23787A14C(v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v37, v36, v34, v32, v30, v28);
          sub_23787A14C(v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v45, v66, v67, v68, v69, v19);
          sub_23787A14C(v42);
          swift_bridgeObjectRelease();
          swift_release();
          if ((v23 & 1) != 0)
          {
            if (v24 != v5 || __dstb >= v5)
              memmove(__dstb, v18, 0x78uLL);
            v72 = v18;
          }
          else
          {
            v70 = v17 - 120;
            if (v24 < v17 || __dstb >= v17 || v24 != v17)
              memmove(__dstb, v17 - 120, 0x78uLL);
            v18 = v5;
            v17 -= 120;
          }
          if (v17 <= v4)
            break;
          __dstb -= 120;
          v5 = v18;
        }
        while (v18 > v6);
      }
      goto LABEL_46;
    }
  }
  else if (v7 >= -119)
  {
    if (__dst != __src || &__src[120 * v8] <= __dst)
      memmove(__dst, __src, 120 * v8);
    v21 = &v4[120 * v8];
    v70 = v21;
    if ((unint64_t)v5 < a3 && v7 >= 120)
    {
      do
      {
        v26 = v6;
        v11 = *((_QWORD *)v5 + 3);
        v12 = *((_QWORD *)v5 + 4);
        v13 = *((_QWORD *)v5 + 5);
        __dsta = (void *)*((_QWORD *)v5 + 6);
        v44 = *((_QWORD *)v5 + 7);
        v43 = v5[64];
        v14 = *((_QWORD *)v5 + 10);
        v41 = *((_QWORD *)v4 + 3);
        v39 = *((_QWORD *)v4 + 5);
        v40 = *((_QWORD *)v4 + 4);
        v38 = *((_QWORD *)v4 + 6);
        v31 = v4[64];
        v33 = *((_QWORD *)v4 + 10);
        v35 = *((_QWORD *)v4 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23787978C(v11, v12, v13, (uint64_t)__dsta, v44, v43);
        sub_2378797D4(v14);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23787978C(v41, v40, v39, v38, v35, v31);
        sub_2378797D4(v33);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        v27 = v4;
        if (v57 == v48 && v58 == v49)
          v25 = 0;
        else
          v25 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_237876B84(v50, v51, v52, v53, v54, v55);
        sub_23787A14C(v56);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_237876B84(v59, v60, v61, v62, v63, v64);
        sub_23787A14C(v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_237876B84(v41, v40, v39, v38, v35, v31);
        sub_23787A14C(v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_237876B84(v11, v12, v13, (uint64_t)__dsta, v44, v43);
        sub_23787A14C(v14);
        swift_bridgeObjectRelease();
        swift_release();
        if ((v25 & 1) != 0)
        {
          v15 = v5 + 120;
          v16 = v26;
          if (v26 < v5 || v26 >= v15 || v26 != v5)
            memmove(v26, v5, 0x78uLL);
        }
        else
        {
          v16 = v26;
          v15 = v5;
          if (v26 != v4)
            memmove(v26, v4, 0x78uLL);
          v4 += 120;
          v71 = v27 + 120;
        }
        v6 = v16 + 120;
        if (v4 >= v21)
          break;
        v5 = v15;
      }
      while ((unint64_t)v15 < a3);
      v72 = v6;
    }
LABEL_46:
    sub_237959C04((void **)&v72, &v71, &v70);
    return 1;
  }
  swift_release();
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_23789EDE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v24 = result;
  if (a3 != a2)
  {
    v26 = *a4;
    v4 = (_QWORD *)(*a4 + 120 * a3 + 112);
LABEL_5:
    v27 = a3;
    v5 = v26 + 120 * a3;
    v6 = *(_QWORD *)(v5 + 24);
    v8 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 48);
    v10 = *(_QWORD *)(v5 + 56);
    v37 = *(_BYTE *)(v5 + 64);
    v11 = *(_QWORD *)(v5 + 80);
    v28 = v24;
    v25 = v4;
    while (1)
    {
      v35 = *(v4 - 25);
      v36 = *(v4 - 26);
      v34 = *(v4 - 24);
      v33 = *(v4 - 23);
      v30 = *((_BYTE *)v4 - 168);
      v31 = *(v4 - 19);
      v32 = *(v4 - 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v6, v8, v7, v9, v10, v37);
      sub_2378797D4(v11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v36, v35, v34, v33, v32, v30);
      sub_2378797D4(v31);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v47 == v38 && v48 == v39)
        v29 = 0;
      else
        v29 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v40, v41, v42, v43, v44, v45);
      sub_23787A14C(v46);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v49, v50, v51, v52, v53, v54);
      sub_23787A14C(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_237876B84(v36, v35, v34, v33, v32, v30);
      sub_23787A14C(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_237876B84(v6, v8, v7, v9, v10, v37);
      sub_23787A14C(v11);
      swift_bridgeObjectRelease();
      result = swift_release();
      if ((v29 & 1) == 0)
      {
LABEL_4:
        a3 = v27 + 1;
        v4 = v25 + 15;
        if (v27 + 1 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v26)
        break;
      v12 = *(v4 - 14);
      result = *(v4 - 13);
      v13 = *(v4 - 12);
      v6 = *(v4 - 11);
      v8 = *(v4 - 10);
      v7 = *(v4 - 9);
      v9 = *(v4 - 8);
      v10 = *(v4 - 7);
      v14 = *((_BYTE *)v4 - 48);
      v15 = *(v4 - 5);
      v11 = *(v4 - 4);
      v16 = *(v4 - 3);
      v17 = *((_BYTE *)v4 - 16);
      v18 = *(v4 - 1);
      v19 = *v4;
      v20 = *(_OWORD *)(v4 - 19);
      *((_OWORD *)v4 - 3) = *(_OWORD *)(v4 - 21);
      *((_OWORD *)v4 - 2) = v20;
      *((_OWORD *)v4 - 1) = *(_OWORD *)(v4 - 17);
      *v4 = *(v4 - 15);
      v21 = *(_OWORD *)(v4 - 23);
      *((_OWORD *)v4 - 5) = *(_OWORD *)(v4 - 25);
      *((_OWORD *)v4 - 4) = v21;
      v22 = *(_OWORD *)(v4 - 27);
      *((_OWORD *)v4 - 7) = *(_OWORD *)(v4 - 29);
      *((_OWORD *)v4 - 6) = v22;
      *(v4 - 15) = v19;
      v4 -= 15;
      *(v4 - 14) = v12;
      *(v4 - 13) = result;
      *(v4 - 12) = v13;
      *(v4 - 11) = v6;
      *(v4 - 10) = v8;
      *(v4 - 9) = v7;
      *(v4 - 8) = v9;
      *(v4 - 7) = v10;
      v37 = v14;
      *((_BYTE *)v4 - 48) = v14;
      *(v4 - 5) = v15;
      *(v4 - 4) = v11;
      *(v4 - 3) = v16;
      *((_BYTE *)v4 - 16) = v17;
      *(v4 - 1) = v18;
      if (v27 == ++v28)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23789F258(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  unint64_t v120;
  char *v121;
  char *v122;
  size_t v123;
  char *v124;
  uint64_t result;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  int v145;
  _QWORD *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;

  v1 = a1[1];
  swift_retain_n();
  v2 = sub_237A882D4();
  if (v2 >= v1)
  {
    if (v1 < 0)
      goto LABEL_151;
    if (v1)
    {
      swift_retain();
      sub_23789EDE0(0, v1, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v1 >= 0)
    v3 = v1;
  else
    v3 = v1 + 1;
  if (v1 < -1)
    goto LABEL_159;
  v133 = v1;
  v129 = v2;
  if (v1 < 2)
  {
    v135 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v128 = MEMORY[0x24BEE4AF8];
    if (v1 == 1)
      goto LABEL_13;
    v9 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    v7 = (char *)MEMORY[0x24BEE4AF8];
LABEL_113:
    if (v9 >= 2)
    {
      v112 = *a1;
      do
      {
        v113 = v9 - 2;
        if (v9 < 2)
          goto LABEL_146;
        if (!v112)
          goto LABEL_158;
        v139 = (uint64_t)v7;
        v114 = *(_QWORD *)&v7[16 * v113 + 32];
        v115 = *(_QWORD *)&v7[16 * v9 + 24];
        v116 = (char *)(v112 + 120 * *(_QWORD *)&v7[16 * v9 + 16]);
        swift_retain();
        sub_23789E4D0((char *)(v112 + 120 * v114), v116, v112 + 120 * v115, v135);
        if (v136)
          goto LABEL_127;
        swift_release();
        if (v115 < v114)
          goto LABEL_147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v117 = (char *)v139;
        else
          v117 = sub_237959E0C(v139);
        if (v113 >= *((_QWORD *)v117 + 2))
          goto LABEL_148;
        v118 = v117 + 32;
        v119 = &v117[16 * v113 + 32];
        *(_QWORD *)v119 = v114;
        *((_QWORD *)v119 + 1) = v115;
        v120 = *((_QWORD *)v117 + 2);
        if (v9 > v120)
          goto LABEL_149;
        v121 = &v118[16 * v9 - 16];
        v122 = &v118[16 * v9];
        v123 = 16 * (v120 - v9);
        v124 = v117;
        memmove(v121, v122, v123);
        v7 = v124;
        *((_QWORD *)v124 + 2) = v120 - 1;
        v9 = v120 - 1;
      }
      while (v120 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v128 + 16) = 0;
LABEL_128:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v4 = v3 >> 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F420);
  v5 = sub_237A87ADC();
  *(_QWORD *)(v5 + 16) = v4;
  v128 = v5;
  v135 = (char *)(v5 + 32);
LABEL_13:
  v6 = 0;
  v140 = *a1;
  v126 = *a1 + 112;
  v127 = *a1 + 176;
  v7 = (char *)MEMORY[0x24BEE4AF8];
  v8 = v1;
  while (1)
  {
    v10 = v6 + 1;
    v137 = v7;
    v132 = v6;
    if (v6 + 1 < v8)
    {
      v11 = v140 + 120 * v10;
      v12 = *(_QWORD *)(v11 + 24);
      v13 = *(_QWORD *)(v11 + 32);
      v14 = *(_QWORD *)(v11 + 40);
      v15 = *(_QWORD *)(v11 + 48);
      v16 = *(_QWORD *)(v11 + 56);
      v17 = *(_BYTE *)(v11 + 64);
      v18 = *(_QWORD *)(v11 + 80);
      v19 = v140 + 120 * v6;
      v171 = *(_QWORD *)(v19 + 32);
      v167 = *(_QWORD *)(v19 + 40);
      v163 = *(_QWORD *)(v19 + 48);
      v158 = *(_QWORD *)(v19 + 56);
      v153 = *(_BYTE *)(v19 + 64);
      v156 = *(_QWORD *)(v19 + 80);
      v174 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v12, v13, v14, v15, v16, v17);
      sub_2378797D4(v18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v174, v171, v167, v163, v158, v153);
      sub_2378797D4(v156);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v188 == v179 && v189 == v180)
        v145 = 0;
      else
        v145 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v181, v182, v183, v184, v185, v186);
      sub_23787A14C(v187);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v190, v191, v192, v193, v194, v195);
      sub_23787A14C(v196);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_237876B84(v174, v171, v167, v163, v158, v153);
      sub_23787A14C(v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_237876B84(v12, v13, v14, v15, v16, v17);
      sub_23787A14C(v18);
      swift_bridgeObjectRelease();
      swift_release();
      v6 = v132;
      v10 = v132 + 2;
      if (v132 + 2 < v133)
      {
        v20 = v127 + 120 * v132;
        while (1)
        {
          v197 = *(_QWORD *)(v20 + 88);
          v21 = *(_QWORD *)(v20 + 104);
          v22 = *(_QWORD *)(v20 + 112);
          v23 = *(_QWORD *)(v20 + 120);
          v24 = *(_BYTE *)(v20 + 128);
          v25 = *(_QWORD *)(v20 + 144);
          v177 = *(_QWORD *)(v20 + 96);
          v168 = *(_QWORD *)(v20 - 32);
          v164 = *(_QWORD *)(v20 - 24);
          v160 = *(_QWORD *)(v20 - 16);
          v159 = *(_QWORD *)(v20 - 8);
          v150 = *(_BYTE *)(v20 + 8);
          v151 = *(_QWORD *)(v20 + 24);
          v154 = *(_QWORD *)v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23787978C(v197, v177, v21, v22, v23, v24);
          sub_2378797D4(v25);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23787978C(v168, v164, v160, v159, v154, v150);
          sub_2378797D4(v151);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          v141 = v10;
          if (v188 != v179)
            goto LABEL_26;
          if (v189 == v180)
            v148 = 0;
          else
LABEL_26:
            v148 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v181, v182, v183, v184, v185, v186);
          sub_23787A14C(v187);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v190, v191, v192, v193, v194, v195);
          sub_23787A14C(v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v168, v164, v160, v159, v154, v150);
          sub_23787A14C(v151);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v197, v177, v21, v22, v23, v24);
          sub_23787A14C(v25);
          swift_bridgeObjectRelease();
          swift_release();
          if (((v145 ^ v148) & 1) != 0)
            break;
          ++v10;
          v20 += 120;
          if (v133 == v141 + 1)
          {
            v10 = v133;
            v6 = v132;
            goto LABEL_31;
          }
        }
        v6 = v132;
      }
LABEL_31:
      if ((v145 & 1) != 0)
      {
        if (v10 < v6)
          goto LABEL_152;
        if (v6 < v10)
        {
          v26 = 120 * v10;
          v27 = v10;
          v28 = v6;
          v29 = 120 * v6;
          do
          {
            if (v28 != --v27)
            {
              if (!v140)
                goto LABEL_157;
              v30 = *(_QWORD *)(v140 + v29);
              v31 = v140 + v26;
              v32 = *(_QWORD *)(v140 + v29 + 56);
              v33 = *(_BYTE *)(v140 + v29 + 64);
              v198 = *(_QWORD *)(v140 + v29 + 88);
              v178 = *(_BYTE *)(v140 + v29 + 96);
              v175 = *(_QWORD *)(v140 + v29 + 112);
              v176 = *(_QWORD *)(v140 + v29 + 104);
              v165 = *(_OWORD *)(v140 + v29 + 24);
              v169 = *(_OWORD *)(v140 + v29 + 8);
              v161 = *(_OWORD *)(v140 + v29 + 40);
              v172 = *(_OWORD *)(v140 + v29 + 72);
              memmove((void *)(v140 + v29), (const void *)(v140 + v26 - 120), 0x78uLL);
              *(_QWORD *)(v31 - 120) = v30;
              *(_OWORD *)(v31 - 112) = v169;
              *(_OWORD *)(v31 - 96) = v165;
              *(_OWORD *)(v31 - 80) = v161;
              *(_QWORD *)(v31 - 64) = v32;
              *(_BYTE *)(v31 - 56) = v33;
              *(_OWORD *)(v31 - 48) = v172;
              *(_QWORD *)(v31 - 32) = v198;
              *(_BYTE *)(v31 - 24) = v178;
              *(_QWORD *)(v31 - 16) = v176;
              *(_QWORD *)(v31 - 8) = v175;
            }
            ++v28;
            v26 -= 120;
            v29 += 120;
          }
          while (v28 < v27);
          v6 = v132;
        }
      }
    }
    if (v10 < v133)
    {
      if (__OFSUB__(v10, v6))
        goto LABEL_150;
      if (v10 - v6 < v129)
        break;
    }
LABEL_62:
    if (v10 < v6)
      goto LABEL_145;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v7 = v137;
    else
      v7 = sub_237959A4C(0, *((_QWORD *)v137 + 2) + 1, 1, v137);
    v61 = *((_QWORD *)v7 + 2);
    v60 = *((_QWORD *)v7 + 3);
    v9 = v61 + 1;
    if (v61 >= v60 >> 1)
      v7 = sub_237959A4C((char *)(v60 > 1), v61 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v9;
    v62 = v7 + 32;
    v63 = &v7[16 * v61 + 32];
    *(_QWORD *)v63 = v132;
    *((_QWORD *)v63 + 1) = v10;
    v143 = v10;
    if (v61)
    {
      v138 = v7;
      v200 = v7 + 32;
      while (1)
      {
        v64 = v9 - 1;
        if (v9 >= 4)
        {
          v69 = &v62[16 * v9];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_134;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_135;
          v76 = v9 - 2;
          v77 = &v62[16 * v9 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_137;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_140;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_144;
            v92 = v67 < v102;
            goto LABEL_100;
          }
        }
        else
        {
          if (v9 != 3)
          {
            v93 = *((_QWORD *)v7 + 4);
            v94 = *((_QWORD *)v7 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_94;
          }
          v66 = *((_QWORD *)v7 + 4);
          v65 = *((_QWORD *)v7 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_136;
        v76 = v9 - 2;
        v82 = &v62[16 * v9 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_139;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_142;
        if (__OFADD__(v86, v91))
          goto LABEL_143;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_100:
          if (v92)
            v64 = v76;
          goto LABEL_102;
        }
LABEL_94:
        if ((v87 & 1) != 0)
          goto LABEL_138;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_141;
        if (v98 < v86)
          goto LABEL_15;
LABEL_102:
        v103 = v64 - 1;
        if (v64 - 1 >= v9)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v140)
          goto LABEL_156;
        v104 = &v62[16 * v103];
        v105 = *(_QWORD *)v104;
        v106 = v64;
        v107 = &v62[16 * v64];
        v108 = *((_QWORD *)v107 + 1);
        v109 = (char *)(v140 + 120 * *(_QWORD *)v104);
        v110 = (char *)(v140 + 120 * *(_QWORD *)v107);
        swift_retain();
        sub_23789E4D0(v109, v110, v140 + 120 * v108, v135);
        if (v136)
        {
LABEL_127:
          swift_bridgeObjectRelease();
          swift_release();
          *(_QWORD *)(v128 + 16) = 0;
          goto LABEL_128;
        }
        swift_release();
        if (v108 < v105)
          goto LABEL_131;
        if (v106 > *((_QWORD *)v138 + 2))
          goto LABEL_132;
        *(_QWORD *)v104 = v105;
        v62 = v200;
        *(_QWORD *)&v200[16 * v103 + 8] = v108;
        v111 = *((_QWORD *)v138 + 2);
        if (v106 >= v111)
          goto LABEL_133;
        v9 = v111 - 1;
        memmove(v107, v107 + 16, 16 * (v111 - 1 - v106));
        v7 = v138;
        *((_QWORD *)v138 + 2) = v111 - 1;
        if (v111 <= 2)
          goto LABEL_15;
      }
    }
    v9 = 1;
LABEL_15:
    v8 = v133;
    v6 = v143;
    if (v143 >= v133)
      goto LABEL_113;
  }
  if (__OFADD__(v6, v129))
    goto LABEL_153;
  if (v6 + v129 >= v133)
    v34 = v133;
  else
    v34 = v6 + v129;
  if (v34 >= v6)
  {
    if (v10 != v34)
    {
      v35 = (_QWORD *)(v126 + 120 * v10);
      v36 = v140;
      v131 = v34;
      do
      {
        v142 = v10;
        v38 = v36 + 120 * v10;
        v39 = *(_QWORD *)(v38 + 24);
        v40 = *(_QWORD *)(v38 + 40);
        v199 = *(_QWORD *)(v38 + 32);
        v41 = *(_QWORD *)(v38 + 48);
        v42 = *(_QWORD *)(v38 + 56);
        v43 = *(_BYTE *)(v38 + 64);
        v44 = *(_QWORD *)(v38 + 80);
        v134 = v35;
        while (1)
        {
          v147 = v6;
          v144 = v35;
          v173 = *(v35 - 26);
          v170 = *(v35 - 25);
          v166 = *(v35 - 24);
          v162 = *(v35 - 23);
          v152 = *((_BYTE *)v35 - 168);
          v155 = *(v35 - 19);
          v157 = *(v35 - 22);
          v146 = v35 - 29;
          v45 = v44;
          v46 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v149 = v39;
          sub_23787978C(v39, v199, v40, v46, v42, v43);
          sub_2378797D4(v45);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23787978C(v173, v170, v166, v162, v157, v152);
          sub_2378797D4(v155);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v188 != v179)
            goto LABEL_56;
          if (v189 == v180)
            v47 = 0;
          else
LABEL_56:
            v47 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v181, v182, v183, v184, v185, v186);
          sub_23787A14C(v187);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_237876B84(v190, v191, v192, v193, v194, v195);
          sub_23787A14C(v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v173, v170, v166, v162, v157, v152);
          sub_23787A14C(v155);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_237876B84(v149, v199, v40, v46, v42, v43);
          sub_23787A14C(v45);
          swift_bridgeObjectRelease();
          swift_release();
          if ((v47 & 1) == 0)
            break;
          v36 = v140;
          v37 = v142;
          if (!v140)
            goto LABEL_155;
          v49 = *(v144 - 14);
          v48 = *(v144 - 13);
          v50 = *(v144 - 12);
          v39 = *(v144 - 11);
          v51 = *(v144 - 10);
          v40 = *(v144 - 9);
          v41 = *(v144 - 8);
          v42 = *(v144 - 7);
          v43 = *((_BYTE *)v144 - 48);
          v52 = *(v144 - 5);
          v44 = *(v144 - 4);
          v53 = *(v144 - 3);
          v54 = *((_BYTE *)v144 - 16);
          v55 = *(v144 - 1);
          v56 = *v144;
          v57 = *((_OWORD *)v146 + 5);
          *(_OWORD *)(v146 + 23) = *((_OWORD *)v146 + 4);
          *(_OWORD *)(v146 + 25) = v57;
          *(_OWORD *)(v146 + 27) = *((_OWORD *)v146 + 6);
          v146[29] = v146[14];
          v58 = *((_OWORD *)v146 + 3);
          *(_OWORD *)(v146 + 19) = *((_OWORD *)v146 + 2);
          *(_OWORD *)(v146 + 21) = v58;
          v59 = *((_OWORD *)v146 + 1);
          *(_OWORD *)(v146 + 15) = *(_OWORD *)v146;
          *(_OWORD *)(v146 + 17) = v59;
          *(v144 - 15) = v56;
          v35 = v144 - 15;
          *(v144 - 29) = v49;
          *(v144 - 28) = v48;
          *(v144 - 27) = v50;
          *(v144 - 26) = v39;
          v199 = v51;
          *(v144 - 25) = v51;
          *(v144 - 24) = v40;
          *(v144 - 23) = v41;
          *(v144 - 22) = v42;
          *((_BYTE *)v144 - 168) = v43;
          *(v144 - 20) = v52;
          *(v144 - 19) = v44;
          *(v144 - 18) = v53;
          *((_BYTE *)v144 - 136) = v54;
          v6 = v147 + 1;
          *(v144 - 16) = v55;
          if (v142 == v147 + 1)
            goto LABEL_51;
        }
        v36 = v140;
        v37 = v142;
LABEL_51:
        v10 = v37 + 1;
        v35 = v134 + 15;
        v6 = v132;
      }
      while (v10 != v131);
      v10 = v131;
    }
    goto LABEL_62;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  swift_release_n();
  __break(1u);
LABEL_157:
  swift_release_n();
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  result = sub_237A880A0();
  __break(1u);
  return result;
}

uint64_t sub_2378A04E0(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5[2];

  v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_237959E34(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  swift_retain();
  sub_23789F258(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

unint64_t sub_2378A0580()
{
  unint64_t result;

  result = qword_25681F390;
  if (!qword_25681F390)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ColorSet, &type metadata for ColorSet);
    atomic_store(result, (unint64_t *)&qword_25681F390);
  }
  return result;
}

uint64_t sub_2378A05C4(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F360);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378A0640()
{
  unint64_t result;

  result = qword_25681F3A0;
  if (!qword_25681F3A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorOverride, &type metadata for Theme.ColorOverride);
    atomic_store(result, (unint64_t *)&qword_25681F3A0);
  }
  return result;
}

unint64_t sub_2378A0688()
{
  unint64_t result;

  result = qword_25681F3A8;
  if (!qword_25681F3A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorOverride, &type metadata for Theme.ColorOverride);
    atomic_store(result, (unint64_t *)&qword_25681F3A8);
  }
  return result;
}

unint64_t sub_2378A06D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25681F3B0;
  if (!qword_25681F3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E8E8);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25681F3B0);
  }
  return result;
}

unint64_t sub_2378A0730()
{
  unint64_t result;

  result = qword_25681F3B8;
  if (!qword_25681F3B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.LayoutStyle, &type metadata for Theme.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_25681F3B8);
  }
  return result;
}

uint64_t _s13ColorOverrideOwxx(uint64_t *a1)
{
  return sub_23787D110(*a1, a1[1]);
}

uint64_t *_s13ColorOverrideOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23787D104(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *_s13ColorOverrideOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23787D104(*a2, v4);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_23787D110(v6, v7);
  return a1;
}

uint64_t *_s13ColorOverrideOwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_23787D110(v4, v5);
  return a1;
}

uint64_t _s13ColorOverrideOwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s13ColorOverrideOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 2 * -a2;
      *(_QWORD *)(result + 16) = 0;
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2378A08FC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_2378A0908(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_2378A0918(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for Theme.ColorOverride()
{
  return &type metadata for Theme.ColorOverride;
}

uint64_t _s11LayoutStyleVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11LayoutStyleVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s11LayoutStyleVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11LayoutStyleVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11LayoutStyleVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11LayoutStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.LayoutStyle()
{
  return &type metadata for Theme.LayoutStyle;
}

uint64_t _s11LayoutStyleV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2378A0BD0 + 4 * byte_237A8CBE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2378A0C04 + 4 * byte_237A8CBE4[v4]))();
}

uint64_t sub_2378A0C04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A0C0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378A0C14);
  return result;
}

uint64_t sub_2378A0C20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378A0C28);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2378A0C2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A0C34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11LayoutStyleV10CodingKeysOMa()
{
  return &_s11LayoutStyleV10CodingKeysON;
}

uint64_t _s13ColorOverrideO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378A0C9C + 4 * byte_237A8CBF3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378A0CD0 + 4 * byte_237A8CBEE[v4]))();
}

uint64_t sub_2378A0CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A0CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378A0CE0);
  return result;
}

uint64_t sub_2378A0CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378A0CF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378A0CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A0D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ColorOverrideO10CodingKeysOMa()
{
  return &_s13ColorOverrideO10CodingKeysON;
}

ValueMetadata *_s13ColorOverrideO15ShadeCodingKeysOMa()
{
  return &_s13ColorOverrideO15ShadeCodingKeysON;
}

uint64_t _s13ColorOverrideO15ShadeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2378A0D70 + 4 * byte_237A8CBF8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2378A0D90 + 4 * byte_237A8CBFD[v4]))();
}

_BYTE *sub_2378A0D70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2378A0D90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378A0D98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378A0DA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378A0DA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378A0DB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13ColorOverrideO15ColorCodingKeysOMa()
{
  return &_s13ColorOverrideO15ColorCodingKeysON;
}

unint64_t sub_2378A0DD0()
{
  unint64_t result;

  result = qword_25681F3C0;
  if (!qword_25681F3C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CEC0, &_s13ColorOverrideO15ColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3C0);
  }
  return result;
}

unint64_t sub_2378A0E18()
{
  unint64_t result;

  result = qword_25681F3C8;
  if (!qword_25681F3C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CF78, &_s13ColorOverrideO15ShadeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3C8);
  }
  return result;
}

unint64_t sub_2378A0E60()
{
  unint64_t result;

  result = qword_25681F3D0;
  if (!qword_25681F3D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D030, &_s13ColorOverrideO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3D0);
  }
  return result;
}

unint64_t sub_2378A0EA8()
{
  unint64_t result;

  result = qword_25681F3D8;
  if (!qword_25681F3D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D0E8, &_s11LayoutStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3D8);
  }
  return result;
}

unint64_t sub_2378A0EF0()
{
  unint64_t result;

  result = qword_25681F3E0;
  if (!qword_25681F3E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D058, &_s11LayoutStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3E0);
  }
  return result;
}

unint64_t sub_2378A0F38()
{
  unint64_t result;

  result = qword_25681F3E8;
  if (!qword_25681F3E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D080, &_s11LayoutStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3E8);
  }
  return result;
}

unint64_t sub_2378A0F80()
{
  unint64_t result;

  result = qword_25681F3F0;
  if (!qword_25681F3F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CEE8, &_s13ColorOverrideO15ShadeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3F0);
  }
  return result;
}

unint64_t sub_2378A0FC8()
{
  unint64_t result;

  result = qword_25681F3F8;
  if (!qword_25681F3F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CF10, &_s13ColorOverrideO15ShadeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F3F8);
  }
  return result;
}

unint64_t sub_2378A1010()
{
  unint64_t result;

  result = qword_25681F400;
  if (!qword_25681F400)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CE30, &_s13ColorOverrideO15ColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F400);
  }
  return result;
}

unint64_t sub_2378A1058()
{
  unint64_t result;

  result = qword_25681F408;
  if (!qword_25681F408)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CE58, &_s13ColorOverrideO15ColorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F408);
  }
  return result;
}

unint64_t sub_2378A10A0()
{
  unint64_t result;

  result = qword_25681F410;
  if (!qword_25681F410)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CFA0, &_s13ColorOverrideO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F410);
  }
  return result;
}

unint64_t sub_2378A10E8()
{
  unint64_t result;

  result = qword_25681F418;
  if (!qword_25681F418)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8CFC8, &_s13ColorOverrideO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681F418);
  }
  return result;
}

uint64_t sub_2378A112C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378A120C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAFE80 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AAFEA0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAFEC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

CarPlayAssetUI::LayoutOutput __swiftcall LayoutOutput.init(rawValue:)(CarPlayAssetUI::LayoutOutput rawValue)
{
  CarPlayAssetUI::LayoutOutput *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static LayoutOutput.background.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static LayoutOutput.phone.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static LayoutOutput.native.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_2378A13BC()
{
  qword_25681F428 = 7;
}

uint64_t static LayoutOutput.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25681E000 != -1)
    result = swift_once();
  *a1 = qword_25681F428;
  return result;
}

uint64_t LayoutOutput.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *sub_2378A1448@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2378A1454(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_2378A145C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_2378A1470@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_2378A1484@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2378A1498(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_2378A14C8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2378A14F4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_2378A1518(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_2378A152C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_2378A1540(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_2378A1554@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2378A1568(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_2378A157C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_2378A1590(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2378A15A4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_2378A15B4()
{
  return sub_237A87E90();
}

_QWORD *sub_2378A15CC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t View.layoutOutput(_:)()
{
  swift_getKeyPath();
  sub_237A870C8();
  return swift_release();
}

uint64_t sub_2378A1654@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2378A1DE4();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_2378A16A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2378A1DE4();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_2378A16EC()
{
  sub_2378A1DE4();
  return sub_237A86B94();
}

uint64_t sub_2378A1734()
{
  sub_2378A1DE4();
  return sub_237A86B94();
}

uint64_t LayoutOutput.isVisible(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  char v23;
  BOOL v24;
  BOOL v25;
  _BYTE v28[512];
  _BYTE v29[520];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Instrument();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v28[-v11 - 8];
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v28[-v14 - 8];
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v28[-v17 - 8];
  v19 = *v1;
  sub_2378A1A90(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2378A1AD8((uint64_t)v5);
    return 0;
  }
  else
  {
    sub_2378A1B18((uint64_t)v5, (uint64_t)v18);
    sub_2378A1B5C((uint64_t)v18, (uint64_t)v15);
    if ((v19 & 4) != 0)
    {
      sub_23788F46C(&v15[*(int *)(v6 + 20)], v28);
      sub_23788F46C(v28, v29);
      switch(sub_2378A1BDC((uint64_t)v29))
      {
        case 1u:
          v23 = *(_BYTE *)(sub_2378A1BF8((uint64_t)v29) + 496);
          goto LABEL_17;
        case 2u:
          v24 = (~*(_DWORD *)(sub_2378A1BF8((uint64_t)v29) + 40) & 0xFELL) == 0;
          goto LABEL_14;
        case 3u:
        case 4u:
        case 5u:
          sub_2378A1BF8((uint64_t)v29);
          sub_2378A1BA0((uint64_t)v15);
          sub_2378A1B5C((uint64_t)v18, (uint64_t)v12);
          goto LABEL_18;
        case 8u:
          v24 = *(_QWORD *)(sub_2378A1BF8((uint64_t)v29) + 8) == 0;
LABEL_14:
          v23 = !v24;
LABEL_17:
          sub_2378A1BA0((uint64_t)v15);
          sub_2378A1B5C((uint64_t)v18, (uint64_t)v12);
          if ((v23 & 1) == 0)
            goto LABEL_5;
LABEL_18:
          sub_2378A1BA0((uint64_t)v12);
          sub_2378A1BA0((uint64_t)v18);
          v20 = 1;
          break;
        default:
          goto LABEL_4;
      }
    }
    else
    {
LABEL_4:
      sub_2378A1BA0((uint64_t)v15);
      sub_2378A1B5C((uint64_t)v18, (uint64_t)v12);
LABEL_5:
      sub_2378A1BA0((uint64_t)v18);
      sub_2378A1B18((uint64_t)v12, (uint64_t)v9);
      if ((v19 & 2) != 0)
      {
        sub_23788F46C(&v9[*(int *)(v6 + 20)], v28);
        sub_23788F46C(v28, v29);
        v21 = sub_2378A1BDC((uint64_t)v29);
        v22 = 0;
        switch(v21)
        {
          case 1:
            v22 = *(unsigned __int8 *)(sub_2378A1BF8((uint64_t)v29) + 496);
            break;
          case 2:
            v25 = (~*(_DWORD *)(sub_2378A1BF8((uint64_t)v29) + 40) & 0xFELL) == 0;
            goto LABEL_22;
          case 3:
          case 4:
          case 5:
            sub_2378A1BF8((uint64_t)v29);
            v22 = 1;
            break;
          case 8:
            v25 = *(_QWORD *)(sub_2378A1BF8((uint64_t)v29) + 8) == 0;
LABEL_22:
            v22 = !v25;
            break;
          default:
            break;
        }
        v20 = v22 ^ 1u;
      }
      else
      {
        v20 = 0;
      }
      sub_2378A1BA0((uint64_t)v9);
    }
  }
  return v20;
}

uint64_t sub_2378A1A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378A1AD8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2378A1B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378A1B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378A1BA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2378A1BDC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 496) >> 60;
  if (v1 <= 8)
    return v1;
  else
    return (*(_DWORD *)a1 + 9);
}

uint64_t sub_2378A1BF8(uint64_t result)
{
  *(_QWORD *)(result + 496) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t sub_2378A1C0C()
{
  unint64_t result;

  result = qword_25681F438;
  if (!qword_25681F438)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutOutput, &type metadata for LayoutOutput);
    atomic_store(result, (unint64_t *)&qword_25681F438);
  }
  return result;
}

unint64_t sub_2378A1C54()
{
  unint64_t result;

  result = qword_25681F440;
  if (!qword_25681F440)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutOutput, &type metadata for LayoutOutput);
    atomic_store(result, (unint64_t *)&qword_25681F440);
  }
  return result;
}

unint64_t sub_2378A1C9C()
{
  unint64_t result;

  result = qword_25681F448;
  if (!qword_25681F448)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutOutput, &type metadata for LayoutOutput);
    atomic_store(result, (unint64_t *)&qword_25681F448);
  }
  return result;
}

unint64_t sub_2378A1CE4()
{
  unint64_t result;

  result = qword_25681F450;
  if (!qword_25681F450)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LayoutOutput, &type metadata for LayoutOutput);
    atomic_store(result, (unint64_t *)&qword_25681F450);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutOutput()
{
  return &type metadata for LayoutOutput;
}

uint64_t sub_2378A1D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F458);
  v2 = sub_237A869B4();
  v4[0] = v1;
  v4[1] = sub_2378A1D98();
  return MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2378A1D98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681F460;
  if (!qword_25681F460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F458);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_25681F460);
  }
  return result;
}

unint64_t sub_2378A1DE4()
{
  unint64_t result;

  result = qword_25681F468;
  if (!qword_25681F468)
  {
    result = MEMORY[0x23B81FA98](&unk_237A98E84, &type metadata for LayoutOutputKey);
    atomic_store(result, (unint64_t *)&qword_25681F468);
  }
  return result;
}

void OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.modify())()
{
  return nullsub_1;
}

void OutsideTemperatureDataIdentifiers.unitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *OutsideTemperatureDataIdentifiers.unitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*OutsideTemperatureDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::OutsideTemperatureDataIdentifiers __swiftcall OutsideTemperatureDataIdentifiers.init(temperatureDataIdentifier:unitDataIdentifier:)(CarPlayAssetUI::InstrumentDataIdentifier temperatureDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier unitDataIdentifier)
{
  _BYTE *v2;
  char v3;
  CarPlayAssetUI::OutsideTemperatureDataIdentifiers result;

  v3 = *(_BYTE *)unitDataIdentifier;
  *v2 = *(_BYTE *)temperatureDataIdentifier;
  v2[1] = v3;
  result.temperatureDataIdentifier = temperatureDataIdentifier;
  return result;
}

uint64_t OutsideTemperatureDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2378A1F1C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD000000000000019;
}

uint64_t sub_2378A1F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378A265C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A1F80()
{
  sub_2378A2360();
  return sub_237A88718();
}

uint64_t sub_2378A1FA8()
{
  sub_2378A2360();
  return sub_237A88724();
}

uint64_t OutsideTemperatureDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F470);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378A2360();
  sub_237A886B8();
  v15 = v8;
  v14 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OutsideTemperatureDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t OutsideTemperatureDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F480);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378A2360();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v16;
    v13 = 1;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A2334@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OutsideTemperatureDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_2378A2348(_QWORD *a1)
{
  return OutsideTemperatureDataIdentifiers.encode(to:)(a1);
}

unint64_t sub_2378A2360()
{
  unint64_t result;

  result = qword_25681F478;
  if (!qword_25681F478)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D5F8, &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F478);
  }
  return result;
}

unint64_t sub_2378A23A8()
{
  unint64_t result;

  result = qword_25681F488;
  if (!qword_25681F488)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for OutsideTemperatureDataIdentifiers, &type metadata for OutsideTemperatureDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_25681F488);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OutsideTemperatureDataIdentifiers(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65335 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65335 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC8)
    return ((uint64_t (*)(void))((char *)&loc_2378A2438 + 4 * byte_237A8D435[v4]))();
  *a1 = a2 - 201;
  return ((uint64_t (*)(void))((char *)sub_2378A246C + 4 * asc_237A8D430[v4]))();
}

uint64_t sub_2378A246C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378A2474(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2378A247CLL);
  return result;
}

uint64_t sub_2378A2488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2378A2490);
  *(_BYTE *)result = a2 + 55;
  return result;
}

uint64_t sub_2378A2494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378A249C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataIdentifiers()
{
  return &type metadata for OutsideTemperatureDataIdentifiers;
}

uint64_t storeEnumTagSinglePayload for OutsideTemperatureDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378A2504 + 4 * byte_237A8D43F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378A2538 + 4 * byte_237A8D43A[v4]))();
}

uint64_t sub_2378A2538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A2540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378A2548);
  return result;
}

uint64_t sub_2378A2554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378A255CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378A2560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378A2568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataIdentifiers.CodingKeys()
{
  return &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys;
}

unint64_t sub_2378A2588()
{
  unint64_t result;

  result = qword_25681F490;
  if (!qword_25681F490)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D5D0, &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F490);
  }
  return result;
}

unint64_t sub_2378A25D0()
{
  unint64_t result;

  result = qword_25681F498;
  if (!qword_25681F498)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D540, &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F498);
  }
  return result;
}

unint64_t sub_2378A2618()
{
  unint64_t result;

  result = qword_25681F4A0;
  if (!qword_25681F4A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8D568, &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F4A0);
  }
  return result;
}

uint64_t sub_2378A265C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAFF70 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAF570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void SingleSelectMenuModel.Entry.id.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t SingleSelectMenuModel.Entry.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleSelectMenuModel.Entry.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.Entry.title.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.Entry.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleSelectMenuModel.Entry.symbolName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.Entry.symbolName.modify())()
{
  return nullsub_1;
}

_QWORD *SingleSelectMenuModel.Entry.init(id:title:symbolName:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = *result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t SingleSelectMenuModel.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SingleSelectMenuModel.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleSelectMenuModel.entries.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SingleSelectMenuModel.entries.modify())()
{
  return nullsub_1;
}

void SingleSelectMenuModel.selectedEntryID.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t SingleSelectMenuModel.selectedEntryID.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 32) = v2;
  return result;
}

uint64_t (*SingleSelectMenuModel.selectedEntryID.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.isUserSelectionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SingleSelectMenuModel.isUserSelectionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*SingleSelectMenuModel.isUserSelectionEnabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_2378A28F4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2378A3110;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_2378A2BF4(v3);
}

uint64_t sub_2378A2958(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2378A3110;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 40);
  sub_2378A2BF4(v3);
  result = sub_2378A2C04(v7);
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t SingleSelectMenuModel.selectionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_2378A2BF4(v1);
  return v1;
}

uint64_t SingleSelectMenuModel.selectionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2378A2C04(*(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.selectionHandler.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.isFocusable.getter()
{
  return 1;
}

_QWORD *SingleSelectMenuModel.init(id:entries:selectedEntryID:isUserSelectionEnabled:selectionHandler:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = result[1];
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  *(_QWORD *)a7 = *result;
  *(_QWORD *)(a7 + 8) = v7;
  *(_QWORD *)(a7 + 16) = a2;
  *(_QWORD *)(a7 + 24) = v8;
  *(_BYTE *)(a7 + 32) = v9;
  *(_BYTE *)(a7 + 33) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

Swift::Double_optional __swiftcall SingleSelectMenuModel.doubleValue()()
{
  Swift::Bool v0;
  Swift::Double_optional result;

  v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t _s14CarPlayAssetUI21SingleSelectMenuModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 33);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 33);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_237A8840C(), result = 0, (v10 & 1) != 0))
  {
    if ((sub_237875C20(v2, v6) & 1) == 0)
      return 0;
    if ((v4 & 1) != 0)
    {
      if (!v8)
        return 0;
    }
    else
    {
      if (v3 == v7)
        v12 = v8;
      else
        v12 = 1;
      if ((v12 & 1) != 0)
        return 0;
    }
    return v5 ^ v9 ^ 1u;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI21SingleSelectMenuModelV5EntryV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  if (*a1 != *a2)
    return 0;
  v2 = a1[3];
  v3 = a1[4];
  v4 = a2[3];
  v5 = a2[4];
  v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_237A8840C(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_237A8840C();
  }
  return result;
}

uint64_t sub_2378A2BF4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2378A2C04(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2378A2C14()
{
  return sub_2378A2C6C(&qword_25681F4A8, &qword_25681F4B0, MEMORY[0x24BEE1778]);
}

uint64_t sub_2378A2C40()
{
  return sub_2378A2C6C(&qword_25681F4B8, &qword_25681F4C0, MEMORY[0x24BEE0D10]);
}

uint64_t sub_2378A2C6C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for SingleSelectMenuModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v6;
      *(_QWORD *)(a1 + 48) = v8;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  if (!v5)
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SingleSelectMenuModel()
{
  return &type metadata for SingleSelectMenuModel;
}

uint64_t destroy for SingleSelectMenuModel.Entry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SingleSelectMenuModel.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SingleSelectMenuModel.Entry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SingleSelectMenuModel.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CAPackageAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CAPackageAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleSelectMenuModel.Entry()
{
  return &type metadata for SingleSelectMenuModel.Entry;
}

uint64_t sub_2378A30EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2378A3110()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

_QWORD *sub_2378A3134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _BYTE v14[136];
  _QWORD v15[17];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = a1 + 32;
  swift_bridgeObjectRetain();
  sub_23787D0C8(v3, (uint64_t)v14);
  v4 = a1 + 168;
  v5 = v1 - 1;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    sub_23787D0C8((uint64_t)v14, (uint64_t)v15);
    if (sub_2378AC814(v15) == 4)
    {
      v7 = sub_2378AC828(v15);
      v8 = *(_BYTE *)v7;
      v9 = *((_DWORD *)v7 + 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_2378959CC(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_2378959CC((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      v6[2] = v11 + 1;
      v12 = &v6[v11];
      *((_BYTE *)v12 + 32) = v8;
      *((_DWORD *)v12 + 9) = v9;
    }
    if (!v5)
      break;
    sub_23787D0C8(v4, (uint64_t)v14);
    v4 += 136;
    --v5;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t VisibilityConfiguration.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisibilityConfiguration.init(arrayLiteral:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12[17];

  v4 = swift_bridgeObjectRetain();
  v5 = sub_2378A3134(v4);
  swift_bridgeObjectRelease();
  v6 = v5[2];
  result = swift_bridgeObjectRelease();
  if (!v6)
  {
    swift_beginAccess();
    v8 = byte_25681F720;
    v9 = dword_25681F724;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a1 = sub_2378958AC(0, a1[2] + 1, 1, a1);
    v11 = a1[2];
    v10 = a1[3];
    if (v11 >= v10 >> 1)
      a1 = sub_2378958AC((_QWORD *)(v10 > 1), v11 + 1, 1, a1);
    LOBYTE(v12[0]) = v8;
    HIDWORD(v12[0]) = v9;
    v12[1] = 1056964608;
    v12[2] = 0x3FB999999999999ALL;
    v12[3] = 0;
    v12[4] = 0;
    v12[5] = 0x3FF0000000000000;
    v12[6] = 1056964608;
    v12[7] = 0x3FB999999999999ALL;
    v12[8] = 0;
    v12[9] = 0;
    v12[10] = 0x3FF0000000000000;
    sub_23788F374(v12);
    a1[2] = v11 + 1;
    result = sub_23787D0C8((uint64_t)v12, (uint64_t)&a1[17 * v11 + 4]);
  }
  *a2 = a1;
  return result;
}

CarPlayAssetUI::VisibilityConfiguration __swiftcall VisibilityConfiguration.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  CarPlayAssetUI::VisibilityConfiguration result;
  uint64_t v4;
  unint64_t v5[17];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF60);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237A8A9F0;
  swift_beginAccess();
  LOBYTE(v5[0]) = byte_25681F720;
  HIDWORD(v5[0]) = dword_25681F724;
  v5[1] = 1056964608;
  v5[2] = 0x3FB999999999999ALL;
  v5[3] = 0;
  v5[4] = 0;
  v5[5] = 0x3FF0000000000000;
  v5[6] = 1056964608;
  v5[7] = 0x3FB999999999999ALL;
  v5[8] = 0;
  v5[9] = 0;
  v5[10] = 0x3FF0000000000000;
  sub_23788F374(v5);
  sub_23787D0C8((uint64_t)v5, v2 + 32);
  result.rules._rawValue = (void *)VisibilityConfiguration.init(arrayLiteral:)((_QWORD *)v2, &v4);
  *v1 = v4;
  return result;
}

uint64_t VisibilityConfiguration.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[136];
  _BYTE v7[136];

  v1 = *v0;
  result = sub_237A885E0();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v4 = v3 - 1;
    if (v3 != 1)
    {
      v5 = v1 + 168;
      do
      {
        sub_23787D0C8(v5, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v5 += 136;
        --v4;
      }
      while (v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static VisibilityConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_237875B70(*a1, *a2);
}

uint64_t sub_2378A3574()
{
  return 0x73656C7572;
}

uint64_t sub_2378A3588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73656C7572 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2378A3614()
{
  sub_2378AC6A4();
  return sub_237A88718();
}

uint64_t sub_2378A363C()
{
  sub_2378AC6A4();
  return sub_237A88724();
}

uint64_t VisibilityConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F740);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AC6A4();
  sub_237A886B8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F750);
  sub_2378AC72C(&qword_25681F758, (uint64_t (*)(void))sub_2378AC6E8, MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisibilityConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[136];
  _BYTE v7[136];

  v1 = *v0;
  sub_237A885D4();
  sub_237A885E0();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v3 = v2 - 1;
    if (v3)
    {
      v4 = v1 + 168;
      do
      {
        sub_23787D0C8(v4, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
  }
  return sub_237A88610();
}

uint64_t VisibilityConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F768);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AC6A4();
  sub_237A88688();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F750);
    sub_2378AC72C(&qword_25681F770, (uint64_t (*)(void))sub_2378AC794, MEMORY[0x24BEE12D0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A3978@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VisibilityConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2378A398C(_QWORD *a1)
{
  return VisibilityConfiguration.encode(to:)(a1);
}

void sub_2378A39A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[136];
  _BYTE v6[136];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_237A885E0();
  if (v2)
  {
    sub_23787D0C8(v1 + 32, (uint64_t)v6);
    sub_23787D0C8((uint64_t)v6, (uint64_t)v5);
    VisibilityRule.hash(into:)();
    v3 = v2 - 1;
    if (v2 != 1)
    {
      v4 = v1 + 168;
      do
      {
        sub_23787D0C8(v4, (uint64_t)v6);
        sub_23787D0C8((uint64_t)v6, (uint64_t)v5);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
  }
}

uint64_t sub_2378A3A50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[136];
  _BYTE v7[136];

  v1 = *v0;
  sub_237A885D4();
  v2 = *(_QWORD *)(v1 + 16);
  sub_237A885E0();
  if (v2)
  {
    sub_23787D0C8(v1 + 32, (uint64_t)v7);
    sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    v3 = v2 - 1;
    if (v2 != 1)
    {
      v4 = v1 + 168;
      do
      {
        sub_23787D0C8(v4, (uint64_t)v7);
        sub_23787D0C8((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
  }
  return sub_237A88610();
}

uint64_t sub_2378A3B0C(uint64_t *a1, uint64_t *a2)
{
  return sub_237875B70(*a1, *a2);
}

double static VisibilityRule.Animation.default.getter@<D0>(_QWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1056964608;
  *a1 = 1056964608;
  a1[1] = 0x3FB999999999999ALL;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0x3FF0000000000000;
  return result;
}

uint64_t sub_2378A3B40(uint64_t a1)
{
  return sub_2378A3BA0(a1, &unk_25681F5D8, &asc_25681F5D9, (uint64_t)&unk_25681F4C8);
}

__n128 VisibilityRule.Animation.init(duration:delay:bezierCurve:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  __n128 result;
  __int128 v5;

  *(float *)a2 = a3;
  *(float *)(a2 + 4) = a4;
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t static VisibilityRule.transmissionModeGearSet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378A3C60(&qword_25681E008, (uint64_t)&unk_25681F4C8, a1);
}

uint64_t sub_2378A3B88(uint64_t a1)
{
  return sub_2378A3BA0(a1, &unk_25681F5DA, asc_25681F5DB, (uint64_t)&unk_25681F550);
}

uint64_t sub_2378A3BA0(uint64_t a1, _BYTE *a2, char *a3, uint64_t a4)
{
  char v7;
  _QWORD v9[17];

  swift_beginAccess();
  v7 = *a3;
  LOBYTE(v9[0]) = *a2;
  BYTE1(v9[0]) = v7;
  v9[1] = 0x3DEB851F3E99999ALL;
  v9[2] = 0x3FB999999999999ALL;
  v9[3] = 0;
  v9[4] = 0;
  v9[5] = 0x3FF0000000000000;
  v9[6] = 1041865114;
  v9[7] = 0x3FB999999999999ALL;
  v9[8] = 0;
  v9[9] = 0;
  v9[10] = 0x3FF0000000000000;
  sub_2378AE244(v9);
  return sub_23787D0C8((uint64_t)v9, a4);
}

uint64_t static VisibilityRule.transmissionModeGearNotSet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378A3C60(&qword_25681E010, (uint64_t)&unk_25681F550, a1);
}

uint64_t sub_2378A3C60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[136];

  if (*a1 != -1)
    swift_once();
  sub_23787D0C8(a2, (uint64_t)v6);
  return sub_23787D0C8((uint64_t)v6, a3);
}

void static VisibilityRule.Animation.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0x3FB999999999999ALL;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0x3FF0000000000000;
}

uint64_t static VisibilityRule.invalidData(dataIdentifier:showAnimation:hideAnimation:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v5;
  __int128 v6;
  unint64_t v8[2];
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  LOBYTE(v8[0]) = *a1;
  v8[1] = *(_QWORD *)a2;
  v5 = *(_OWORD *)(a2 + 24);
  v9 = *(_OWORD *)(a2 + 8);
  v10 = v5;
  v11 = *a3;
  v6 = *(_OWORD *)(a3 + 3);
  v12 = *(_OWORD *)(a3 + 1);
  v13 = v6;
  sub_2378AC7D8(v8);
  return sub_23787D0C8((uint64_t)v8, a4);
}

CarPlayAssetUI::VisibilityRule::InvalidDataRule __swiftcall VisibilityRule.InvalidDataRule.init(dataIdentifier:)(CarPlayAssetUI::VisibilityRule::InvalidDataRule dataIdentifier)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)dataIdentifier.dataIdentifier;
  return dataIdentifier;
}

uint64_t static VisibilityRule.secondarySpeedEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378A3D70(1, a1);
}

_BYTE *VisibilityRule.SecondarySpeedRule.init(dataIdentifier:enabled:)@<X0>(_BYTE *result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t static VisibilityRule.secondarySpeedDisabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2378A3D70(0, a1);
}

uint64_t sub_2378A3D70@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v4[17];

  LOBYTE(v4[0]) = 51;
  BYTE1(v4[0]) = a1;
  v4[1] = 1056964608;
  v4[2] = 0x3FB999999999999ALL;
  v4[3] = 0;
  v4[4] = 0;
  v4[5] = 0x3FF0000000000000;
  v4[6] = 1056964608;
  v4[7] = 0x3FB999999999999ALL;
  v4[8] = 0;
  v4[9] = 0;
  v4[10] = 0x3FF0000000000000;
  sub_2378AC7F8(v4);
  return sub_23787D0C8((uint64_t)v4, a2);
}

uint64_t static VisibilityRule.driveMode.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3[17];

  swift_beginAccess();
  LOBYTE(v3[0]) = byte_25681F728;
  HIDWORD(v3[0]) = dword_25681F72C;
  v3[1] = 1053609165;
  v3[2] = 0x3FB999999999999ALL;
  v3[3] = 0;
  v3[4] = 0;
  v3[5] = 0x3FF0000000000000;
  v3[6] = 1053609165;
  v3[7] = 0x3FB999999999999ALL;
  v3[8] = 0;
  v3[9] = 0;
  v3[10] = 0x3FF0000000000000;
  sub_23788F374(v3);
  return sub_23787D0C8((uint64_t)v3, a1);
}

void VisibilityRule.hash(into:)()
{
  uint64_t v0;
  char *v1;
  _BYTE v2[136];
  _DWORD v3[36];

  sub_23787D0C8(v0, (uint64_t)v2);
  sub_23787D0C8((uint64_t)v2, (uint64_t)v3);
  v1 = (char *)sub_2378A3EE8 + 4 * byte_237A8D810[sub_2378AC814(v3)];
  __asm { BR              X10 }
}

uint64_t sub_2378A3EE8()
{
  uint64_t v1;

  sub_2378AC828(&v1);
  sub_237A885E0();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  sub_237A87554();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  return sub_237A87554();
}

uint64_t static VisibilityRule.TransmissionModeRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378AD978(a1, a2) & 1;
}

uint64_t static VisibilityRule.RemainingRangeRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378AD978(a1, a2) & 1;
}

BOOL static VisibilityRule.LayoutModeRule.== infix(_:_:)(float *a1, float *a2)
{
  return a1[1] == a2[1] && *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2;
}

uint64_t sub_2378A45C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2378A4600 + 4 * byte_237A8D818[a1]))(0xD000000000000010, 0x8000000237AAFF90);
}

uint64_t sub_2378A4600(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_2378A46C8()
{
  unsigned __int8 *v0;

  return sub_2378A45C8(*v0);
}

uint64_t sub_2378A46D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B0D50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A46F4()
{
  sub_2378ADAA0();
  return sub_237A88718();
}

uint64_t sub_2378A471C()
{
  sub_2378ADAA0();
  return sub_237A88724();
}

uint64_t sub_2378A4744()
{
  sub_2378ADC38();
  return sub_237A88718();
}

uint64_t sub_2378A476C()
{
  sub_2378ADC38();
  return sub_237A88724();
}

uint64_t sub_2378A4794()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D696E41776F6873;
  if (*v0 != 1)
    v1 = 0x6D696E4165646968;
  if (*v0)
    return v1;
  else
    return 1701606770;
}

uint64_t sub_2378A4800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B1108(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A4824()
{
  sub_2378ADCC0();
  return sub_237A88718();
}

uint64_t sub_2378A484C()
{
  sub_2378ADCC0();
  return sub_237A88724();
}

uint64_t sub_2378A4874()
{
  sub_2378ADD48();
  return sub_237A88718();
}

uint64_t sub_2378A489C()
{
  sub_2378ADD48();
  return sub_237A88724();
}

uint64_t sub_2378A48C4()
{
  sub_2378ADBB0();
  return sub_237A88718();
}

uint64_t sub_2378A48EC()
{
  sub_2378ADBB0();
  return sub_237A88724();
}

uint64_t sub_2378A4914()
{
  sub_2378ADDD0();
  return sub_237A88718();
}

uint64_t sub_2378A493C()
{
  sub_2378ADDD0();
  return sub_237A88724();
}

uint64_t sub_2378A4964()
{
  sub_2378ADAE4();
  return sub_237A88718();
}

uint64_t sub_2378A498C()
{
  sub_2378ADAE4();
  return sub_237A88724();
}

uint64_t sub_2378A49B4()
{
  sub_2378ADE58();
  return sub_237A88718();
}

uint64_t sub_2378A49DC()
{
  sub_2378ADE58();
  return sub_237A88724();
}

uint64_t sub_2378A4A04()
{
  sub_2378ADEE0();
  return sub_237A88718();
}

uint64_t sub_2378A4A2C()
{
  sub_2378ADEE0();
  return sub_237A88724();
}

void VisibilityRule.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[7];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _BYTE v31[136];
  _DWORD v32[36];

  v2 = v1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F780);
  v14[6] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F788);
  v14[5] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F790);
  v14[4] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F798);
  v14[3] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F7A0);
  v14[2] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F7A8);
  v14[1] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F7B0);
  v14[0] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F7B8);
  MEMORY[0x24BDAC7A8](v10);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F7C0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23787D0C8(v2, (uint64_t)v31);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378ADAA0();
  v29 = v12;
  sub_237A886B8();
  sub_23787D0C8((uint64_t)v31, (uint64_t)v32);
  v13 = (char *)sub_2378A4D60 + 4 * word_237A8D820[sub_2378AC814(v32)];
  __asm { BR              X10 }
}

uint64_t sub_2378A4D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_2378AC828((_QWORD *)(v0 + 400));
  v6 = *(_BYTE *)v5;
  v7 = *((_BYTE *)v5 + 1);
  v8 = v5[1];
  v9 = v5[2];
  v10 = v5[3];
  *(_QWORD *)(v0 + 160) = v5[4];
  v11 = v5[6];
  *(_QWORD *)(v0 + 144) = v5[5];
  v12 = v5[7];
  v13 = v5[8];
  v14 = v5[9];
  v15 = v5[10];
  *(_BYTE *)(v0 + 208) = 0;
  sub_2378ADEE0();
  v17 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 200);
  sub_237A88220();
  *(_BYTE *)(v0 + 208) = v6;
  *(_BYTE *)(v0 + 209) = v7;
  *(_BYTE *)(v4 - 65) = 0;
  sub_2378ADF24();
  v18 = *(_QWORD *)(v0 + 184);
  sub_237A882B0();
  if (!v18)
  {
    *(_QWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 216) = v9;
    v19 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 224) = v10;
    *(_QWORD *)(v0 + 232) = v19;
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 144);
    *(_BYTE *)(v4 - 65) = 1;
    sub_2378ADB6C();
    sub_237A882B0();
    *(_QWORD *)(v0 + 208) = v11;
    *(_QWORD *)(v0 + 216) = v12;
    *(_QWORD *)(v0 + 224) = v13;
    *(_QWORD *)(v0 + 232) = v14;
    *(_QWORD *)(v0 + 240) = v15;
    *(_BYTE *)(v4 - 65) = 2;
    sub_237A882B0();
  }
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v17, v16);
}

uint64_t VisibilityRule.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[136];
  _BYTE v3[136];

  sub_23787D0C8(v0, (uint64_t)v3);
  sub_23787D0C8((uint64_t)v3, (uint64_t)v2);
  sub_237A885D4();
  VisibilityRule.hash(into:)();
  return sub_237A88610();
}

uint64_t VisibilityRule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[11];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;

  v39 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F858);
  v26[10] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F860);
  v43 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F868);
  v26[9] = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F870);
  v26[8] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v41 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F878);
  v26[7] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v40 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F880);
  v26[6] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v36 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F888);
  v26[5] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v35 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F890);
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F898);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_2378ADAA0();
  v44 = v16;
  v18 = v46;
  sub_237A88688();
  if (!v18)
  {
    v26[2] = v10;
    v26[3] = v12;
    v26[4] = 0;
    v46 = v14;
    v19 = v44;
    v20 = sub_237A881FC();
    v21 = v13;
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      v26[1] = v20;
      __asm { BR              X10 }
    }
    v22 = sub_237A87FB0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v24 = &type metadata for VisibilityRule;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v21);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v45);
}

uint64_t sub_2378A6BE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.init(from:)(a1, a2);
}

void sub_2378A6BF4(_QWORD *a1)
{
  VisibilityRule.encode(to:)(a1);
}

uint64_t sub_2378A6C08()
{
  uint64_t v0;
  _BYTE v2[136];
  _BYTE v3[136];

  sub_23787D0C8(v0, (uint64_t)v3);
  sub_23787D0C8((uint64_t)v3, (uint64_t)v2);
  sub_237A885D4();
  VisibilityRule.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2378A6C64()
{
  uint64_t v0;
  _BYTE v2[136];
  _BYTE v3[136];

  sub_23787D0C8(v0, (uint64_t)v3);
  sub_23787D0C8((uint64_t)v3, (uint64_t)v2);
  sub_237A885D4();
  VisibilityRule.hash(into:)();
  return sub_237A88610();
}

double VisibilityRule.BezierCurve.startControlPoint.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double VisibilityRule.BezierCurve.endControlPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void _s14CarPlayAssetUI14VisibilityRuleO11BezierCurveV17startControlPoint03endjK0AE05SwiftD004UnitK0V_AJtcfC_0(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

double static VisibilityRule.BezierCurve.easeIn.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.42;
  __asm { FMOV            V1.2D, #1.0 }
  *a1 = xmmword_237A8D7B0;
  a1[1] = _Q1;
  return result;
}

double static VisibilityRule.BezierCurve.easeOut.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  result = 0.58;
  *(_OWORD *)(a1 + 16) = xmmword_237A8D7C0;
  return result;
}

double static VisibilityRule.BezierCurve.easeInOut.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.42;
  *a1 = xmmword_237A8D7B0;
  a1[1] = xmmword_237A8D7C0;
  return result;
}

void static VisibilityRule.BezierCurve.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FB999999999999ALL;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
}

uint64_t VisibilityRule.BezierCurve.hash(into:)()
{
  sub_237A87554();
  return sub_237A87554();
}

uint64_t static VisibilityRule.BezierCurve.== infix(_:_:)()
{
  if ((sub_237A87548() & 1) != 0)
    return sub_237A87548();
  else
    return 0;
}

uint64_t VisibilityRule.BezierCurve.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t sub_2378A6E50()
{
  sub_237A885D4();
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t sub_2378A6EBC()
{
  sub_237A87554();
  return sub_237A87554();
}

uint64_t sub_2378A6EF8()
{
  sub_237A885D4();
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t sub_2378A6F60()
{
  if ((sub_237A87548() & 1) != 0)
    return sub_237A87548();
  else
    return 0;
}

float VisibilityRule.Animation.duration.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

float VisibilityRule.Animation.delay.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

__n128 VisibilityRule.Animation.bezierCurve.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 8);
  v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t VisibilityRule.Animation.hash(into:)()
{
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  return sub_237A87554();
}

uint64_t sub_2378A7054()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79616C6564;
  if (*v0 != 1)
    v1 = 0x75437265697A6562;
  if (*v0)
    return v1;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_2378A70B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B128C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A70D8()
{
  sub_2378AE25C();
  return sub_237A88718();
}

uint64_t sub_2378A7100()
{
  sub_2378AE25C();
  return sub_237A88724();
}

uint64_t VisibilityRule.Animation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F8E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE25C();
  sub_237A886B8();
  LOBYTE(v14) = 0;
  sub_237A8828C();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_237A8828C();
    v14 = v8;
    v15 = v9;
    v16 = v10;
    v17 = v11;
    v13[15] = 2;
    sub_2378AE2A0();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.Animation.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t VisibilityRule.Animation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v12;
  int v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F900);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE25C();
  sub_237A88688();
  if (!v2)
  {
    LOBYTE(v16[0]) = 0;
    sub_237A881CC();
    v10 = v9;
    LOBYTE(v16[0]) = 1;
    sub_237A881CC();
    v13 = v12;
    v17 = 2;
    sub_2378AE2E4();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v16[0];
    v15 = v16[1];
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v13;
    *(_OWORD *)(a2 + 8) = v14;
    *(_OWORD *)(a2 + 24) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A74D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.Animation.init(from:)(a1, a2);
}

uint64_t sub_2378A74E4(_QWORD *a1)
{
  return VisibilityRule.Animation.encode(to:)(a1);
}

uint64_t sub_2378A74FC()
{
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  return sub_237A87554();
}

uint64_t sub_2378A7574()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A87554();
  sub_237A87554();
  return sub_237A88610();
}

uint64_t VisibilityRule.BezierCurve.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886A0();
  v10 = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_23787ADF8();
  sub_237A88304();
  if (!v2)
  {
    v10 = v3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_237A88304();
    v10 = v6;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_237A88304();
    v10 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_237A88304();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v8);
}

uint64_t VisibilityRule.BezierCurve.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A88670();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_23787AE3C();
    sub_237A882EC();
    v5 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_237A882EC();
    v6 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_237A882EC();
    v7 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_237A882EC();
    v9 = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A7948@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VisibilityRule.BezierCurve.init(from:)(a1, a2);
}

uint64_t sub_2378A795C(_QWORD *a1)
{
  return VisibilityRule.BezierCurve.encode(to:)(a1);
}

uint64_t sub_2378A7970()
{
  sub_2378B1CA0();
  return sub_237A87A40();
}

uint64_t sub_2378A79CC()
{
  sub_2378B1CA0();
  return sub_237A879F8();
}

uint64_t static VisibilityRule.TransmissionModeRule.numeric.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A9AE0(&unk_25681F5D8, &asc_25681F5D9, a1);
}

uint64_t static VisibilityRule.TransmissionModeRule.numeric.setter(char *a1)
{
  return sub_2378A9B44(a1, &unk_25681F5D8, &asc_25681F5D9);
}

uint64_t (*static VisibilityRule.TransmissionModeRule.numeric.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TransmissionModeRule.nonnumeric.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A9AE0(&unk_25681F5DA, asc_25681F5DB, a1);
}

uint64_t static VisibilityRule.TransmissionModeRule.nonnumeric.setter(char *a1)
{
  return sub_2378A9B44(a1, &unk_25681F5DA, asc_25681F5DB);
}

uint64_t (*static VisibilityRule.TransmissionModeRule.nonnumeric.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2378A7AE4()
{
  sub_2378AE328();
  return sub_237A88718();
}

uint64_t sub_2378A7B0C()
{
  sub_2378AE328();
  return sub_237A88724();
}

uint64_t VisibilityRule.TransmissionModeRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F910);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE328();
  sub_237A886B8();
  v15 = v8;
  v14 = 0;
  sub_2378AE36C();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_237888154();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TransmissionModeRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F928);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE328();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_2378AE3B0();
    sub_237A881F0();
    v9 = v16;
    v13 = 1;
    sub_237888198();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A7E00@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.TransmissionModeRule.init(from:)(a1, a2);
}

uint64_t sub_2378A7E14(_QWORD *a1)
{
  return VisibilityRule.TransmissionModeRule.encode(to:)(a1);
}

uint64_t sub_2378A7E34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378AD978(a1, a2) & 1;
}

CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional __swiftcall VisibilityRule.TickmarksSpeedUnitRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional)rawValue;
}

CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional sub_2378A7E70(Swift::Int *a1)
{
  return VisibilityRule.TickmarksSpeedUnitRule.Rule.init(rawValue:)(*a1);
}

uint64_t sub_2378A7E78()
{
  sub_2378B1C5C();
  return sub_237A87A40();
}

uint64_t sub_2378A7ED4()
{
  sub_2378B1C5C();
  return sub_237A879F8();
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.noUnit.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A800C(&asc_25681F5DB[1], a31, &a31[1], a1);
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.noUnit.setter(char *a1)
{
  return sub_2378A8080(a1, &asc_25681F5DB[1], a31, &a31[1]);
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.noUnit.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.mph.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A800C(&unk_25681F5DF, a31_0, &a31_0[1], a1);
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.mph.setter(char *a1)
{
  return sub_2378A8080(a1, &unk_25681F5DF, a31_0, &a31_0[1]);
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.mph.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.kmh.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A800C(&unk_25681F5E2, a31_1, &a31_1[1], a1);
}

uint64_t sub_2378A800C@<X0>(_BYTE *a1@<X0>, char *a2@<X1>, char *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;
  char v9;
  char v10;

  result = swift_beginAccess();
  v9 = *a2;
  v10 = *a3;
  *a4 = *a1;
  a4[1] = v9;
  a4[2] = v10;
  return result;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.kmh.setter(char *a1)
{
  return sub_2378A8080(a1, &unk_25681F5E2, a31_1, &a31_1[1]);
}

uint64_t sub_2378A8080(char *a1, _BYTE *a2, _BYTE *a3, _BYTE *a4)
{
  char v7;
  char v8;
  char v9;
  uint64_t result;

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  result = swift_beginAccess();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
  return result;
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.kmh.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.hash(into:)()
{
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378A81C0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001CLL;
  if (*v0 != 1)
    v1 = 0xD00000000000001ALL;
  if (*v0)
    return v1;
  else
    return 1701606770;
}

uint64_t sub_2378A8220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B13F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A8244()
{
  sub_2378AE3F4();
  return sub_237A88718();
}

uint64_t sub_2378A826C()
{
  sub_2378AE3F4();
  return sub_237A88724();
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  char v10;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F938);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v13 = v1[2];
  v14 = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE3F4();
  sub_237A886B8();
  v20 = v8;
  v19 = 0;
  sub_2378AE438();
  sub_237A882B0();
  if (!v2)
  {
    v10 = v13;
    v18 = v14;
    v17 = 1;
    sub_237888154();
    sub_237A882B0();
    v16 = v10;
    v15 = 2;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;
  char v16;
  unsigned __int8 v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F950);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE3F4();
  sub_237A88688();
  if (!v2)
  {
    v18 = 0;
    sub_2378AE47C();
    sub_237A881F0();
    v9 = v19;
    v16 = 1;
    sub_237888198();
    sub_237A881F0();
    v13 = v17;
    v14 = 2;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v15;
    *a2 = v9;
    a2[1] = v13;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A869C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.TickmarksSpeedUnitRule.init(from:)(a1, a2);
}

uint64_t sub_2378A86B0(_QWORD *a1)
{
  return VisibilityRule.TickmarksSpeedUnitRule.encode(to:)(a1);
}

uint64_t sub_2378A86C8()
{
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378A8760()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional __swiftcall VisibilityRule.SpeedLimiterRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5)
    LOBYTE(v2) = 4;
  *v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional)rawValue;
}

uint64_t VisibilityRule.SpeedLimiterRule.Rule.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional sub_2378A8840(Swift::Int *a1)
{
  return VisibilityRule.SpeedLimiterRule.Rule.init(rawValue:)(*a1);
}

void sub_2378A8848(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_2378A8858()
{
  sub_2378B1C18();
  return sub_237A87A40();
}

uint64_t sub_2378A88B4()
{
  sub_2378B1C18();
  return sub_237A879F8();
}

uint64_t sub_2378A8900()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2378A8944()
{
  return sub_237A885E0();
}

uint64_t sub_2378A8970()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

double static VisibilityRule.SpeedLimiterRule.cruiseControl.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;
  double result;

  swift_beginAccess();
  v2 = qword_25681F610;
  v3 = byte_25681F618;
  v4 = unk_25681F619;
  *(_BYTE *)a1 = byte_25681F5E8;
  *(_OWORD *)(a1 + 8) = unk_25681F5F0;
  result = dbl_25681F600[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_25681F600;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.cruiseControl.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v1 = *(_BYTE *)a1;
  v6 = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_25681F5E8 = v1;
  unk_25681F5F0 = v7;
  result = v6;
  *(__n128 *)dbl_25681F600 = v6;
  qword_25681F610 = v2;
  byte_25681F618 = v3;
  unk_25681F619 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.cruiseControl.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;
  double result;

  swift_beginAccess();
  v2 = qword_25681F648;
  v3 = byte_25681F650;
  v4 = unk_25681F651;
  *(_BYTE *)a1 = byte_25681F620;
  *(_OWORD *)(a1 + 8) = unk_25681F628;
  result = dbl_25681F638[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_25681F638;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v1 = *(_BYTE *)a1;
  v6 = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_25681F620 = v1;
  unk_25681F628 = v7;
  result = v6;
  *(__n128 *)dbl_25681F638 = v6;
  qword_25681F648 = v2;
  byte_25681F650 = v3;
  unk_25681F651 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;
  double result;

  swift_beginAccess();
  v2 = qword_25681F680;
  v3 = byte_25681F688;
  v4 = unk_25681F689;
  *(_BYTE *)a1 = byte_25681F658;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&algn_25681F659[7];
  result = *(double *)&algn_25681F659[23];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_25681F659[23];
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v1 = *(_BYTE *)a1;
  v6 = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_25681F658 = v1;
  *(_OWORD *)&algn_25681F659[7] = v7;
  result = v6;
  *(__n128 *)&algn_25681F659[23] = v6;
  qword_25681F680 = v2;
  byte_25681F688 = v3;
  unk_25681F689 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimited.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;
  double result;

  swift_beginAccess();
  v2 = qword_25681F6B8;
  v3 = byte_25681F6C0;
  v4 = unk_25681F6C1;
  *(_BYTE *)a1 = byte_25681F690;
  *(_OWORD *)(a1 + 8) = unk_25681F698;
  result = dbl_25681F6A8[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_25681F6A8;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimited.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v1 = *(_BYTE *)a1;
  v6 = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_25681F690 = v1;
  unk_25681F698 = v7;
  result = v6;
  *(__n128 *)dbl_25681F6A8 = v6;
  qword_25681F6B8 = v2;
  byte_25681F6C0 = v3;
  unk_25681F6C1 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimited.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;
  double result;

  swift_beginAccess();
  v2 = qword_25681F6F0;
  v3 = byte_25681F6F8;
  v4 = unk_25681F6F9;
  *(_BYTE *)a1 = byte_25681F6C8;
  *(_OWORD *)(a1 + 8) = unk_25681F6D0;
  result = dbl_25681F6E0[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_25681F6E0;
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v1 = *(_BYTE *)a1;
  v6 = *(__n128 *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_25681F6C8 = v1;
  unk_25681F6D0 = v7;
  result = v6;
  *(__n128 *)dbl_25681F6E0 = v6;
  qword_25681F6F0 = v2;
  byte_25681F6F8 = v3;
  unk_25681F6F9 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.SpeedLimiterRule.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_237A885E0();
  sub_237A885EC();
  if (v1 != 1)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A87554();
    sub_237A87554();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378A90F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378A9124 + 4 * byte_237A8D840[a1]))(1701606770, 0xE400000000000000);
}

unint64_t sub_2378A9124()
{
  return 0xD000000000000011;
}

unint64_t sub_2378A9140()
{
  return 0xD000000000000016;
}

uint64_t sub_2378A9178()
{
  unsigned __int8 *v0;

  return sub_2378A90F8(*v0);
}

uint64_t sub_2378A9180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B152C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A91A4()
{
  sub_2378AE4C0();
  return sub_237A88718();
}

uint64_t sub_2378A91CC()
{
  sub_2378AE4C0();
  return sub_237A88724();
}

uint64_t VisibilityRule.SpeedLimiterRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F960);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v19 = *((_QWORD *)v1 + 2);
  v20 = v9;
  v10 = *((_QWORD *)v1 + 3);
  v17 = *((_QWORD *)v1 + 4);
  v18 = v10;
  v16 = *((_QWORD *)v1 + 5);
  v27 = v1[48];
  LODWORD(v10) = v1[49];
  v14 = v1[50];
  v15 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE4C0();
  sub_237A886B8();
  LOBYTE(v21) = v8;
  v28 = 0;
  sub_2378AE504();
  sub_237A882B0();
  if (!v2)
  {
    v12 = v14;
    v11 = v15;
    v21 = v20;
    v22 = v19;
    v23 = v18;
    v24 = v17;
    v25 = v16;
    v26 = v27;
    v28 = 1;
    sub_2378ADB6C();
    sub_237A88268();
    LOBYTE(v21) = v11;
    v28 = 2;
    sub_237888154();
    sub_237A882B0();
    LOBYTE(v21) = v12;
    v28 = 3;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.SpeedLimiterRule.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_237A885D4();
  sub_237A885E0();
  sub_237A885EC();
  if (v1 != 1)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A87554();
    sub_237A87554();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.SpeedLimiterRule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F978);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE4C0();
  sub_237A88688();
  if (!v2)
  {
    v28 = 0;
    sub_2378AE548();
    sub_237A881F0();
    v9 = v21;
    v28 = 1;
    sub_2378ADFAC();
    sub_237A881A8();
    v27 = v9;
    v19 = v22;
    v20 = v21;
    v17 = v24;
    v18 = v23;
    v16 = v25;
    v10 = v26;
    v28 = 2;
    sub_237888198();
    sub_237A881F0();
    HIDWORD(v15) = v10;
    LOBYTE(v10) = v21;
    v28 = 3;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v21;
    *(_BYTE *)a2 = v27;
    v13 = v19;
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v13;
    v14 = v17;
    *(_QWORD *)(a2 + 24) = v18;
    *(_QWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v16;
    *(_BYTE *)(a2 + 48) = BYTE4(v15);
    *(_BYTE *)(a2 + 49) = v10;
    *(_BYTE *)(a2 + 50) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378A97B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.SpeedLimiterRule.init(from:)(a1, a2);
}

uint64_t sub_2378A97C4(_QWORD *a1)
{
  return VisibilityRule.SpeedLimiterRule.encode(to:)(a1);
}

uint64_t sub_2378A97E0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_237A885D4();
  sub_237A885E0();
  sub_237A885EC();
  if (v1 != 1)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A87554();
    sub_237A87554();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::VisibilityRule::RemainingRangeRule::Rule_optional __swiftcall VisibilityRule.RemainingRangeRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::RemainingRangeRule::Rule_optional)rawValue;
}

uint64_t VisibilityRule.RemainingRangeRule.Rule.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

_QWORD *sub_2378A995C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_2378A997C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_2378A9994()
{
  sub_2378B1BD4();
  return sub_237A87A40();
}

uint64_t sub_2378A99F0()
{
  sub_2378B1BD4();
  return sub_237A879F8();
}

uint64_t sub_2378A9A3C()
{
  return sub_237A885E0();
}

uint64_t static VisibilityRule.RemainingRangeRule.iconOnly.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A9AE0(&unk_25681F6FB, asc_25681F6FC, a1);
}

uint64_t static VisibilityRule.RemainingRangeRule.iconOnly.setter(char *a1)
{
  return sub_2378A9B44(a1, &unk_25681F6FB, asc_25681F6FC);
}

uint64_t (*static VisibilityRule.RemainingRangeRule.iconOnly.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.RemainingRangeRule.rangeAndIcon.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_2378A9AE0(&asc_25681F6FC[1], asc_25681F6FE, a1);
}

uint64_t sub_2378A9AE0@<X0>(_BYTE *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  char v7;

  result = swift_beginAccess();
  v7 = *a2;
  *a3 = *a1;
  a3[1] = v7;
  return result;
}

uint64_t static VisibilityRule.RemainingRangeRule.rangeAndIcon.setter(char *a1)
{
  return sub_2378A9B44(a1, &asc_25681F6FC[1], asc_25681F6FE);
}

uint64_t sub_2378A9B44(char *a1, _BYTE *a2, _BYTE *a3)
{
  char v5;
  char v6;
  uint64_t result;

  v5 = *a1;
  v6 = a1[1];
  result = swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return result;
}

uint64_t (*static VisibilityRule.RemainingRangeRule.rangeAndIcon.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TransmissionModeF0V4hash4intoys6HasherVz_tF_0()
{
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378A9C4C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E65644961746164;
  else
    return 1701606770;
}

uint64_t sub_2378A9C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B16BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378A9CB0()
{
  sub_2378AE58C();
  return sub_237A88718();
}

uint64_t sub_2378A9CD8()
{
  sub_2378AE58C();
  return sub_237A88724();
}

uint64_t VisibilityRule.RemainingRangeRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F988);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE58C();
  sub_237A886B8();
  v15 = v8;
  v14 = 0;
  sub_2378AE5D0();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_237888154();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TransmissionModeF0V9hashValueSivg_0()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.RemainingRangeRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE58C();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_2378AE614();
    sub_237A881F0();
    v9 = v16;
    v13 = 1;
    sub_237888198();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378AA050@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.RemainingRangeRule.init(from:)(a1, a2);
}

uint64_t sub_2378AA064(_QWORD *a1)
{
  return VisibilityRule.RemainingRangeRule.encode(to:)(a1);
}

uint64_t sub_2378AA078()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional __swiftcall VisibilityRule.LayoutModeRule.Level.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if (rawValue <= 199)
  {
    if (!rawValue)
    {
      *v1 = 0;
      return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
    }
    if (rawValue == 100)
    {
      *v1 = 1;
      return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
    }
LABEL_12:
    *v1 = 5;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue == 400)
  {
    *v1 = 4;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue == 300)
  {
    *v1 = 3;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue != 200)
    goto LABEL_12;
  *v1 = 2;
  return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
}

uint64_t VisibilityRule.LayoutModeRule.Level.rawValue.getter()
{
  unsigned __int8 *v0;

  return 100 * *v0;
}

CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional sub_2378AA178(Swift::Int *a1)
{
  return VisibilityRule.LayoutModeRule.Level.init(rawValue:)(*a1);
}

void sub_2378AA180(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = 100 * *v1;
}

uint64_t sub_2378AA194()
{
  sub_2378B1B90();
  return sub_237A87A40();
}

uint64_t sub_2378AA1F0()
{
  sub_2378B1B90();
  return sub_237A879F8();
}

uint64_t sub_2378AA23C()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2378AA284()
{
  return sub_237A885E0();
}

uint64_t sub_2378AA2B4()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

float static VisibilityRule.LayoutModeRule.none.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F704;
  *(_BYTE *)a1 = byte_25681F700;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.none.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F700, &dword_25681F704);
}

uint64_t (*static VisibilityRule.LayoutModeRule.none.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.exit.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F70C;
  *(_BYTE *)a1 = byte_25681F708;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.exit.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F708, &dword_25681F70C);
}

uint64_t (*static VisibilityRule.LayoutModeRule.exit.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.ghost.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F714;
  *(_BYTE *)a1 = byte_25681F710;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.ghost.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F710, &dword_25681F714);
}

uint64_t (*static VisibilityRule.LayoutModeRule.ghost.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.ghostFaded.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F71C;
  *(_BYTE *)a1 = byte_25681F718;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.ghostFaded.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F718, &dword_25681F71C);
}

uint64_t (*static VisibilityRule.LayoutModeRule.ghostFaded.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.accessory.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F724;
  *(_BYTE *)a1 = byte_25681F720;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.accessory.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F720, &dword_25681F724);
}

uint64_t (*static VisibilityRule.LayoutModeRule.accessory.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.drive.getter@<S0>(uint64_t a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_25681F72C;
  *(_BYTE *)a1 = byte_25681F728;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.drive.setter(char *a1)
{
  return sub_2378AA67C(a1, &byte_25681F728, &dword_25681F72C);
}

uint64_t sub_2378AA67C(char *a1, _BYTE *a2, _DWORD *a3)
{
  char v5;
  int v6;
  uint64_t result;

  v5 = *a1;
  v6 = *((_DWORD *)a1 + 1);
  result = swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return result;
}

uint64_t (*static VisibilityRule.LayoutModeRule.drive.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.LayoutModeRule.hash(into:)()
{
  sub_237A885E0();
  return sub_237A885F8();
}

uint64_t sub_2378AA760()
{
  _BYTE *v0;

  if (*v0)
    return 0x7974696361706FLL;
  else
    return 0x6C6576656CLL;
}

uint64_t sub_2378AA798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B17C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378AA7BC()
{
  sub_2378AE658();
  return sub_237A88718();
}

uint64_t sub_2378AA7E4()
{
  sub_2378AE658();
  return sub_237A88724();
}

uint64_t VisibilityRule.LayoutModeRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  _BYTE v10[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE658();
  sub_237A886B8();
  v10[15] = v8;
  v10[14] = 0;
  sub_2378AE69C();
  sub_237A882B0();
  if (!v2)
  {
    v10[13] = 1;
    sub_237A8828C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.LayoutModeRule.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t VisibilityRule.LayoutModeRule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  int v10;
  int v11;
  _BYTE v13[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE658();
  sub_237A88688();
  if (!v2)
  {
    v13[14] = 0;
    sub_2378AE6E0();
    sub_237A881F0();
    v9 = v13[15];
    v13[13] = 1;
    sub_237A881CC();
    v11 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9;
    *(_DWORD *)(a2 + 4) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378AAB1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.LayoutModeRule.init(from:)(a1, a2);
}

uint64_t sub_2378AAB30(_QWORD *a1)
{
  return VisibilityRule.LayoutModeRule.encode(to:)(a1);
}

uint64_t sub_2378AAB48()
{
  sub_237A885E0();
  return sub_237A885F8();
}

uint64_t sub_2378AAB90()
{
  sub_237A885D4();
  sub_237A885E0();
  sub_237A885F8();
  return sub_237A88610();
}

BOOL sub_2378AABF0(float *a1, float *a2)
{
  return a1[1] == a2[1] && *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2;
}

uint64_t VisibilityRule.InvalidDataRule.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378AAC60()
{
  return 0x6E65644961746164;
}

uint64_t sub_2378AAC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2378AAD3C()
{
  sub_2378AE724();
  return sub_237A88718();
}

uint64_t sub_2378AAD64()
{
  sub_2378AE724();
  return sub_237A88724();
}

uint64_t VisibilityRule.InvalidDataRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE724();
  sub_237A886B8();
  v10 = v7;
  sub_237888154();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisibilityRule.InvalidDataRule.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.InvalidDataRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE724();
  sub_237A88688();
  if (!v2)
  {
    sub_237888198();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378AB008@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.InvalidDataRule.init(from:)(a1, a2);
}

uint64_t sub_2378AB01C(_QWORD *a1)
{
  return VisibilityRule.InvalidDataRule.encode(to:)(a1);
}

uint64_t sub_2378AB030()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2378AB094()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378AB0E4()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.SecondarySpeedRule.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A885EC();
}

uint64_t sub_2378AB1B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656C62616E65;
  else
    return 0x6E65644961746164;
}

uint64_t sub_2378AB1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B18A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378AB220()
{
  sub_2378AE768();
  return sub_237A88718();
}

uint64_t sub_2378AB248()
{
  sub_2378AE768();
  return sub_237A88724();
}

uint64_t VisibilityRule.SecondarySpeedRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F9F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE768();
  sub_237A886B8();
  v15 = v8;
  v14 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.SecondarySpeedRule.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t VisibilityRule.SecondarySpeedRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE768();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v16;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA08);
    sub_2378AE7AC();
    sub_237A881A8();
    v11 = v13 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378AB5C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.SecondarySpeedRule.init(from:)(a1, a2);
}

uint64_t sub_2378AB5D8(_QWORD *a1)
{
  return VisibilityRule.SecondarySpeedRule.encode(to:)(a1);
}

uint64_t sub_2378AB5EC()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t sub_2378AB668()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A885EC();
}

uint64_t sub_2378AB6D4()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t sub_2378AB750()
{
  sub_2378B1B4C();
  return sub_237A87A40();
}

uint64_t sub_2378AB7AC()
{
  sub_2378B1B4C();
  return sub_237A879F8();
}

uint64_t sub_2378AB7F8()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2378AB844()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

double sub_2378AB88C()
{
  double result;

  *(_QWORD *)&result = 353637121;
  dword_25681F730 = 353637121;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int16 v3;
  char v4;

  if (qword_25681E018 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = *(_WORD *)((char *)&dword_25681F730 + 1);
  v4 = HIBYTE(dword_25681F730);
  *(_BYTE *)a1 = dword_25681F730;
  *(_WORD *)(a1 + 1) = v3;
  *(_BYTE *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.setter(char *a1)
{
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t result;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  if (qword_25681E018 != -1)
    swift_once();
  result = swift_beginAccess();
  LOBYTE(dword_25681F730) = v1;
  BYTE1(dword_25681F730) = v2;
  BYTE2(dword_25681F730) = v3;
  HIBYTE(dword_25681F730) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.modify())()
{
  if (qword_25681E018 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2378ABA24()
{
  double result;

  *(_QWORD *)&result = 353637120;
  dword_25681F734 = 353637120;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int16 v3;
  char v4;

  if (qword_25681E020 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = *(_WORD *)((char *)&dword_25681F734 + 1);
  v4 = HIBYTE(dword_25681F734);
  *(_BYTE *)a1 = dword_25681F734;
  *(_WORD *)(a1 + 1) = v3;
  *(_BYTE *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.setter(char *a1)
{
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t result;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  if (qword_25681E020 != -1)
    swift_once();
  result = swift_beginAccess();
  LOBYTE(dword_25681F734) = v1;
  BYTE1(dword_25681F734) = v2;
  BYTE2(dword_25681F734) = v3;
  HIBYTE(dword_25681F734) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.modify())()
{
  if (qword_25681E020 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2378ABBBC()
{
  double result;

  *(_QWORD *)&result = 33619969;
  dword_25681F738 = 33619969;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int16 v3;
  char v4;

  if (qword_25681E028 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = *(_WORD *)((char *)&dword_25681F738 + 1);
  v4 = HIBYTE(dword_25681F738);
  *(_BYTE *)a1 = dword_25681F738;
  *(_WORD *)(a1 + 1) = v3;
  *(_BYTE *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.setter(char *a1)
{
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t result;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  if (qword_25681E028 != -1)
    swift_once();
  result = swift_beginAccess();
  LOBYTE(dword_25681F738) = v1;
  BYTE1(dword_25681F738) = v2;
  BYTE2(dword_25681F738) = v3;
  HIBYTE(dword_25681F738) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.modify())()
{
  if (qword_25681E028 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2378ABD54()
{
  double result;

  *(_QWORD *)&result = 33619968;
  dword_25681F73C = 33619968;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int16 v3;
  char v4;

  if (qword_25681E030 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = *(_WORD *)((char *)&dword_25681F73C + 1);
  v4 = HIBYTE(dword_25681F73C);
  *(_BYTE *)a1 = dword_25681F73C;
  *(_WORD *)(a1 + 1) = v3;
  *(_BYTE *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.setter(char *a1)
{
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t result;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  if (qword_25681E030 != -1)
    swift_once();
  result = swift_beginAccess();
  LOBYTE(dword_25681F73C) = v1;
  BYTE1(dword_25681F73C) = v2;
  BYTE2(dword_25681F73C) = v3;
  HIBYTE(dword_25681F73C) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.modify())()
{
  if (qword_25681E030 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.TemperatureLabelRule.hash(into:)()
{
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378ABFC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378ABFF0 + 4 * byte_237A8D844[a1]))(1701606770, 0xE400000000000000);
}

unint64_t sub_2378ABFF0()
{
  return 0xD000000000000019;
}

unint64_t sub_2378AC010()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2378AC038()
{
  unsigned __int8 *v0;

  return sub_2378ABFC4(*v0);
}

uint64_t sub_2378AC040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B19BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378AC064()
{
  sub_2378AE7F8();
  return sub_237A88718();
}

uint64_t sub_2378AC08C()
{
  sub_2378AE7F8();
  return sub_237A88724();
}

uint64_t VisibilityRule.TemperatureLabelRule.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  char v10;
  char v11;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v14 = v1[2];
  v15 = v9;
  HIDWORD(v13) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE7F8();
  sub_237A886B8();
  v23 = v8;
  v22 = 0;
  sub_2378AE83C();
  sub_237A882B0();
  if (!v2)
  {
    v10 = BYTE4(v13);
    v11 = v14;
    v21 = v15;
    v20 = 1;
    sub_237888154();
    sub_237A882B0();
    v19 = v11;
    v18 = 2;
    sub_237A882B0();
    v17 = v10;
    v16 = 3;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TemperatureLabelRule.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t VisibilityRule.TemperatureLabelRule.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378AE7F8();
  sub_237A88688();
  if (!v2)
  {
    v22 = 0;
    sub_2378AE880();
    sub_237A881F0();
    v9 = v23;
    v20 = 1;
    sub_237888198();
    sub_237A881F0();
    v15 = v9;
    v10 = v21;
    v18 = 2;
    sub_237A881F0();
    v14 = v10;
    LOBYTE(v10) = v19;
    v16 = 3;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2378AC588@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VisibilityRule.TemperatureLabelRule.init(from:)(a1, a2);
}

uint64_t sub_2378AC59C(_QWORD *a1)
{
  return VisibilityRule.TemperatureLabelRule.encode(to:)(a1);
}

uint64_t sub_2378AC5B8()
{
  sub_237A885D4();
  sub_237A885E0();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

unint64_t sub_2378AC6A4()
{
  unint64_t result;

  result = qword_25681F748;
  if (!qword_25681F748)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FD24, &type metadata for VisibilityConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F748);
  }
  return result;
}

unint64_t sub_2378AC6E8()
{
  unint64_t result;

  result = qword_25681F760;
  if (!qword_25681F760)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule, &type metadata for VisibilityRule);
    atomic_store(result, (unint64_t *)&qword_25681F760);
  }
  return result;
}

uint64_t sub_2378AC72C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F750);
    v8 = a2();
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378AC794()
{
  unint64_t result;

  result = qword_25681F778;
  if (!qword_25681F778)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule, &type metadata for VisibilityRule);
    atomic_store(result, (unint64_t *)&qword_25681F778);
  }
  return result;
}

unint64_t *sub_2378AC7D8(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x80800000;
  return result;
}

unint64_t *sub_2378AC7F8(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0xC0000000;
  return result;
}

uint64_t sub_2378AC814(_DWORD *a1)
{
  return (*a1 >> 29) & 6 | (*a1 >> 23) & 1u;
}

_QWORD *sub_2378AC828(_QWORD *result)
{
  *result &= 0xFFFFFFFF3F7FFFFFLL;
  return result;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO018TickmarksSpeedUnitF0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*a1 == *a2)
  {
    v2 = InstrumentDataIdentifier.rawValue.getter();
    v4 = v3;
    if (v2 == InstrumentDataIdentifier.rawValue.getter() && v4 == v5)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v7 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = 0;
      if ((v7 & 1) == 0)
        return v6 & 1;
    }
    v8 = InstrumentDataIdentifier.rawValue.getter();
    v10 = v9;
    if (v8 == InstrumentDataIdentifier.rawValue.getter() && v10 == v11)
      v6 = 1;
    else
      v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO012SpeedLimiterF0V2eeoiySbAE_AEtFZ_0(float *a1, unsigned __int8 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(unsigned __int8 *)a1 != *a2)
    goto LABEL_13;
  v2 = a2[48];
  if (((_BYTE)a1[12] & 1) == 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    if (a1[2] != *(float *)&v7)
      v2 = 1;
    if ((v2 & 1) == 0 && a1[3] == *((float *)&v7 + 1) && (sub_237A87548() & 1) != 0 && (sub_237A87548() & 1) != 0)
      goto LABEL_4;
LABEL_13:
    v8 = 0;
    return v8 & 1;
  }
  if ((a2[48] & 1) == 0)
    goto LABEL_13;
LABEL_4:
  v3 = InstrumentDataIdentifier.rawValue.getter();
  v5 = v4;
  if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8 & 1;
  }
  v11 = InstrumentDataIdentifier.rawValue.getter();
  v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
    v8 = 1;
  else
    v8 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TemperatureLabelF0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*a1 == *a2)
  {
    v3 = InstrumentDataIdentifier.rawValue.getter();
    v5 = v4;
    if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v7 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = 0;
      if ((v7 & 1) == 0)
        return v2 & 1;
    }
    v8 = InstrumentDataIdentifier.rawValue.getter();
    v10 = v9;
    if (v8 == InstrumentDataIdentifier.rawValue.getter() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v12 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = 0;
      if ((v12 & 1) == 0)
        return v2 & 1;
    }
    v13 = InstrumentDataIdentifier.rawValue.getter();
    v15 = v14;
    if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
      v2 = 1;
    else
      v2 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

void _s14CarPlayAssetUI14VisibilityRuleO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char *v3;
  _BYTE v4[136];
  _BYTE v5[136];
  _DWORD v6[34];

  sub_23787D0C8(a1, (uint64_t)v4);
  sub_23787D0C8(a2, (uint64_t)v5);
  sub_23787D0C8((uint64_t)v4, (uint64_t)v6);
  v3 = (char *)sub_2378ACD70 + 4 * word_237A8D848[sub_2378AC814(v6)];
  __asm { BR              X10 }
}

BOOL sub_2378ACD70()
{
  uint64_t v0;
  float *v1;
  int v2;
  float v3;
  float v4;
  float v5;
  float *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  _QWORD v18[34];
  uint64_t v19;

  v1 = (float *)sub_2378AC828((_QWORD *)(v0 - 248));
  v2 = *(unsigned __int8 *)v1;
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[13];
  v17 = v1[12];
  sub_23787D0C8((uint64_t)&v19, (uint64_t)v18);
  if (sub_2378AC814(v18))
    return 0;
  v6 = (float *)sub_2378AC828(v18);
  if (v2 != *(unsigned __int8 *)v6)
    return 0;
  v16 = v6[2];
  v15 = v6[3];
  v14 = v6[12];
  v13 = v6[13];
  v7 = InstrumentDataIdentifier.rawValue.getter();
  v9 = v8;
  if (v7 == InstrumentDataIdentifier.rawValue.getter() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  return v3 == v16
      && v4 == v15
      && (sub_237A87548() & 1) != 0
      && (sub_237A87548() & 1) != 0
      && v17 == v14
      && v5 == v13
      && (sub_237A87548() & 1) != 0
      && (sub_237A87548() & 1) != 0;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO011InvalidDataF0V2eeoiySbAE_AEtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO014SecondarySpeedF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  v4 = InstrumentDataIdentifier.rawValue.getter();
  v6 = v5;
  if (v4 == InstrumentDataIdentifier.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    return v2 ^ v3 ^ 1u;
  }
  v9 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v9 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_2378AD978(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*a1 == *a2)
  {
    v3 = InstrumentDataIdentifier.rawValue.getter();
    v5 = v4;
    if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6)
      v2 = 1;
    else
      v2 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

BOOL _s14CarPlayAssetUI14VisibilityRuleO9AnimationV2eeoiySbAE_AEtFZ_0(float *a1, float *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  return v2 && (sub_237A87548() & 1) != 0 && (sub_237A87548() & 1) != 0;
}

unint64_t sub_2378ADAA0()
{
  unint64_t result;

  result = qword_25681F7C8;
  if (!qword_25681F7C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FCD4, &type metadata for VisibilityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F7C8);
  }
  return result;
}

unint64_t sub_2378ADAE4()
{
  unint64_t result;

  result = qword_25681F7D0;
  if (!qword_25681F7D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FC84, &type metadata for VisibilityRule.TemperatureLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F7D0);
  }
  return result;
}

unint64_t sub_2378ADB28()
{
  unint64_t result;

  result = qword_25681F7D8;
  if (!qword_25681F7D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule, &type metadata for VisibilityRule.TemperatureLabelRule);
    atomic_store(result, (unint64_t *)&qword_25681F7D8);
  }
  return result;
}

unint64_t sub_2378ADB6C()
{
  unint64_t result;

  result = qword_25681F7E0;
  if (!qword_25681F7E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.Animation, &type metadata for VisibilityRule.Animation);
    atomic_store(result, (unint64_t *)&qword_25681F7E0);
  }
  return result;
}

unint64_t sub_2378ADBB0()
{
  unint64_t result;

  result = qword_25681F7E8;
  if (!qword_25681F7E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FC34, &type metadata for VisibilityRule.SecondarySpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F7E8);
  }
  return result;
}

unint64_t sub_2378ADBF4()
{
  unint64_t result;

  result = qword_25681F7F0;
  if (!qword_25681F7F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SecondarySpeedRule, &type metadata for VisibilityRule.SecondarySpeedRule);
    atomic_store(result, (unint64_t *)&qword_25681F7F0);
  }
  return result;
}

unint64_t sub_2378ADC38()
{
  unint64_t result;

  result = qword_25681F7F8;
  if (!qword_25681F7F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FBE4, &type metadata for VisibilityRule.InvalidDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F7F8);
  }
  return result;
}

unint64_t sub_2378ADC7C()
{
  unint64_t result;

  result = qword_25681F800;
  if (!qword_25681F800)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.InvalidDataRule, &type metadata for VisibilityRule.InvalidDataRule);
    atomic_store(result, (unint64_t *)&qword_25681F800);
  }
  return result;
}

unint64_t sub_2378ADCC0()
{
  unint64_t result;

  result = qword_25681F808;
  if (!qword_25681F808)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FB94, &type metadata for VisibilityRule.LayoutModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F808);
  }
  return result;
}

unint64_t sub_2378ADD04()
{
  unint64_t result;

  result = qword_25681F810;
  if (!qword_25681F810)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule, &type metadata for VisibilityRule.LayoutModeRule);
    atomic_store(result, (unint64_t *)&qword_25681F810);
  }
  return result;
}

unint64_t sub_2378ADD48()
{
  unint64_t result;

  result = qword_25681F818;
  if (!qword_25681F818)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FB44, &type metadata for VisibilityRule.RemainingRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F818);
  }
  return result;
}

unint64_t sub_2378ADD8C()
{
  unint64_t result;

  result = qword_25681F820;
  if (!qword_25681F820)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule, &type metadata for VisibilityRule.RemainingRangeRule);
    atomic_store(result, (unint64_t *)&qword_25681F820);
  }
  return result;
}

unint64_t sub_2378ADDD0()
{
  unint64_t result;

  result = qword_25681F828;
  if (!qword_25681F828)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FAF4, &type metadata for VisibilityRule.SpeedLimiterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F828);
  }
  return result;
}

unint64_t sub_2378ADE14()
{
  unint64_t result;

  result = qword_25681F830;
  if (!qword_25681F830)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule, &type metadata for VisibilityRule.SpeedLimiterRule);
    atomic_store(result, (unint64_t *)&qword_25681F830);
  }
  return result;
}

unint64_t sub_2378ADE58()
{
  unint64_t result;

  result = qword_25681F838;
  if (!qword_25681F838)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FAA4, &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F838);
  }
  return result;
}

unint64_t sub_2378ADE9C()
{
  unint64_t result;

  result = qword_25681F840;
  if (!qword_25681F840)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule);
    atomic_store(result, (unint64_t *)&qword_25681F840);
  }
  return result;
}

unint64_t sub_2378ADEE0()
{
  unint64_t result;

  result = qword_25681F848;
  if (!qword_25681F848)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FA54, &type metadata for VisibilityRule.TransmissionModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F848);
  }
  return result;
}

unint64_t sub_2378ADF24()
{
  unint64_t result;

  result = qword_25681F850;
  if (!qword_25681F850)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule, &type metadata for VisibilityRule.TransmissionModeRule);
    atomic_store(result, (unint64_t *)&qword_25681F850);
  }
  return result;
}

unint64_t sub_2378ADF68()
{
  unint64_t result;

  result = qword_25681F8A0;
  if (!qword_25681F8A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule, &type metadata for VisibilityRule.TemperatureLabelRule);
    atomic_store(result, (unint64_t *)&qword_25681F8A0);
  }
  return result;
}

unint64_t sub_2378ADFAC()
{
  unint64_t result;

  result = qword_25681F8A8;
  if (!qword_25681F8A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.Animation, &type metadata for VisibilityRule.Animation);
    atomic_store(result, (unint64_t *)&qword_25681F8A8);
  }
  return result;
}

unint64_t *sub_2378ADFF0(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0xC0800000;
  return result;
}

unint64_t sub_2378AE010()
{
  unint64_t result;

  result = qword_25681F8B0;
  if (!qword_25681F8B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SecondarySpeedRule, &type metadata for VisibilityRule.SecondarySpeedRule);
    atomic_store(result, (unint64_t *)&qword_25681F8B0);
  }
  return result;
}

unint64_t sub_2378AE054()
{
  unint64_t result;

  result = qword_25681F8B8;
  if (!qword_25681F8B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.InvalidDataRule, &type metadata for VisibilityRule.InvalidDataRule);
    atomic_store(result, (unint64_t *)&qword_25681F8B8);
  }
  return result;
}

unint64_t sub_2378AE098()
{
  unint64_t result;

  result = qword_25681F8C0;
  if (!qword_25681F8C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule, &type metadata for VisibilityRule.LayoutModeRule);
    atomic_store(result, (unint64_t *)&qword_25681F8C0);
  }
  return result;
}

unint64_t sub_2378AE0DC()
{
  unint64_t result;

  result = qword_25681F8C8;
  if (!qword_25681F8C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule, &type metadata for VisibilityRule.RemainingRangeRule);
    atomic_store(result, (unint64_t *)&qword_25681F8C8);
  }
  return result;
}

unint64_t *sub_2378AE120(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x40800000;
  return result;
}

unint64_t sub_2378AE140()
{
  unint64_t result;

  result = qword_25681F8D0;
  if (!qword_25681F8D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule, &type metadata for VisibilityRule.SpeedLimiterRule);
    atomic_store(result, (unint64_t *)&qword_25681F8D0);
  }
  return result;
}

unint64_t *sub_2378AE184(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x40000000;
  return result;
}

unint64_t sub_2378AE1A0()
{
  unint64_t result;

  result = qword_25681F8D8;
  if (!qword_25681F8D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule);
    atomic_store(result, (unint64_t *)&qword_25681F8D8);
  }
  return result;
}

unint64_t *sub_2378AE1E4(unint64_t *result)
{
  *result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x800000;
  return result;
}

unint64_t sub_2378AE200()
{
  unint64_t result;

  result = qword_25681F8E0;
  if (!qword_25681F8E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule, &type metadata for VisibilityRule.TransmissionModeRule);
    atomic_store(result, (unint64_t *)&qword_25681F8E0);
  }
  return result;
}

_QWORD *sub_2378AE244(_QWORD *result)
{
  *result &= 0xFFFFFFFF3F3F3F3FLL;
  return result;
}

unint64_t sub_2378AE25C()
{
  unint64_t result;

  result = qword_25681F8F0;
  if (!qword_25681F8F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8FA04, &type metadata for VisibilityRule.Animation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F8F0);
  }
  return result;
}

unint64_t sub_2378AE2A0()
{
  unint64_t result;

  result = qword_25681F8F8;
  if (!qword_25681F8F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.BezierCurve, &type metadata for VisibilityRule.BezierCurve);
    atomic_store(result, (unint64_t *)&qword_25681F8F8);
  }
  return result;
}

unint64_t sub_2378AE2E4()
{
  unint64_t result;

  result = qword_25681F908;
  if (!qword_25681F908)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.BezierCurve, &type metadata for VisibilityRule.BezierCurve);
    atomic_store(result, (unint64_t *)&qword_25681F908);
  }
  return result;
}

unint64_t sub_2378AE328()
{
  unint64_t result;

  result = qword_25681F918;
  if (!qword_25681F918)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F9B4, &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F918);
  }
  return result;
}

unint64_t sub_2378AE36C()
{
  unint64_t result;

  result = qword_25681F920;
  if (!qword_25681F920)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule.Rule, &type metadata for VisibilityRule.TransmissionModeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F920);
  }
  return result;
}

unint64_t sub_2378AE3B0()
{
  unint64_t result;

  result = qword_25681F930;
  if (!qword_25681F930)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule.Rule, &type metadata for VisibilityRule.TransmissionModeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F930);
  }
  return result;
}

unint64_t sub_2378AE3F4()
{
  unint64_t result;

  result = qword_25681F940;
  if (!qword_25681F940)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F964, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F940);
  }
  return result;
}

unint64_t sub_2378AE438()
{
  unint64_t result;

  result = qword_25681F948;
  if (!qword_25681F948)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule.Rule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F948);
  }
  return result;
}

unint64_t sub_2378AE47C()
{
  unint64_t result;

  result = qword_25681F958;
  if (!qword_25681F958)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule.Rule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F958);
  }
  return result;
}

unint64_t sub_2378AE4C0()
{
  unint64_t result;

  result = qword_25681F968;
  if (!qword_25681F968)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F914, &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F968);
  }
  return result;
}

unint64_t sub_2378AE504()
{
  unint64_t result;

  result = qword_25681F970;
  if (!qword_25681F970)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule.Rule, &type metadata for VisibilityRule.SpeedLimiterRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F970);
  }
  return result;
}

unint64_t sub_2378AE548()
{
  unint64_t result;

  result = qword_25681F980;
  if (!qword_25681F980)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule.Rule, &type metadata for VisibilityRule.SpeedLimiterRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F980);
  }
  return result;
}

unint64_t sub_2378AE58C()
{
  unint64_t result;

  result = qword_25681F990;
  if (!qword_25681F990)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F8C4, &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F990);
  }
  return result;
}

unint64_t sub_2378AE5D0()
{
  unint64_t result;

  result = qword_25681F998;
  if (!qword_25681F998)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule.Rule, &type metadata for VisibilityRule.RemainingRangeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F998);
  }
  return result;
}

unint64_t sub_2378AE614()
{
  unint64_t result;

  result = qword_25681F9A8;
  if (!qword_25681F9A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule.Rule, &type metadata for VisibilityRule.RemainingRangeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681F9A8);
  }
  return result;
}

unint64_t sub_2378AE658()
{
  unint64_t result;

  result = qword_25681F9B8;
  if (!qword_25681F9B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F874, &type metadata for VisibilityRule.LayoutModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F9B8);
  }
  return result;
}

unint64_t sub_2378AE69C()
{
  unint64_t result;

  result = qword_25681F9C0;
  if (!qword_25681F9C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule.Level, &type metadata for VisibilityRule.LayoutModeRule.Level);
    atomic_store(result, (unint64_t *)&qword_25681F9C0);
  }
  return result;
}

unint64_t sub_2378AE6E0()
{
  unint64_t result;

  result = qword_25681F9D0;
  if (!qword_25681F9D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule.Level, &type metadata for VisibilityRule.LayoutModeRule.Level);
    atomic_store(result, (unint64_t *)&qword_25681F9D0);
  }
  return result;
}

unint64_t sub_2378AE724()
{
  unint64_t result;

  result = qword_25681F9E0;
  if (!qword_25681F9E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F824, &type metadata for VisibilityRule.InvalidDataRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F9E0);
  }
  return result;
}

unint64_t sub_2378AE768()
{
  unint64_t result;

  result = qword_25681F9F8;
  if (!qword_25681F9F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F7D4, &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681F9F8);
  }
  return result;
}

unint64_t sub_2378AE7AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25681FA10;
  if (!qword_25681FA10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681FA08);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DecodableDefault<A>, v1);
    atomic_store(result, (unint64_t *)&qword_25681FA10);
  }
  return result;
}

unint64_t sub_2378AE7F8()
{
  unint64_t result;

  result = qword_25681FA20;
  if (!qword_25681FA20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F784, &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FA20);
  }
  return result;
}

unint64_t sub_2378AE83C()
{
  unint64_t result;

  result = qword_25681FA28;
  if (!qword_25681FA28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule.Rule, &type metadata for VisibilityRule.TemperatureLabelRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA28);
  }
  return result;
}

unint64_t sub_2378AE880()
{
  unint64_t result;

  result = qword_25681FA38;
  if (!qword_25681FA38)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule.Rule, &type metadata for VisibilityRule.TemperatureLabelRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA38);
  }
  return result;
}

unint64_t sub_2378AE8C8()
{
  unint64_t result;

  result = qword_25681FA40;
  if (!qword_25681FA40)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityConfiguration, &type metadata for VisibilityConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FA40);
  }
  return result;
}

unint64_t sub_2378AE910()
{
  unint64_t result;

  result = qword_25681FA48;
  if (!qword_25681FA48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule, &type metadata for VisibilityRule);
    atomic_store(result, (unint64_t *)&qword_25681FA48);
  }
  return result;
}

unint64_t sub_2378AE958()
{
  unint64_t result;

  result = qword_25681FA50;
  if (!qword_25681FA50)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.BezierCurve, &type metadata for VisibilityRule.BezierCurve);
    atomic_store(result, (unint64_t *)&qword_25681FA50);
  }
  return result;
}

unint64_t sub_2378AE9A0()
{
  unint64_t result;

  result = qword_25681FA58;
  if (!qword_25681FA58)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.Animation, &type metadata for VisibilityRule.Animation);
    atomic_store(result, (unint64_t *)&qword_25681FA58);
  }
  return result;
}

unint64_t sub_2378AE9E8()
{
  unint64_t result;

  result = qword_25681FA60;
  if (!qword_25681FA60)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule.Rule, &type metadata for VisibilityRule.TransmissionModeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA60);
  }
  return result;
}

unint64_t sub_2378AEA30()
{
  unint64_t result;

  result = qword_25681FA68;
  if (!qword_25681FA68)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule, &type metadata for VisibilityRule.TransmissionModeRule);
    atomic_store(result, (unint64_t *)&qword_25681FA68);
  }
  return result;
}

unint64_t sub_2378AEA78()
{
  unint64_t result;

  result = qword_25681FA70;
  if (!qword_25681FA70)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule.Rule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA70);
  }
  return result;
}

unint64_t sub_2378AEAC0()
{
  unint64_t result;

  result = qword_25681FA78;
  if (!qword_25681FA78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule);
    atomic_store(result, (unint64_t *)&qword_25681FA78);
  }
  return result;
}

unint64_t sub_2378AEB08()
{
  unint64_t result;

  result = qword_25681FA80;
  if (!qword_25681FA80)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule.Rule, &type metadata for VisibilityRule.SpeedLimiterRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA80);
  }
  return result;
}

unint64_t sub_2378AEB50()
{
  unint64_t result;

  result = qword_25681FA88;
  if (!qword_25681FA88)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule, &type metadata for VisibilityRule.SpeedLimiterRule);
    atomic_store(result, (unint64_t *)&qword_25681FA88);
  }
  return result;
}

unint64_t sub_2378AEB98()
{
  unint64_t result;

  result = qword_25681FA90;
  if (!qword_25681FA90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule.Rule, &type metadata for VisibilityRule.RemainingRangeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FA90);
  }
  return result;
}

unint64_t sub_2378AEBE0()
{
  unint64_t result;

  result = qword_25681FA98;
  if (!qword_25681FA98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule, &type metadata for VisibilityRule.RemainingRangeRule);
    atomic_store(result, (unint64_t *)&qword_25681FA98);
  }
  return result;
}

unint64_t sub_2378AEC28()
{
  unint64_t result;

  result = qword_25681FAA0;
  if (!qword_25681FAA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule.Level, &type metadata for VisibilityRule.LayoutModeRule.Level);
    atomic_store(result, (unint64_t *)&qword_25681FAA0);
  }
  return result;
}

unint64_t sub_2378AEC70()
{
  unint64_t result;

  result = qword_25681FAA8;
  if (!qword_25681FAA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule, &type metadata for VisibilityRule.LayoutModeRule);
    atomic_store(result, (unint64_t *)&qword_25681FAA8);
  }
  return result;
}

unint64_t sub_2378AECB8()
{
  unint64_t result;

  result = qword_25681FAB0;
  if (!qword_25681FAB0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.InvalidDataRule, &type metadata for VisibilityRule.InvalidDataRule);
    atomic_store(result, (unint64_t *)&qword_25681FAB0);
  }
  return result;
}

unint64_t sub_2378AED00()
{
  unint64_t result;

  result = qword_25681FAB8;
  if (!qword_25681FAB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SecondarySpeedRule, &type metadata for VisibilityRule.SecondarySpeedRule);
    atomic_store(result, (unint64_t *)&qword_25681FAB8);
  }
  return result;
}

unint64_t sub_2378AED48()
{
  unint64_t result;

  result = qword_25681FAC0;
  if (!qword_25681FAC0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule.Rule, &type metadata for VisibilityRule.TemperatureLabelRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FAC0);
  }
  return result;
}

unint64_t sub_2378AED90()
{
  unint64_t result;

  result = qword_25681FAC8;
  if (!qword_25681FAC8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule, &type metadata for VisibilityRule.TemperatureLabelRule);
    atomic_store(result, (unint64_t *)&qword_25681FAC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityConfiguration()
{
  return &type metadata for VisibilityConfiguration;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 249);
  v3 = (((HIBYTE(*(_DWORD *)a1) & 0xC0 | (*(_DWORD *)a1 >> 18) & 0x3Fu) >> 5) & 0xFFFFFF07 | (8
                                                                                            * ((*(_DWORD *)a1 >> 12) & 0xC | (*(_DWORD *)a1 >> 6) & 0x1F | (*(_DWORD *)a1 >> 18) & 0x10))) ^ 0xFF;
  if (v3 >= 0xF8)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64x2_t v3;
  int8x16_t v4;

  if (a2 > 0xF8)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
    {
      v3 = (uint64x2_t)vdupq_n_s32((-(char)a2 >> 3) & 0x1F | (32
                                                                             * -(char)a2));
      v4 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_237A8D7D0), (int8x16_t)xmmword_237A8D800), vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_237A8D7E0), (int8x16_t)xmmword_237A8D7F0));
      *(int8x8_t *)result = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
    }
  }
  return result;
}

unint64_t *sub_2378AEF5C(unint64_t *result, int a2)
{
  *result = (a2 << 29) & 0xC0000000 | ((unint64_t)(a2 & 1) << 23) | *result & 0xFFFFFFFF3F3F3F3FLL;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule()
{
  return &type metadata for VisibilityRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.BezierCurve()
{
  return &type metadata for VisibilityRule.BezierCurve;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.Animation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.Animation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.Animation()
{
  return &type metadata for VisibilityRule.Animation;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule()
{
  return &type metadata for VisibilityRule.TransmissionModeRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule.Rule()
{
  return &type metadata for VisibilityRule.TransmissionModeRule.Rule;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.TickmarksSpeedUnitRule(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 3;
  v6 = v4 - 3;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.TickmarksSpeedUnitRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554178) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFD)
    v3 = 0;
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
    *(_BYTE *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule.Rule()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.SpeedLimiterRule(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[51])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.SpeedLimiterRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule.Rule()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule.Rule;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleVwet_0(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleVwst_0(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378AF32C + 4 * byte_237A8D85D[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2378AF360 + 4 * byte_237A8D858[v4]))();
}

uint64_t sub_2378AF360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378AF368(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2378AF370);
  return result;
}

uint64_t sub_2378AF37C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2378AF384);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378AF388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378AF390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule()
{
  return &type metadata for VisibilityRule.RemainingRangeRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule.Rule()
{
  return &type metadata for VisibilityRule.RemainingRangeRule.Rule;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.LayoutModeRule(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && a1[8])
    return (*(_DWORD *)a1 + 252);
  v3 = *a1;
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.LayoutModeRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule()
{
  return &type metadata for VisibilityRule.LayoutModeRule;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.LayoutModeRule.Level(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2378AF4A8 + 4 * byte_237A8D867[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2378AF4DC + 4 * byte_237A8D862[v4]))();
}

uint64_t sub_2378AF4DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF4E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AF4ECLL);
  return result;
}

uint64_t sub_2378AF4F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AF500);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2378AF504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF50C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule.Level()
{
  return &type metadata for VisibilityRule.LayoutModeRule.Level;
}

uint64_t getEnumTagSinglePayload for InstrumentDataIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC9)
    goto LABEL_17;
  if (a2 + 55 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 55) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 55;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 55;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 55;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x38;
  v8 = v6 - 56;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.InvalidDataRule(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 55 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 55) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC8)
    return ((uint64_t (*)(void))((char *)&loc_2378AF604 + 4 * byte_237A8D871[v4]))();
  *a1 = a2 + 55;
  return ((uint64_t (*)(void))((char *)sub_2378AF638 + 4 * byte_237A8D86C[v4]))();
}

uint64_t sub_2378AF638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AF648);
  return result;
}

uint64_t sub_2378AF654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AF65CLL);
  *(_BYTE *)result = a2 + 55;
  return result;
}

uint64_t sub_2378AF660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataRule()
{
  return &type metadata for VisibilityRule.InvalidDataRule;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.SecondarySpeedRule(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.SecondarySpeedRule(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378AF774 + 4 * byte_237A8D87B[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2378AF7A8 + 4 * byte_237A8D876[v4]))();
}

uint64_t sub_2378AF7A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378AF7B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2378AF7B8);
  return result;
}

uint64_t sub_2378AF7C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2378AF7CCLL);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_2378AF7D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2378AF7D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedRule()
{
  return &type metadata for VisibilityRule.SecondarySpeedRule;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.TemperatureLabelRule(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Wallpaper.Traits(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule.Rule()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule.Rule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedRule.CodingKeys()
{
  return &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataRule.CodingKeys()
{
  return &type metadata for VisibilityRule.InvalidDataRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.LayoutModeRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO16SpeedLimiterRuleV4RuleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2378AF938 + 4 * byte_237A8D885[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2378AF96C + 4 * byte_237A8D880[v4]))();
}

uint64_t sub_2378AF96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AF97CLL);
  return result;
}

uint64_t sub_2378AF988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AF990);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2378AF994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AF99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule.CodingKeys()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleV4RuleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378AFA14 + 4 * byte_237A8D88F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378AFA48 + 4 * byte_237A8D88A[v4]))();
}

uint64_t sub_2378AFA48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFA50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AFA58);
  return result;
}

uint64_t sub_2378AFA64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AFA6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378AFA70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFA78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.Animation.CodingKeys()
{
  return &type metadata for VisibilityRule.Animation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2378AFAF0 + 4 * byte_237A8D899[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2378AFB24 + 4 * byte_237A8D894[v4]))();
}

uint64_t sub_2378AFB24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFB2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AFB34);
  return result;
}

uint64_t sub_2378AFB40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AFB48);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2378AFB4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFB54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.CodingKeys()
{
  return &type metadata for VisibilityRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeCodingKeys()
{
  return &type metadata for VisibilityRule.TransmissionModeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitCodingKeys()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterCodingKeys()
{
  return &type metadata for VisibilityRule.SpeedLimiterCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeCodingKeys()
{
  return &type metadata for VisibilityRule.RemainingRangeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeCodingKeys()
{
  return &type metadata for VisibilityRule.LayoutModeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataCodingKeys()
{
  return &type metadata for VisibilityRule.InvalidDataCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedCodingKeys()
{
  return &type metadata for VisibilityRule.SecondarySpeedCodingKeys;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO22TickmarksSpeedUnitRuleV4RuleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2378AFC2C + 4 * byte_237A8D8A3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2378AFC60 + 4 * byte_237A8D89E[v4]))();
}

uint64_t sub_2378AFC60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFC68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378AFC70);
  return result;
}

uint64_t sub_2378AFC7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378AFC84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2378AFC88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378AFC90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelCodingKeys()
{
  return &type metadata for VisibilityRule.TemperatureLabelCodingKeys;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO15InvalidDataRuleV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2378AFCEC + 4 * byte_237A8D8A8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2378AFD0C + 4 * byte_237A8D8AD[v4]))();
}

_BYTE *sub_2378AFCEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2378AFD0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378AFD14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378AFD1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378AFD24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378AFD2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityConfiguration.CodingKeys()
{
  return &type metadata for VisibilityConfiguration.CodingKeys;
}

unint64_t sub_2378AFD4C()
{
  unint64_t result;

  result = qword_25681FAD0;
  if (!qword_25681FAD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EA6C, &type metadata for VisibilityConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAD0);
  }
  return result;
}

unint64_t sub_2378AFD94()
{
  unint64_t result;

  result = qword_25681FAD8;
  if (!qword_25681FAD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EB24, &type metadata for VisibilityRule.TemperatureLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAD8);
  }
  return result;
}

unint64_t sub_2378AFDDC()
{
  unint64_t result;

  result = qword_25681FAE0;
  if (!qword_25681FAE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EBDC, &type metadata for VisibilityRule.SecondarySpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAE0);
  }
  return result;
}

unint64_t sub_2378AFE24()
{
  unint64_t result;

  result = qword_25681FAE8;
  if (!qword_25681FAE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EC94, &type metadata for VisibilityRule.InvalidDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAE8);
  }
  return result;
}

unint64_t sub_2378AFE6C()
{
  unint64_t result;

  result = qword_25681FAF0;
  if (!qword_25681FAF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ED4C, &type metadata for VisibilityRule.LayoutModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAF0);
  }
  return result;
}

unint64_t sub_2378AFEB4()
{
  unint64_t result;

  result = qword_25681FAF8;
  if (!qword_25681FAF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EE04, &type metadata for VisibilityRule.RemainingRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FAF8);
  }
  return result;
}

unint64_t sub_2378AFEFC()
{
  unint64_t result;

  result = qword_25681FB00;
  if (!qword_25681FB00)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EEBC, &type metadata for VisibilityRule.SpeedLimiterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB00);
  }
  return result;
}

unint64_t sub_2378AFF44()
{
  unint64_t result;

  result = qword_25681FB08;
  if (!qword_25681FB08)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EF74, &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB08);
  }
  return result;
}

unint64_t sub_2378AFF8C()
{
  unint64_t result;

  result = qword_25681FB10;
  if (!qword_25681FB10)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F02C, &type metadata for VisibilityRule.TransmissionModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB10);
  }
  return result;
}

unint64_t sub_2378AFFD4()
{
  unint64_t result;

  result = qword_25681FB18;
  if (!qword_25681FB18)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F0E4, &type metadata for VisibilityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB18);
  }
  return result;
}

unint64_t sub_2378B001C()
{
  unint64_t result;

  result = qword_25681FB20;
  if (!qword_25681FB20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F19C, &type metadata for VisibilityRule.Animation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB20);
  }
  return result;
}

unint64_t sub_2378B0064()
{
  unint64_t result;

  result = qword_25681FB28;
  if (!qword_25681FB28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F254, &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB28);
  }
  return result;
}

unint64_t sub_2378B00AC()
{
  unint64_t result;

  result = qword_25681FB30;
  if (!qword_25681FB30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F30C, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB30);
  }
  return result;
}

unint64_t sub_2378B00F4()
{
  unint64_t result;

  result = qword_25681FB38;
  if (!qword_25681FB38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F3C4, &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB38);
  }
  return result;
}

unint64_t sub_2378B013C()
{
  unint64_t result;

  result = qword_25681FB40;
  if (!qword_25681FB40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F47C, &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB40);
  }
  return result;
}

unint64_t sub_2378B0184()
{
  unint64_t result;

  result = qword_25681FB48;
  if (!qword_25681FB48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F534, &type metadata for VisibilityRule.LayoutModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB48);
  }
  return result;
}

unint64_t sub_2378B01CC()
{
  unint64_t result;

  result = qword_25681FB50;
  if (!qword_25681FB50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F5EC, &type metadata for VisibilityRule.InvalidDataRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB50);
  }
  return result;
}

unint64_t sub_2378B0214()
{
  unint64_t result;

  result = qword_25681FB58;
  if (!qword_25681FB58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F6A4, &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB58);
  }
  return result;
}

unint64_t sub_2378B025C()
{
  unint64_t result;

  result = qword_25681FB60;
  if (!qword_25681FB60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F75C, &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB60);
  }
  return result;
}

unint64_t sub_2378B02A4()
{
  unint64_t result;

  result = qword_25681FB68;
  if (!qword_25681FB68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F6CC, &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB68);
  }
  return result;
}

unint64_t sub_2378B02EC()
{
  unint64_t result;

  result = qword_25681FB70;
  if (!qword_25681FB70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F6F4, &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB70);
  }
  return result;
}

unint64_t sub_2378B0334()
{
  unint64_t result;

  result = qword_25681FB78;
  if (!qword_25681FB78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F614, &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB78);
  }
  return result;
}

unint64_t sub_2378B037C()
{
  unint64_t result;

  result = qword_25681FB80;
  if (!qword_25681FB80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F63C, &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB80);
  }
  return result;
}

unint64_t sub_2378B03C4()
{
  unint64_t result;

  result = qword_25681FB88;
  if (!qword_25681FB88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F55C, &type metadata for VisibilityRule.InvalidDataRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB88);
  }
  return result;
}

unint64_t sub_2378B040C()
{
  unint64_t result;

  result = qword_25681FB90;
  if (!qword_25681FB90)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F584, &type metadata for VisibilityRule.InvalidDataRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB90);
  }
  return result;
}

unint64_t sub_2378B0454()
{
  unint64_t result;

  result = qword_25681FB98;
  if (!qword_25681FB98)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F4A4, &type metadata for VisibilityRule.LayoutModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FB98);
  }
  return result;
}

unint64_t sub_2378B049C()
{
  unint64_t result;

  result = qword_25681FBA0;
  if (!qword_25681FBA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F4CC, &type metadata for VisibilityRule.LayoutModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBA0);
  }
  return result;
}

unint64_t sub_2378B04E4()
{
  unint64_t result;

  result = qword_25681FBA8;
  if (!qword_25681FBA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F3EC, &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBA8);
  }
  return result;
}

unint64_t sub_2378B052C()
{
  unint64_t result;

  result = qword_25681FBB0;
  if (!qword_25681FBB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F414, &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBB0);
  }
  return result;
}

unint64_t sub_2378B0574()
{
  unint64_t result;

  result = qword_25681FBB8;
  if (!qword_25681FBB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F334, &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBB8);
  }
  return result;
}

unint64_t sub_2378B05BC()
{
  unint64_t result;

  result = qword_25681FBC0;
  if (!qword_25681FBC0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F35C, &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBC0);
  }
  return result;
}

unint64_t sub_2378B0604()
{
  unint64_t result;

  result = qword_25681FBC8;
  if (!qword_25681FBC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F27C, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBC8);
  }
  return result;
}

unint64_t sub_2378B064C()
{
  unint64_t result;

  result = qword_25681FBD0;
  if (!qword_25681FBD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F2A4, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBD0);
  }
  return result;
}

unint64_t sub_2378B0694()
{
  unint64_t result;

  result = qword_25681FBD8;
  if (!qword_25681FBD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F1C4, &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBD8);
  }
  return result;
}

unint64_t sub_2378B06DC()
{
  unint64_t result;

  result = qword_25681FBE0;
  if (!qword_25681FBE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F1EC, &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBE0);
  }
  return result;
}

unint64_t sub_2378B0724()
{
  unint64_t result;

  result = qword_25681FBE8;
  if (!qword_25681FBE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F10C, &type metadata for VisibilityRule.Animation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBE8);
  }
  return result;
}

unint64_t sub_2378B076C()
{
  unint64_t result;

  result = qword_25681FBF0;
  if (!qword_25681FBF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F134, &type metadata for VisibilityRule.Animation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBF0);
  }
  return result;
}

unint64_t sub_2378B07B4()
{
  unint64_t result;

  result = qword_25681FBF8;
  if (!qword_25681FBF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EF9C, &type metadata for VisibilityRule.TransmissionModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FBF8);
  }
  return result;
}

unint64_t sub_2378B07FC()
{
  unint64_t result;

  result = qword_25681FC00;
  if (!qword_25681FC00)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EFC4, &type metadata for VisibilityRule.TransmissionModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC00);
  }
  return result;
}

unint64_t sub_2378B0844()
{
  unint64_t result;

  result = qword_25681FC08;
  if (!qword_25681FC08)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EEE4, &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC08);
  }
  return result;
}

unint64_t sub_2378B088C()
{
  unint64_t result;

  result = qword_25681FC10;
  if (!qword_25681FC10)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EF0C, &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC10);
  }
  return result;
}

unint64_t sub_2378B08D4()
{
  unint64_t result;

  result = qword_25681FC18;
  if (!qword_25681FC18)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EE2C, &type metadata for VisibilityRule.SpeedLimiterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC18);
  }
  return result;
}

unint64_t sub_2378B091C()
{
  unint64_t result;

  result = qword_25681FC20;
  if (!qword_25681FC20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EE54, &type metadata for VisibilityRule.SpeedLimiterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC20);
  }
  return result;
}

unint64_t sub_2378B0964()
{
  unint64_t result;

  result = qword_25681FC28;
  if (!qword_25681FC28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ED74, &type metadata for VisibilityRule.RemainingRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC28);
  }
  return result;
}

unint64_t sub_2378B09AC()
{
  unint64_t result;

  result = qword_25681FC30;
  if (!qword_25681FC30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ED9C, &type metadata for VisibilityRule.RemainingRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC30);
  }
  return result;
}

unint64_t sub_2378B09F4()
{
  unint64_t result;

  result = qword_25681FC38;
  if (!qword_25681FC38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ECBC, &type metadata for VisibilityRule.LayoutModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC38);
  }
  return result;
}

unint64_t sub_2378B0A3C()
{
  unint64_t result;

  result = qword_25681FC40;
  if (!qword_25681FC40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8ECE4, &type metadata for VisibilityRule.LayoutModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC40);
  }
  return result;
}

unint64_t sub_2378B0A84()
{
  unint64_t result;

  result = qword_25681FC48;
  if (!qword_25681FC48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EC04, &type metadata for VisibilityRule.InvalidDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC48);
  }
  return result;
}

unint64_t sub_2378B0ACC()
{
  unint64_t result;

  result = qword_25681FC50;
  if (!qword_25681FC50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EC2C, &type metadata for VisibilityRule.InvalidDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC50);
  }
  return result;
}

unint64_t sub_2378B0B14()
{
  unint64_t result;

  result = qword_25681FC58;
  if (!qword_25681FC58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EB4C, &type metadata for VisibilityRule.SecondarySpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC58);
  }
  return result;
}

unint64_t sub_2378B0B5C()
{
  unint64_t result;

  result = qword_25681FC60;
  if (!qword_25681FC60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EB74, &type metadata for VisibilityRule.SecondarySpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC60);
  }
  return result;
}

unint64_t sub_2378B0BA4()
{
  unint64_t result;

  result = qword_25681FC68;
  if (!qword_25681FC68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EA94, &type metadata for VisibilityRule.TemperatureLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC68);
  }
  return result;
}

unint64_t sub_2378B0BEC()
{
  unint64_t result;

  result = qword_25681FC70;
  if (!qword_25681FC70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EABC, &type metadata for VisibilityRule.TemperatureLabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC70);
  }
  return result;
}

unint64_t sub_2378B0C34()
{
  unint64_t result;

  result = qword_25681FC78;
  if (!qword_25681FC78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F054, &type metadata for VisibilityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC78);
  }
  return result;
}

unint64_t sub_2378B0C7C()
{
  unint64_t result;

  result = qword_25681FC80;
  if (!qword_25681FC80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8F07C, &type metadata for VisibilityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC80);
  }
  return result;
}

unint64_t sub_2378B0CC4()
{
  unint64_t result;

  result = qword_25681FC88;
  if (!qword_25681FC88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8E9DC, &type metadata for VisibilityConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC88);
  }
  return result;
}

unint64_t sub_2378B0D0C()
{
  unint64_t result;

  result = qword_25681FC90;
  if (!qword_25681FC90)
  {
    result = MEMORY[0x23B81FA98](&unk_237A8EA04, &type metadata for VisibilityConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25681FC90);
  }
  return result;
}

uint64_t sub_2378B0D50(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000237AAFF90 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAFFB0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D694C6465657073 && a2 == 0xEC00000072657469 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xEE0065676E615267 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4D74756F79616CLL && a2 == 0xEA00000000006564 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464696C61766E69 && a2 == 0xEB00000000617461 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xEE00646565705379 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AAFFD0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_2378B1108(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696E41776F6873 && a2 == 0xED00006E6F697461 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D696E4165646968 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2378B128C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C6564 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x75437265697A6562 && a2 == 0xEB00000000657672)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2378B13F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AAFFF0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000237AB0010)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2378B152C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB0030 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB0050 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB0070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2378B16BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378B17C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6576656CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378B18A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378B19BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000237AAFF70 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB0090 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB00B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_2378B1B4C()
{
  unint64_t result;

  result = qword_25681FC98;
  if (!qword_25681FC98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TemperatureLabelRule.Rule, &type metadata for VisibilityRule.TemperatureLabelRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FC98);
  }
  return result;
}

unint64_t sub_2378B1B90()
{
  unint64_t result;

  result = qword_25681FCA0;
  if (!qword_25681FCA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.LayoutModeRule.Level, &type metadata for VisibilityRule.LayoutModeRule.Level);
    atomic_store(result, (unint64_t *)&qword_25681FCA0);
  }
  return result;
}

unint64_t sub_2378B1BD4()
{
  unint64_t result;

  result = qword_25681FCA8;
  if (!qword_25681FCA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.RemainingRangeRule.Rule, &type metadata for VisibilityRule.RemainingRangeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FCA8);
  }
  return result;
}

unint64_t sub_2378B1C18()
{
  unint64_t result;

  result = qword_25681FCB0;
  if (!qword_25681FCB0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.SpeedLimiterRule.Rule, &type metadata for VisibilityRule.SpeedLimiterRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FCB0);
  }
  return result;
}

unint64_t sub_2378B1C5C()
{
  unint64_t result;

  result = qword_25681FCB8;
  if (!qword_25681FCB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TickmarksSpeedUnitRule.Rule, &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FCB8);
  }
  return result;
}

unint64_t sub_2378B1CA0()
{
  unint64_t result;

  result = qword_25681FCC0;
  if (!qword_25681FCC0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for VisibilityRule.TransmissionModeRule.Rule, &type metadata for VisibilityRule.TransmissionModeRule.Rule);
    atomic_store(result, (unint64_t *)&qword_25681FCC0);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(void **)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 49);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[32];
  v7 = a1[33];
  v8 = *((_QWORD *)a1 + 5);
  v9 = *((_QWORD *)a1 + 6);
  v10 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  *(_BYTE *)(v1 + 48) = v6;
  *(_BYTE *)(v1 + 49) = v7;
  *(_QWORD *)(v1 + 56) = v8;
  *(_QWORD *)(v1 + 64) = v9;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v8 = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v10 = *(_BYTE *)(v1 + 152);
  *(_BYTE *)(a1 + 64) = v10;
  sub_23787A11C(v2, v3, v8);
  sub_23787A11C(v4, v5, v9);
  return sub_23787D0A0(v6, v7, v10);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v16 = a1[4];
  v17 = a1[3];
  v15 = *((_BYTE *)a1 + 40);
  v13 = a1[7];
  v14 = a1[6];
  v12 = *((_BYTE *)a1 + 64);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_BYTE *)(v1 + 128);
  v10 = *(_BYTE *)(v1 + 152);
  sub_23787A134(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
  sub_23787A134(v5, v6, v9);
  result = sub_23787D0B4(v7, v8, v10);
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 112) = v17;
  *(_QWORD *)(v1 + 120) = v16;
  *(_BYTE *)(v1 + 128) = v15;
  *(_QWORD *)(v1 + 136) = v14;
  *(_QWORD *)(v1 + 144) = v13;
  *(_BYTE *)(v1 + 152) = v12;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.init(maxLabelsCount:inset:zeroLabelInset:labelsFont:continuousFill:hideFirstLabel:labelDivider:labelColors:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, float a8@<S0>, float a9@<S1>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  __n128 result;

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 1);
  v11 = *((_QWORD *)a2 + 2);
  v12 = *((_QWORD *)a2 + 3);
  v13 = a2[32];
  v14 = a2[33];
  v15 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)a2 + 6);
  v17 = *(_BYTE *)(a6 + 16);
  v18 = *(_BYTE *)(a6 + 40);
  v19 = *(_BYTE *)(a6 + 64);
  *(_QWORD *)a7 = a1;
  *(float *)(a7 + 8) = a8;
  *(float *)(a7 + 12) = a9;
  *(_BYTE *)(a7 + 16) = v9;
  *(_QWORD *)(a7 + 24) = v10;
  *(_QWORD *)(a7 + 32) = v11;
  *(_QWORD *)(a7 + 40) = v12;
  *(_BYTE *)(a7 + 48) = v13;
  *(_BYTE *)(a7 + 49) = v14;
  *(_QWORD *)(a7 + 56) = v15;
  *(_QWORD *)(a7 + 64) = v16;
  *(_BYTE *)(a7 + 72) = a3;
  *(_BYTE *)(a7 + 73) = a4;
  *(_QWORD *)(a7 + 80) = a5;
  *(_OWORD *)(a7 + 88) = *(_OWORD *)a6;
  *(_BYTE *)(a7 + 104) = v17;
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a6 + 24);
  *(_BYTE *)(a7 + 128) = v18;
  result = *(__n128 *)(a6 + 48);
  *(__n128 *)(a7 + 136) = result;
  *(_BYTE *)(a7 + 152) = v19;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)()
{
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  InstrumentFont.hash(into:)();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885E0();
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)();
}

uint64_t sub_2378B2214()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378B2250 + 4 * byte_237A8FD80[*v0]))(0x6C6562614C78616DLL, 0xEE00746E756F4373);
}

uint64_t sub_2378B2250()
{
  return 0x7465736E69;
}

uint64_t sub_2378B2264()
{
  return 0x6562614C6F72657ALL;
}

uint64_t sub_2378B2288()
{
  return 0x6F46736C6562616CLL;
}

uint64_t sub_2378B22A4()
{
  return 0x6F756E69746E6F63;
}

uint64_t sub_2378B22C8()
{
  return 0x7372694665646968;
}

uint64_t sub_2378B22EC()
{
  return 0x7669446C6562616CLL;
}

uint64_t sub_2378B230C()
{
  return 0x6C6F436C6562616CLL;
}

uint64_t sub_2378B232C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B8C34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378B2350()
{
  sub_2378B6398();
  return sub_237A88718();
}

uint64_t sub_2378B2378()
{
  sub_2378B6398();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FE48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(unsigned __int8 *)(v1 + 16);
  v40 = *(_QWORD *)(v1 + 24);
  v37 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(unsigned __int8 *)(v1 + 48);
  v35 = *(unsigned __int8 *)(v1 + 49);
  v36 = v8;
  v9 = *(_QWORD *)(v1 + 56);
  v33 = *(_QWORD *)(v1 + 64);
  v34 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 72);
  v31 = *(unsigned __int8 *)(v1 + 73);
  v32 = v9;
  v30 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v38 = *(_QWORD *)(v1 + 96);
  v39 = v10;
  v25 = *(unsigned __int8 *)(v1 + 104);
  v29 = *(_QWORD *)(v1 + 112);
  v28 = *(_QWORD *)(v1 + 120);
  v27 = *(unsigned __int8 *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 144);
  v26 = *(_QWORD *)(v1 + 136);
  v12 = *(unsigned __int8 *)(v1 + 152);
  v13 = a1[3];
  v14 = a1;
  v16 = v15;
  __swift_project_boxed_opaque_existential_2Tm(v14, v13);
  sub_2378B6398();
  sub_237A886B8();
  LOBYTE(v43) = 0;
  v17 = v6;
  v18 = v42;
  sub_237A88298();
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  v20 = v40;
  v21 = v41;
  v24 = v12;
  v42 = v11;
  v22 = v38;
  v23 = v39;
  LOBYTE(v43) = 1;
  sub_237A8828C();
  LOBYTE(v43) = 2;
  sub_237A8828C();
  LOBYTE(v43) = v21;
  v44 = v20;
  v45 = v37;
  v46 = v7;
  LOBYTE(v47) = v36;
  BYTE1(v47) = v35;
  v48 = v34;
  v49 = v33;
  v52 = 3;
  sub_237898A48();
  sub_237A882B0();
  LOBYTE(v43) = 4;
  sub_237A88280();
  LOBYTE(v43) = 5;
  sub_237A88280();
  LOBYTE(v43) = 6;
  sub_237A88298();
  v43 = v23;
  v44 = v22;
  LOBYTE(v45) = v25;
  v46 = v29;
  v47 = v28;
  LOBYTE(v48) = v27;
  v49 = v26;
  v50 = v42;
  v51 = v24;
  v52 = 7;
  sub_2378B63DC();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v17, v16);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hashValue.getter()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  return sub_237A88610();
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.init(from:)(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  id v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[2];
  uint64_t v58;
  unint64_t v59;
  id v60;
  unint64_t v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;

  v47 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FE60);
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6398();
  v8 = v6;
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v9 = v4;
    v11 = v47;
    v10 = v48;
    LOBYTE(v58) = 0;
    v12 = v8;
    v46 = sub_237A881D8();
    LOBYTE(v58) = 1;
    sub_237A881CC();
    v13 = (uint64_t)v7;
    v15 = v14;
    LOBYTE(v58) = 2;
    sub_237A881CC();
    v17 = v16;
    LOBYTE(v49) = 3;
    sub_237898B2C();
    sub_237A881F0();
    v40 = v58;
    v18 = v61;
    v43 = BYTE1(v62);
    v44 = v62;
    v19 = v64;
    v41 = v63;
    v42 = v59;
    LOBYTE(v58) = 4;
    v45 = v60;
    swift_bridgeObjectRetain();
    v38 = sub_237A881C0();
    v39 = v19;
    LOBYTE(v58) = 5;
    LOBYTE(v19) = sub_237A881C0();
    LOBYTE(v58) = 6;
    v20 = sub_237A881D8();
    v79 = 7;
    sub_2378B6420();
    sub_237A881F0();
    v21 = v19;
    v38 &= 1u;
    LOBYTE(v19) = v38;
    HIDWORD(v28) = v21 & 1;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v10);
    v37 = v81;
    v36 = v82;
    v34 = *((_QWORD *)&v83 + 1);
    v35 = v83;
    v33 = v84;
    v31 = v86;
    v32 = v85;
    v30 = v87;
    v22 = v45;
    v48 = v80;
    *(_QWORD *)&v49 = v46;
    *((_QWORD *)&v49 + 1) = __PAIR64__(v17, v15);
    LOBYTE(v9) = v40;
    LOBYTE(v50) = v40;
    *((_QWORD *)&v50 + 1) = v42;
    *(_QWORD *)&v51 = v45;
    *((_QWORD *)&v51 + 1) = v18;
    LOBYTE(v52) = v44;
    BYTE1(v52) = v43;
    v23 = v39;
    *((_QWORD *)&v52 + 1) = v41;
    *(_QWORD *)&v53 = v39;
    BYTE8(v53) = v19;
    LOBYTE(v19) = BYTE4(v28);
    BYTE9(v53) = BYTE4(v28);
    *(_QWORD *)&v54 = v20;
    *((_QWORD *)&v54 + 1) = v80;
    *(_QWORD *)&v55 = v81;
    BYTE8(v55) = v82;
    v56 = v83;
    LOBYTE(v57[0]) = v84;
    *((_QWORD *)&v57[0] + 1) = v85;
    *(_QWORD *)&v57[1] = v86;
    BYTE8(v57[1]) = v87;
    sub_2378B6464((uint64_t)&v49);
    swift_bridgeObjectRelease();

    v24 = v56;
    v29 = v20;
    v11[6] = v55;
    v11[7] = v24;
    v11[8] = v57[0];
    *(_OWORD *)((char *)v11 + 137) = *(_OWORD *)((char *)v57 + 9);
    v25 = v52;
    v11[2] = v51;
    v11[3] = v25;
    v26 = v54;
    v11[4] = v53;
    v11[5] = v26;
    v27 = v50;
    *v11 = v49;
    v11[1] = v27;
    __swift_destroy_boxed_opaque_existential_2Tm(v13);
    v58 = v46;
    v59 = __PAIR64__(v17, v15);
    LOBYTE(v60) = v9;
    v61 = v42;
    v62 = v22;
    v63 = v18;
    LOBYTE(v64) = v44;
    BYTE1(v64) = v43;
    v65 = v41;
    v66 = v23;
    v67 = v38;
    v68 = v19;
    v69 = v29;
    v70 = v48;
    v71 = v37;
    v72 = v36;
    v73 = v35;
    v74 = v34;
    v75 = v33;
    v76 = v32;
    v77 = v31;
    v78 = v30;
    sub_2378B650C((uint64_t)&v58);
  }
}

void sub_2378B2BF4(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2378B2C08(_QWORD *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.encode(to:)(a1);
}

uint64_t sub_2378B2C1C()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2378B2C5C()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.displayValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7261646E6F636553;
  if (*v0 != 1)
    v1 = 0x7972616974726554;
  if (*v0)
    return v1;
  else
    return 0x7972616D697250;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static Instrument.GaugeStyle.TicksConfiguration.TickType.allCases.getter()
{
  return &unk_250969EE8;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7261646E6F636573;
  if (*v0 != 1)
    v1 = 0x7972616974726574;
  if (*v0)
    return v1;
  else
    return 0x7972616D697270;
}

uint64_t sub_2378B2DBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D6084(*a1, *a2);
}

uint64_t sub_2378B2DC8@<X0>(char *a1@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickType.init(rawValue:)(a1);
}

void sub_2378B2DD4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000079;
  v5 = 0x7261646E6F636573;
  if (v2 != 1)
  {
    v5 = 0x7972616974726574;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7972616D697270;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_2378B2E38(_QWORD *a1@<X8>)
{
  *a1 = &unk_250969F10;
}

uint64_t sub_2378B2E48()
{
  sub_2378B97BC();
  return sub_237A87A34();
}

uint64_t sub_2378B2EA4()
{
  sub_2378B97BC();
  return sub_237A879EC();
}

uint64_t sub_2378B2EF0()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2378B2F94()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378B3014()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 20);
}

_BYTE *Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 20) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  *(_BYTE *)(v1 + 64) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787D0A0(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787D0B4(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v3;
  *(_BYTE *)(v1 + 88) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 89) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 90) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(ticksCount:tickWidth:tickLength:tickInset:lineCap:primaryColorID:secondaryColorID:tertiaryColorID:hideFirstTick:fixedRedline:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>)
{
  char v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  __n128 result;

  v11 = *a2;
  v12 = *(_BYTE *)(a3 + 16);
  v13 = *(_BYTE *)(a4 + 16);
  v14 = a5[1].n128_u8[0];
  *(_QWORD *)a8 = a1;
  *(float *)(a8 + 8) = a9;
  *(float *)(a8 + 12) = a10;
  *(float *)(a8 + 16) = a11;
  *(_BYTE *)(a8 + 20) = v11;
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a3;
  *(_BYTE *)(a8 + 40) = v12;
  *(_OWORD *)(a8 + 48) = *(_OWORD *)a4;
  *(_BYTE *)(a8 + 64) = v13;
  result = *a5;
  *(__n128 *)(a8 + 72) = *a5;
  *(_BYTE *)(a8 + 88) = v14;
  *(_BYTE *)(a8 + 89) = a6;
  *(_BYTE *)(a8 + 90) = a7;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(unsigned __int8 *)(v0 + 88);
  v4 = *(_BYTE *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 64);
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  sub_23787A11C(v1, v2, v4);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v1, v2, v4);
  sub_23787A11C(v10, v3, v5);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v10, v3, v5);
  sub_237A885EC();
  if (v9 != 255)
  {
    sub_23787A11C(v8, v7, v9);
    sub_23787A11C(v8, v7, v9);
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_23787D0B4(v8, v7, v9);
    sub_23787D0B4(v8, v7, v9);
  }
  sub_237A885EC();
  return sub_237A885EC();
}

uint64_t sub_2378B3524(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378B3560 + 4 * byte_237A8FD88[a1]))(0x756F43736B636974, 0xEA0000000000746ELL);
}

uint64_t sub_2378B3560()
{
  return 0x746469576B636974;
}

uint64_t sub_2378B357C()
{
  return 0x676E654C6B636974;
}

uint64_t sub_2378B3598()
{
  return 0x65736E496B636974;
}

uint64_t sub_2378B35B8()
{
  return 0x706143656E696CLL;
}

uint64_t sub_2378B35D0()
{
  return 0x437972616D697270;
}

unint64_t sub_2378B35F4()
{
  return 0xD000000000000010;
}

uint64_t sub_2378B3610()
{
  return 0x7972616974726574;
}

uint64_t sub_2378B3634()
{
  return 0x7372694665646968;
}

uint64_t sub_2378B3658()
{
  return 0x6465526465786966;
}

uint64_t sub_2378B3678()
{
  unsigned __int8 *v0;

  return sub_2378B3524(*v0);
}

uint64_t sub_2378B3680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B9040(a1, a2);
  *a3 = result;
  return result;
}

void sub_2378B36A4(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2378B36B0()
{
  sub_2378B6A38();
  return sub_237A88718();
}

uint64_t sub_2378B36D8()
{
  sub_2378B6A38();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FE70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(unsigned __int8 *)(v1 + 20);
  v7 = *(_QWORD *)(v1 + 24);
  v24 = *(_QWORD *)(v1 + 32);
  v25 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = v8;
  v22 = *(unsigned __int8 *)(v1 + 64);
  v23 = v7;
  v9 = *(_QWORD *)(v1 + 80);
  v17 = *(_QWORD *)(v1 + 72);
  v18 = v9;
  v19 = *(unsigned __int8 *)(v1 + 88);
  v16[1] = *(unsigned __int8 *)(v1 + 89);
  v10 = *(_BYTE *)(v1 + 90);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6A38();
  sub_237A886B8();
  LOBYTE(v28) = 0;
  v11 = v27;
  sub_237A88298();
  if (!v11)
  {
    v12 = v26;
    v14 = v24;
    v13 = v25;
    LOBYTE(v28) = 1;
    sub_237A8828C();
    LOBYTE(v28) = 2;
    sub_237A8828C();
    LOBYTE(v28) = 3;
    sub_237A8828C();
    LOBYTE(v28) = v12;
    v31 = 4;
    sub_2378B6A7C();
    sub_237A882B0();
    v28 = v13;
    v29 = v14;
    v30 = v23;
    v31 = 5;
    sub_23787AA5C();
    sub_237A882B0();
    v28 = v20;
    v29 = v21;
    v30 = v22;
    v31 = 6;
    sub_237A882B0();
    v28 = v17;
    v29 = v18;
    v30 = v19;
    v31 = 7;
    sub_237A88268();
    LOBYTE(v28) = 8;
    sub_237A88280();
    LOBYTE(v28) = v10;
    v31 = 9;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hashValue.getter()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FE88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6A38();
  sub_237A88688();
  if (v2)
  {
    v18 = 0;
    v19 = 0;
    v20 = -1;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v39) = 0;
    v9 = sub_237A881D8();
    LOBYTE(v39) = 1;
    sub_237A881CC();
    v11 = v10;
    LOBYTE(v39) = 2;
    sub_237A881CC();
    v13 = v12;
    LOBYTE(v39) = 3;
    sub_237A881CC();
    v15 = v14;
    v42 = 4;
    sub_2378B6AC0();
    sub_237A881F0();
    v35 = v39;
    v42 = 5;
    sub_23787AB8C();
    sub_237A881F0();
    v32 = v9;
    v17 = v39;
    v33 = v40;
    v34 = v41;
    v42 = 6;
    sub_237A881F0();
    v38 = v17;
    v31 = v39;
    v36 = v40;
    v37 = v41;
    v42 = 7;
    sub_237A881A8();
    v30 = a2;
    v18 = v39;
    v19 = v40;
    v20 = v41;
    LOBYTE(v39) = 8;
    v29 = sub_237A881C0();
    LOBYTE(v39) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA08);
    sub_2378B70D4((unint64_t *)&qword_25681FA10, &qword_25681FA08, (uint64_t)&protocol conformance descriptor for DecodableDefault<A>);
    sub_237A881A8();
    v28 = v42 & 1;
    v29 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v30;
    v22 = v31;
    v23 = v33;
    *v30 = v32;
    *((_DWORD *)v21 + 2) = v11;
    *((_DWORD *)v21 + 3) = v13;
    *((_DWORD *)v21 + 4) = v15;
    v24 = v34;
    *((_BYTE *)v21 + 20) = v35;
    v25 = v38;
    v21[3] = v38;
    v21[4] = v23;
    *((_BYTE *)v21 + 40) = v24;
    v26 = v36;
    v21[6] = v22;
    v21[7] = v26;
    *((_BYTE *)v21 + 64) = v37;
    v21[9] = v18;
    v21[10] = v19;
    *((_BYTE *)v21 + 88) = v20;
    *((_BYTE *)v21 + 89) = v29;
    *((_BYTE *)v21 + 90) = v28;
    sub_23787A11C(v25, v23, v24);
    v27 = v22;
    LOBYTE(v22) = v37;
    sub_23787A11C(v27, v26, v37);
    sub_23787D0A0(v18, v19, v20);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_23787A134(v38, v23, v24);
    sub_23787A134(v31, v26, v22);
  }
  return sub_23787D0B4(v18, v19, v20);
}

uint64_t sub_2378B3FF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2378B400C(_QWORD *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.encode(to:)(a1);
}

uint64_t sub_2378B4020()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2378B40C4()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787D0A0(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787D0B4(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  *(_BYTE *)(v1 + 64) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(primaryColorID:secondaryColorID:tertiaryColorID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  char v5;
  unsigned __int8 v6;
  __n128 result;

  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_BYTE *)(a2 + 16);
  v6 = a3[1].n128_u8[0];
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_BYTE *)(a4 + 16) = v4;
  *(_OWORD *)(a4 + 24) = *(_OWORD *)a2;
  *(_BYTE *)(a4 + 40) = v5;
  result = *a3;
  *(__n128 *)(a4 + 48) = *a3;
  *(_BYTE *)(a4 + 64) = v6;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  char v8;
  uint64_t v10;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 48);
  v6 = *(unsigned __int8 *)(v0 + 64);
  v7 = *(_BYTE *)(v0 + 16);
  v8 = *(_BYTE *)(v0 + 40);
  sub_23787A11C(*(_QWORD *)v0, v2, v7);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v1, v2, v7);
  sub_23787A11C(v3, v4, v8);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v3, v4, v8);
  if (v6 == 255)
    return sub_237A885EC();
  sub_237A885EC();
  sub_23787A11C(v10, v5, v6);
  sub_23787A11C(v10, v5, v6);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787D0B4(v10, v5, v6);
  return sub_23787D0B4(v10, v5, v6);
}

uint64_t sub_2378B4468()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0x7972616974726574;
  if (*v0)
    return v1;
  else
    return 0x437972616D697270;
}

uint64_t sub_2378B44E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B94E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378B4504()
{
  sub_2378B6B04();
  return sub_237A88718();
}

uint64_t sub_2378B452C()
{
  sub_2378B6B04();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FE98);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  v9 = v1[3];
  v20 = v1[4];
  v21 = v9;
  v27 = *((unsigned __int8 *)v1 + 40);
  v10 = v1[6];
  v18 = v1[7];
  v19 = v10;
  HIDWORD(v17) = *((unsigned __int8 *)v1 + 64);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6B04();
  sub_237A886B8();
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v28 = 0;
  sub_23787AA5C();
  v11 = v23;
  sub_237A882B0();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  v13 = BYTE4(v17);
  v15 = v18;
  v14 = v19;
  v16 = v22;
  v24 = v21;
  v25 = v20;
  v26 = v27;
  v28 = 1;
  sub_237A882B0();
  v24 = v14;
  v25 = v15;
  v26 = v13;
  v28 = 2;
  sub_237A88268();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hashValue.getter()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  int v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FEA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6B04();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    v24 = 0;
    v25 = 0;
    v26 = -1;
  }
  else
  {
    v40 = 0;
    sub_23787AB8C();
    sub_237A881F0();
    v34 = a2;
    v10 = v37;
    v11 = v38;
    v40 = 1;
    v35 = v36;
    sub_23787A11C(v36, v37, v38);
    sub_237A881F0();
    v33 = v11;
    v12 = v36;
    v40 = 2;
    v32 = v37;
    v39 = v38;
    sub_23787A11C(v36, v37, v38);
    v31 = 0;
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v37;
    v30 = v12;
    LODWORD(v31) = v38;
    v14 = v36;
    sub_23787D0A0(v36, v37, v38);
    sub_23787D0B4(0, 0, 255);
    v15 = v35;
    v16 = v33;
    sub_23787A11C(v35, v10, v33);
    v17 = v32;
    sub_23787A11C(v12, v32, v39);
    v18 = v14;
    v28 = v13;
    v29 = v14;
    v19 = v14;
    LOBYTE(v14) = v31;
    sub_23787D0A0(v19, v13, v31);
    sub_23787D0B4(v18, v13, v14);
    v20 = v30;
    LOBYTE(v18) = v39;
    sub_23787A134(v30, v17, v39);
    sub_23787A134(v15, v10, v16);
    v21 = v34;
    *v34 = v15;
    v21[1] = v10;
    *((_BYTE *)v21 + 16) = v16;
    v21[3] = v20;
    v21[4] = v17;
    *((_BYTE *)v21 + 40) = v18;
    v22 = v28;
    v23 = v29;
    v21[6] = v29;
    v21[7] = v22;
    LOBYTE(v18) = v31;
    *((_BYTE *)v21 + 64) = v31;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_23787A134(v15, v10, v16);
    sub_23787A134(v30, v17, v39);
    v24 = v23;
    v25 = v22;
    v26 = v18;
  }
  return sub_23787D0B4(v24, v25, v26);
}

uint64_t sub_2378B4B2C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(from:)(a1, a2);
}

uint64_t sub_2378B4B40(_QWORD *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.encode(to:)(a1);
}

uint64_t sub_2378B4B54()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2378B4BC8()
{
  sub_237A885D4();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[8];
  _OWORD v12[2];

  v2 = *(_OWORD *)(v1 + 120);
  v11[6] = *(_OWORD *)(v1 + 104);
  v11[7] = v2;
  v12[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(v1 + 145);
  v3 = *(_OWORD *)(v1 + 56);
  v11[2] = *(_OWORD *)(v1 + 40);
  v11[3] = v3;
  v4 = *(_OWORD *)(v1 + 88);
  v11[4] = *(_OWORD *)(v1 + 72);
  v11[5] = v4;
  v5 = *(_OWORD *)(v1 + 24);
  v11[0] = *(_OWORD *)(v1 + 8);
  v11[1] = v5;
  v6 = *(_OWORD *)(v1 + 120);
  a1[6] = *(_OWORD *)(v1 + 104);
  a1[7] = v6;
  a1[8] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)a1 + 137) = *(_OWORD *)(v1 + 145);
  v7 = *(_OWORD *)(v1 + 56);
  a1[2] = *(_OWORD *)(v1 + 40);
  a1[3] = v7;
  v8 = *(_OWORD *)(v1 + 88);
  a1[4] = *(_OWORD *)(v1 + 72);
  a1[5] = v8;
  v9 = *(_OWORD *)(v1 + 24);
  *a1 = *(_OWORD *)(v1 + 8);
  a1[1] = v9;
  return sub_2378B6464((uint64_t)v11);
}

__n128 Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[8];
  _OWORD v13[2];

  v3 = *(_OWORD *)(v1 + 120);
  v12[6] = *(_OWORD *)(v1 + 104);
  v12[7] = v3;
  v13[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)(v1 + 145);
  v4 = *(_OWORD *)(v1 + 56);
  v12[2] = *(_OWORD *)(v1 + 40);
  v12[3] = v4;
  v5 = *(_OWORD *)(v1 + 88);
  v12[4] = *(_OWORD *)(v1 + 72);
  v12[5] = v5;
  v6 = *(_OWORD *)(v1 + 24);
  v12[0] = *(_OWORD *)(v1 + 8);
  v12[1] = v6;
  sub_2378B650C((uint64_t)v12);
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 120) = v7;
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 145) = *(_OWORD *)(a1 + 137);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 88) = v9;
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v11;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_BYTE *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 184) = v2;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.init(tickTypeConfigurations:tickLabelsConfiguration:angleConfiguration:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __n128 result;

  v4 = a2[7];
  *(_OWORD *)(a4 + 104) = a2[6];
  *(_OWORD *)(a4 + 120) = v4;
  *(_OWORD *)(a4 + 136) = a2[8];
  *(_OWORD *)(a4 + 145) = *(_OWORD *)((char *)a2 + 137);
  v5 = a2[3];
  *(_OWORD *)(a4 + 40) = a2[2];
  *(_OWORD *)(a4 + 56) = v5;
  v6 = a2[5];
  *(_OWORD *)(a4 + 72) = a2[4];
  *(_OWORD *)(a4 + 88) = v6;
  v7 = a2[1];
  *(_OWORD *)(a4 + 8) = *a2;
  *(_OWORD *)(a4 + 24) = v7;
  v8 = *(_BYTE *)(a3 + 16);
  *(_QWORD *)a4 = a1;
  *(_OWORD *)(a4 + 168) = *(_OWORD *)a3;
  *(_BYTE *)(a4 + 184) = v8;
  result = *(__n128 *)(a3 + 24);
  *(__n128 *)(a4 + 192) = result;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.assets.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(void **)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_BYTE *)(v0 + 56);
  v6 = *(_BYTE *)(v0 + 57);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v9 + 56) = &type metadata for InstrumentFont;
  *(_QWORD *)(v9 + 64) = &protocol witness table for InstrumentFont;
  v10 = swift_allocObject();
  *(_QWORD *)(v9 + 32) = v10;
  *(_BYTE *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = v5;
  *(_BYTE *)(v10 + 49) = v6;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = v7;
  v11 = v3;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_237877AEC(a1, v3);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  return sub_237896D64();
}

unint64_t sub_2378B4FF8(char a1)
{
  if (!a1)
    return 0xD000000000000016;
  if (a1 == 1)
    return 0xD000000000000017;
  return 0xD000000000000012;
}

unint64_t sub_2378B5054()
{
  char *v0;

  return sub_2378B4FF8(*v0);
}

uint64_t sub_2378B505C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378B967C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378B5080()
{
  sub_2378B6CB0();
  return sub_237A88718();
}

uint64_t sub_2378B50A8()
{
  sub_2378B6CB0();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  int v29;
  char v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FEB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v10 = v3[21];
  v11 = v3[22];
  v29 = *((unsigned __int8 *)v3 + 184);
  v12 = v3[24];
  v13 = v3[25];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6CB0();
  sub_237A886B8();
  *(_QWORD *)&v20 = v9;
  v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681FEC0);
  sub_2378B6DC0(&qword_25681FEC8, (uint64_t (*)(void))sub_2378B6CF4, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  if (!v2)
  {
    v14 = v29;
    v15 = *(_OWORD *)(v3 + 15);
    v26 = *(_OWORD *)(v3 + 13);
    v27 = v15;
    v28[0] = *(_OWORD *)(v3 + 17);
    *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v3 + 145);
    v16 = *(_OWORD *)(v3 + 7);
    v22 = *(_OWORD *)(v3 + 5);
    v23 = v16;
    v17 = *(_OWORD *)(v3 + 11);
    v24 = *(_OWORD *)(v3 + 9);
    v25 = v17;
    v18 = *(_OWORD *)(v3 + 3);
    v20 = *(_OWORD *)(v3 + 1);
    v21 = v18;
    v30 = 1;
    sub_2378B6D38();
    sub_237A882B0();
    *(_QWORD *)&v20 = v10;
    *((_QWORD *)&v20 + 1) = v11;
    LOBYTE(v21) = v14;
    *((_QWORD *)&v21 + 1) = v12;
    *(_QWORD *)&v22 = v13;
    v30 = 2;
    sub_2378B6D7C();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237877AEC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[11];
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[25];
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[3];
  uint64_t v71;

  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FEE8);
  v5 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378B6CB0();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681FEC0);
  LOBYTE(v21[0]) = 0;
  sub_2378B6DC0(&qword_25681FEF0, (uint64_t (*)(void))sub_2378B6E34, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  sub_237A881F0();
  v9 = v24;
  v52 = 1;
  sub_2378B6E78();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v49 = v59;
  v50 = v60;
  *(_OWORD *)v51 = v61[0];
  *(_OWORD *)&v51[9] = *(_OWORD *)((char *)v61 + 9);
  v45 = v55;
  v46 = v56;
  v47 = v57;
  v48 = v58;
  v43 = v53;
  v44 = v54;
  v68 = v59;
  v69 = v60;
  v70[0] = v61[0];
  *(_OWORD *)((char *)v70 + 9) = *(_OWORD *)((char *)v61 + 9);
  v64 = v55;
  v65 = v56;
  v66 = v57;
  v67 = v58;
  v62 = v53;
  v63 = v54;
  v38 = 2;
  sub_2378B6464((uint64_t)&v43);
  sub_2378B6EBC();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v71);
  v10 = v39;
  v11 = v40;
  v12 = v41;
  *(_OWORD *)((char *)&v21[6] + 8) = v49;
  *(_OWORD *)((char *)&v21[7] + 8) = v50;
  *(_OWORD *)((char *)&v21[8] + 8) = *(_OWORD *)v51;
  *(_OWORD *)((char *)&v21[9] + 1) = *(_OWORD *)&v51[9];
  *(_OWORD *)((char *)&v21[2] + 8) = v45;
  *(_OWORD *)((char *)&v21[3] + 8) = v46;
  *(_OWORD *)((char *)&v21[4] + 8) = v47;
  *(_OWORD *)((char *)&v21[5] + 8) = v48;
  *(_OWORD *)((char *)v21 + 8) = v43;
  v13 = v42;
  *(_QWORD *)&v21[0] = v9;
  *(_OWORD *)((char *)&v21[1] + 8) = v44;
  *((_QWORD *)&v21[10] + 1) = v39;
  *(_QWORD *)&v22 = v40;
  BYTE8(v22) = v41;
  v23 = v42;
  sub_2378B6F00((uint64_t)v21);
  sub_2378B650C((uint64_t)&v43);
  swift_bridgeObjectRelease();
  v14 = v22;
  a2[10] = v21[10];
  a2[11] = v14;
  a2[12] = v23;
  v15 = v21[7];
  a2[6] = v21[6];
  a2[7] = v15;
  v16 = v21[9];
  a2[8] = v21[8];
  a2[9] = v16;
  v17 = v21[3];
  a2[2] = v21[2];
  a2[3] = v17;
  v18 = v21[5];
  a2[4] = v21[4];
  a2[5] = v18;
  v19 = v21[1];
  *a2 = v21[0];
  a2[1] = v19;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v31 = v68;
  v32 = v69;
  v33[0] = v70[0];
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v70 + 9);
  v27 = v64;
  v28 = v65;
  v29 = v66;
  v30 = v67;
  v25 = v62;
  v24 = v9;
  v26 = v63;
  v34 = v10;
  v35 = v11;
  v36 = v12;
  v37 = v13;
  return sub_2378B6FB0((uint64_t)&v24);
}

uint64_t sub_2378B5800@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2378B5814(_QWORD *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.encode(to:)(a1);
}

uint64_t sub_2378B5830()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237877AEC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  return sub_237A88610();
}

double sub_2378B58F4()
{
  double result;

  qword_25681FCC8 = 2;
  qword_25681FCD0 = 0x4198000040800000;
  dword_25681FCD8 = 1086324736;
  byte_25681FCDC = 0;
  *(_OWORD *)&qword_25681FCE0 = xmmword_237A906D0;
  byte_25681FCF0 = 0;
  *(_QWORD *)&result = 32;
  xmmword_25681FCF8 = xmmword_237A906E0;
  byte_25681FD08 = 0;
  qword_25681FD10 = 0;
  unk_25681FD18 = 0;
  word_25681FD20 = 255;
  byte_25681FD22 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultPrimary.getter@<X0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (qword_25681E038 != -1)
    swift_once();
  v2 = dword_25681FCD8;
  v3 = byte_25681FCDC;
  v4 = qword_25681FCE0;
  v5 = unk_25681FCE8;
  v6 = xmmword_25681FCF8;
  v7 = qword_25681FD10;
  v8 = unk_25681FD18;
  v9 = HIBYTE(word_25681FD20);
  v10 = byte_25681FD22;
  *(_QWORD *)a1 = qword_25681FCC8;
  *(_QWORD *)(a1 + 8) = qword_25681FCD0;
  *(_DWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 20) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v11 = byte_25681FCF0;
  *(_BYTE *)(a1 + 40) = byte_25681FCF0;
  *(_OWORD *)(a1 + 48) = v6;
  v12 = byte_25681FD08;
  *(_BYTE *)(a1 + 64) = byte_25681FD08;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v13 = word_25681FD20;
  *(_BYTE *)(a1 + 88) = word_25681FD20;
  *(_BYTE *)(a1 + 89) = v9;
  *(_BYTE *)(a1 + 90) = v10;
  sub_23787A11C(v4, v5, v11);
  sub_23787A11C(v6, *((uint64_t *)&v6 + 1), v12);
  return sub_23787D0A0(v7, v8, v13);
}

double sub_2378B5A34()
{
  double result;

  qword_25681FD28 = 4;
  qword_25681FD30 = 0x4140000040000000;
  dword_25681FD38 = 1084227584;
  byte_25681FD3C = 0;
  *(_OWORD *)&qword_25681FD40 = xmmword_237A906F0;
  byte_25681FD50 = 0;
  *(_QWORD *)&result = 33;
  xmmword_25681FD58 = xmmword_237A90700;
  byte_25681FD68 = 0;
  qword_25681FD70 = 0;
  unk_25681FD78 = 0;
  word_25681FD80 = 255;
  byte_25681FD82 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultSecondary.getter@<X0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (qword_25681E040 != -1)
    swift_once();
  v2 = dword_25681FD38;
  v3 = byte_25681FD3C;
  v4 = qword_25681FD40;
  v5 = unk_25681FD48;
  v6 = xmmword_25681FD58;
  v7 = qword_25681FD70;
  v8 = unk_25681FD78;
  v9 = HIBYTE(word_25681FD80);
  v10 = byte_25681FD82;
  *(_QWORD *)a1 = qword_25681FD28;
  *(_QWORD *)(a1 + 8) = qword_25681FD30;
  *(_DWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 20) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v11 = byte_25681FD50;
  *(_BYTE *)(a1 + 40) = byte_25681FD50;
  *(_OWORD *)(a1 + 48) = v6;
  v12 = byte_25681FD68;
  *(_BYTE *)(a1 + 64) = byte_25681FD68;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v13 = word_25681FD80;
  *(_BYTE *)(a1 + 88) = word_25681FD80;
  *(_BYTE *)(a1 + 89) = v9;
  *(_BYTE *)(a1 + 90) = v10;
  sub_23787A11C(v4, v5, v11);
  sub_23787A11C(v6, *((uint64_t *)&v6 + 1), v12);
  return sub_23787D0A0(v7, v8, v13);
}

double sub_2378B5B74()
{
  double result;

  qword_25681FD88 = 1;
  qword_25681FD90 = 0x40E0000040000000;
  dword_25681FD98 = 1084227584;
  byte_25681FD9C = 0;
  *(_OWORD *)&qword_25681FDA0 = xmmword_237A906F0;
  byte_25681FDB0 = 0;
  *(_QWORD *)&result = 33;
  xmmword_25681FDB8 = xmmword_237A90700;
  byte_25681FDC8 = 0;
  qword_25681FDD0 = 0;
  unk_25681FDD8 = 0;
  word_25681FDE0 = 255;
  byte_25681FDE2 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultTertiary.getter@<X0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (qword_25681E048 != -1)
    swift_once();
  v2 = dword_25681FD98;
  v3 = byte_25681FD9C;
  v4 = qword_25681FDA0;
  v5 = unk_25681FDA8;
  v6 = xmmword_25681FDB8;
  v7 = qword_25681FDD0;
  v8 = unk_25681FDD8;
  v9 = HIBYTE(word_25681FDE0);
  v10 = byte_25681FDE2;
  *(_QWORD *)a1 = qword_25681FD88;
  *(_QWORD *)(a1 + 8) = qword_25681FD90;
  *(_DWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 20) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v11 = byte_25681FDB0;
  *(_BYTE *)(a1 + 40) = byte_25681FDB0;
  *(_OWORD *)(a1 + 48) = v6;
  v12 = byte_25681FDC8;
  *(_BYTE *)(a1 + 64) = byte_25681FDC8;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v13 = word_25681FDE0;
  *(_BYTE *)(a1 + 88) = word_25681FDE0;
  *(_BYTE *)(a1 + 89) = v9;
  *(_BYTE *)(a1 + 90) = v10;
  sub_23787A11C(v4, v5, v11);
  sub_23787A11C(v6, *((uint64_t *)&v6 + 1), v12);
  return sub_23787D0A0(v7, v8, v13);
}

double sub_2378B5CB4()
{
  double result;

  qword_25681FDE8 = 0;
  qword_25681FDF0 = 0x4198000040800000;
  dword_25681FDF8 = 1086324736;
  byte_25681FDFC = 0;
  *(_QWORD *)&result = 28;
  *(_OWORD *)&qword_25681FE00 = xmmword_237A906D0;
  byte_25681FE10 = 0;
  xmmword_25681FE18 = xmmword_237A906D0;
  byte_25681FE28 = 0;
  qword_25681FE30 = 0;
  unk_25681FE38 = 0;
  word_25681FE40 = 511;
  byte_25681FE42 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.noTicks.getter@<X0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (qword_25681E050 != -1)
    swift_once();
  v2 = dword_25681FDF8;
  v3 = byte_25681FDFC;
  v4 = qword_25681FE00;
  v5 = unk_25681FE08;
  v6 = xmmword_25681FE18;
  v7 = qword_25681FE30;
  v8 = unk_25681FE38;
  v9 = HIBYTE(word_25681FE40);
  v10 = byte_25681FE42;
  *(_QWORD *)a1 = qword_25681FDE8;
  *(_QWORD *)(a1 + 8) = qword_25681FDF0;
  *(_DWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 20) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v11 = byte_25681FE10;
  *(_BYTE *)(a1 + 40) = byte_25681FE10;
  *(_OWORD *)(a1 + 48) = v6;
  v12 = byte_25681FE28;
  *(_BYTE *)(a1 + 64) = byte_25681FE28;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v13 = word_25681FE40;
  *(_BYTE *)(a1 + 88) = word_25681FE40;
  *(_BYTE *)(a1 + 89) = v9;
  *(_BYTE *)(a1 + 90) = v10;
  sub_23787A11C(v4, v5, v11);
  sub_23787A11C(v6, *((uint64_t *)&v6 + 1), v12);
  return sub_23787D0A0(v7, v8, v13);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV15TickLabelColorsV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BOOL8 result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v42 = *(_QWORD *)(a1 + 24);
  v43 = *(_QWORD *)(a1 + 32);
  v44 = *(_BYTE *)(a1 + 40);
  v35 = *(_QWORD *)(a1 + 48);
  v36 = *(_QWORD *)(a1 + 56);
  v37 = *(unsigned __int8 *)(a1 + 64);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v41 = *(_BYTE *)(a2 + 40);
  v38 = *(_QWORD *)(a2 + 48);
  v39 = *(_QWORD *)(a2 + 56);
  v40 = *(_QWORD *)(a2 + 32);
  v34 = *(unsigned __int8 *)(a2 + 64);
  sub_23787A11C(*(_QWORD *)a1, v3, v4);
  sub_23787A11C(v5, v6, v7);
  Theme.ColorID.rawValue.getter();
  v10 = v9;
  v12 = v11;
  Theme.ColorID.rawValue.getter();
  if (v10 == v14 && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_23787A134(v5, v6, v7);
    sub_23787A134(v2, v3, v4);
  }
  else
  {
    v15 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v5, v6, v7);
    sub_23787A134(v2, v3, v4);
    result = 0;
    if ((v15 & 1) == 0)
      return result;
  }
  sub_23787A11C(v42, v43, v44);
  sub_23787A11C(v8, v40, v41);
  Theme.ColorID.rawValue.getter();
  v18 = v17;
  v20 = v19;
  Theme.ColorID.rawValue.getter();
  if (v18 == v22 && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    sub_23787A134(v8, v40, v41);
    sub_23787A134(v42, v43, v44);
  }
  else
  {
    v23 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v8, v40, v41);
    sub_23787A134(v42, v43, v44);
    result = 0;
    if ((v23 & 1) == 0)
      return result;
  }
  if (v37 != 255)
  {
    v24 = v34;
    v26 = v35;
    v25 = v36;
    if (v34 != 255)
    {
      sub_23787D0A0(v35, v36, v37);
      sub_23787D0A0(v35, v36, v37);
      sub_23787D0A0(v38, v39, v34);
      Theme.ColorID.rawValue.getter();
      v28 = v27;
      v30 = v29;
      Theme.ColorID.rawValue.getter();
      if (v28 == v32 && v30 == v31)
      {
        swift_bridgeObjectRelease_n();
        sub_23787D0B4(v38, v39, v34);
        sub_23787D0B4(v35, v36, v37);
        sub_23787D0B4(v35, v36, v37);
        return 1;
      }
      v33 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787D0B4(v38, v39, v34);
      sub_23787D0B4(v35, v36, v37);
      sub_23787D0B4(v35, v36, v37);
      return (v33 & 1) != 0;
    }
LABEL_15:
    sub_23787D0A0(v26, v25, v37);
    sub_23787D0A0(v38, v39, v24);
    sub_23787D0B4(v26, v25, v37);
    sub_23787D0B4(v38, v39, v24);
    return 0;
  }
  v24 = v34;
  v26 = v35;
  v25 = v36;
  if (v34 != 255)
    goto LABEL_15;
  return 1;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV010TickLabelsI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  char v49;

  v2 = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12))
  {
    v36 = *(_OWORD *)(a1 + 112);
    v37 = *(_OWORD *)(a1 + 88);
    v30 = *(_BYTE *)(a1 + 128);
    v31 = *(_BYTE *)(a1 + 104);
    v3 = *(_BYTE *)(a1 + 152);
    v34 = *(_OWORD *)(a2 + 88);
    v35 = *(_OWORD *)(a1 + 136);
    v4 = *(_BYTE *)(a2 + 104);
    v5 = *(_BYTE *)(a2 + 128);
    v32 = *(_OWORD *)(a2 + 136);
    v33 = *(_OWORD *)(a2 + 112);
    v6 = *(_BYTE *)(a2 + 152);
    v7 = *(_QWORD *)(a2 + 80);
    v8 = *(unsigned __int8 *)(a2 + 73);
    v9 = *(unsigned __int8 *)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 64);
    v12 = *(_BYTE *)(a2 + 49);
    v13 = *(_BYTE *)(a2 + 48);
    v14 = *(_QWORD *)(a2 + 40);
    v16 = *(_QWORD *)(a2 + 24);
    v15 = *(_QWORD *)(a2 + 32);
    v17 = *(_BYTE *)(a2 + 16);
    v18 = *(_QWORD *)(a1 + 80);
    v19 = *(unsigned __int8 *)(a1 + 73);
    v20 = *(unsigned __int8 *)(a1 + 72);
    v22 = *(_QWORD *)(a1 + 56);
    v21 = *(_QWORD *)(a1 + 64);
    v23 = *(_BYTE *)(a1 + 49);
    v24 = *(_BYTE *)(a1 + 48);
    v25 = *(_QWORD *)(a1 + 40);
    v27 = *(_QWORD *)(a1 + 24);
    v26 = *(_QWORD *)(a1 + 32);
    LOBYTE(v44) = *(_BYTE *)(a1 + 16);
    *((_QWORD *)&v44 + 1) = v27;
    v45 = v26;
    *(_QWORD *)&v46 = v25;
    BYTE8(v46) = v24;
    BYTE9(v46) = v23;
    v47 = v22;
    *(_QWORD *)&v48 = v21;
    LOBYTE(v38) = v17;
    *((_QWORD *)&v38 + 1) = v16;
    v39 = v15;
    *(_QWORD *)&v40 = v14;
    BYTE8(v40) = v13;
    BYTE9(v40) = v12;
    v41 = v11;
    *(_QWORD *)&v42 = v10;
    v28 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v44, (uint64_t)&v38);
    v2 = 0;
    if ((v28 & 1) != 0 && ((v9 ^ v20) & 1) == 0 && ((v8 ^ v19) & 1) == 0 && v18 == v7)
    {
      v44 = v37;
      LOBYTE(v45) = v31;
      v46 = v36;
      LOBYTE(v47) = v30;
      v48 = v35;
      v49 = v3;
      v38 = v34;
      LOBYTE(v39) = v4;
      v40 = v33;
      LOBYTE(v41) = v5;
      v42 = v32;
      v43 = v6;
      return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV15TickLabelColorsV2eeoiySbAI_AItFZ_0((uint64_t)&v44, (uint64_t)&v38);
    }
  }
  return v2;
}

unint64_t sub_2378B6398()
{
  unint64_t result;

  result = qword_25681FE50;
  if (!qword_25681FE50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90674, &_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FE50);
  }
  return result;
}

unint64_t sub_2378B63DC()
{
  unint64_t result;

  result = qword_25681FE58;
  if (!qword_25681FE58)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors);
    atomic_store(result, (unint64_t *)&qword_25681FE58);
  }
  return result;
}

unint64_t sub_2378B6420()
{
  unint64_t result;

  result = qword_25681FE68;
  if (!qword_25681FE68)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors);
    atomic_store(result, (unint64_t *)&qword_25681FE68);
  }
  return result;
}

uint64_t sub_2378B6464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  id v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = *(_BYTE *)(a1 + 128);
  v9 = *(_BYTE *)(a1 + 152);
  v10 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_23787A11C(v2, v3, v7);
  sub_23787A11C(v4, v5, v8);
  sub_23787D0A0(v12, v6, v9);
  return a1;
}

uint64_t sub_2378B650C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a1 + 136);
  v8 = *(_BYTE *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 152);
  swift_bridgeObjectRelease();

  sub_23787A134(v3, v4, v8);
  sub_23787A134(v5, v6, v9);
  sub_23787D0B4(v12, v7, v10);
  return a1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV08TickTypeI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  result = 0;
  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(float *)(a1 + 12) != *(float *)(a2 + 12)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16)
    || *(unsigned __int8 *)(a1 + 20) != *(unsigned __int8 *)(a2 + 20))
  {
    return result;
  }
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v47 = *(_QWORD *)(a1 + 48);
  v48 = *(_QWORD *)(a1 + 56);
  v49 = *(_BYTE *)(a1 + 64);
  v40 = *(_QWORD *)(a1 + 72);
  v41 = *(_QWORD *)(a1 + 80);
  v42 = *(unsigned __int8 *)(a1 + 88);
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v46 = *(_BYTE *)(a2 + 64);
  v43 = *(_QWORD *)(a2 + 72);
  v44 = *(_QWORD *)(a2 + 80);
  v45 = *(_QWORD *)(a2 + 56);
  v38 = *(unsigned __int8 *)(a1 + 89);
  v39 = *(unsigned __int8 *)(a2 + 88);
  v36 = *(unsigned __int8 *)(a1 + 90);
  v37 = *(unsigned __int8 *)(a2 + 89);
  v35 = *(unsigned __int8 *)(a2 + 90);
  sub_23787A11C(v4, v5, v6);
  sub_23787A11C(v8, v7, v9);
  Theme.ColorID.rawValue.getter();
  v12 = v11;
  v14 = v13;
  Theme.ColorID.rawValue.getter();
  if (v12 == v16 && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    sub_23787A134(v8, v7, v9);
    sub_23787A134(v4, v5, v6);
  }
  else
  {
    v17 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v8, v7, v9);
    sub_23787A134(v4, v5, v6);
    result = 0;
    if ((v17 & 1) == 0)
      return result;
  }
  sub_23787A11C(v47, v48, v49);
  sub_23787A11C(v10, v45, v46);
  Theme.ColorID.rawValue.getter();
  v19 = v18;
  v21 = v20;
  Theme.ColorID.rawValue.getter();
  if (v19 == v23 && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
    sub_23787A134(v10, v45, v46);
    sub_23787A134(v47, v48, v49);
  }
  else
  {
    v24 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v10, v45, v46);
    sub_23787A134(v47, v48, v49);
    result = 0;
    if ((v24 & 1) == 0)
      return result;
  }
  if (v42 == 255)
  {
    v25 = v39;
    v27 = v40;
    v26 = v41;
    if (v39 == 255)
    {
LABEL_21:
      if (v38 != v37)
        return 0;
      return v36 ^ v35 ^ 1u;
    }
LABEL_20:
    sub_23787D0A0(v27, v26, v42);
    sub_23787D0A0(v43, v44, v25);
    sub_23787D0B4(v27, v26, v42);
    sub_23787D0B4(v43, v44, v25);
    return 0;
  }
  v25 = v39;
  v27 = v40;
  v26 = v41;
  if (v39 == 255)
    goto LABEL_20;
  sub_23787D0A0(v40, v41, v42);
  sub_23787D0A0(v40, v41, v42);
  sub_23787D0A0(v43, v44, v39);
  Theme.ColorID.rawValue.getter();
  v29 = v28;
  v31 = v30;
  Theme.ColorID.rawValue.getter();
  if (v29 == v33 && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
    sub_23787D0B4(v43, v44, v39);
    sub_23787D0B4(v40, v41, v42);
    sub_23787D0B4(v40, v41, v42);
    goto LABEL_21;
  }
  v34 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787D0B4(v43, v44, v39);
  sub_23787D0B4(v40, v41, v42);
  sub_23787D0B4(v40, v41, v42);
  result = 0;
  if ((v34 & 1) != 0 && ((v38 ^ v37) & 1) == 0)
    return v36 ^ v35 ^ 1u;
  return result;
}

unint64_t sub_2378B6A38()
{
  unint64_t result;

  result = qword_25681FE78;
  if (!qword_25681FE78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90624, &_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FE78);
  }
  return result;
}

unint64_t sub_2378B6A7C()
{
  unint64_t result;

  result = qword_25681FE80;
  if (!qword_25681FE80)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle.LineCap, &type metadata for DigiBarRadialStyle.LineCap);
    atomic_store(result, (unint64_t *)&qword_25681FE80);
  }
  return result;
}

unint64_t sub_2378B6AC0()
{
  unint64_t result;

  result = qword_25681FE90;
  if (!qword_25681FE90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle.LineCap, &type metadata for DigiBarRadialStyle.LineCap);
    atomic_store(result, (unint64_t *)&qword_25681FE90);
  }
  return result;
}

unint64_t sub_2378B6B04()
{
  unint64_t result;

  result = qword_25681FEA0;
  if (!qword_25681FEA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A905D4, &_s18TicksConfigurationV15TickLabelColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FEA0);
  }
  return result;
}

uint64_t sub_2378B6B48()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint16x4_t v14;
  float64x2_t v16;
  int8x16_t v17;
  float64x2_t v18;
  int8x16_t v19;
  _OWORD v20[8];
  _OWORD v21[2];
  _OWORD v22[8];
  _OWORD v23[2];

  v4 = *(unsigned __int8 *)(a1 + 184);
  v18 = *(float64x2_t *)(a1 + 192);
  v19 = *(int8x16_t *)(a1 + 168);
  v5 = *(unsigned __int8 *)(a2 + 184);
  v16 = *(float64x2_t *)(a2 + 192);
  v17 = *(int8x16_t *)(a2 + 168);
  if ((sub_2379B9DF4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v6 = *(_OWORD *)(a1 + 120);
  v22[6] = *(_OWORD *)(a1 + 104);
  v22[7] = v6;
  v23[0] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)(a1 + 145);
  v7 = *(_OWORD *)(a1 + 56);
  v22[2] = *(_OWORD *)(a1 + 40);
  v22[3] = v7;
  v8 = *(_OWORD *)(a1 + 88);
  v22[4] = *(_OWORD *)(a1 + 72);
  v22[5] = v8;
  v9 = *(_OWORD *)(a1 + 24);
  v22[0] = *(_OWORD *)(a1 + 8);
  v22[1] = v9;
  v10 = *(_OWORD *)(a2 + 120);
  v20[6] = *(_OWORD *)(a2 + 104);
  v20[7] = v10;
  v21[0] = *(_OWORD *)(a2 + 136);
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)(a2 + 145);
  v11 = *(_OWORD *)(a2 + 56);
  v20[2] = *(_OWORD *)(a2 + 40);
  v20[3] = v11;
  v12 = *(_OWORD *)(a2 + 88);
  v20[4] = *(_OWORD *)(a2 + 72);
  v20[5] = v12;
  v13 = *(_OWORD *)(a2 + 24);
  v20[0] = *(_OWORD *)(a2 + 8);
  v20[1] = v13;
  if (!_s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV010TickLabelsI0V2eeoiySbAI_AItFZ_0((uint64_t)v22, (uint64_t)v20))return 0;
  v14 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v19, v19, 8uLL), (float64x2_t)vextq_s8(v17, v17, 8uLL)), (int32x4_t)vceqq_f64(v18, v16))), 0xFuLL));
  v14.i16[0] = vminv_u16(v14);
  return v14.i32[0] & (v4 ^ v5 ^ 1u);
}

unint64_t sub_2378B6CB0()
{
  unint64_t result;

  result = qword_25681FEB8;
  if (!qword_25681FEB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90584, &_s18TicksConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FEB8);
  }
  return result;
}

unint64_t sub_2378B6CF4()
{
  unint64_t result;

  result = qword_25681FED0;
  if (!qword_25681FED0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FED0);
  }
  return result;
}

unint64_t sub_2378B6D38()
{
  unint64_t result;

  result = qword_25681FED8;
  if (!qword_25681FED8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FED8);
  }
  return result;
}

unint64_t sub_2378B6D7C()
{
  unint64_t result;

  result = qword_25681FEE0;
  if (!qword_25681FEE0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.AngleConfiguration, &type metadata for Instrument.GaugeStyle.AngleConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FEE0);
  }
  return result;
}

uint64_t sub_2378B6DC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681FEC0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378B6E34()
{
  unint64_t result;

  result = qword_25681FEF8;
  if (!qword_25681FEF8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FEF8);
  }
  return result;
}

unint64_t sub_2378B6E78()
{
  unint64_t result;

  result = qword_25681FF00;
  if (!qword_25681FF00)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FF00);
  }
  return result;
}

unint64_t sub_2378B6EBC()
{
  unint64_t result;

  result = qword_25681FF08;
  if (!qword_25681FF08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.AngleConfiguration, &type metadata for Instrument.GaugeStyle.AngleConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FF08);
  }
  return result;
}

uint64_t sub_2378B6F00(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRetain();
  v10 = v2;
  swift_bridgeObjectRetain();
  sub_23787A11C(v3, v4, v7);
  sub_23787A11C(v5, v6, v8);
  sub_23787D0A0(v13, v12, v9);
  return a1;
}

uint64_t sub_2378B6FB0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_23787A134(v3, v4, v7);
  sub_23787A134(v5, v6, v8);
  sub_23787D0B4(v12, v11, v9);
  return a1;
}

unint64_t sub_2378B7064()
{
  unint64_t result;

  result = qword_25681FF10;
  if (!qword_25681FF10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FF10);
  }
  return result;
}

uint64_t sub_2378B70A8()
{
  return sub_2378B70D4(&qword_25681FF18, &qword_25681FF20, MEMORY[0x24BEE12E0]);
}

uint64_t sub_2378B70D4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B81FA98](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378B7118()
{
  unint64_t result;

  result = qword_25681FF28;
  if (!qword_25681FF28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickType, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickType);
    atomic_store(result, (unint64_t *)&qword_25681FF28);
  }
  return result;
}

unint64_t sub_2378B7160()
{
  unint64_t result;

  result = qword_25681FF30;
  if (!qword_25681FF30)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FF30);
  }
  return result;
}

unint64_t sub_2378B71A8()
{
  unint64_t result;

  result = qword_25681FF38;
  if (!qword_25681FF38)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors);
    atomic_store(result, (unint64_t *)&qword_25681FF38);
  }
  return result;
}

unint64_t sub_2378B71F0()
{
  unint64_t result;

  result = qword_25681FF40;
  if (!qword_25681FF40)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration, &type metadata for Instrument.GaugeStyle.TicksConfiguration);
    atomic_store(result, (unint64_t *)&qword_25681FF40);
  }
  return result;
}

uint64_t sub_2378B7234@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 90);
  return result;
}

_BYTE *sub_2378B7240(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 90) = *result;
  return result;
}

uint64_t _s18TicksConfigurationVwxx(uint64_t a1)
{
  uint64_t result;
  int v3;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  result = sub_23787A134(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  v3 = *(unsigned __int8 *)(a1 + 160);
  if (v3 != 255)
    return sub_23787A134(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v3);
  return result;
}

uint64_t _s18TicksConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 104);
  v9 = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  v10 = v5;
  swift_bridgeObjectRetain();
  sub_23787A11C(v7, v8, v9);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = v8;
  *(_BYTE *)(a1 + 112) = v9;
  v11 = *(_QWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 128);
  LOBYTE(v8) = *(_BYTE *)(a2 + 136);
  sub_23787A11C(v11, v12, v8);
  *(_QWORD *)(a1 + 120) = v11;
  *(_QWORD *)(a1 + 128) = v12;
  *(_BYTE *)(a1 + 136) = v8;
  v13 = *(unsigned __int8 *)(a2 + 160);
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 144);
    v15 = *(_QWORD *)(a2 + 152);
    sub_23787A11C(v14, v15, *(_BYTE *)(a2 + 160));
    *(_QWORD *)(a1 + 144) = v14;
    *(_QWORD *)(a1 + 152) = v15;
    *(_BYTE *)(a1 + 160) = v13;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t _s18TicksConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 *v19;
  __int128 *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 104);
  v9 = *(_BYTE *)(a2 + 112);
  sub_23787A11C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = v8;
  v12 = *(_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 112) = v9;
  sub_23787A134(v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_BYTE *)(a2 + 136);
  sub_23787A11C(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 120);
  v17 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v14;
  v18 = *(_BYTE *)(a1 + 136);
  *(_BYTE *)(a1 + 136) = v15;
  sub_23787A134(v16, v17, v18);
  v19 = (__int128 *)(a1 + 144);
  v20 = (__int128 *)(a2 + 144);
  v21 = *(unsigned __int8 *)(a2 + 160);
  if (*(unsigned __int8 *)(a1 + 160) == 255)
  {
    if (v21 == 255)
    {
      v30 = *v20;
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *v19 = v30;
    }
    else
    {
      v27 = *(_QWORD *)(a2 + 144);
      v28 = *(_QWORD *)(a2 + 152);
      sub_23787A11C(v27, v28, *(_BYTE *)(a2 + 160));
      *(_QWORD *)(a1 + 144) = v27;
      *(_QWORD *)(a1 + 152) = v28;
      *(_BYTE *)(a1 + 160) = v21;
    }
  }
  else if (v21 == 255)
  {
    sub_2378B75DC(a1 + 144);
    v29 = *(_BYTE *)(a2 + 160);
    *v19 = *v20;
    *(_BYTE *)(a1 + 160) = v29;
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 144);
    v23 = *(_QWORD *)(a2 + 152);
    sub_23787A11C(v22, v23, *(_BYTE *)(a2 + 160));
    v24 = *(_QWORD *)(a1 + 144);
    v25 = *(_QWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 144) = v22;
    *(_QWORD *)(a1 + 152) = v23;
    v26 = *(_BYTE *)(a1 + 160);
    *(_BYTE *)(a1 + 160) = v21;
    sub_23787A134(v24, v25, v26);
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t sub_2378B75DC(uint64_t a1)
{
  destroy for Theme.ColorID(a1);
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t _s18TicksConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v7 = *(_QWORD *)(a2 + 104);
  v8 = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v7;
  v11 = *(_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 112) = v8;
  sub_23787A134(v9, v10, v11);
  v12 = *(_BYTE *)(a2 + 136);
  v13 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v15 = *(_BYTE *)(a1 + 136);
  *(_BYTE *)(a1 + 136) = v12;
  sub_23787A134(v13, v14, v15);
  v16 = (_OWORD *)(a2 + 144);
  v17 = *(unsigned __int8 *)(a1 + 160);
  if (v17 == 255)
    goto LABEL_5;
  v18 = *(unsigned __int8 *)(a2 + 160);
  if (v18 == 255)
  {
    sub_2378B75DC(a1 + 144);
LABEL_5:
    *(_OWORD *)(a1 + 144) = *v16;
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *v16;
  *(_BYTE *)(a1 + 160) = v18;
  sub_23787A134(v19, v20, v17);
LABEL_6:
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  return a1;
}

uint64_t _s18TicksConfigurationVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18TicksConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwxx(uint64_t a1)
{
  uint64_t result;
  int v3;

  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  result = sub_23787A134(*(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  v3 = *(unsigned __int8 *)(a1 + 152);
  if (v3 != 255)
    return sub_23787A134(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), v3);
  return result;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_BYTE *)(a2 + 104);
  v9 = v4;
  swift_bridgeObjectRetain();
  sub_23787A11C(v6, v7, v8);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = v8;
  v10 = *(_QWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 120);
  LOBYTE(v7) = *(_BYTE *)(a2 + 128);
  sub_23787A11C(v10, v11, v7);
  *(_QWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 128) = v7;
  v12 = *(unsigned __int8 *)(a2 + 152);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 136);
    v13 = *(_QWORD *)(a2 + 144);
    sub_23787A11C(v14, v13, v12);
    *(_QWORD *)(a1 + 136) = v14;
    *(_QWORD *)(a1 + 144) = v13;
    *(_BYTE *)(a1 + 152) = v12;
  }
  return a1;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 *v19;
  __int128 *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_BYTE *)(a2 + 104);
  sub_23787A11C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v12 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v9;
  sub_23787A134(v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a2 + 120);
  v15 = *(_BYTE *)(a2 + 128);
  sub_23787A11C(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v14;
  v18 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v15;
  sub_23787A134(v16, v17, v18);
  v19 = (__int128 *)(a1 + 136);
  v20 = (__int128 *)(a2 + 136);
  v21 = *(unsigned __int8 *)(a2 + 152);
  if (*(unsigned __int8 *)(a1 + 152) == 255)
  {
    if (v21 == 255)
    {
      v30 = *v20;
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *v19 = v30;
    }
    else
    {
      v28 = *(_QWORD *)(a2 + 136);
      v27 = *(_QWORD *)(a2 + 144);
      sub_23787A11C(v28, v27, v21);
      *(_QWORD *)(a1 + 136) = v28;
      *(_QWORD *)(a1 + 144) = v27;
      *(_BYTE *)(a1 + 152) = v21;
    }
  }
  else if (v21 == 255)
  {
    sub_2378B75DC(a1 + 136);
    v29 = *(_BYTE *)(a2 + 152);
    *v19 = *v20;
    *(_BYTE *)(a1 + 152) = v29;
  }
  else
  {
    v23 = *(_QWORD *)(a2 + 136);
    v22 = *(_QWORD *)(a2 + 144);
    sub_23787A11C(v23, v22, v21);
    v24 = *(_QWORD *)(a1 + 136);
    v25 = *(_QWORD *)(a1 + 144);
    *(_QWORD *)(a1 + 136) = v23;
    *(_QWORD *)(a1 + 144) = v22;
    v26 = *(_BYTE *)(a1 + 152);
    *(_BYTE *)(a1 + 152) = v21;
    sub_23787A134(v24, v25, v26);
  }
  return a1;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v7;
  v11 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v8;
  sub_23787A134(v9, v10, v11);
  v12 = *(_BYTE *)(a2 + 128);
  v13 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v15 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v12;
  sub_23787A134(v13, v14, v15);
  v16 = (_OWORD *)(a2 + 136);
  v17 = *(unsigned __int8 *)(a1 + 152);
  if (v17 == 255)
    goto LABEL_5;
  v18 = *(unsigned __int8 *)(a2 + 152);
  if (v18 == 255)
  {
    sub_2378B75DC(a1 + 136);
LABEL_5:
    *(_OWORD *)(a1 + 136) = *v16;
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    return a1;
  }
  v19 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *v16;
  *(_BYTE *)(a1 + 152) = v18;
  sub_23787A134(v19, v20, v17);
  return a1;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickType()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickType;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwxx(uint64_t a1)
{
  uint64_t result;
  int v3;

  sub_23787A134(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  result = sub_23787A134(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 != 255)
    return sub_23787A134(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v3);
  return result;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_23787A11C(v4, v5, v6);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_BYTE *)(a2 + 64);
  sub_23787A11C(v7, v8, v9);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  v10 = *(unsigned __int8 *)(a2 + 88);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 72);
    v12 = *(_QWORD *)(a2 + 80);
    sub_23787A11C(v11, v12, *(_BYTE *)(a2 + 88));
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v12;
    *(_BYTE *)(a1 + 88) = v10;
  }
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  return a1;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 *v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_23787A11C(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_23787A134(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_BYTE *)(a2 + 64);
  sub_23787A11C(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v15 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v12;
  sub_23787A134(v13, v14, v15);
  v16 = (__int128 *)(a1 + 72);
  v17 = (__int128 *)(a2 + 72);
  v18 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v18 == 255)
    {
      v27 = *v17;
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *v16 = v27;
    }
    else
    {
      v24 = *(_QWORD *)(a2 + 72);
      v25 = *(_QWORD *)(a2 + 80);
      sub_23787A11C(v24, v25, *(_BYTE *)(a2 + 88));
      *(_QWORD *)(a1 + 72) = v24;
      *(_QWORD *)(a1 + 80) = v25;
      *(_BYTE *)(a1 + 88) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_2378B75DC(a1 + 72);
    v26 = *(_BYTE *)(a2 + 88);
    *v16 = *v17;
    *(_BYTE *)(a1 + 88) = v26;
  }
  else
  {
    v19 = *(_QWORD *)(a2 + 72);
    v20 = *(_QWORD *)(a2 + 80);
    sub_23787A11C(v19, v20, *(_BYTE *)(a2 + 88));
    v21 = *(_QWORD *)(a1 + 72);
    v22 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    v23 = *(_BYTE *)(a1 + 88);
    *(_BYTE *)(a1 + 88) = v18;
    sub_23787A134(v21, v22, v23);
  }
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  return a1;
}

__n128 __swift_memcpy91_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_23787A134(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v8;
  sub_23787A134(v9, v10, v11);
  v12 = (_OWORD *)(a2 + 72);
  v13 = *(unsigned __int8 *)(a1 + 88);
  if (v13 == 255)
    goto LABEL_5;
  v14 = *(unsigned __int8 *)(a2 + 88);
  if (v14 == 255)
  {
    sub_2378B75DC(a1 + 72);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *v12;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *v12;
  *(_BYTE *)(a1 + 88) = v14;
  sub_23787A134(v15, v16, v13);
LABEL_6:
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  return a1;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 91))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 89);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 91) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 91) = 0;
    if (a2)
      *(_BYTE *)(result + 89) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration;
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwxx(uint64_t a1)
{
  uint64_t result;
  int v3;

  sub_23787A134(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  result = sub_23787A134(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    return sub_23787A134(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v3);
  return result;
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_23787A11C(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_23787A11C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(unsigned __int8 *)(a2 + 64);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v12 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    sub_23787A11C(v12, v11, v10);
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v10;
  }
  return a1;
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 *v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_23787A11C(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_23787A134(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  sub_23787A11C(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v12;
  sub_23787A134(v13, v14, v15);
  v16 = (__int128 *)(a1 + 48);
  v17 = (__int128 *)(a2 + 48);
  v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      v27 = *v17;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v16 = v27;
    }
    else
    {
      v25 = *(_QWORD *)(a2 + 48);
      v24 = *(_QWORD *)(a2 + 56);
      sub_23787A11C(v25, v24, v18);
      *(_QWORD *)(a1 + 48) = v25;
      *(_QWORD *)(a1 + 56) = v24;
      *(_BYTE *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_2378B75DC(a1 + 48);
    v26 = *(_BYTE *)(a2 + 64);
    *v16 = *v17;
    *(_BYTE *)(a1 + 64) = v26;
  }
  else
  {
    v20 = *(_QWORD *)(a2 + 48);
    v19 = *(_QWORD *)(a2 + 56);
    sub_23787A11C(v20, v19, v18);
    v21 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v20;
    *(_QWORD *)(a1 + 56) = v19;
    v23 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v18;
    sub_23787A134(v21, v22, v23);
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_23787A134(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_23787A134(v9, v10, v11);
  v12 = (_OWORD *)(a2 + 48);
  v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 == 255)
    goto LABEL_5;
  v14 = *(unsigned __int8 *)(a2 + 64);
  if (v14 == 255)
  {
    sub_2378B75DC(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *v12;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    return a1;
  }
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *v12;
  *(_BYTE *)(a1 + 64) = v14;
  sub_23787A134(v15, v16, v13);
  return a1;
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s18TicksConfigurationV15TickLabelColorsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors;
}

ValueMetadata *_s18TicksConfigurationV10CodingKeysOMa()
{
  return &_s18TicksConfigurationV10CodingKeysON;
}

uint64_t _s18TicksConfigurationV8TickTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2378B862C + 4 * byte_237A8FD97[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2378B8660 + 4 * byte_237A8FD92[v4]))();
}

uint64_t sub_2378B8660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B8668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378B8670);
  return result;
}

uint64_t sub_2378B867C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378B8684);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2378B8688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B8690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18TicksConfigurationV15TickLabelColorsV10CodingKeysOMa()
{
  return &_s18TicksConfigurationV15TickLabelColorsV10CodingKeysON;
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2378B8788 + 4 * byte_237A8FDA1[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2378B87BC + 4 * byte_237A8FD9C[v4]))();
}

uint64_t sub_2378B87BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B87C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378B87CCLL);
  return result;
}

uint64_t sub_2378B87D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378B87E0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2378B87E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B87EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOMa()
{
  return &_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON;
}

uint64_t _s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2378B8854 + 4 * byte_237A8FDAB[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2378B8888 + 4 * byte_237A8FDA6[v4]))();
}

uint64_t sub_2378B8888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B8890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378B8898);
  return result;
}

uint64_t sub_2378B88A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378B88ACLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2378B88B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378B88B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysOMa()
{
  return &_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON;
}

unint64_t sub_2378B88D8()
{
  unint64_t result;

  result = qword_25681FF48;
  if (!qword_25681FF48)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90334, &_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF48);
  }
  return result;
}

unint64_t sub_2378B8920()
{
  unint64_t result;

  result = qword_25681FF50;
  if (!qword_25681FF50)
  {
    result = MEMORY[0x23B81FA98](&unk_237A903EC, &_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF50);
  }
  return result;
}

unint64_t sub_2378B8968()
{
  unint64_t result;

  result = qword_25681FF58;
  if (!qword_25681FF58)
  {
    result = MEMORY[0x23B81FA98](&unk_237A904A4, &_s18TicksConfigurationV15TickLabelColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF58);
  }
  return result;
}

unint64_t sub_2378B89B0()
{
  unint64_t result;

  result = qword_25681FF60;
  if (!qword_25681FF60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9055C, &_s18TicksConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF60);
  }
  return result;
}

unint64_t sub_2378B89F8()
{
  unint64_t result;

  result = qword_25681FF68;
  if (!qword_25681FF68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A904CC, &_s18TicksConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF68);
  }
  return result;
}

unint64_t sub_2378B8A40()
{
  unint64_t result;

  result = qword_25681FF70;
  if (!qword_25681FF70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A904F4, &_s18TicksConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF70);
  }
  return result;
}

unint64_t sub_2378B8A88()
{
  unint64_t result;

  result = qword_25681FF78;
  if (!qword_25681FF78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90414, &_s18TicksConfigurationV15TickLabelColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF78);
  }
  return result;
}

unint64_t sub_2378B8AD0()
{
  unint64_t result;

  result = qword_25681FF80;
  if (!qword_25681FF80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9043C, &_s18TicksConfigurationV15TickLabelColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF80);
  }
  return result;
}

unint64_t sub_2378B8B18()
{
  unint64_t result;

  result = qword_25681FF88;
  if (!qword_25681FF88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9035C, &_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF88);
  }
  return result;
}

unint64_t sub_2378B8B60()
{
  unint64_t result;

  result = qword_25681FF90;
  if (!qword_25681FF90)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90384, &_s18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF90);
  }
  return result;
}

unint64_t sub_2378B8BA8()
{
  unint64_t result;

  result = qword_25681FF98;
  if (!qword_25681FF98)
  {
    result = MEMORY[0x23B81FA98](&unk_237A902A4, &_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FF98);
  }
  return result;
}

unint64_t sub_2378B8BF0()
{
  unint64_t result;

  result = qword_25681FFA0;
  if (!qword_25681FFA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A902CC, &_s18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25681FFA0);
  }
  return result;
}

uint64_t sub_2378B8C34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6562614C78616DLL && a2 == 0xEE00746E756F4373;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465736E69 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6562614C6F72657ALL && a2 == 0xEE007465736E496CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F46736C6562616CLL && a2 == 0xEA0000000000746ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F756E69746E6F63 && a2 == 0xEE006C6C69467375 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7372694665646968 && a2 == 0xEE006C6562614C74 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7669446C6562616CLL && a2 == 0xEC00000072656469 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6F436C6562616CLL && a2 == 0xEB0000000073726FLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_2378B9040(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x756F43736B636974 && a2 == 0xEA0000000000746ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746469576B636974 && a2 == 0xE900000000000068 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E654C6B636974 && a2 == 0xEA00000000006874 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736E496B636974 && a2 == 0xE900000000000074 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEE004449726F6C6FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB00D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xEF4449726F6C6F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7372694665646968 && a2 == 0xED00006B63695474 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465526465786966 && a2 == 0xEC000000656E696CLL)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_2378B94E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x437972616D697270 && a2 == 0xEE004449726F6C6FLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB00D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xEF4449726F6C6F43)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2378B967C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB00F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AB0110 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB0130)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_2378B97BC()
{
  unint64_t result;

  result = qword_25681FFA8;
  if (!qword_25681FFA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.TicksConfiguration.TickType, &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickType);
    atomic_store(result, (unint64_t *)&qword_25681FFA8);
  }
  return result;
}

uint64_t destroy for CompassGauge(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 56))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t initializeWithCopy for CompassGauge(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 64);
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v9;
    *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = v7[1];
    *(_OWORD *)(a1 + 56) = *v7;
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = v7[2];
  }
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CompassGauge(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 56);
  v6 = (_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 56) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2378B9ACC(a1 + 56);
      v8 = *(_OWORD *)(a2 + 72);
      v7 = *(_OWORD *)(a2 + 88);
      *v4 = *v6;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 56) = v5;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v6;
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *v4 = v9;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2378B9ACC(uint64_t a1)
{
  destroy for Instrument.Configuration();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for CompassGauge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v5 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
    goto LABEL_5;
  if (!v5)
  {
    sub_2378B9ACC(a1 + 56);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = v5;
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompassGauge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompassGauge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompassGauge()
{
  return &type metadata for CompassGauge;
}

uint64_t sub_2378B9CC8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2378B9CD8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  sub_2378BC338((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_2378B9D20()
{
  return sub_237A872FC();
}

void (*sub_2378B9D38(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237A86768();
  return sub_2378B9D94;
}

void sub_2378B9D94(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_2378B9DC4()
{
  sub_2378BC534();
  return sub_237A87338();
}

uint64_t sub_2378B9E14()
{
  sub_2378BC534();
  return sub_237A87308();
}

uint64_t sub_2378B9E64()
{
  sub_2378BC534();
  return sub_237A87320();
}

double sub_2378B9E9C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  double result;
  char v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  char v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  sub_237A868C4();
  v5 = fabs(v4);
  v7 = fabs(v6);
  if (v7 >= v5)
    v8 = v5;
  else
    v8 = v7;
  v9 = sub_237A874AC();
  v38 = v10;
  v39 = v9;
  sub_2378BA068(a1, (uint64_t)&v40, v8 / 10.0);
  v11 = v41;
  v37 = v42;
  v12 = v43;
  v13 = v44;
  v14 = v45;
  v15 = v46;
  v16 = v48;
  v35 = v49;
  v36 = v47;
  v17 = v50;
  v18 = v51;
  v19 = v52;
  v34 = v53;
  v20 = v40;
  v21 = sub_237A86F3C();
  sub_237A86798();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v54 = 0;
  sub_237A874AC();
  sub_237A8687C();
  v30 = v42;
  v31 = v54;
  v56 = v41;
  v55 = v43;
  v32 = v40;
  *(_QWORD *)a2 = v39;
  *(_QWORD *)(a2 + 8) = v38;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v37;
  *(_QWORD *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(_BYTE *)(a2 + 64) = v14;
  *(_BYTE *)(a2 + 65) = v15;
  *(_OWORD *)(a2 + 72) = v36;
  *(_QWORD *)(a2 + 88) = v16;
  *(_OWORD *)(a2 + 96) = v35;
  *(_QWORD *)(a2 + 112) = v17;
  *(_QWORD *)(a2 + 120) = v18;
  *(_BYTE *)(a2 + 128) = v19;
  *(_BYTE *)(a2 + 129) = v34;
  *(_BYTE *)(a2 + 136) = v21;
  *(_QWORD *)(a2 + 144) = v23;
  *(_QWORD *)(a2 + 152) = v25;
  *(_QWORD *)(a2 + 160) = v27;
  *(_QWORD *)(a2 + 168) = v29;
  *(_BYTE *)(a2 + 176) = v31;
  *(_QWORD *)(a2 + 184) = v32;
  *(_BYTE *)(a2 + 192) = v56;
  *(_QWORD *)(a2 + 200) = v30;
  *(_BYTE *)(a2 + 208) = v55;
  result = *(double *)&v44;
  *(_OWORD *)(a2 + 216) = v44;
  return result;
}

uint64_t sub_2378BA068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_retain();
  sub_237A867F8();
  v6 = sub_237A874AC();
  v8 = v7;
  v9 = sub_237A871F4();
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = a1;
  *(_WORD *)(a2 + 48) = 256;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 72) = v9;
  *(double *)(a2 + 80) = a3;
  *(_QWORD *)(a2 + 88) = 0;
  *(double *)(a2 + 96) = -a3;
  *(_QWORD *)(a2 + 104) = a1;
  *(_WORD *)(a2 + 112) = 256;
  return swift_retain();
}

uint64_t sub_2378BA140@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  double (**v1)@<D0>(uint64_t@<X8>);
  double (*v2)@<D0>(uint64_t@<X8>);

  v2 = *v1;
  *a1 = sub_2378BC1F0;
  a1[1] = v2;
  return swift_retain();
}

uint64_t sub_2378BA154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_237A86C6C();
  swift_retain();
  swift_retain();
  result = sub_237A8756C();
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = a1;
  *(_QWORD *)(a3 + 32) = a2;
  *(_QWORD *)(a3 + 40) = 0x400921FB54442D18;
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = v9;
  return result;
}

uint64_t sub_2378BA1C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2378BA154(*v1, v1[1], a1);
}

uint64_t sub_2378BA1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  double v5;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_degrees);
  sub_237A86408();

  sub_237A863FC();
  if (v5 >= 0.0 && v5 <= 22.5)
  {
LABEL_45:
    v15 = 78;
    goto LABEL_46;
  }
  if (v5 >= 22.5 && v5 <= 67.5)
  {
    v15 = 17742;
LABEL_46:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return v15;
  }
  if (v5 >= 67.5 && v5 <= 112.5)
  {
    v15 = 69;
    goto LABEL_46;
  }
  if (v5 >= 112.5 && v5 <= 157.5)
  {
    v15 = 17747;
    goto LABEL_46;
  }
  if (v5 >= 157.5 && v5 <= 202.5)
  {
    v15 = 83;
    goto LABEL_46;
  }
  if (v5 >= 202.5 && v5 <= 247.5)
  {
    v15 = 22355;
    goto LABEL_46;
  }
  if (v5 >= 247.5 && v5 <= 292.5)
  {
    v15 = 87;
    goto LABEL_46;
  }
  if (v5 >= 292.5 && v5 <= 337.5)
  {
    v15 = 22350;
    goto LABEL_46;
  }
  if (v5 >= 337.5 && v5 <= 360.0)
    goto LABEL_45;
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000021;
  v18 = 0x8000000237AB0160;
  sub_2378B70D4(&qword_256820040, &qword_25681FFD8, MEMORY[0x24BDCB5E0]);
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t sub_2378BA49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _OWORD *v23;
  __int128 v24;
  _OWORD v26[3];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFB0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFB8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = sub_237A874AC();
  v8[1] = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFC0);
  sub_2378BA65C(a2, a1, (uint64_t)v8 + *(int *)(v13 + 44));
  LOBYTE(a2) = sub_237A86F3C();
  sub_237A86798();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  sub_2378BBFE0((uint64_t)v8, (uint64_t)v11, &qword_25681FFB0);
  v22 = &v11[*(int *)(v9 + 36)];
  *v22 = a2;
  *((_QWORD *)v22 + 1) = v15;
  *((_QWORD *)v22 + 2) = v17;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v21;
  v22[40] = 0;
  sub_2378BC024((uint64_t)v8, &qword_25681FFB0);
  sub_237A868C4();
  sub_237A868C4();
  sub_237A874AC();
  sub_237A8687C();
  sub_2378BBFE0((uint64_t)v11, a3, &qword_25681FFB8);
  v23 = (_OWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681FFC8) + 36));
  v24 = v26[1];
  *v23 = v26[0];
  v23[1] = v24;
  v23[2] = v26[2];
  return sub_2378BC024((uint64_t)v11, &qword_25681FFB8);
}

uint64_t sub_2378BA65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v3;
  double v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, __int128 *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  id v37;
  char *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  char v76;
  char v77;
  char v78;
  _QWORD v79[2];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  char v89;
  _BYTE v90[7];
  _BYTE v91[7];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _QWORD v101[2];
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  __int128 v108;
  __int128 v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char v117;
  int v118;
  uint64_t v119;
  char v120;
  int v121;
  uint64_t v122;
  char *v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  __int128 v140;
  __int128 v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v67 = (char *)&v63 - v14;
  v15 = (__int128 *)sub_237A868DC();
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFE0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v63 - v24;
  v26 = *(_QWORD *)(a1 + 24);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v68 = v23;
    v69 = v22;
    v70 = v21;
    v71 = a3;
    v135 = 0;
    v136 = v26;
    swift_getKeyPath();
    v27 = *(void (**)(char *, uint64_t, __int128 *))(v16 + 16);
    v65 = a2;
    v27((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
    v28 = *(unsigned __int8 *)(v16 + 80);
    v74 = v25;
    v29 = (v28 + 136) & ~v28;
    v30 = swift_allocObject();
    v31 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v30 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v30 + 96) = v31;
    *(_OWORD *)(v30 + 112) = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(v30 + 128) = *(_QWORD *)(a1 + 112);
    v32 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v30 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v30 + 32) = v32;
    v33 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v30 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v30 + 64) = v33;
    (*(void (**)(uint64_t, char *, __int128 *))(v16 + 32))(v30 + v29, v18, v15);
    sub_2378BB658(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFF0);
    sub_2378BB858();
    sub_2378BB908();
    sub_237A87404();
    v134 = *(_OWORD *)(a1 + 104);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_237A866FC();
    swift_release();
    swift_release();
    sub_2378BBC40((uint64_t)&v134);
    if (v138)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256820038);
      v34 = v73;
      v35 = swift_dynamicCast();
      v36 = v72;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v10, v35 ^ 1u, 1, v34);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v10, 1, v34) != 1)
      {
        v15 = &v115;
        v37 = objc_msgSend((id)objc_opt_self(), sel_degrees);
        v38 = v66;
        sub_237A86408();

        v64 = *(void (**)(char *, uint64_t))(v36 + 8);
        v64(v10, v34);
        v18 = v67;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v67, v38, v34);
        sub_237A868C4();
        v40 = fabs(v39);
        v42 = fabs(v41);
        if (v42 >= v40)
          v3 = v40;
        else
          v3 = v42;
        sub_237A863FC();
        v4 = (360.0 - v43) * 0.0174532925;
        v10 = *(char **)(a1 + 48);
        v44 = qword_25681E058;
        swift_retain();
        if (v44 == -1)
          goto LABEL_8;
        goto LABEL_13;
      }
    }
    else
    {
      sub_2378BC024((uint64_t)&v135, &qword_256820020);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v10, 1, 1, v73);
    }
    sub_2378BC024((uint64_t)v10, &qword_25681FFD0);
    sub_2378BBC68(&v115);
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  swift_once();
LABEL_8:
  v45 = qword_256820BA8;
  swift_retain();
  sub_237A874AC();
  sub_237A8687C();
  v46 = v128;
  v47 = v129;
  v48 = v131;
  v72 = v132;
  v65 = v130;
  v66 = v133;
  v49 = sub_237A86C6C();
  sub_2378BAFFC((uint64_t)&v135, v3);
  v78 = 1;
  v77 = v137;
  v76 = v142;
  v75 = v145;
  v79[0] = v49;
  v79[1] = 0;
  LOBYTE(v80) = 1;
  *((_QWORD *)&v80 + 1) = v135;
  *(_QWORD *)&v81 = v136;
  BYTE8(v81) = v137;
  *(_QWORD *)&v82 = v138;
  BYTE8(v82) = v139;
  v83 = v140;
  v84 = v141;
  LOBYTE(v85) = v142;
  *((_QWORD *)&v85 + 1) = v143;
  *(_QWORD *)&v86 = v144;
  BYTE8(v86) = v145;
  v87 = v146;
  v89 = v47;
  v88 = v48;
  v94 = v81;
  v95 = v82;
  v92 = (unint64_t)v49;
  v93 = v80;
  v100 = v146;
  v98 = v85;
  v99 = v86;
  v96 = v140;
  v97 = v141;
  v101[0] = v49;
  v101[1] = 0;
  v102 = 1;
  v103 = v135;
  v104 = v136;
  v105 = v137;
  v106 = v138;
  v107 = v139;
  v108 = v140;
  v109 = v141;
  v110 = v142;
  v111 = v143;
  v112 = v144;
  v113 = v145;
  v114 = v146;
  swift_retain();
  swift_retain();
  sub_2378BBE44((uint64_t)v79);
  sub_2378BBEB4((uint64_t)v101);
  swift_release();
  swift_release();
  v124 = v4;
  v50 = v96;
  *(__int128 *)((char *)v15 + 168) = v97;
  v51 = v99;
  *(__int128 *)((char *)v15 + 184) = v98;
  *(__int128 *)((char *)v15 + 200) = v51;
  v52 = v92;
  *(__int128 *)((char *)v15 + 104) = v93;
  v53 = v95;
  *(__int128 *)((char *)v15 + 120) = v94;
  *(__int128 *)((char *)v15 + 136) = v53;
  *(__int128 *)((char *)v15 + 152) = v50;
  *(_QWORD *)&v115 = v10;
  *((_QWORD *)&v115 + 1) = v45;
  v116 = v46;
  v117 = v47;
  *(_DWORD *)((char *)v15 + 25) = *(_DWORD *)v91;
  v118 = *(_DWORD *)&v91[3];
  v119 = v65;
  v120 = v48;
  *(_DWORD *)((char *)v15 + 41) = *(_DWORD *)v90;
  v121 = *(_DWORD *)&v90[3];
  v122 = v72;
  v123 = v66;
  v126 = 0;
  v125 = 0;
  v127 = v100;
  *(__int128 *)((char *)v15 + 88) = v52;
  nullsub_1(&v115);
  v64(v18, v73);
LABEL_11:
  sub_237870370((uint64_t)&v115, (uint64_t)&v135, &qword_256820028);
  v55 = v68;
  v54 = v69;
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 16);
  v57 = v74;
  v58 = v70;
  v56((uint64_t)v69, v74, v70);
  sub_237870370((uint64_t)&v135, (uint64_t)&v92, &qword_256820028);
  v59 = v71;
  v56(v71, v54, v58);
  v60 = v59 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820030) + 48);
  sub_237870370((uint64_t)&v92, (uint64_t)v101, &qword_256820028);
  sub_237870370((uint64_t)v101, v60, &qword_256820028);
  sub_2378BBD30(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2378BBC8C);
  v61 = *(void (**)(char *, uint64_t))(v55 + 8);
  v61(v57, v58);
  sub_237870370((uint64_t)&v92, (uint64_t)&v115, &qword_256820028);
  sub_2378BBD30(&v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2378BBDA4);
  return ((uint64_t (*)(char *, uint64_t))v61)(v54, v58);
}

uint64_t sub_2378BAE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  int v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820018);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[5];
  v25 = v2[4];
  v26 = v9;
  v27 = v2[6];
  v28 = *((_QWORD *)v2 + 14);
  v10 = v2[1];
  v21 = *v2;
  v22 = v10;
  v11 = v2[3];
  v23 = v2[2];
  v24 = v11;
  v12 = *(double *)&v21;
  if (*((uint64_t *)&v21 + 1) < 1)
    goto LABEL_7;
  if (__OFADD__((_QWORD)v22, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((_QWORD)v22 == -1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 != 0x8000000000000000 || (_QWORD)v22 != -2)
  {
    if (!(a1 % ((uint64_t)v22 + 1)))
    {
      sub_237A868C4();
      v13 = 1;
      goto LABEL_9;
    }
LABEL_7:
    sub_237A868C4();
    v13 = 0;
LABEL_9:
    v14 = v12 * (double)a1;
    *(_QWORD *)v8 = sub_237A86BAC();
    *((_QWORD *)v8 + 1) = 0;
    v8[16] = 1;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820050);
    sub_2378BB98C(v13, (uint64_t)&v21, (uint64_t)&v8[*(int *)(v15 + 44)], 2.0);
    sub_237A8756C();
    v17 = v16;
    v19 = v18;
    sub_2378BBFE0((uint64_t)v8, a2, &qword_256820018);
    v20 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25681FFF0) + 36);
    *(double *)v20 = v14;
    *(_QWORD *)(v20 + 8) = v17;
    *(_QWORD *)(v20 + 16) = v19;
    return sub_2378BC024((uint64_t)v8, &qword_256820018);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2378BAFFC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  double v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v4);
  sub_2378BB478();
  v5 = a2 / 5.0;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_monospacedDigitSystemFontOfSize_weight_, v5, *MEMORY[0x24BEBB610]);
  v8 = *MEMORY[0x24BEBB578];
  v9 = objc_msgSend(v7, sel_fontDescriptor);
  v10 = objc_msgSend(v9, sel_fontDescriptorWithDesign_, v8);

  if (v10)
  {
    objc_msgSend(v7, sel_pointSize);
    objc_msgSend(v6, sel_fontWithDescriptor_size_, v10);

  }
  sub_237A86FCC();
  sub_237A86C24();
  sub_237A86C18();
  sub_237A86C0C();
  swift_bridgeObjectRelease();
  sub_237A86C18();
  sub_237A86C48();
  v11 = sub_237A87050();
  v13 = v12;
  v15 = v14 & 1;
  swift_retain();
  v16 = sub_237A87044();
  v18 = v17;
  v20 = v19;
  swift_release();
  sub_2378BBE34(v11, v13, v15);
  swift_bridgeObjectRelease();
  v46 = sub_237A8702C();
  v45 = v21;
  v43 = v22;
  v47 = v23;
  sub_2378BBE34(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  v44 = sub_237A86F3C();
  sub_2378BA1CC();
  sub_237879800();
  v24 = sub_237A8705C();
  v26 = v25;
  v28 = v27 & 1;
  swift_retain();
  v29 = sub_237A87044();
  v31 = v30;
  v33 = v32;
  swift_release();
  sub_2378BBE34(v24, v26, v28);
  swift_bridgeObjectRelease();
  if (qword_25681E058 != -1)
    swift_once();
  v34 = v33 & 1;
  v35 = sub_237A8702C();
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  sub_2378BBE34(v29, v31, v34);
  swift_bridgeObjectRelease();
  sub_2378BBD20(v46, v45, v43 & 1);
  swift_bridgeObjectRetain();
  sub_2378BBD20(v35, v37, v41);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)a1 = v46;
  *(_QWORD *)(a1 + 8) = v45;
  *(_BYTE *)(a1 + 16) = v43 & 1;
  *(_QWORD *)(a1 + 24) = v47;
  *(_BYTE *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = 0;
  *(double *)(a1 + 48) = v5 / 2.5;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v35;
  *(_QWORD *)(a1 + 88) = v37;
  *(_BYTE *)(a1 + 96) = v41;
  *(_QWORD *)(a1 + 104) = v39;
  sub_2378BBE34(v35, v37, v41);
  swift_bridgeObjectRelease();
  sub_2378BBE34(v46, v45, v43 & 1);
  return swift_bridgeObjectRelease();
}

id sub_2378BB478()
{
  id v0;
  id result;
  void *v2;
  void *v3;
  uint64_t v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
  objc_msgSend(v0, sel_setUnitStyle_, 1);
  result = objc_msgSend(v0, sel_numberFormatter);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_setMaximumFractionDigits_, 0);

    result = objc_msgSend(v0, sel_numberFormatter);
    if (result)
    {
      v3 = result;
      objc_msgSend(result, sel_setRoundingMode_, 4);

      sub_2378BBF24();
      v4 = sub_237A87D94();

      return (id)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2378BB55C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[7];
  uint64_t v12;

  v3 = *(_OWORD *)(v1 + 80);
  v11[4] = *(_OWORD *)(v1 + 64);
  v11[5] = v3;
  v11[6] = *(_OWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 112);
  v4 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v4;
  v5 = *(_OWORD *)(v1 + 48);
  v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v5;
  v6 = swift_allocObject();
  v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v6 + 96) = v7;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(v1 + 96);
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v6 + 32) = v8;
  v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v6 + 64) = v9;
  *a1 = sub_2378BB650;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  return sub_2378BB658((uint64_t)v11);
}

uint64_t sub_2378BB5F8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 72))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2378BB650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2378BA49C(a1, v2 + 16, a2);
}

uint64_t sub_2378BB658(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2378BB6E8(v2);
  swift_retain();
  return a1;
}

uint64_t sub_2378BB6E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378BB724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_237A868DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 72))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 136) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_2378BB7D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_237A868DC();
  return sub_2378BAE18(*a1, a2);
}

unint64_t sub_2378BB858()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25681FFF8;
  if (!qword_25681FFF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681FFE8);
    v2 = sub_2378BB8C4();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE1BD0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25681FFF8);
  }
  return result;
}

unint64_t sub_2378BB8C4()
{
  unint64_t result;

  result = qword_256820000;
  if (!qword_256820000)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256820000);
  }
  return result;
}

unint64_t sub_2378BB908()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820008;
  if (!qword_256820008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681FFF0);
    v2[0] = sub_2378B70D4(&qword_256820010, &qword_256820018, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDED5D8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820008);
  }
  return result;
}

uint64_t sub_2378BB98C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v32 = a2;
  v31 = a1;
  v6 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (double *)&v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820058);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820060);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v30[-v17];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v30[-v19];
  v21 = (char *)v8 + *(int *)(v6 + 20);
  v22 = *MEMORY[0x24BDEEB68];
  v23 = sub_237A86C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  *v8 = a4 * 0.5;
  v8[1] = a4 * 0.5;
  v24 = 40;
  if ((v31 & 1) != 0)
    v24 = 32;
  v25 = *(_QWORD *)(v32 + v24);
  swift_retain();
  sub_2378BBF60((uint64_t)v8, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v9 + 52)] = v25;
  *(_WORD *)&v11[*(int *)(v9 + 56)] = 256;
  sub_2378BBFA4((uint64_t)v8);
  sub_237A874AC();
  sub_237A8687C();
  sub_2378BBFE0((uint64_t)v11, (uint64_t)v18, &qword_256820058);
  v26 = &v18[*(int *)(v12 + 36)];
  v27 = v34;
  *v26 = v33;
  v26[1] = v27;
  v26[2] = v35;
  sub_2378BC024((uint64_t)v11, &qword_256820058);
  sub_237870370((uint64_t)v18, (uint64_t)v20, &qword_256820060);
  sub_2378BBFE0((uint64_t)v20, (uint64_t)v15, &qword_256820060);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820068);
  sub_2378BBFE0((uint64_t)v15, a3 + *(int *)(v28 + 48), &qword_256820060);
  sub_2378BC024((uint64_t)v20, &qword_256820060);
  return sub_2378BC024((uint64_t)v15, &qword_256820060);
}

uint64_t sub_2378BBC40(uint64_t a1)
{
  swift_release();
  return a1;
}

double sub_2378BBC68(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_2378BBC8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    sub_2378BBD20(a15, a16, a17 & 1);
    swift_bridgeObjectRetain();
    sub_2378BBD20(a25, a26, a27 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378BBD20(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

_QWORD *sub_2378BBD30(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27]);
  return a1;
}

uint64_t sub_2378BBDA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (result)
  {
    swift_release();
    swift_release();
    sub_2378BBE34(a15, a16, a17 & 1);
    swift_bridgeObjectRelease();
    sub_2378BBE34(a25, a26, a27 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2378BBE34(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_2378BBE44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  sub_2378BBD20(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_2378BBD20(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2378BBEB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  sub_2378BBE34(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_2378BBE34(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2378BBF24()
{
  unint64_t result;

  result = qword_256820048;
  if (!qword_256820048)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256820048);
  }
  return result;
}

uint64_t sub_2378BBF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_237A869F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378BBFA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A869F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2378BBFE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2378BC024(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for CompassNeedle()
{
  swift_release();
  return swift_release();
}

_QWORD *_s14CarPlayAssetUI13CompassNeedleVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CompassNeedle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CompassNeedle(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CompassNeedle()
{
  return &type metadata for CompassNeedle;
}

uint64_t sub_2378BC168()
{
  return sub_2378B70D4(&qword_256820070, &qword_256820078, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_2378BC194()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CompassNeedlePoint()
{
  return &type metadata for CompassNeedlePoint;
}

uint64_t sub_2378BC1B4()
{
  return sub_2378B70D4(&qword_256820080, &qword_256820088, MEMORY[0x24BDF4700]);
}

uint64_t sub_2378BC1E0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2378BC1F0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378B9E9C(v1, a1);
}

ValueMetadata *type metadata accessor for EquilateralTriangle()
{
  return &type metadata for EquilateralTriangle;
}

uint64_t sub_2378BC208()
{
  return sub_2378B70D4(&qword_256820090, &qword_256820098, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_2378BC234()
{
  return sub_2378B70D4(&qword_2568200A0, &qword_2568200A8, MEMORY[0x24BDEB358]);
}

unint64_t sub_2378BC264()
{
  unint64_t result;

  result = qword_2568200B0;
  if (!qword_2568200B0)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_2568200B0);
  }
  return result;
}

unint64_t sub_2378BC2AC()
{
  unint64_t result;

  result = qword_2568200B8;
  if (!qword_2568200B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90954, &type metadata for EquilateralTriangle);
    atomic_store(result, (unint64_t *)&qword_2568200B8);
  }
  return result;
}

unint64_t sub_2378BC2F4()
{
  unint64_t result;

  result = qword_2568200C0;
  if (!qword_2568200C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90904, &type metadata for EquilateralTriangle);
    atomic_store(result, (unint64_t *)&qword_2568200C0);
  }
  return result;
}

double sub_2378BC338@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double Width;
  double Height;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat x;
  CGFloat y;
  CGFloat v17;
  CGFloat v18;
  double result;
  __int128 v20;
  __int128 v21;
  char v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  sub_237A87020();
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  Width = CGRectGetWidth(v23);
  v24.origin.x = a2;
  v24.origin.y = a3;
  v24.size.width = a4;
  v24.size.height = a5;
  Height = CGRectGetHeight(v24);
  if (Height < Width)
    Width = Height;
  v12 = Width * -1.73205081 * 0.5;
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  v13 = (CGRectGetWidth(v25) - Width) * 0.5;
  v26.origin.x = a2;
  v26.origin.y = a3;
  v26.size.width = a4;
  v26.size.height = a5;
  v14 = (CGRectGetHeight(v26) + v12) * 0.5;
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  v28 = CGRectInset(v27, v13, v14);
  x = v28.origin.x;
  y = v28.origin.y;
  v17 = v28.size.width;
  v18 = v28.size.height;
  CGRectGetMinX(v28);
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = v17;
  v29.size.height = v18;
  CGRectGetMaxY(v29);
  sub_237A86FF0();
  v30.origin.x = x;
  v30.origin.y = y;
  v30.size.width = v17;
  v30.size.height = v18;
  CGRectGetMidX(v30);
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = v17;
  v31.size.height = v18;
  CGRectGetMinY(v31);
  sub_237A87008();
  v32.origin.x = x;
  v32.origin.y = y;
  v32.size.width = v17;
  v32.size.height = v18;
  CGRectGetMaxX(v32);
  v33.origin.x = x;
  v33.origin.y = y;
  v33.size.width = v17;
  v33.size.height = v18;
  CGRectGetMaxY(v33);
  sub_237A87008();
  v34.origin.x = x;
  v34.origin.y = y;
  v34.size.width = v17;
  v34.size.height = v18;
  CGRectGetMinX(v34);
  v35.origin.x = x;
  v35.origin.y = y;
  v35.size.width = v17;
  v35.size.height = v18;
  CGRectGetMaxY(v35);
  sub_237A87008();
  sub_237A86FE4();
  result = *(double *)&v20;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 32) = v22;
  return result;
}

unint64_t sub_2378BC534()
{
  unint64_t result;

  result = qword_2568200C8;
  if (!qword_2568200C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A909A4, &type metadata for EquilateralTriangle);
    atomic_store(result, (unint64_t *)&qword_2568200C8);
  }
  return result;
}

uint64_t sub_2378BC57C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[6];
  uint64_t v13;

  sub_237A8789C();
  v4 = sub_237A87BF0();
  v13 = v4;
  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = 0;
  v12[5] = v5;
  v6 = sub_237A878FC();
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    do
    {
      sub_2378FE39C(v12, v8, v9);
      swift_bridgeObjectRelease();
      v8 = sub_237A878FC();
      v9 = v10;
    }
    while (v10);
    v4 = v13;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2378BC638(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_237A87BF0();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2378FE1F0(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2378BC7CC(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  sub_2378BFFD4();
  result = sub_237A87BF0();
  v3 = 0;
  v5 = a1 + 64;
  v4 = *(_QWORD *)(a1 + 64);
  v21 = result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v17 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v9)
      goto LABEL_23;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v3;
    if (!v18)
    {
      v3 = v17 + 1;
      if (v17 + 1 >= v9)
        goto LABEL_23;
      v18 = *(_QWORD *)(v5 + 8 * v3);
      if (!v18)
      {
        v3 = v17 + 2;
        if (v17 + 2 >= v9)
          goto LABEL_23;
        v18 = *(_QWORD *)(v5 + 8 * v3);
        if (!v18)
        {
          v3 = v17 + 3;
          if (v17 + 3 >= v9)
            goto LABEL_23;
          v18 = *(_QWORD *)(v5 + 8 * v3);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(a1 + 56) + 88 * v11;
    v13 = *(_OWORD *)(v12 + 16);
    v22[0] = *(_OWORD *)v12;
    v22[1] = v13;
    v15 = *(_OWORD *)(v12 + 48);
    v14 = *(_OWORD *)(v12 + 64);
    v16 = *(_OWORD *)(v12 + 32);
    v23 = *(_QWORD *)(v12 + 80);
    v22[3] = v15;
    v22[4] = v14;
    v22[2] = v16;
    sub_2378C0018((uint64_t)v22);
    sub_2378FEE40((uint64_t)&v20, (uint64_t)v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v3 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v18 = *(_QWORD *)(v5 + 8 * v3);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Pair.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for Pair(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t type metadata accessor for Pair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Pair);
}

uint64_t sub_2378BCA30(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_237A87C44();
  if (!v20)
    return sub_237A87AD0();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  v34 = sub_237A88058();
  sub_237A88010();
  v37 = v8;
  result = sub_237A87C38();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_237A87CC8();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_237A88040();
      result = sub_237A87C5C();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ClosedRange<>.length.getter()
{
  return sub_237A880B8();
}

uint64_t static Pair<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v6 = type metadata accessor for Pair(0, a3, a4, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  v13 = sub_237A877DC();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a1, v6);
  v14(v10, a2, v6);
  if ((v13 & 1) != 0)
    v15 = sub_237A877DC();
  else
    v15 = 0;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  v16(v12, v6);
  return v15 & 1;
}

uint64_t Sequence.sorted<A>(by:)()
{
  return sub_237A879C8();
}

uint64_t Pair.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Pair.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t Pair.subscript.getter()
{
  return swift_getAtKeyPath();
}

{
  return swift_getAtKeyPath();
}

uint64_t sub_2378BCF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Pair<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t static Pair<>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t);
  char v23;
  uint64_t v24;
  char v25;
  char *v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;

  v28[0] = a4;
  v28[1] = a6;
  v9 = type metadata accessor for Pair(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v29 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v28 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v28 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v28 - v19;
  v30 = a5;
  LOBYTE(a5) = sub_237A8777C();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v21(v20, a1, v9);
  v21(v18, a2, v9);
  if ((a5 & 1) != 0)
  {
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v23 = 1;
    v22(v18, v9);
  }
  else
  {
    v24 = v10;
    v25 = sub_237A877DC();
    v21(v15, (uint64_t)v20, v9);
    v26 = v29;
    v21(v29, (uint64_t)v18, v9);
    if ((v25 & 1) != 0)
      v23 = sub_237A8777C();
    else
      v23 = 0;
    v22 = *(void (**)(char *, uint64_t))(v24 + 8);
    v22(v26, v9);
    v22(v15, v9);
    v22(v18, v9);
  }
  v22(v20, v9);
  return v23 & 1;
}

uint64_t sub_2378BD118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Pair<>.< infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
}

uint64_t Pair<>.hash(into:)()
{
  sub_237A876D4();
  return sub_237A876D4();
}

uint64_t Pair<>.hashValue.getter()
{
  sub_237A885D4();
  sub_237A876D4();
  sub_237A876D4();
  return sub_237A88610();
}

uint64_t sub_2378BD1F0()
{
  return Pair<>.hashValue.getter();
}

uint64_t sub_2378BD1FC()
{
  return Pair<>.hash(into:)();
}

uint64_t sub_2378BD208()
{
  sub_237A885D4();
  Pair<>.hash(into:)();
  return sub_237A88610();
}

uint64_t Pair<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  _QWORD *v40;

  v32 = a5;
  v33 = a4;
  v36 = a3;
  v31 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v12;
  v15 = type metadata accessor for Pair(0, v12, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - v17;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  v19 = (uint64_t)v40;
  sub_237A88670();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v28 = v16;
  v29 = v15;
  v40 = a1;
  v20 = v34;
  v30 = v18;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  v21 = v35;
  v22 = v37;
  sub_237A882EC();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v30, v21, v22);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_237A882EC();
  v23 = v29;
  v24 = v30;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v30[*(int *)(v29 + 36)], v20, a2);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v38);
  v25 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v32, v24, v23);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v40);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v23);
}

uint64_t Pair<>.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886A0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_237A88304();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_237A88304();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_2378BD5A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Pair<>.init(from:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 24), a4);
}

uint64_t sub_2378BD5C4(_QWORD *a1)
{
  return Pair<>.encode(to:)(a1);
}

uint64_t ClosedRange<>.doubleValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  char v6;
  double v7;
  char v8;

  v3 = *(uint64_t (**)(uint64_t))(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(double *)&result = COERCE_DOUBLE(v3(v4));
  if ((v6 & 1) != 0)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  v7 = *(double *)&result;
  *(double *)&result = COERCE_DOUBLE(((uint64_t (*)(uint64_t, uint64_t))v3)(v4, a2));
  if ((v8 & 1) == 0)
  {
    if (v7 <= *(double *)&result)
      return result;
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  __break(1u);
  return result;
}

uint64_t Array<A>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[13];
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v14 = a2;
  v12[8] = a3;
  v12[9] = a4;
  v12[10] = a1;
  v9 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v9);
  sub_237A87C68();
  v12[12] = v15;
  v13 = v16;
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568200D0);
  return sub_2378BDAD8((void (*)(char *, char *))sub_2378BEAAC, (uint64_t)v12, MEMORY[0x24BEE4078], a3, v10, a5);
}

uint64_t sub_2378BD740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = *(_QWORD *)(a4 + a3 - 8);
  v7 = sub_237A87E0C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v17 - v12, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = sub_237A87B30();
  return Array<A>.subscript.setter(v10, (uint64_t)v13, v15, v6);
}

uint64_t Array<A>.subscript.setter(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  char isClassOrObjCExistentialType;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;

  v35 = a1;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = sub_237A87E0C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v31 = (char *)&v30 - v18;
  v32 = v4;
  v39 = *v4;
  v36 = v8;
  v37 = a4;
  v33 = a4;
  v34 = a2;
  v38 = a2;
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], a3);
  sub_237A87C68();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
  }
  else
  {
    v19 = v40;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v35, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1)
    {
      v20 = *(void (**)(char *, uint64_t))(v10 + 8);
      v20(v13, v9);
      sub_237A87B24();
      v20(v35, v9);
      v21 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22 = v17;
    }
    else
    {
      v23 = v31;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v31, v13, v8);
      v24 = v32;
      sub_237A87AC4();
      v25 = *v24;
      sub_2378BF29C(v19, *v24);
      isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
      v27 = v25 & 0xFFFFFFFFFFFFFF8;
      if ((isClassOrObjCExistentialType & 1) == 0)
        v27 = v25;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 24))(v27+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v19, v23, v8);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      v21 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22 = v23;
    }
    v21(v22, v8);
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v34, AssociatedTypeWitness);
}

uint64_t sub_2378BDAD8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);
  uint64_t v29;

  v26 = a5;
  v27 = a2;
  v28 = a1;
  v29 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v29, 1, 1, a4);
  v25 = a3;
  v24 = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24, v12, v25);
  return result;
}

void (*Array<A>.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  void *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  size_t v17;

  v9 = malloc(0x58uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *v9 = a3;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = sub_237A87E0C();
  v9[3] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v9[4] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v9[5] = malloc(v13);
  v14 = malloc(v13);
  v9[6] = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[7] = AssociatedTypeWitness;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[8] = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v9[9] = malloc(v17);
  v9[10] = malloc(v17);
  (*(void (**)(void))(v16 + 16))();
  Array<A>.subscript.getter(a2, *v4, v10, a4, (uint64_t)v14);
  return sub_2378BDD8C;
}

void sub_2378BDD8C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = (void *)(*a1)[9];
  v4 = (void *)(*a1)[10];
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v7 = (char *)v2[5];
    v6 = (char *)v2[6];
    v8 = v2[3];
    v9 = v2[4];
    v10 = v2[1];
    v12 = v2[7];
    v11 = *v2;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v12);
    Array<A>.subscript.setter(v7, (uint64_t)v3, v11, v10);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (char *)v2[5];
    v6 = (char *)v2[6];
    Array<A>.subscript.setter(v6, (uint64_t)v4, *v2, v2[1]);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

void Array<A>.move(id:offsetBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  Swift::Int v9;
  char v10;

  v6 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], a3);
  sub_237A87C68();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    v7 = *v3;
    swift_bridgeObjectRetain();
    if (a2 >= 1 && __OFSUB__(MEMORY[0x23B81E754](v7, v6), 1))
      __break(1u);
    v8 = sub_237A87CA4();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      Array.move(at:to:)(v9, v9);
  }
}

uint64_t sub_2378BDFA4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v6 - v2;
  sub_237A87F68();
  swift_getAssociatedConformanceWitness();
  v4 = sub_237A877DC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

Swift::Void __swiftcall Array.move(at:to:)(Swift::Int at, Swift::Int to)
{
  MEMORY[0x24BDAC7A8](at);
  sub_237A87B24();
  sub_237A87B18();
}

uint64_t Optional<A>.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    v12 = 0;
    v13 = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v12 = 0x6C616E6F6974704FLL;
    v13 = 0xE90000000000003CLL;
    sub_237A88730();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    return v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    v10 = sub_237A882E0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v10;
}

uint64_t sub_2378BE28C(uint64_t a1)
{
  return Optional<A>.description.getter(a1);
}

uint64_t Mirror.values<A>(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  _OWORD v24[2];
  uint64_t v25;

  v4 = sub_237A88658();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568200D8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  v25 = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  sub_237A88640();
  v14 = sub_237A88634();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_6;
  sub_2378BF328((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v11, v14) != *MEMORY[0x24BEE4380])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
LABEL_6:
    v18 = sub_237A8864C();
    MEMORY[0x24BDAC7A8](v18);
    *((_QWORD *)&v20 - 4) = a2;
    *((_QWORD *)&v20 - 3) = a1;
    *((_QWORD *)&v20 - 2) = &v25;
    sub_237A88064();
    swift_release();
    goto LABEL_7;
  }
  sub_237A8864C();
  sub_2378BE530(&v20);
  swift_release();
  if (v22)
  {
    v23 = v20;
    sub_2378BF370(&v21, v24);
    sub_2378BF380((uint64_t)v24, (uint64_t)&v21);
    sub_237A8861C();
    v16 = Mirror.values<A>(of:)(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)&v20 = v16;
    v17 = sub_237A87B30();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v17);
    sub_237A87B00();
    sub_2378BC024((uint64_t)&v23, qword_2568200E8);
  }
  else
  {
    sub_2378BC024((uint64_t)&v20, &qword_2568200E0);
  }
LABEL_7:
  sub_2378BC024((uint64_t)v13, &qword_2568200D8);
  return v25;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v9[5] = Mirror.values<A>(of:)(a1, a2);
  v9[2] = a2;
  v3 = sub_237A87B30();
  v4 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v3);
  v6 = sub_2378BCA30((void (*)(char *, char *))sub_2378BF3BC, (uint64_t)v9, v3, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  swift_bridgeObjectRelease();
  v7 = sub_2378BF3D8(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2378BE530@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v2 = sub_237A87F74();
  swift_getObjectType();
  result = sub_237A87F74();
  if (v2 == result)
  {
    v4 = sub_237A87F80();
    swift_unknownObjectRelease();
    if ((v4 & 1) != 0)
    {
      result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_237A88094();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2378BE638(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_237A87968();
  else
    return 0;
}

uint64_t sub_2378BE678(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];

  v17[1] = a3;
  MEMORY[0x24BDAC7A8](a1);
  v17[0] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A88658();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v20);
  sub_237A8861C();
  v12 = sub_237A88628();
  v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  if (v12 == a2)
  {
    v19 = *a1;
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v20);
    sub_2378BF370(v20, &v18);
    swift_dynamicCast();
    sub_237A87B30();
    return sub_237A87B0C();
  }
  else
  {
    sub_2378BF380((uint64_t)(a1 + 1), (uint64_t)v20);
    sub_237A8861C();
    v14 = Mirror.values<A>(of:)(a2, a4);
    v13(v11, v8);
    *(_QWORD *)&v19 = v14;
    v15 = sub_237A87B30();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v15);
    return sub_237A87B00();
  }
}

uint64_t sub_2378BE908@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_237A87854();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2378BE98C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v3 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a3 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  v10 = sub_237A8777C();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  return v10 & 1;
}

uint64_t sub_2378BEA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2378BE98C(a1, a2, *(_QWORD **)(v2 + 40)) & 1;
}

uint64_t sub_2378BEAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_237A87B48();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[10];
  uint64_t v16;
  uint64_t v17;

  v17 = a3;
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a8;
  v15[7] = a1;
  v15[8] = a2;
  v9 = sub_237A87698();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
  v12 = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E8], v9);
  result = sub_2378BCA30((void (*)(char *, char *))sub_2378BF46C, (uint64_t)v15, v9, TupleTypeMetadata2, v11, v12, MEMORY[0x24BEE3F20], (uint64_t)&v16);
  if (!v8)
  {
    v17 = result;
    v14 = sub_237A87B30();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v14);
    return sub_237A87680();
  }
  return result;
}

uint64_t Dictionary.mapKeys<A>(_:uniquingKeysWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  v18 = a6;
  v19 = a7;
  v20 = a8;
  v21 = a9;
  v22 = a10;
  v23 = a1;
  v24 = a2;
  v11 = sub_237A87698();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
  v14 = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E8], v11);
  result = sub_2378BCA30((void (*)(char *, char *))sub_2378BF46C, (uint64_t)v17, v11, TupleTypeMetadata2, v13, v14, MEMORY[0x24BEE3F20], (uint64_t)&v25);
  if (!v10)
  {
    v26 = result;
    v16 = sub_237A87B30();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v16);
    return sub_237A876A4();
  }
  return result;
}

uint64_t sub_2378BED90@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, _QWORD *a7)
{
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v23[1] = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = (char *)v23 - v14;
  result = a2(a1);
  if (v7)
  {
    *a7 = v7;
  }
  else
  {
    v17 = a6 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v18 = *(int *)(TupleTypeMetadata2 + 48);
    v19 = &v15[v18];
    v20 = a1 + v18;
    v21 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v15, a1, a3);
    v22 = *(_QWORD *)(a4 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v20, a4);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v17, v19, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, a3);
  }
  return result;
}

uint64_t Sequence.merge<A, B>()()
{
  uint64_t v1;

  sub_237A87620();
  sub_237A87698();
  sub_237A879B0();
  return v1;
}

uint64_t sub_2378BEF84()
{
  sub_237A87698();
  swift_bridgeObjectRetain();
  return sub_237A8768C();
}

uint64_t Sequence<>.flatten()()
{
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_237A87AD0();
  sub_237A87B30();
  sub_237A879BC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2378BF0D0()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_237A87B30();
  swift_checkMetadataState();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E8], v0);
  return sub_237A87CE0();
}

uint64_t Sequence<>.set.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  swift_getAssociatedTypeWitness();
  return sub_237A87C14();
}

BOOL Optional.isNil.getter(uint64_t a1)
{
  uint64_t v1;

  return (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 48))(v1, 1) == 1;
}

uint64_t sub_2378BF29C(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_2378BF2EC()
{
  return sub_2378BDFA4() & 1;
}

uint64_t sub_2378BF30C(__int128 *a1)
{
  uint64_t *v1;

  return sub_2378BE678(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_2378BF328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568200D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_2378BF370(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2378BF380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2378BF3BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2378BE908(a1, a2);
}

uint64_t sub_2378BF3D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_237A87BF0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2378FE1F0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2378BF46C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2378BF480(a1, a2, a3);
}

uint64_t sub_2378BF480@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_2378BED90(a1, *(uint64_t (**)(uint64_t))(v3 + 56), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a3, a2);
}

uint64_t sub_2378BF4B4()
{
  return sub_2378BEF84();
}

uint64_t sub_2378BF4D4()
{
  return sub_2378BF0D0();
}

uint64_t sub_2378BF4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[2];

  v3 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  v5[0] = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  v5[1] = v3;
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <> Pair<A, B>, a1, v5);
}

uint64_t sub_2378BF530@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Array<A>.subscript.getter(a2, *a1, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), a4);
}

uint64_t sub_2378BF54C()
{
  return 16;
}

__n128 sub_2378BF558(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2378BF564()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2378BF56C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2378BF5F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_2378BF6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_2378BF720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2378BF78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2378BF7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2378BF864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2378BF8D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2378BF9AC + 4 * byte_237A909F8[v17 - 1]))();
}

void sub_2378BFA28(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t dispatch thunk of AnyOptional.isNil.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2378BFC30(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[2];
  char v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_2378C0118();
  result = sub_237A87BF0();
  v10 = result;
  if (v2)
  {
    v4 = (char *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 24;
      sub_23787A11C(v5, v6, v7);
      sub_2378FE528((uint64_t)v8, v5, v6, v7);
      sub_23787A134(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_2378BFCD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[3];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_2378C0080();
  result = sub_237A87BF0();
  v7 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v5;
      v8[2] = *(_OWORD *)(v4 + 32);
      v9 = *(_QWORD *)(v4 + 48);
      sub_2378C00C4((uint64_t)v8);
      sub_2378FE7B0((uint64_t)&v6, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 56;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2378BFD98(unint64_t a1)
{
  return sub_2378BFDE0(a1, (unint64_t *)&unk_2568292E0, 0x24BE16A88, &qword_256820178, (void (*)(id *, uint64_t))sub_2378FEB5C);
}

uint64_t sub_2378BFDBC(unint64_t a1)
{
  return sub_2378BFDE0(a1, (unint64_t *)&unk_2568292F0, 0x24BE16A90, &qword_256820170, (void (*)(id *, uint64_t))sub_2378FEB40);
}

uint64_t sub_2378BFDE0(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_237A880C4();
    swift_bridgeObjectRelease();
  }
  sub_2378BFF5C(0, a2);
  sub_2378BFF94(a4, a2);
  result = sub_237A87BF0();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_237A880C4();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x23B81EBEC](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_2378BFF5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2378BFF94(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_2378BFF5C(255, a2);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378BFFD4()
{
  unint64_t result;

  result = qword_256820180;
  if (!qword_256820180)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AvocadoWidget, &type metadata for AvocadoWidget);
    atomic_store(result, (unint64_t *)&qword_256820180);
  }
  return result;
}

uint64_t sub_2378C0018(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_2378C0080()
{
  unint64_t result;

  result = qword_256820188;
  if (!qword_256820188)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.LayoutStyle, &type metadata for Theme.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_256820188);
  }
  return result;
}

uint64_t sub_2378C00C4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_2378C0118()
{
  unint64_t result;

  result = qword_256820190;
  if (!qword_256820190)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorID, &type metadata for Theme.ColorID);
    atomic_store(result, (unint64_t *)&qword_256820190);
  }
  return result;
}

uint64_t sub_2378C015C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 32) - 8) + 16))(a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B81F9FC](a1, v6, a5);
}

uint64_t sub_2378C01BC()
{
  return sub_2378BF2EC() & 1;
}

uint64_t EditableTheme.optimize(for:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v65;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69[2];
  uint64_t v70;
  _OWORD v71[3];
  uint64_t v72;

  v3 = *v2;
  v70 = MEMORY[0x24BEE4B00];
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v4 = sub_2378CD378(v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71[0] = v4;
  v5 = 0;
  sub_2378CEEB0((uint64_t *)v71);
  swift_bridgeObjectRelease();
  swift_release_n();
  v6 = *(_QWORD *)&v71[0];
  v7 = *(_QWORD *)(*(_QWORD *)&v71[0] + 16);
  v65 = v3;
  if (v7)
  {
    swift_retain();
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    v9 = 32;
    while (1)
    {
      v11 = *(_OWORD *)(v6 + v9 + 16);
      v10 = *(_OWORD *)(v6 + v9 + 32);
      v12 = *(_OWORD *)(v6 + v9);
      v72 = *(_QWORD *)(v6 + v9 + 48);
      v71[1] = v11;
      v71[2] = v10;
      v71[0] = v12;
      v13 = v11;
      sub_2378C00C4((uint64_t)v71);
      sub_2378C00C4((uint64_t)v71);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_2378CF610(MEMORY[0x24BEE4B00], v13, a1, v71, &v70);
      sub_2378CF92C((uint64_t)v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v14 + 16))
        break;
      swift_bridgeObjectRelease();
      sub_2378CF92C((uint64_t)v71);
LABEL_4:
      v9 += 56;
      if (!--v7)
      {
        v68 = v8;
        swift_release();
        v3 = v65;
        goto LABEL_20;
      }
    }
    v68 = v5;
    v15 = v6;
    v16 = *((_QWORD *)&v71[0] + 1);
    v17 = *(_QWORD *)&v71[0];
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69[0] = (uint64_t)v8;
    v20 = sub_2378D2DB4(v17, v16);
    v21 = v8[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v24 = v19;
    if (v8[3] < v23)
    {
      sub_2378C9848(v23, isUniquelyReferenced_nonNull_native, &qword_2568203E0);
      v25 = sub_2378D2DB4(v17, v16);
      if ((v24 & 1) != (v26 & 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
        sub_237A8858C();
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        swift_release();
        result = swift_release();
        __break(1u);
        return result;
      }
      v20 = v25;
      v8 = (_QWORD *)v69[0];
      if ((v24 & 1) == 0)
        goto LABEL_15;
LABEL_13:
      v27 = v8;
      v28 = v8[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v28 + 8 * v20) = v14;
      v8 = v27;
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378CF92C((uint64_t)v71);
      v6 = v15;
      v5 = v68;
      goto LABEL_4;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v8 = (_QWORD *)v69[0];
      if ((v19 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_2378C51DC(&qword_2568203E0);
      v8 = (_QWORD *)v69[0];
      if ((v24 & 1) != 0)
        goto LABEL_13;
    }
LABEL_15:
    v8[(v20 >> 6) + 8] |= 1 << v20;
    v29 = (_QWORD *)(v8[6] + 16 * v20);
    *v29 = v17;
    v29[1] = v16;
    *(_QWORD *)(v8[7] + 8 * v20) = v14;
    v30 = v8[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_41;
    v8[2] = v32;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  v68 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_20:
  swift_release();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v33 = sub_2378CD378(v3);
  swift_bridgeObjectRelease();
  v69[0] = (uint64_t)v33;
  sub_2378CEEB0(v69);
  swift_bridgeObjectRelease();
  swift_release_n();
  v34 = v69[0];
  v35 = *(_QWORD *)(v69[0] + 16);
  if (v35)
  {
    v69[0] = MEMORY[0x24BEE4AF8];
    sub_2379D63F0(0, v35, 0);
    v36 = v69[0];
    v37 = (uint64_t *)(v34 + 64);
    do
    {
      v39 = *(v37 - 4);
      v38 = *(v37 - 3);
      v40 = *(v37 - 1);
      v41 = *v37;
      v69[0] = v36;
      v43 = *(_QWORD *)(v36 + 16);
      v42 = *(_QWORD *)(v36 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= v42 >> 1)
      {
        sub_2379D63F0(v42 > 1, v43 + 1, 1);
        v36 = v69[0];
      }
      v37 += 7;
      *(_QWORD *)(v36 + 16) = v43 + 1;
      v44 = (_QWORD *)(v36 + 32 * v43);
      v44[4] = v39;
      v44[5] = v38;
      v44[6] = v40;
      v44[7] = v41;
      --v35;
    }
    while (v35);
    swift_release();
    if (*(_QWORD *)(v36 + 16))
      goto LABEL_26;
  }
  else
  {
    swift_release();
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_26:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256820198);
      v45 = sub_237A880E8();
      goto LABEL_29;
    }
  }
  v45 = MEMORY[0x24BEE4B00];
LABEL_29:
  v69[0] = v45;
  v46 = (_QWORD *)swift_bridgeObjectRetain();
  sub_2378C35F4(v46, 1, v69, &qword_256820198);
  swift_bridgeObjectRelease();
  v20 = v69[0];
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v47 = sub_2378CD378(v65);
  swift_bridgeObjectRelease();
  v69[0] = (uint64_t)v47;
  sub_2378CEEB0(v69);
  swift_bridgeObjectRelease();
  swift_release_n();
  v48 = v69[0];
  v49 = *(_QWORD *)(v69[0] + 16);
  if (v49)
  {
    v67 = v20;
    v69[0] = MEMORY[0x24BEE4AF8];
    sub_2379D63D4(0, v49, 0);
    v50 = v69[0];
    v51 = (uint64_t *)(v48 + 80);
    do
    {
      v52 = *(v51 - 6);
      v53 = *(v51 - 5);
      v54 = *(v51 - 1);
      v55 = *v51;
      v69[0] = v50;
      v57 = *(_QWORD *)(v50 + 16);
      v56 = *(_QWORD *)(v50 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57 >= v56 >> 1)
      {
        sub_2379D63D4(v56 > 1, v57 + 1, 1);
        v50 = v69[0];
      }
      v51 += 7;
      *(_QWORD *)(v50 + 16) = v57 + 1;
      v58 = (_QWORD *)(v50 + 32 * v57);
      v58[4] = v52;
      v58[5] = v53;
      v58[6] = v54;
      v58[7] = v55;
      --v49;
    }
    while (v49);
    swift_release();
    v20 = v67;
    if (*(_QWORD *)(v50 + 16))
      goto LABEL_35;
LABEL_37:
    v59 = MEMORY[0x24BEE4B00];
    goto LABEL_38;
  }
  swift_release();
  if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    goto LABEL_37;
LABEL_35:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568201A0);
  v59 = sub_237A880E8();
LABEL_38:
  v69[0] = v59;
  v60 = (_QWORD *)swift_bridgeObjectRetain();
  sub_2378C35F4(v60, 1, v69, &qword_2568201A0);
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)v69[0];
  v16 = v70;
  v61 = qword_25681E410;
  swift_bridgeObjectRetain();
  if (v61 != -1)
LABEL_42:
    swift_once();
  v62 = qword_256825198;
  result = swift_bridgeObjectRelease();
  *a2 = 0;
  a2[1] = v62;
  a2[5] = v8;
  a2[6] = 2;
  a2[2] = v16;
  a2[3] = v68;
  a2[4] = v20;
  return result;
}

uint64_t sub_2378C08A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  int v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[25];
  _QWORD v45[2];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  uint64_t v53;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v53 = MEMORY[0x24BEE4AF8];
  sub_2379D6460(0, v1, 0);
  v2 = v53;
  result = sub_2379FA470(a1);
  if (result < 0)
    goto LABEL_32;
  v6 = result;
  if (result >= 1 << *(_BYTE *)(a1 + 32))
    goto LABEL_32;
  v7 = a1 + 64;
  v35 = v1;
  v8 = 1;
  v36 = v5;
  v37 = a1 + 64;
  while (1)
  {
    v9 = v6 >> 6;
    if ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
      break;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_28;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v11 = *v10;
    v12 = v10[1];
    v13 = (__int128 *)(*(_QWORD *)(a1 + 56) + (v6 << 7));
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[3];
    v40 = v13[2];
    v41 = v16;
    v38 = v14;
    v39 = v15;
    v17 = v13[4];
    v18 = v13[5];
    v19 = v13[6];
    *(_OWORD *)&v44[9] = *(__int128 *)((char *)v13 + 105);
    v43 = v18;
    *(_OWORD *)v44 = v19;
    v42 = v17;
    v45[0] = v11;
    v45[1] = v12;
    v50 = v17;
    v51 = v18;
    v52[0] = v19;
    *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)&v44[9];
    v46 = v38;
    v47 = v39;
    v48 = v40;
    v49 = v16;
    sub_23787AC58((uint64_t)&v38);
    sub_23787AC58((uint64_t)&v38);
    swift_bridgeObjectRetain();
    result = sub_2378D0678((uint64_t)v45);
    v53 = v2;
    v21 = *(_QWORD *)(v2 + 16);
    v20 = *(_QWORD *)(v2 + 24);
    if (v21 >= v20 >> 1)
    {
      result = sub_2379D6460(v20 > 1, v21 + 1, 1);
      v2 = v53;
    }
    *(_QWORD *)(v2 + 16) = v21 + 1;
    v22 = (_OWORD *)(v2 + (v21 << 7));
    v23 = v38;
    v24 = v39;
    v25 = v41;
    v22[4] = v40;
    v22[5] = v25;
    v22[2] = v23;
    v22[3] = v24;
    v26 = v42;
    v27 = v43;
    v28 = *(_OWORD *)v44;
    *(_OWORD *)((char *)v22 + 137) = *(_OWORD *)&v44[9];
    v22[7] = v27;
    v22[8] = v28;
    v22[6] = v26;
    v29 = *(_BYTE *)(a1 + 32);
    if ((uint64_t)v6 >= 1 << v29)
      goto LABEL_29;
    v7 = a1 + 64;
    v30 = *(_QWORD *)(v37 + 8 * v9);
    if ((v30 & (1 << v6)) == 0)
      goto LABEL_30;
    v5 = v36;
    if (*(_DWORD *)(a1 + 36) != v36)
      goto LABEL_31;
    v31 = v30 & (-2 << (v6 & 0x3F));
    if (v31)
    {
      v6 = __clz(__rbit64(v31)) | v6 & 0xFFFFFFFFFFFFFFC0;
      if (v8 == v35)
        return v2;
    }
    else
    {
      v32 = v9 + 1;
      v33 = (unint64_t)((1 << v29) + 63) >> 6;
      if (v9 + 1 >= v33)
        goto LABEL_22;
      v34 = *(_QWORD *)(v37 + 8 * v32);
      if (!v34)
      {
        while (v33 - 2 != v9)
        {
          v34 = *(_QWORD *)(a1 + 80 + 8 * v9++);
          if (v34)
          {
            v32 = v9 + 1;
            goto LABEL_20;
          }
        }
LABEL_22:
        v6 = 1 << v29;
        if (v8 == v35)
          return v2;
        goto LABEL_23;
      }
LABEL_20:
      v6 = __clz(__rbit64(v34)) + (v32 << 6);
      if (v8 == v35)
        return v2;
    }
LABEL_23:
    if ((v6 & 0x8000000000000000) == 0)
    {
      ++v8;
      if ((uint64_t)v6 < 1 << v29)
        continue;
    }
    goto LABEL_32;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2378C0B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];
  char v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_237A88658();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v24 = v1;
    v35 = MEMORY[0x24BEE4AF8];
    sub_2379D647C(0, v5, 0);
    v7 = type metadata accessor for Layout();
    v8 = 0;
    v9 = *(_QWORD *)(v7 - 8);
    v26 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v27 = v7;
    v25 = *(_QWORD *)(v9 + 72);
    do
    {
      v10 = v26 + v25 * v8;
      v34 = v27;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
      sub_2378D07D8(v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      v12 = v28;
      sub_237A8861C();
      v13 = sub_2379372A0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
      v14 = *(_QWORD *)(v13 + 16);
      sub_2378C0118();
      v15 = sub_237A87BF0();
      v31 = v15;
      if (v14)
      {
        v16 = (char *)(v13 + 48);
        do
        {
          v17 = *((_QWORD *)v16 - 2);
          v18 = *((_QWORD *)v16 - 1);
          v19 = *v16;
          v16 += 24;
          sub_23787A11C(v17, v18, v19);
          sub_2378FE528((uint64_t)v32, v17, v18, v19);
          sub_23787A134(v32[0], v32[1], v33);
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        v20 = v31;
      }
      else
      {
        v20 = v15;
        swift_bridgeObjectRelease();
      }
      v6 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2379D647C(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v35;
      }
      v22 = *(_QWORD *)(v6 + 16);
      v21 = *(_QWORD *)(v6 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_2379D647C(v21 > 1, v22 + 1, 1);
        v6 = v35;
      }
      ++v8;
      *(_QWORD *)(v6 + 16) = v22 + 1;
      *(_QWORD *)(v6 + 8 * v22 + 32) = v20;
    }
    while (v8 != v5);
  }
  return v6;
}

uint64_t sub_2378C0DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;

  v21 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v22 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v22)
      goto LABEL_24;
    v19 = *(_QWORD *)(v21 + 8 * v9);
    if (!v19)
      break;
LABEL_19:
    v7 = (v19 - 1) & v19;
    v11 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v11);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v16 = sub_2378C0FC8(MEMORY[0x24BEE4B00], v15, a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_237871380(v16, v13, v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease();
  }
  v20 = v9 + 1;
  if (v9 + 1 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 2;
  if (v9 + 2 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 3;
  if (v9 + 3 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 4;
  if (v9 + 4 >= v22)
  {
LABEL_24:
    swift_release();
    return a1;
  }
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
  {
LABEL_18:
    v9 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v22)
      goto LABEL_24;
    v19 = *(_QWORD *)(v21 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2378C0FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  __int128 *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  char v75;
  char v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _BYTE v104[25];
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char v114;
  __int128 v115;
  uint64_t v116;
  char v117;
  _QWORD *v118;

  v4 = a2;
  v91 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v92 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v97 = (v8 - 1) & v8;
      v13 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v14 >= v92)
      goto LABEL_66;
    v15 = *(_QWORD *)(v91 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v92)
        goto LABEL_66;
      v15 = *(_QWORD *)(v91 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v92)
          goto LABEL_66;
        v15 = *(_QWORD *)(v91 + 8 * v9);
        if (!v15)
        {
          v9 = v14 + 3;
          if (v14 + 3 >= v92)
            goto LABEL_66;
          v15 = *(_QWORD *)(v91 + 8 * v9);
          if (!v15)
          {
            v16 = v14 + 4;
            if (v16 >= v92)
            {
LABEL_66:
              swift_release();
              return a1;
            }
            v15 = *(_QWORD *)(v91 + 8 * v16);
            v9 = v16;
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_23:
    v97 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    v21 = *(_QWORD *)(a3 + 16);
    swift_bridgeObjectRetain();
    v22 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 && (v23 = sub_2378D2DB4(v18, v19), (v24 & 1) != 0))
    {
      v84 = v18;
      v87 = v4;
      v88 = a1;
      v25 = (__int128 *)(*(_QWORD *)(v21 + 56) + (v23 << 7));
      v27 = v25[2];
      v26 = v25[3];
      v28 = v25[1];
      v98 = *v25;
      v99 = v28;
      v100 = v27;
      v101 = v26;
      v29 = v25[4];
      v30 = v25[5];
      v31 = v25[6];
      *(_OWORD *)&v104[9] = *(__int128 *)((char *)v25 + 105);
      v103 = v30;
      *(_OWORD *)v104 = v31;
      v102 = v29;
      sub_23787AC58((uint64_t)&v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = (_QWORD *)*((_QWORD *)&v100 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v118 = v32;
      v90 = v20 + 64;
      v34 = -1 << *(_BYTE *)(v20 + 32);
      if (-v34 < 64)
        v35 = ~(-1 << -(char)v34);
      else
        v35 = -1;
      v36 = v35 & *(_QWORD *)(v20 + 64);
      v37 = (unint64_t)(63 - v34) >> 6;
      swift_bridgeObjectRetain();
      v38 = 0;
      v85 = v9;
      v86 = a3;
      while (1)
      {
        v96 = isUniquelyReferenced_nonNull_native;
        if (v36)
        {
          v93 = (v36 - 1) & v36;
          v94 = v38;
          v40 = __clz(__rbit64(v36)) | (v38 << 6);
          goto LABEL_50;
        }
        v41 = v38 + 1;
        if (__OFADD__(v38, 1))
          goto LABEL_70;
        if (v41 >= v37)
          goto LABEL_65;
        v42 = *(_QWORD *)(v90 + 8 * v41);
        v43 = v38 + 1;
        if (!v42)
        {
          v43 = v38 + 2;
          if (v38 + 2 >= v37)
            goto LABEL_65;
          v42 = *(_QWORD *)(v90 + 8 * v43);
          if (!v42)
          {
            v43 = v38 + 3;
            if (v38 + 3 >= v37)
              goto LABEL_65;
            v42 = *(_QWORD *)(v90 + 8 * v43);
            if (!v42)
            {
              v43 = v38 + 4;
              if (v38 + 4 >= v37)
                goto LABEL_65;
              v42 = *(_QWORD *)(v90 + 8 * v43);
              if (!v42)
              {
                v43 = v38 + 5;
                if (v38 + 5 >= v37)
                  goto LABEL_65;
                v42 = *(_QWORD *)(v90 + 8 * v43);
                if (!v42)
                  break;
              }
            }
          }
        }
LABEL_49:
        v93 = (v42 - 1) & v42;
        v94 = v43;
        v40 = __clz(__rbit64(v42)) + (v43 << 6);
LABEL_50:
        v45 = *(_QWORD *)(v20 + 48) + 24 * v40;
        v47 = *(_QWORD *)v45;
        v46 = *(_QWORD *)(v45 + 8);
        v48 = *(unsigned __int8 *)(v45 + 16);
        v49 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v40);
        sub_23787A11C(*(_QWORD *)v45, v46, *(_BYTE *)(v45 + 16));
        swift_bridgeObjectRetain();
        sub_23787A11C(v47, v46, v48);
        swift_bridgeObjectRetain();
        sub_23787A134(v47, v46, v48);
        swift_bridgeObjectRelease();
        if (!v49)
          goto LABEL_65;
        v51 = sub_2378D2DC4(v47, v46, v48);
        v52 = v32[2];
        v53 = (v50 & 1) == 0;
        v54 = v52 + v53;
        if (__OFADD__(v52, v53))
          goto LABEL_68;
        v55 = v50;
        if (v32[3] >= v54)
        {
          if ((v96 & 1) != 0)
          {
            v32 = v118;
            if ((v50 & 1) != 0)
              goto LABEL_30;
          }
          else
          {
            sub_2378C47F0();
            v32 = v118;
            if ((v55 & 1) != 0)
              goto LABEL_30;
          }
        }
        else
        {
          sub_2378C8570(v54, v96 & 1);
          v56 = sub_2378D2DC4(v47, v46, v48);
          if ((v55 & 1) != (v57 & 1))
            goto LABEL_72;
          v51 = v56;
          v32 = v118;
          if ((v55 & 1) != 0)
          {
LABEL_30:
            sub_23787A134(v47, v46, v48);
            v39 = v32[7];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v39 + 8 * v51) = v49;
            goto LABEL_31;
          }
        }
        v32[(v51 >> 6) + 8] |= 1 << v51;
        v58 = v32[6] + 24 * v51;
        *(_QWORD *)v58 = v47;
        *(_QWORD *)(v58 + 8) = v46;
        *(_BYTE *)(v58 + 16) = v48;
        *(_QWORD *)(v32[7] + 8 * v51) = v49;
        v59 = v32[2];
        v60 = __OFADD__(v59, 1);
        v61 = v59 + 1;
        if (v60)
          goto LABEL_69;
        v32[2] = v61;
LABEL_31:
        isUniquelyReferenced_nonNull_native = 1;
        v36 = v93;
        v38 = v94;
      }
      v44 = v38;
      while (v37 - 6 != v44)
      {
        v42 = *(_QWORD *)(v20 + 112 + 8 * v44++);
        if (v42)
        {
          v43 = v44 + 5;
          goto LABEL_49;
        }
      }
LABEL_65:
      swift_bridgeObjectRelease();
      v70 = *((_QWORD *)&v98 + 1);
      v71 = *((_QWORD *)&v99 + 1);
      v80 = v99;
      v81 = v98;
      v72 = v101;
      v78 = v101;
      v79 = v100;
      v73 = v102;
      v83 = *((_QWORD *)&v101 + 1);
      v82 = v103;
      v74 = *(_OWORD *)v104;
      v89 = *(_QWORD *)&v104[16];
      v95 = v104[24];
      v75 = BYTE8(v103);
      sub_2378707DC();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v105 = v81;
      *((_QWORD *)&v105 + 1) = v70;
      v106 = v80;
      v107 = v71;
      v108 = v79;
      v109 = v32;
      v110 = v72;
      v111 = v83;
      v112 = v73;
      v113 = v82;
      v114 = v75;
      v115 = v74;
      v116 = v89;
      v117 = v95;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v78, v83, v73, *((uint64_t *)&v73 + 1), v82, v75);
      sub_2378797D4(*((uint64_t *)&v74 + 1));
      sub_23787AD04((uint64_t)&v98);
      v76 = swift_isUniquelyReferenced_nonNull_native();
      sub_2378714B0(&v105, v84, v19, v76);
      a1 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      a3 = v86;
      v4 = v87;
      v9 = v85;
      v8 = v97;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v10 = sub_2378D2DB4(v18, v19);
      v12 = v11;
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        v62 = swift_isUniquelyReferenced_nonNull_native();
        v118 = (_QWORD *)a1;
        if ((v62 & 1) == 0)
        {
          sub_2378C4FC4();
          a1 = (uint64_t)v118;
        }
        swift_bridgeObjectRelease();
        v63 = (__int128 *)(*(_QWORD *)(a1 + 56) + (v10 << 7));
        v65 = v63[2];
        v64 = v63[3];
        v66 = v63[1];
        v98 = *v63;
        v99 = v66;
        v100 = v65;
        v101 = v64;
        v67 = v63[4];
        v68 = v63[5];
        v69 = v63[6];
        *(_OWORD *)&v104[9] = *(__int128 *)((char *)v63 + 105);
        v103 = v68;
        *(_OWORD *)v104 = v69;
        v102 = v67;
        sub_237904308(v10, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23787AD04((uint64_t)&v98);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v97;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v97;
      }
    }
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v92)
      goto LABEL_66;
    v15 = *(_QWORD *)(v91 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2378C177C(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _OWORD *i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[6];
  _OWORD v18[2];
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[2];

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  for (i = (_OWORD *)(a3 + 32); ; i += 8)
  {
    v8 = i[5];
    v9 = i[3];
    v22 = i[4];
    v23 = v8;
    v10 = i[5];
    v24[0] = i[6];
    *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)i + 105);
    v11 = i[1];
    v19[0] = *i;
    v19[1] = v11;
    v12 = i[3];
    v14 = *i;
    v13 = i[1];
    v20 = i[2];
    v21 = v12;
    v17[4] = v22;
    v17[5] = v10;
    v18[0] = i[6];
    *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)i + 105);
    v17[0] = v14;
    v17[1] = v13;
    v17[2] = v20;
    v17[3] = v9;
    sub_23787AC58((uint64_t)v19);
    v15 = a1(v17);
    sub_23787AD04((uint64_t)v19);
    if (v3 || (v15 & 1) != 0)
      break;
    if (v4 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_2378C1878(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  _QWORD v15[7];
  uint64_t (*v16)(_QWORD *);

  v16 = a1;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return 0;
  v4 = 0;
  for (i = (uint64_t *)(a3 + 80); ; i += 7)
  {
    v6 = *(i - 5);
    v8 = *(i - 4);
    v7 = *(i - 3);
    v10 = *(i - 2);
    v9 = *(i - 1);
    v11 = *i;
    v15[0] = *(i - 6);
    v15[1] = v6;
    v15[2] = v8;
    v15[3] = v7;
    v15[4] = v10;
    v15[5] = v9;
    v15[6] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v16(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3 || (v12 & 1) != 0)
      break;
    if (v14 == ++v4)
      return 0;
  }
  return v4;
}

uint64_t *ResolvedTheme.palettes(for:)(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  if (v2)
  {
    if (*(_QWORD *)(v2 + 16))
    {
      v4 = *result;
      v3 = result[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_2378D2DB4(v4, v3);
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = sub_2378C08A8(v7);
        swift_bridgeObjectRelease();
        return (uint64_t *)v8;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2378C1A48(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unsigned __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[8];
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[11];
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _BYTE v108[25];
  uint64_t v109;

  v72 = *(_QWORD *)(a2 + 8);
  v84 = *(_QWORD *)a2;
  v85 = *(_QWORD *)(a2 + 16);
  v79 = *(_QWORD *)(a2 + 32);
  v80 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  v75 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_BYTE *)(a2 + 64);
  v78 = *(_QWORD *)(a2 + 72);
  v109 = *(_QWORD *)(a2 + 80);
  v81 = *(_QWORD *)(a2 + 88);
  v76 = *(_BYTE *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  v66 = *(_QWORD *)(a2 + 112);
  sub_2378C00C4((uint64_t)a4);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_2378CEF50(v11, a4);
  sub_2378CF92C((uint64_t)a4);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
    return swift_bridgeObjectRelease();
  v65 = a1;
  v83 = v9;
  v82 = v8;
  v86 = v7;
  v13 = sub_2378C0B6C(v12);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = MEMORY[0x24BEE4B08];
    do
    {
      v17 = *(_QWORD *)(v13 + 8 * v15++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_2378C21C8(v17, v16);
      swift_bridgeObjectRelease();
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v80, v79, v75, v7, v8, v83);
  sub_2378797D4(v109);
  v67 = v10;
  swift_retain();
  *(_QWORD *)&v102 = v84;
  *((_QWORD *)&v102 + 1) = v72;
  sub_237879800();
  swift_bridgeObjectRetain();
  v19 = sub_237A87E3C();
  v68 = v20;
  v70 = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v84;
  *(_QWORD *)(v21 + 24) = v72;
  *(_QWORD *)(v21 + 32) = v85;
  *(_QWORD *)(v21 + 40) = v80;
  *(_QWORD *)(v21 + 48) = v79;
  *(_QWORD *)(v21 + 56) = v75;
  *(_QWORD *)(v21 + 64) = v7;
  *(_QWORD *)(v21 + 72) = v8;
  *(_BYTE *)(v21 + 80) = v83;
  v22 = v109;
  *(_QWORD *)(v21 + 88) = v78;
  *(_QWORD *)(v21 + 96) = v22;
  *(_QWORD *)(v21 + 104) = v81;
  *(_BYTE *)(v21 + 112) = v76;
  *(_QWORD *)(v21 + 120) = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v80, v79, v75, v7, v8, v83);
  sub_2378797D4(v22);
  v23 = v67;
  swift_retain();
  v73 = sub_237879BAC(MEMORY[0x24BEE4B00], v16, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_2378D0794);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_23787978C(v80, v79, v75, v7, v8, v83);
  sub_2378797D4(v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(v80, v79, v75, v7, v8, v83);
  sub_23787A14C(v109);
  swift_release();
  v24 = v84;
  v96[0] = v84;
  v96[1] = v72;
  v96[2] = v70;
  v96[3] = v68;
  v96[4] = v67;
  v96[5] = v73;
  v96[6] = v80;
  v96[7] = v79;
  v96[8] = v75;
  v96[9] = v7;
  v96[10] = v8;
  v97 = v83;
  v98 = v78;
  v99 = v109;
  v100 = v81;
  v101 = v76;
  v25 = *a5;
  v26 = *(_QWORD *)(*a5 + 16);
  swift_bridgeObjectRetain();
  if (!v26)
  {
    sub_23787AC58((uint64_t)v96);
    v54 = v76;
    v52 = v72;
    v37 = v79;
    v53 = v80;
    v39 = v75;
    v51 = v7;
    v50 = v8;
    v49 = v83;
LABEL_13:
    v55 = v78;
    v48 = v109;
    v43 = v81;
    v46 = v68;
    v47 = v73;
    goto LABEL_14;
  }
  v27 = sub_2378D2DB4(v84, v72);
  if ((v28 & 1) == 0)
  {
    sub_23787AC58((uint64_t)v96);
    v54 = v76;
    v52 = v72;
    v53 = v80;
    v37 = v79;
    v39 = v75;
    v51 = v7;
    v50 = v8;
    v49 = v83;
    goto LABEL_13;
  }
  v29 = (_OWORD *)(*(_QWORD *)(v25 + 56) + (v27 << 7));
  v31 = v29[2];
  v30 = v29[3];
  v32 = v29[1];
  v102 = *v29;
  v103 = v32;
  v104 = v31;
  v105 = v30;
  v33 = *(_OWORD *)((char *)v29 + 105);
  v35 = v29[5];
  v34 = v29[6];
  v106 = v29[4];
  v107 = v35;
  *(_OWORD *)v108 = v34;
  *(_OWORD *)&v108[9] = v33;
  v69 = *((_QWORD *)&v103 + 1);
  v70 = v103;
  v36 = *((_QWORD *)&v104 + 1);
  v63 = *((_QWORD *)&v102 + 1);
  v64 = v104;
  v37 = *((_QWORD *)&v105 + 1);
  v61 = v102;
  v62 = v105;
  v38 = *((_QWORD *)&v106 + 1);
  v39 = v106;
  v40 = v35;
  v41 = BYTE8(v35);
  v42 = *(_QWORD *)&v108[8];
  v60 = v34;
  v43 = v33 >> 56;
  v59 = HIBYTE(v33);
  sub_23787AC58((uint64_t)&v102);
  swift_bridgeObjectRetain();
  v44 = swift_bridgeObjectRetain();
  v45 = v36;
  v46 = v69;
  v74 = sub_237874160(v44, v45);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v62, v37, v39, v38, v40, v41);
  sub_2378797D4(v42);
  sub_23787AD04((uint64_t)&v102);
  v47 = v74;
  v48 = v42;
  v49 = v41;
  v50 = v40;
  v51 = v38;
  v53 = v62;
  v52 = v63;
  v23 = v64;
  v54 = v59;
  v55 = v60;
  v24 = v61;
LABEL_14:
  *(_QWORD *)&v102 = v24;
  *((_QWORD *)&v102 + 1) = v52;
  *(_QWORD *)&v103 = v70;
  *((_QWORD *)&v103 + 1) = v46;
  *(_QWORD *)&v104 = v23;
  *((_QWORD *)&v104 + 1) = v47;
  *(_QWORD *)&v105 = v53;
  *((_QWORD *)&v105 + 1) = v37;
  *(_QWORD *)&v106 = v39;
  *((_QWORD *)&v106 + 1) = v51;
  *(_QWORD *)&v107 = v50;
  BYTE8(v107) = v49;
  *(_QWORD *)v108 = v55;
  *(_QWORD *)&v108[8] = v48;
  *(_QWORD *)&v108[16] = v43;
  v108[24] = v54;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v95 = *a5;
  *a5 = 0x8000000000000000;
  sub_2378714B0(&v102, v84, v72, isUniquelyReferenced_nonNull_native);
  *a5 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v80, v79, v75, v86, v82, v83);
  v57 = v109;
  sub_2378797D4(v109);
  v87[0] = v84;
  v87[1] = v72;
  v87[2] = v85;
  v87[3] = v80;
  v87[4] = v79;
  v87[5] = v75;
  v87[6] = v86;
  v87[7] = v82;
  v88 = v83;
  v89 = v78;
  v90 = v57;
  v91 = v81;
  v92 = v76;
  v93 = v67;
  v94 = v66;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v77 = sub_2378CF130(v66, (uint64_t)v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(v80, v79, v75, v86, v82, v83);
  sub_23787A14C(v109);
  swift_bridgeObjectRelease();
  swift_release();
  v58 = swift_isUniquelyReferenced_nonNull_native();
  v95 = *v65;
  *v65 = 0x8000000000000000;
  sub_2378715D8((uint64_t)v77, v84, v72, v58);
  *v65 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23787AD04((uint64_t)v96);
}

uint64_t sub_2378C21C8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19[2];
  char v20;
  uint64_t v21;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v21 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v5 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v5 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v5 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    sub_23787A11C(*(_QWORD *)v12, v14, v15);
    sub_2378FE528((uint64_t)v19, v13, v14, v15);
    result = sub_23787A134(v19[0], v19[1], v20);
  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2378C2364()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378C2394 + 4 * byte_237A90C38[*v0]))(0x73657474656C6170, 0xE800000000000000);
}

uint64_t sub_2378C2394()
{
  return 0x745374756F79616CLL;
}

unint64_t sub_2378C23B4()
{
  return 0xD000000000000011;
}

unint64_t sub_2378C23D0()
{
  return 0xD000000000000013;
}

uint64_t sub_2378C23F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378D0330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378C2414()
{
  sub_2378CF97C();
  return sub_237A88718();
}

uint64_t sub_2378C243C()
{
  sub_2378CF97C();
  return sub_237A88724();
}

uint64_t ResolvedTheme.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568201A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25681E410 != -1)
    swift_once();
  v21 = 0;
  v22 = qword_256825198;
  v26 = MEMORY[0x24BEE4B00];
  v27 = 2;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378CF97C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568201B8);
    v20 = 0;
    sub_2378CF9C0();
    sub_237A881F0();
    v23 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568201D0);
    v20 = 1;
    sub_2378CFA88();
    sub_237A881F0();
    v19 = v28;
    v24 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568201F0);
    v20 = 2;
    sub_2378CFBB8(&qword_2568201F8, &qword_2568201F0, &qword_25681EA08, &qword_25681E8F0);
    sub_237A881F0();
    v25 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820200);
    v20 = 3;
    sub_2378CFBB8(&qword_256820208, &qword_256820200, &qword_25681F350, &qword_25681F348);
    sub_237A881F0();
    v26 = v28;
    v10 = v19;
    swift_bridgeObjectRetain();
    v11 = sub_2378C0DA8(MEMORY[0x24BEE4B00], v10, (uint64_t)&v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v22;
    v13 = v23;
    v14 = v24;
    v15 = v25;
    v17 = v26;
    v16 = v27;
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v17;
    a2[6] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ResolvedTheme.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820210);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[2];
  v8 = v1[3];
  v18 = v1[4];
  v19 = v8;
  v10 = v1[5];
  v16 = v1[6];
  v17 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378CF97C();
  sub_237A886B8();
  v21 = v9;
  v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568201B8);
  sub_2378CFC58();
  sub_237A882B0();
  if (!v2)
  {
    v11 = v18;
    v12 = v16;
    v21 = v19;
    v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568201D0);
    sub_2378CFD20();
    sub_237A882B0();
    v21 = v11;
    v20 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568201F0);
    sub_2378CFE50(&qword_256820238, &qword_2568201F0, &qword_25681E9D0, &qword_25681E8F0);
    sub_237A882B0();
    v13 = swift_bridgeObjectRetain();
    sub_2378C2ED4(v13, v12, 3);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2378C2A8C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v12 = a3;
  v10 = result;
  v11 = a2;
  v13 = a4;
  if ((qword_237A90DF8[byte_2568219B8] & a3) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
    if (swift_dynamicCast())
    {
      v4 = *((_QWORD *)&v8 + 1);
      v5 = v9;
      __swift_project_boxed_opaque_existential_2Tm(&v7, *((uint64_t *)&v8 + 1));
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v7);
      if ((v6 & 1) != 0)
        return result;
    }
    else
    {
      v9 = 0;
      v7 = 0u;
      v8 = 0u;
      sub_2378BC024((uint64_t)&v7, &qword_2568202C8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D0);
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C2BB0(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v10 = a2;
  v9 = result;
  v11 = a3;
  if ((qword_237A90DF8[byte_2568219B8] & a2) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
    if (swift_dynamicCast())
    {
      v3 = *((_QWORD *)&v7 + 1);
      v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if ((v5 & 1) != 0)
        return result;
    }
    else
    {
      v8 = 0;
      v6 = 0u;
      v7 = 0u;
      sub_2378BC024((uint64_t)&v6, &qword_2568202C8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D0);
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C2CCC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2;
  v11 = qword_237A90DF8[byte_2568219B8] & *(_QWORD *)(a1 + *(int *)(v8 + 52));
  sub_2378BBFE0(a1, (uint64_t)v10, &qword_256820330);
  if (v11)
    return sub_2378BC024((uint64_t)v10, &qword_256820330);
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v6, &qword_256820328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
  if (!swift_dynamicCast())
  {
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_2378BC024((uint64_t)v10, &qword_256820330);
    sub_2378BC024((uint64_t)&v16, &qword_2568202C8);
    goto LABEL_7;
  }
  v13 = *((_QWORD *)&v17 + 1);
  v14 = v18;
  __swift_project_boxed_opaque_existential_2Tm(&v16, *((uint64_t *)&v17 + 1));
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_2378BC024((uint64_t)v10, &qword_256820330);
  result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v16);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820338);
    sub_2378D04F4(&qword_256820340, &qword_256820328);
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C2ED4(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v10 = result;
  v11 = a2;
  v9 = a3;
  if ((qword_237A90DF8[byte_2568219B8] & a2) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
    if (swift_dynamicCast())
    {
      v3 = *((_QWORD *)&v7 + 1);
      v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if ((v5 & 1) != 0)
        return result;
    }
    else
    {
      v8 = 0;
      v6 = 0u;
      v7 = 0u;
      sub_2378BC024((uint64_t)&v6, &qword_2568202C8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820210);
    sub_2378CFE50(&qword_2568203B0, &qword_256820200, &qword_25681F388, &qword_25681F348);
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C3020(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2;
  v11 = qword_237A90DF8[byte_2568219B8] & *(_QWORD *)(a1 + *(int *)(v8 + 52));
  sub_2378BBFE0(a1, (uint64_t)v10, &qword_256820300);
  if (v11)
    return sub_2378BC024((uint64_t)v10, &qword_256820300);
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v6, &qword_2568202F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
  if (!swift_dynamicCast())
  {
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_2378BC024((uint64_t)v10, &qword_256820300);
    sub_2378BC024((uint64_t)&v16, &qword_2568202C8);
    goto LABEL_7;
  }
  v13 = *((_QWORD *)&v17 + 1);
  v14 = v18;
  __swift_project_boxed_opaque_existential_2Tm(&v16, *((uint64_t *)&v17 + 1));
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_2378BC024((uint64_t)v10, &qword_256820300);
  result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v16);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820308);
    sub_2378D04F4(&qword_256820310, &qword_2568202F8);
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C3228(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v10 = result;
  v11 = a2;
  v9 = a3;
  if ((qword_237A90DF8[byte_2568219B8] & a2) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820348);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202C0);
    if (swift_dynamicCast())
    {
      v3 = *((_QWORD *)&v7 + 1);
      v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if ((v5 & 1) != 0)
        return result;
    }
    else
    {
      v8 = 0;
      v6 = 0u;
      v7 = 0u;
      sub_2378BC024((uint64_t)&v6, &qword_2568202C8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820350);
    sub_2378D05BC();
    return sub_237A882B0();
  }
  return result;
}

uint64_t sub_2378C3354@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ResolvedTheme.init(from:)(a1, a2);
}

uint64_t sub_2378C3368(_QWORD *a1)
{
  return ResolvedTheme.encode(to:)(a1);
}

uint64_t *ResolvedTheme.defaultWallpaperID(for:)@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = *result;
    v5 = result[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_2378D2DB4(v6, v5);
    if ((v8 & 1) != 0)
    {
      v9 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v7);
      v10 = v9[1];
      *a2 = *v9;
      a2[1] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = (uint64_t *)swift_bridgeObjectRelease();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

unint64_t ResolvedTheme.defaultPalette(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[4];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[25];

  v3 = v2;
  v5 = *((_OWORD *)v2 + 2);
  v6 = v2[4];
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_12;
  v30 = v5;
  v8 = *a1;
  v7 = a1[1];
  v9 = *v3;
  v10 = v3[1];
  v29 = *((_OWORD *)v3 + 1);
  v11 = v3[6];
  swift_bridgeObjectRetain();
  v12 = sub_2378D2DB4(v8, v7);
  if ((v13 & 1) == 0)
    goto LABEL_11;
  v14 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v12);
  v16 = *v14;
  v15 = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v9;
  *((_QWORD *)&v33 + 1) = v10;
  v34 = v29;
  v35 = v30;
  *(_QWORD *)&v36 = v11;
  v31 = v8;
  v32 = v7;
  v17 = ResolvedTheme.palettes(for:)(&v31);
  if (!v17)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_2378CFEF0(&v33);
    return sub_237870370((uint64_t)&v33, (uint64_t)a2, &qword_256820240);
  }
  v18 = (uint64_t)v17;
  v31 = v16;
  v32 = v15;
  MEMORY[0x24BDAC7A8](v17);
  v28[2] = &v31;
  result = sub_2378C177C((uint64_t (*)(_OWORD *))sub_237882A4C, (uint64_t)v28, v18);
  if ((v20 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v18 + 16))
  {
    v21 = (_OWORD *)(v18 + (result << 7));
    v22 = v21[2];
    v23 = v21[3];
    v24 = v21[5];
    v35 = v21[4];
    v36 = v24;
    v33 = v22;
    v34 = v23;
    v25 = v21[6];
    v26 = v21[7];
    v27 = v21[8];
    *(_OWORD *)&v39[9] = *(_OWORD *)((char *)v21 + 137);
    v38 = v26;
    *(_OWORD *)v39 = v27;
    v37 = v25;
    memmove(a2, v21 + 2, 0x79uLL);
    nullsub_1(a2);
    sub_23787AC58((uint64_t)&v33);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_2378C35F4(_QWORD *a1, char a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  char v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_24;
  v8 = a1[6];
  v7 = a1[7];
  v10 = a1[4];
  v9 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_24;
  v11 = (_QWORD *)*a3;
  v13 = sub_2378D2DB4(v10, v9);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v17 = v12;
  if (v11[3] >= v16)
  {
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      sub_2378C4430(a4);
      if ((v17 & 1) == 0)
        goto LABEL_13;
    }
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_30;
  }
  sub_2378C7DF8(v16, a2 & 1, a4);
  v18 = sub_2378D2DB4(v10, v9);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_29:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
    sub_237A8858C();
    __break(1u);
LABEL_30:
    sub_237A87F44();
    sub_237A878E4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E8);
    sub_237A88070();
    sub_237A878E4();
    sub_237A880AC();
    __break(1u);
    return;
  }
  v13 = v18;
  if ((v17 & 1) != 0)
    goto LABEL_10;
LABEL_13:
  v22 = (_QWORD *)*a3;
  *(_QWORD *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
  v23 = (_QWORD *)(v22[6] + 16 * v13);
  *v23 = v10;
  v23[1] = v9;
  v24 = (_QWORD *)(v22[7] + 16 * v13);
  *v24 = v8;
  v24[1] = v7;
  v25 = v22[2];
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v22[2] = v27;
  if (v6 != 1)
  {
    v28 = a1 + 11;
    v29 = 1;
    while (v29 < a1[2])
    {
      v31 = *(v28 - 1);
      v30 = *v28;
      v33 = *(v28 - 3);
      v32 = *(v28 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v32)
        goto LABEL_24;
      v34 = (_QWORD *)*a3;
      v35 = sub_2378D2DB4(v33, v32);
      v37 = v34[2];
      v38 = (v36 & 1) == 0;
      v26 = __OFADD__(v37, v38);
      v39 = v37 + v38;
      if (v26)
        goto LABEL_26;
      v40 = v36;
      if (v34[3] < v39)
      {
        sub_2378C7DF8(v39, 1, a4);
        v35 = sub_2378D2DB4(v33, v32);
        if ((v40 & 1) != (v41 & 1))
          goto LABEL_29;
      }
      if ((v40 & 1) != 0)
        goto LABEL_10;
      v42 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v35 >> 6) + 64) |= 1 << v35;
      v43 = (_QWORD *)(v42[6] + 16 * v35);
      *v43 = v33;
      v43[1] = v32;
      v44 = (_QWORD *)(v42[7] + 16 * v35);
      *v44 = v31;
      v44[1] = v30;
      v45 = v42[2];
      v26 = __OFADD__(v45, 1);
      v46 = v45 + 1;
      if (v26)
        goto LABEL_27;
      ++v29;
      v42[2] = v46;
      v28 += 4;
      if (v6 == v29)
        goto LABEL_24;
    }
    goto LABEL_28;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_2378C39D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  __int128 v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v51 = a1;
  v52 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v53 = v8;
  v54 = 0;
  v55 = v11 & v9;
  v56 = a2;
  v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_237A49FA8(&v48);
  v12 = v50;
  if (!v50)
    goto LABEL_27;
  v13 = v48;
  v14 = v49;
  v15 = (_QWORD *)*a5;
  v17 = sub_2378D2DC4(v48, *((uint64_t *)&v48 + 1), v49);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_2378C47F0();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v26 = v24[6] + 24 * v17;
    *(_OWORD *)v26 = v13;
    *(_BYTE *)(v26 + 16) = v14;
    *(_QWORD *)(v24[7] + 8 * v17) = v12;
    v27 = v24[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v29;
LABEL_16:
    sub_237A49FA8(&v48);
    for (i = v50; v50; i = v50)
    {
      v32 = v48;
      v33 = v49;
      v34 = (_QWORD *)*a5;
      v36 = sub_2378D2DC4(v48, *((uint64_t *)&v48 + 1), v49);
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        goto LABEL_28;
      v40 = v35;
      if (v34[3] < v39)
      {
        sub_2378C8570(v39, 1);
        v41 = sub_2378D2DC4(v32, *((uint64_t *)&v32 + 1), v33);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_30;
        v36 = v41;
      }
      v43 = (_QWORD *)*a5;
      if ((v40 & 1) != 0)
      {
        sub_23787A134(v32, *((uint64_t *)&v32 + 1), v33);
        v31 = v43[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v31 + 8 * v36) = i;
      }
      else
      {
        v43[(v36 >> 6) + 8] |= 1 << v36;
        v44 = v43[6] + 24 * v36;
        *(_OWORD *)v44 = v32;
        *(_BYTE *)(v44 + 16) = v33;
        *(_QWORD *)(v43[7] + 8 * v36) = i;
        v45 = v43[2];
        v28 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v28)
          goto LABEL_29;
        v43[2] = v46;
      }
      sub_237A49FA8(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2378707DC();
    return swift_release();
  }
  sub_2378C8570(v20, a4 & 1);
  v22 = sub_2378D2DC4(v13, *((uint64_t *)&v13 + 1), v14);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_23787A134(v13, *((uint64_t *)&v13 + 1), v14);
    v25 = v24[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 8 * v17) = v12;
    goto LABEL_16;
  }
LABEL_30:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

void *sub_2378C3CF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820408);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_23787076C(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_237870734(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2378C3EE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820400);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v27 = v22;
    *(_QWORD *)(v27 + 8) = v23;
    *(_BYTE *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v25;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C40AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E8);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C4260()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E0);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 88 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_BYTE *)(v21 + 80);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)v21;
    v25 = *(_OWORD *)(v21 + 16);
    v26 = *(_OWORD *)(v21 + 32);
    v27 = *(_OWORD *)(v21 + 48);
    v28 = *(_OWORD *)(v21 + 64);
    *v23 = v19;
    v23[1] = v18;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v29 = v24;
    *(_OWORD *)(v29 + 16) = v25;
    *(_OWORD *)(v29 + 32) = v26;
    *(_OWORD *)(v29 + 48) = v27;
    *(_OWORD *)(v29 + 64) = v28;
    *(_BYTE *)(v29 + 80) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C4430(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_237A880D0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v14)
      goto LABEL_26;
    v27 = *(_QWORD *)(v7 + 8 * v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v14)
        goto LABEL_26;
      v27 = *(_QWORD *)(v7 + 8 * v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v16 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v17);
    v22 = *v21;
    v23 = v21[1];
    v24 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v24 = v20;
    v24[1] = v19;
    v25 = (_QWORD *)(*(_QWORD *)(v5 + 56) + v17);
    *v25 = v22;
    v25[1] = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v14)
    goto LABEL_26;
  v27 = *(_QWORD *)(v7 + 8 * v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v27 = *(_QWORD *)(v7 + 8 * v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C45E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t *v35;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D8);
  v35 = v0;
  v1 = *v0;
  v2 = sub_237A880D0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v35 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12)
      goto LABEL_26;
    v33 = *(_QWORD *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      v8 = v32 + 1;
      if (v32 + 1 >= v12)
        goto LABEL_26;
      v33 = *(_QWORD *)(v5 + 8 * v8);
      if (!v33)
        break;
    }
LABEL_25:
    v11 = (v33 - 1) & v33;
    v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    v15 = 72 * v14;
    v16 = *(_QWORD *)(v1 + 48) + 72 * v14;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 40);
    v23 = *(_BYTE *)(v16 + 48);
    v25 = *(_QWORD *)(v16 + 56);
    v24 = *(_QWORD *)(v16 + 64);
    v26 = 16 * v14;
    v27 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v26);
    v28 = *v27;
    v29 = v27[1];
    v30 = *(_QWORD *)(v3 + 48) + v15;
    *(_QWORD *)v30 = v17;
    *(_QWORD *)(v30 + 8) = v18;
    *(_QWORD *)(v30 + 16) = v19;
    *(_QWORD *)(v30 + 24) = v20;
    *(_QWORD *)(v30 + 32) = v21;
    *(_QWORD *)(v30 + 40) = v22;
    *(_BYTE *)(v30 + 48) = v23;
    *(_QWORD *)(v30 + 56) = v25;
    *(_QWORD *)(v30 + 64) = v24;
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 56) + v26);
    *v31 = v28;
    v31[1] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v34 = v32 + 2;
  if (v34 >= v12)
    goto LABEL_26;
  v33 = *(_QWORD *)(v5 + 8 * v34);
  if (v33)
  {
    v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v33 = *(_QWORD *)(v5 + 8 * v8);
    ++v34;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C47F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D0);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_QWORD *)(v22 + 8) = v19;
    *(_BYTE *)(v22 + 16) = v23;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    sub_23787A11C(v18, v19, v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C49B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBC0);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v23 = v18;
    *(_BYTE *)(v23 + 8) = v19;
    *(_QWORD *)(v23 + 16) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    result = (void *)swift_retain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C4B70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C4D24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  void *__src;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C0);
  v36 = v0;
  v1 = *v0;
  v2 = sub_237A880D0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v35 = v3;
    result = (void *)swift_release();
    *v36 = v35;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v40 = v3;
  if (v6)
  {
    result = memmove(result, __src, 8 * v5);
    v3 = v40;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(v8 + 63) >> 6;
  v39 = v1;
  while (1)
  {
    if (v10)
    {
      v41 = (v10 - 1) & v10;
      v42 = v7;
      v11 = __clz(__rbit64(v10)) | (v7 << 6);
      v12 = v39;
      v3 = v40;
      goto LABEL_12;
    }
    v31 = v7 + 1;
    v12 = v39;
    v3 = v40;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v38)
      goto LABEL_26;
    v32 = *((_QWORD *)__src + v31);
    v33 = v7 + 1;
    if (!v32)
    {
      v33 = v7 + 2;
      if (v7 + 2 >= v38)
        goto LABEL_26;
      v32 = *((_QWORD *)__src + v33);
      if (!v32)
        break;
    }
LABEL_25:
    v41 = (v32 - 1) & v32;
    v42 = v33;
    v11 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_12:
    v13 = *(_QWORD *)(v12 + 56);
    v14 = 112 * v11;
    v15 = *(_QWORD *)(v12 + 48) + 112 * v11;
    v16 = *(_QWORD *)(v15 + 24);
    v17 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v19 = *(_QWORD *)(v15 + 48);
    v20 = *(_QWORD *)(v15 + 56);
    v21 = *(_QWORD *)(v15 + 72);
    v22 = *(_QWORD *)(v15 + 80);
    v23 = *(_QWORD *)(v15 + 88);
    v24 = *(_BYTE *)(v15 + 96);
    v25 = *(_QWORD *)(v15 + 104);
    v26 = 8 * v11;
    v27 = *(_QWORD *)(v13 + v26);
    v28 = *(_QWORD *)(v3 + 48) + v14;
    v29 = *(_OWORD *)(v15 + 8);
    v30 = *(_BYTE *)(v15 + 64);
    *(_QWORD *)v28 = *(_QWORD *)v15;
    *(_OWORD *)(v28 + 8) = v29;
    *(_QWORD *)(v28 + 24) = v16;
    *(_QWORD *)(v28 + 32) = v17;
    *(_QWORD *)(v28 + 40) = v18;
    *(_QWORD *)(v28 + 48) = v19;
    *(_QWORD *)(v28 + 56) = v20;
    *(_BYTE *)(v28 + 64) = v30;
    *(_QWORD *)(v28 + 72) = v21;
    *(_QWORD *)(v28 + 80) = v22;
    *(_QWORD *)(v28 + 88) = v23;
    *(_BYTE *)(v28 + 96) = v24;
    *(_QWORD *)(v28 + 104) = v25;
    *(_QWORD *)(*(_QWORD *)(v3 + 56) + v26) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v16, v17, v18, v19, v20, v30);
    sub_2378797D4(v22);
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
    v10 = v41;
    v7 = v42;
  }
  v34 = v7 + 3;
  if (v7 + 3 >= v38)
    goto LABEL_26;
  v32 = *((_QWORD *)__src + v34);
  if (v32)
  {
    v33 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v38)
      goto LABEL_26;
    v32 = *((_QWORD *)__src + v33);
    ++v34;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C4FB8()
{
  return sub_2378C51DC(&qword_2568202A8);
}

void *sub_2378C4FC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[25];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202A0);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v18;
    v19 = v18[1];
    v21 = v15 << 7;
    v23 = *(_OWORD *)(v17 + v21 + 80);
    v22 = *(_OWORD *)(v17 + v21 + 96);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    *(_OWORD *)&v45[9] = *(_OWORD *)(v17 + v21 + 105);
    v44 = v23;
    *(_OWORD *)v45 = v22;
    v43 = v24;
    v26 = *(_OWORD *)(v17 + v21);
    v25 = *(_OWORD *)(v17 + v21 + 16);
    v27 = *(_OWORD *)(v17 + v21 + 48);
    v41 = *(_OWORD *)(v17 + v21 + 32);
    v42 = v27;
    v39 = v26;
    v40 = v25;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v20;
    v28[1] = v19;
    v29 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v30 = v39;
    v31 = v40;
    v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    *v29 = v30;
    v29[1] = v31;
    v33 = v43;
    v34 = v44;
    v35 = *(_OWORD *)v45;
    *(_OWORD *)((char *)v29 + 105) = *(_OWORD *)&v45[9];
    v29[5] = v34;
    v29[6] = v35;
    v29[4] = v33;
    swift_bridgeObjectRetain();
    result = (void *)sub_23787AC58((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C51D0()
{
  return sub_2378C51DC(&qword_2568203E8);
}

void *sub_2378C51DC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_237A880D0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C5388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for Component();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203A8);
  v5 = *v0;
  v6 = sub_237A880D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_2378D07D8(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_2378D0858((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2378C55CC()
{
  return sub_2378C5AC4((uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel, &qword_256820270);
}

void *sub_2378C55E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v25 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820390);
  v5 = *v0;
  v6 = sub_237A880D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v23 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v24 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v14)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v17 = *(_QWORD *)(v25 + 72) * v16;
    sub_2378BBFE0(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, &qword_25681E8E0);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)sub_237870370((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, &qword_25681E8E0);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v23;
    goto LABEL_25;
  }
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2378C5814()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203A0);
  v32 = v0;
  v3 = *v0;
  v4 = sub_237A880D0();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_25:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    v6 = v38;
  }
  v33 = v3 + 64;
  v9 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v10 = 1 << *(_BYTE *)(v3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v37 = v3;
  v12 = v11 & *(_QWORD *)(v3 + 64);
  v34 = (unint64_t)(v10 + 63) >> 6;
  v13 = (uint64_t)v35;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      v16 = v37;
      goto LABEL_9;
    }
    v26 = v9 + 1;
    v16 = v37;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34)
      goto LABEL_23;
    v27 = *(_QWORD *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v34)
        goto LABEL_23;
      v27 = *(_QWORD *)(v33 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_22:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    v17 = *(_QWORD *)(v36 + 72) * v15;
    sub_2378BBFE0(*(_QWORD *)(v16 + 48) + v17, v13, &qword_25681E8E0);
    v18 = 32 * v15;
    v19 = *(_QWORD *)(v16 + 56) + 32 * v15;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = v38;
    v24 = *(_QWORD *)(v38 + 48) + v17;
    LOBYTE(v17) = *(_BYTE *)(v19 + 24);
    sub_237870370(v13, v24, &qword_25681E8E0);
    v25 = *(_QWORD *)(v23 + 56) + v18;
    *(_QWORD *)v25 = v20;
    *(_QWORD *)(v25 + 8) = v21;
    *(_QWORD *)(v25 + 16) = v22;
    *(_BYTE *)(v25 + 24) = v17;
    swift_retain();
    result = (void *)sub_2378D0664(v21, v22, v17);
  }
  v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_25;
  }
  v27 = *(_QWORD *)(v33 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v34)
      goto LABEL_23;
    v27 = *(_QWORD *)(v33 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2378C5AB0()
{
  return sub_2378C5AC4(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, &qword_256820398);
}

void *sub_2378C5AC4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *result;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v2;
  v6 = a1(0);
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v32 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v12 = *v2;
  v13 = sub_237A880D0();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v5 = v14;
    return result;
  }
  v29 = v5;
  result = (void *)(v13 + 64);
  v16 = (unint64_t)((1 << *(_BYTE *)(v14 + 32)) + 63) >> 6;
  if (v14 != v12 || (unint64_t)result >= v12 + 64 + 8 * v16)
    result = memmove(result, (const void *)(v12 + 64), 8 * v16);
  v17 = 0;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v12 + 16);
  v18 = 1 << *(_BYTE *)(v12 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v12 + 64);
  v30 = v12 + 64;
  v31 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v17 << 6);
      goto LABEL_9;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v31)
      goto LABEL_23;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v31)
        goto LABEL_23;
      v26 = *(_QWORD *)(v30 + 8 * v17);
      if (!v26)
        break;
    }
LABEL_22:
    v20 = (v26 - 1) & v26;
    v22 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v32 + 72) * v22;
    sub_2378BBFE0(*(_QWORD *)(v12 + 48) + v23, (uint64_t)v11, &qword_25681E8E0);
    v24 = *(_QWORD *)(v33 + 72) * v22;
    sub_2378D07D8(*(_QWORD *)(v12 + 56) + v24, (uint64_t)v8, a1);
    sub_237870370((uint64_t)v11, *(_QWORD *)(v14 + 48) + v23, &qword_25681E8E0);
    result = (void *)sub_2378D0858((uint64_t)v8, *(_QWORD *)(v14 + 56) + v24, a1);
  }
  v27 = v25 + 2;
  if (v27 >= v31)
  {
LABEL_23:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v31)
      goto LABEL_23;
    v26 = *(_QWORD *)(v30 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2378C5D58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820388);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C5F10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820380);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2378C609C()
{
  return sub_2378C6830(&qword_256820370);
}

void *sub_2378C60A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  char v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256820378);
  v32 = v0;
  v1 = *v0;
  v2 = sub_237A880D0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v32 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v34 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v29 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v33)
      goto LABEL_26;
    v30 = *(_QWORD *)(v34 + 8 * v29);
    ++v7;
    if (!v30)
    {
      v7 = v29 + 1;
      if (v29 + 1 >= v33)
        goto LABEL_26;
      v30 = *(_QWORD *)(v34 + 8 * v7);
      if (!v30)
        break;
    }
LABEL_25:
    v10 = (v30 - 1) & v30;
    v12 = __clz(__rbit64(v30)) + (v7 << 6);
LABEL_12:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v16 = *v14;
    v15 = v14[1];
    v17 = v12 << 6;
    v18 = *(_QWORD *)(v1 + 56) + v17;
    v19 = *(void **)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(void **)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 40);
    v24 = *(_QWORD *)(v18 + 48);
    v25 = *(_BYTE *)(v18 + 56);
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    v27 = *(_BYTE *)(v18 + 32);
    *v26 = v16;
    v26[1] = v15;
    v28 = *(_QWORD *)(v3 + 56) + v17;
    *(_QWORD *)v28 = v19;
    *(_QWORD *)(v28 + 8) = v20;
    *(_QWORD *)(v28 + 16) = v21;
    *(_QWORD *)(v28 + 24) = v22;
    *(_BYTE *)(v28 + 32) = v27;
    *(_QWORD *)(v28 + 40) = v23;
    *(_QWORD *)(v28 + 48) = v24;
    *(_BYTE *)(v28 + 56) = v25;
    swift_bridgeObjectRetain();
    sub_237870090(v19, v20, v21, v22, v27);
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v33)
    goto LABEL_26;
  v30 = *(_QWORD *)(v34 + 8 * v31);
  if (v30)
  {
    v7 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v7 >= v33)
      goto LABEL_26;
    v30 = *(_QWORD *)(v34 + 8 * v7);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C62C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820368);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    LOBYTE(v21) = *(_BYTE *)(v21 + 24);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v19;
    v25[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_QWORD *)(v26 + 16) = v24;
    *(_BYTE *)(v26 + 24) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C648C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820260);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    LOBYTE(v17) = *(_BYTE *)(v17 + 24);
    v21 = 16 * v15;
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v21);
    *(_QWORD *)v22 = v19;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v20;
    *(_BYTE *)(v22 + 24) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v21) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C6660()
{
  return sub_2378C6DD4(&qword_2568202B0);
}

void *sub_2378C666C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D8);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v21;
    *(_BYTE *)(v23 + 16) = v22;
    result = (void *)sub_23787A11C(v20, v21, v22);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2378C6824()
{
  return sub_2378C6830(&qword_256820288);
}

id sub_2378C6830(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_237A880D0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C69D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C8);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 48 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(void **)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 40);
    v25 = *(_BYTE *)(v19 + 32);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v26 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v26 = v20;
    *(_QWORD *)(v26 + 8) = v21;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v23;
    *(_BYTE *)(v26 + 32) = v25;
    *(_QWORD *)(v26 + 40) = v24;
    result = (void *)sub_237870090(v20, v21, v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C6BA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t *v36;
  uint64_t v37;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256820290);
  v36 = v0;
  v1 = *v0;
  v2 = sub_237A880D0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v36 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v37 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v33 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v11)
      goto LABEL_26;
    v34 = *(_QWORD *)(v37 + 8 * v33);
    ++v7;
    if (!v34)
    {
      v7 = v33 + 1;
      if (v33 + 1 >= v11)
        goto LABEL_26;
      v34 = *(_QWORD *)(v37 + 8 * v7);
      if (!v34)
        break;
    }
LABEL_25:
    v10 = (v34 - 1) & v34;
    v13 = __clz(__rbit64(v34)) + (v7 << 6);
LABEL_12:
    v14 = 16 * v13;
    v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v13);
    v16 = *v15;
    v17 = v15[1];
    v18 = 88 * v13;
    v19 = *(_QWORD *)(v1 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v26 = *(_QWORD *)(v19 + 48);
    v27 = *(_QWORD *)(v19 + 56);
    v28 = *(_BYTE *)(v19 + 64);
    v30 = *(_QWORD *)(v19 + 72);
    v29 = *(_QWORD *)(v19 + 80);
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v14);
    *v31 = v16;
    v31[1] = v17;
    v32 = *(_QWORD *)(v3 + 56) + v18;
    *(_QWORD *)v32 = v20;
    *(_QWORD *)(v32 + 8) = v21;
    *(_QWORD *)(v32 + 16) = v22;
    *(_QWORD *)(v32 + 24) = v23;
    *(_QWORD *)(v32 + 32) = v24;
    *(_QWORD *)(v32 + 40) = v25;
    *(_QWORD *)(v32 + 48) = v26;
    *(_QWORD *)(v32 + 56) = v27;
    *(_BYTE *)(v32 + 64) = v28;
    *(_QWORD *)(v32 + 72) = v30;
    *(_QWORD *)(v32 + 80) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v35 = v33 + 2;
  if (v35 >= v11)
    goto LABEL_26;
  v34 = *(_QWORD *)(v37 + 8 * v35);
  if (v34)
  {
    v7 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v7 >= v11)
      goto LABEL_26;
    v34 = *(_QWORD *)(v37 + 8 * v7);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C6DC8()
{
  return sub_2378C6DD4(&qword_256820280);
}

void *sub_2378C6DD4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_237A880D0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2378C6F80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F0);
  v2 = *v0;
  v3 = sub_237A880D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2378C712C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820408);
  v37 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_237870734(v25, (uint64_t)v38);
    }
    else
    {
      sub_23787076C((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_237870734(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C7450(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  char v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820400);
  v42 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v43 = *(_BYTE *)(v33 + 16);
    v36 = *(_QWORD *)(v33 + 24);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_BYTE *)(v19 + 16) = v43;
    *(_QWORD *)(v19 + 24) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C778C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E8);
  v36 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C7AA0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E0);
  v39 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 88 * v21;
    v43 = *(_OWORD *)(v33 + 32);
    v44 = *(_OWORD *)(v33 + 16);
    v42 = *(_OWORD *)(v33 + 48);
    v40 = *(_OWORD *)v33;
    v41 = *(_OWORD *)(v33 + 64);
    v34 = *(_BYTE *)(v33 + 80);
    if ((v39 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 88 * v17;
    *(_OWORD *)v19 = v40;
    *(_OWORD *)(v19 + 16) = v44;
    *(_OWORD *)(v19 + 32) = v43;
    *(_OWORD *)(v19 + 48) = v42;
    *(_OWORD *)(v19 + 64) = v41;
    *(_BYTE *)(v19 + 80) = v34;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C7DF8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v43 = a2;
  v7 = sub_237A880DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v42 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_31;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v6 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_33;
      v26 = *(_QWORD *)(v42 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_33:
          swift_release();
          v4 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v14 >= v41)
              goto LABEL_33;
            v26 = *(_QWORD *)(v42 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v14 = v27;
      }
    }
LABEL_30:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_31:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v6 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v6 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v40;
  v25 = (_QWORD *)(v6 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v6 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2378C8128(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D8);
  v53 = a2;
  v6 = sub_237A880DC();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v50 = (_QWORD *)(v5 + 64);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v5 + 64);
    v48 = v2;
    v49 = (unint64_t)(v7 + 63) >> 6;
    v10 = v6 + 64;
    v11 = v6;
    result = swift_retain();
    v13 = v11;
    v14 = 0;
    v51 = v11;
    v52 = v5;
    while (1)
    {
      if (v9)
      {
        v54 = (v9 - 1) & v9;
        v55 = v14;
        v21 = __clz(__rbit64(v9)) | (v14 << 6);
      }
      else
      {
        v22 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v22 >= v49)
          goto LABEL_35;
        v23 = v50[v22];
        v24 = v14 + 1;
        if (!v23)
        {
          v24 = v14 + 2;
          if (v14 + 2 >= v49)
            goto LABEL_35;
          v23 = v50[v24];
          if (!v23)
          {
            v25 = v14 + 3;
            if (v14 + 3 >= v49)
            {
LABEL_35:
              v46 = v13;
              swift_release();
              v3 = v48;
              if ((v53 & 1) != 0)
              {
                v47 = 1 << *(_BYTE *)(v5 + 32);
                if (v47 >= 64)
                  bzero(v50, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v50 = -1 << v47;
                *(_QWORD *)(v5 + 16) = 0;
              }
              goto LABEL_41;
            }
            v23 = v50[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v24 >= v49)
                  goto LABEL_35;
                v23 = v50[v24];
                ++v25;
                if (v23)
                  goto LABEL_21;
              }
            }
            v24 = v14 + 3;
          }
        }
LABEL_21:
        v54 = (v23 - 1) & v23;
        v55 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v26 = *(_QWORD *)(v5 + 56);
      v27 = *(_QWORD *)(v5 + 48) + 72 * v21;
      v28 = *(_QWORD *)v27;
      v29 = *(_QWORD *)(v27 + 8);
      v31 = *(_QWORD *)(v27 + 16);
      v30 = *(_QWORD *)(v27 + 24);
      v33 = *(_QWORD *)(v27 + 32);
      v32 = *(_QWORD *)(v27 + 40);
      v34 = *(_BYTE *)(v27 + 48);
      v35 = *(_QWORD *)(v27 + 64);
      v58 = *(_QWORD *)(v27 + 56);
      v36 = (uint64_t *)(v26 + 16 * v21);
      v37 = v36[1];
      v56 = *v36;
      if ((v53 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = v51;
      }
      v57 = v37;
      v38 = v13;
      sub_237A885D4();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_237A885EC();
      sub_237A885EC();
      if (v35)
      {
        swift_bridgeObjectRetain();
        sub_237A87710();
        swift_bridgeObjectRelease();
      }
      result = sub_237A88610();
      v13 = v38;
      v39 = -1 << *(_BYTE *)(v38 + 32);
      v40 = result & ~v39;
      v41 = v40 >> 6;
      if (((-1 << v40) & ~*(_QWORD *)(v10 + 8 * (v40 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v10 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
        v16 = v31;
        v17 = v57;
        v18 = v28;
      }
      else
      {
        v42 = 0;
        v43 = (unint64_t)(63 - v39) >> 6;
        v16 = v31;
        v17 = v57;
        v18 = v28;
        do
        {
          if (++v41 == v43 && (v42 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v44 = v41 == v43;
          if (v41 == v43)
            v41 = 0;
          v42 |= v44;
          v45 = *(_QWORD *)(v10 + 8 * v41);
        }
        while (v45 == -1);
        v15 = __clz(__rbit64(~v45)) + (v41 << 6);
      }
      *(_QWORD *)(v10 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v19 = *(_QWORD *)(v38 + 48) + 72 * v15;
      *(_QWORD *)v19 = v18;
      *(_QWORD *)(v19 + 8) = v29;
      *(_QWORD *)(v19 + 16) = v16;
      *(_QWORD *)(v19 + 24) = v30;
      *(_QWORD *)(v19 + 32) = v33;
      *(_QWORD *)(v19 + 40) = v32;
      *(_BYTE *)(v19 + 48) = v34;
      *(_QWORD *)(v19 + 56) = v58;
      *(_QWORD *)(v19 + 64) = v35;
      v20 = (_QWORD *)(*(_QWORD *)(v38 + 56) + 16 * v15);
      *v20 = v56;
      v20[1] = v17;
      ++*(_QWORD *)(v38 + 16);
      v5 = v52;
      v9 = v54;
      v14 = v55;
    }
  }
  v46 = v6;
LABEL_41:
  result = swift_release();
  *v3 = v46;
  return result;
}

uint64_t sub_2378C8570(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D0);
  v38 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(_QWORD *)(v5 + 48) + 24 * v20;
    v31 = *(_QWORD *)v29;
    v30 = *(_QWORD *)(v29 + 8);
    v32 = *(_BYTE *)(v29 + 16);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      sub_23787A11C(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_BYTE *)(v29 + 16));
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = *(_QWORD *)(v7 + 48) + 24 * v17;
    *(_QWORD *)v18 = v31;
    *(_QWORD *)(v18 + 8) = v30;
    *(_BYTE *)(v18 + 16) = v32;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C88BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EBC0);
  v39 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v36 = v2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  swift_retain();
  v12 = 0;
LABEL_8:
  if (v10)
  {
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v16 = v15 | (v12 << 6);
    goto LABEL_22;
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
    goto LABEL_43;
  if (v17 >= v37)
  {
    swift_release();
    v3 = v36;
    v18 = (_QWORD *)(v5 + 64);
    if ((v39 & 1) != 0)
    {
LABEL_38:
      v34 = 1 << *(_BYTE *)(v5 + 32);
      if (v34 >= 64)
        bzero(v18, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      else
        *v18 = -1 << v34;
      *(_QWORD *)(v5 + 16) = 0;
    }
  }
  else
  {
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v12;
    if (v19)
      goto LABEL_21;
    v12 = v17 + 1;
    if (v17 + 1 >= v37)
      goto LABEL_35;
    v19 = *(_QWORD *)(v38 + 8 * v12);
    if (v19)
    {
LABEL_21:
      v10 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_22:
      v21 = *(_QWORD *)(v5 + 48) + 24 * v16;
      v22 = *(_QWORD *)v21;
      v23 = *(unsigned __int8 *)(v21 + 8);
      v24 = *(_QWORD *)(v21 + 16);
      v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      if ((v39 & 1) == 0)
        swift_retain();
      sub_237A885D4();
      if (v23)
        __asm { BR              X9 }
      sub_237A882E0();
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_237A885E0();
      v26 = sub_237A88610();
      v27 = -1 << *(_BYTE *)(v7 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v31 || (v30 & 1) == 0)
      {
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
        if (v33 != -1)
        {
          v13 = __clz(__rbit64(~v33)) + (v29 << 6);
LABEL_7:
          *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          v14 = *(_QWORD *)(v7 + 48) + 24 * v13;
          *(_QWORD *)v14 = v22;
          *(_BYTE *)(v14 + 8) = 0;
          *(_QWORD *)(v14 + 16) = v24;
          *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13) = v25;
          ++*(_QWORD *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x2378C8D00);
    }
    v20 = v17 + 2;
    if (v20 < v37)
    {
      v19 = *(_QWORD *)(v38 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          v12 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_44;
          if (v12 >= v37)
            goto LABEL_35;
          v19 = *(_QWORD *)(v38 + 8 * v12);
          ++v20;
          if (v19)
            goto LABEL_21;
        }
      }
      v12 = v20;
      goto LABEL_21;
    }
LABEL_35:
    swift_release();
    v3 = v36;
    if ((v39 & 1) != 0)
      goto LABEL_38;
  }
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C8D1C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
  v36 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2378C9030(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44[72];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C0);
  v36 = a2;
  v37 = (_QWORD *)sub_237A880DC();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1 << *(_BYTE *)(v4 + 32);
    v34 = (_QWORD *)(v4 + 64);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v4 + 64);
    v33 = (unint64_t)(v5 + 63) >> 6;
    result = swift_retain();
    v9 = 0;
    v35 = v4;
    while (1)
    {
      if (v7)
      {
        v38 = (v7 - 1) & v7;
        v39 = v9;
        v11 = __clz(__rbit64(v7)) | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v12 >= v33)
          goto LABEL_23;
        v13 = v34[v12];
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v33)
            goto LABEL_23;
          v13 = v34[v14];
          if (!v13)
          {
            v15 = v9 + 3;
            if (v9 + 3 >= v33)
            {
LABEL_23:
              swift_release();
              if ((v36 & 1) != 0)
              {
                v31 = 1 << *(_BYTE *)(v4 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v13 = v34[v15];
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_30;
                if (v14 >= v33)
                  goto LABEL_23;
                v13 = v34[v14];
                ++v15;
                if (v13)
                  goto LABEL_20;
              }
            }
            v14 = v9 + 3;
          }
        }
LABEL_20:
        v38 = (v13 - 1) & v13;
        v39 = v14;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      v16 = *(_QWORD *)(v4 + 56);
      v17 = *(_QWORD *)(v4 + 48) + 112 * v11;
      v18 = *(_QWORD *)v17;
      v19 = *(_OWORD *)(v17 + 8);
      v20 = *(_QWORD *)(v17 + 24);
      v21 = *(_QWORD *)(v17 + 32);
      v23 = *(_QWORD *)(v17 + 40);
      v22 = *(_QWORD *)(v17 + 48);
      v24 = *(_QWORD *)(v17 + 56);
      v25 = *(_BYTE *)(v17 + 64);
      v26 = *(_QWORD *)(v17 + 72);
      v27 = *(_QWORD *)(v17 + 80);
      v28 = *(_QWORD *)(v17 + 88);
      v29 = *(_BYTE *)(v17 + 96);
      v30 = *(_QWORD *)(v17 + 104);
      v41 = v26;
      v42 = *(_QWORD *)(v16 + 8 * v11);
      v43 = v19;
      v40 = *(_QWORD *)v17;
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23787978C(v20, v21, v23, v22, v24, v25);
        sub_2378797D4(v27);
        swift_retain();
        swift_bridgeObjectRetain();
        v18 = v40;
        v26 = v41;
        v19 = v43;
      }
      v45 = v18;
      v46 = v19;
      v47 = v20;
      v48 = v21;
      v49 = v23;
      v50 = v22;
      v51 = v24;
      v52 = v25;
      v53 = v26;
      v54 = v27;
      v55 = v28;
      v56 = v29;
      v57 = v30;
      sub_237A885D4();
      ColorSet.hash(into:)((uint64_t)v44);
      sub_237A88610();
      result = sub_237A87EB4();
      *(_QWORD *)((char *)v37 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v10 = v37[6] + 112 * result;
      *(_QWORD *)v10 = v40;
      *(_OWORD *)(v10 + 8) = v43;
      *(_QWORD *)(v10 + 24) = v20;
      *(_QWORD *)(v10 + 32) = v21;
      *(_QWORD *)(v10 + 40) = v23;
      *(_QWORD *)(v10 + 48) = v22;
      *(_QWORD *)(v10 + 56) = v24;
      *(_BYTE *)(v10 + 64) = v25;
      *(_QWORD *)(v10 + 72) = v41;
      *(_QWORD *)(v10 + 80) = v27;
      v9 = v39;
      *(_QWORD *)(v10 + 88) = v28;
      *(_BYTE *)(v10 + 96) = v29;
      *(_QWORD *)(v10 + 104) = v30;
      *(_QWORD *)(v37[7] + 8 * result) = v42;
      ++v37[2];
      v4 = v35;
      v7 = v38;
    }
  }
  result = swift_release();
  *v32 = v37;
  return result;
}

uint64_t sub_2378C93CC(uint64_t a1, char a2)
{
  return sub_2378C9848(a1, a2, &qword_2568202A8);
}

uint64_t sub_2378C93D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[25];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202A0);
  v48 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v46 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v45 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v18 = v17 | (v13 << 6);
        if ((v48 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v26 >= v45)
          goto LABEL_33;
        v27 = v46[v26];
        ++v13;
        if (!v27)
        {
          v13 = v26 + 1;
          if (v26 + 1 >= v45)
            goto LABEL_33;
          v27 = v46[v13];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v45)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v48 & 1) != 0)
              {
                v44 = 1 << *(_BYTE *)(v5 + 32);
                if (v44 >= 64)
                  bzero(v46, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v44;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v27 = v46[v28];
            if (!v27)
            {
              while (1)
              {
                v13 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_40;
                if (v13 >= v45)
                  goto LABEL_33;
                v27 = v46[v13];
                ++v28;
                if (v27)
                  goto LABEL_22;
              }
            }
            v13 = v28;
          }
        }
LABEL_22:
        v10 = (v27 - 1) & v27;
        v18 = __clz(__rbit64(v27)) + (v13 << 6);
        if ((v48 & 1) != 0)
        {
LABEL_10:
          v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
          v20 = *v19;
          v21 = v19[1];
          v22 = *(_QWORD *)(v5 + 56) + (v18 << 7);
          v23 = *(_QWORD *)(v22 + 8);
          v24 = *(_QWORD *)(v22 + 24);
          v51 = *(_QWORD *)(v22 + 32);
          v52 = *(_QWORD *)(v22 + 16);
          v60 = *(_QWORD *)(v22 + 48);
          v58 = *(_QWORD *)(v22 + 56);
          v55 = *(_QWORD *)(v22 + 64);
          v53 = *(_QWORD *)(v22 + 40);
          v54 = *(_QWORD *)(v22 + 72);
          v49 = *(_QWORD *)v22;
          v50 = *(_QWORD *)(v22 + 80);
          v25 = *(_BYTE *)(v22 + 88);
          v57 = *(_OWORD *)(v22 + 96);
          v56 = *(_QWORD *)(v22 + 112);
          v59 = *(_BYTE *)(v22 + 120);
          goto LABEL_24;
        }
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v29;
      v21 = v29[1];
      v30 = (__int128 *)(*(_QWORD *)(v5 + 56) + (v18 << 7));
      v32 = v30[2];
      v31 = v30[3];
      v33 = *v30;
      v62 = v30[1];
      v63 = v32;
      v61 = v33;
      v35 = v30[5];
      v34 = v30[6];
      v36 = v30[4];
      *(_OWORD *)&v67[9] = *(__int128 *)((char *)v30 + 105);
      v66 = v35;
      *(_OWORD *)v67 = v34;
      v64 = v31;
      v65 = v36;
      v59 = v67[24];
      v56 = *(_QWORD *)&v67[16];
      v57 = v34;
      v58 = *((_QWORD *)&v31 + 1);
      v60 = v31;
      v54 = *((_QWORD *)&v36 + 1);
      v55 = v36;
      v25 = BYTE8(v35);
      v24 = *((_QWORD *)&v62 + 1);
      v50 = v35;
      v51 = v63;
      v23 = *((_QWORD *)&v61 + 1);
      v52 = v62;
      v53 = *((_QWORD *)&v63 + 1);
      v49 = v61;
      swift_bridgeObjectRetain();
      sub_23787AC58((uint64_t)&v61);
LABEL_24:
      sub_237A885D4();
      swift_bridgeObjectRetain();
      sub_237A87710();
      swift_bridgeObjectRelease();
      result = sub_237A88610();
      v37 = -1 << *(_BYTE *)(v7 + 32);
      v38 = result & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v11 + 8 * v39);
        }
        while (v43 == -1);
        v14 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v20;
      v15[1] = v21;
      v16 = *(_QWORD *)(v7 + 56) + (v14 << 7);
      *(_QWORD *)v16 = v49;
      *(_QWORD *)(v16 + 8) = v23;
      *(_QWORD *)(v16 + 16) = v52;
      *(_QWORD *)(v16 + 24) = v24;
      *(_QWORD *)(v16 + 32) = v51;
      *(_QWORD *)(v16 + 40) = v53;
      *(_QWORD *)(v16 + 48) = v60;
      *(_QWORD *)(v16 + 56) = v58;
      *(_QWORD *)(v16 + 64) = v55;
      *(_QWORD *)(v16 + 72) = v54;
      *(_QWORD *)(v16 + 80) = v50;
      *(_BYTE *)(v16 + 88) = v25;
      *(_OWORD *)(v16 + 96) = v57;
      *(_QWORD *)(v16 + 112) = v56;
      *(_BYTE *)(v16 + 120) = v59;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378C983C(uint64_t a1, char a2)
{
  return sub_2378C9848(a1, a2, &qword_2568203E8);
}

uint64_t sub_2378C9848(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_237A880DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2378C9B68(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for Component();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203A8);
  v43 = a2;
  v9 = sub_237A880DC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_2378D0858(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    }
    else
    {
      sub_2378D07D8(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_2378D0858((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_2378C9EE8(uint64_t a1, int a2)
{
  return sub_2378CA698(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel, &qword_256820270);
}

uint64_t sub_2378C9EFC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820390);
  v40 = a2;
  v9 = sub_237A880DC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_34;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v37)
              goto LABEL_34;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v39 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v40 & 1) != 0)
      sub_237870370(v26, (uint64_t)v7, &qword_25681E8E0);
    else
      sub_2378BBFE0(v26, (uint64_t)v7, &qword_25681E8E0);
    v27 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v20);
    sub_237A885D4();
    sub_237A86594();
    sub_2378D057C(&qword_256820278, MEMORY[0x24BDCEA88]);
    sub_237A876D4();
    result = sub_237A88610();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_237870370((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, &qword_25681E8E0);
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_2378CA298(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int64_t v50;
  uint64_t v51;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203A0);
  v49 = a2;
  v8 = sub_237A880DC();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_41;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v46 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v44 = v2;
  v45 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  v47 = v7;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      v21 = v51;
      goto LABEL_22;
    }
    v22 = v16 + 1;
    v21 = v51;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v45)
      break;
    v23 = v46;
    v24 = v46[v22];
    ++v16;
    if (!v24)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v45)
        goto LABEL_34;
      v24 = v46[v16];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v46[v25];
        if (!v24)
        {
          while (1)
          {
            v16 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v16 >= v45)
              goto LABEL_34;
            v24 = v46[v16];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v16 = v25;
      }
    }
LABEL_21:
    v13 = (v24 - 1) & v24;
    v20 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v48 + 72);
    v27 = *(_QWORD *)(v7 + 48) + v26 * v20;
    v28 = 32 * v20;
    v50 = v16;
    if ((v49 & 1) != 0)
    {
      sub_237870370(v27, v21, &qword_25681E8E0);
      v29 = *(_QWORD *)(v7 + 56) + v28;
      v30 = *(_QWORD *)v29;
      v31 = *(_QWORD *)(v29 + 8);
      v32 = *(_QWORD *)(v29 + 16);
      v33 = *(_BYTE *)(v29 + 24);
    }
    else
    {
      sub_2378BBFE0(v27, v21, &qword_25681E8E0);
      v34 = *(_QWORD *)(v7 + 56) + v28;
      v30 = *(_QWORD *)v34;
      v31 = *(_QWORD *)(v34 + 8);
      v32 = *(_QWORD *)(v34 + 16);
      v33 = *(_BYTE *)(v34 + 24);
      swift_retain();
      sub_2378D0664(v31, v32, v33);
    }
    sub_237A885D4();
    sub_237A86594();
    sub_2378D057C(&qword_256820278, MEMORY[0x24BDCEA88]);
    sub_237A876D4();
    result = sub_237A88610();
    v35 = -1 << *(_BYTE *)(v9 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v14 + 8 * v37);
      }
      while (v41 == -1);
      v17 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = sub_237870370(v51, *(_QWORD *)(v9 + 48) + v26 * v17, &qword_25681E8E0);
    v18 = *(_QWORD *)(v9 + 56) + 32 * v17;
    *(_QWORD *)v18 = v30;
    *(_QWORD *)(v18 + 8) = v31;
    *(_QWORD *)(v18 + 16) = v32;
    *(_BYTE *)(v18 + 24) = v33;
    ++*(_QWORD *)(v9 + 16);
    v7 = v47;
    v16 = v50;
  }
  swift_release();
  v3 = v44;
  v23 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v7 + 32);
  if (v42 >= 64)
    bzero(v23, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v42;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_2378CA684(uint64_t a1, int a2)
{
  return sub_2378CA698(a1, a2, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, &qword_256820398);
}

uint64_t sub_2378CA698(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD);

  v6 = v4;
  v49 = a3;
  v8 = a3(0);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t)&v41 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v14 = sub_237A880DC();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_41;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v44 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v42 = v4;
  v43 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  result = swift_retain();
  v22 = 0;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43)
      break;
    v27 = v44;
    v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v43)
        goto LABEL_34;
      v28 = v44[v22];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          v6 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            v22 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v22 >= v43)
              goto LABEL_34;
            v28 = v44[v22];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v22 = v29;
      }
    }
LABEL_21:
    v19 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v46 + 72);
    v31 = *(_QWORD *)(v13 + 48) + v30 * v25;
    if ((v47 & 1) != 0)
    {
      sub_237870370(v31, (uint64_t)v12, &qword_25681E8E0);
      v32 = *(_QWORD *)(v45 + 72);
      sub_2378D0858(*(_QWORD *)(v13 + 56) + v32 * v25, v48, v49);
    }
    else
    {
      sub_2378BBFE0(v31, (uint64_t)v12, &qword_25681E8E0);
      v32 = *(_QWORD *)(v45 + 72);
      sub_2378D07D8(*(_QWORD *)(v13 + 56) + v32 * v25, v48, v49);
    }
    sub_237A885D4();
    sub_237A86594();
    sub_2378D057C(&qword_256820278, MEMORY[0x24BDCEA88]);
    sub_237A876D4();
    result = sub_237A88610();
    v33 = -1 << *(_BYTE *)(v15 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_237870370((uint64_t)v12, *(_QWORD *)(v15 + 48) + v30 * v23, &qword_25681E8E0);
    result = sub_2378D0858(v48, *(_QWORD *)(v15 + 56) + v32 * v23, v49);
    ++*(_QWORD *)(v15 + 16);
  }
  swift_release();
  v6 = v42;
  v27 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v13 + 32);
  if (v40 >= 64)
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v40;
  *(_QWORD *)(v13 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v15;
  return result;
}

uint64_t sub_2378CAAAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820388);
  v42 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CADD0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820380);
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v32 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_31;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v33;
          if ((v32 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_237A885D4();
    sub_237A87710();
    swift_bridgeObjectRelease();
    result = sub_237A88610();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v15) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((v32 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CB0D4(uint64_t a1, char a2)
{
  return sub_2378CBE10(a1, a2, &qword_256820370);
}

uint64_t sub_2378CB0E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820378);
  v45 = a2;
  v50 = sub_237A880DC();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v43 = (_QWORD *)(v5 + 64);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v41 = v2;
  v42 = (unint64_t)(v6 + 63) >> 6;
  v9 = v50 + 64;
  result = swift_retain();
  v11 = 0;
  v44 = v5;
  while (1)
  {
    if (v8)
    {
      v46 = (v8 - 1) & v8;
      v47 = v11;
      v20 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    v24 = v11 + 1;
    if (!v23)
    {
      v24 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_33;
      v23 = v43[v24];
      if (!v23)
      {
        v25 = v11 + 3;
        if (v11 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            v24 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v24 >= v42)
              goto LABEL_33;
            v23 = v43[v24];
            ++v25;
            if (v23)
              goto LABEL_30;
          }
        }
        v24 = v11 + 3;
      }
    }
LABEL_30:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v30;
    v32 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + (v20 << 6);
    v34 = *(void **)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v36 = *(void **)(v33 + 16);
    v37 = *(_QWORD *)(v33 + 24);
    v38 = *(_BYTE *)(v33 + 32);
    v39 = *(_QWORD *)(v33 + 48);
    v49 = *(_QWORD *)(v33 + 40);
    v48 = *(_BYTE *)(v33 + 56);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_237870090(v34, v35, v36, v37, v38);
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v12 = -1 << *(_BYTE *)(v50 + 32);
    v13 = result & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      v16 = v38;
      v17 = v34;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v12) >> 6;
      v16 = v38;
      v17 = v34;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v14 == v27;
        if (v14 == v27)
          v14 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v14);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(_QWORD *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v18 = (_QWORD *)(*(_QWORD *)(v50 + 48) + 16 * v15);
    *v18 = v31;
    v18[1] = v32;
    v19 = *(_QWORD *)(v50 + 56) + (v15 << 6);
    *(_QWORD *)v19 = v17;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v36;
    *(_QWORD *)(v19 + 24) = v37;
    *(_BYTE *)(v19 + 32) = v16;
    *(_QWORD *)(v19 + 40) = v49;
    *(_QWORD *)(v19 + 48) = v39;
    *(_BYTE *)(v19 + 56) = v48;
    ++*(_QWORD *)(v50 + 16);
    v5 = v44;
    v8 = v46;
    v11 = v47;
  }
  swift_release();
  v3 = v41;
  v22 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v50;
  return result;
}

uint64_t sub_2378CB490(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820368);
  v42 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v43 = *(_QWORD *)(v33 + 16);
    v36 = *(_BYTE *)(v33 + 24);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v43;
    *(_BYTE *)(v19 + 24) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CB7CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820260);
  v38 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v36)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_35;
      v20 = *(_QWORD *)(v37 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_35:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_44;
            if (v13 >= v36)
              goto LABEL_35;
            v20 = *(_QWORD *)(v37 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 48) + 32 * v17;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = *(unsigned __int8 *)(v22 + 24);
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v17);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_237A885D4();
    sub_237A885EC();
    if (!v26)
      sub_237A885E0();
    sub_237A87710();
    result = sub_237A88610();
    v27 = -1 << *(_BYTE *)(v7 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 32 * v14;
    *(_QWORD *)v15 = v24;
    *(_QWORD *)(v15 + 8) = v23;
    *(_QWORD *)(v15 + 16) = v25;
    *(_BYTE *)(v15 + 24) = v26;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v14) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v19 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CBB20(uint64_t a1, char a2)
{
  return sub_2378CC7D8(a1, a2, &qword_2568202B0);
}

uint64_t sub_2378CBB2C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D8);
  v37 = a2;
  result = sub_237A880DC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v8 = 0;
    v36 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v9;
    v33 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v35)
          goto LABEL_33;
        v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_33;
          v21 = v36[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero(v36, 8 * v35);
              else
                *v36 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v21 = v36[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_QWORD *)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = *(_BYTE *)(v28 + 16);
      if ((v37 & 1) == 0)
        sub_23787A11C(v29, v30, v31);
      result = sub_237A885C8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_QWORD *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_BYTE *)(v17 + 16) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2378CBE04(uint64_t a1, char a2)
{
  return sub_2378CBE10(a1, a2, &qword_256820288);
}

uint64_t sub_2378CBE10(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_237A880DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2378CC118(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C8);
  v40 = a2;
  result = sub_237A880DC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v3;
    v8 = 0;
    v38 = (uint64_t *)(v5 + 64);
    v39 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v9;
    v35 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v20 >= v37)
          goto LABEL_33;
        v21 = v38[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v37)
            goto LABEL_33;
          v21 = v38[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              if (v35 >= 64)
                bzero(v38, 8 * v37);
              else
                *v38 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v37)
                  goto LABEL_33;
                v21 = v38[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 48 * v19;
      v29 = *(void **)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = *(void **)(v28 + 16);
      v32 = *(_QWORD *)(v28 + 24);
      v33 = *(_BYTE *)(v28 + 32);
      v41 = *(_QWORD *)(v28 + 40);
      if ((v40 & 1) == 0)
        sub_237870090(v29, v30, v31, v32, v33);
      result = sub_237A885C8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 48 * v16;
      *(_QWORD *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_QWORD *)(v17 + 16) = v31;
      *(_QWORD *)(v17 + 24) = v32;
      *(_BYTE *)(v17 + 32) = v33;
      *(_QWORD *)(v17 + 40) = v41;
      ++*(_QWORD *)(v7 + 16);
      v5 = v39;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2378CC414(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820290);
  v45 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v43 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v44 = v5;
  while (1)
  {
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v47 = v13;
      v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    v24 = v13 + 1;
    if (!v23)
    {
      v24 = v13 + 2;
      if (v13 + 2 >= v42)
        goto LABEL_33;
      v23 = v43[v24];
      if (!v23)
      {
        v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            v24 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v24 >= v42)
              goto LABEL_33;
            v23 = v43[v24];
            ++v25;
            if (v23)
              goto LABEL_30;
          }
        }
        v24 = v13 + 3;
      }
    }
LABEL_30:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v5 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v32 = *v31;
    v33 = v31[1];
    v34 = (uint64_t *)(v30 + 88 * v20);
    v35 = v34[1];
    v36 = v34[3];
    v37 = v34[5];
    v52 = v34[4];
    v53 = v34[2];
    v38 = v34[7];
    v51 = v34[6];
    v50 = *((_BYTE *)v34 + 64);
    v39 = v34[10];
    v48 = *v34;
    v49 = v34[9];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v33;
    v19 = *(_QWORD *)(v7 + 56) + 88 * v17;
    *(_QWORD *)v19 = v48;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v53;
    *(_QWORD *)(v19 + 24) = v36;
    *(_QWORD *)(v19 + 32) = v52;
    *(_QWORD *)(v19 + 40) = v37;
    *(_QWORD *)(v19 + 48) = v51;
    *(_QWORD *)(v19 + 56) = v38;
    *(_BYTE *)(v19 + 64) = v50;
    *(_QWORD *)(v19 + 72) = v49;
    *(_QWORD *)(v19 + 80) = v39;
    ++*(_QWORD *)(v7 + 16);
    v5 = v44;
    v10 = v46;
    v13 = v47;
  }
  swift_release();
  v3 = v41;
  v22 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CC7CC(uint64_t a1, char a2)
{
  return sub_2378CC7D8(a1, a2, &qword_256820280);
}

uint64_t sub_2378CC7D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_237A880DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2378CCAE8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F0);
  v37 = a2;
  v6 = sub_237A880DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_237A885D4();
    sub_237A87710();
    result = sub_237A88610();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2378CCDEC(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_237870734(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2378CCE58(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, _QWORD *a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 16 * result);
  *v8 = a2;
  v8[1] = a3;
  v9 = a8[7] + 32 * result;
  *(_QWORD *)v9 = a4;
  *(_QWORD *)(v9 + 8) = a5;
  *(_BYTE *)(v9 + 16) = a6 & 1;
  *(_QWORD *)(v9 + 24) = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

unint64_t sub_2378CCEB0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 88 * result;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_BYTE *)(v6 + 80) = *(_BYTE *)(a4 + 80);
  v8 = *(_OWORD *)(a4 + 64);
  v9 = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v9;
  v10 = a5[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a5[2] = v12;
  return result;
}

unint64_t sub_2378CCF1C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 72 * result;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v7;
  v8 = (_QWORD *)(a5[7] + 16 * result);
  *v8 = a3;
  v8[1] = a4;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

unint64_t sub_2378CCF84(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + (result << 7));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)((char *)a4 + 105);
  v9 = a4[6];
  v10 = a4[4];
  v6[5] = a4[5];
  v6[6] = v9;
  v6[4] = v10;
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
  return result;
}

unint64_t sub_2378CCFF4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_2378CD03C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2378CD1B4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
}

uint64_t sub_2378CD048(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  result = sub_237870370(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, &qword_25681E8E0);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2378CD0E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a7[6];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  result = sub_237870370(a2, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, &qword_25681E8E0);
  v17 = a7[7] + 32 * a1;
  *(_QWORD *)v17 = a3;
  *(_QWORD *)(v17 + 8) = a4;
  *(_QWORD *)(v17 + 16) = a5;
  *(_BYTE *)(v17 + 24) = a6;
  v18 = a7[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a7[2] = v20;
  return result;
}

uint64_t sub_2378CD1A8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2378CD1B4(a1, a2, a3, a4, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_2378CD1B4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  sub_237870370(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, &qword_25681E8E0);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_2378D0858(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

unint64_t sub_2378CD278(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2 & 1;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_2378CD2C0(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + (result << 6));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  *(_OWORD *)((char *)v6 + 41) = *(_OWORD *)((char *)a4 + 41);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2378CD320(unint64_t result, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  v4 = (_OWORD *)(a4[7] + 48 * result);
  v5 = a3[1];
  *v4 = *a3;
  v4[1] = v5;
  v4[2] = a3[2];
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_QWORD *sub_2378CD378(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203F8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  v5 = sub_237976604(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2378CD470(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203B8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 120);
  v5 = sub_23797686C((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2378CD564(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820268);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_237976B9C((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2378CD648(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_237976DA8((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2378CD738(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1C0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_237976FB4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2378CD81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820298);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 + 95;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * (v5 >> 7);
  v6 = sub_2379771B0(&v8, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_2378707DC();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2378CD900(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5)
          goto LABEL_17;
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568202B8);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378CDA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  v5 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v4;
  sub_23787A11C(v3, v2, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2378CDAC4(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_237A8840C() & 1;
}

uint64_t sub_2378CDB18(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  char v31;
  char *v32;
  char v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;

  v4 = __dst;
  v5 = __src;
  v6 = a2 - __src;
  v7 = (a2 - __src) / 56;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v46 = __src;
  v45 = __dst;
  if (v7 >= v9)
  {
    if (v8 >= -55)
    {
      if (__dst != a2 || &a2[56 * v9] <= __dst)
      {
        v18 = a2;
        memmove(__dst, a2, 56 * v9);
        a2 = v18;
      }
      v19 = &v4[56 * v9];
      v44 = v19;
      v46 = a2;
      if (v5 < a2 && v8 >= 56)
      {
        v20 = a3 - 56;
        v21 = a2;
        v37 = v4;
        do
        {
          v39 = a2;
          v35 = v19;
          v19 -= 56;
          v21 -= 56;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v42 == v40 && v43 == v41)
            v31 = 0;
          else
            v31 = sub_237A8840C();
          v22 = (char *)(v20 + 56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
          {
            v23 = v37;
            v19 = v35;
            if (v22 != v39 || v20 >= (unint64_t)v39)
            {
              v24 = *(_OWORD *)v21;
              v25 = *((_OWORD *)v21 + 1);
              v26 = *((_OWORD *)v21 + 2);
              *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
              *(_OWORD *)(v20 + 16) = v25;
              *(_OWORD *)(v20 + 32) = v26;
              *(_OWORD *)v20 = v24;
            }
            v46 = v21;
          }
          else
          {
            v44 = v19;
            v23 = v37;
            v21 = v39;
            if (v22 < v35 || v20 >= (unint64_t)v35 || v22 != v35)
            {
              v27 = *(_OWORD *)v19;
              v28 = *((_OWORD *)v19 + 1);
              v29 = *((_OWORD *)v19 + 2);
              *(_QWORD *)(v20 + 48) = *((_QWORD *)v19 + 6);
              *(_OWORD *)(v20 + 16) = v28;
              *(_OWORD *)(v20 + 32) = v29;
              *(_OWORD *)v20 = v27;
            }
          }
          if (v21 <= v5)
            break;
          v20 -= 56;
          a2 = v21;
        }
        while (v19 > v23);
      }
      goto LABEL_45;
    }
  }
  else if (v6 >= -55)
  {
    if (__dst != __src || &__src[56 * v7] <= __dst)
    {
      v10 = a2;
      memmove(__dst, __src, 56 * v7);
      a2 = v10;
    }
    v32 = &v4[56 * v7];
    v44 = v32;
    if ((unint64_t)a2 < a3 && v6 >= 56)
    {
      do
      {
        v36 = v4;
        v38 = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        if (v42 == v40 && v43 == v41)
          v34 = 0;
        else
          v34 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) != 0)
        {
          v11 = v38 + 56;
          if (v5 < v38 || v5 >= v11 || v5 != v38)
          {
            v12 = *(_OWORD *)v38;
            v13 = *((_OWORD *)v38 + 1);
            v14 = *((_OWORD *)v38 + 2);
            *((_QWORD *)v5 + 6) = *((_QWORD *)v38 + 6);
            *((_OWORD *)v5 + 1) = v13;
            *((_OWORD *)v5 + 2) = v14;
            *(_OWORD *)v5 = v12;
          }
        }
        else
        {
          if (v5 != v4)
          {
            v15 = *(_OWORD *)v4;
            v16 = *((_OWORD *)v4 + 1);
            v17 = *((_OWORD *)v4 + 2);
            *((_QWORD *)v5 + 6) = *((_QWORD *)v4 + 6);
            *((_OWORD *)v5 + 1) = v16;
            *((_OWORD *)v5 + 2) = v17;
            *(_OWORD *)v5 = v15;
          }
          v4 += 56;
          v45 = v36 + 56;
          v11 = v38;
        }
        v5 += 56;
        if (v4 >= v32)
          break;
        a2 = v11;
      }
      while ((unint64_t)v11 < a3);
      v46 = v5;
    }
LABEL_45:
    sub_237959B44((void **)&v46, (const void **)&v45, &v44);
    return 1;
  }
  swift_release();
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t sub_2378CE09C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v16 = result;
  if (a3 != a2)
  {
    v18 = *a4;
    v4 = (_QWORD *)(*a4 + 56 * a3 + 48);
LABEL_5:
    v19 = a3;
    v20 = v16;
    v17 = v4;
    while (1)
    {
      v5 = v4 - 13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v23 == v21 && v24 == v22)
        v6 = 0;
      else
        v6 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
      {
LABEL_4:
        a3 = v19 + 1;
        v4 = v17 + 7;
        if (v19 + 1 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v18)
        break;
      v7 = *(v4 - 7);
      *(v4 - 7) = *v4;
      v4 -= 7;
      v8 = v4[1];
      v9 = v4[2];
      v11 = v4[3];
      v10 = v4[4];
      v13 = v4[5];
      v12 = v4[6];
      v14 = *((_OWORD *)v5 + 1);
      *(_OWORD *)(v5 + 7) = *(_OWORD *)v5;
      *(_OWORD *)(v5 + 9) = v14;
      *(_OWORD *)(v5 + 11) = *((_OWORD *)v5 + 2);
      v5[13] = v7;
      *(v4 - 6) = v8;
      *(v4 - 5) = v9;
      *(v4 - 4) = v11;
      *(v4 - 3) = v10;
      *(v4 - 2) = v13;
      *(v4 - 1) = v12;
      if (v19 == ++v20)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2378CE2E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t result;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;

  v3 = a1[1];
  swift_retain_n();
  v4 = sub_237A882D4();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_149;
    if (v3)
    {
      swift_retain();
      sub_2378CE09C(0, v3, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_157;
  v112 = v3;
  v107 = v4;
  v115 = v1;
  v104 = a1;
  if (v3 < 2)
  {
    v114 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v106 = MEMORY[0x24BEE4AF8];
    if (v3 == 1)
      goto LABEL_13;
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_113:
    v110 = v9;
    if (v11 >= 2)
    {
      v95 = *v104;
      do
      {
        v96 = v11 - 2;
        if (v11 < 2)
          goto LABEL_144;
        if (!v95)
          goto LABEL_156;
        v97 = *(_QWORD *)&v110[16 * v96 + 32];
        v98 = *(_QWORD *)&v110[16 * v11 + 24];
        v99 = (char *)(v95 + 56 * *(_QWORD *)&v110[16 * v11 + 16]);
        swift_retain();
        sub_2378CDB18((char *)(v95 + 56 * v97), v99, v95 + 56 * v98, v114);
        if (v115)
          goto LABEL_110;
        swift_release();
        if (v98 < v97)
          goto LABEL_145;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v110 = sub_237959E0C((uint64_t)v110);
        if (v96 >= *((_QWORD *)v110 + 2))
          goto LABEL_146;
        v100 = &v110[16 * v96 + 32];
        *(_QWORD *)v100 = v97;
        *((_QWORD *)v100 + 1) = v98;
        v101 = *((_QWORD *)v110 + 2);
        if (v11 > v101)
          goto LABEL_147;
        memmove(&v110[16 * v11 + 16], &v110[16 * v11 + 32], 16 * (v101 - v11));
        *((_QWORD *)v110 + 2) = v101 - 1;
        v11 = v101 - 1;
      }
      while (v101 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v106 + 16) = 0;
LABEL_125:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v6 = v5 >> 1;
  v7 = sub_237A87ADC();
  *(_QWORD *)(v7 + 16) = v6;
  v106 = v7;
  v114 = (char *)(v7 + 32);
LABEL_13:
  v8 = 0;
  v105 = *a1 + 80;
  v103 = *a1 + 48;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v10 = v112;
  v116 = *a1;
  while (1)
  {
    v12 = v8;
    v13 = v8 + 1;
    v111 = v8;
    if (v8 + 1 < v10)
    {
      v109 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v125 == v123 && v126 == v124)
        v121 = 0;
      else
        v121 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v111;
      v10 = v112;
      v13 = v111 + 2;
      if (v111 + 2 < v112)
      {
        v14 = v105 + 56 * v111;
        while (1)
        {
          v117 = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v125 != v123)
            goto LABEL_26;
          if (v126 == v124)
            v122 = 0;
          else
LABEL_26:
            v122 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (((v121 ^ v122) & 1) != 0)
            break;
          ++v13;
          v14 += 56;
          v10 = v112;
          if (v112 == v117 + 1)
          {
            v13 = v112;
            goto LABEL_32;
          }
        }
        v10 = v112;
LABEL_32:
        v12 = v111;
      }
      v9 = v109;
      if ((v121 & 1) != 0)
      {
        if (v13 < v12)
          goto LABEL_150;
        if (v12 < v13)
        {
          v15 = 56 * v13;
          v16 = v13;
          v17 = v12;
          v18 = 56 * v12;
          do
          {
            if (v17 != --v16)
            {
              if (!v116)
                goto LABEL_155;
              v19 = v116 + v18;
              v20 = *(_QWORD *)(v116 + v18);
              v21 = v116 + v15;
              v22 = *(_OWORD *)(v116 + v18 + 24);
              v23 = *(_QWORD *)(v116 + v18 + 40);
              v24 = *(_QWORD *)(v116 + v18 + 48);
              v25 = *(_OWORD *)(v116 + v18 + 8);
              v26 = *(_OWORD *)(v116 + v15 - 40);
              v27 = *(_OWORD *)(v116 + v15 - 24);
              v28 = *(_OWORD *)(v116 + v15 - 56);
              *(_QWORD *)(v19 + 48) = *(_QWORD *)(v116 + v15 - 8);
              *(_OWORD *)(v19 + 16) = v26;
              *(_OWORD *)(v19 + 32) = v27;
              *(_OWORD *)v19 = v28;
              *(_QWORD *)(v21 - 56) = v20;
              *(_OWORD *)(v21 - 48) = v25;
              *(_OWORD *)(v21 - 32) = v22;
              *(_QWORD *)(v21 - 16) = v23;
              *(_QWORD *)(v21 - 8) = v24;
            }
            ++v17;
            v15 -= 56;
            v18 += 56;
          }
          while (v17 < v16);
        }
      }
    }
    if (v13 < v10)
    {
      if (__OFSUB__(v13, v12))
        goto LABEL_148;
      if (v13 - v12 < v107)
        break;
    }
LABEL_63:
    if (v13 < v12)
      goto LABEL_143;
    v119 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_237959A4C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v42 = *((_QWORD *)v9 + 2);
    v41 = *((_QWORD *)v9 + 3);
    v11 = v42 + 1;
    v43 = v116;
    if (v42 >= v41 >> 1)
    {
      v9 = sub_237959A4C((char *)(v41 > 1), v42 + 1, 1, v9);
      v43 = v116;
    }
    *((_QWORD *)v9 + 2) = v11;
    v44 = v9 + 32;
    v45 = &v9[16 * v42 + 32];
    *(_QWORD *)v45 = v12;
    *((_QWORD *)v45 + 1) = v119;
    if (v42)
    {
      while (1)
      {
        v46 = v11 - 1;
        if (v11 >= 4)
        {
          v51 = &v44[16 * v11];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_132;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_133;
          v58 = v11 - 2;
          v59 = &v44[16 * v11 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_135;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_138;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_142;
            v74 = v49 < v84;
            goto LABEL_100;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v75 = *((_QWORD *)v9 + 4);
            v76 = *((_QWORD *)v9 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_94;
          }
          v48 = *((_QWORD *)v9 + 4);
          v47 = *((_QWORD *)v9 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_134;
        v58 = v11 - 2;
        v64 = &v44[16 * v11 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_137;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_140;
        if (__OFADD__(v68, v73))
          goto LABEL_141;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_100:
          if (v74)
            v46 = v58;
          goto LABEL_102;
        }
LABEL_94:
        if ((v69 & 1) != 0)
          goto LABEL_136;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_139;
        if (v80 < v68)
          goto LABEL_15;
LABEL_102:
        v85 = v46 - 1;
        if (v46 - 1 >= v11)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v43)
          goto LABEL_154;
        v86 = &v44[16 * v85];
        v87 = *(_QWORD *)v86;
        v88 = v46;
        v89 = &v44[16 * v46];
        v90 = *((_QWORD *)v89 + 1);
        v91 = (char *)(v43 + 56 * *(_QWORD *)v86);
        v127 = (char *)(v43 + 56 * *(_QWORD *)v89);
        v92 = v43 + 56 * v90;
        swift_retain();
        sub_2378CDB18(v91, v127, v92, v114);
        if (v115)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          swift_release();
          *(_QWORD *)(v106 + 16) = 0;
          goto LABEL_125;
        }
        swift_release();
        if (v90 < v87)
          goto LABEL_129;
        if (v88 > *((_QWORD *)v9 + 2))
          goto LABEL_130;
        v93 = v88;
        *(_QWORD *)v86 = v87;
        v44 = v9 + 32;
        *(_QWORD *)&v9[16 * v85 + 40] = v90;
        v94 = *((_QWORD *)v9 + 2);
        if (v93 >= v94)
          goto LABEL_131;
        v11 = v94 - 1;
        memmove(v89, v89 + 16, 16 * (v94 - 1 - v93));
        *((_QWORD *)v9 + 2) = v94 - 1;
        v43 = v116;
        if (v94 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v10 = v112;
    v8 = v119;
    if (v119 >= v112)
      goto LABEL_113;
  }
  if (__OFADD__(v12, v107))
    goto LABEL_151;
  if (v12 + v107 >= v10)
    v29 = v10;
  else
    v29 = v12 + v107;
  if (v29 >= v12)
  {
    if (v13 != v29)
    {
      v108 = v29;
      v30 = (_QWORD *)(v103 + 56 * v13);
      do
      {
        v118 = v13;
        v113 = v30;
        do
        {
          v120 = v12;
          v31 = v30 - 13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v125 == v123 && v126 == v124)
            v32 = 0;
          else
            v32 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0)
            break;
          if (!v116)
            goto LABEL_153;
          v33 = *(v30 - 7);
          *(v30 - 7) = *v30;
          v30 -= 7;
          v34 = v30[1];
          v35 = v30[2];
          v37 = v30[3];
          v36 = v30[4];
          v39 = v30[5];
          v38 = v30[6];
          v40 = *((_OWORD *)v31 + 1);
          *(_OWORD *)(v31 + 7) = *(_OWORD *)v31;
          *(_OWORD *)(v31 + 9) = v40;
          *(_OWORD *)(v31 + 11) = *((_OWORD *)v31 + 2);
          v31[13] = v33;
          *(v30 - 6) = v34;
          *(v30 - 5) = v35;
          *(v30 - 4) = v37;
          *(v30 - 3) = v36;
          v12 = v120 + 1;
          *(v30 - 2) = v39;
          *(v30 - 1) = v38;
        }
        while (v13 != v120 + 1);
        ++v13;
        v30 = v113 + 7;
        v12 = v111;
      }
      while (v118 + 1 != v108);
      v13 = v108;
    }
    goto LABEL_63;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  swift_release_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  swift_release_n();
  __break(1u);
LABEL_157:
  swift_release_n();
  result = sub_237A880A0();
  __break(1u);
  return result;
}

uint64_t sub_2378CEEB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];

  v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237959E20(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  swift_retain();
  sub_2378CE2E4(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_2378CEF50(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t (*v20)();
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v4 = type metadata accessor for Layout();
  MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - v8;
  result = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = *(unsigned __int8 *)(v7 + 80);
    v13 = *(_QWORD *)(v7 + 72);
    v24 = v2;
    v25 = (v12 + 32) & ~v12;
    v14 = a1 + v25;
    v15 = MEMORY[0x24BEE4AF8];
    v16 = type metadata accessor for Layout;
    while (1)
    {
      sub_2378D07D8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))v16);
      v17 = &v9[*(int *)(v4 + 28)];
      v18 = *((_QWORD *)v17 + 1);
      if (v18)
      {
        v19 = *(_QWORD *)v17 == *v26 && v18 == v26[1];
        if (v19 || (sub_237A8840C() & 1) != 0)
        {
          v20 = v16;
          sub_2378D0858((uint64_t)v9, v27, (uint64_t (*)(_QWORD))v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_2379D6498(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v28;
          v22 = *(_QWORD *)(v28 + 16);
          v21 = *(_QWORD *)(v28 + 24);
          if (v22 >= v21 >> 1)
          {
            sub_2379D6498(v21 > 1, v22 + 1, 1);
            v15 = v28;
          }
          *(_QWORD *)(v15 + 16) = v22 + 1;
          v23 = v15 + v25 + v22 * v13;
          v16 = v20;
          sub_2378D0858(v27, v23, (uint64_t (*)(_QWORD))v20);
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_2378D081C((uint64_t)v9);
LABEL_5:
      v14 += v13;
      if (!--v11)
        return v28;
    }
  }
  return result;
}

_QWORD *sub_2378CF130(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];

  v3 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203D0);
  result = (_QWORD *)sub_237A880D0();
  v5 = 0;
  v47 = result;
  v48 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  v44 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v43 = v3;
  v45 = (unint64_t)(v7 + 63) >> 6;
  v46 = result + 8;
  if ((v8 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v10 | (v5 << 6); ; i = __clz(__rbit64(v13)) + (v5 << 6))
  {
    v15 = *(_QWORD *)(v48 + 48) + 24 * i;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v18 = *(_BYTE *)(v15 + 16);
    v19 = (uint64_t *)(*(_QWORD *)(v48 + 56) + 24 * i);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    if (v21 < 0)
    {
      v52 = v19[1];
      v34 = v3;
      v35 = v17;
      v36 = v17;
      v37 = v16;
      v38 = v18;
      sub_23787A11C(v35, v16, v18);
      sub_23787D104(v20, v52);
      result = v47;
    }
    else
    {
      v51 = v9;
      v53 = v5;
      v23 = *(_QWORD *)(v3 + 16);
      v49 = v16;
      v50 = v18;
      sub_23787A11C(v17, v16, v18);
      if (!v23)
        goto LABEL_40;
      LOBYTE(v56[0]) = v21 & 1;
      v24 = sub_2378D2D10(v20, v21 & 1, v22);
      if ((v25 & 1) == 0)
        goto LABEL_40;
      v55 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568203F0);
      v26 = (_QWORD *)sub_237A880E8();
      v27 = sub_2378D31FC(0.0);
      if ((v28 & 1) != 0)
        goto LABEL_36;
      v26[(v27 >> 6) + 8] |= 1 << v27;
      v29 = 8 * v27;
      *(_QWORD *)(v26[6] + v29) = 0;
      *(_QWORD *)(v26[7] + v29) = v55;
      v30 = v26[2];
      v12 = __OFADD__(v30, 1);
      v31 = v30 + 1;
      if (v12)
        goto LABEL_37;
      v26[2] = v31;
      swift_retain_n();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC70);
      swift_arrayDestroy();
      v32 = sub_2379BA160((uint64_t)v26);
      swift_release();
      if (*(_QWORD *)(v32 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
        v33 = sub_237A880E8();
      }
      else
      {
        v33 = MEMORY[0x24BEE4B00];
      }
      v56[0] = v33;
      v39 = (_QWORD *)swift_bridgeObjectRetain();
      sub_2379BD4D4(v39, 1, v56);
      if (v54)
        goto LABEL_41;
      swift_release();
      swift_bridgeObjectRelease();
      sub_23787D110(v20, v21);
      v20 = v56[0];
      result = v47;
      v34 = v43;
      v9 = v51;
      v5 = v53;
      v38 = v50;
      v36 = v17;
      v37 = v49;
    }
    *(_QWORD *)((char *)v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v40 = result[6] + 24 * i;
    *(_QWORD *)v40 = v36;
    *(_QWORD *)(v40 + 8) = v37;
    *(_BYTE *)(v40 + 16) = v38;
    *(_QWORD *)(result[7] + 8 * i) = v20;
    v41 = result[2];
    v12 = __OFADD__(v41, 1);
    v42 = v41 + 1;
    if (v12)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    result[2] = v42;
    v3 = v34;
    if (v9)
      goto LABEL_4;
LABEL_5:
    v12 = __OFADD__(v5++, 1);
    if (v12)
      goto LABEL_38;
    if (v5 >= v45)
      return result;
    v13 = *(_QWORD *)(v44 + 8 * v5);
    if (!v13)
      break;
LABEL_15:
    v9 = (v13 - 1) & v13;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v45)
    return result;
  v13 = *(_QWORD *)(v44 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v5 + 2;
  if (v5 + 2 >= v45)
    return result;
  v13 = *(_QWORD *)(v44 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v5 + 3;
  if (v5 + 3 >= v45)
    return result;
  v13 = *(_QWORD *)(v44 + 8 * v14);
  if (v13)
  {
LABEL_14:
    v5 = v14;
    goto LABEL_15;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v45)
      return result;
    v13 = *(_QWORD *)(v44 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_15;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A880AC();
  __break(1u);
LABEL_41:
  result = (_QWORD *)swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_2378CF610(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t i;
  BOOL v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[8];
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v28 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v29 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v34 = (v7 - 1) & v7;
  v35 = v9;
  for (i = __clz(__rbit64(v7)) | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    v15 = *(_QWORD *)(a2 + 48) + 112 * i;
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v20 = *(_QWORD *)(v15 + 48);
    v21 = *(_QWORD *)(v15 + 56);
    v22 = *(_BYTE *)(v15 + 64);
    v23 = *(_QWORD *)(v15 + 72);
    v24 = *(_QWORD *)(v15 + 80);
    v25 = *(_QWORD *)(v15 + 88);
    v26 = *(_BYTE *)(v15 + 96);
    v27 = *(_QWORD *)(v15 + 104);
    v36 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * i);
    v37 = *(_QWORD *)(v15 + 8);
    v39[0] = *(_QWORD *)v15;
    v39[1] = v37;
    v39[2] = v17;
    v39[3] = v16;
    v39[4] = v19;
    v39[5] = v18;
    v39[6] = v20;
    v39[7] = v21;
    v40 = v22;
    v41 = v23;
    v42 = v24;
    v43 = v25;
    v44 = v26;
    v45 = v27;
    v46 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v16, v19, v18, v20, v21, v22);
    sub_2378797D4(v24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2378C1A48(&v47, (uint64_t)v39, a3, a4, a5);
    if (v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v16, v19, v18, v20, v21, v22);
      sub_23787A14C(v24);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237876B84(v16, v19, v18, v20, v21, v22);
    sub_23787A14C(v24);
    swift_bridgeObjectRelease();
    result = swift_release();
    v7 = v34;
    v9 = v35;
    if (v34)
      goto LABEL_4;
LABEL_5:
    v11 = __OFADD__(v9, 1);
    v12 = v9 + 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v29)
      goto LABEL_26;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    if (!v13)
      break;
LABEL_17:
    v34 = (v13 - 1) & v13;
    v35 = v12;
  }
  v14 = v12 + 1;
  if (v12 + 1 >= v29)
    goto LABEL_26;
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v12 + 2;
  if (v12 + 2 >= v29)
    goto LABEL_26;
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v12 + 3;
  if (v12 + 3 >= v29)
    goto LABEL_26;
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v12 + 4;
  if (v12 + 4 >= v29)
  {
LABEL_26:
    swift_release();
    return v47;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v12 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v12 >= v29)
      goto LABEL_26;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2378CF92C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2378CF97C()
{
  unint64_t result;

  result = qword_2568201B0;
  if (!qword_2568201B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90DA4, &type metadata for ResolvedTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568201B0);
  }
  return result;
}

unint64_t sub_2378CF9C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568201C0;
  if (!qword_2568201C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201B8);
    v2[0] = sub_23789E470(&qword_25681EA08, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = sub_2378CFA44();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568201C0);
  }
  return result;
}

unint64_t sub_2378CFA44()
{
  unint64_t result;

  result = qword_2568201C8;
  if (!qword_2568201C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette, &type metadata for Theme.Palette);
    atomic_store(result, (unint64_t *)&qword_2568201C8);
  }
  return result;
}

unint64_t sub_2378CFA88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568201D8;
  if (!qword_2568201D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201D0);
    v2[0] = sub_23789E470(&qword_25681F340, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = sub_2378CFB0C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568201D8);
  }
  return result;
}

unint64_t sub_2378CFB0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2568201E0;
  if (!qword_2568201E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201E8);
    v2 = sub_23789E470(&qword_25681EA08, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v3 = MEMORY[0x24BEE04E0];
    v4[0] = v2;
    v4[1] = sub_23787A9E0(&qword_25681EA10, (uint64_t (*)(void))sub_23787AB8C, (uint64_t (*)(void))sub_23787ABD0, MEMORY[0x24BEE04E0]);
    result = MEMORY[0x23B81FA98](v3, v1, v4);
    atomic_store(result, (unint64_t *)&qword_2568201E0);
  }
  return result;
}

uint64_t sub_2378CFBB8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23789E470(&qword_25681F340, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v9[1] = sub_23789E470(a3, a4, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378CFC58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820218;
  if (!qword_256820218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201B8);
    v2[0] = sub_23789E470(&qword_25681E9D0, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = sub_2378CFCDC();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820218);
  }
  return result;
}

unint64_t sub_2378CFCDC()
{
  unint64_t result;

  result = qword_256820220;
  if (!qword_256820220)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.Palette, &type metadata for Theme.Palette);
    atomic_store(result, (unint64_t *)&qword_256820220);
  }
  return result;
}

unint64_t sub_2378CFD20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256820228;
  if (!qword_256820228)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201D0);
    v2[0] = sub_23789E470(&qword_25681F380, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v2[1] = sub_2378CFDA4();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256820228);
  }
  return result;
}

unint64_t sub_2378CFDA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_256820230;
  if (!qword_256820230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568201E8);
    v2 = sub_23789E470(&qword_25681E9D0, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v3 = MEMORY[0x24BEE04C0];
    v4[0] = v2;
    v4[1] = sub_23787A9E0(&qword_25681E9E0, (uint64_t (*)(void))sub_23787AA5C, (uint64_t (*)(void))sub_23787AAA0, MEMORY[0x24BEE04C0]);
    result = MEMORY[0x23B81FA98](v3, v1, v4);
    atomic_store(result, (unint64_t *)&qword_256820230);
  }
  return result;
}

uint64_t sub_2378CFE50(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23789E470(&qword_25681F380, &qword_25681E8E8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v9[1] = sub_23789E470(a3, a4, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

double sub_2378CFEF0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t destroy for ResolvedTheme()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ResolvedTheme(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ResolvedTheme(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for ResolvedTheme(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentFont(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentFont(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedTheme()
{
  return &type metadata for ResolvedTheme;
}

uint64_t storeEnumTagSinglePayload for ResolvedTheme.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2378D01D8 + 4 * byte_237A90C41[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2378D020C + 4 * byte_237A90C3C[v4]))();
}

uint64_t sub_2378D020C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378D0214(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378D021CLL);
  return result;
}

uint64_t sub_2378D0228(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378D0230);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2378D0234(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378D023C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResolvedTheme.CodingKeys()
{
  return &type metadata for ResolvedTheme.CodingKeys;
}

unint64_t sub_2378D025C()
{
  unint64_t result;

  result = qword_256820248;
  if (!qword_256820248)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90D7C, &type metadata for ResolvedTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820248);
  }
  return result;
}

unint64_t sub_2378D02A4()
{
  unint64_t result;

  result = qword_256820250;
  if (!qword_256820250)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90CEC, &type metadata for ResolvedTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820250);
  }
  return result;
}

unint64_t sub_2378D02EC()
{
  unint64_t result;

  result = qword_256820258;
  if (!qword_256820258)
  {
    result = MEMORY[0x23B81FA98](&unk_237A90D14, &type metadata for ResolvedTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820258);
  }
  return result;
}

uint64_t sub_2378D0330(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73657474656C6170 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xEC00000073656C79 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB0190 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB01B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2378D04F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  _QWORD v5[2];

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5[0] = sub_2378D057C(&qword_256820318, MEMORY[0x24BDCEAA8]);
    v5[1] = sub_2378D057C(&qword_256820320, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v4, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2378D057C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_237A86594();
    result = MEMORY[0x23B81FA98](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378D05BC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256820358;
  if (!qword_256820358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820348);
    v2 = sub_2378D0620();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256820358);
  }
  return result;
}

unint64_t sub_2378D0620()
{
  unint64_t result;

  result = qword_256820360;
  if (!qword_256820360)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper, &type metadata for Wallpaper);
    atomic_store(result, (unint64_t *)&qword_256820360);
  }
  return result;
}

uint64_t sub_2378D0664(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2378D0678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_237876B84(v8, v2, v3, v4, v5, v6);
  sub_23787A14C(v9);
  return a1;
}

uint64_t sub_2378D0738()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237876B84(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  if (*(_QWORD *)(v0 + 96))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

double sub_2378D0794(__int128 *a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_237880084(a1, (__int128 *)(v1 + 16)).n128_u64[0];
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2378D07D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2378D081C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Layout();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2378D0858(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.directory(at:creatingIntermediateDirectories:)(Swift::String at, Swift::Bool creatingIntermediateDirectories)
{
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  Swift::Bool v22;
  id v23;
  char v24;
  objc_class *v25;
  NSFileWrapper_optional result;

  v4 = (void *)sub_237A877F4();
  v5 = objc_msgSend(v4, sel_pathComponents);

  v6 = sub_237A87A94();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v2;
    v9 = (uint64_t *)(v6 + 40);
    while (1)
    {
      v11 = *(v9 - 1);
      v12 = *v9;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v8, sel_isDirectory))
      {
LABEL_13:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v13 = objc_msgSend(v8, sel_fileWrappers);
      if (v13)
      {
        v14 = v13;
        sub_23786A1FC();
        v15 = sub_237A87668();

        if (*(_QWORD *)(v15 + 16))
        {
          swift_bridgeObjectRetain();
          v16 = sub_2378D449C(v11, v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
          if ((v17 & 1) != 0)
          {
            v10 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v16);

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            v8 = v10;
            goto LABEL_4;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      if (!creatingIntermediateDirectories)
        goto LABEL_13;
      v18 = objc_allocWithZone(MEMORY[0x24BDD1598]);
      sub_23786A1FC();
      v19 = (void *)sub_237A87650();
      v20 = objc_msgSend(v18, sel_initDirectoryWithFileWrappers_, v19);

      v21 = (void *)sub_237A877F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setPreferredFilename_, v21);

      v8 = v20;
LABEL_4:
      v9 += 2;
      if (!--v7)
        goto LABEL_15;
    }
  }
  v8 = v2;
LABEL_15:
  swift_bridgeObjectRelease();
  if (!objc_msgSend(v8, sel_isDirectory))
  {

    goto LABEL_19;
  }
  sub_23786A1FC();
  v23 = v8;
  v24 = sub_237A87DD0();

  if ((v24 & 1) != 0)
  {

LABEL_19:
    v23 = 0;
  }
  v25 = (objc_class *)v23;
  result.value.super.isa = v25;
  result.is_nil = v22;
  return result;
}

Swift::Void __swiftcall NSFileWrapper.remove(named:)(Swift::String named)
{
  void *v1;
  void *v2;
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;

  v2 = v1;
  object = named._object;
  countAndFlagsBits = named._countAndFlagsBits;
  v5 = objc_msgSend(v2, sel_fileWrappers);
  if (v5)
  {
    v6 = v5;
    sub_23786A1FC();
    v7 = sub_237A87668();

    if (*(_QWORD *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_2378D449C(countAndFlagsBits, (uint64_t)object, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
      if ((v9 & 1) != 0)
      {
        v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v2, sel_removeFileWrapper_, v10);

        return;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_2378D0C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820420);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820428);
  v6 = sub_237A880E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v12, (uint64_t)v5, &qword_256820420);
    result = sub_2378D2F84((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_237A88088();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_2378BF370(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D0E08(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820260);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 64);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 4);
    v6 = *((_QWORD *)v4 - 3);
    v7 = *((_QWORD *)v4 - 2);
    v8 = *((_BYTE *)v4 - 8);
    v15 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_2378D2FD4(v5, v6, v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = v2[6] + 32 * result;
    *(_QWORD *)v11 = v5;
    *(_QWORD *)(v11 + 8) = v6;
    *(_QWORD *)(v11 + 16) = v7;
    *(_BYTE *)(v11 + 24) = v8;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D0F4C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820480);
  v2 = sub_237A880E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v6, (uint64_t)&v15, &qword_256820488);
    v7 = v15;
    v8 = v16;
    result = sub_2378D449C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2378BF370(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1094(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820408);
  v2 = sub_237A880E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v6, (uint64_t)&v15, &qword_256820490);
    v7 = v15;
    v8 = v16;
    result = sub_2378D449C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_237870734(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D11DC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820450);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_2378D3080((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D12E4(uint64_t a1)
{
  return sub_2378D131C(a1, &qword_256820440, &qword_256820448, (uint64_t (*)(uint64_t))sub_2378D3080);
}

unint64_t sub_2378D1300(uint64_t a1)
{
  return sub_2378D131C(a1, &qword_256820430, &qword_256820438, (uint64_t (*)(uint64_t))sub_2378D310C);
}

unint64_t sub_2378D131C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_237A880E8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_2378BF370(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1444(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820370);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_2378D449C(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1568(uint64_t a1)
{
  return sub_2378D1698(a1, &qword_256820470, &qword_256820270, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
}

unint64_t sub_2378D1584(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820380);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    result = sub_2378D32B8(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D167C(uint64_t a1)
{
  return sub_2378D1698(a1, &qword_256820468, &qword_256820398, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

unint64_t sub_2378D1698(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_237A880E8();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v17, (uint64_t)v10, v30);
    result = sub_2378D3230((uint64_t)v10);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    sub_2378D4AF4((uint64_t)v10, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21);
    v24 = v12[7];
    v25 = a4(0);
    result = sub_2378D0858(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v21, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820460);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820390);
  v6 = sub_237A880E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v12, (uint64_t)v5, &qword_256820460);
    result = sub_2378D3230((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    result = sub_2378D4AF4((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_BYTE *)(v7[7] + v16) = v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D19D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820388);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2378D449C(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1B10(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202A8);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2378D2F04(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1C28(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202A0);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = *(_OWORD *)(a1 + 144);
  v37 = *(_OWORD *)(a1 + 128);
  v38[0] = v4;
  *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)(a1 + 153);
  v5 = *(_OWORD *)(a1 + 48);
  v31 = *(_OWORD *)(a1 + 32);
  v32 = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v33 = *(_OWORD *)(a1 + 64);
  v34 = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v35 = *(_OWORD *)(a1 + 96);
  v36 = v7;
  v9 = *((_QWORD *)&v31 + 1);
  v8 = v31;
  sub_2378D43E0((uint64_t)&v31);
  result = sub_2378D2F04(v8, v9);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v12 = 176;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    v14 = (_OWORD *)(v2[7] + (result << 7));
    v15 = v32;
    v16 = v33;
    v17 = v35;
    v14[2] = v34;
    v14[3] = v17;
    *v14 = v15;
    v14[1] = v16;
    v18 = v36;
    v19 = v37;
    v20 = v38[0];
    *(_OWORD *)((char *)v14 + 105) = *(_OWORD *)((char *)v38 + 9);
    v14[5] = v19;
    v14[6] = v20;
    v14[4] = v18;
    v21 = v2[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      break;
    v2[2] = v23;
    if (!--v3)
      goto LABEL_9;
    v24 = v12 + 144;
    v25 = (__int128 *)(a1 + v12);
    v26 = v25[7];
    v37 = v25[6];
    v38[0] = v26;
    *(_OWORD *)((char *)v38 + 9) = *(__int128 *)((char *)v25 + 121);
    v27 = v25[1];
    v31 = *v25;
    v32 = v27;
    v28 = v25[3];
    v33 = v25[2];
    v34 = v28;
    v29 = v25[5];
    v35 = v25[4];
    v36 = v29;
    v9 = *((_QWORD *)&v31 + 1);
    v8 = v31;
    sub_2378D43E0((uint64_t)&v31);
    result = sub_2378D2F04(v8, v9);
    v12 = v24;
    if ((v30 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_2378D1DE0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820400);
  v2 = (_QWORD *)sub_237A880E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 72);
  while (1)
  {
    v5 = *(v4 - 5);
    v6 = *(v4 - 4);
    v7 = *(v4 - 3);
    v8 = *(v4 - 2);
    v9 = *((_BYTE *)v4 - 8);
    v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2378D449C(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = v2[7] + 32 * result;
    *(_QWORD *)v14 = v7;
    *(_QWORD *)(v14 + 8) = v8;
    *(_BYTE *)(v14 + 16) = v9;
    *(_QWORD *)(v14 + 24) = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D1F24(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820418);
  v2 = sub_237A880E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = a1 + 48;
  while (1)
  {
    v22 = v4;
    v6 = *(_QWORD *)(v5 - 16);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(void **)v5;
    v9 = *(_QWORD *)(v5 + 8);
    v10 = *(void **)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    v12 = *(_BYTE *)(v5 + 32);
    v13 = *(_QWORD *)(v5 + 40);
    v23 = *(_BYTE *)(v5 + 48);
    swift_bridgeObjectRetain();
    sub_237870090(v8, v9, v10, v11, v12);
    result = sub_2378D449C(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + 56 * result;
    *(_QWORD *)v17 = v8;
    *(_QWORD *)(v17 + 8) = v9;
    *(_QWORD *)(v17 + 16) = v10;
    *(_QWORD *)(v17 + 24) = v11;
    *(_BYTE *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v13;
    *(_BYTE *)(v17 + 48) = v23;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 72;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2378D20A4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820290);
  v2 = sub_237A880E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (_QWORD *)(a1 + 128);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 12);
    v7 = *(v5 - 11);
    v8 = *(v5 - 10);
    v9 = *(v5 - 9);
    v10 = *(v5 - 7);
    v11 = *(v5 - 5);
    v26 = *(v5 - 6);
    v27 = *(v5 - 8);
    v12 = *(v5 - 3);
    v25 = *(v5 - 4);
    v24 = *((_BYTE *)v5 - 16);
    v13 = *v5;
    v23 = *(v5 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2378D449C(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + 88 * result;
    *(_QWORD *)v17 = v8;
    *(_QWORD *)(v17 + 8) = v9;
    *(_QWORD *)(v17 + 16) = v27;
    *(_QWORD *)(v17 + 24) = v10;
    *(_QWORD *)(v17 + 32) = v26;
    *(_QWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v25;
    *(_QWORD *)(v17 + 56) = v12;
    *(_BYTE *)(v17 + 64) = v24;
    *(_QWORD *)(v17 + 72) = v23;
    *(_QWORD *)(v17 + 80) = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 13;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.child(at:)(Swift::String at)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  char v16;
  Swift::Bool v17;
  objc_class *v18;
  NSFileWrapper_optional result;

  v2 = (void *)sub_237A877F4();
  v3 = objc_msgSend(v2, sel_pathComponents);

  v4 = sub_237A87A94();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v1;
    v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v6, sel_isDirectory))
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      v10 = objc_msgSend(v6, sel_fileWrappers);
      if (!v10)
        break;
      v11 = v10;
      sub_23786A1FC();
      v12 = sub_237A87668();

      if (!*(_QWORD *)(v12 + 16)
        || (v13 = sub_2378D449C(v9, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674), (v14 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      v7 += 2;
      v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v6 = v15;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v1;
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23786A1FC();
    v6 = v15;
    v16 = sub_237A87DD0();

    if ((v16 & 1) == 0)
      goto LABEL_18;
  }

LABEL_17:
  v6 = 0;
LABEL_18:
  v18 = (objc_class *)v6;
  result.value.super.isa = v18;
  result.is_nil = v17;
  return result;
}

uint64_t NSFileWrapper.addRegularFile(withContents:fileName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  char v16;
  char v17;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD v23[2];

  v5 = v4;
  v23[1] = a2;
  v8 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_237A8633C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v5, sel_fileWrappers);
  if (v13)
  {
    v14 = v13;
    v23[0] = v10;
    sub_23786A1FC();
    v15 = sub_237A87668();

    if (*(_QWORD *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      sub_2378D449C(a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_237A86318();
        sub_2378D4298(MEMORY[0x24BEE4AF8]);
        sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
        sub_237A864D4();
        sub_237A862D0();
        (*(void (**)(char *, uint64_t))(v23[0] + 8))(v12, v9);
        return swift_willThrow();
      }
    }
    swift_bridgeObjectRelease();
  }
  v19 = (void *)sub_237A86534();
  v20 = (void *)sub_237A877F4();
  v21 = objc_msgSend(v5, sel_addRegularFileWithContents_preferredFilename_, v19, v20);

  v22 = sub_237A87818();
  return v22;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.fileWrapper(named:)(Swift::String named)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  Swift::Bool v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  objc_class *v12;
  NSFileWrapper_optional result;

  object = named._object;
  countAndFlagsBits = named._countAndFlagsBits;
  v4 = objc_msgSend(v1, sel_fileWrappers);
  if (v4)
  {
    v6 = v4;
    sub_23786A1FC();
    v7 = sub_237A87668();

    if (*(_QWORD *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_2378D449C(countAndFlagsBits, (uint64_t)object, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
      if ((v9 & 1) != 0)
      {
        v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
        v11 = v10;
      }
      else
      {
        v10 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v12 = (objc_class *)v10;
  result.value.super.isa = v12;
  result.is_nil = v5;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSFileWrapper.checkedAddFileWrapper(_:)(NSFileWrapper a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_237A8633C();
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = MEMORY[0x24BDAC7A8](v6).n128_u64[0];
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -[objc_class preferredFilename](a1.super.isa, sel_preferredFilename, v8);
  if (!v11)
  {
    sub_237A86324();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    goto LABEL_7;
  }
  v12 = v11;
  v36 = v2;
  v33 = v7;
  v13 = sub_237A87818();
  v15 = v14;

  v16 = objc_msgSend(v3, sel_fileWrappers);
  if (!v16)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v3, sel_addFileWrapper_, a1.super.isa);
    v28 = sub_237A87818();
    v30 = v29;

    v25 = v28;
    v26 = v30;
    goto LABEL_10;
  }
  v17 = v16;
  sub_23786A1FC();
  v18 = sub_237A87668();

  if (!*(_QWORD *)(v18 + 16)
    || (swift_bridgeObjectRetain(),
        sub_2378D449C(v13, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674),
        v20 = v19,
        swift_bridgeObjectRelease(),
        (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_237A86318();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820410);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = sub_237A87818();
  *(_QWORD *)(inited + 40) = v22;
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  v34 = 0x2220656C6946;
  v35 = 0xE600000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  v23 = v34;
  v24 = v35;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v23;
  *(_QWORD *)(inited + 56) = v24;
  sub_2378D0F4C(inited);
  v7 = v33;
LABEL_7:
  sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
  sub_237A864D4();
  sub_237A862D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v25 = swift_willThrow();
LABEL_10:
  result._object = v26;
  result._countAndFlagsBits = v25;
  return result;
}

void NSFileWrapper.data(contentsOf:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_237A8633C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v3, sel_fileWrappers);
  if (!v11)
    goto LABEL_9;
  v12 = v11;
  sub_23786A1FC();
  v13 = sub_237A87668();

  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    sub_237A862DC();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRetain();
  v14 = sub_2378D449C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v16 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v16, sel_regularFileContents);
  if (v17)
  {
    v18 = v17;
    sub_237A86540();

  }
  else
  {
    sub_237A8630C();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_willThrow();
  }

}

unint64_t sub_2378D2D10(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;

  sub_237A885D4();
  ColorSet.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  v6 = sub_237A88610();
  return sub_2378D3338(a1, a2 & 1, a3, v6);
}

uint64_t sub_2378D2DB8(uint64_t a1, uint64_t a2)
{
  return sub_2378D449C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D3674);
}

unint64_t sub_2378D2DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_237A885D4();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v6 = sub_237A88610();
  return sub_2378D3754(a1, a2, a3, v6);
}

unint64_t sub_2378D2E58(__int128 *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v7[72];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = a1[5];
  v12 = a1[4];
  v13 = v2;
  v14 = a1[6];
  v3 = a1[1];
  v8 = *a1;
  v9 = v3;
  v4 = a1[3];
  v10 = a1[2];
  v11 = v4;
  sub_237A885D4();
  ColorSet.hash(into:)((uint64_t)v7);
  v5 = sub_237A88610();
  return sub_2378D38D0(a1, v5);
}

unint64_t sub_2378D2ED4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A885C8();
  return sub_2378D39E4(a1, v2);
}

unint64_t sub_2378D2F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v4 = sub_237A88610();
  return sub_2378D3674(a1, a2, v4);
}

unint64_t sub_2378D2F84(uint64_t a1)
{
  uint64_t v2;

  sub_237A88088();
  v2 = sub_237A876C8();
  return sub_2378D3A80(a1, v2);
}

unint64_t sub_2378D2FD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8;
  uint64_t v9;

  v8 = a4 & 1;
  sub_237A885D4();
  sub_237A885EC();
  if ((a4 & 1) == 0)
    sub_237A885E0();
  sub_237A87710();
  v9 = sub_237A88610();
  return sub_2378D3BA8(a1, a2, a3, v8, v9);
}

unint64_t sub_2378D3080(uint64_t a1)
{
  uint64_t v2;

  sub_237A87818();
  sub_237A885D4();
  sub_237A87710();
  v2 = sub_237A88610();
  swift_bridgeObjectRelease();
  return sub_2378D3C94(a1, v2);
}

unint64_t sub_2378D310C(uint64_t a1)
{
  uint64_t v2;

  sub_237A87818();
  sub_237A885D4();
  sub_237A87710();
  v2 = sub_237A88610();
  swift_bridgeObjectRelease();
  return sub_2378D3C94(a1, v2);
}

unint64_t sub_2378D318C(uint64_t *a1)
{
  uint64_t v2;

  sub_237A885D4();
  AvocadoWidgetInfo.hash(into:)();
  v2 = sub_237A88610();
  return sub_2378D3E08(a1, v2);
}

unint64_t sub_2378D31FC(double a1)
{
  uint64_t v2;

  v2 = sub_237A885C8();
  return sub_2378D3FC0(v2, a1);
}

unint64_t sub_2378D3230(uint64_t a1)
{
  uint64_t v2;

  sub_237A885D4();
  sub_237A86594();
  sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_237A876D4();
  v2 = sub_237A88610();
  return sub_2378D4058(a1, v2);
}

unint64_t sub_2378D32B8(char a1)
{
  uint64_t v2;

  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v2 = sub_237A88610();
  return sub_2378D419C(a1 & 1, v2);
}

unint64_t sub_2378D3338(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v19;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v19 = ~v5;
    while (1)
    {
      v9 = *(_QWORD *)(v4 + 48) + 24 * v6;
      v10 = *(_QWORD *)(v9 + 16);
      if (*(_BYTE *)(v9 + 8) == 1)
        __asm { BR              X9 }
      v11 = sub_237A882E0();
      v13 = v12;
      if ((a2 & 1) != 0)
        __asm { BR              X8 }
      if (v11 == sub_237A882E0() && v13 == v14)
        break;
      v16 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_4;
LABEL_5:
      v6 = (v6 + 1) & v19;
      if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return v6;
    }
    swift_bridgeObjectRelease_n();
LABEL_4:
    if (v10 == a3)
      return v6;
    goto LABEL_5;
  }
  return v6;
}

unint64_t sub_2378D3674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_237A8840C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_237A8840C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2378D3754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = v4;
    v21 = ~v6;
    while (1)
    {
      v9 = *(_QWORD *)(v8 + 48) + 24 * v7;
      v10 = *(_QWORD *)v9;
      v11 = *(_QWORD *)(v9 + 8);
      v12 = *(_BYTE *)(v9 + 16);
      sub_23787A11C(*(_QWORD *)v9, v11, v12);
      Theme.ColorID.rawValue.getter();
      v14 = v13;
      v16 = v15;
      Theme.ColorID.rawValue.getter();
      if (v14 == v18 && v16 == v17)
        break;
      v19 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787A134(v10, v11, v12);
      if ((v19 & 1) == 0)
      {
        v7 = (v7 + 1) & v21;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
          continue;
      }
      return v7;
    }
    swift_bridgeObjectRelease_n();
    sub_23787A134(v10, v11, v12);
  }
  return v7;
}

unint64_t sub_2378D38D0(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _OWORD v26[7];

  v3 = a1[5];
  v26[4] = a1[4];
  v26[5] = v3;
  v26[6] = a1[6];
  v4 = a1[1];
  v26[0] = *a1;
  v26[1] = v4;
  v5 = a1[3];
  v26[2] = a1[2];
  v26[3] = v5;
  v6 = -1 << *(_BYTE *)(v2 + 32);
  v7 = a2 & ~v6;
  if (((*(_QWORD *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    do
    {
      v9 = *(_QWORD *)(v2 + 48) + 112 * v7;
      v10 = *(_QWORD *)(v9 + 56);
      v11 = *(_BYTE *)(v9 + 64);
      v12 = *(_QWORD *)(v9 + 88);
      v13 = *(_BYTE *)(v9 + 96);
      v14 = *(_QWORD *)(v9 + 104);
      v16 = *(_QWORD *)v9;
      v17 = *(_OWORD *)(v9 + 8);
      v18 = *(_OWORD *)(v9 + 24);
      v19 = *(_OWORD *)(v9 + 40);
      v20 = v10;
      v21 = v11;
      v22 = *(_OWORD *)(v9 + 72);
      v23 = v12;
      v24 = v13;
      v25 = v14;
      if ((_s14CarPlayAssetUI8ColorSetV2eeoiySbAC_ACtFZ_0((uint64_t)&v16, (uint64_t)v26) & 1) != 0)
        break;
      v7 = (v7 + 1) & v8;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_2378D39E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2378D3A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_237A88088();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_237A877DC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_2378D3BA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = v14 + 32 * v8;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_BYTE *)(v15 + 24);
      v18 = *(_QWORD *)v15 == a1 && *(_QWORD *)(v15 + 8) == a2;
      if (v18 || (sub_237A8840C() & 1) != 0)
      {
        if ((v17 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return v8;
        }
        else if ((a4 & 1) == 0 && v16 == a3)
        {
          return v8;
        }
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_2378D3C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_237A87818();
    v8 = v7;
    if (v6 == sub_237A87818() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_237A87818();
          v15 = v14;
          if (v13 == sub_237A87818() && v15 == v16)
            break;
          v18 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2378D3E08(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  v27 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v25 = ~v3;
    v26 = *(_QWORD *)(v2 + 48);
    v5 = *a1;
    v6 = a1[1];
    v28 = a1[3];
    v29 = a1[2];
    v23 = a1[5];
    v24 = a1[4];
    v22 = *((unsigned __int8 *)a1 + 48);
    v20 = a1[7];
    v21 = a1[8];
    do
    {
      v7 = v26 + 72 * v4;
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      v11 = *(_QWORD *)(v7 + 32);
      v10 = *(_QWORD *)(v7 + 40);
      v12 = *(unsigned __int8 *)(v7 + 48);
      v13 = *(_QWORD *)(v7 + 56);
      v14 = *(_QWORD *)(v7 + 64);
      v15 = *(_QWORD *)v7 == v5 && *(_QWORD *)(v7 + 8) == v6;
      if (v15 || (sub_237A8840C() & 1) != 0)
      {
        v16 = v9 == v29 && v8 == v28;
        if (v16 || (sub_237A8840C() & 1) != 0)
        {
          v17 = v11 == v24 && v10 == v23;
          if ((v17 || (sub_237A8840C() & 1) != 0) && ((v22 ^ v12) & 1) == 0)
          {
            if (v14)
            {
              if (v21)
              {
                v18 = v13 == v20 && v14 == v21;
                if (v18 || (sub_237A8840C() & 1) != 0)
                  return v4;
              }
            }
            else if (!v21)
            {
              return v4;
            }
          }
        }
      }
      v4 = (v4 + 1) & v25;
    }
    while (((*(_QWORD *)(v27 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2378D3FC0(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2378D4058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    sub_237A86594();
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_2378BBFE0(*(_QWORD *)(v3 + 48) + v12 * v10, (uint64_t)v8, &qword_25681E8E0);
      sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v13 = sub_237A877DC();
      sub_2378D4AB4((uint64_t)v8);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2378D419C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x32656E6F7ALL;
    else
      v6 = 0x31656E6F7ALL;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x32656E6F7ALL : 0x31656E6F7ALL;
      if (v7 == v6)
        break;
      v8 = sub_237A8840C();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_2378D4298(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820480);
  v2 = sub_237A880E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2378BBFE0(v6, (uint64_t)&v15, &qword_256820488);
    v7 = v15;
    v8 = v16;
    result = sub_2378D449C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2378D4508);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2378BF370(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2378D43E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 104);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787978C(v8, v2, v3, v4, v5, v6);
  sub_2378797D4(v9);
  return a1;
}

uint64_t sub_2378D449C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_237A885D4();
  sub_237A87710();
  v5 = sub_237A88610();
  return a3(a1, a2, v5);
}

unint64_t sub_2378D4508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_237A8840C() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_237A8840C() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_237A8840C() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_2378D464C(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double v4;
  double v5;
  unint64_t result;
  char v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double *v13;
  double v14;
  char v15;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203F0);
  v3 = (_QWORD *)sub_237A880E8();
  v4 = a1[4];
  v5 = a1[5];
  result = sub_2378D31FC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(double *)(v3[6] + v9) = v4;
    *(double *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_2378D31FC(v4);
    v8 = v13;
    v5 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2378D4758(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820478);
  v3 = (_QWORD *)sub_237A880E8();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_2378D2ED4(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_2378D2ED4(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2378D4854(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  void *v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C8);
  v3 = (_QWORD *)sub_237A880E8();
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  result = sub_2378D2ED4(v5);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v13 = (_QWORD *)(a1 + 136);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v14 = v3[7] + 48 * result;
    *(_QWORD *)v14 = v4;
    *(_QWORD *)(v14 + 8) = v6;
    *(_QWORD *)(v14 + 16) = v7;
    *(_QWORD *)(v14 + 24) = v8;
    *(_BYTE *)(v14 + 32) = v9;
    *(_QWORD *)(v14 + 40) = v10;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v3[2] = v17;
    sub_237870090(v4, v6, v7, v8, v9);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *(v13 - 6);
    v19 = (void *)*(v13 - 5);
    v6 = *(v13 - 4);
    v7 = (void *)*(v13 - 3);
    v8 = *(v13 - 2);
    v9 = *((_BYTE *)v13 - 8);
    v10 = *v13;
    result = sub_2378D2ED4(v5);
    v13 += 7;
    v4 = v19;
    if ((v18 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2378D49A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D8);
  v3 = (_QWORD *)sub_237A880E8();
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  result = sub_2378D2ED4(v5);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v10 = (char *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v11 = v3[7] + 24 * result;
    *(_QWORD *)v11 = v4;
    *(_QWORD *)(v11 + 8) = v6;
    *(_BYTE *)(v11 + 16) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    sub_23787A11C(v4, v6, v7);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *((_QWORD *)v10 - 3);
    v4 = *((_QWORD *)v10 - 2);
    v6 = *((_QWORD *)v10 - 1);
    v7 = *v10;
    result = sub_2378D2ED4(v5);
    v10 += 32;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2378D4AB4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2378D4AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378D4B3C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 121;
  else
    v2 = 120;
  if ((a2 & 1) != 0)
    v3 = 121;
  else
    v3 = 120;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_237A8840C();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2378D4B9C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x70616373646E616CLL;
    else
      v3 = 0x706172676F706F74;
    if (v2 == 1)
      v4 = 0xE900000000000065;
    else
      v4 = 0xEA00000000007968;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x70616373646E616CLL;
      else
        v6 = 0x706172676F706F74;
      if (v5 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0xEA00000000007968;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x746E656964617267;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x746E656964617267)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D4CC4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657361656C6572;
  else
    v3 = 0x6775626564;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x657361656C6572;
  else
    v5 = 0x6775626564;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2378D4D64(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2378D4DB0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2378D4E74 + 4 * byte_237A90E29[a2]))(a3 + 6);
}

uint64_t sub_2378D4E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 6 && v3 == 0x8000000237AAEC10)
    v4 = 1;
  else
    v4 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_2378D4F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = ColorSet.ColorID.rawValue.getter();
  v2 = v1;
  if (v0 == ColorSet.ColorID.rawValue.getter() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_2378D5028(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6F437265746E6563;
    else
      v3 = 0x65676E6573736170;
    if (v2 == 1)
      v4 = 0xED0000656C6F736ELL;
    else
      v4 = 0xE900000000000072;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6F437265746E6563;
      else
        v6 = 0x65676E6573736170;
      if (v5 == 1)
        v7 = 0xED0000656C6F736ELL;
      else
        v7 = 0xE900000000000072;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x72657473756C63;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x72657473756C63)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D5160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  Theme.ColorID.rawValue.getter();
  v1 = v0;
  v3 = v2;
  Theme.ColorID.rawValue.getter();
  if (v1 == v5 && v3 == v4)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D51FC(uint64_t a1, uint64_t a2)
{
  return sub_2378D52A0(a1, a2, Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_2378D5208(uint64_t a1, uint64_t a2)
{
  return sub_2378D52A0(a1, a2, Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_2378D5214(uint64_t a1, uint64_t a2)
{
  return sub_2378D52A0(a1, a2, Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_2378D5220(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x32656E6F7ALL;
  else
    v2 = 0x31656E6F7ALL;
  if ((a2 & 1) != 0)
    v3 = 0x32656E6F7ALL;
  else
    v3 = 0x31656E6F7ALL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_237A8840C();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2378D5294(uint64_t a1, uint64_t a2)
{
  return sub_2378D52A0(a1, a2, InstrumentDataIdentifier.rawValue.getter);
}

uint64_t sub_2378D52A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2378D5338(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7261646E6F636573;
    else
      v3 = 0x61636972656D756ELL;
    if (v2 == 1)
      v4 = 0xE900000000000079;
    else
      v4 = 0xED0000796C6E4F6CLL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7261646E6F636573;
      else
        v6 = 0x61636972656D756ELL;
      if (v5 == 1)
        v7 = 0xE900000000000079;
      else
        v7 = 0xED0000796C6E4F6CLL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x7972616D697270;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x7972616D697270)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D5470(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E696B636F6C62;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E696B636F6C62;
  else
    v5 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D5514(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x636170736F6E6F6DLL;
    else
      v3 = 0x656D754E74666F73;
    if (v2 == 1)
      v4 = 0xEF74696769446465;
    else
      v4 = 0xEB00000000636972;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x636170736F6E6F6DLL;
      else
        v6 = 0x656D754E74666F73;
      if (v5 == 1)
        v7 = 0xEF74696769446465;
      else
        v7 = 0xEB00000000636972;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x6D6574737973;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x6D6574737973)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D5650(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 4539209;
  else
    v3 = 22085;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 4539209;
  else
    v5 = 22085;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D56E0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x79616C7265766FLL;
  else
    v2 = 0x7972616D697270;
  if ((a2 & 1) != 0)
    v3 = 0x79616C7265766FLL;
  else
    v3 = 0x7972616D697270;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_237A8840C();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2378D575C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x647261436E727574;
  else
    v3 = 7364973;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x647261436E727574;
  else
    v5 = 7364973;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D57F8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E65644961746164;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0xEE00726569666974;
  if ((a2 & 1) != 0)
    v5 = 0x6E65644961746164;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0xEE00726569666974;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D58AC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000017;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0x8000000237AAE580;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000017;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0x8000000237AAE580;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D5958(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE00726569666974;
  v3 = 0x6E65644961746164;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x656C797473;
    else
      v5 = 0x72756769666E6F63;
    if (v4 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xED00006E6F697461;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6E65644961746164;
  v6 = 0xEE00726569666974;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x656C797473;
    else
      v3 = 0x72756769666E6F63;
    if (v7 == 1)
      v2 = 0xE500000000000000;
    else
      v2 = 0xED00006E6F697461;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D5A90(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x72756769666E6F63;
  else
    v3 = 0x6E6F697461636F6CLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xED00006E6F697461;
  if ((a2 & 1) != 0)
    v5 = 0x72756769666E6F63;
  else
    v5 = 0x6E6F697461636F6CLL;
  if ((a2 & 1) != 0)
    v6 = 0xED00006E6F697461;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2378D5B40(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2378D5B9C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2378D5C20 + 4 * byte_237A90E36[a2]))(0x4C737265646E6572);
}

uint64_t sub_2378D5C20(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4C737265646E6572 && v1 == 0xEE00796C6C61636FLL)
    v2 = 1;
  else
    v2 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2378D5CEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2378D5D48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2378D5E20 + 4 * byte_237A90E42[a2]))(0x6567756167);
}

uint64_t sub_2378D5E20(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6567756167 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2378D5F5C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6F6C6F43746E6974;
    else
      v3 = 0x6E656D6E67696C61;
    if (v2 == 1)
      v4 = 0xEC00000073444972;
    else
      v4 = 0xE900000000000074;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6F6C6F43746E6974;
      else
        v6 = 0x6E656D6E67696C61;
      if (v5 == 1)
        v7 = 0xEC00000073444972;
      else
        v7 = 0xE900000000000074;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6567616D69;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6567616D69)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D6084(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7261646E6F636573;
    else
      v3 = 0x7972616974726574;
    if (v2 == 1)
      v4 = 0xE900000000000079;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7261646E6F636573;
      else
        v6 = 0x7972616974726574;
      if (v5 == 1)
        v7 = 0xE900000000000079;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x7972616D697270;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x7972616D697270)
  {
LABEL_21:
    v8 = sub_237A8840C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2378D61A4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1953394534;
  else
    v3 = 0x6567616D69;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1953394534;
  else
    v5 = 0x6567616D69;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D623C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x546567616B636170;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0xEB00000000657079;
  if ((a2 & 1) != 0)
    v5 = 0x546567616B636170;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657079;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D62EC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7475626972747461;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0xEA00000000007365;
  if ((a2 & 1) != 0)
    v5 = 0x7475626972747461;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007365;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D6394(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x736567616D69;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x736567616D69;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2378D6438(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _BYTE *i;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v19[3];
  char v20;
  _QWORD v21[2];
  uint64_t v22;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v5, 0);
    v6 = v22;
    for (i = (_BYTE *)(a3 + 56); ; i += 32)
    {
      v9 = *((_QWORD *)i - 2);
      v10 = *((_QWORD *)i - 1);
      v11 = *i;
      v19[0] = *((_QWORD *)i - 3);
      v19[1] = v9;
      v19[2] = v10;
      v20 = v11;
      swift_bridgeObjectRetain();
      a1(v21, v19);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v13 = v21[0];
      v12 = v21[1];
      v22 = v6;
      v15 = *(_QWORD *)(v6 + 16);
      v14 = *(_QWORD *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2379D62F4(v14 > 1, v15 + 1, 1);
        v6 = v22;
      }
      *(_QWORD *)(v6 + 16) = v15 + 1;
      v16 = v6 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v13;
      *(_QWORD *)(v16 + 40) = v12;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_2378D6568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t (*v14)();
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = type metadata accessor for Component();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v25 = v2;
    v29 = MEMORY[0x24BEE4AF8];
    sub_2379D64B4(0, v8, 0);
    v9 = v29;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = a1 + v10;
    v27 = a2 + *(int *)(type metadata accessor for Zone() + 24);
    v12 = *(_QWORD *)(v5 + 72);
    v13 = type metadata accessor for Component;
    v26 = v10;
    do
    {
      v14 = v13;
      sub_2378D07D8(v11, (uint64_t)v7, (uint64_t (*)(_QWORD))v13);
      v15 = *(double *)(v27 + 16);
      v16 = *(double *)(v27 + 24);
      v17 = (double *)&v7[*(int *)(v28 + 28)];
      v18 = *v17;
      v19 = v17[1];
      *v17 = v15;
      v17[1] = v16;
      if (v15 != v18 || v16 != v19)
      {
        sub_237981C70(v15 / v18, v16 / v19);
        v10 = v26;
      }
      v29 = v9;
      v22 = *(_QWORD *)(v9 + 16);
      v21 = *(_QWORD *)(v9 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_2379D64B4(v21 > 1, v22 + 1, 1);
        v10 = v26;
        v9 = v29;
      }
      *(_QWORD *)(v9 + 16) = v22 + 1;
      v23 = v9 + v10 + v22 * v12;
      v13 = v14;
      sub_2378D0858((uint64_t)v7, v23, (uint64_t (*)(_QWORD))v14);
      v11 += v12;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_2378D6710(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v1, 0);
    v2 = v15;
    v4 = type metadata accessor for Component();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = (uint64_t *)(v6 + *(int *)(v4 + 24));
      v10 = *v8;
      v9 = v8[1];
      v11 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_2379D62F4(v12 > 1, v11 + 1, 1);
      v6 += v7;
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v13 = v15 + 16 * v11;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2378D6814(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378D6838(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Slot, (void (*)(BOOL, unint64_t, uint64_t))sub_2379D64D0);
}

uint64_t sub_2378D6838(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(BOOL, unint64_t, uint64_t);
  unint64_t v23;
  uint64_t (*v24)(_QWORD);
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;

  v8 = v6;
  v25 = a1;
  v26 = a2;
  v24 = a5;
  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a3 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v27 = MEMORY[0x24BEE4AF8];
    v22 = a6;
    a6(0, v14, 0);
    v15 = v27;
    v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = a3 + v23;
    v17 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v25(v16);
      if (v8)
        break;
      v8 = 0;
      v27 = v15;
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        v22(v18 > 1, v19 + 1, 1);
        v15 = v27;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_2378D0858((uint64_t)v13, v15 + v23 + v19 * v17, v24);
      v16 += v17;
      if (!--v14)
        return v15;
    }
    swift_release();
  }
  return v15;
}

uint64_t sub_2378D6998(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2378D6838(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Zone, (void (*)(BOOL, unint64_t, uint64_t))sub_2379D64EC);
}

void static Zone.ZoneType.Single.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 2;
}

void sub_2378D69CC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 2;
}

uint64_t Zone.ZoneType.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = v1;
  v5 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v6 = *(unsigned __int8 *)(v2 + 16);
  if (v6)
  {
    if (v6 == 1)
    {
      sub_237A885E0();
      if (v5)
      {
        sub_237A885EC();
        swift_bridgeObjectRetain();
        sub_237878A98(a1, v5);
        return sub_2378724B0(v5, v4, 1u);
      }
      else
      {
        return sub_237A885EC();
      }
    }
    else
    {
      return sub_237A885E0();
    }
  }
  else
  {
    sub_237A885E0();
    sub_237A885EC();
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_237878A98(a1, v5);
      sub_2378724B0(v5, v4, 0);
    }
    return sub_237A88604();
  }
}

uint64_t sub_2378D6AC8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6964654D7370616DLL;
  if (*v0 != 1)
    v1 = 6382436;
  if (*v0)
    return v1;
  else
    return 0x656C676E6973;
}

uint64_t sub_2378D6B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378DCD60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378D6B40()
{
  sub_2378DB280();
  return sub_237A88718();
}

uint64_t sub_2378D6B68()
{
  sub_2378DB280();
  return sub_237A88724();
}

uint64_t sub_2378D6B90()
{
  sub_2378DB2C4();
  return sub_237A88718();
}

uint64_t sub_2378D6BB8()
{
  sub_2378DB2C4();
  return sub_237A88724();
}

uint64_t sub_2378D6BE0()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_2378D6BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378DCEA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378D6C20()
{
  sub_2378DB34C();
  return sub_237A88718();
}

uint64_t sub_2378D6C48()
{
  sub_2378DB34C();
  return sub_237A88724();
}

uint64_t sub_2378D6C70()
{
  sub_2378DB390();
  return sub_237A88718();
}

uint64_t sub_2378D6C98()
{
  sub_2378DB390();
  return sub_237A88724();
}

uint64_t Zone.ZoneType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820498);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568204A0);
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568204A8);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568204B0);
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *v1;
  v13 = v1[1];
  v14 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378DB280();
  v15 = v12;
  sub_237A886B8();
  if (v14)
  {
    if (v14 == 1)
    {
      LOBYTE(v35) = 2;
      sub_2378DB2C4();
      v16 = v25;
      v17 = v32;
      sub_237A88220();
      v35 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568204C8);
      sub_2378DB3D4(&qword_2568204D0, (uint64_t (*)(void))sub_2378DB308, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
      v18 = v27;
      sub_237A88268();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v18);
    }
    else
    {
      LOBYTE(v35) = 0;
      sub_2378DB390();
      v17 = v32;
      sub_237A88220();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v17);
  }
  else
  {
    LOBYTE(v35) = 1;
    sub_2378DB34C();
    v20 = v28;
    v21 = v32;
    sub_237A88220();
    v35 = v30;
    v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568204C8);
    sub_2378DB3D4(&qword_2568204D0, (uint64_t (*)(void))sub_2378DB308, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    v22 = v29;
    v23 = v33;
    sub_237A88268();
    if (!v23)
    {
      v35 = v13;
      v34 = 1;
      sub_23787ADF8();
      sub_237A882B0();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v21);
  }
}

uint64_t Zone.ZoneType.hashValue.getter()
{
  __int128 *v0;
  char v1;
  _BYTE v3[72];
  __int128 v4;
  char v5;

  v1 = *((_BYTE *)v0 + 16);
  v4 = *v0;
  v5 = v1;
  sub_237A885D4();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Zone.ZoneType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568204F0);
  v4 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  v38 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568204F8);
  v7 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v36 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820500);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820508);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_2378DB280();
  v18 = v43;
  sub_237A88688();
  if (v18)
    goto LABEL_9;
  v19 = v41;
  v43 = v14;
  v20 = sub_237A881FC();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v23 = sub_237A87FB0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v25 = &type metadata for Zone.ZoneType;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
LABEL_9:
    v27 = (uint64_t)v42;
    return __swift_destroy_boxed_opaque_existential_2Tm(v27);
  }
  if (*(_BYTE *)(v20 + 32))
  {
    if (*(_BYTE *)(v20 + 32) == 1)
    {
      LOBYTE(v46) = 1;
      sub_2378DB34C();
      sub_237A88154();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568204C8);
      LOBYTE(v45) = 0;
      sub_2378DB3D4(&qword_256820510, (uint64_t (*)(void))sub_2378DB448, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
      v21 = v35;
      v22 = v40;
      sub_237A881A8();
      v29 = v46;
      v44 = 1;
      sub_23787AE3C();
      sub_237A881F0();
      v30 = v43;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v21);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v13);
      v31 = 0;
      v32 = v45;
    }
    else
    {
      LOBYTE(v46) = 2;
      sub_2378DB2C4();
      sub_237A88154();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568204C8);
      sub_2378DB3D4(&qword_256820510, (uint64_t (*)(void))sub_2378DB448, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
      v26 = v37;
      sub_237A881A8();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
      v32 = 0;
      v29 = v46;
      v31 = 1;
    }
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_2378DB390();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
    v29 = 0;
    v32 = 0;
    v31 = 2;
  }
  v27 = (uint64_t)v42;
  v33 = v39;
  *v39 = v29;
  v33[1] = v32;
  *((_BYTE *)v33 + 16) = v31;
  return __swift_destroy_boxed_opaque_existential_2Tm(v27);
}

uint64_t sub_2378D7640@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Zone.ZoneType.init(from:)(a1, a2);
}

uint64_t sub_2378D7654(_QWORD *a1)
{
  return Zone.ZoneType.encode(to:)(a1);
}

uint64_t sub_2378D7668()
{
  __int128 *v0;
  char v1;
  _BYTE v3[72];
  __int128 v4;
  char v5;

  v1 = *((_BYTE *)v0 + 16);
  v4 = *v0;
  v5 = v1;
  sub_237A885D4();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t sub_2378D76BC()
{
  __int128 *v0;
  char v1;
  _BYTE v3[72];
  __int128 v4;
  char v5;

  v1 = *((_BYTE *)v0 + 16);
  v4 = *v0;
  v5 = v1;
  sub_237A885D4();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Zone.ZoneShape.isCircular.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

double Zone.ZoneShape.cornerRadius.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)v0;
  if (*(_BYTE *)(v0 + 8))
    return 0.0;
  return result;
}

uint64_t static Zone.ZoneShape.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t Zone.ZoneShape.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return sub_237A885E0();
  sub_237A885E0();
  return sub_237A88604();
}

uint64_t sub_2378D77A8()
{
  sub_2378DB514();
  return sub_237A88718();
}

uint64_t sub_2378D77D0()
{
  sub_2378DB514();
  return sub_237A88724();
}

uint64_t sub_2378D77F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x75676E6174636572;
  else
    return 0x72616C7563726963;
}

uint64_t sub_2378D783C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378DCF68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378D7860()
{
  sub_2378DB48C();
  return sub_237A88718();
}

uint64_t sub_2378D7888()
{
  sub_2378DB48C();
  return sub_237A88724();
}

uint64_t sub_2378D78B0()
{
  return 0x615272656E726F63;
}

uint64_t sub_2378D78D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2378D797C()
{
  sub_2378DB4D0();
  return sub_237A88718();
}

uint64_t sub_2378D79A4()
{
  sub_2378DB4D0();
  return sub_237A88724();
}

uint64_t Zone.ZoneShape.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820520);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820528);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820530);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378DB48C();
  sub_237A886B8();
  if ((v13 & 1) != 0)
  {
    v22 = 0;
    sub_2378DB514();
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  }
  else
  {
    v24 = 1;
    sub_2378DB4D0();
    sub_237A88220();
    v23 = v12;
    sub_23787ADF8();
    v15 = v20;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
}

uint64_t Zone.ZoneShape.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 1) == 0)
    sub_237A88604();
  return sub_237A88610();
}

uint64_t Zone.ZoneShape.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820550);
  v4 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v35 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820558);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820560);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_2378DB48C();
  v15 = v39;
  sub_237A88688();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v33 = v6;
  v17 = v37;
  v39 = v11;
  v18 = v13;
  v19 = sub_237A881FC();
  v20 = v10;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v28 = sub_237A87FB0();
    swift_allocError();
    v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v30 = &type metadata for Zone.ZoneShape;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
LABEL_7:
    v27 = (uint64_t)v38;
    return __swift_destroy_boxed_opaque_existential_2Tm(v27);
  }
  v21 = *(_BYTE *)(v19 + 32);
  if ((v21 & 1) != 0)
  {
    LODWORD(v33) = *(unsigned __int8 *)(v19 + 32);
    v42 = 1;
    sub_2378DB4D0();
    v22 = v17;
    v23 = v20;
    sub_237A88154();
    sub_23787AE3C();
    v24 = v22;
    v25 = v34;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v23);
    v26 = v40;
    v27 = (uint64_t)v38;
    v21 = v33;
  }
  else
  {
    v41 = 0;
    sub_2378DB514();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v20);
    v26 = 0;
    v27 = (uint64_t)v38;
  }
  v32 = v36;
  *v36 = v26;
  *((_BYTE *)v32 + 8) = v21 ^ 1;
  return __swift_destroy_boxed_opaque_existential_2Tm(v27);
}

uint64_t sub_2378D800C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Zone.ZoneShape.init(from:)(a1, a2);
}

uint64_t sub_2378D8020(_QWORD *a1)
{
  return Zone.ZoneShape.encode(to:)(a1);
}

uint64_t sub_2378D8034(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_2378D8068()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return sub_237A885E0();
  sub_237A885E0();
  return sub_237A88604();
}

uint64_t sub_2378D80B4()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 1) == 0)
    sub_237A88604();
  return sub_237A88610();
}

CarPlayAssetUI::Zone::ZoneRegion_optional __swiftcall Zone.ZoneRegion.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::Zone::ZoneRegion_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t Zone.ZoneRegion.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x32656E6F7ALL;
  else
    return 0x31656E6F7ALL;
}

uint64_t sub_2378D81A8(char *a1, char *a2)
{
  return sub_2378D5220(*a1, *a2);
}

CarPlayAssetUI::Zone::ZoneRegion_optional sub_2378D81B4(Swift::String *a1)
{
  return Zone.ZoneRegion.init(rawValue:)(*a1);
}

void sub_2378D81C0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x31656E6F7ALL;
  if (*v1)
    v2 = 0x32656E6F7ALL;
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_2378D81F0()
{
  sub_2378DD3B8();
  return sub_237A87A34();
}

uint64_t sub_2378D824C()
{
  sub_2378DD3B8();
  return sub_237A879EC();
}

uint64_t sub_2378D8298()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2378D8304()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2378D8344()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t Zone.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, &qword_25681E8E0);
}

uint64_t Zone.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Zone() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Zone() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Zone.displayName.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

double Zone.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Zone() + 24));
}

uint64_t sub_2378D84A0(double *a1, uint64_t a2)
{
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = a1[2];
  v6 = a1[3];
  result = type metadata accessor for Zone();
  v8 = a2 + *(int *)(result + 24);
  v9 = *(double *)(v8 + 16);
  v10 = *(double *)(v8 + 24);
  *(double *)v8 = v3;
  *(_QWORD *)(v8 + 8) = v4;
  *(double *)(v8 + 16) = v5;
  *(double *)(v8 + 24) = v6;
  if (v5 != v9 || v6 != v10)
  {
    v12 = *(int *)(result + 28);
    v13 = swift_bridgeObjectRetain();
    v14 = sub_2378D6568(v13, a2);
    result = swift_bridgeObjectRelease_n();
    *(_QWORD *)(a2 + v12) = v14;
  }
  return result;
}

uint64_t Zone.frame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;
  double v11;
  double v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Zone();
  v10 = (double *)(v4 + *(int *)(result + 24));
  v11 = v10[2];
  v12 = v10[3];
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  if (v11 != a3 || v12 != a4)
  {
    v14 = *(int *)(result + 28);
    v15 = swift_bridgeObjectRetain();
    v16 = sub_2378D6568(v15, v4);
    result = swift_bridgeObjectRelease_n();
    *(_QWORD *)(v4 + v14) = v16;
  }
  return result;
}

void (*Zone.frame.modify(_QWORD *a1))(_OWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = type metadata accessor for Zone();
  v3[7] = v4;
  v5 = *(int *)(v4 + 24);
  *((_DWORD *)v3 + 16) = v5;
  v6 = (_OWORD *)(v1 + v5);
  v7 = v6[1];
  *(_OWORD *)v3 = *v6;
  *((_OWORD *)v3 + 1) = v7;
  return sub_2378D8648;
}

void sub_2378D8648(_OWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *((_QWORD *)*a1 + 6) + *((int *)*a1 + 16);
  v4 = *((double *)*a1 + 2);
  v5 = *((double *)*a1 + 3);
  v6 = *(double *)(v3 + 16);
  v7 = *(double *)(v3 + 24);
  *(_OWORD *)v3 = **a1;
  *(double *)(v3 + 16) = v4;
  *(double *)(v3 + 24) = v5;
  v8 = v4 == v6;
  if (v5 != v7)
    v8 = 0;
  if ((a2 & 1) != 0)
  {
    if (!v8)
      goto LABEL_7;
  }
  else if (!v8)
  {
LABEL_7:
    v9 = v2[6];
    v10 = *(int *)(v2[7] + 28);
    v11 = swift_bridgeObjectRetain();
    v12 = sub_2378D6568(v11, v9);
    swift_bridgeObjectRelease_n();
    *(_QWORD *)(v9 + v10) = v12;
  }
  free(v2);
}

uint64_t Zone.components.getter()
{
  type metadata accessor for Zone();
  return swift_bridgeObjectRetain();
}

uint64_t Zone.components.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Zone() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Zone.components.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

uint64_t Zone.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = v1 + *(int *)(type metadata accessor for Zone() + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  return sub_2378D0664(v4, v5, v6);
}

uint64_t Zone.type.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for Zone() + 32);
  result = sub_2378724B0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*Zone.type.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

uint64_t Zone.zoneShape.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;

  result = type metadata accessor for Zone();
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  LOBYTE(v4) = *((_BYTE *)v4 + 9);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = (_BYTE)v4;
  return result;
}

uint64_t Zone.zoneShape.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  result = type metadata accessor for Zone();
  v6 = v1 + *(int *)(result + 36);
  *(_QWORD *)v6 = v2;
  *(_BYTE *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 9) = v4;
  return result;
}

uint64_t (*Zone.zoneShape.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

uint64_t Zone.zoneRegion.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Zone();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t Zone.zoneRegion.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Zone();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*Zone.zoneRegion.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

uint64_t Zone.backgroundPlatter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Zone() + 44));
}

uint64_t Zone.backgroundPlatter.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Zone();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*Zone.backgroundPlatter.modify())(_QWORD)
{
  type metadata accessor for Zone();
  return nullsub_1;
}

uint64_t Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  double *v32;
  uint64_t v33;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;

  v39 = *(_QWORD *)a5;
  v40 = *(_QWORD *)(a5 + 8);
  v41 = *(_BYTE *)(a5 + 16);
  v38 = *a6;
  v37 = *a7;
  v35 = *((_BYTE *)a7 + 9);
  v36 = *((_BYTE *)a7 + 8);
  v21 = (int *)type metadata accessor for Zone();
  v22 = v21[11];
  *(_BYTE *)(a9 + v22) = 0;
  v23 = sub_2378D6710(a4);
  v24 = swift_bridgeObjectRetain();
  v25 = sub_2378BF3D8(v24);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRelease();
  if (v26 == v27)
  {
    v28 = v21[10];
    v29 = a9 + v21[9];
    result = sub_237870370(a1, a9, &qword_25681E8E0);
    v31 = (_QWORD *)(a9 + v21[5]);
    *v31 = a2;
    v31[1] = a3;
    v32 = (double *)(a9 + v21[6]);
    *v32 = a10;
    v32[1] = a11;
    v32[2] = a12;
    v32[3] = a13;
    *(_QWORD *)(a9 + v21[7]) = a4;
    v33 = a9 + v21[8];
    *(_QWORD *)v33 = v39;
    *(_QWORD *)(v33 + 8) = v40;
    *(_BYTE *)(v33 + 16) = v41;
    *(_BYTE *)(a9 + v28) = v38;
    *(_QWORD *)v29 = v37;
    *(_BYTE *)(v29 + 8) = v36;
    *(_BYTE *)(v29 + 9) = v35;
    *(_BYTE *)(a9 + v22) = a8 & 1;
  }
  else
  {
    sub_2378724B0(v39, v40, v41);
    sub_237A87F44();
    swift_bridgeObjectRelease();
    sub_2378D6710(a4);
    MEMORY[0x23B81E700]();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

uint64_t Zone.updating(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  char v26;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  _QWORD v34[2];
  unsigned __int8 v35;
  _BYTE v36[16];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (int *)type metadata accessor for Zone();
  v10 = *(_QWORD *)(a1 + v9[7]);
  v29 = v3;
  swift_bridgeObjectRetain();
  v11 = sub_2378D6838((void (*)(uint64_t))sub_2378DB594, (uint64_t)v28, v10, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for Component, (void (*)(BOOL, unint64_t, uint64_t))sub_2379D64B4);
  swift_bridgeObjectRelease();
  sub_2378BBFE0(v3, (uint64_t)v8, &qword_25681E8E0);
  v12 = (uint64_t *)(v3 + v9[5]);
  v13 = *v12;
  v14 = v12[1];
  v15 = (double *)(a1 + v9[6]);
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = v15[3];
  v20 = v9[9];
  v21 = a1 + v9[8];
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(_BYTE *)(v21 + 16);
  v34[0] = *(_QWORD *)v21;
  v22 = v34[0];
  v34[1] = v23;
  v35 = v24;
  v25 = v9[11];
  v33 = *(_BYTE *)(a1 + v9[10]);
  v26 = *(_BYTE *)(a1 + v20 + 8);
  LOBYTE(v21) = *(_BYTE *)(a1 + v20 + 9);
  v30 = *(_QWORD *)(a1 + v20);
  v31 = v26;
  v32 = v21;
  LOBYTE(a1) = *(_BYTE *)(a1 + v25);
  swift_bridgeObjectRetain();
  sub_2378D0664(v22, v23, v24);
  return Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)((uint64_t)v8, v13, v14, v11, (uint64_t)v34, &v33, &v30, a1, a2, v16, v17, v18, v19);
}

uint64_t sub_2378D8DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, int *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62[8];

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Component();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v50 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v56 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v50 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v60 = (uint64_t)&v50 - v21;
  v22 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for Zone() + 28));
  v23 = *(_QWORD *)(v22 + 16);
  v53 = a3;
  v54 = v22;
  v57 = v20;
  v58 = (int *)v9;
  v51 = v8;
  v55 = v10;
  if (v23)
  {
    v24 = v22 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    sub_237A86594();
    v25 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v27 = MEMORY[0x24BDCEA98];
    while (1)
    {
      sub_2378D07D8(v24, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      sub_23786FAA0((unint64_t *)&qword_256820458, v26, v27);
      if ((sub_237A877DC() & 1) != 0)
        break;
      sub_2378DE6A4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      v24 += v25;
      if (!--v23)
        goto LABEL_7;
    }
    v30 = v60;
    sub_2378D0858((uint64_t)v14, v60, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v28 = v55;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v55 + 56);
    v31 = v30;
    v32 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    v28 = v55;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v55 + 56);
    v30 = v60;
    v31 = v60;
    v32 = 1;
  }
  v33 = v58;
  v29(v31, v32, 1, v58);
  swift_bridgeObjectRelease();
  v34 = v56;
  sub_2378BBFE0(v30, v56, &qword_2568207A8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v28 + 48);
  v36 = v35(v34, 1, v33);
  v37 = (uint64_t)v57;
  if ((_DWORD)v36 == 1)
  {
    sub_2378BC024(v30, &qword_2568207A8);
    sub_2378BC024(v34, &qword_2568207A8);
    v38 = 1;
  }
  else
  {
    v39 = *(_QWORD *)(a1 + v33[8]);
    MEMORY[0x24BDAC7A8](v36);
    *(&v50 - 2) = v34;
    swift_bridgeObjectRetain();
    v59 = sub_2378D6838((void (*)(uint64_t))sub_2378DFA50, (uint64_t)(&v50 - 4), v39, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for Slot, (void (*)(BOOL, unint64_t, uint64_t))sub_2379D64D0);
    swift_bridgeObjectRelease();
    v40 = (uint64_t)v51;
    sub_2378BBFE0(v34, (uint64_t)v51, qword_2568207C8);
    v41 = v33[6];
    v61 = *(_BYTE *)(a1 + v33[5]);
    v43 = *(_QWORD *)(a1 + v41);
    v42 = *(_QWORD *)(a1 + v41 + 8);
    v44 = (double *)(a1 + v33[7]);
    v45 = *v44;
    v46 = v44[1];
    swift_bridgeObjectRetain();
    Component.init(id:type:name:size:slots:)(v40, &v61, v43, v42, v59, v37, v45, v46);
    sub_2378BC024(v60, &qword_2568207A8);
    sub_2378DE6A4(v34, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v38 = 0;
  }
  v48 = (uint64_t)v52;
  v47 = v53;
  v29(v37, v38, 1, v33);
  sub_2378D07D8(a1, v48, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  if (v35(v37, 1, v33) == 1)
  {
    sub_2378D0858(v48, v47, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    return sub_2378BC024(v37, &qword_2568207A8);
  }
  else
  {
    sub_2378DE6A4(v48, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    return sub_2378D0858(v37, v47, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  }
}

uint64_t sub_2378D9238(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2378D9260 + 4 * byte_237A90E4A[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2378D9260()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2378D9280()
{
  return 0x656D617266;
}

uint64_t sub_2378D9294()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_2378D92B4()
{
  return 1701869940;
}

uint64_t sub_2378D92C4()
{
  return 0x70616853656E6F7ALL;
}

uint64_t sub_2378D92E0()
{
  return 0x69676552656E6F7ALL;
}

unint64_t sub_2378D92FC()
{
  return 0xD000000000000011;
}

uint64_t sub_2378D9318()
{
  unsigned __int8 *v0;

  return sub_2378D9238(*v0);
}

uint64_t sub_2378D9320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2378DD070(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2378D9344()
{
  sub_2378DB5B0();
  return sub_237A88718();
}

uint64_t sub_2378D936C()
{
  sub_2378DB5B0();
  return sub_237A88724();
}

uint64_t Zone.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 *v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820568);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2378DB5B0();
  sub_237A886B8();
  LOBYTE(v20) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  sub_2378DB6C0(&qword_256820578, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A882B0();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for Zone();
    LOBYTE(v20) = 1;
    sub_237A88274();
    v10 = (__int128 *)(v3 + v9[6]);
    v11 = v10[1];
    v20 = *v10;
    v21 = v11;
    v19 = 2;
    type metadata accessor for CGRect(0);
    sub_23786FAA0(&qword_256820580, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_237A882B0();
    *(_QWORD *)&v20 = *(_QWORD *)(v3 + v9[7]);
    v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820588);
    sub_2378DB764(&qword_256820590, &qword_256820598, (uint64_t)&protocol conformance descriptor for Component, MEMORY[0x24BEE12A0]);
    sub_237A882B0();
    v12 = (__int128 *)(v3 + v9[8]);
    v13 = *((_BYTE *)v12 + 16);
    v20 = *v12;
    LOBYTE(v21) = v13;
    v19 = 4;
    sub_2378DB5F4();
    sub_237A882B0();
    v14 = (uint64_t *)(v3 + v9[9]);
    v15 = *v14;
    v16 = *((_BYTE *)v14 + 8);
    LOBYTE(v14) = *((_BYTE *)v14 + 9);
    *(_QWORD *)&v20 = v15;
    BYTE8(v20) = v16;
    BYTE9(v20) = (_BYTE)v14;
    v19 = 5;
    sub_2378DB638();
    sub_237A88268();
    LOBYTE(v20) = *(_BYTE *)(v3 + v9[10]);
    v19 = 6;
    sub_2378DB67C();
    sub_237A88268();
    LOBYTE(v20) = *(_BYTE *)(v3 + v9[11]);
    v19 = 7;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Zone.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  char v23;
  char *v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v32 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568205B8);
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for Zone();
  v7 = (int *)MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v9[v7[9]];
  *(_QWORD *)v10 = 0;
  *((_WORD *)v10 + 4) = 256;
  v11 = v7[10];
  v9[v11] = 2;
  v12 = v7[11];
  v9[v12] = 0;
  v13 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_2378DB5B0();
  v36 = v5;
  v14 = v39;
  sub_237A88688();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v38);
  v39 = v10;
  v30 = v12;
  v31 = v11;
  v15 = v33;
  LOBYTE(v40) = 0;
  sub_2378DB6C0(&qword_2568205C0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v16 = (uint64_t)v35;
  v17 = v36;
  sub_237A881F0();
  sub_237870370(v16, (uint64_t)v9, &qword_25681E8E0);
  LOBYTE(v40) = 1;
  v18 = sub_237A881B4();
  v19 = (uint64_t *)&v9[v6[5]];
  *v19 = v18;
  v19[1] = v20;
  type metadata accessor for CGRect(0);
  v42 = 2;
  sub_23786FAA0(&qword_2568205C8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
  sub_237A881F0();
  v21 = &v9[v6[6]];
  v22 = v41;
  *(_OWORD *)v21 = v40;
  *((_OWORD *)v21 + 1) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820588);
  v42 = 3;
  sub_2378DB764(&qword_2568205D0, &qword_2568205D8, (uint64_t)&protocol conformance descriptor for Component, MEMORY[0x24BEE12D0]);
  sub_237A881F0();
  *(_QWORD *)&v9[v6[7]] = v40;
  v42 = 4;
  sub_2378DB7E8();
  sub_237A881F0();
  v23 = v41;
  v24 = &v9[v6[8]];
  *(_OWORD *)v24 = v40;
  v24[16] = v23;
  v42 = 5;
  sub_2378DB82C();
  sub_237A881A8();
  v25 = v39;
  v26 = BYTE8(v40);
  v27 = BYTE9(v40);
  *(_QWORD *)v39 = v40;
  v25[8] = v26;
  v25[9] = v27;
  v42 = 6;
  sub_2378DB870();
  sub_237A881A8();
  v9[v31] = v40;
  LOBYTE(v40) = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681FA08);
  sub_2378AE7AC();
  sub_237A881A8();
  v28 = (uint64_t)v38;
  LOBYTE(v16) = v42 & 1;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v37);
  v9[v30] = v16;
  sub_2378D07D8((uint64_t)v9, v32, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  __swift_destroy_boxed_opaque_existential_2Tm(v28);
  return sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
}

uint64_t sub_2378D9C60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Zone.init(from:)(a1, a2);
}

uint64_t sub_2378D9C74(_QWORD *a1)
{
  return Zone.encode(to:)(a1);
}

uint64_t sub_2378D9C88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, &qword_25681E8E0);
}

uint64_t Zone.componentIndex(by:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(type metadata accessor for Component() - 8);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_237A86594();
  v5 = *(_QWORD *)(v3 + 72);
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  swift_bridgeObjectRetain();
  v6 = 0;
  while ((sub_237A877DC() & 1) == 0)
  {
    ++v6;
    v4 += v5;
    if (v2 == v6)
    {
      v6 = 0;
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Zone.primaryComponents.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = type metadata accessor for Component();
  v1 = *(_QWORD *)(v21 - 8);
  v2 = MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v19 - v5;
  v7 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  v8 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v7 + 16);
  result = swift_bridgeObjectRetain();
  v20 = v9;
  if (!v9)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  v11 = 0;
  while (v11 < *(_QWORD *)(v7 + 16))
  {
    v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v13 = *(_QWORD *)(v1 + 72);
    sub_2378D07D8(v7 + v12 + v13 * v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    if ((v6[*(int *)(v21 + 20)] & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      v15 = (uint64_t)v4;
      sub_2378D0858((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2379D64B4(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v22;
      v17 = *(_QWORD *)(v22 + 16);
      v16 = *(_QWORD *)(v22 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2379D64B4(v16 > 1, v17 + 1, 1);
        v8 = v22;
      }
      *(_QWORD *)(v8 + 16) = v17 + 1;
      v18 = v8 + v12 + v17 * v13;
      v4 = (char *)v15;
      result = sub_2378D0858(v15, v18, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      goto LABEL_4;
    }
    v14 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_10;
    result = sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_4:
    if (v20 == ++v11)
    {
      v8 = v22;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t Zone.componentsByCarplayIdentifier.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3[7];

  v3[0] = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  v3[1] = (uint64_t)sub_2378DA07C;
  v3[2] = 0;
  v3[3] = (uint64_t)sub_2378DADE0;
  v3[4] = 0;
  v3[5] = (uint64_t)sub_2378DAE28;
  v3[6] = 0;
  v2 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRetain_n();
  sub_2378DA54C(v3, 1, &v2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2378DA07C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[512];
  _BYTE v23[512];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_11;
  v8 = type metadata accessor for Slot();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  sub_2378BBFE0(v7 + *(int *)(v8 + 36) + ((v9 + 32) & ~v9), (uint64_t)v6, &qword_25681F430);
  v10 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10) == 1)
  {
    sub_2378BC024((uint64_t)v6, &qword_25681F430);
  }
  else
  {
    sub_23788F46C(&v6[*(int *)(v10 + 20)], v22);
    sub_2378DE6E0(v22, sub_2378DD44C);
    sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    sub_23788F46C(v22, v23);
    v11 = sub_2378A1BDC((uint64_t)v23);
    if (v11 == 7)
    {
      v15 = sub_2378A1BF8((uint64_t)v23);
      v13 = (uint64_t *)(v15 + 56);
      v14 = (uint64_t *)(v15 + 64);
    }
    else
    {
      if (v11 != 6)
      {
        sub_2378DE6E0(v22, sub_2378DE7AC);
        goto LABEL_11;
      }
      v12 = sub_2378A1BF8((uint64_t)v23);
      v13 = (uint64_t *)(v12 + 16);
      v14 = (uint64_t *)(v12 + 24);
    }
    v16 = *v14;
    v17 = *v13;
    swift_bridgeObjectRetain();
    sub_2378DE6E0(v22, sub_2378DE7AC);
    if (v16)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
      v19 = (uint64_t)a2 + *(int *)(v18 + 48);
      *a2 = v17;
      a2[1] = v16;
      sub_2378D07D8(a1, v19, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 0, 1, v18);
    }
  }
LABEL_11:
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
}

uint64_t Zone.overlayComponents.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = type metadata accessor for Component();
  v1 = *(_QWORD *)(v21 - 8);
  v2 = MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v19 - v5;
  v7 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  v8 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v7 + 16);
  result = swift_bridgeObjectRetain();
  v20 = v9;
  if (!v9)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  v11 = 0;
  while (v11 < *(_QWORD *)(v7 + 16))
  {
    v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v13 = *(_QWORD *)(v1 + 72);
    sub_2378D07D8(v7 + v12 + v13 * v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    if (v6[*(int *)(v21 + 20)] == 1)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      v15 = (uint64_t)v4;
      sub_2378D0858((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2379D64B4(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v22;
      v17 = *(_QWORD *)(v22 + 16);
      v16 = *(_QWORD *)(v22 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2379D64B4(v16 > 1, v17 + 1, 1);
        v8 = v22;
      }
      *(_QWORD *)(v8 + 16) = v17 + 1;
      v18 = v8 + v12 + v17 * v13;
      v4 = (char *)v15;
      result = sub_2378D0858(v15, v18, (uint64_t (*)(_QWORD))type metadata accessor for Component);
      goto LABEL_4;
    }
    v14 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_9;
    result = sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Component);
LABEL_4:
    if (v20 == ++v11)
    {
      v8 = v22;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

BOOL Zone.isMapsMedia.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) == 0;
}

BOOL Zone.isDCA.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) == 1;
}

BOOL Zone.isCarousel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) < 2u;
}

void sub_2378DA54C(uint64_t *a1, int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  int v69;
  char v70;
  BOOL v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  void (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v92 = a3;
  v87 = a2;
  v99 = type metadata accessor for Component();
  v4 = *(_QWORD *)(v99 - 8);
  v5 = MEMORY[0x24BDAC7A8](v99);
  v88 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v94 = (uint64_t)&v80 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207A8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v80 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207B0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v86 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v80 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (uint64_t)&v80 - v20;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207B8);
  v21 = *(_QWORD *)(v103 - 8);
  v22 = MEMORY[0x24BDAC7A8](v103);
  v82 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v80 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v85 = (uint64_t *)((char *)&v80 - v27);
  v28 = *a1;
  v93 = (void (*)(uint64_t))a1[1];
  v29 = a1[2];
  v96 = (uint64_t (*)(char *))a1[3];
  v109 = v28;
  v30 = a1[4];
  v81 = (void (*)(uint64_t))a1[5];
  v31 = a1[6];
  v102 = v28;
  v101 = *(_QWORD *)(v28 + 16);
  sub_2378DD3FC((uint64_t)&v109);
  v95 = v29;
  swift_retain();
  v97 = v30;
  swift_retain();
  v83 = v31;
  swift_retain();
  v32 = 0;
  v98 = v11;
  v100 = v13;
  v84 = v4;
  while (1)
  {
    while (1)
    {
      if (v32 == v101)
      {
        v33 = 1;
        v32 = v101;
      }
      else
      {
        if (v32 >= *(_QWORD *)(v102 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          sub_237A8858C();
          __break(1u);
          goto LABEL_37;
        }
        sub_2378D07D8(v102+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v32, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v33 = 0;
        ++v32;
      }
      v34 = v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, v33, 1, v99);
      sub_237870370((uint64_t)v13, (uint64_t)v11, &qword_2568207A8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v34) == 1)
      {
        v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v36 = v19;
        v37 = 1;
      }
      else
      {
        v38 = v94;
        sub_2378D0858((uint64_t)v11, v94, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v93(v38);
        sub_2378DE6A4(v38, (uint64_t (*)(_QWORD))type metadata accessor for Component);
        v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v36 = v19;
        v37 = 0;
      }
      v39 = v103;
      v35(v36, v37, 1, v103);
      v40 = v21;
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v41(v19, 1, v39) == 1)
        break;
      sub_237870370((uint64_t)v19, (uint64_t)v26, &qword_2568207B8);
      if ((v96(v26) & 1) != 0)
      {
        v42 = v89;
        sub_237870370((uint64_t)v26, v89, &qword_2568207B8);
        v43 = 0;
        v11 = v98;
        goto LABEL_14;
      }
      sub_2378BC024((uint64_t)v26, &qword_2568207B8);
      v11 = v98;
      v21 = v40;
      v13 = v100;
    }
    sub_2378BC024((uint64_t)v19, &qword_2568207B0);
    v43 = 1;
    v42 = v89;
LABEL_14:
    v44 = v42;
    v45 = v103;
    v35((char *)v44, v43, 1, v103);
    v46 = v86;
    sub_237870370(v89, v86, &qword_2568207B0);
    if (v41((char *)v46, 1, v45) == 1)
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
      v48 = v85;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v85, 1, 1, v47);
    }
    else
    {
      v49 = v46;
      v50 = v82;
      sub_237870370(v49, v82, &qword_2568207B8);
      v51 = v85;
      v81(v50);
      v52 = v50;
      v48 = v51;
      v11 = v98;
      sub_2378BC024(v52, &qword_2568207B8);
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v51, 0, 1, v53);
    }
    v21 = v40;
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
    v55 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v48, 1, v54);
    v13 = v100;
    if (v55 == 1)
    {
      sub_2378DD424((uint64_t)&v109);
      swift_release();
      swift_release();
      swift_release();
      sub_2378DD424((uint64_t)&v109);
      swift_release();
      swift_release();
      swift_release();
      return;
    }
    v56 = (uint64_t)v48 + *(int *)(v54 + 48);
    v57 = v48;
    v58 = *v48;
    v59 = v57[1];
    v107 = v58;
    v108 = v59;
    sub_2378D0858(v56, v88, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v60 = (_QWORD *)*v92;
    v90 = v59;
    v91 = v58;
    v62 = sub_2378D2DB8(v58, v59);
    v63 = v60[2];
    v64 = (v61 & 1) == 0;
    v65 = v63 + v64;
    if (__OFADD__(v63, v64))
      goto LABEL_34;
    if (v60[3] < v65)
      break;
    v4 = v84;
    if ((v87 & 1) != 0)
    {
      if ((v61 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      v87 = v61;
      sub_2378C5388();
      if ((v87 & 1) != 0)
        goto LABEL_29;
    }
LABEL_26:
    v72 = (_QWORD *)*v92;
    v72[(v62 >> 6) + 8] |= 1 << v62;
    v73 = (_QWORD *)(v72[6] + 16 * v62);
    v74 = v90;
    *v73 = v91;
    v73[1] = v74;
    sub_2378D0858(v88, v72[7] + *(_QWORD *)(v4 + 72) * v62, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    v75 = v72[2];
    v76 = __OFADD__(v75, 1);
    v77 = v75 + 1;
    if (v76)
      goto LABEL_35;
    v72[2] = v77;
    v87 = 1;
  }
  v66 = v61;
  sub_2378C9B68(v65, v87 & 1);
  v67 = sub_2378D2DB8(v91, v90);
  v69 = v68 & 1;
  v70 = v66;
  v71 = (v66 & 1) == v69;
  v4 = v84;
  if (!v71)
    goto LABEL_36;
  v62 = v67;
  if ((v70 & 1) == 0)
    goto LABEL_26;
LABEL_29:
  v78 = (void *)swift_allocError();
  swift_willThrow();
  v106 = v78;
  v79 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_2378DD424((uint64_t)&v109);
    swift_release();
    swift_release();
    swift_release();
    sub_2378DE6A4(v88, (uint64_t (*)(_QWORD))type metadata accessor for Component);
    swift_bridgeObjectRelease();
    sub_2378DD424((uint64_t)&v109);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
LABEL_37:
  v104 = 0;
  v105 = 0xE000000000000000;
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A880AC();
  __break(1u);
}

BOOL sub_2378DADE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_2378DAE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v6, &qword_2568207B8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568207C0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return sub_237870370((uint64_t)v6, a2, &qword_2568207C0);
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI4ZoneV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)a1;
  v2 = *(uint64_t *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(uint64_t *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3)
        {
          if (v6)
          {
            v8 = 1;
            sub_2378D0664(*(_QWORD *)a1, v2, 1u);
            sub_2378D0664(v6, v5, 1u);
            sub_2378D0664(v3, v2, 1u);
            sub_2378D0664(v6, v5, 1u);
            sub_2378D0664(v3, v2, 1u);
            v9 = sub_2379B7140(v3, v6);
            sub_2378724B0(v3, v2, 1u);
            sub_2378724B0(v6, v5, 1u);
            sub_2378724B0(v6, v5, 1u);
            sub_2378724B0(v3, v2, 1u);
            sub_2378724B0(v3, v2, 1u);
            if ((v9 & 1) != 0)
              return v8;
            return 0;
          }
          sub_2378D0664(0, *(_QWORD *)(a2 + 8), 1u);
          sub_2378D0664(v3, v2, 1u);
        }
        else
        {
          v16 = swift_bridgeObjectRetain();
          v8 = 1;
          sub_2378D0664(v16, v5, 1u);
          sub_2378D0664(0, v2, 1u);
          sub_2378724B0(0, v2, 1u);
          sub_2378724B0(v6, v5, 1u);
          if (!v6)
            return v8;
        }
        sub_2378724B0(v3, v2, 1u);
        v12 = v6;
        v13 = v5;
        v14 = 1;
LABEL_18:
        sub_2378724B0(v12, v13, v14);
        return 0;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_2378724B0(*(_QWORD *)a1, v2, 2u);
      sub_2378724B0(0, 0, 2u);
      return 1;
    }
LABEL_17:
    sub_2378D0664(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_2378D0664(v3, v2, v4);
    sub_2378724B0(v3, v2, v4);
    v12 = v6;
    v13 = v5;
    v14 = v7;
    goto LABEL_18;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_17;
  if (!v3)
  {
    v17 = swift_bridgeObjectRetain();
    sub_2378D0664(v17, v5, 0);
    sub_2378D0664(0, v2, 0);
    sub_2378724B0(0, v2, 0);
    sub_2378724B0(v6, v5, 0);
    if (!v6)
      return *(double *)&v2 == *(double *)&v5;
    sub_2378724B0(0, v2, 0);
    v12 = v6;
LABEL_30:
    v13 = v5;
    v14 = 0;
    goto LABEL_18;
  }
  if (!v6)
  {
    sub_2378D0664(0, *(_QWORD *)(a2 + 8), 0);
    sub_2378D0664(v3, v2, 0);
    sub_2378724B0(v3, v2, 0);
    v12 = 0;
    goto LABEL_30;
  }
  sub_2378D0664(*(_QWORD *)a1, v2, 0);
  sub_2378D0664(v6, v5, 0);
  sub_2378D0664(v3, v2, 0);
  sub_2378D0664(v6, v5, 0);
  sub_2378D0664(v3, v2, 0);
  v10 = sub_2379B7140(v3, v6);
  sub_2378724B0(v3, v2, 0);
  sub_2378724B0(v6, v5, 0);
  sub_2378724B0(v6, v5, 0);
  sub_2378724B0(v3, v2, 0);
  sub_2378724B0(v3, v2, 0);
  v8 = 0;
  if ((v10 & 1) != 0)
    return *(double *)&v2 == *(double *)&v5;
  return v8;
}

unint64_t sub_2378DB280()
{
  unint64_t result;

  result = qword_2568204B8;
  if (!qword_2568204B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91A94, &type metadata for Zone.ZoneType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568204B8);
  }
  return result;
}

unint64_t sub_2378DB2C4()
{
  unint64_t result;

  result = qword_2568204C0;
  if (!qword_2568204C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91A44, &type metadata for Zone.ZoneType.DcaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568204C0);
  }
  return result;
}

unint64_t sub_2378DB308()
{
  unint64_t result;

  result = qword_2568204D8;
  if (!qword_2568204D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for EdgeInsets, MEMORY[0x24BDEB050]);
    atomic_store(result, (unint64_t *)&qword_2568204D8);
  }
  return result;
}

unint64_t sub_2378DB34C()
{
  unint64_t result;

  result = qword_2568204E0;
  if (!qword_2568204E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A919F4, &type metadata for Zone.ZoneType.MapsMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568204E0);
  }
  return result;
}

unint64_t sub_2378DB390()
{
  unint64_t result;

  result = qword_2568204E8;
  if (!qword_2568204E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A919A4, &type metadata for Zone.ZoneType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568204E8);
  }
  return result;
}

uint64_t sub_2378DB3D4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568204C8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378DB448()
{
  unint64_t result;

  result = qword_256820518;
  if (!qword_256820518)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for EdgeInsets, MEMORY[0x24BDEB050]);
    atomic_store(result, (unint64_t *)&qword_256820518);
  }
  return result;
}

unint64_t sub_2378DB48C()
{
  unint64_t result;

  result = qword_256820538;
  if (!qword_256820538)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91954, &type metadata for Zone.ZoneShape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820538);
  }
  return result;
}

unint64_t sub_2378DB4D0()
{
  unint64_t result;

  result = qword_256820540;
  if (!qword_256820540)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91904, &type metadata for Zone.ZoneShape.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820540);
  }
  return result;
}

unint64_t sub_2378DB514()
{
  unint64_t result;

  result = qword_256820548;
  if (!qword_256820548)
  {
    result = MEMORY[0x23B81FA98](&unk_237A918B4, &type metadata for Zone.ZoneShape.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820548);
  }
  return result;
}

uint64_t type metadata accessor for Zone()
{
  uint64_t result;

  result = qword_2568206A0;
  if (!qword_2568206A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2378DB594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2378D8DC8(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_2378DB5B0()
{
  unint64_t result;

  result = qword_256820570;
  if (!qword_256820570)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91864, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820570);
  }
  return result;
}

unint64_t sub_2378DB5F4()
{
  unint64_t result;

  result = qword_2568205A0;
  if (!qword_2568205A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneType, &type metadata for Zone.ZoneType);
    atomic_store(result, (unint64_t *)&qword_2568205A0);
  }
  return result;
}

unint64_t sub_2378DB638()
{
  unint64_t result;

  result = qword_2568205A8;
  if (!qword_2568205A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneShape, &type metadata for Zone.ZoneShape);
    atomic_store(result, (unint64_t *)&qword_2568205A8);
  }
  return result;
}

unint64_t sub_2378DB67C()
{
  unint64_t result;

  result = qword_2568205B0;
  if (!qword_2568205B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneRegion, &type metadata for Zone.ZoneRegion);
    atomic_store(result, (unint64_t *)&qword_2568205B0);
  }
  return result;
}

uint64_t sub_2378DB6C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E8E0);
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v7[0] = sub_23786FAA0(&qword_256820318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v7[1] = sub_23786FAA0(&qword_256820320, v6, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2378DB764(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820588);
    v10 = sub_23786FAA0(a2, (uint64_t (*)(uint64_t))type metadata accessor for Component, a3);
    result = MEMORY[0x23B81FA98](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2378DB7E8()
{
  unint64_t result;

  result = qword_2568205E0;
  if (!qword_2568205E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneType, &type metadata for Zone.ZoneType);
    atomic_store(result, (unint64_t *)&qword_2568205E0);
  }
  return result;
}

unint64_t sub_2378DB82C()
{
  unint64_t result;

  result = qword_2568205E8;
  if (!qword_2568205E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneShape, &type metadata for Zone.ZoneShape);
    atomic_store(result, (unint64_t *)&qword_2568205E8);
  }
  return result;
}

unint64_t sub_2378DB870()
{
  unint64_t result;

  result = qword_2568205F0;
  if (!qword_2568205F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneRegion, &type metadata for Zone.ZoneRegion);
    atomic_store(result, (unint64_t *)&qword_2568205F0);
  }
  return result;
}

unint64_t sub_2378DB8C0()
{
  unint64_t result;

  result = qword_2568205F8;
  if (!qword_2568205F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneType, &type metadata for Zone.ZoneType);
    atomic_store(result, (unint64_t *)&qword_2568205F8);
  }
  return result;
}

unint64_t sub_2378DB908()
{
  unint64_t result;

  result = qword_256820630;
  if (!qword_256820630)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneShape, &type metadata for Zone.ZoneShape);
    atomic_store(result, (unint64_t *)&qword_256820630);
  }
  return result;
}

unint64_t sub_2378DB950()
{
  unint64_t result;

  result = qword_256820638;
  if (!qword_256820638)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneRegion, &type metadata for Zone.ZoneRegion);
    atomic_store(result, (unint64_t *)&qword_256820638);
  }
  return result;
}

unint64_t sub_2378DB998()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256820640;
  if (!qword_256820640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681E8E0);
    v2 = sub_23786FAA0(&qword_256820278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256820640);
  }
  return result;
}

__n128 sub_2378DBA14@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = a1 + *(int *)(type metadata accessor for Zone() + 24);
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_2378DBA50@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for Zone();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 44));
  return result;
}

uint64_t sub_2378DBA84(char *a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = type metadata accessor for Zone();
  *(_BYTE *)(a2 + *(int *)(result + 44)) = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Zone(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_OWORD *)((char *)a1 + v9);
    v14 = (_OWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v17 = (char *)a1 + v16;
    v18 = *(_QWORD *)((char *)a2 + v16);
    v19 = *(_QWORD *)((char *)a2 + v16 + 8);
    v20 = *((_BYTE *)a2 + v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2378D0664(v18, v19, v20);
    *(_QWORD *)v17 = v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = v20;
    v21 = a3[9];
    v22 = a3[10];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_WORD *)v23 + 4) = *((_WORD *)v24 + 4);
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  }
  return a1;
}

uint64_t destroy for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2378724B0(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 16));
}

uint64_t initializeWithCopy for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v16 = a1 + v15;
  v17 = *(_QWORD *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  v19 = *(_BYTE *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378D0664(v17, v18, v19);
  *(_QWORD *)v16 = v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_BYTE *)(v16 + 16) = v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_WORD *)(v22 + 8) = *(_WORD *)(v23 + 8);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(_BYTE *)(v15 + 16);
  sub_2378D0664(*(_QWORD *)v15, v17, v18);
  v19 = *(_QWORD *)v14;
  v20 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v17;
  v21 = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v14 + 16) = v18;
  sub_2378724B0(v19, v20, v21);
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  *(_WORD *)(v23 + 8) = *((_WORD *)v24 + 4);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = a3[9];
  v15 = a3[10];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_OWORD *)(a1 + v12);
  v15 = (_OWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 16);
  v21 = *(_QWORD *)v18;
  v22 = *(_QWORD *)(v18 + 8);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v23 = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v18 + 16) = v20;
  sub_2378724B0(v21, v22, v23);
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_WORD *)(v26 + 8) = *(_WORD *)(v27 + 8);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2378DC024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Zone()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2378DC0B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2378DC134()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Zone.ZoneType(uint64_t a1)
{
  return sub_2378724B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI4ZoneV8ZoneTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2378D0664(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Zone.ZoneType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2378D0664(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2378724B0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Zone.ZoneType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2378724B0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone.ZoneType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Zone.ZoneType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2378DC378(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2378DC390(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType()
{
  return &type metadata for Zone.ZoneType;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.Single()
{
  return &type metadata for Zone.ZoneType.Single;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape()
{
  return &type metadata for Zone.ZoneShape;
}

ValueMetadata *type metadata accessor for Zone.ZoneRegion()
{
  return &type metadata for Zone.ZoneRegion;
}

uint64_t storeEnumTagSinglePayload for Zone.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2378DC438 + 4 * byte_237A90E57[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2378DC46C + 4 * byte_237A90E52[v4]))();
}

uint64_t sub_2378DC46C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378DC47CLL);
  return result;
}

uint64_t sub_2378DC488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378DC490);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2378DC494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC49C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Zone.CodingKeys()
{
  return &type metadata for Zone.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.CodingKeys()
{
  return &type metadata for Zone.ZoneShape.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.CircularCodingKeys()
{
  return &type metadata for Zone.ZoneShape.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.RectangularCodingKeys()
{
  return &type metadata for Zone.ZoneShape.RectangularCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Zone.ZoneType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2378DC538 + 4 * byte_237A90E61[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2378DC56C + 4 * byte_237A90E5C[v4]))();
}

uint64_t sub_2378DC56C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378DC57CLL);
  return result;
}

uint64_t sub_2378DC588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378DC590);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2378DC594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC59C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.CodingKeys()
{
  return &type metadata for Zone.ZoneType.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.SingleCodingKeys()
{
  return &type metadata for Zone.ZoneType.SingleCodingKeys;
}

uint64_t _s14CarPlayAssetUI4ZoneV10ZoneRegionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378DC614 + 4 * byte_237A90E6B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378DC648 + 4 * byte_237A90E66[v4]))();
}

uint64_t sub_2378DC648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378DC658);
  return result;
}

uint64_t sub_2378DC664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378DC66CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378DC670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DC678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.MapsMediaCodingKeys()
{
  return &type metadata for Zone.ZoneType.MapsMediaCodingKeys;
}

uint64_t _s14CarPlayAssetUI4ZoneV9ZoneShapeO21RectangularCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2378DC6D4 + 4 * byte_237A90E70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2378DC6F4 + 4 * byte_237A90E75[v4]))();
}

_BYTE *sub_2378DC6D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2378DC6F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378DC6FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378DC704(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2378DC70C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2378DC714(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.DcaCodingKeys()
{
  return &type metadata for Zone.ZoneType.DcaCodingKeys;
}

unint64_t sub_2378DC734()
{
  unint64_t result;

  result = qword_2568206F0;
  if (!qword_2568206F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91404, &type metadata for Zone.ZoneType.DcaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568206F0);
  }
  return result;
}

unint64_t sub_2378DC77C()
{
  unint64_t result;

  result = qword_2568206F8;
  if (!qword_2568206F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A914BC, &type metadata for Zone.ZoneType.MapsMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568206F8);
  }
  return result;
}

unint64_t sub_2378DC7C4()
{
  unint64_t result;

  result = qword_256820700;
  if (!qword_256820700)
  {
    result = MEMORY[0x23B81FA98](&unk_237A915C4, &type metadata for Zone.ZoneType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820700);
  }
  return result;
}

unint64_t sub_2378DC80C()
{
  unint64_t result;

  result = qword_256820708;
  if (!qword_256820708)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9167C, &type metadata for Zone.ZoneShape.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820708);
  }
  return result;
}

unint64_t sub_2378DC854()
{
  unint64_t result;

  result = qword_256820710;
  if (!qword_256820710)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91784, &type metadata for Zone.ZoneShape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820710);
  }
  return result;
}

unint64_t sub_2378DC89C()
{
  unint64_t result;

  result = qword_256820718;
  if (!qword_256820718)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9183C, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820718);
  }
  return result;
}

unint64_t sub_2378DC8E4()
{
  unint64_t result;

  result = qword_256820720;
  if (!qword_256820720)
  {
    result = MEMORY[0x23B81FA98](&unk_237A917AC, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820720);
  }
  return result;
}

unint64_t sub_2378DC92C()
{
  unint64_t result;

  result = qword_256820728;
  if (!qword_256820728)
  {
    result = MEMORY[0x23B81FA98](&unk_237A917D4, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820728);
  }
  return result;
}

unint64_t sub_2378DC974()
{
  unint64_t result;

  result = qword_256820730;
  if (!qword_256820730)
  {
    result = MEMORY[0x23B81FA98](&unk_237A916A4, &type metadata for Zone.ZoneShape.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820730);
  }
  return result;
}

unint64_t sub_2378DC9BC()
{
  unint64_t result;

  result = qword_256820738;
  if (!qword_256820738)
  {
    result = MEMORY[0x23B81FA98](&unk_237A916CC, &type metadata for Zone.ZoneShape.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820738);
  }
  return result;
}

unint64_t sub_2378DCA04()
{
  unint64_t result;

  result = qword_256820740;
  if (!qword_256820740)
  {
    result = MEMORY[0x23B81FA98](&unk_237A915EC, &type metadata for Zone.ZoneShape.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820740);
  }
  return result;
}

unint64_t sub_2378DCA4C()
{
  unint64_t result;

  result = qword_256820748;
  if (!qword_256820748)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91614, &type metadata for Zone.ZoneShape.RectangularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820748);
  }
  return result;
}

unint64_t sub_2378DCA94()
{
  unint64_t result;

  result = qword_256820750;
  if (!qword_256820750)
  {
    result = MEMORY[0x23B81FA98](&unk_237A916F4, &type metadata for Zone.ZoneShape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820750);
  }
  return result;
}

unint64_t sub_2378DCADC()
{
  unint64_t result;

  result = qword_256820758;
  if (!qword_256820758)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9171C, &type metadata for Zone.ZoneShape.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820758);
  }
  return result;
}

unint64_t sub_2378DCB24()
{
  unint64_t result;

  result = qword_256820760;
  if (!qword_256820760)
  {
    result = MEMORY[0x23B81FA98](&unk_237A914E4, &type metadata for Zone.ZoneType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820760);
  }
  return result;
}

unint64_t sub_2378DCB6C()
{
  unint64_t result;

  result = qword_256820768;
  if (!qword_256820768)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9150C, &type metadata for Zone.ZoneType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820768);
  }
  return result;
}

unint64_t sub_2378DCBB4()
{
  unint64_t result;

  result = qword_256820770;
  if (!qword_256820770)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9142C, &type metadata for Zone.ZoneType.MapsMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820770);
  }
  return result;
}

unint64_t sub_2378DCBFC()
{
  unint64_t result;

  result = qword_256820778;
  if (!qword_256820778)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91454, &type metadata for Zone.ZoneType.MapsMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820778);
  }
  return result;
}

unint64_t sub_2378DCC44()
{
  unint64_t result;

  result = qword_256820780;
  if (!qword_256820780)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91374, &type metadata for Zone.ZoneType.DcaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820780);
  }
  return result;
}

unint64_t sub_2378DCC8C()
{
  unint64_t result;

  result = qword_256820788;
  if (!qword_256820788)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9139C, &type metadata for Zone.ZoneType.DcaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820788);
  }
  return result;
}

unint64_t sub_2378DCCD4()
{
  unint64_t result;

  result = qword_256820790;
  if (!qword_256820790)
  {
    result = MEMORY[0x23B81FA98](&unk_237A91534, &type metadata for Zone.ZoneType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820790);
  }
  return result;
}

unint64_t sub_2378DCD1C()
{
  unint64_t result;

  result = qword_256820798;
  if (!qword_256820798)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9155C, &type metadata for Zone.ZoneType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256820798);
  }
  return result;
}

uint64_t sub_2378DCD60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6964654D7370616DLL && a2 == 0xE900000000000061 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6382436 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2378DCEA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378DCF68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75676E6174636572 && a2 == 0xEB0000000072616CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2378DD070(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x70616853656E6F7ALL && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69676552656E6F7ALL && a2 == 0xEA00000000006E6FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB0220)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_2378DD3B8()
{
  unint64_t result;

  result = qword_2568207A0;
  if (!qword_2568207A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Zone.ZoneRegion, &type metadata for Zone.ZoneRegion);
    atomic_store(result, (unint64_t *)&qword_2568207A0);
  }
  return result;
}

uint64_t sub_2378DD3FC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2378DD424(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2378DD44C(uint64_t result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61,uint64_t a62,unint64_t a63)
{
  switch(a63 >> 60)
  {
    case 1uLL:
      sub_2378DD81C(result, a2, a3, a4, a5, a6, a7, a8, (uint64_t)a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        a28,
        a29,
        a30,
        a31,
        a32,
        a33,
        a34,
        a35,
        a36,
        a37,
        a38,
        a39,
        a40,
        a41,
        a42,
        a43,
        a44,
        a45,
        a46,
        a47,
        a48,
        a49,
        a50,
        a51,
        a52,
        a53,
        a54,
        a55,
        a56,
        a57,
        a58,
        a59,
        a60,
        a61);
      goto LABEL_7;
    case 2uLL:
      return sub_2378DF934(a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, (int)a6, a7, a8, (uint64_t)a9, (uint64_t)a10, (uint64_t)a11, a12, a13, (void (*)(void))sub_237870090);
    case 3uLL:
    case 6uLL:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4uLL:
      goto LABEL_7;
    case 7uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      result = swift_bridgeObjectRetain();
      break;
    case 8uLL:
      result = (uint64_t)sub_2378DE5FC(result, a2, a3, (uint64_t)a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DD81C(uint64_t result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  switch((a61 >> 57) & 7)
  {
    case 0uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 1uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2378884CC(a19, a20, a21);
      sub_2378884CC(a26, a27, a28);
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 2uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      result = swift_bridgeObjectRetain();
      break;
    case 3uLL:
      result = sub_2378DDC74(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (char)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42,
                 a43,
                 a44,
                 a45,
                 a46,
                 a47,
                 a48,
                 a49,
                 a50,
                 a51,
                 a52,
                 a53,
                 a54,
                 a55,
                 a56,
                 a57,
                 a58,
                 a59,
                 a60,
                 a61 & 0xF1FFFFFFFFFFFFFFLL);
      break;
    case 4uLL:
      result = sub_2378DE068(result, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (uint64_t)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 (uint64_t)a28,
                 (uint64_t)a29,
                 a30,
                 a31,
                 a32,
                 a33);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DDC74(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  uint64_t result;
  id v62;
  id v63;
  id v64;

  result = (uint64_t)a29;
  switch(a61 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
      v62 = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787A11C(a12, a13, a14);
      sub_23787A11C(a15, a16, a17);
      sub_23787A11C(a18, a19, a20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2378884CC(a26, a27, a28);
      goto LABEL_3;
    case 2uLL:
      v63 = a4;
      swift_bridgeObjectRetain();
      sub_23787A11C(a9, a10, a11);
      sub_23787A11C(a12, a13, a14);
      result = sub_2378DE02C(a15, a16);
      break;
    case 4uLL:
      sub_23788838C(a2, (uint64_t)a3, (uint64_t)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        (uint64_t)a28,
        a29);
      sub_23787A11C(a38, a39, a40);
      sub_23787A11C(a41, a42, a43);
      sub_23787A11C(a44, a45, a46);
      sub_23787A11C(a47, a48, a49);
      sub_23787A11C(a50, a51, a52);
      sub_23787A11C(a53, a54, a55);
      sub_23787A11C(a56, a57, a58);
      sub_23787A11C(a59, a60, a61);
LABEL_3:
      result = swift_bridgeObjectRetain();
      break;
    case 5uLL:
      v64 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_23787A11C(a10, a11, a12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DE02C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378DE068(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  id v34;

  switch(a31 >> 60)
  {
    case 0uLL:
      swift_bridgeObjectRetain();
      sub_2378DE3E0(a2);
      sub_2378DE3E0(a12);
      swift_bridgeObjectRetain();
      sub_2378DE3E0(a22);
      v33 = a32;
      goto LABEL_5;
    case 1uLL:
    case 0xAuLL:
      result = swift_bridgeObjectRetain();
      break;
    case 2uLL:
      result = sub_2378DE410(a8, a9, a10, a11, a12);
      break;
    case 3uLL:
    case 5uLL:
      swift_bridgeObjectRetain();
      sub_2378DE3E0(a2);
      v33 = a12;
LABEL_5:
      result = sub_2378DE3E0(v33);
      break;
    case 6uLL:
      result = sub_2378DE48C(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31 & 0xFFFFFFFFFFFFFFFLL,
                 a32,
                 a33);
      break;
    case 7uLL:
      result = sub_23787A11C((uint64_t)a6, a7, a8);
      break;
    case 8uLL:
    case 9uLL:
      swift_bridgeObjectRetain();
      v34 = a6;
      swift_bridgeObjectRetain();
      sub_23787A11C(a13, a14, a15);
      sub_23787A11C(a16, a17, a18);
      result = sub_23787D0A0(a19, a20, a21);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DE3E0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2378DE410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5;
  id v6;
  uint64_t result;

  v5 = a5 >> 62;
  if (!(a5 >> 62))
    return swift_bridgeObjectRetain();
  if ((_DWORD)v5 == 2)
  {
    v6 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if ((_DWORD)v5 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2378DE48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  swift_bridgeObjectRetain();
  if (a32 < 0)
  {
    sub_2378DE3E0(a3);
    sub_2378DE3E0(a13);
    swift_bridgeObjectRetain();
    sub_2378DE3E0(a23);
    a12 = a33;
  }
  else
  {
    sub_2378DE3E0(a2);
  }
  return sub_2378DE3E0(a12);
}

void *sub_2378DE5FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  void *result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_237870090(a3, a4, a5, a6, a7);
    return sub_23787007C(a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_2378DE6A4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

#error "2378DE78C: call analysis failed (funcsize=51)"

void sub_2378DE7AC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61,uint64_t a62,unint64_t a63)
{
  switch(a63 >> 60)
  {
    case 1uLL:
      sub_2378DEB7C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        a28,
        a29,
        a30,
        a31,
        a32,
        a33,
        a34,
        a35,
        a36,
        a37,
        a38,
        a39,
        a40,
        a41,
        a42,
        a43,
        a44,
        a45,
        a46,
        a47,
        a48,
        a49,
        a50,
        a51,
        a52,
        a53,
        a54,
        a55,
        a56,
        a57,
        a58,
        a59,
        a60,
        a61);
      goto LABEL_7;
    case 2uLL:
      sub_2378DF934(a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, (int)a6, a7, a8, (uint64_t)a9, (uint64_t)a10, (uint64_t)a11, a12, a13, (void (*)(void))sub_2378702E0);
      return;
    case 3uLL:
    case 6uLL:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4uLL:
      goto LABEL_7;
    case 7uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    case 8uLL:
      sub_2378DF9A8(a1, a2, a3, (uint64_t)a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13);
      break;
    default:
      return;
  }
}

uint64_t sub_2378DEB7C(uint64_t result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  switch((a61 >> 57) & 7)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 1uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378886C4(a19, a20, a21);
      sub_2378886C4(a26, a27, a28);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    case 3uLL:
      result = sub_2378DEFDC(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (char)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42,
                 a43,
                 a44,
                 a45,
                 a46,
                 a47,
                 a48,
                 a49,
                 a50,
                 a51,
                 a52,
                 a53,
                 a54,
                 a55,
                 a56,
                 a57,
                 a58,
                 a59,
                 a60,
                 a61 & 0xF1FFFFFFFFFFFFFFLL);
      break;
    case 4uLL:
      result = sub_2378DF3D0(result, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (uint64_t)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 (uint64_t)a28,
                 (uint64_t)a29,
                 a30,
                 a31,
                 a32,
                 a33);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DEFDC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  uint64_t result;

  result = (uint64_t)a29;
  switch(a61 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787A134(a12, a13, a14);
      sub_23787A134(a15, a16, a17);
      sub_23787A134(a18, a19, a20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378886C4(a26, a27, a28);
      goto LABEL_3;
    case 2uLL:

      swift_bridgeObjectRelease();
      sub_23787A134(a9, a10, a11);
      sub_23787A134(a12, a13, a14);
      result = sub_2378DF394(a15, a16);
      break;
    case 4uLL:
      sub_237888584(a2, (uint64_t)a3, (uint64_t)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        (uint64_t)a28,
        a29);
      sub_23787A134(a38, a39, a40);
      sub_23787A134(a41, a42, a43);
      sub_23787A134(a44, a45, a46);
      sub_23787A134(a47, a48, a49);
      sub_23787A134(a50, a51, a52);
      sub_23787A134(a53, a54, a55);
      sub_23787A134(a56, a57, a58);
      sub_23787A134(a59, a60, a61);
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    case 5uLL:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_23787A134(a10, a11, a12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DF394(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2378DF3D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  switch(a31 >> 60)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      sub_2378706C8(a2);
      sub_2378706C8(a12);
      swift_bridgeObjectRelease();
      sub_2378706C8(a22);
      v33 = a32;
      goto LABEL_5;
    case 1uLL:
    case 0xAuLL:
      result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      result = sub_2378DF748(a8, a9, a10, a11, a12);
      break;
    case 3uLL:
    case 5uLL:
      swift_bridgeObjectRelease();
      sub_2378706C8(a2);
      v33 = a12;
LABEL_5:
      result = sub_2378706C8(v33);
      break;
    case 6uLL:
      result = sub_2378DF7C4(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31 & 0xFFFFFFFFFFFFFFFLL,
                 a32,
                 a33);
      break;
    case 7uLL:
      result = sub_23787A134((uint64_t)a6, a7, a8);
      break;
    case 8uLL:
    case 9uLL:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_23787A134(a13, a14, a15);
      sub_23787A134(a16, a17, a18);
      result = sub_23787D0B4(a19, a20, a21);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2378DF748(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5;
  uint64_t result;

  v5 = a5 >> 62;
  if (!(a5 >> 62))
    return swift_bridgeObjectRelease();
  if ((_DWORD)v5 == 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if ((_DWORD)v5 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2378DF7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  swift_bridgeObjectRelease();
  if (a32 < 0)
  {
    sub_2378706C8(a3);
    sub_2378706C8(a13);
    swift_bridgeObjectRelease();
    sub_2378706C8(a23);
    a12 = a33;
  }
  else
  {
    sub_2378706C8(a2);
  }
  return sub_2378706C8(a12);
}

uint64_t sub_2378DF934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void))
{
  uint64_t result;

  if ((~a5 & 0xFELL) != 0)
  {
    a13();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a13)(a7, a8, a9, a10, a11);
  }
  return result;
}

void sub_2378DF9A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_2378702E0(a3, a4, a5, a6, a7);
    sub_2378702CC(a9, a10, a11, a12, a13);
  }
}

uint64_t sub_2378DFA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23798221C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2378DFA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[8];

  v7 = type metadata accessor for WeakBox(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v9 = MEMORY[0x23B81FC48](v11);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  *a5 = v9;
  return result;
}

void WeakBox.base.getter()
{
  JUMPOUT(0x23B81FC48);
}

uint64_t WeakBox.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_2378DFB2C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2378DFB3C()
{
  return 8;
}

_QWORD *sub_2378DFB48(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2378DFB54()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration.BlurConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration.BlurConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

BOOL static CPFontError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CPFontError.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t CPFontError.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

unint64_t sub_2378DFC4C()
{
  unint64_t result;

  result = qword_256820850;
  if (!qword_256820850)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for CPFontError, &type metadata for CPFontError);
    atomic_store(result, (unint64_t *)&qword_256820850);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CPFontError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2378DFCEC + 4 * byte_237A91B1D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2378DFD20 + 4 * byte_237A91B18[v4]))();
}

uint64_t sub_2378DFD20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DFD28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2378DFD30);
  return result;
}

uint64_t sub_2378DFD3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2378DFD44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2378DFD48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2378DFD50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CPFontError()
{
  return &type metadata for CPFontError;
}

uint64_t sub_2378DFD6C(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[24];
  uint64_t v11;

  v1 = *a1;
  sub_237A87818();
  v2 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_237A87E78();
    swift_unknownObjectRelease();
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_2378DFFE4((uint64_t)&v8, (uint64_t)v10);
  if (!v11)
    goto LABEL_13;
  if ((swift_dynamicCast() & 1) == 0 || v7 != 6)
    return 0;
  sub_237A87818();
  v4 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v1, sel_objectForKey_, v4);

  if (v5)
  {
    sub_237A87E78();
    swift_unknownObjectRelease();
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_2378DFFE4((uint64_t)&v8, (uint64_t)v10);
  if (v11)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return 0;
  }
  else
  {
LABEL_13:
    sub_2378E002C((uint64_t)v10);
  }
  return 0;
}

id sub_2378DFF08()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  id v5;
  id v7;

  v1 = objc_msgSend(v0, sel_fontDescriptor);
  v2 = objc_msgSend(v1, sel_fontDescriptorWithSymbolicTraits_, 1);

  if (v2
    && (v3 = v2,
        objc_msgSend(v7, sel_pointSize),
        v5 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v3, v4),
        v3,
        v3,
        v5))
  {
    return v5;
  }
  else
  {
    return v7;
  }
}

uint64_t sub_2378DFFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2378E002C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WidgetHostViewControllerWrapperView.init(identifier:widget:configurationIdentifier:metrics:metricsDefineSize:size:clipsToCornerRadius:viewControllerHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(double *)(a9 + 56) = a10;
  *(double *)(a9 + 64) = a11;
  *(_BYTE *)(a9 + 72) = a8;
  *(_QWORD *)(a9 + 80) = a12;
  *(_QWORD *)(a9 + 88) = a13;
  return result;
}

id WidgetHostViewControllerWrapperView.makeUIViewController(context:)()
{
  double *v0;
  uint64_t v1;
  double v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  objc_class *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id result;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  int v26;
  void (*v27)(id);
  objc_super v28;

  v2 = *v0;
  v1 = *((_QWORD *)v0 + 1);
  v3 = (void *)*((_QWORD *)v0 + 2);
  v5 = *((_QWORD *)v0 + 4);
  v4 = (void *)*((_QWORD *)v0 + 5);
  v6 = *((unsigned __int8 *)v0 + 48);
  v7 = v0[7];
  v8 = v0[8];
  v26 = *((unsigned __int8 *)v0 + 72);
  v27 = (void (*)(id))*((_QWORD *)v0 + 10);
  v9 = (objc_class *)type metadata accessor for WidgetHostViewController();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = &v10[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier];
  *(double *)v11 = v2;
  *((_QWORD *)v11 + 1) = v1;
  v12 = v3;
  v13 = v4;
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v28.receiver = v10;
  v28.super_class = v9;
  v15 = objc_msgSendSuper2(&v28, sel_initWithWidget_metrics_widgetConfigurationIdentifier_, v3, v4, v14);

  objc_msgSend(v15, sel_setVisibleEntryShouldSnapshot_, 1);
  objc_msgSend(v15, sel_setContentType_, 0);
  objc_msgSend(v15, sel_setCanAppearInSecureEnvironment_, 1);
  objc_msgSend(v15, sel_setColorScheme_, 2);
  v16 = objc_allocWithZone(MEMORY[0x24BE16AA0]);
  v17 = v15;
  v18 = objc_msgSend(v16, sel_initWithRenderingMode_backgroundViewPolicy_, 1, 1);
  objc_msgSend(v17, sel_setRenderScheme_, v18);

  objc_msgSend(v17, sel_setVisibility_, 2);
  objc_msgSend(v17, sel_setMetricsDefineSize_, v6);
  objc_msgSend(v17, sel_setShowsWidgetLabel_, 0);
  objc_msgSend(v17, sel_setInteractionDisabled_, 1);
  result = objc_msgSend(v17, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v20 = result;
  objc_msgSend(result, sel_setFrame_, 0.0, 0.0, v7, v8);

  result = objc_msgSend(v17, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = result;
  v22 = objc_msgSend(result, sel_layer);

  objc_msgSend(v22, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);
  result = objc_msgSend(v17, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v23 = result;
  v24 = objc_msgSend(result, sel_layer);

  v25 = 0.0;
  if ((v26 & v6) == 1)
    objc_msgSend(v4, sel__effectiveCornerRadius, 0.0);
  objc_msgSend(v24, sel_setCornerRadius_, v25);

  objc_msgSend(v17, sel_setPresentationMode_, 2);
  if (v27)
    v27(v17);
  return v17;
}

