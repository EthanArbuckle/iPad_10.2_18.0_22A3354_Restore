uint64_t dispatch thunk of DataSourceManager.__allocating_init(_:preLoadAll:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DataSourceManager.startListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DataSourceManager.stopListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

ValueMetadata *type metadata accessor for DataSourceManagerKey()
{
  return &type metadata for DataSourceManagerKey;
}

uint64_t SlotView.init(slot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;

  *(_QWORD *)a2 = swift_getKeyPath();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = swift_getKeyPath();
  *(_BYTE *)(a2 + 32) = 0;
  v4 = type metadata accessor for SlotView();
  v5 = (uint64_t *)(a2 + *(int *)(v4 + 24));
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  swift_storeEnumTagMultiPayload();
  return sub_2378D0858(a1, a2 + *(int *)(v4 + 28), (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

uint64_t sub_2379DDAF8()
{
  sub_237953B64();
  return sub_237A86B88();
}

uint64_t sub_2379DDB34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_2378BBFE0(a1, (uint64_t)&v9 - v6, &qword_256820D50);
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v4, &qword_256820D50);
  sub_237953B64();
  sub_237A86B94();
  return sub_2378BC024((uint64_t)v7, &qword_256820D50);
}

double sub_2379DDC08@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237953E28();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_2379DDC54@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237953E28();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2379DDCA0(uint64_t *a1)
{
  sub_2378A2BF4(*a1);
  sub_237953E28();
  return sub_237A86B94();
}

uint64_t type metadata accessor for SlotView()
{
  uint64_t result;

  result = qword_256826A60;
  if (!qword_256826A60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2379DDD38()
{
  sub_237953B64();
  return sub_237A86B88();
}

uint64_t SlotView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SlotView() + 28);
  v4 = v3 + *(int *)(type metadata accessor for Slot() + 36);
  return sub_2379DDDC0(v4, a1);
}

uint64_t sub_2379DDDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v40 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826AF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826AC8);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (uint64_t)&v31 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826AB8);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826AD8);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Instrument();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(a1, (uint64_t)v15, &qword_25681F430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_2378BC024((uint64_t)v15, &qword_25681F430);
    v20 = 1;
    v21 = v40;
  }
  else
  {
    sub_2378D0858((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    *v12 = sub_237A874AC();
    v12[1] = v22;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826AF8);
    sub_2379DE284(v2, (uint64_t)v19, (uint64_t)v12 + *(int *)(v23 + 44));
    if (v19[*(int *)(v16 + 24) + 25] == 1)
    {
      v24 = (uint64_t *)(v2 + *(int *)(type metadata accessor for SlotView() + 28));
      v25 = v24[5];
      v26 = (uint64_t)v35;
      if (v25)
      {
        if (v25 == 1)
        {
          sub_2378E38CC();
        }
        else
        {
          sub_23795C508(*v24, (uint64_t)v49);
          v41 = v49[0];
          v42 = v49[1];
          v43 = v50;
          v44 = v51;
          v45 = v52;
          v46 = v53;
          v47 = v54;
          v48 = v55;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256823050);
          sub_2378B70D4((unint64_t *)&qword_256823058, &qword_256823050, MEMORY[0x24BDEB718]);
        }
      }
      else
      {
        sub_2378E3910();
      }
      v27 = sub_237A87428();
      sub_2378BBFE0((uint64_t)v12, (uint64_t)v6, &qword_256826AD8);
      v28 = &v6[*(int *)(v36 + 36)];
      *(_QWORD *)v28 = v27;
      *((_WORD *)v28 + 4) = 256;
      v29 = v32;
      sub_237870370((uint64_t)v6, v32, &qword_256826AC8);
      sub_2378BBFE0(v29, v37, &qword_256826AC8);
      swift_storeEnumTagMultiPayload();
      sub_2379E191C();
      sub_2378B70D4(&qword_256826AD0, &qword_256826AD8, MEMORY[0x24BDF4750]);
      sub_237A86D44();
      sub_2378BC024(v29, &qword_256826AC8);
    }
    else
    {
      sub_2378BBFE0((uint64_t)v12, v37, &qword_256826AD8);
      swift_storeEnumTagMultiPayload();
      sub_2379E191C();
      sub_2378B70D4(&qword_256826AD0, &qword_256826AD8, MEMORY[0x24BDF4750]);
      v26 = (uint64_t)v35;
      sub_237A86D44();
    }
    sub_2378BC024((uint64_t)v12, &qword_256826AD8);
    sub_2378DE6A4((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    v21 = v40;
    sub_237870370(v26, v40, &qword_256826AB8);
    v20 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v21, v20, 1, v39);
}

uint64_t sub_2379DE274()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379DE284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[65];

  v44 = a2;
  v46 = a3;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B00);
  MEMORY[0x24BDAC7A8](v45);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Instrument();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for InstrumentView();
  MEMORY[0x24BDAC7A8](v43);
  v35 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v34 - v11;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B08);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B10);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B18);
  MEMORY[0x24BDAC7A8](v15);
  v42 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 24);
  v38 = a1;
  LOBYTE(a1) = *(_BYTE *)(a1 + 32);
  sub_237971568(v20, a1);
  sub_23796D96C(v20, a1, v47);
  v21 = a1;
  v22 = v44;
  sub_237971574(v20, v21);
  sub_2378D07D8(v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  LOBYTE(v20) = LayoutOutput.isVisible(_:)((uint64_t)v19);
  sub_2378BC024((uint64_t)v19, &qword_25681F430);
  if ((v20 & 1) != 0)
  {
    v34 = v15;
    sub_23788F46C((const void *)(v22 + *(int *)(v6 + 20)), v47);
    v23 = sub_2378A1BDC((uint64_t)v47);
    if (v23 != 6 && v23)
    {
      v26 = v36;
      sub_2378D07D8(v22, v36, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
      type metadata accessor for LayoutTreatment(0);
      sub_23786FAA0(&qword_2568234B0, type metadata accessor for LayoutTreatment, (uint64_t)&protocol conformance descriptor for LayoutTreatment);
      v27 = sub_237A86A20();
      v28 = v35;
      *v35 = v27;
      v28[1] = v29;
      v28[2] = swift_getKeyPath();
      *((_BYTE *)v28 + 24) = 0;
      v30 = v43;
      v31 = (uint64_t *)((char *)v28 + *(int *)(v43 + 24));
      *v31 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
      swift_storeEnumTagMultiPayload();
      sub_2378D0858(v26, (uint64_t)v28 + *(int *)(v30 + 28), (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
      v32 = (uint64_t)v28;
      v33 = v37;
      sub_2378D0858(v32, v37, (uint64_t (*)(_QWORD))type metadata accessor for InstrumentView);
      sub_2378D07D8(v33, v41, (uint64_t (*)(_QWORD))type metadata accessor for InstrumentView);
      swift_storeEnumTagMultiPayload();
      sub_23796CF14(&qword_256826B28, &qword_256826B10, (uint64_t (*)(void))sub_2379E1A54);
      sub_23786FAA0(&qword_256826B40, (uint64_t (*)(uint64_t))type metadata accessor for InstrumentView, (uint64_t)&protocol conformance descriptor for InstrumentView);
      v24 = (uint64_t)v42;
      sub_237A86D44();
      sub_2378DE6A4(v33, (uint64_t (*)(_QWORD))type metadata accessor for InstrumentView);
    }
    else
    {
      sub_2379DE7F0(v22, (uint64_t)v14);
      sub_2378BBFE0((uint64_t)v14, v41, &qword_256826B10);
      swift_storeEnumTagMultiPayload();
      sub_23796CF14(&qword_256826B28, &qword_256826B10, (uint64_t (*)(void))sub_2379E1A54);
      sub_23786FAA0(&qword_256826B40, (uint64_t (*)(uint64_t))type metadata accessor for InstrumentView, (uint64_t)&protocol conformance descriptor for InstrumentView);
      v24 = (uint64_t)v42;
      sub_237A86D44();
      sub_2378BC024((uint64_t)v14, &qword_256826B10);
    }
    sub_2378BBFE0(v24, (uint64_t)v5, &qword_256826B18);
    swift_storeEnumTagMultiPayload();
    sub_2379E19B8();
    sub_237A86D44();
    return sub_2378BC024(v24, &qword_256826B18);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_2379E19B8();
    return sub_237A86D44();
  }
}

uint64_t sub_2379DE7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);

  v3 = v2;
  v42 = a1;
  v48 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256826608);
  v9 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  v47 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v43 = (uint64_t *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568265D8);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v2;
  v22 = v3[1];
  v23 = *((_BYTE *)v3 + 16);
  sub_2379CCF44(v21, v22, v23);
  sub_23796DD50(v21, v22, v23, (uint64_t *)&v49);
  sub_2379CACEC(v21, v22, v23);
  v24 = v49;
  if (!v49)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v48, 1, 1, v17);
  v39 = v18;
  v40 = v17;
  v25 = type metadata accessor for SlotView();
  sub_23796DF80((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2378A2C04((uint64_t)v24);
    sub_2378BC024((uint64_t)v13, &qword_256820D50);
    v26 = 1;
    v27 = v46;
  }
  else
  {
    v29 = v41;
    sub_237870370((uint64_t)v13, v41, &qword_256820D58);
    v30 = (char *)v3 + *(int *)(v25 + 28);
    swift_retain();
    v31 = v24(v30, v42, v29);
    sub_2378A2C04((uint64_t)v24);
    sub_2378A2C04((uint64_t)v24);
    v32 = type metadata accessor for Slot();
    v33 = v45;
    sub_2378BBFE0((uint64_t)&v30[*(int *)(v32 + 44)], v45, &qword_256820300);
    v34 = v44;
    sub_237870370(v33, v44, &qword_2568202F8);
    v27 = v46;
    v35 = v43;
    sub_2378BBFE0(v34, (uint64_t)v43 + *(int *)(v46 + 52), &qword_2568202F8);
    *v35 = v31;
    sub_2378BC024(v34, &qword_2568202F8);
    sub_2378BC024(v29, &qword_256820D58);
    sub_237870370((uint64_t)v35, (uint64_t)v20, qword_256826608);
    v26 = 0;
  }
  v37 = v39;
  v36 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v20, v26, 1, v27);
  v38 = v48;
  sub_237870370((uint64_t)v20, v48, &qword_2568265D8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
}

uint64_t sub_2379DEBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = v4 + *(int *)(type metadata accessor for Slot() + 36);
  return sub_2379DDDC0(v5, a2);
}

unint64_t initializeBufferWithCopyOfBuffer for SlotView(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_2379CCF44(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 24);
    LOBYTE(v8) = *(_BYTE *)(a2 + 32);
    sub_237971568(v10, v8);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v8;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v18 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 28);
    v20 = a1 + v19;
    v21 = a2 + v19;
    v22 = *(_QWORD *)(a2 + v19 + 40);
    v23 = *(_OWORD *)(a2 + v19 + 16);
    *(_OWORD *)v20 = *(_OWORD *)(a2 + v19);
    *(_OWORD *)(v20 + 16) = v23;
    if (v22 >= 2)
    {
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      *(_QWORD *)(v20 + 40) = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
    }
    v24 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v24;
    v25 = *(_OWORD *)(v21 + 96);
    *(_OWORD *)(v20 + 80) = *(_OWORD *)(v21 + 80);
    *(_OWORD *)(v20 + 96) = v25;
    *(_OWORD *)(v20 + 112) = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    v26 = (int *)type metadata accessor for Slot();
    v27 = v26[9];
    v28 = (char *)(v20 + v27);
    v29 = (char *)(v21 + v27);
    v30 = type metadata accessor for Instrument();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    if (v32(v29, 1, v30))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v28, v29, v34);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v28[*(int *)(v35 + 52)] = *(_QWORD *)&v29[*(int *)(v35 + 52)];
      v36 = *(int *)(v30 + 20);
      v37 = (uint64_t *)&v28[v36];
      v38 = (uint64_t *)&v29[v36];
      v91 = v31;
      v90 = v28;
      v89 = v26;
      v88 = v30;
      v87 = v29;
      v123 = v38[7];
      v124 = v38[6];
      v121 = (void *)v38[9];
      v122 = (void *)v38[8];
      v119 = v38[11];
      v120 = (void *)v38[10];
      v117 = v38[13];
      v118 = v38[12];
      v115 = v38[15];
      v116 = v38[14];
      v113 = v38[17];
      v114 = v38[16];
      v111 = v38[19];
      v112 = v38[18];
      v109 = v38[21];
      v110 = (void *)v38[20];
      v107 = v38[23];
      v108 = v38[22];
      v105 = v38[25];
      v106 = v38[24];
      v104 = v38[26];
      v103 = (void *)v38[27];
      v102 = (void *)v38[28];
      v101 = v38[29];
      v100 = v38[30];
      v99 = v38[31];
      v98 = v38[32];
      v97 = v38[33];
      v96 = v38[34];
      v95 = v38[35];
      v94 = v38[36];
      v93 = v38[37];
      v92 = v38[38];
      v62 = v38[39];
      v63 = v38[40];
      v64 = v38[41];
      v65 = v38[42];
      v66 = v38[43];
      v67 = v38[44];
      v68 = v38[45];
      v69 = v38[46];
      v70 = v38[47];
      v71 = v38[48];
      v72 = v38[49];
      v73 = v38[50];
      v74 = v38[51];
      v75 = v38[52];
      v76 = v38[53];
      v77 = v38[54];
      v78 = v38[55];
      v79 = v38[56];
      v80 = v38[57];
      v81 = v38[58];
      v82 = v38[59];
      v83 = v38[60];
      v84 = v38[61];
      v85 = v38[62];
      v86 = v38[63];
      v39 = *v38;
      v40 = v38[1];
      v41 = (void *)v38[2];
      v42 = (void *)v38[3];
      v43 = (void *)v38[4];
      v44 = (void *)v38[5];
      sub_2378DD44C(*v38, v40, v41, v42, v43, v44, v124, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112,
        v111,
        v110,
        v109,
        v108,
        v107,
        v106,
        v105,
        v104,
        v103,
        v102,
        v101,
        v100,
        v99,
        v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v92,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85);
      *v37 = v39;
      v37[1] = v40;
      v37[2] = (uint64_t)v41;
      v37[3] = (uint64_t)v42;
      v26 = v89;
      v37[4] = (uint64_t)v43;
      v37[5] = (uint64_t)v44;
      v37[6] = v124;
      v37[7] = v123;
      v37[8] = (uint64_t)v122;
      v37[9] = (uint64_t)v121;
      v37[10] = (uint64_t)v120;
      v37[11] = v119;
      v37[12] = v118;
      v37[13] = v117;
      v37[14] = v116;
      v37[15] = v115;
      v37[16] = v114;
      v37[17] = v113;
      v37[18] = v112;
      v37[19] = v111;
      v37[20] = (uint64_t)v110;
      v37[21] = v109;
      v37[22] = v108;
      v37[23] = v107;
      v37[24] = v106;
      v37[25] = v105;
      v37[26] = v104;
      v37[27] = (uint64_t)v103;
      v37[28] = (uint64_t)v102;
      v37[29] = v101;
      v37[30] = v100;
      v37[31] = v99;
      v37[32] = v98;
      v37[33] = v97;
      v37[34] = v96;
      v37[35] = v95;
      v37[36] = v94;
      v37[37] = v93;
      v37[38] = v92;
      v37[39] = v62;
      v37[40] = v63;
      v37[41] = v64;
      v37[42] = v65;
      v37[43] = v66;
      v37[44] = v67;
      v37[45] = v68;
      v37[46] = v69;
      v37[47] = v70;
      v37[48] = v71;
      v37[49] = v72;
      v37[50] = v73;
      v37[51] = v74;
      v37[52] = v75;
      v37[53] = v76;
      v37[54] = v77;
      v37[55] = v78;
      v37[56] = v79;
      v37[57] = v80;
      v37[58] = v81;
      v37[59] = v82;
      v37[60] = v83;
      v37[61] = v84;
      v37[62] = v85;
      v37[63] = v86;
      v45 = *(int *)(v88 + 24);
      v46 = &v90[v45];
      v47 = &v87[v45];
      v48 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
      *((_WORD *)v46 + 12) = *((_WORD *)v47 + 12);
      v49 = *((_QWORD *)v47 + 5);
      *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
      *((_QWORD *)v46 + 5) = v49;
      v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v90, 0, 1, v88);
    }
    v51 = v26[10];
    v52 = (_QWORD *)(v20 + v51);
    v53 = (_QWORD *)(v21 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v26[11];
    v56 = v20 + v55;
    v57 = v21 + v55;
    v58 = sub_237A86594();
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
    swift_bridgeObjectRetain();
    v59(v56, v57, v58);
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
    *(_QWORD *)(v56 + *(int *)(v60 + 52)) = *(_QWORD *)(v57 + *(int *)(v60 + 52));
  }
  return a1;
}

uint64_t destroy for SlotView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  sub_2379CACEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_237971574(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = sub_237A86594();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 28);
  if (*(_QWORD *)(v7 + 40) >= 2uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for Slot();
  v9 = v7 + *(int *)(v8 + 36);
  v10 = type metadata accessor for Instrument();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    v12 = v9 + *(int *)(v10 + 20);
    v30 = *(_OWORD *)(v12 + 464);
    v31 = *(_OWORD *)(v12 + 480);
    v28 = *(_OWORD *)(v12 + 432);
    v29 = *(_OWORD *)(v12 + 448);
    v26 = *(_OWORD *)(v12 + 400);
    v27 = *(_OWORD *)(v12 + 416);
    v24 = *(_OWORD *)(v12 + 368);
    v25 = *(_OWORD *)(v12 + 384);
    v22 = *(_OWORD *)(v12 + 336);
    v23 = *(_OWORD *)(v12 + 352);
    v20 = *(_OWORD *)(v12 + 304);
    v21 = *(_OWORD *)(v12 + 320);
    v18 = *(_OWORD *)(v12 + 272);
    v19 = *(_OWORD *)(v12 + 288);
    v16 = *(_OWORD *)(v12 + 240);
    v17 = *(_OWORD *)(v12 + 256);
    sub_2378DE7AC(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void **)(v12 + 32), *(void **)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(void **)(v12 + 80), *(_QWORD *)(v12 + 88), *(_QWORD *)(v12 + 96), *(_QWORD *)(v12 + 104), *(_QWORD *)(v12 + 112), *(_QWORD *)(v12 + 120), *(_QWORD *)(v12 + 128), *(_QWORD *)(v12 + 136), *(_QWORD *)(v12 + 144),
      *(_QWORD *)(v12 + 152),
      *(void **)(v12 + 160),
      *(_QWORD *)(v12 + 168),
      *(_QWORD *)(v12 + 176),
      *(_QWORD *)(v12 + 184),
      *(_QWORD *)(v12 + 192),
      *(_QWORD *)(v12 + 200),
      *(_QWORD *)(v12 + 208),
      *(void **)(v12 + 216),
      *(void **)(v12 + 224),
      *(_QWORD *)(v12 + 232),
      v16,
      *((uint64_t *)&v16 + 1),
      v17,
      *((uint64_t *)&v17 + 1),
      v18,
      *((uint64_t *)&v18 + 1),
      v19,
      *((uint64_t *)&v19 + 1),
      v20,
      SBYTE8(v20),
      v21,
      *((uint64_t *)&v21 + 1),
      v22,
      *((uint64_t *)&v22 + 1),
      v23,
      SBYTE8(v23),
      v24,
      *((uint64_t *)&v24 + 1),
      v25,
      *((uint64_t *)&v25 + 1),
      v26,
      SBYTE8(v26),
      v27,
      *((uint64_t *)&v27 + 1),
      v28,
      *((uint64_t *)&v28 + 1),
      v29,
      SBYTE8(v29),
      v30,
      *((uint64_t *)&v30 + 1),
      v31,
      *((uint64_t *)&v31 + 1),
      *(_QWORD *)(v12 + 496));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v13 = v7 + *(int *)(v8 + 44);
  v14 = sub_237A86594();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  void *v121;
  void *v122;
  uint64_t v123;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_2379CCF44(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_237971568(v9, v7);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_237A86594();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 40);
  v21 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v21;
  if (v20 >= 2)
  {
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 40) = v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  v22 = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 64) = v22;
  v23 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 96) = v23;
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(v19 + 112);
  *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
  v24 = (int *)type metadata accessor for Slot();
  v25 = v24[9];
  v26 = (char *)(v18 + v25);
  v27 = (char *)(v19 + v25);
  v28 = type metadata accessor for Instrument();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v26, v27, v32);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&v26[*(int *)(v33 + 52)] = *(_QWORD *)&v27[*(int *)(v33 + 52)];
    v34 = *(int *)(v28 + 20);
    v35 = (uint64_t *)&v26[v34];
    v36 = (uint64_t *)&v27[v34];
    v92 = v29;
    v91 = v26;
    v90 = v24;
    v89 = v28;
    v88 = v27;
    v87 = a1;
    v122 = (void *)v36[8];
    v123 = v36[7];
    v120 = (void *)v36[10];
    v121 = (void *)v36[9];
    v118 = v36[12];
    v119 = v36[11];
    v116 = v36[14];
    v117 = v36[13];
    v114 = v36[16];
    v115 = v36[15];
    v112 = v36[18];
    v113 = v36[17];
    v110 = (void *)v36[20];
    v111 = v36[19];
    v108 = v36[22];
    v109 = v36[21];
    v106 = v36[24];
    v107 = v36[23];
    v104 = v36[26];
    v105 = v36[25];
    v103 = (void *)v36[27];
    v102 = (void *)v36[28];
    v101 = v36[29];
    v100 = v36[30];
    v99 = v36[31];
    v98 = v36[32];
    v97 = v36[33];
    v96 = v36[34];
    v95 = v36[35];
    v94 = v36[36];
    v93 = v36[37];
    v61 = v36[38];
    v62 = v36[39];
    v63 = v36[40];
    v64 = v36[41];
    v65 = v36[42];
    v66 = v36[43];
    v67 = v36[44];
    v68 = v36[45];
    v69 = v36[46];
    v70 = v36[47];
    v71 = v36[48];
    v72 = v36[49];
    v73 = v36[50];
    v74 = v36[51];
    v75 = v36[52];
    v76 = v36[53];
    v77 = v36[54];
    v78 = v36[55];
    v79 = v36[56];
    v80 = v36[57];
    v81 = v36[58];
    v82 = v36[59];
    v83 = v36[60];
    v84 = v36[61];
    v85 = v36[62];
    v86 = v36[63];
    v37 = *v36;
    v38 = v36[1];
    v39 = (void *)v36[2];
    v40 = (void *)v36[3];
    v41 = (void *)v36[4];
    v42 = (void *)v36[5];
    v43 = v36[6];
    sub_2378DD44C(*v36, v38, v39, v40, v41, v42, v43, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112,
      v111,
      v110,
      v109,
      v108,
      v107,
      v106,
      v105,
      v104,
      v103,
      v102,
      v101,
      v100,
      v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85);
    *v35 = v37;
    v35[1] = v38;
    v35[2] = (uint64_t)v39;
    v35[3] = (uint64_t)v40;
    v24 = v90;
    v35[4] = (uint64_t)v41;
    v35[5] = (uint64_t)v42;
    v35[6] = v43;
    a1 = v87;
    v35[7] = v123;
    v35[8] = (uint64_t)v122;
    v35[9] = (uint64_t)v121;
    v35[10] = (uint64_t)v120;
    v35[11] = v119;
    v35[12] = v118;
    v35[13] = v117;
    v35[14] = v116;
    v35[15] = v115;
    v35[16] = v114;
    v35[17] = v113;
    v35[18] = v112;
    v35[19] = v111;
    v35[20] = (uint64_t)v110;
    v35[21] = v109;
    v35[22] = v108;
    v35[23] = v107;
    v35[24] = v106;
    v35[25] = v105;
    v35[26] = v104;
    v35[27] = (uint64_t)v103;
    v35[28] = (uint64_t)v102;
    v35[29] = v101;
    v35[30] = v100;
    v35[31] = v99;
    v35[32] = v98;
    v35[33] = v97;
    v35[34] = v96;
    v35[35] = v95;
    v35[36] = v94;
    v35[37] = v93;
    v35[38] = v61;
    v35[39] = v62;
    v35[40] = v63;
    v35[41] = v64;
    v35[42] = v65;
    v35[43] = v66;
    v35[44] = v67;
    v35[45] = v68;
    v35[46] = v69;
    v35[47] = v70;
    v35[48] = v71;
    v35[49] = v72;
    v35[50] = v73;
    v35[51] = v74;
    v35[52] = v75;
    v35[53] = v76;
    v35[54] = v77;
    v35[55] = v78;
    v35[56] = v79;
    v35[57] = v80;
    v35[58] = v81;
    v35[59] = v82;
    v35[60] = v83;
    v35[61] = v84;
    v35[62] = v85;
    v35[63] = v86;
    v44 = *(int *)(v89 + 24);
    v45 = &v91[v44];
    v46 = &v88[v44];
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
    *((_WORD *)v45 + 12) = *((_WORD *)v46 + 12);
    v48 = *((_QWORD *)v46 + 5);
    *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
    *((_QWORD *)v45 + 5) = v48;
    v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49(v91, 0, 1, v89);
  }
  v50 = v24[10];
  v51 = (_QWORD *)(v18 + v50);
  v52 = (_QWORD *)(v19 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v24[11];
  v55 = v18 + v54;
  v56 = v19 + v54;
  v57 = sub_237A86594();
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
  swift_bridgeObjectRetain();
  v58(v55, v56, v57);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v55 + *(int *)(v59 + 52)) = *(_QWORD *)(v56 + *(int *)(v59 + 52));
  return a1;
}

uint64_t assignWithCopy for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  int v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  void *v223;
  void *v224;
  void *v225;
  void *v226;
  void *v227;
  void *v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  int *v240;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_2379CCF44(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_2379CACEC(v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_237971568(v12, v7);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v7;
  sub_237971574(v13, v14);
  if (a1 != a2)
  {
    v15 = *(int *)(a3 + 24);
    v16 = (_QWORD *)(a1 + v15);
    v17 = (_QWORD *)(a2 + v15);
    sub_2378BC024(a1 + v15, &qword_256820B20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v22 = *(int *)(a3 + 28);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 40);
  v26 = v24[5];
  if (v25 >= 2)
  {
    if (v26 >= 2)
    {
      *v23 = *v24;
      v23[1] = v24[1];
      v23[2] = v24[2];
      v23[3] = v24[3];
      v23[4] = v24[4];
      v23[5] = v24[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2378BC024((uint64_t)v23, &qword_256823068);
      v30 = *((_OWORD *)v24 + 1);
      v29 = *((_OWORD *)v24 + 2);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v30;
      *((_OWORD *)v23 + 2) = v29;
    }
  }
  else if (v26 >= 2)
  {
    *v23 = *v24;
    v23[1] = v24[1];
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    v23[4] = v24[4];
    v23[5] = v24[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)v24;
    v28 = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    *((_OWORD *)v23 + 2) = v28;
    *(_OWORD *)v23 = v27;
  }
  v23[6] = v24[6];
  v23[7] = v24[7];
  v23[8] = v24[8];
  v23[9] = v24[9];
  v23[10] = v24[10];
  v23[11] = v24[11];
  v23[12] = v24[12];
  v23[13] = v24[13];
  v23[14] = v24[14];
  v23[15] = v24[15];
  v23[16] = v24[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v240 = (int *)type metadata accessor for Slot();
  v31 = v240[9];
  v32 = (char *)v23 + v31;
  v33 = (char *)v24 + v31;
  v34 = type metadata accessor for Instrument();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v32;
  v38 = v36(v32, 1, v34);
  v39 = v33;
  v40 = v36(v33, 1, v34);
  if (!v38)
  {
    if (!v40)
    {
      v66 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v37, v33, v66);
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v37[*(int *)(v67 + 52)] = *(_QWORD *)&v33[*(int *)(v67 + 52)];
      v68 = v34;
      v69 = *(int *)(v34 + 20);
      v70 = &v37[v69];
      v71 = (uint64_t *)&v33[v69];
      v231 = v71[1];
      v233 = *v71;
      v227 = (void *)v71[3];
      v229 = (void *)v71[2];
      v223 = (void *)v71[5];
      v225 = (void *)v71[4];
      v219 = v71[7];
      v221 = v71[6];
      v215 = (void *)v71[9];
      v217 = (void *)v71[8];
      v211 = v71[11];
      v213 = (void *)v71[10];
      v209 = v71[12];
      v207 = v71[13];
      v205 = v71[14];
      v203 = v71[15];
      v201 = v71[16];
      v199 = v71[17];
      v197 = v71[18];
      v195 = v71[19];
      v193 = (void *)v71[20];
      v191 = v71[21];
      v189 = v71[22];
      v187 = v71[23];
      v185 = v71[24];
      v183 = v71[25];
      v181 = v71[26];
      v179 = (void *)v71[27];
      v177 = (void *)v71[28];
      v175 = v71[29];
      v173 = v71[30];
      v171 = v71[31];
      v169 = v71[32];
      v167 = v71[33];
      v165 = v71[34];
      v163 = v71[35];
      v161 = v71[36];
      v159 = v71[37];
      v157 = v71[38];
      v73 = v71[40];
      v72 = v71[41];
      v125 = v71[39];
      v127 = v71[42];
      v129 = v71[43];
      v131 = v71[44];
      v133 = v71[45];
      v135 = v71[46];
      v137 = v71[47];
      v239 = v39;
      v75 = v71[48];
      v74 = v71[49];
      v139 = v71[50];
      v237 = v37;
      v76 = v71[51];
      v141 = v71[52];
      v77 = v71[54];
      v143 = v71[53];
      v235 = v68;
      v145 = v71[55];
      v147 = v71[56];
      v149 = v71[57];
      v151 = v71[58];
      v152 = v71[59];
      v153 = v71[60];
      v154 = v71[61];
      v155 = v71[62];
      v156 = v71[63];
      sub_2378DD44C(*v71, v231, v229, v227, v225, v223, v221, v219, v217, v215, v213, v211, v209, v207, v205, v203, v201, v199, v197,
        v195,
        v193,
        v191,
        v189,
        v187,
        v185,
        v183,
        v181,
        v179,
        v177,
        v175,
        v173,
        v171,
        v169,
        v167,
        v165,
        v163,
        v161,
        v159,
        v157,
        v125,
        v73,
        v72,
        v127,
        v129,
        v131,
        v133,
        v135,
        v137,
        v75,
        v74,
        v139,
        v76,
        v141,
        v143,
        v77,
        v145,
        v147,
        v149,
        v151,
        v152,
        v153,
        v154,
        v155);
      v78 = *(_QWORD *)v70;
      v79 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v70 = v233;
      *((_QWORD *)v70 + 1) = v231;
      v80 = (void *)*((_QWORD *)v70 + 2);
      v81 = (void *)*((_QWORD *)v70 + 3);
      *((_QWORD *)v70 + 2) = v229;
      *((_QWORD *)v70 + 3) = v227;
      v82 = (void *)*((_QWORD *)v70 + 4);
      v83 = (void *)*((_QWORD *)v70 + 5);
      *((_QWORD *)v70 + 4) = v225;
      *((_QWORD *)v70 + 5) = v223;
      v84 = *((_QWORD *)v70 + 6);
      v85 = *((_QWORD *)v70 + 7);
      *((_QWORD *)v70 + 6) = v221;
      *((_QWORD *)v70 + 7) = v219;
      v86 = *((_OWORD *)v70 + 4);
      v87 = *((_OWORD *)v70 + 5);
      *((_QWORD *)v70 + 8) = v217;
      *((_QWORD *)v70 + 9) = v215;
      *((_QWORD *)v70 + 10) = v213;
      *((_QWORD *)v70 + 11) = v211;
      v88 = *((_OWORD *)v70 + 6);
      v89 = *((_OWORD *)v70 + 7);
      *((_QWORD *)v70 + 12) = v209;
      *((_QWORD *)v70 + 13) = v207;
      *((_QWORD *)v70 + 14) = v205;
      *((_QWORD *)v70 + 15) = v203;
      v90 = *((_OWORD *)v70 + 8);
      v91 = *((_OWORD *)v70 + 9);
      *((_QWORD *)v70 + 16) = v201;
      *((_QWORD *)v70 + 17) = v199;
      *((_QWORD *)v70 + 18) = v197;
      *((_QWORD *)v70 + 19) = v195;
      v92 = *((_OWORD *)v70 + 10);
      v93 = *((_OWORD *)v70 + 11);
      *((_QWORD *)v70 + 20) = v193;
      *((_QWORD *)v70 + 21) = v191;
      *((_QWORD *)v70 + 22) = v189;
      *((_QWORD *)v70 + 23) = v187;
      v94 = *((_OWORD *)v70 + 12);
      v95 = *((_OWORD *)v70 + 13);
      *((_QWORD *)v70 + 24) = v185;
      *((_QWORD *)v70 + 25) = v183;
      *((_QWORD *)v70 + 26) = v181;
      *((_QWORD *)v70 + 27) = v179;
      v96 = *((_OWORD *)v70 + 14);
      v97 = *((_OWORD *)v70 + 15);
      *((_QWORD *)v70 + 28) = v177;
      *((_QWORD *)v70 + 29) = v175;
      *((_QWORD *)v70 + 30) = v173;
      *((_QWORD *)v70 + 31) = v171;
      v98 = *((_OWORD *)v70 + 16);
      v99 = *((_OWORD *)v70 + 17);
      *((_QWORD *)v70 + 32) = v169;
      *((_QWORD *)v70 + 33) = v167;
      *((_QWORD *)v70 + 34) = v165;
      *((_QWORD *)v70 + 35) = v163;
      v100 = *((_OWORD *)v70 + 18);
      v101 = *((_OWORD *)v70 + 19);
      *((_QWORD *)v70 + 36) = v161;
      *((_QWORD *)v70 + 37) = v159;
      *((_QWORD *)v70 + 38) = v157;
      v102 = *((_OWORD *)v70 + 20);
      v103 = *((_OWORD *)v70 + 21);
      *((_QWORD *)v70 + 39) = v125;
      *((_QWORD *)v70 + 40) = v73;
      *((_QWORD *)v70 + 41) = v72;
      *((_QWORD *)v70 + 42) = v127;
      *((_QWORD *)v70 + 43) = v129;
      v104 = *((_OWORD *)v70 + 22);
      v105 = *((_OWORD *)v70 + 23);
      *((_QWORD *)v70 + 44) = v131;
      *((_QWORD *)v70 + 45) = v133;
      *((_QWORD *)v70 + 46) = v135;
      v106 = *((_OWORD *)v70 + 24);
      v107 = *((_OWORD *)v70 + 25);
      *((_QWORD *)v70 + 47) = v137;
      *((_QWORD *)v70 + 48) = v75;
      *((_QWORD *)v70 + 49) = v74;
      *((_QWORD *)v70 + 50) = v139;
      v108 = *((_OWORD *)v70 + 26);
      v109 = *((_OWORD *)v70 + 27);
      *((_QWORD *)v70 + 51) = v76;
      *((_QWORD *)v70 + 52) = v141;
      *((_QWORD *)v70 + 53) = v143;
      *((_QWORD *)v70 + 54) = v77;
      *((_QWORD *)v70 + 55) = v145;
      v110 = *((_OWORD *)v70 + 28);
      v111 = *((_OWORD *)v70 + 29);
      *((_QWORD *)v70 + 56) = v147;
      *((_QWORD *)v70 + 57) = v149;
      *((_QWORD *)v70 + 58) = v151;
      *((_QWORD *)v70 + 59) = v152;
      v112 = *((_OWORD *)v70 + 30);
      *((_QWORD *)v70 + 60) = v153;
      *((_QWORD *)v70 + 61) = v154;
      v113 = *((_QWORD *)v70 + 62);
      *((_QWORD *)v70 + 62) = v155;
      *((_QWORD *)v70 + 63) = v156;
      sub_2378DE7AC(v78, v79, v80, v81, v82, v83, v84, v85, (void *)v86, *((void **)&v86 + 1), (void *)v87, *((unint64_t *)&v87 + 1), v88, *((uint64_t *)&v88 + 1), v89, *((uint64_t *)&v89 + 1), v90, *((uint64_t *)&v90 + 1), v91,
        *((uint64_t *)&v91 + 1),
        (void *)v92,
        *((uint64_t *)&v92 + 1),
        v93,
        *((uint64_t *)&v93 + 1),
        v94,
        *((uint64_t *)&v94 + 1),
        v95,
        *((void **)&v95 + 1),
        (void *)v96,
        *((uint64_t *)&v96 + 1),
        v97,
        *((uint64_t *)&v97 + 1),
        v98,
        *((uint64_t *)&v98 + 1),
        v99,
        *((uint64_t *)&v99 + 1),
        v100,
        *((uint64_t *)&v100 + 1),
        v101,
        SBYTE8(v101),
        v102,
        *((uint64_t *)&v102 + 1),
        v103,
        *((uint64_t *)&v103 + 1),
        v104,
        SBYTE8(v104),
        v105,
        *((uint64_t *)&v105 + 1),
        v106,
        *((uint64_t *)&v106 + 1),
        v107,
        SBYTE8(v107),
        v108,
        *((uint64_t *)&v108 + 1),
        v109,
        *((uint64_t *)&v109 + 1),
        v110,
        SBYTE8(v110),
        v111,
        *((uint64_t *)&v111 + 1),
        v112,
        *((uint64_t *)&v112 + 1),
        v113);
      v114 = *(int *)(v235 + 24);
      v115 = &v237[v114];
      v116 = &v239[v114];
      *(_QWORD *)&v237[v114] = *(_QWORD *)&v239[v114];
      swift_retain();
      swift_release();
      *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
      *((_QWORD *)v115 + 2) = *((_QWORD *)v116 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v115[24] = v116[24];
      v115[25] = v116[25];
      *((_QWORD *)v115 + 4) = *((_QWORD *)v116 + 4);
      *((_QWORD *)v115 + 5) = *((_QWORD *)v116 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_2378DE6A4((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    goto LABEL_20;
  }
  if (v40)
  {
LABEL_20:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v37, v33, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_21;
  }
  v41 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v37, v33, v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  v236 = v37;
  v238 = v33;
  *(_QWORD *)&v37[*(int *)(v42 + 52)] = *(_QWORD *)&v33[*(int *)(v42 + 52)];
  v234 = v34;
  v43 = *(int *)(v34 + 20);
  v44 = (uint64_t *)&v37[v43];
  v45 = (uint64_t *)&v33[v43];
  v166 = v35;
  v230 = v45[7];
  v232 = v45[6];
  v226 = (void *)v45[9];
  v228 = (void *)v45[8];
  v222 = v45[11];
  v224 = (void *)v45[10];
  v218 = v45[13];
  v220 = v45[12];
  v214 = v45[15];
  v216 = v45[14];
  v210 = v45[17];
  v212 = v45[16];
  v208 = v45[18];
  v206 = v45[19];
  v204 = (void *)v45[20];
  v202 = v45[21];
  v200 = v45[22];
  v198 = v45[23];
  v196 = v45[24];
  v194 = v45[25];
  v192 = v45[26];
  v190 = (void *)v45[27];
  v188 = (void *)v45[28];
  v186 = v45[29];
  v184 = v45[30];
  v182 = v45[31];
  v180 = v45[32];
  v178 = v45[33];
  v176 = v45[34];
  v174 = v45[35];
  v172 = v45[36];
  v170 = v45[37];
  v168 = v45[38];
  v117 = v45[39];
  v118 = v45[40];
  v119 = v45[41];
  v120 = v45[42];
  v121 = v45[43];
  v122 = v45[44];
  v123 = v45[45];
  v124 = v45[46];
  v126 = v45[47];
  v128 = v45[48];
  v130 = v45[49];
  v132 = v45[50];
  v134 = v45[51];
  v136 = v45[52];
  v138 = v45[53];
  v140 = v45[54];
  v142 = v45[55];
  v144 = v45[56];
  v146 = v45[57];
  v148 = v45[58];
  v150 = v45[59];
  v158 = v45[60];
  v160 = v45[61];
  v162 = v45[62];
  v164 = v45[63];
  v46 = *v45;
  v47 = v45[1];
  v48 = (void *)v45[2];
  v49 = (void *)v45[3];
  v50 = (void *)v45[4];
  v51 = (void *)v45[5];
  sub_2378DD44C(*v45, v47, v48, v49, v50, v51, v232, v230, v228, v226, v224, v222, v220, v218, v216, v214, v212, v210, v208,
    v206,
    v204,
    v202,
    v200,
    v198,
    v196,
    v194,
    v192,
    v190,
    v188,
    v186,
    v184,
    v182,
    v180,
    v178,
    v176,
    v174,
    v172,
    v170,
    v168,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v126,
    v128,
    v130,
    v132,
    v134,
    v136,
    v138,
    v140,
    v142,
    v144,
    v146,
    v148,
    v150,
    v158,
    v160,
    v162);
  *v44 = v46;
  v44[1] = v47;
  v44[2] = (uint64_t)v48;
  v44[3] = (uint64_t)v49;
  v44[4] = (uint64_t)v50;
  v44[5] = (uint64_t)v51;
  v44[6] = v232;
  v44[7] = v230;
  v44[8] = (uint64_t)v228;
  v44[9] = (uint64_t)v226;
  v44[10] = (uint64_t)v224;
  v44[11] = v222;
  v44[12] = v220;
  v44[13] = v218;
  v44[14] = v216;
  v44[15] = v214;
  v44[16] = v212;
  v44[17] = v210;
  v44[18] = v208;
  v44[19] = v206;
  v44[20] = (uint64_t)v204;
  v44[21] = v202;
  v44[22] = v200;
  v44[23] = v198;
  v44[24] = v196;
  v44[25] = v194;
  v44[26] = v192;
  v44[27] = (uint64_t)v190;
  v44[28] = (uint64_t)v188;
  v44[29] = v186;
  v44[30] = v184;
  v44[31] = v182;
  v44[32] = v180;
  v44[33] = v178;
  v44[34] = v176;
  v44[35] = v174;
  v44[36] = v172;
  v44[37] = v170;
  v44[38] = v168;
  v44[39] = v117;
  v44[40] = v118;
  v44[41] = v119;
  v44[42] = v120;
  v44[43] = v121;
  v44[44] = v122;
  v44[45] = v123;
  v44[46] = v124;
  v44[47] = v126;
  v44[48] = v128;
  v44[49] = v130;
  v44[50] = v132;
  v44[51] = v134;
  v44[52] = v136;
  v44[53] = v138;
  v44[54] = v140;
  v44[55] = v142;
  v44[56] = v144;
  v44[57] = v146;
  v44[58] = v148;
  v44[59] = v150;
  v44[60] = v158;
  v44[61] = v160;
  v44[62] = v162;
  v44[63] = v164;
  v52 = *(int *)(v234 + 24);
  v53 = &v236[v52];
  v54 = &v238[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
  v53[24] = v54[24];
  v53[25] = v54[25];
  *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
  *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
  v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(v236, 0, 1, v234);
LABEL_21:
  v57 = v240[10];
  v58 = (_QWORD *)((char *)v23 + v57);
  v59 = (_QWORD *)((char *)v24 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = v240[11];
  v61 = (char *)v23 + v60;
  v62 = (char *)v24 + v60;
  v63 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)&v61[*(int *)(v64 + 52)] = *(_QWORD *)&v62[*(int *)(v64 + 52)];
  return a1;
}

uint64_t initializeWithTake for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = sub_237A86594();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(a2 + v14 + 16);
  *(_OWORD *)v15 = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(v15 + 16) = v17;
  v18 = *(_OWORD *)(a2 + v14 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(a2 + v14 + 32);
  *(_OWORD *)(v15 + 48) = v18;
  v19 = *(_OWORD *)(a2 + v14 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a2 + v14 + 64);
  *(_OWORD *)(v15 + 80) = v19;
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(a2 + v14 + 96);
  *(_QWORD *)(v15 + 112) = *(_QWORD *)(a2 + v14 + 112);
  *(_OWORD *)(v15 + 120) = *(_OWORD *)(a2 + v14 + 120);
  v20 = (int *)type metadata accessor for Slot();
  v21 = v20[9];
  v22 = (char *)(v15 + v21);
  v23 = (char *)(v16 + v21);
  v24 = type metadata accessor for Instrument();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v22, v23, v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&v22[*(int *)(v28 + 52)] = *(_QWORD *)&v23[*(int *)(v28 + 52)];
    memcpy(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], 0x200uLL);
    v29 = *(int *)(v24 + 24);
    v30 = &v22[v29];
    v31 = &v23[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_OWORD *)(v15 + v20[10]) = *(_OWORD *)(v16 + v20[10]);
  v33 = v20[11];
  v34 = v15 + v33;
  v35 = v16 + v33;
  v36 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v34 + *(int *)(v37 + 52)) = *(_QWORD *)(v35 + *(int *)(v37 + 52));
  return a1;
}

uint64_t assignWithTake for SlotView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  unint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_2379CACEC(v7, v8, v9);
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v10;
  sub_237971574(v11, v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 24);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_2378BC024(a1 + v13, &qword_256820B20);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = sub_237A86594();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v14, v15, v20);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v21 = *(int *)(a3 + 28);
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 40) < 2uLL)
    goto LABEL_11;
  v24 = *(_QWORD *)(v23 + 40);
  if (v24 < 2)
  {
    sub_2378BC024(v22, &qword_256823068);
LABEL_11:
    v25 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v25;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_13;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = v24;
  swift_bridgeObjectRelease();
LABEL_13:
  v26 = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 64) = v26;
  v27 = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 80) = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 96) = v27;
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(v23 + 112);
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  swift_bridgeObjectRelease();
  v28 = (int *)type metadata accessor for Slot();
  v29 = v28[9];
  v30 = (char *)(v22 + v29);
  v31 = (char *)(v23 + v29);
  v32 = type metadata accessor for Instrument();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      v55 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v30, v31, v55);
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&v30[*(int *)(v56 + 52)] = *(_QWORD *)&v31[*(int *)(v56 + 52)];
      v57 = *(int *)(v32 + 20);
      v58 = &v30[v57];
      v59 = &v31[v57];
      v60 = *(_QWORD *)v58;
      v61 = *((_QWORD *)v58 + 1);
      v62 = (void *)*((_QWORD *)v58 + 2);
      v63 = (void *)*((_QWORD *)v58 + 3);
      v64 = (void *)*((_QWORD *)v58 + 4);
      v65 = (void *)*((_QWORD *)v58 + 5);
      v66 = *((_QWORD *)v58 + 6);
      v67 = *((_QWORD *)v58 + 7);
      v68 = *((_OWORD *)v58 + 4);
      v69 = *((_OWORD *)v58 + 5);
      v70 = *((_OWORD *)v58 + 6);
      v71 = *((_OWORD *)v58 + 7);
      v72 = *((_OWORD *)v58 + 8);
      v73 = *((_OWORD *)v58 + 9);
      v74 = *((_OWORD *)v58 + 10);
      v75 = *((_OWORD *)v58 + 11);
      v76 = *((_OWORD *)v58 + 12);
      v77 = *((_OWORD *)v58 + 13);
      v78 = *((_OWORD *)v58 + 14);
      v79 = *((_OWORD *)v58 + 15);
      v80 = *((_OWORD *)v58 + 16);
      v81 = *((_OWORD *)v58 + 17);
      v82 = *((_OWORD *)v58 + 18);
      v83 = *((_OWORD *)v58 + 19);
      v84 = *((_OWORD *)v58 + 20);
      v85 = *((_OWORD *)v58 + 21);
      v86 = *((_OWORD *)v58 + 22);
      v87 = *((_OWORD *)v58 + 23);
      v88 = *((_OWORD *)v58 + 24);
      v89 = *((_OWORD *)v58 + 25);
      v90 = *((_OWORD *)v58 + 26);
      v91 = *((_OWORD *)v58 + 27);
      v92 = *((_OWORD *)v58 + 28);
      v93 = *((_OWORD *)v58 + 29);
      v94 = *((_OWORD *)v58 + 30);
      v95 = *((_QWORD *)v58 + 62);
      v96 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v96;
      v97 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v97;
      v98 = *((_OWORD *)v59 + 5);
      *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
      *((_OWORD *)v58 + 5) = v98;
      v99 = *((_OWORD *)v59 + 7);
      *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
      *((_OWORD *)v58 + 7) = v99;
      v100 = *((_OWORD *)v59 + 9);
      *((_OWORD *)v58 + 8) = *((_OWORD *)v59 + 8);
      *((_OWORD *)v58 + 9) = v100;
      v101 = *((_OWORD *)v59 + 11);
      *((_OWORD *)v58 + 10) = *((_OWORD *)v59 + 10);
      *((_OWORD *)v58 + 11) = v101;
      v102 = *((_OWORD *)v59 + 13);
      *((_OWORD *)v58 + 12) = *((_OWORD *)v59 + 12);
      *((_OWORD *)v58 + 13) = v102;
      v103 = *((_OWORD *)v59 + 15);
      *((_OWORD *)v58 + 14) = *((_OWORD *)v59 + 14);
      *((_OWORD *)v58 + 15) = v103;
      v104 = *((_OWORD *)v59 + 17);
      *((_OWORD *)v58 + 16) = *((_OWORD *)v59 + 16);
      *((_OWORD *)v58 + 17) = v104;
      v105 = *((_OWORD *)v59 + 19);
      *((_OWORD *)v58 + 18) = *((_OWORD *)v59 + 18);
      *((_OWORD *)v58 + 19) = v105;
      v106 = *((_OWORD *)v59 + 21);
      *((_OWORD *)v58 + 20) = *((_OWORD *)v59 + 20);
      *((_OWORD *)v58 + 21) = v106;
      v107 = *((_OWORD *)v59 + 23);
      *((_OWORD *)v58 + 22) = *((_OWORD *)v59 + 22);
      *((_OWORD *)v58 + 23) = v107;
      v108 = *((_OWORD *)v59 + 25);
      *((_OWORD *)v58 + 24) = *((_OWORD *)v59 + 24);
      *((_OWORD *)v58 + 25) = v108;
      v109 = *((_OWORD *)v59 + 27);
      *((_OWORD *)v58 + 26) = *((_OWORD *)v59 + 26);
      *((_OWORD *)v58 + 27) = v109;
      v110 = *((_OWORD *)v59 + 29);
      *((_OWORD *)v58 + 28) = *((_OWORD *)v59 + 28);
      *((_OWORD *)v58 + 29) = v110;
      v111 = *((_OWORD *)v59 + 31);
      *((_OWORD *)v58 + 30) = *((_OWORD *)v59 + 30);
      *((_OWORD *)v58 + 31) = v111;
      sub_2378DE7AC(v60, v61, v62, v63, v64, v65, v66, v67, (void *)v68, *((void **)&v68 + 1), (void *)v69, *((unint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72, *((uint64_t *)&v72 + 1), v73,
        *((uint64_t *)&v73 + 1),
        (void *)v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76,
        *((uint64_t *)&v76 + 1),
        v77,
        *((void **)&v77 + 1),
        (void *)v78,
        *((uint64_t *)&v78 + 1),
        v79,
        *((uint64_t *)&v79 + 1),
        v80,
        *((uint64_t *)&v80 + 1),
        v81,
        *((uint64_t *)&v81 + 1),
        v82,
        *((uint64_t *)&v82 + 1),
        v83,
        SBYTE8(v83),
        v84,
        *((uint64_t *)&v84 + 1),
        v85,
        *((uint64_t *)&v85 + 1),
        v86,
        SBYTE8(v86),
        v87,
        *((uint64_t *)&v87 + 1),
        v88,
        *((uint64_t *)&v88 + 1),
        v89,
        SBYTE8(v89),
        v90,
        *((uint64_t *)&v90 + 1),
        v91,
        *((uint64_t *)&v91 + 1),
        v92,
        SBYTE8(v92),
        v93,
        *((uint64_t *)&v93 + 1),
        v94,
        *((uint64_t *)&v94 + 1),
        v95);
      v112 = *(int *)(v32 + 24);
      v113 = &v30[v112];
      v114 = &v31[v112];
      *(_QWORD *)v113 = *(_QWORD *)v114;
      swift_release();
      v115 = *((_QWORD *)v114 + 2);
      *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
      *((_QWORD *)v113 + 2) = v115;
      swift_bridgeObjectRelease();
      v113[24] = v114[24];
      v113[25] = v114[25];
      v116 = *((_QWORD *)v114 + 5);
      *((_QWORD *)v113 + 4) = *((_QWORD *)v114 + 4);
      *((_QWORD *)v113 + 5) = v116;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_2378DE6A4((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    goto LABEL_18;
  }
  if (v36)
  {
LABEL_18:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  v37 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v30, v31, v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)&v30[*(int *)(v38 + 52)] = *(_QWORD *)&v31[*(int *)(v38 + 52)];
  memcpy(&v30[*(int *)(v32 + 20)], &v31[*(int *)(v32 + 20)], 0x200uLL);
  v39 = *(int *)(v32 + 24);
  v40 = &v30[v39];
  v41 = &v31[v39];
  v42 = *((_OWORD *)v41 + 1);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *((_OWORD *)v40 + 1) = v42;
  *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_19:
  v44 = v28[10];
  v45 = (_QWORD *)(v22 + v44);
  v46 = (uint64_t *)(v23 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = v28[11];
  v50 = v22 + v49;
  v51 = v23 + v49;
  v52 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v50 + *(int *)(v53 + 52)) = *(_QWORD *)(v51 + *(int *)(v53 + 52));
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379E1690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826510);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for Slot();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SlotView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379E1738(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826510);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for Slot();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2379E17D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2379CE774();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Slot();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2379E186C()
{
  return sub_23796CF14(&qword_256826AA0, &qword_256826AA8, (uint64_t (*)(void))sub_2379E1898);
}

unint64_t sub_2379E1898()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826AB0;
  if (!qword_256826AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826AB8);
    v2[0] = sub_2379E191C();
    v2[1] = sub_2378B70D4(&qword_256826AD0, &qword_256826AD8, MEMORY[0x24BDF4750]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826AB0);
  }
  return result;
}

unint64_t sub_2379E191C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826AC0;
  if (!qword_256826AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826AC8);
    v2[0] = sub_2378B70D4(&qword_256826AD0, &qword_256826AD8, MEMORY[0x24BDF4750]);
    v2[1] = sub_2378B70D4(&qword_256826AE0, &qword_256826AE8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826AC0);
  }
  return result;
}

unint64_t sub_2379E19B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826B20;
  if (!qword_256826B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826B18);
    v2[0] = sub_23796CF14(&qword_256826B28, &qword_256826B10, (uint64_t (*)(void))sub_2379E1A54);
    v2[1] = sub_23786FAA0(&qword_256826B40, (uint64_t (*)(uint64_t))type metadata accessor for InstrumentView, (uint64_t)&protocol conformance descriptor for InstrumentView);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826B20);
  }
  return result;
}

unint64_t sub_2379E1A54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256826B30;
  if (!qword_256826B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568265D8);
    v2 = sub_2378B70D4(&qword_256826B38, qword_256826608, MEMORY[0x24BDF44C8]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256826B30);
  }
  return result;
}

uint64_t destroy for RemoteNotificationContainer(uint64_t a1)
{
  int v2;

  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 != 255)
    sub_23790BD3C(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v2);
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_2379732BC(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  v10 = *(unsigned __int8 *)(a2 + 80);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 64);
    v12 = *(_QWORD *)(a2 + 72);
    sub_237973310(v11, v12, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    *(_BYTE *)(a1 + 80) = v10;
  }
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v13 = *(_QWORD *)(a2 + 96);
  if (v13)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v13;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  }
  v14 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  sub_2379732BC(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v8;
  sub_23790BCE8(v9, v10, v11, v12, v13);
  v14 = (__int128 *)(a1 + 64);
  v15 = (__int128 *)(a2 + 64);
  v16 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v16 == 255)
    {
      v25 = *v15;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v14 = v25;
    }
    else
    {
      v22 = *(_QWORD *)(a2 + 64);
      v23 = *(_QWORD *)(a2 + 72);
      sub_237973310(v22, v23, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 64) = v22;
      *(_QWORD *)(a1 + 72) = v23;
      *(_BYTE *)(a1 + 80) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_2379DBFE8(a1 + 64);
    v24 = *(_BYTE *)(a2 + 80);
    *v14 = *v15;
    *(_BYTE *)(a1 + 80) = v24;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 64);
    v18 = *(_QWORD *)(a2 + 72);
    sub_237973310(v17, v18, *(_BYTE *)(a2 + 80));
    v19 = *(_QWORD *)(a1 + 64);
    v20 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 72) = v18;
    v21 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v16;
    sub_23790BD3C(v19, v20, v21);
  }
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v26 = (_OWORD *)(a1 + 88);
  v27 = (_OWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v28)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018(a1 + 88);
      v29 = *(_QWORD *)(a2 + 104);
      *v26 = *v27;
      *(_QWORD *)(a1 + 104) = v29;
    }
  }
  else if (v28)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v30 = *v27;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *v26 = v30;
  }
  v31 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v31;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for RemoteNotificationContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _OWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v5;
  sub_23790BCE8(v6, v7, v8, v9, v10);
  v11 = (_OWORD *)(a2 + 64);
  v12 = *(unsigned __int8 *)(a1 + 80);
  if (v12 != 255)
  {
    v13 = *(unsigned __int8 *)(a2 + 80);
    if (v13 != 255)
    {
      v14 = *(_QWORD *)(a1 + 64);
      v15 = *(_QWORD *)(a1 + 72);
      *(_OWORD *)(a1 + 64) = *v11;
      *(_BYTE *)(a1 + 80) = v13;
      sub_23790BD3C(v14, v15, v12);
      goto LABEL_6;
    }
    sub_2379DBFE8(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *v11;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_6:
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  if (!*(_QWORD *)(a1 + 96))
  {
LABEL_10:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    goto LABEL_11;
  }
  v16 = *(_QWORD *)(a2 + 96);
  if (!v16)
  {
    sub_2379DC018(a1 + 88);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
LABEL_11:
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteNotificationContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteNotificationContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationContainer()
{
  return &type metadata for RemoteNotificationContainer;
}

uint64_t sub_2379E2064()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379E2074@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;

  v70 = a1;
  v2 = sub_237A86654();
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v67 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for NotificationView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v51 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B68);
  MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B48);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *v1;
  v12 = *((_QWORD *)v1 + 1);
  v13 = *((_QWORD *)v1 + 2);
  v15 = *((_QWORD *)v1 + 3);
  v14 = *((_QWORD *)v1 + 4);
  v16 = *((_QWORD *)v1 + 6);
  v54 = *((_QWORD *)v1 + 5);
  v51 = v16;
  v17 = *((_QWORD *)v1 + 8);
  v55 = *((_QWORD *)v1 + 9);
  v56 = v17;
  LODWORD(v61) = v1[81];
  v18 = *((_QWORD *)v1 + 11);
  v58 = *((_QWORD *)v1 + 12);
  v59 = v18;
  v57 = *((_QWORD *)v1 + 13);
  v60 = *((_QWORD *)v1 + 14);
  v71 = *((_QWORD *)v1 + 15);
  v19 = v1[56];
  v52 = v19;
  v53 = v1[80];
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  swift_storeEnumTagMultiPayload();
  v20 = (uint64_t *)((char *)v6 + v4[5]);
  *v20 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v21 = (uint64_t *)((char *)v6 + v4[6]);
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  swift_storeEnumTagMultiPayload();
  v22 = (uint64_t *)((char *)v6 + v4[7]);
  *v22 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v23 = (char *)v6 + v4[8];
  v63 = v12;
  *(_QWORD *)v23 = v12;
  *((_QWORD *)v23 + 1) = v13;
  v24 = v13;
  *((_QWORD *)v23 + 2) = v15;
  *((_QWORD *)v23 + 3) = v14;
  v25 = v54;
  *((_QWORD *)v23 + 4) = v54;
  *((_QWORD *)v23 + 5) = v16;
  v23[48] = v19;
  v26 = v55;
  v27 = v56;
  *((_QWORD *)v23 + 7) = v56;
  *((_QWORD *)v23 + 8) = v26;
  LOBYTE(v4) = v53;
  v23[72] = v53;
  v23[73] = v61;
  v29 = v58;
  v28 = v59;
  *((_QWORD *)v23 + 10) = v59;
  *((_QWORD *)v23 + 11) = v29;
  v30 = v60;
  *((_QWORD *)v23 + 12) = v57;
  *((_QWORD *)v23 + 13) = v30;
  v31 = (uint64_t)v72;
  *((_QWORD *)v23 + 14) = v71;
  v32 = (uint64_t)v6;
  v33 = v24;
  sub_2379E2560(v32, v31);
  v61 = v33;
  swift_bridgeObjectRetain();
  sub_2379732BC(v15, v14, v25, v51, v52);
  sub_2379DBB3C(v27, v26, (char)v4);
  sub_2379DBB50(v28, v29);
  swift_retain();
  LODWORD(v4) = sub_237A8681C();
  if ((_DWORD)v4 == sub_237A8681C())
    v34 = sub_237A87494();
  else
    v34 = sub_237A874A0();
  v36 = v66;
  v37 = (uint64_t)v72;
  sub_2378E187C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v66, 0.0, 1, INFINITY, 0, v34, v35);
  sub_2379E25A4(v37);
  if (qword_25681E2E8 != -1)
    swift_once();
  v38 = v69;
  v39 = __swift_project_value_buffer(v69, (uint64_t)qword_256870628);
  v41 = v67;
  v40 = v68;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  v42(v67, v39, v38);
  v73 = 540697705;
  v74 = 0xE400000000000000;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  v43 = v73;
  v44 = v74;
  v45 = (uint64_t)v65;
  v46 = &v65[*(int *)(v64 + 36)];
  v42(v46, (uint64_t)v41, v38);
  v47 = type metadata accessor for AppearanceLogger();
  v48 = &v46[*(int *)(v47 + 20)];
  *(_QWORD *)v48 = "Remote Notification";
  *((_QWORD *)v48 + 1) = 19;
  v48[16] = 2;
  v49 = (uint64_t *)&v46[*(int *)(v47 + 24)];
  *v49 = v43;
  v49[1] = v44;
  sub_2379E25E0(v36, v45);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v38);
  sub_2379E2628(v36);
  return sub_2379E2668(v45, v70);
}

uint64_t sub_2379E2560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379E25A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2379E25E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379E2628(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2379E2668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2379E26B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826B50;
  if (!qword_256826B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826B48);
    v2[0] = sub_2379E2738();
    v2[1] = sub_23786FAA0(&qword_256826B68, (uint64_t (*)(uint64_t))type metadata accessor for AppearanceLogger, (uint64_t)&unk_237A99A58);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826B50);
  }
  return result;
}

unint64_t sub_2379E2738()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826B58;
  if (!qword_256826B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820B68);
    v2[0] = sub_23786FAA0(&qword_256826B60, type metadata accessor for NotificationView, (uint64_t)&protocol conformance descriptor for NotificationView);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826B58);
  }
  return result;
}

uint64_t sub_2379E27BC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v8[72];
  _BYTE v9[56];
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char v14;

  v10 = *a1;
  v11 = *((_QWORD *)a1 + 2);
  v3 = v10;
  if (!(_QWORD)v10)
  {
    sub_237A885EC();
    sub_2379E9FB4((uint64_t)&v10);
    v4 = *((_QWORD *)&v10 + 1);
    if (*((_QWORD *)&v10 + 1))
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    goto LABEL_8;
  }
  sub_237A885EC();
  sub_2379E9FB4((uint64_t)&v10);
  swift_bridgeObjectRetain();
  sub_237876E24(v1, v3);
  swift_bridgeObjectRelease();
  v4 = *((_QWORD *)&v10 + 1);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_6;
LABEL_3:
  v5 = v11;
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(v1, v4);
  sub_237A885EC();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(v1, v5);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(v4);
LABEL_8:
  sub_2379E9FF4((uint64_t)&v10);
  sub_2379EA034((uint64_t)a1 + 24, (uint64_t)v9);
  sub_2379EA034((uint64_t)v9, (uint64_t)&v12);
  v6 = v13 | (unint64_t)((uint64_t)v14 << 32);
  if ((v6 & 0x8000000000000000) != 0)
  {
    v14 = BYTE4(v6) & 0x7F;
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  sub_2379E9F18((uint64_t)a1 + 88, (uint64_t)v8);
  sub_237A885F8();
  sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_2379E741C(v1);
  return sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
}

uint64_t sub_2379E2A5C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v17[8];
  _OWORD v18[2];
  __int128 v19;
  _OWORD v20[4];
  _OWORD v21[3];
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;
  _BYTE v25[56];
  _BYTE v26[72];
  uint64_t v27;
  unsigned int v28;
  char v29;

  v3 = *(_BYTE *)(a1 + 4);
  v4 = *(_OWORD *)(a1 + 120);
  v21[1] = *(_OWORD *)(a1 + 104);
  v21[2] = v4;
  v22[0] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)((char *)v22 + 13) = *(_OWORD *)(a1 + 149);
  v5 = *(_OWORD *)(a1 + 56);
  v20[1] = *(_OWORD *)(a1 + 40);
  v20[2] = v5;
  v6 = *(_OWORD *)(a1 + 88);
  v20[3] = *(_OWORD *)(a1 + 72);
  v21[0] = v6;
  v7 = *(_OWORD *)(a1 + 24);
  v19 = *(_OWORD *)(a1 + 8);
  v20[0] = v7;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  LOBYTE(v17[0]) = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v23 = v19;
  v24 = *(_QWORD *)&v20[0];
  v8 = v19;
  if (!(_QWORD)v19)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v19);
    sub_2379E9FB4((uint64_t)&v23);
    v9 = *((_QWORD *)&v23 + 1);
    if (*((_QWORD *)&v23 + 1))
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    goto LABEL_8;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v19);
  sub_2379E9FB4((uint64_t)&v23);
  swift_bridgeObjectRetain();
  sub_237876E24(v1, v8);
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)&v23 + 1);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_6;
LABEL_3:
  v10 = v24;
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(v1, v9);
  sub_237A885EC();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(v1, v10);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(v9);
LABEL_8:
  sub_2379E9FF4((uint64_t)&v23);
  sub_2379EA034((uint64_t)v20 + 8, (uint64_t)v25);
  sub_2379EA034((uint64_t)v25, (uint64_t)&v27);
  v11 = v28 | (unint64_t)((uint64_t)v29 << 32);
  if ((v11 & 0x8000000000000000) != 0)
  {
    v29 = BYTE4(v11) & 0x7F;
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v12 = *(_OWORD *)(a1 + 216);
  v17[2] = *(_OWORD *)(a1 + 200);
  v17[3] = v12;
  v13 = *(_OWORD *)(a1 + 248);
  v17[4] = *(_OWORD *)(a1 + 232);
  v17[5] = v13;
  v14 = *(_OWORD *)(a1 + 184);
  v17[0] = *(_OWORD *)(a1 + 168);
  v17[1] = v14;
  v15 = *(_OWORD *)(a1 + 280);
  v17[6] = *(_OWORD *)(a1 + 264);
  v17[7] = v15;
  v18[0] = *(_OWORD *)(a1 + 296);
  *(_OWORD *)((char *)v18 + 13) = *(_OWORD *)(a1 + 309);
  sub_2379E9F18((uint64_t)v21 + 8, (uint64_t)v26);
  sub_237A885F8();
  sub_2379E9F60((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_2379E741C(v1);
  sub_2379E9F60((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
  sub_2379E7E60((uint64_t)&v19);
  sub_2379E7DB8((uint64_t)v17);
  sub_2379E27BC(v17);
  return sub_2379E7E60((uint64_t)v17);
}

uint64_t sub_2379E2EAC(const void *a1)
{
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[328];
  _QWORD __dst[41];
  _BYTE v23[336];

  sub_23791A19C(a1, v21);
  sub_23791A19C(v21, v23);
  v2 = sub_23791A1D8((uint64_t)v23);
  v3 = (uint64_t *)sub_23791A1E4((uint64_t)v23);
  if (v2 == 1)
  {
    memcpy(__dst, v3, 0x145uLL);
    sub_237A885E0();
    return sub_2379E2A5C((uint64_t)__dst);
  }
  else
  {
    v5 = *v3;
    v6 = v3[1];
    v7 = v3[2];
    v12 = *((unsigned int *)v3 + 18) | (unint64_t)((uint64_t)*((char *)v3 + 76) << 32);
    v17 = v3[12];
    v18 = v3[11];
    v15 = v3[15];
    v16 = v3[14];
    v13 = v3[17];
    v14 = v3[16];
    v19 = v3[18];
    v20 = v3[13];
    v8 = *((unsigned __int8 *)v3 + 156);
    v9 = *((unsigned int *)v3 + 38);
    sub_237A885E0();
    sub_237A885EC();
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_2378DE3E0(v6);
      swift_bridgeObjectRetain();
      sub_237876E24(v1, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2378DE3E0(v6);
    }
    if (v6)
    {
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24(v1, v6);
      if (v7)
      {
        sub_237A885EC();
        swift_bridgeObjectRetain();
        v10 = v1;
        sub_237876E24(v1, v7);
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = v1;
        sub_237A885EC();
      }
      sub_2378706C8(v6);
      swift_bridgeObjectRelease();
      v11 = v6;
    }
    else
    {
      v10 = v1;
      sub_237A885EC();
      swift_bridgeObjectRelease();
      v11 = 0;
    }
    sub_2378706C8(v11);
    sub_237A885E0();
    if ((v12 & 0x8000000000000000) != 0)
    {
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885EC();
    }
    else
    {
      sub_237A88604();
      sub_237A88604();
      sub_237A885EC();
      sub_237896D64();
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885E0();
    }
    __dst[0] = v18;
    __dst[1] = v17;
    __dst[2] = v20;
    __dst[3] = v16;
    __dst[4] = v15;
    __dst[5] = v14;
    __dst[6] = v13;
    __dst[7] = v19;
    LODWORD(__dst[8]) = v9;
    BYTE4(__dst[8]) = (v9 | (unint64_t)(v8 << 32)) >> 32;
    sub_237A885F8();
    sub_2378DE3E0(v18);
    sub_2379E741C(v10);
    return sub_2378706C8(v18);
  }
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.description.getter()
{
  const void *v0;
  int v1;
  _BYTE v3[328];
  _BYTE v4[336];

  sub_23791A19C(v0, v3);
  sub_23791A19C(v3, v4);
  v1 = sub_23791A1D8((uint64_t)v4);
  sub_23791A1E4((uint64_t)v4);
  if (v1 == 1)
    return 0xD000000000000012;
  else
    return 0x676E695269676944;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.hash(into:)(uint64_t a1)
{
  const void *v1;
  const void *v2;
  int v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t __dst[41];
  _BYTE v12[328];
  _BYTE v13[336];

  v2 = v1;
  sub_23791A19C(v2, v12);
  sub_23791A19C(v12, v13);
  v4 = sub_23791A1D8((uint64_t)v13);
  v5 = (uint64_t *)sub_23791A1E4((uint64_t)v13);
  if (v4 == 1)
  {
    memcpy(__dst, v5, 0x145uLL);
    sub_237A885E0();
    return sub_2379E2A5C((uint64_t)__dst);
  }
  sub_237A885E0();
  v7 = *v5;
  v8 = v5[1];
  v9 = v5[2];
  if (*v5)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v8);
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24(a1, v8);
      sub_237A885EC();
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_237876E24(a1, v9);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v8);
      swift_bridgeObjectRelease();
      v10 = v8;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2378DE3E0(v8);
    if (v8)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v10 = 0;
LABEL_11:
  sub_2378706C8(v10);
  if (((*((unsigned int *)v5 + 18) | (unint64_t)((uint64_t)*((char *)v5 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  __dst[0] = v5[11];
  sub_237A885F8();
  sub_2378DE3E0(__dst[0]);
  sub_2379E741C(a1);
  return sub_2378706C8(__dst[0]);
}

uint64_t sub_2379E3690()
{
  _BYTE *v0;

  if (*v0)
    return 0x74656D7265776F70;
  else
    return 0x72614269676964;
}

uint64_t sub_2379E36D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379E9AC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379E36F4()
{
  sub_2379E79F0();
  return sub_237A88718();
}

uint64_t sub_2379E371C()
{
  sub_2379E79F0();
  return sub_237A88724();
}

uint64_t sub_2379E3744()
{
  sub_2379E7ABC();
  return sub_237A88718();
}

uint64_t sub_2379E376C()
{
  sub_2379E7ABC();
  return sub_237A88724();
}

uint64_t sub_2379E3794()
{
  sub_2379E7A34();
  return sub_237A88718();
}

uint64_t sub_2379E37BC()
{
  sub_2379E7A34();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.encode(to:)(_QWORD *a1)
{
  const void *v1;
  const void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[325];
  _BYTE v28[328];
  _BYTE v29[336];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B70);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B78);
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826B80);
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23791A19C(v2, v28);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379E79F0();
  sub_237A886B8();
  sub_23791A19C(v28, v29);
  LODWORD(a1) = sub_23791A1D8((uint64_t)v29);
  v13 = (_OWORD *)sub_23791A1E4((uint64_t)v29);
  if ((_DWORD)a1 == 1)
  {
    v27[0] = 1;
    sub_2379E7A34();
    sub_237A88220();
    memcpy(v27, v13, sizeof(v27));
    sub_2379E7A78();
    v14 = v25;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v14);
  }
  else
  {
    v27[0] = 0;
    sub_2379E7ABC();
    sub_237A88220();
    v15 = v13[1];
    *(_OWORD *)v27 = *v13;
    *(_OWORD *)&v27[16] = v15;
    v16 = v13[2];
    v17 = v13[3];
    v18 = v13[5];
    *(_OWORD *)&v27[64] = v13[4];
    *(_OWORD *)&v27[80] = v18;
    *(_OWORD *)&v27[32] = v16;
    *(_OWORD *)&v27[48] = v17;
    v19 = v13[6];
    v20 = v13[7];
    v21 = v13[8];
    *(_OWORD *)&v27[141] = *(_OWORD *)((char *)v13 + 141);
    *(_OWORD *)&v27[112] = v20;
    *(_OWORD *)&v27[128] = v21;
    *(_OWORD *)&v27[96] = v19;
    sub_2379E7B00();
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v10);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.hashValue.getter()
{
  const void *v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  _BYTE v18[72];
  _QWORD __dst[41];
  _BYTE v20[328];
  _BYTE v21[336];

  sub_23791A19C(v0, v20);
  sub_237A885D4();
  sub_23791A19C(v20, v21);
  v1 = sub_23791A1D8((uint64_t)v21);
  v2 = (uint64_t *)sub_23791A1E4((uint64_t)v21);
  if (v1 == 1)
  {
    memcpy(__dst, v2, 0x145uLL);
    sub_237A885E0();
    sub_2379E2A5C((uint64_t)__dst);
    return sub_237A88610();
  }
  sub_237A885E0();
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  if (*v2)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v4);
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v18, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24((uint64_t)v18, v4);
      sub_237A885EC();
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_237876E24((uint64_t)v18, v5);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v4);
      swift_bridgeObjectRelease();
      v6 = v4;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2378DE3E0(v4);
    if (v4)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v6 = 0;
LABEL_11:
  sub_2378706C8(v6);
  if (((*((unsigned int *)v2 + 18) | (unint64_t)((uint64_t)*((char *)v2 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v8 = v2[12];
  v9 = v2[13];
  v10 = v2[14];
  v11 = v2[15];
  v12 = v2[16];
  v13 = v2[17];
  v14 = v2[18];
  v15 = *((_BYTE *)v2 + 156);
  v16 = *((_DWORD *)v2 + 38);
  __dst[0] = v2[11];
  v7 = __dst[0];
  __dst[1] = v8;
  __dst[2] = v9;
  __dst[3] = v10;
  __dst[4] = v11;
  __dst[5] = v12;
  __dst[6] = v13;
  __dst[7] = v14;
  BYTE4(__dst[8]) = v15;
  LODWORD(__dst[8]) = v16;
  sub_237A885F8();
  sub_2378DE3E0(v7);
  sub_2379E741C((uint64_t)v18);
  sub_2378706C8(v7);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.Style.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  _BYTE v37[325];
  _BYTE v38[325];
  _BYTE v39[344];
  uint64_t v40;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826BB0);
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826BB8);
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826BC0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_2379E79F0();
  v35 = v11;
  v13 = v40;
  sub_237A88688();
  if (!v13)
  {
    v29 = v5;
    v14 = v32;
    v15 = v33;
    v16 = v34;
    v40 = v9;
    v17 = sub_237A881FC();
    v18 = v8;
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      v19 = v35;
      if ((*(_BYTE *)(v17 + 32) & 1) != 0)
      {
        v38[0] = 1;
        sub_2379E7A34();
        sub_237A88154();
        v31 = v18;
        sub_2379E7B44();
        sub_237A881F0();
        v25 = v40;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v14, v16);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v31);
        memcpy(v37, v38, sizeof(v37));
        sub_2379E7B88((uint64_t)v37);
        v27 = v37;
      }
      else
      {
        v38[0] = 0;
        sub_2379E7ABC();
        sub_237A88154();
        sub_2379E7BCC();
        v24 = v31;
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v18);
        *(_OWORD *)&v38[96] = *(_OWORD *)&v37[96];
        *(_OWORD *)&v38[112] = *(_OWORD *)&v37[112];
        *(_OWORD *)&v38[128] = *(_OWORD *)&v37[128];
        *(_OWORD *)&v38[141] = *(_OWORD *)&v37[141];
        *(_OWORD *)&v38[32] = *(_OWORD *)&v37[32];
        *(_OWORD *)&v38[48] = *(_OWORD *)&v37[48];
        *(_OWORD *)&v38[64] = *(_OWORD *)&v37[64];
        *(_OWORD *)&v38[80] = *(_OWORD *)&v37[80];
        *(_OWORD *)v38 = *(_OWORD *)v37;
        *(_OWORD *)&v38[16] = *(_OWORD *)&v37[16];
        sub_2379E7C10((int8x16_t *)v38);
        v27 = v38;
      }
      sub_23791A19C(v27, v39);
      sub_23791A19C(v39, v30);
    }
    else
    {
      v20 = sub_237A87FB0();
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
      *v22 = &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style;
      v23 = v35;
      sub_237A88160();
      sub_237A87F98();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v36);
}

uint64_t sub_2379E42F8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_2379E430C(_QWORD *a1)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_2379E4328()
{
  const void *v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  _BYTE v18[72];
  _QWORD __dst[41];
  _BYTE v20[328];
  _BYTE v21[336];

  sub_23791A19C(v0, v20);
  sub_237A885D4();
  sub_23791A19C(v20, v21);
  v1 = sub_23791A1D8((uint64_t)v21);
  v2 = (uint64_t *)sub_23791A1E4((uint64_t)v21);
  if (v1 == 1)
  {
    memcpy(__dst, v2, 0x145uLL);
    sub_237A885E0();
    sub_2379E2A5C((uint64_t)__dst);
    return sub_237A88610();
  }
  sub_237A885E0();
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  if (*v2)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v4);
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v18, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24((uint64_t)v18, v4);
      sub_237A885EC();
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_237876E24((uint64_t)v18, v5);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v4);
      swift_bridgeObjectRelease();
      v6 = v4;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2378DE3E0(v4);
    if (v4)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v6 = 0;
LABEL_11:
  sub_2378706C8(v6);
  if (((*((unsigned int *)v2 + 18) | (unint64_t)((uint64_t)*((char *)v2 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v8 = v2[12];
  v9 = v2[13];
  v10 = v2[14];
  v11 = v2[15];
  v12 = v2[16];
  v13 = v2[17];
  v14 = v2[18];
  v15 = *((_BYTE *)v2 + 156);
  v16 = *((_DWORD *)v2 + 38);
  __dst[0] = v2[11];
  v7 = __dst[0];
  __dst[1] = v8;
  __dst[2] = v9;
  __dst[3] = v10;
  __dst[4] = v11;
  __dst[5] = v12;
  __dst[6] = v13;
  __dst[7] = v14;
  BYTE4(__dst[8]) = v15;
  LODWORD(__dst[8]) = v16;
  sub_237A885F8();
  sub_2378DE3E0(v7);
  sub_2379E741C((uint64_t)v18);
  sub_2378706C8(v7);
  return sub_237A88610();
}

uint64_t sub_2379E46F8()
{
  const void *v0;
  int v1;
  _BYTE v3[328];
  _BYTE v4[336];

  sub_23791A19C(v0, v3);
  sub_23791A19C(v3, v4);
  v1 = sub_23791A1D8((uint64_t)v4);
  sub_23791A1E4((uint64_t)v4);
  if (v1 == 1)
    return 0xD000000000000012;
  else
    return 0x676E695269676944;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.style.getter@<X0>(void *a1@<X8>)
{
  const void *v1;
  _BYTE v4[336];

  sub_23791A19C(v1, v4);
  sub_23791A19C(v4, a1);
  return sub_2379E7C50((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
}

void *Instrument.GaugeStyle.ProgressBarConfiguration.style.setter(const void *a1)
{
  void *v1;
  _BYTE v3[328];
  _BYTE __src[328];
  _BYTE __dst[328];

  sub_23791A19C(a1, v3);
  sub_23791A19C(v3, __src);
  memcpy(__dst, v1, 0x145uLL);
  sub_2379E7C50((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
  return memcpy(v1, __src, 0x145uLL);
}

uint64_t (*Instrument.GaugeStyle.ProgressBarConfiguration.style.modify())()
{
  return nullsub_1;
}

void *Instrument.GaugeStyle.ProgressBarConfiguration.init(style:)@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  _BYTE v4[328];

  sub_23791A19C(a1, v4);
  return sub_23791A19C(v4, a2);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.assets.getter()
{
  const void *v0;
  _BYTE v2[328];
  _BYTE v3[328];

  sub_23791A19C(v0, v2);
  sub_23791A19C(v2, v3);
  sub_23791A1D8((uint64_t)v3);
  sub_23791A1E4((uint64_t)v3);
  return MEMORY[0x24BEE4AF8];
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.assets.getter()
{
  return MEMORY[0x24BEE4AF8];
}

void *Instrument.GaugeStyle.ProgressBarConfiguration.restoreAssets(from:)()
{
  void *v0;
  _BYTE __src[328];
  _BYTE v3[328];
  _BYTE v4[328];

  sub_23791A19C(v0, v3);
  sub_23791A19C(v3, v4);
  sub_23791A1D8((uint64_t)v4);
  sub_23791A1E4((uint64_t)v4);
  sub_23791A19C(v3, __src);
  return memcpy(v0, __src, 0x145uLL);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.description.getter()
{
  const void *v0;
  _BYTE v2[328];
  _BYTE v3[328];

  sub_23791A19C(v0, v2);
  sub_23791A19C(v2, v3);
  sub_23791A1D8((uint64_t)v3);
  sub_23791A1E4((uint64_t)v3);
  sub_2379E7C50((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_2379E7C50((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
  return 0x206C6169646152;
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.hash(into:)(uint64_t a1)
{
  const void *v1;
  const void *v2;
  const void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  _BYTE v21[328];
  uint64_t __dst[41];
  _BYTE v23[328];
  _BYTE v24[336];

  v2 = v1;
  sub_23791A19C(v2, v23);
  sub_23791A19C(v23, v24);
  if (sub_23791A1D8((uint64_t)v24) == 1)
  {
    v4 = (const void *)sub_23791A1E4((uint64_t)v24);
    memcpy(__dst, v4, 0x145uLL);
    sub_237A885E0();
    sub_23791A19C(v23, v21);
    v5 = (_QWORD *)sub_23791A1E4((uint64_t)v21);
    sub_2379E7F4C(v5);
    sub_2379E2A5C((uint64_t)__dst);
    return sub_2379E7C50((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
  }
  v6 = sub_23791A1E4((uint64_t)v24);
  sub_237A885E0();
  v7 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(_QWORD *)(v6 + 16);
  if (*(_QWORD *)v6)
  {
    sub_237A885EC();
    sub_2379E7C50((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v8);
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24(a1, v8);
      sub_237A885EC();
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_237876E24(a1, v9);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v8);
      swift_bridgeObjectRelease();
      v10 = v8;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2379E7C50((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
    sub_2378DE3E0(v8);
    if (v8)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v10 = 0;
LABEL_11:
  sub_2378706C8(v10);
  if (((*(unsigned int *)(v6 + 72) | (unint64_t)((uint64_t)*(char *)(v6 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v11 = *(_QWORD *)(v6 + 96);
  v12 = *(_QWORD *)(v6 + 104);
  v13 = *(_QWORD *)(v6 + 112);
  v14 = *(_QWORD *)(v6 + 120);
  v15 = *(_QWORD *)(v6 + 128);
  v16 = *(_QWORD *)(v6 + 136);
  v17 = *(_QWORD *)(v6 + 144);
  v18 = *(_BYTE *)(v6 + 156);
  v19 = *(_DWORD *)(v6 + 152);
  __dst[0] = *(_QWORD *)(v6 + 88);
  __dst[1] = v11;
  __dst[2] = v12;
  __dst[3] = v13;
  __dst[4] = v14;
  __dst[5] = v15;
  __dst[6] = v16;
  __dst[7] = v17;
  BYTE4(__dst[8]) = v18;
  LODWORD(__dst[8]) = v19;
  sub_237A885F8();
  sub_2378DE3E0(__dst[0]);
  sub_2379E741C(a1);
  sub_2378706C8(__dst[0]);
  return sub_2379E7C50((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
}

BOOL static Instrument.GaugeStyle.ProgressBarConfiguration.== infix(_:_:)(const void *a1, const void *a2)
{
  _BYTE v4[328];
  _BYTE v5[328];
  _BYTE v6[328];
  _BYTE v7[328];

  sub_23791A19C(a1, v6);
  sub_23791A19C(a2, v7);
  sub_23791A19C(v6, v5);
  sub_23791A19C(v7, v4);
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(v5, v4);
}

uint64_t sub_2379E4E50()
{
  return 0x656C797473;
}

uint64_t sub_2379E4E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2379E4EF0()
{
  sub_2379E7CEC();
  return sub_237A88718();
}

uint64_t sub_2379E4F18()
{
  sub_2379E7CEC();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.encode(to:)(_QWORD *a1)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[336];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826BD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23791A19C(v1, v10);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379E7CEC();
  sub_237A886B8();
  sub_23791A19C(v10, &v9);
  sub_2379E7D30();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.hashValue.getter()
{
  const void *v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  _BYTE v18[72];
  _QWORD __dst[41];
  _BYTE v20[328];
  _BYTE v21[336];

  sub_23791A19C(v0, v20);
  sub_237A885D4();
  sub_23791A19C(v20, v21);
  v1 = sub_23791A1D8((uint64_t)v21);
  v2 = (uint64_t *)sub_23791A1E4((uint64_t)v21);
  if (v1 == 1)
  {
    memcpy(__dst, v2, 0x145uLL);
    sub_237A885E0();
    sub_2379E2A5C((uint64_t)__dst);
    return sub_237A88610();
  }
  sub_237A885E0();
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  if (*v2)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v4);
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v18, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24((uint64_t)v18, v4);
      sub_237A885EC();
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_237876E24((uint64_t)v18, v5);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v4);
      swift_bridgeObjectRelease();
      v6 = v4;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2378DE3E0(v4);
    if (v4)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v6 = 0;
LABEL_11:
  sub_2378706C8(v6);
  if (((*((unsigned int *)v2 + 18) | (unint64_t)((uint64_t)*((char *)v2 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v8 = v2[12];
  v9 = v2[13];
  v10 = v2[14];
  v11 = v2[15];
  v12 = v2[16];
  v13 = v2[17];
  v14 = v2[18];
  v15 = *((_BYTE *)v2 + 156);
  v16 = *((_DWORD *)v2 + 38);
  __dst[0] = v2[11];
  v7 = __dst[0];
  __dst[1] = v8;
  __dst[2] = v9;
  __dst[3] = v10;
  __dst[4] = v11;
  __dst[5] = v12;
  __dst[6] = v13;
  __dst[7] = v14;
  BYTE4(__dst[8]) = v15;
  LODWORD(__dst[8]) = v16;
  sub_237A885F8();
  sub_2378DE3E0(v7);
  sub_2379E741C((uint64_t)v18);
  sub_2378706C8(v7);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.ProgressBarConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  _BYTE v10[328];
  _BYTE v11[328];
  uint64_t v12;
  void *v13;

  v13 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826BF0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379E7CEC();
  sub_237A88688();
  if (!v2)
  {
    v8 = v13;
    sub_2379E7D74();
    sub_237A881F0();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    sub_23791A19C(&v12, v10);
    sub_23791A19C(v10, v11);
    memcpy(v8, v11, 0x145uLL);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2379E557C()
{
  const void *v0;
  _BYTE v2[328];
  _BYTE v3[328];

  sub_23791A19C(v0, v2);
  sub_23791A19C(v2, v3);
  sub_23791A1D8((uint64_t)v3);
  sub_23791A1E4((uint64_t)v3);
  return MEMORY[0x24BEE4AF8];
}

void *sub_2379E55CC()
{
  void *v0;
  _BYTE __src[328];
  _BYTE v3[328];
  _BYTE v4[328];

  sub_23791A19C(v0, v3);
  sub_23791A19C(v3, v4);
  sub_23791A1D8((uint64_t)v4);
  sub_23791A1E4((uint64_t)v4);
  sub_23791A19C(v3, __src);
  return memcpy(v0, __src, 0x145uLL);
}

uint64_t sub_2379E563C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379E5650(_QWORD *a1)
{
  return Instrument.GaugeStyle.ProgressBarConfiguration.encode(to:)(a1);
}

uint64_t sub_2379E5668(uint64_t a1)
{
  const void *v1;
  const void *v2;
  int v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t __dst[41];
  _BYTE v12[328];
  _BYTE v13[336];

  v2 = v1;
  sub_23791A19C(v2, v12);
  sub_23791A19C(v12, v13);
  v4 = sub_23791A1D8((uint64_t)v13);
  v5 = (uint64_t *)sub_23791A1E4((uint64_t)v13);
  if (v4 == 1)
  {
    memcpy(__dst, v5, 0x145uLL);
    sub_237A885E0();
    return sub_2379E2A5C((uint64_t)__dst);
  }
  sub_237A885E0();
  v7 = *v5;
  v8 = v5[1];
  v9 = v5[2];
  if (*v5)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v8);
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_5:
      sub_237A885EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237876E24(a1, v8);
      sub_237A885EC();
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_237876E24(a1, v9);
        swift_bridgeObjectRelease();
      }
      sub_2378706C8(v8);
      swift_bridgeObjectRelease();
      v10 = v8;
      goto LABEL_11;
    }
  }
  else
  {
    sub_237A885EC();
    sub_2378DE3E0(v8);
    if (v8)
      goto LABEL_5;
  }
  sub_237A885EC();
  swift_bridgeObjectRelease();
  v10 = 0;
LABEL_11:
  sub_2378706C8(v10);
  if (((*((unsigned int *)v5 + 18) | (unint64_t)((uint64_t)*((char *)v5 + 76) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  __dst[0] = v5[11];
  sub_237A885F8();
  sub_2378DE3E0(__dst[0]);
  sub_2379E741C(a1);
  return sub_2378706C8(__dst[0]);
}

BOOL sub_2379E59E8(const void *a1, const void *a2)
{
  _BYTE v4[328];
  _BYTE v5[328];
  _BYTE v6[328];
  _BYTE v7[328];

  sub_23791A19C(a1, v6);
  sub_23791A19C(a2, v7);
  sub_23791A19C(v6, v5);
  sub_23791A19C(v7, v4);
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(v5, v4);
}

void Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 4);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_BYTE *)(a1 + 4) = v2;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 4);
  *(_DWORD *)v1 = *(_DWORD *)result;
  *(_BYTE *)(v1 + 4) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.dataIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[8];
  _OWORD v12[2];

  v2 = *(_OWORD *)(v1 + 120);
  v11[6] = *(_OWORD *)(v1 + 104);
  v11[7] = v2;
  v12[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v12 + 13) = *(_OWORD *)(v1 + 149);
  v3 = *(_OWORD *)(v1 + 56);
  v11[2] = *(_OWORD *)(v1 + 40);
  v11[3] = v3;
  v4 = *(_OWORD *)(v1 + 88);
  v11[4] = *(_OWORD *)(v1 + 72);
  v11[5] = v4;
  v5 = *(_OWORD *)(v1 + 24);
  v11[0] = *(_OWORD *)(v1 + 8);
  v11[1] = v5;
  v6 = *(_OWORD *)(v1 + 120);
  a1[6] = *(_OWORD *)(v1 + 104);
  a1[7] = v6;
  a1[8] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)a1 + 141) = *(_OWORD *)(v1 + 149);
  v7 = *(_OWORD *)(v1 + 56);
  a1[2] = *(_OWORD *)(v1 + 40);
  a1[3] = v7;
  v8 = *(_OWORD *)(v1 + 88);
  a1[4] = *(_OWORD *)(v1 + 72);
  a1[5] = v8;
  v9 = *(_OWORD *)(v1 + 24);
  *a1 = *(_OWORD *)(v1 + 8);
  a1[1] = v9;
  return sub_2379E7DB8((uint64_t)v11);
}

__n128 Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[8];
  _OWORD v13[2];

  v3 = *(_OWORD *)(v1 + 120);
  v12[6] = *(_OWORD *)(v1 + 104);
  v12[7] = v3;
  v13[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v13 + 13) = *(_OWORD *)(v1 + 149);
  v4 = *(_OWORD *)(v1 + 56);
  v12[2] = *(_OWORD *)(v1 + 40);
  v12[3] = v4;
  v5 = *(_OWORD *)(v1 + 88);
  v12[4] = *(_OWORD *)(v1 + 72);
  v12[5] = v5;
  v6 = *(_OWORD *)(v1 + 24);
  v12[0] = *(_OWORD *)(v1 + 8);
  v12[1] = v6;
  sub_2379E7E60((uint64_t)v12);
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 120) = v7;
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 149) = *(_OWORD *)(a1 + 141);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 88) = v9;
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v11;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.consumedPowerConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[8];
  _OWORD v13[2];

  v2 = *(_OWORD *)(v1 + 216);
  v12[2] = *(_OWORD *)(v1 + 200);
  v12[3] = v2;
  v3 = *(_OWORD *)(v1 + 248);
  v12[4] = *(_OWORD *)(v1 + 232);
  v12[5] = v3;
  v4 = *(_OWORD *)(v1 + 184);
  v12[0] = *(_OWORD *)(v1 + 168);
  v12[1] = v4;
  v5 = *(_OWORD *)(v1 + 280);
  v12[6] = *(_OWORD *)(v1 + 264);
  v12[7] = v5;
  v7 = *(_OWORD *)(v1 + 264);
  v6 = *(_OWORD *)(v1 + 280);
  v13[0] = *(_OWORD *)(v1 + 296);
  *(_OWORD *)((char *)v13 + 13) = *(_OWORD *)(v1 + 309);
  a1[6] = v7;
  a1[7] = v6;
  a1[8] = *(_OWORD *)(v1 + 296);
  *(_OWORD *)((char *)a1 + 141) = *(_OWORD *)(v1 + 309);
  v8 = *(_OWORD *)(v1 + 216);
  a1[2] = *(_OWORD *)(v1 + 200);
  a1[3] = v8;
  v9 = *(_OWORD *)(v1 + 248);
  a1[4] = *(_OWORD *)(v1 + 232);
  a1[5] = v9;
  v10 = *(_OWORD *)(v1 + 184);
  *a1 = *(_OWORD *)(v1 + 168);
  a1[1] = v10;
  return sub_2379E7DB8((uint64_t)v12);
}

__n128 Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[8];
  _OWORD v13[2];

  v3 = *(_OWORD *)(v1 + 216);
  v12[2] = *(_OWORD *)(v1 + 200);
  v12[3] = v3;
  v4 = *(_OWORD *)(v1 + 248);
  v12[4] = *(_OWORD *)(v1 + 232);
  v12[5] = v4;
  v5 = *(_OWORD *)(v1 + 184);
  v12[0] = *(_OWORD *)(v1 + 168);
  v12[1] = v5;
  v6 = *(_OWORD *)(v1 + 280);
  v12[6] = *(_OWORD *)(v1 + 264);
  v12[7] = v6;
  v13[0] = *(_OWORD *)(v1 + 296);
  *(_OWORD *)((char *)v13 + 13) = *(_OWORD *)(v1 + 309);
  sub_2379E7E60((uint64_t)v12);
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 280) = v7;
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 309) = *(_OWORD *)(a1 + 141);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 200) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 216) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 248) = v9;
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 184) = v11;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarPowermeterConfiguration.regenPowerConfiguration.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(consumedPowerConfiguration:regenPowerConfiguration:)@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;

  v3 = a1[7];
  *(_OWORD *)(a3 + 104) = a1[6];
  *(_OWORD *)(a3 + 120) = v3;
  *(_OWORD *)(a3 + 136) = a1[8];
  *(_OWORD *)(a3 + 149) = *(_OWORD *)((char *)a1 + 141);
  v4 = a1[3];
  *(_OWORD *)(a3 + 40) = a1[2];
  *(_OWORD *)(a3 + 56) = v4;
  v5 = a1[5];
  *(_OWORD *)(a3 + 72) = a1[4];
  *(_OWORD *)(a3 + 88) = v5;
  v6 = a1[1];
  *(_OWORD *)(a3 + 8) = *a1;
  *(_OWORD *)(a3 + 24) = v6;
  v7 = a2[7];
  *(_OWORD *)(a3 + 264) = a2[6];
  *(_OWORD *)(a3 + 280) = v7;
  *(_OWORD *)(a3 + 296) = a2[8];
  *(_OWORD *)(a3 + 309) = *(_OWORD *)((char *)a2 + 141);
  v8 = a2[3];
  *(_OWORD *)(a3 + 200) = a2[2];
  *(_OWORD *)(a3 + 216) = v8;
  v9 = a2[5];
  *(_OWORD *)(a3 + 232) = a2[4];
  *(_OWORD *)(a3 + 248) = v9;
  v10 = a2[1];
  *(_OWORD *)(a3 + 168) = *a2;
  *(_OWORD *)(a3 + 184) = v10;
  *(_QWORD *)&result = 640165136;
  *(_DWORD *)a3 = 640165136;
  *(_BYTE *)(a3 + 4) = 39;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17[8];
  _OWORD v18[2];
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[29];

  v3 = *(_BYTE *)(v1 + 4);
  v4 = *(_OWORD *)(v1 + 120);
  v32 = *(_OWORD *)(v1 + 104);
  v33 = v4;
  *(_OWORD *)v34 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)&v34[13] = *(_OWORD *)(v1 + 149);
  v5 = *(_OWORD *)(v1 + 56);
  v28 = *(_OWORD *)(v1 + 40);
  v29 = v5;
  v6 = *(_OWORD *)(v1 + 88);
  v30 = *(_OWORD *)(v1 + 72);
  v31 = v6;
  v7 = *(_OWORD *)(v1 + 24);
  v26 = *(_OWORD *)(v1 + 8);
  v27 = v7;
  v8 = *(_OWORD *)(v1 + 280);
  v17[6] = *(_OWORD *)(v1 + 264);
  v17[7] = v8;
  v18[0] = *(_OWORD *)(v1 + 296);
  *(_OWORD *)((char *)v18 + 13) = *(_OWORD *)(v1 + 309);
  v9 = *(_OWORD *)(v1 + 216);
  v17[2] = *(_OWORD *)(v1 + 200);
  v17[3] = v9;
  v10 = *(_OWORD *)(v1 + 248);
  v17[4] = *(_OWORD *)(v1 + 232);
  v17[5] = v10;
  v11 = *(_OWORD *)(v1 + 184);
  v17[0] = *(_OWORD *)(v1 + 168);
  v17[1] = v11;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  LOBYTE(v19) = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v27;
  if (!(_QWORD)v26)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v26);
    sub_2378DE3E0(*((uint64_t *)&v12 + 1));
    if (*((_QWORD *)&v12 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v14 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v26);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v12 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v12);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, *((uint64_t *)&v12 + 1));
  sub_237A885EC();
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v13);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v12 + 1));
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)&v12 + 1);
LABEL_9:
  sub_2378706C8(v14);
  if (((DWORD2(v30) | (unint64_t)((uint64_t)SBYTE12(v30) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v15 = *((_QWORD *)&v31 + 1);
  v19 = *((_QWORD *)&v31 + 1);
  v20 = v32;
  v21 = v33;
  v22 = *(_OWORD *)v34;
  v23 = *(_QWORD *)&v34[16];
  v25 = v34[28];
  v24 = *(_DWORD *)&v34[24];
  sub_237A885F8();
  sub_2378DE3E0(v15);
  sub_2379E741C(a1);
  sub_2378706C8(v15);
  sub_2379E7E60((uint64_t)&v26);
  sub_2379E7DB8((uint64_t)v17);
  sub_2379E27BC(v17);
  return sub_2379E7E60((uint64_t)v17);
}

uint64_t sub_2379E62A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0xD000000000000017;
  if (*v0)
    return v1;
  else
    return 0x6E65644961746164;
}

uint64_t sub_2379E631C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379E9BC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379E6340()
{
  sub_2379E7F08();
  return sub_237A88718();
}

uint64_t sub_2379E6368()
{
  sub_2379E7F08();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[29];
  char v28;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826C00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_BYTE *)(v3 + 4);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379E7F08();
  sub_237A886B8();
  LODWORD(v19) = *(_DWORD *)v3;
  BYTE4(v19) = v9;
  v28 = 0;
  sub_2379A6024();
  sub_237A882B0();
  if (!v2)
  {
    v10 = *(_OWORD *)(v3 + 120);
    v25 = *(_OWORD *)(v3 + 104);
    v26 = v10;
    *(_OWORD *)v27 = *(_OWORD *)(v3 + 136);
    *(_OWORD *)&v27[13] = *(_OWORD *)(v3 + 149);
    v11 = *(_OWORD *)(v3 + 56);
    v21 = *(_OWORD *)(v3 + 40);
    v22 = v11;
    v12 = *(_OWORD *)(v3 + 88);
    v23 = *(_OWORD *)(v3 + 72);
    v24 = v12;
    v13 = *(_OWORD *)(v3 + 24);
    v19 = *(_OWORD *)(v3 + 8);
    v20 = v13;
    v28 = 1;
    sub_2379E7B00();
    sub_237A882B0();
    v14 = *(_OWORD *)(v3 + 280);
    v25 = *(_OWORD *)(v3 + 264);
    v26 = v14;
    *(_OWORD *)v27 = *(_OWORD *)(v3 + 296);
    *(_OWORD *)&v27[13] = *(_OWORD *)(v3 + 309);
    v15 = *(_OWORD *)(v3 + 216);
    v21 = *(_OWORD *)(v3 + 200);
    v22 = v15;
    v16 = *(_OWORD *)(v3 + 248);
    v23 = *(_OWORD *)(v3 + 232);
    v24 = v16;
    v17 = *(_OWORD *)(v3 + 184);
    v19 = *(_OWORD *)(v3 + 168);
    v20 = v17;
    v28 = 2;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.GaugeStyle.DigiBarPowermeterConfiguration.hashValue.getter()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[72];
  __int128 v16[8];
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[29];

  v1 = *(_BYTE *)(v0 + 4);
  v2 = *(_OWORD *)(v0 + 120);
  v32 = *(_OWORD *)(v0 + 104);
  v33 = v2;
  *(_OWORD *)v34 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)&v34[13] = *(_OWORD *)(v0 + 149);
  v3 = *(_OWORD *)(v0 + 56);
  v28 = *(_OWORD *)(v0 + 40);
  v29 = v3;
  v4 = *(_OWORD *)(v0 + 88);
  v30 = *(_OWORD *)(v0 + 72);
  v31 = v4;
  v5 = *(_OWORD *)(v0 + 24);
  v26 = *(_OWORD *)(v0 + 8);
  v27 = v5;
  v6 = *(_OWORD *)(v0 + 280);
  v16[6] = *(_OWORD *)(v0 + 264);
  v16[7] = v6;
  v17[0] = *(_OWORD *)(v0 + 296);
  *(_OWORD *)((char *)v17 + 13) = *(_OWORD *)(v0 + 309);
  v7 = *(_OWORD *)(v0 + 216);
  v16[2] = *(_OWORD *)(v0 + 200);
  v16[3] = v7;
  v8 = *(_OWORD *)(v0 + 248);
  v16[4] = *(_OWORD *)(v0 + 232);
  v16[5] = v8;
  v9 = *(_OWORD *)(v0 + 184);
  v16[0] = *(_OWORD *)(v0 + 168);
  v16[1] = v9;
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = v1;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v10 = v26;
  v11 = v27;
  if (!(_QWORD)v26)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v26);
    sub_2378DE3E0(*((uint64_t *)&v10 + 1));
    if (*((_QWORD *)&v10 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v12 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v26);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v10 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v15, *((uint64_t *)&v10 + 1));
  sub_237A885EC();
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v15, v11);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v10 + 1));
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)&v10 + 1);
LABEL_9:
  sub_2378706C8(v12);
  if (((DWORD2(v30) | (unint64_t)((uint64_t)SBYTE12(v30) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v13 = *((_QWORD *)&v31 + 1);
  v18 = *((_QWORD *)&v31 + 1);
  v19 = v32;
  v20 = v33;
  v21 = *(_QWORD *)v34;
  v22 = *(_QWORD *)&v34[8];
  v23 = *(_QWORD *)&v34[16];
  v25 = v34[28];
  v24 = *(_DWORD *)&v34[24];
  sub_237A885F8();
  sub_2378DE3E0(v13);
  sub_2379E741C((uint64_t)v15);
  sub_2378706C8(v13);
  sub_2379E7E60((uint64_t)&v26);
  sub_2379E7DB8((uint64_t)v16);
  sub_2379E27BC(v16);
  sub_2379E7E60((uint64_t)v16);
  return sub_237A88610();
}

_QWORD *Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  void *v21;
  _QWORD v22[41];
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[29];
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];
  _OWORD v68[10];
  _OWORD v69[11];
  uint64_t v70;

  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826C10);
  v5 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379E7F08();
  sub_237A88688();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  v21 = a2;
  LOBYTE(v22[0]) = 0;
  sub_2379A6068();
  sub_237A881F0();
  v19 = v24;
  v20 = v23;
  v18 = v25;
  v9 = v26;
  v10 = v27;
  v58 = 1;
  sub_2379E7BCC();
  sub_237A881F0();
  v16 = v10;
  v17 = v9;
  *(_OWORD *)((char *)&v69[6] + 3) = v65;
  *(_OWORD *)((char *)&v69[7] + 3) = v66;
  *(_OWORD *)((char *)&v69[8] + 3) = v67[0];
  v69[9] = *(_OWORD *)((char *)v67 + 13);
  *(_OWORD *)((char *)&v69[2] + 3) = v61;
  *(_OWORD *)((char *)&v69[3] + 3) = v62;
  *(_OWORD *)((char *)&v69[4] + 3) = v63;
  *(_OWORD *)((char *)&v69[5] + 3) = v64;
  *(_OWORD *)((char *)v69 + 3) = v59;
  *(_OWORD *)((char *)&v69[1] + 3) = v60;
  v48 = 2;
  v11 = v70;
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v11);
  *(_OWORD *)&v22[33] = v55;
  *(_OWORD *)&v22[35] = v56;
  *(_OWORD *)&v22[37] = *(_OWORD *)v57;
  *(_OWORD *)((char *)&v22[38] + 5) = *(_OWORD *)&v57[13];
  *(_OWORD *)&v22[25] = v51;
  *(_OWORD *)&v22[27] = v52;
  *(_OWORD *)&v22[29] = v53;
  *(_OWORD *)&v22[31] = v54;
  *(_OWORD *)&v22[21] = v49;
  *(_OWORD *)&v22[23] = v50;
  *(_OWORD *)((char *)&v68[6] + 3) = v55;
  *(_OWORD *)((char *)&v68[7] + 3) = v56;
  *(_OWORD *)((char *)&v68[8] + 3) = *(_OWORD *)v57;
  v68[9] = *(_OWORD *)&v57[13];
  *(_OWORD *)((char *)&v68[2] + 3) = v51;
  *(_OWORD *)((char *)&v68[3] + 3) = v52;
  *(_OWORD *)((char *)&v68[4] + 3) = v53;
  *(_OWORD *)((char *)&v68[5] + 3) = v54;
  *(_OWORD *)((char *)v68 + 3) = v49;
  *(_OWORD *)((char *)&v68[1] + 3) = v50;
  *(_OWORD *)&v22[13] = *(_OWORD *)((char *)&v69[6] + 3);
  *(_OWORD *)&v22[15] = *(_OWORD *)((char *)&v69[7] + 3);
  *(_OWORD *)&v22[17] = *(_OWORD *)((char *)&v69[8] + 3);
  *(_OWORD *)((char *)&v22[18] + 5) = v69[9];
  *(_OWORD *)&v22[5] = *(_OWORD *)((char *)&v69[2] + 3);
  *(_OWORD *)&v22[7] = *(_OWORD *)((char *)&v69[3] + 3);
  *(_OWORD *)&v22[9] = *(_OWORD *)((char *)&v69[4] + 3);
  *(_OWORD *)&v22[11] = *(_OWORD *)((char *)&v69[5] + 3);
  *(_OWORD *)&v22[1] = *(_OWORD *)((char *)v69 + 3);
  *(_OWORD *)&v22[3] = *(_OWORD *)((char *)&v69[1] + 3);
  LOBYTE(v11) = v19;
  LOBYTE(v22[0]) = v20;
  BYTE1(v22[0]) = v19;
  v13 = v17;
  v12 = v18;
  BYTE2(v22[0]) = v18;
  BYTE3(v22[0]) = v17;
  LOBYTE(v8) = v16;
  BYTE4(v22[0]) = v16;
  memcpy(v21, v22, 0x145uLL);
  sub_2379E7F4C(v22);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v34 = v69[6];
  v35 = v69[7];
  v36 = v69[8];
  v37 = v69[9];
  v30 = v69[2];
  v31 = v69[3];
  v32 = v69[4];
  v33 = v69[5];
  v28 = v69[0];
  v29 = v69[1];
  v44 = v68[6];
  v45 = v68[7];
  v46 = v68[8];
  v47 = v68[9];
  v40 = v68[2];
  v41 = v68[3];
  v42 = v68[4];
  v43 = v68[5];
  v38 = v68[0];
  v23 = v20;
  v24 = v11;
  v25 = v12;
  v26 = v13;
  v27 = v8;
  v39 = v68[1];
  return sub_2379E806C(&v23);
}

_QWORD *sub_2379E6ED8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarPowermeterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379E6EEC(_QWORD *a1)
{
  return Instrument.GaugeStyle.DigiBarPowermeterConfiguration.encode(to:)(a1);
}

uint64_t sub_2379E6F08()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[72];
  __int128 v16[8];
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[29];

  v1 = *(_BYTE *)(v0 + 4);
  v2 = *(_OWORD *)(v0 + 120);
  v32 = *(_OWORD *)(v0 + 104);
  v33 = v2;
  *(_OWORD *)v34 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)&v34[13] = *(_OWORD *)(v0 + 149);
  v3 = *(_OWORD *)(v0 + 56);
  v28 = *(_OWORD *)(v0 + 40);
  v29 = v3;
  v4 = *(_OWORD *)(v0 + 88);
  v30 = *(_OWORD *)(v0 + 72);
  v31 = v4;
  v5 = *(_OWORD *)(v0 + 24);
  v26 = *(_OWORD *)(v0 + 8);
  v27 = v5;
  v6 = *(_OWORD *)(v0 + 280);
  v16[6] = *(_OWORD *)(v0 + 264);
  v16[7] = v6;
  v17[0] = *(_OWORD *)(v0 + 296);
  *(_OWORD *)((char *)v17 + 13) = *(_OWORD *)(v0 + 309);
  v7 = *(_OWORD *)(v0 + 216);
  v16[2] = *(_OWORD *)(v0 + 200);
  v16[3] = v7;
  v8 = *(_OWORD *)(v0 + 248);
  v16[4] = *(_OWORD *)(v0 + 232);
  v16[5] = v8;
  v9 = *(_OWORD *)(v0 + 184);
  v16[0] = *(_OWORD *)(v0 + 168);
  v16[1] = v9;
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = v1;
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  v10 = v26;
  v11 = v27;
  if (!(_QWORD)v26)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v26);
    sub_2378DE3E0(*((uint64_t *)&v10 + 1));
    if (*((_QWORD *)&v10 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v12 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v26);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v10 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v15, *((uint64_t *)&v10 + 1));
  sub_237A885EC();
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v15, v11);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v10 + 1));
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)&v10 + 1);
LABEL_9:
  sub_2378706C8(v12);
  if (((DWORD2(v30) | (unint64_t)((uint64_t)SBYTE12(v30) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v13 = *((_QWORD *)&v31 + 1);
  v18 = *((_QWORD *)&v31 + 1);
  v19 = v32;
  v20 = v33;
  v21 = *(_QWORD *)v34;
  v22 = *(_QWORD *)&v34[8];
  v23 = *(_QWORD *)&v34[16];
  v25 = v34[28];
  v24 = *(_DWORD *)&v34[24];
  sub_237A885F8();
  sub_2378DE3E0(v13);
  sub_2379E741C((uint64_t)v15);
  sub_2378706C8(v13);
  sub_2379E7E60((uint64_t)&v26);
  sub_2379E7DB8((uint64_t)v16);
  sub_2379E27BC(v16);
  sub_2379E7E60((uint64_t)v16);
  return sub_237A88610();
}

uint64_t sub_2379E740C()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2379E741C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  unsigned int v11;
  char v12;
  _QWORD v13[10];

  v2 = v1;
  sub_2379E9F18(v2, (uint64_t)v10);
  v5 = v10[0];
  v4 = v10[1];
  v6 = v11;
  v7 = v12;
  sub_2379E9F18(v2, (uint64_t)v13);
  if (!v13[0])
    return sub_237A885EC();
  v8 = v6 | (v7 << 32);
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_2379E9F60(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_237876E24(a1, v5);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    sub_237A885EC();
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_7:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    return sub_2379E9F60(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  if (v8 < 0)
    goto LABEL_7;
LABEL_4:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_2379E9F60(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO30DigiBarPowermeterConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];

  v4 = *(_BYTE *)(a1 + 4);
  v5 = *(_BYTE *)(a2 + 4);
  LODWORD(v33) = *(_DWORD *)a1;
  BYTE4(v33) = v4;
  LODWORD(v24) = *(_DWORD *)a2;
  BYTE4(v24) = v5;
  if ((_s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0() & 1) == 0)
    return 0;
  v6 = *(_OWORD *)(a1 + 120);
  v39 = *(_OWORD *)(a1 + 104);
  v40 = v6;
  v41[0] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)((char *)v41 + 13) = *(_OWORD *)(a1 + 149);
  v7 = *(_OWORD *)(a1 + 56);
  v35 = *(_OWORD *)(a1 + 40);
  v36 = v7;
  v8 = *(_OWORD *)(a1 + 88);
  v37 = *(_OWORD *)(a1 + 72);
  v38 = v8;
  v9 = *(_OWORD *)(a1 + 24);
  v33 = *(_OWORD *)(a1 + 8);
  v34 = v9;
  v10 = *(_OWORD *)(a2 + 120);
  v30 = *(_OWORD *)(a2 + 104);
  v31 = v10;
  v32[0] = *(_OWORD *)(a2 + 136);
  *(_OWORD *)((char *)v32 + 13) = *(_OWORD *)(a2 + 149);
  v11 = *(_OWORD *)(a2 + 56);
  v26 = *(_OWORD *)(a2 + 40);
  v27 = v11;
  v12 = *(_OWORD *)(a2 + 88);
  v28 = *(_OWORD *)(a2 + 72);
  v29 = v12;
  v13 = *(_OWORD *)(a2 + 24);
  v24 = *(_OWORD *)(a2 + 8);
  v25 = v13;
  if (_s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v33, &v24))
  {
    v14 = *(_OWORD *)(a1 + 280);
    v39 = *(_OWORD *)(a1 + 264);
    v40 = v14;
    v41[0] = *(_OWORD *)(a1 + 296);
    *(_OWORD *)((char *)v41 + 13) = *(_OWORD *)(a1 + 309);
    v15 = *(_OWORD *)(a1 + 216);
    v35 = *(_OWORD *)(a1 + 200);
    v36 = v15;
    v16 = *(_OWORD *)(a1 + 248);
    v37 = *(_OWORD *)(a1 + 232);
    v38 = v16;
    v17 = *(_OWORD *)(a1 + 184);
    v33 = *(_OWORD *)(a1 + 168);
    v34 = v17;
    v18 = *(_OWORD *)(a2 + 280);
    v30 = *(_OWORD *)(a2 + 264);
    v31 = v18;
    v32[0] = *(_OWORD *)(a2 + 296);
    *(_OWORD *)((char *)v32 + 13) = *(_OWORD *)(a2 + 309);
    v19 = *(_OWORD *)(a2 + 216);
    v26 = *(_OWORD *)(a2 + 200);
    v27 = v19;
    v20 = *(_OWORD *)(a2 + 248);
    v28 = *(_OWORD *)(a2 + 232);
    v29 = v20;
    v21 = *(_OWORD *)(a2 + 184);
    v24 = *(_OWORD *)(a2 + 168);
    v25 = v21;
    return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v33, &v24);
  }
  else
  {
    return 0;
  }
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO24ProgressBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(const void *a1, const void *a2)
{
  const void *v3;
  int v4;
  uint64_t v5;
  const void *v6;
  BOOL v7;
  __int128 *v8;
  int v9;
  __int128 *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v21[21];
  __int128 __dst[21];
  _BYTE v23[328];
  _BYTE v24[328];
  _BYTE v25[328];
  _BYTE v26[328];
  uint64_t v27;
  _BYTE v28[328];

  sub_23791A19C(a1, v24);
  sub_23791A19C(a2, v25);
  sub_23791A19C(v24, v26);
  sub_23791A19C(v25, &v27);
  sub_23791A19C(v24, v28);
  if (sub_23791A1D8((uint64_t)v28) == 1)
  {
    v3 = (const void *)sub_23791A1E4((uint64_t)v28);
    sub_23791A19C(v25, v23);
    v4 = sub_23791A1D8((uint64_t)v23);
    v5 = sub_23791A1E4((uint64_t)v23);
    if (v4 == 1)
    {
      v6 = (const void *)v5;
      memcpy(__dst, v3, 0x145uLL);
      memcpy(v21, v6, 0x145uLL);
      sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      v7 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO30DigiBarPowermeterConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)__dst, (uint64_t)v21);
LABEL_7:
      v11 = v7;
      sub_2379E9D34((uint64_t)v26);
      sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
      sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DF7C4);
      return v11;
    }
  }
  else
  {
    v8 = (__int128 *)sub_23791A1E4((uint64_t)v28);
    sub_23791A19C(v25, v23);
    v9 = sub_23791A1D8((uint64_t)v23);
    v10 = (__int128 *)sub_23791A1E4((uint64_t)v23);
    if (v9 != 1)
    {
      v12 = v8[7];
      __dst[6] = v8[6];
      __dst[7] = v12;
      __dst[8] = v8[8];
      *(__int128 *)((char *)&__dst[8] + 13) = *(__int128 *)((char *)v8 + 141);
      v13 = v8[3];
      __dst[2] = v8[2];
      __dst[3] = v13;
      v14 = v8[5];
      __dst[4] = v8[4];
      __dst[5] = v14;
      v15 = v8[1];
      __dst[0] = *v8;
      __dst[1] = v15;
      v16 = v10[7];
      v21[6] = v10[6];
      v21[7] = v16;
      v21[8] = v10[8];
      *(__int128 *)((char *)&v21[8] + 13) = *(__int128 *)((char *)v10 + 141);
      v17 = v10[3];
      v21[2] = v10[2];
      v21[3] = v17;
      v18 = v10[5];
      v21[4] = v10[4];
      v21[5] = v18;
      v19 = v10[1];
      v21[0] = *v10;
      v21[1] = v19;
      sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
      v7 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(__dst, v21);
      goto LABEL_7;
    }
  }
  sub_2379E7C50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
  sub_2379E7C50((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE48C);
  sub_2379E9D34((uint64_t)v26);
  return 0;
}

unint64_t sub_2379E79F0()
{
  unint64_t result;

  result = qword_256826B88;
  if (!qword_256826B88)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA22B0, &_s24ProgressBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826B88);
  }
  return result;
}

unint64_t sub_2379E7A34()
{
  unint64_t result;

  result = qword_256826B90;
  if (!qword_256826B90)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2260, &_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826B90);
  }
  return result;
}

unint64_t sub_2379E7A78()
{
  unint64_t result;

  result = qword_256826B98;
  if (!qword_256826B98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarPowermeterConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarPowermeterConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826B98);
  }
  return result;
}

unint64_t sub_2379E7ABC()
{
  unint64_t result;

  result = qword_256826BA0;
  if (!qword_256826BA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2210, &_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826BA0);
  }
  return result;
}

unint64_t sub_2379E7B00()
{
  unint64_t result;

  result = qword_256826BA8;
  if (!qword_256826BA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826BA8);
  }
  return result;
}

unint64_t sub_2379E7B44()
{
  unint64_t result;

  result = qword_256826BC8;
  if (!qword_256826BC8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarPowermeterConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarPowermeterConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826BC8);
  }
  return result;
}

uint64_t sub_2379E7B88(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 160) & 0xFFFFFFFFFFLL;
  v2 = *(_QWORD *)(result + 208) & 1;
  v3 = *(_QWORD *)(result + 240) & 0x83FFFFFFFFLL;
  *(_QWORD *)(result + 80) &= 0x83FFFFFFFFuLL;
  *(_QWORD *)(result + 160) = v1;
  *(_QWORD *)(result + 208) = v2;
  *(_QWORD *)(result + 240) = v3;
  *(_DWORD *)(result + 252) = 0x80000000;
  return result;
}

unint64_t sub_2379E7BCC()
{
  unint64_t result;

  result = qword_256826BD0;
  if (!qword_256826BD0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826BD0);
  }
  return result;
}

int8x16_t sub_2379E7C10(int8x16_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int8x16_t result;

  v1 = a1[10].i64[0] & 0xFFFFFFFFFFLL;
  v2 = a1[13].i64[0] & 1;
  a1[5].i64[0] &= 0x83FFFFFFFFuLL;
  a1[10].i64[0] = v1;
  a1[13].i64[0] = v2;
  result = vandq_s8(a1[15], (int8x16_t)xmmword_237AA1A60);
  a1[15] = result;
  return result;
}

uint64_t sub_2379E7C50(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    *(_QWORD *)(a1 + 304),
    *(_QWORD *)(a1 + 312),
    *(unsigned int *)(a1 + 320) | ((unint64_t)*(unsigned __int8 *)(a1 + 324) << 32));
  return a1;
}

unint64_t sub_2379E7CEC()
{
  unint64_t result;

  result = qword_256826BE0;
  if (!qword_256826BE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA21C0, &_s24ProgressBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826BE0);
  }
  return result;
}

unint64_t sub_2379E7D30()
{
  unint64_t result;

  result = qword_256826BE8;
  if (!qword_256826BE8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.ProgressBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256826BE8);
  }
  return result;
}

unint64_t sub_2379E7D74()
{
  unint64_t result;

  result = qword_256826BF8;
  if (!qword_256826BF8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.ProgressBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256826BF8);
  }
  return result;
}

uint64_t sub_2379E7DB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  sub_2378DE3E0(v4);
  return a1;
}

uint64_t sub_2379E7E60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  sub_2378706C8(v4);
  return a1;
}

unint64_t sub_2379E7F08()
{
  unint64_t result;

  result = qword_256826C08;
  if (!qword_256826C08)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2170, &_s30DigiBarPowermeterConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C08);
  }
  return result;
}

_QWORD *sub_2379E7F4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[2];
  v5 = a1[12];
  v4 = a1[22];
  v6 = a1[32];
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  sub_2378DE3E0(v5);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v4);
  sub_2378DE3E0(v6);
  return a1;
}

_QWORD *sub_2379E806C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[2];
  v5 = a1[12];
  v4 = a1[22];
  v6 = a1[32];
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  sub_2378706C8(v5);
  swift_bridgeObjectRelease();
  sub_2378706C8(v4);
  sub_2378706C8(v6);
  return a1;
}

unint64_t sub_2379E8190()
{
  unint64_t result;

  result = qword_256826C18;
  if (!qword_256826C18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.ProgressBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256826C18);
  }
  return result;
}

unint64_t sub_2379E81D8()
{
  unint64_t result;

  result = qword_256826C20;
  if (!qword_256826C20)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.ProgressBarConfiguration, &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826C20);
  }
  return result;
}

unint64_t sub_2379E8220()
{
  unint64_t result;

  result = qword_256826C28;
  if (!qword_256826C28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarPowermeterConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarPowermeterConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826C28);
  }
  return result;
}

void *__swift_memcpy325_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x145uLL);
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ProgressBarConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration;
}

uint64_t _s24ProgressBarConfigurationV5StyleOwxx_0(uint64_t a1)
{
  __int128 v2;
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 240);
  v2 = *(_OWORD *)(a1 + 208);
  return sub_2378DF7C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           v2,
           *((uint64_t *)&v2 + 1),
           *(_QWORD *)(a1 + 224),
           *(_QWORD *)(a1 + 232),
           v3,
           *((uint64_t *)&v3 + 1),
           *(_QWORD *)(a1 + 256));
}

uint64_t _s24ProgressBarConfigurationV5StyleOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = *(_QWORD *)(a2 + 72);
  v45 = *(_QWORD *)(a2 + 64);
  v42 = *(_QWORD *)(a2 + 88);
  v43 = *(_QWORD *)(a2 + 80);
  v40 = *(_QWORD *)(a2 + 104);
  v41 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 136);
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  v18 = *(_QWORD *)(a2 + 160);
  v19 = *(_QWORD *)(a2 + 168);
  v20 = *(_QWORD *)(a2 + 176);
  v3 = *(_QWORD *)(a2 + 192);
  v21 = *(_QWORD *)(a2 + 184);
  v22 = *(_QWORD *)(a2 + 200);
  v23 = *(_QWORD *)(a2 + 208);
  v24 = *(_QWORD *)(a2 + 216);
  v25 = *(_QWORD *)(a2 + 224);
  v26 = *(_QWORD *)(a2 + 232);
  v27 = *(_QWORD *)(a2 + 240);
  v28 = *(_QWORD *)(a2 + 248);
  v29 = *(_QWORD *)(a2 + 256);
  v30 = *(_QWORD *)(a2 + 264);
  v31 = *(_QWORD *)(a2 + 272);
  v32 = *(_QWORD *)(a2 + 280);
  v33 = *(_QWORD *)(a2 + 288);
  v34 = *(_QWORD *)(a2 + 296);
  v35 = *(_QWORD *)(a2 + 304);
  v36 = *(_QWORD *)(a2 + 312);
  v37 = *(_BYTE *)(a2 + 324);
  v38 = *(_DWORD *)(a2 + 320);
  v5 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 48);
  sub_2378DE48C(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v45, v44, v43, v42, v41, v40, v39, v13, v14, v15, v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v3,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v45;
  *(_QWORD *)(a1 + 72) = v44;
  *(_QWORD *)(a1 + 80) = v43;
  *(_QWORD *)(a1 + 88) = v42;
  *(_QWORD *)(a1 + 96) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_QWORD *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v14;
  *(_QWORD *)(a1 + 136) = v15;
  *(_QWORD *)(a1 + 144) = v16;
  *(_QWORD *)(a1 + 152) = v17;
  *(_QWORD *)(a1 + 160) = v18;
  *(_QWORD *)(a1 + 168) = v19;
  *(_QWORD *)(a1 + 176) = v20;
  *(_QWORD *)(a1 + 184) = v21;
  *(_QWORD *)(a1 + 192) = v3;
  *(_QWORD *)(a1 + 200) = v22;
  *(_QWORD *)(a1 + 208) = v23;
  *(_QWORD *)(a1 + 216) = v24;
  *(_QWORD *)(a1 + 224) = v25;
  *(_QWORD *)(a1 + 232) = v26;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v28;
  *(_QWORD *)(a1 + 256) = v29;
  *(_QWORD *)(a1 + 264) = v30;
  *(_QWORD *)(a1 + 272) = v31;
  *(_QWORD *)(a1 + 280) = v32;
  *(_QWORD *)(a1 + 288) = v33;
  *(_QWORD *)(a1 + 296) = v34;
  *(_QWORD *)(a1 + 304) = v35;
  *(_QWORD *)(a1 + 312) = v36;
  *(_BYTE *)(a1 + 324) = v37;
  *(_DWORD *)(a1 + 320) = v38;
  return a1;
}

uint64_t _s24ProgressBarConfigurationV5StyleOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v65 = *(_QWORD *)a2;
  v66 = *(_QWORD *)(a2 + 8);
  v63 = *(_QWORD *)(a2 + 24);
  v64 = *(_QWORD *)(a2 + 16);
  v61 = *(_QWORD *)(a2 + 40);
  v62 = *(_QWORD *)(a2 + 32);
  v59 = *(_QWORD *)(a2 + 56);
  v60 = *(_QWORD *)(a2 + 48);
  v57 = *(_QWORD *)(a2 + 72);
  v58 = *(_QWORD *)(a2 + 64);
  v55 = *(_QWORD *)(a2 + 88);
  v56 = *(_QWORD *)(a2 + 80);
  v53 = *(_QWORD *)(a2 + 104);
  v54 = *(_QWORD *)(a2 + 96);
  v3 = *(_QWORD *)(a2 + 120);
  v52 = *(_QWORD *)(a2 + 112);
  v4 = *(_QWORD *)(a2 + 128);
  v5 = *(_QWORD *)(a2 + 136);
  v6 = *(_QWORD *)(a2 + 144);
  v7 = *(_QWORD *)(a2 + 152);
  v8 = *(_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 168);
  v10 = *(_QWORD *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 192);
  v34 = *(_QWORD *)(a2 + 184);
  v35 = *(_QWORD *)(a2 + 200);
  v36 = *(_QWORD *)(a2 + 208);
  v37 = *(_QWORD *)(a2 + 216);
  v38 = *(_QWORD *)(a2 + 224);
  v39 = *(_QWORD *)(a2 + 232);
  v40 = *(_QWORD *)(a2 + 240);
  v41 = *(_QWORD *)(a2 + 248);
  v42 = *(_QWORD *)(a2 + 256);
  v43 = *(_QWORD *)(a2 + 264);
  v44 = *(_QWORD *)(a2 + 272);
  v45 = *(_QWORD *)(a2 + 280);
  v46 = *(_QWORD *)(a2 + 288);
  v47 = *(_QWORD *)(a2 + 296);
  v48 = *(_QWORD *)(a2 + 304);
  v49 = *(_QWORD *)(a2 + 312);
  v50 = *(_BYTE *)(a2 + 324);
  v51 = *(_DWORD *)(a2 + 320);
  sub_2378DE48C(*(_QWORD *)a2, v66, v64, v63, v62, v61, v60, v59, v58, v57, v56, v55, v54, v53, v52, v3, v4, v5, v6,
    v7,
    v8,
    v9,
    v10,
    v34,
    v11,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v65;
  *(_QWORD *)(a1 + 8) = v66;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v64;
  *(_QWORD *)(a1 + 24) = v63;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v62;
  *(_QWORD *)(a1 + 40) = v61;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v60;
  *(_QWORD *)(a1 + 56) = v59;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v58;
  *(_QWORD *)(a1 + 72) = v57;
  *(_QWORD *)(a1 + 80) = v56;
  *(_QWORD *)(a1 + 88) = v55;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v54;
  *(_QWORD *)(a1 + 104) = v53;
  *(_QWORD *)(a1 + 112) = v52;
  *(_QWORD *)(a1 + 120) = v3;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 136) = v5;
  *(_QWORD *)(a1 + 144) = v6;
  *(_QWORD *)(a1 + 152) = v7;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v8;
  *(_QWORD *)(a1 + 168) = v9;
  *(_QWORD *)(a1 + 176) = v10;
  *(_QWORD *)(a1 + 184) = v34;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v11;
  *(_QWORD *)(a1 + 200) = v35;
  *(_QWORD *)(a1 + 208) = v36;
  *(_QWORD *)(a1 + 216) = v37;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v38;
  *(_QWORD *)(a1 + 232) = v39;
  *(_QWORD *)(a1 + 240) = v40;
  *(_QWORD *)(a1 + 248) = v41;
  v32 = *(_OWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v42;
  *(_QWORD *)(a1 + 264) = v43;
  *(_QWORD *)(a1 + 272) = v44;
  *(_QWORD *)(a1 + 280) = v45;
  *(_QWORD *)(a1 + 288) = v46;
  *(_QWORD *)(a1 + 296) = v47;
  *(_QWORD *)(a1 + 304) = v48;
  *(_QWORD *)(a1 + 312) = v49;
  *(_BYTE *)(a1 + 324) = v50;
  *(_DWORD *)(a1 + 320) = v51;
  sub_2378DF7C4(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32);
  return a1;
}

uint64_t _s24ProgressBarConfigurationV5StyleOwta_0(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v4 = *(_DWORD *)(a2 + 320);
  v5 = *(_BYTE *)(a2 + 324);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_OWORD *)(a1 + 160);
  v21 = *(_OWORD *)(a1 + 176);
  v22 = *(_OWORD *)(a1 + 192);
  v23 = *(_OWORD *)(a1 + 208);
  v24 = *(_OWORD *)(a1 + 224);
  v25 = *(_OWORD *)(a1 + 240);
  v26 = *(_OWORD *)(a1 + 256);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v27;
  v28 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v28;
  v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v29;
  v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v30;
  v31 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v31;
  v32 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v32;
  v33 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v33;
  v34 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v34;
  v35 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v35;
  v36 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v36;
  *(_BYTE *)(a1 + 324) = v5;
  *(_DWORD *)(a1 + 320) = v4;
  sub_2378DF7C4(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26);
  return a1;
}

uint64_t _s24ProgressBarConfigurationV5StyleOwet_0(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 325))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 80) >> 34) & 0x1F | (*(_QWORD *)(a1 + 80) >> 35) & 0x1FFFFFE0 | (*(_QWORD *)(a1 + 160) >> 11) & 0xE0000000;
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t sub_2379E89EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 324) = 0;
    *(_DWORD *)(result + 320) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 325) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 80) = ((unint64_t)-a2 << 35) & 0xFFFFFF0000000000 | ((-a2 & 0x1FLL) << 34);
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_QWORD *)(result + 152) = 0;
      *(_QWORD *)(result + 160) = ((unint64_t)-a2 << 11) & 0x70000000000;
      *(_OWORD *)(result + 184) = 0u;
      *(_OWORD *)(result + 200) = 0u;
      *(_OWORD *)(result + 216) = 0u;
      *(_OWORD *)(result + 232) = 0u;
      *(_OWORD *)(result + 248) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      result += 168;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 141) = 0u;
      return result;
    }
    *(_BYTE *)(result + 325) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2379E8AE4(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 160) & 0xFFFFFFFFFFLL;
  v3 = *(_QWORD *)(result + 208) & 1;
  v4 = *(_QWORD *)(result + 240) & 0x83FFFFFFFFLL;
  *(_QWORD *)(result + 80) &= 0x83FFFFFFFFuLL;
  *(_QWORD *)(result + 160) = v2;
  *(_QWORD *)(result + 208) = v3;
  *(_QWORD *)(result + 240) = v4;
  *(_DWORD *)(result + 252) = a2 << 31;
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ProgressBarConfiguration.Style()
{
  return &type metadata for Instrument.GaugeStyle.ProgressBarConfiguration.Style;
}

uint64_t _s30DigiBarPowermeterConfigurationVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[22])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[32];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s30DigiBarPowermeterConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = (_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = v7;
    *(_QWORD *)(a1 + 104) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
  }
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  v15 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v15;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 237) = *(_QWORD *)(a2 + 237);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  v16 = *(_QWORD *)(a2 + 256);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = v16;
    *(_QWORD *)(a1 + 264) = v17;
    v18 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v18;
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v19;
    *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
    v20 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v20;
  }
  return a1;
}

uint64_t _s30DigiBarPowermeterConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23798066C(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  v8 = (_OWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v11 = (_OWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 96);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_OWORD *)(a2 + 112);
      v13 = *(_OWORD *)(a2 + 128);
      v14 = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v13;
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 112) = v12;
    }
    else
    {
      sub_2379E90F4(a1 + 96);
      *v8 = *v11;
      v19 = *(_OWORD *)(a2 + 128);
      v18 = *(_OWORD *)(a2 + 144);
      v20 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 144) = v18;
      *(_OWORD *)(a1 + 112) = v20;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v15 = *(_OWORD *)(a2 + 112);
    v16 = *(_OWORD *)(a2 + 128);
    v17 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v16;
    *(_OWORD *)(a1 + 144) = v17;
    *(_OWORD *)(a1 + 112) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v8 = *v11;
    v21 = *(_OWORD *)(a2 + 112);
    v22 = *(_OWORD *)(a2 + 128);
    v23 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 144) = v23;
    *(_OWORD *)(a1 + 112) = v21;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 176) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_23798066C(a1 + 176);
  }
  else if (v24)
  {
    *(_QWORD *)(a1 + 176) = v24;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_22:
  v25 = *(_OWORD *)(a2 + 192);
  v26 = *(_OWORD *)(a2 + 208);
  v27 = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 237) = *(_QWORD *)(a2 + 237);
  *(_OWORD *)(a1 + 208) = v26;
  *(_OWORD *)(a1 + 224) = v27;
  *(_OWORD *)(a1 + 192) = v25;
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  v28 = (_OWORD *)(a1 + 256);
  v29 = (_OWORD *)(a2 + 256);
  v30 = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(a1 + 256))
  {
    if (v30)
    {
      *(_QWORD *)(a1 + 256) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31 = *(_OWORD *)(a2 + 272);
      v32 = *(_OWORD *)(a2 + 288);
      v33 = *(_OWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
      *(_OWORD *)(a1 + 288) = v32;
      *(_OWORD *)(a1 + 304) = v33;
      *(_OWORD *)(a1 + 272) = v31;
    }
    else
    {
      sub_2379E90F4(a1 + 256);
      *v28 = *v29;
      v38 = *(_OWORD *)(a2 + 288);
      v37 = *(_OWORD *)(a2 + 304);
      v39 = *(_OWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
      *(_OWORD *)(a1 + 288) = v38;
      *(_OWORD *)(a1 + 304) = v37;
      *(_OWORD *)(a1 + 272) = v39;
    }
  }
  else if (v30)
  {
    *(_QWORD *)(a1 + 256) = v30;
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    v34 = *(_OWORD *)(a2 + 272);
    v35 = *(_OWORD *)(a2 + 288);
    v36 = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
    *(_OWORD *)(a1 + 288) = v35;
    *(_OWORD *)(a1 + 304) = v36;
    *(_OWORD *)(a1 + 272) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v28 = *v29;
    v40 = *(_OWORD *)(a2 + 272);
    v41 = *(_OWORD *)(a2 + 288);
    v42 = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
    *(_OWORD *)(a1 + 288) = v41;
    *(_OWORD *)(a1 + 304) = v42;
    *(_OWORD *)(a1 + 272) = v40;
  }
  return a1;
}

uint64_t sub_2379E90F4(uint64_t a1)
{
  _s26DigiBarColorsConfigurationV13TrackColorIDsVwxx();
  return a1;
}

uint64_t _s30DigiBarPowermeterConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23798066C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_6:
  v5 = *(_QWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 77) = *(_QWORD *)(a2 + 77);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  if (v6)
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 96) = v5;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRelease();
      v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v8;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
      goto LABEL_11;
    }
    sub_2379E90F4(a1 + 96);
  }
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 157) = *(_QWORD *)(a2 + 157);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
LABEL_11:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 176) = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_23798066C(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_16:
  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 237) = *(_QWORD *)(a2 + 237);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  if (!*(_QWORD *)(a1 + 256))
  {
LABEL_20:
    v15 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v15;
    *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
    v16 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v16;
    return a1;
  }
  v13 = *(_QWORD *)(a2 + 256);
  if (!v13)
  {
    sub_2379E90F4(a1 + 256);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 256) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v14;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 317) = *(_QWORD *)(a2 + 317);
  return a1;
}

uint64_t _s30DigiBarPowermeterConfigurationVwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 325))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s30DigiBarPowermeterConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 324) = 0;
    *(_DWORD *)(result + 320) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 325) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 48) = 2 * -a2;
      *(_QWORD *)(result + 56) = 0;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 72) = 0;
      *(_QWORD *)(result + 77) = 0;
      return result;
    }
    *(_BYTE *)(result + 325) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarPowermeterConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarPowermeterConfiguration;
}

uint64_t _s30DigiBarPowermeterConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2379E9484 + 4 * byte_237AA1A75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2379E94B8 + 4 * byte_237AA1A70[v4]))();
}

uint64_t sub_2379E94B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379E94C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379E94C8);
  return result;
}

uint64_t sub_2379E94D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379E94DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2379E94E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379E94E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s30DigiBarPowermeterConfigurationV10CodingKeysOMa()
{
  return &_s30DigiBarPowermeterConfigurationV10CodingKeysON;
}

ValueMetadata *_s24ProgressBarConfigurationV10CodingKeysOMa()
{
  return &_s24ProgressBarConfigurationV10CodingKeysON;
}

uint64_t _s24ProgressBarConfigurationV5StyleO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379E9564 + 4 * byte_237AA1A7F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379E9598 + 4 * byte_237AA1A7A[v4]))();
}

uint64_t sub_2379E9598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379E95A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379E95A8);
  return result;
}

uint64_t sub_2379E95B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379E95BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379E95C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379E95C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24ProgressBarConfigurationV5StyleO10CodingKeysOMa()
{
  return &_s24ProgressBarConfigurationV5StyleO10CodingKeysON;
}

ValueMetadata *_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysOMa()
{
  return &_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON;
}

uint64_t _s24ProgressBarConfigurationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2379E9634 + 4 * byte_237AA1A84[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2379E9654 + 4 * byte_237AA1A89[v4]))();
}

_BYTE *sub_2379E9634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2379E9654(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379E965C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379E9664(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379E966C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379E9674(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysOMa()
{
  return &_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON;
}

unint64_t sub_2379E9694()
{
  unint64_t result;

  result = qword_256826C30;
  if (!qword_256826C30)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1E68, &_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C30);
  }
  return result;
}

unint64_t sub_2379E96DC()
{
  unint64_t result;

  result = qword_256826C38;
  if (!qword_256826C38)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1F20, &_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C38);
  }
  return result;
}

unint64_t sub_2379E9724()
{
  unint64_t result;

  result = qword_256826C40;
  if (!qword_256826C40)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1FD8, &_s24ProgressBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C40);
  }
  return result;
}

unint64_t sub_2379E976C()
{
  unint64_t result;

  result = qword_256826C48;
  if (!qword_256826C48)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2090, &_s24ProgressBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C48);
  }
  return result;
}

unint64_t sub_2379E97B4()
{
  unint64_t result;

  result = qword_256826C50;
  if (!qword_256826C50)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2148, &_s30DigiBarPowermeterConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C50);
  }
  return result;
}

unint64_t sub_2379E97FC()
{
  unint64_t result;

  result = qword_256826C58;
  if (!qword_256826C58)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA20B8, &_s30DigiBarPowermeterConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C58);
  }
  return result;
}

unint64_t sub_2379E9844()
{
  unint64_t result;

  result = qword_256826C60;
  if (!qword_256826C60)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA20E0, &_s30DigiBarPowermeterConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C60);
  }
  return result;
}

unint64_t sub_2379E988C()
{
  unint64_t result;

  result = qword_256826C68;
  if (!qword_256826C68)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2000, &_s24ProgressBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C68);
  }
  return result;
}

unint64_t sub_2379E98D4()
{
  unint64_t result;

  result = qword_256826C70;
  if (!qword_256826C70)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2028, &_s24ProgressBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C70);
  }
  return result;
}

unint64_t sub_2379E991C()
{
  unint64_t result;

  result = qword_256826C78;
  if (!qword_256826C78)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1E90, &_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C78);
  }
  return result;
}

unint64_t sub_2379E9964()
{
  unint64_t result;

  result = qword_256826C80;
  if (!qword_256826C80)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1EB8, &_s24ProgressBarConfigurationV5StyleO17DigiBarCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C80);
  }
  return result;
}

unint64_t sub_2379E99AC()
{
  unint64_t result;

  result = qword_256826C88;
  if (!qword_256826C88)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1DD8, &_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C88);
  }
  return result;
}

unint64_t sub_2379E99F4()
{
  unint64_t result;

  result = qword_256826C90;
  if (!qword_256826C90)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1E00, &_s24ProgressBarConfigurationV5StyleO20PowermeterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C90);
  }
  return result;
}

unint64_t sub_2379E9A3C()
{
  unint64_t result;

  result = qword_256826C98;
  if (!qword_256826C98)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1F48, &_s24ProgressBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826C98);
  }
  return result;
}

unint64_t sub_2379E9A84()
{
  unint64_t result;

  result = qword_256826CA0;
  if (!qword_256826CA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1F70, &_s24ProgressBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256826CA0);
  }
  return result;
}

uint64_t sub_2379E9AC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72614269676964 && a2 == 0xE700000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74656D7265776F70 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2379E9BC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEF73726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000237AB20A0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000237AB20C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2379E9D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 344);
  v23 = *(_QWORD *)(a1 + 336);
  v24 = *(_QWORD *)(a1 + 328);
  v3 = *(_QWORD *)(a1 + 352);
  v4 = *(_QWORD *)(a1 + 360);
  v5 = *(_QWORD *)(a1 + 368);
  v6 = *(_QWORD *)(a1 + 376);
  v7 = *(_QWORD *)(a1 + 384);
  v21 = *(_OWORD *)(a1 + 408);
  v22 = *(_OWORD *)(a1 + 392);
  v19 = *(_OWORD *)(a1 + 440);
  v20 = *(_OWORD *)(a1 + 424);
  v17 = *(_OWORD *)(a1 + 472);
  v18 = *(_OWORD *)(a1 + 456);
  v15 = *(_OWORD *)(a1 + 504);
  v16 = *(_OWORD *)(a1 + 488);
  v14 = *(_OWORD *)(a1 + 520);
  v12 = *(_OWORD *)(a1 + 552);
  v13 = *(_OWORD *)(a1 + 536);
  v10 = *(_OWORD *)(a1 + 584);
  v11 = *(_OWORD *)(a1 + 568);
  v9 = *(_OWORD *)(a1 + 240);
  sub_2378DF7C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v9,
    *((uint64_t *)&v9 + 1),
    *(_QWORD *)(a1 + 256));
  sub_2378DF7C4(v24, v23, v2, v3, v4, v5, v6, v7, v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10);
  return a1;
}

uint64_t sub_2379E9F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379E9F60(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32));
  return a1;
}

uint64_t sub_2379E9FB4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  return a1;
}

uint64_t sub_2379E9FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  return a1;
}

uint64_t sub_2379EA034(uint64_t a1, uint64_t a2)
{
  __swift_memcpy53_8(a2, a1);
  return a2;
}

uint64_t ImageGroupConfiguration.description.getter()
{
  _BYTE *v0;
  uint64_t v1;
  unint64_t v2;

  if (*v0 != 56)
  {
    v1 = InstrumentDataIdentifier.rawValue.getter();
    sub_237A7FE88(v1, v2);
    swift_bridgeObjectRelease();
  }
  sub_237A878E4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ImageGroupConfiguration.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = sub_237918B28(v1, (void (*)(__int128 *__return_ptr, __int128 *))sub_23791A168);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v2;
}

uint64_t ImageGroupConfiguration.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  id v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t (*v34)(void *, uint64_t, __int128 *, uint64_t, uint64_t);
  uint64_t v35;
  int v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  void *v40;
  __int128 v42;
  __int128 v43;
  _QWORD v44[5];
  void (*v45)(_QWORD *, uint64_t);

  v2 = *(_QWORD *)(v1 + 8);
  v37 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v38 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v32 = v2;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v7 << 6);
      goto LABEL_25;
    }
    if (__OFADD__(v7++, 1))
      break;
    if (v7 >= v38)
      return swift_release();
    v13 = *(_QWORD *)(v37 + 8 * v7);
    if (!v13)
    {
      v14 = v7 + 1;
      if (v7 + 1 >= v38)
        return swift_release();
      v13 = *(_QWORD *)(v37 + 8 * v14);
      if (!v13)
      {
        v14 = v7 + 2;
        if (v7 + 2 >= v38)
          return swift_release();
        v13 = *(_QWORD *)(v37 + 8 * v14);
        if (!v13)
        {
          v14 = v7 + 3;
          if (v7 + 3 >= v38)
            return swift_release();
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v7 + 4;
            if (v7 + 4 >= v38)
              return swift_release();
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v7 + 5;
              if (v7 + 5 >= v38)
                return swift_release();
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v7 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_40;
                  if (v7 >= v38)
                    return swift_release();
                  v13 = *(_QWORD *)(v37 + 8 * v7);
                  ++v14;
                  if (v13)
                    goto LABEL_24;
                }
              }
            }
          }
        }
      }
      v7 = v14;
    }
LABEL_24:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    v18 = sub_2379EA958(v44, v16, v17);
    if (*(_QWORD *)(v19 + 48))
    {
      v20 = v19;
      v45 = (void (*)(_QWORD *, uint64_t))v18;
      v21 = a1[3];
      v22 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v21);
      *(_QWORD *)&v42 = *(_QWORD *)(v20 + 40);
      if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v22 + 24))(&v42, v21, v22) & 1) != 0)
      {
        v23 = *(_QWORD *)(v20 + 8);
        v40 = *(void **)v20;
        v25 = *(void **)(v20 + 16);
        v24 = *(_QWORD *)(v20 + 24);
        v36 = *(char *)(v20 + 32);
        if (v36 < 0)
        {
          *(_QWORD *)&v42 = *(_QWORD *)v20;
          *((_QWORD *)&v42 + 1) = v23;
          *(_QWORD *)&v43 = v25;
          *((_QWORD *)&v43 + 1) = v24;
          v8 = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          ImageAsset.LocalizedImage.restore(from:)(a1);
          if (v39)
          {
            v31 = (void *)v42;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_38;
          }
          sub_2378702E0(v40, v23, v25, v24, v36);
          v9 = v43;
          *(_OWORD *)v20 = v42;
          *(_OWORD *)(v20 + 16) = v9;
          *(_BYTE *)(v20 + 32) = 0x80;
        }
        else
        {
          v35 = a1[3];
          v26 = *(void **)(v20 + 16);
          v27 = a1[4];
          __swift_project_boxed_opaque_existential_2Tm(a1, v35);
          LOBYTE(v42) = 0;
          v34 = *(uint64_t (**)(void *, uint64_t, __int128 *, uint64_t, uint64_t))(v27 + 8);
          v33 = v26;
          v28 = v26;
          swift_bridgeObjectRetain();
          v29 = v34(v40, v23, &v42, v35, v27);
          if (v39)
          {
            sub_2378702E0(v40, v23, v33, v24, v36);
LABEL_38:
            v45(v44, 1);
            swift_release();
            return swift_bridgeObjectRelease();
          }
          v30 = v29;

          sub_2378702E0(v40, v23, v33, v24, v36);
          *(_QWORD *)v20 = v40;
          *(_QWORD *)(v20 + 8) = v23;
          *(_QWORD *)(v20 + 16) = v30;
          *(_QWORD *)(v20 + 24) = v24;
          *(_BYTE *)(v20 + 32) = v36 & 1;
          v2 = v32;
        }
      }
      v45(v44, 0);
    }
    else
    {
      ((void (*)(_QWORD *, _QWORD))v18)(v44, 0);
    }
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

unint64_t ImageGroupConfiguration.InstrumentDataTransformationType.description.getter()
{
  return 0xD000000000000019;
}

uint64_t ImageGroupConfiguration.InstrumentDataTransformationType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t ImageGroupConfiguration.InstrumentDataTransformationType.rawValue.getter()
{
  return 1;
}

_QWORD *sub_2379EA584@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

uint64_t sub_2379EA598()
{
  sub_2379EC500();
  return sub_237A87A40();
}

uint64_t sub_2379EA5F4()
{
  sub_2379EC500();
  return sub_237A879F8();
}

uint64_t sub_2379EA640()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2379EA680()
{
  return sub_237A885E0();
}

uint64_t sub_2379EA6A4()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

void ImageGroupConfiguration.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ImageGroupConfiguration.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.dataIdentifier.modify())()
{
  return nullsub_1;
}

void ImageGroupConfiguration.criticalStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *ImageGroupConfiguration.criticalStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.criticalStateDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageGroupConfiguration.states.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ImageGroupConfiguration.states.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.defaultState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageGroupConfiguration.defaultState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ImageGroupConfiguration.defaultState.modify())()
{
  return nullsub_1;
}

uint64_t ImageGroupConfiguration.redactedState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageGroupConfiguration.redactedState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ImageGroupConfiguration.redactedState.modify())()
{
  return nullsub_1;
}

void ImageGroupConfiguration.dataTransformationType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *ImageGroupConfiguration.dataTransformationType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ImageGroupConfiguration.dataTransformationType.modify())()
{
  return nullsub_1;
}

_BYTE *ImageGroupConfiguration.init(dataIdentifier:criticalStateDataIdentifier:states:defaultState:redactedState:dataTransformationType:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  char v10;

  v9 = *a2;
  v10 = *a8;
  *(_BYTE *)a9 = *result;
  *(_BYTE *)(a9 + 1) = v9;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_BYTE *)(a9 + 48) = v10;
  return result;
}

uint64_t sub_2379EA8A0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  sub_237870090(*(void **)a1, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  sub_2378702E0(v1, v3, v4, v5, v6);
  return swift_bridgeObjectRelease();
}

void (*sub_2379EA958(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_2379EB4FC(v6, a2, a3);
  return sub_2379EA9C4;
}

void sub_2379EA9C4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t ImageGroupConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *(unsigned __int8 *)(v1 + 1);
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(unsigned __int8 *)(v1 + 48);
  if (*(_BYTE *)v1 == 56)
  {
    sub_237A885EC();
    if (v3 != 56)
    {
LABEL_3:
      sub_237A885EC();
      InstrumentDataIdentifier.rawValue.getter();
      sub_237A87710();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_237A885EC();
    InstrumentDataIdentifier.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
    if (v3 != 56)
      goto LABEL_3;
  }
  sub_237A885EC();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_237878C80(a1, v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_8;
LABEL_11:
    sub_237A885EC();
    if (v7)
      return sub_237A885EC();
    goto LABEL_12;
  }
  sub_237A885EC();
  if (!v6)
    goto LABEL_11;
LABEL_8:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (v7)
    return sub_237A885EC();
LABEL_12:
  sub_237A885EC();
  return sub_237A885E0();
}

uint64_t sub_2379EABC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379EAC00 + 4 * byte_237AA2300[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

unint64_t sub_2379EAC00()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2379EAC20()
{
  return 0x736574617473;
}

uint64_t sub_2379EAC34()
{
  return 0x53746C7561666564;
}

uint64_t sub_2379EAC54()
{
  return 0x6465746361646572;
}

unint64_t sub_2379EAC78()
{
  return 0xD000000000000016;
}

uint64_t sub_2379EAC94()
{
  unsigned __int8 *v0;

  return sub_2379EABC0(*v0);
}

uint64_t sub_2379EAC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379EC230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379EACC0()
{
  sub_2379EBB8C();
  return sub_237A88718();
}

uint64_t sub_2379EACE8()
{
  sub_2379EBB8C();
  return sub_237A88724();
}

uint64_t ImageGroupConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826CB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v21 = v1[1];
  v9 = *((_QWORD *)v1 + 1);
  v18 = *((_QWORD *)v1 + 2);
  v19 = v9;
  v10 = *((_QWORD *)v1 + 3);
  v15 = *((_QWORD *)v1 + 4);
  v16 = *((_QWORD *)v1 + 5);
  v17 = v10;
  v14 = v1[48];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379EBB8C();
  sub_237A886B8();
  LOBYTE(v20) = v8;
  v22 = 0;
  sub_237888154();
  sub_237A88268();
  if (!v2)
  {
    v11 = v19;
    LOBYTE(v20) = v21;
    v22 = 1;
    sub_237A88268();
    v20 = v11;
    v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826CC0);
    sub_2379EBC58(&qword_256826CC8, (uint64_t (*)(void))sub_2379EBBD0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
    LOBYTE(v20) = 3;
    sub_237A8822C();
    LOBYTE(v20) = 4;
    sub_237A8822C();
    LOBYTE(v20) = v14;
    v22 = 5;
    sub_2379EBC14();
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ImageGroupConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  _WORD v5[40];
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  v6 = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v3;
  v9 = v2;
  sub_237A885D4();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

uint64_t ImageGroupConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  int v27;
  uint64_t v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826CE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379EBB8C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v30 = 0;
    sub_237888198();
    sub_237A881A8();
    v9 = v28;
    v30 = 1;
    sub_237A881A8();
    v10 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826CC0);
    v30 = 2;
    sub_2379EBC58(&qword_256826CE8, (uint64_t (*)(void))sub_2379EBCCC, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    v27 = v10;
    v29 = v9;
    v12 = v28;
    LOBYTE(v28) = 3;
    swift_bridgeObjectRetain();
    v13 = sub_237A8816C();
    v15 = v14;
    v25 = v13;
    v26 = a2;
    LOBYTE(v28) = 4;
    swift_bridgeObjectRetain();
    v16 = sub_237A8816C();
    v18 = v17;
    v24 = v16;
    v30 = 5;
    sub_2379EBD10();
    swift_bridgeObjectRetain();
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = v28;
    v20 = v26;
    *v26 = v29;
    v20[1] = v27;
    v21 = v25;
    *((_QWORD *)v20 + 1) = v12;
    *((_QWORD *)v20 + 2) = v21;
    v22 = v24;
    *((_QWORD *)v20 + 3) = v15;
    *((_QWORD *)v20 + 4) = v22;
    *((_QWORD *)v20 + 5) = v18;
    v20[48] = v19;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379EB370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = sub_237918B28(v1, (void (*)(__int128 *__return_ptr, __int128 *))sub_23791A168);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v2;
}

uint64_t sub_2379EB3F4(_QWORD *a1)
{
  return ImageGroupConfiguration.restoreAssets(from:)(a1);
}

uint64_t sub_2379EB408@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ImageGroupConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379EB41C(_QWORD *a1)
{
  return ImageGroupConfiguration.encode(to:)(a1);
}

uint64_t sub_2379EB430()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  _WORD v5[40];
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  v6 = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v3;
  v9 = v2;
  sub_237A885D4();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

uint64_t sub_2379EB498()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  _WORD v5[40];
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 48);
  v5[36] = *(_WORD *)v0;
  v6 = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v3;
  v9 = v2;
  sub_237A885D4();
  ImageGroupConfiguration.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

void (*sub_2379EB4FC(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2379EB784(v6);
  v6[10] = sub_2379EB5DC(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_2379EB58C;
}

void sub_2379EB58C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_2379EB5DC(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  void (*result)(uint64_t *);

  v5 = v4;
  v10 = malloc(0x60uLL);
  *a1 = v10;
  v10[9] = a3;
  v10[10] = v5;
  v10[8] = a2;
  v11 = *v5;
  v13 = sub_2378D2DB8(a2, a3);
  *((_BYTE *)v10 + 57) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[11] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v5 + 56) + (v13 << 6);
        v20 = *(_OWORD *)v19;
        v21 = *(_OWORD *)(v19 + 16);
        v22 = *(unsigned __int8 *)(v19 + 32);
        v23 = *(_QWORD *)(v19 + 40);
        v24 = *(_QWORD *)(v19 + 48);
        v25 = *(_BYTE *)(v19 + 56);
LABEL_12:
        *(_OWORD *)v10 = v20;
        *((_OWORD *)v10 + 1) = v21;
        v10[4] = v22;
        v10[5] = v23;
        v10[6] = v24;
        *((_BYTE *)v10 + 56) = v25;
        return sub_2379EB738;
      }
LABEL_11:
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v20 = 0uLL;
      v21 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_2378C60A8();
      goto LABEL_7;
    }
    sub_2378CB0E0(v16, a4 & 1);
    v26 = sub_2378D2DB8(a2, a3);
    if ((v17 & 1) == (v27 & 1))
    {
      v13 = v26;
      v10[11] = v26;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t *))sub_237A8858C();
  __break(1u);
  return result;
}

void sub_2379EB738(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_2379EB7B0(*a1, *(_BYTE *)(*a1 + 57), *(uint64_t **)(*a1 + 80), *(_QWORD *)(*a1 + 88), *(_QWORD *)(*a1 + 64), *(_QWORD *)(*a1 + 72));
  sub_2379EC544(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  free((void *)v1);
}

uint64_t (*sub_2379EB784(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2379EB7A4;
}

uint64_t sub_2379EB7A4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

void *sub_2379EB7B0(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  _BYTE v21[25];

  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  if (v14)
  {
    *(_QWORD *)&v19 = *(_QWORD *)a1;
    *((_QWORD *)&v19 + 1) = v9;
    *(_QWORD *)&v20 = v10;
    *((_QWORD *)&v20 + 1) = v11;
    v21[0] = v12;
    *(_QWORD *)&v21[8] = v13;
    *(_QWORD *)&v21[16] = v14;
    v21[24] = v15;
    if ((a2 & 1) != 0)
    {
      v16 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + (a4 << 6));
      v17 = v20;
      *v16 = v19;
      v16[1] = v17;
      v16[2] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v16 + 41) = *(_OWORD *)&v21[9];
    }
    else
    {
      sub_2378CD2C0(a4, a5, a6, &v19, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_237904CB4(a4, *a3);
  }
  return sub_2379EC570(v8, v9, v10, v11, v12, v13, v14);
}

uint64_t _s14CarPlayAssetUI23ImageGroupConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  v7 = *a2;
  v8 = a2[1];
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 5);
  v11 = a2[48];
  if (*(_BYTE *)a1 == 56)
  {
    v32 = *((_QWORD *)a2 + 2);
    v33 = *(_QWORD *)(a1 + 16);
    v34 = *((_QWORD *)a2 + 3);
    v35 = *(_QWORD *)(a1 + 24);
    v31 = *((_QWORD *)a2 + 4);
    if (v7 != 56)
      return 0;
  }
  else
  {
    if (v7 == 56)
      return 0;
    v32 = *((_QWORD *)a2 + 2);
    v33 = *(_QWORD *)(a1 + 16);
    v34 = *((_QWORD *)a2 + 3);
    v35 = *(_QWORD *)(a1 + 24);
    v29 = *(_QWORD *)(a1 + 40);
    v31 = *((_QWORD *)a2 + 4);
    v12 = *(_QWORD *)(a1 + 32);
    v13 = a2[48];
    v14 = InstrumentDataIdentifier.rawValue.getter();
    v16 = v15;
    if (v14 == InstrumentDataIdentifier.rawValue.getter() && v16 == v17)
    {
      swift_bridgeObjectRelease_n();
      v11 = v13;
      v4 = v12;
      v5 = v29;
    }
    else
    {
      v18 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v11 = v13;
      v4 = v12;
      v5 = v29;
      if ((v18 & 1) == 0)
        return result;
    }
  }
  if (v2 == 56)
  {
    if (v8 != 56)
      return 0;
  }
  else
  {
    if (v8 == 56)
      return 0;
    v30 = v5;
    v20 = v4;
    v21 = v11;
    v22 = InstrumentDataIdentifier.rawValue.getter();
    v24 = v23;
    if (v22 == InstrumentDataIdentifier.rawValue.getter() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
      v11 = v21;
      v4 = v20;
      v5 = v30;
    }
    else
    {
      v26 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v11 = v21;
      v4 = v20;
      v5 = v30;
      if ((v26 & 1) == 0)
        return result;
    }
  }
  if ((sub_2379B82A8(v3, v9) & 1) == 0)
    return 0;
  if (!v35)
  {
    if (v34)
      return 0;
LABEL_25:
    if (v5)
    {
      if (!v10)
        return 0;
      if (v4 != v31 || v5 != v10)
      {
        v28 = sub_237A8840C();
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if ((v6 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        return 1;
    }
    else if ((v11 & 1) == 0)
    {
      return 1;
    }
    return 0;
  }
  if (!v34)
    return 0;
  if (v33 == v32 && v35 == v34)
    goto LABEL_25;
  v27 = sub_237A8840C();
  result = 0;
  if ((v27 & 1) != 0)
    goto LABEL_25;
  return result;
}

unint64_t sub_2379EBB8C()
{
  unint64_t result;

  result = qword_256826CB8;
  if (!qword_256826CB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA261C, &type metadata for ImageGroupConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826CB8);
  }
  return result;
}

unint64_t sub_2379EBBD0()
{
  unint64_t result;

  result = qword_256826CD0;
  if (!qword_256826CD0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.ConfigurableInputState, &type metadata for Instrument.ConfigurableInputState);
    atomic_store(result, (unint64_t *)&qword_256826CD0);
  }
  return result;
}

unint64_t sub_2379EBC14()
{
  unint64_t result;

  result = qword_256826CD8;
  if (!qword_256826CD8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration.InstrumentDataTransformationType, &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType);
    atomic_store(result, (unint64_t *)&qword_256826CD8);
  }
  return result;
}

uint64_t sub_2379EBC58(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826CC0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379EBCCC()
{
  unint64_t result;

  result = qword_256826CF0;
  if (!qword_256826CF0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.ConfigurableInputState, &type metadata for Instrument.ConfigurableInputState);
    atomic_store(result, (unint64_t *)&qword_256826CF0);
  }
  return result;
}

unint64_t sub_2379EBD10()
{
  unint64_t result;

  result = qword_256826CF8;
  if (!qword_256826CF8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration.InstrumentDataTransformationType, &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType);
    atomic_store(result, (unint64_t *)&qword_256826CF8);
  }
  return result;
}

unint64_t sub_2379EBD58()
{
  unint64_t result;

  result = qword_256826D00;
  if (!qword_256826D00)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration.InstrumentDataTransformationType, &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType);
    atomic_store(result, (unint64_t *)&qword_256826D00);
  }
  return result;
}

unint64_t sub_2379EBDA0()
{
  unint64_t result;

  result = qword_256826D08;
  if (!qword_256826D08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration, &type metadata for ImageGroupConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826D08);
  }
  return result;
}

uint64_t initializeWithCopy for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ImageGroupConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGroupConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageGroupConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration()
{
  return &type metadata for ImageGroupConfiguration;
}

uint64_t storeEnumTagSinglePayload for ImageGroupConfiguration.InstrumentDataTransformationType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2379EC030 + 4 * byte_237AA2306[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2379EC050 + 4 * byte_237AA230B[v4]))();
}

_BYTE *sub_2379EC030(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2379EC050(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379EC058(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379EC060(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379EC068(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379EC070(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration.InstrumentDataTransformationType()
{
  return &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType;
}

uint64_t storeEnumTagSinglePayload for ImageGroupConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2379EC0D8 + 4 * byte_237AA2315[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2379EC10C + 4 * byte_237AA2310[v4]))();
}

uint64_t sub_2379EC10C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379EC114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379EC11CLL);
  return result;
}

uint64_t sub_2379EC128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379EC130);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2379EC134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379EC13C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageGroupConfiguration.CodingKeys()
{
  return &type metadata for ImageGroupConfiguration.CodingKeys;
}

unint64_t sub_2379EC15C()
{
  unint64_t result;

  result = qword_256826D10;
  if (!qword_256826D10)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA25F4, &type metadata for ImageGroupConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826D10);
  }
  return result;
}

unint64_t sub_2379EC1A4()
{
  unint64_t result;

  result = qword_256826D18;
  if (!qword_256826D18)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2564, &type metadata for ImageGroupConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826D18);
  }
  return result;
}

unint64_t sub_2379EC1EC()
{
  unint64_t result;

  result = qword_256826D20;
  if (!qword_256826D20)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA258C, &type metadata for ImageGroupConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826D20);
  }
  return result;
}

uint64_t sub_2379EC230(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AB2100 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53746C7561666564 && a2 == 0xEC00000065746174 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465746361646572 && a2 == 0xED00006574617453 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB2120)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_2379EC500()
{
  unint64_t result;

  result = qword_256826D28[0];
  if (!qword_256826D28[0])
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ImageGroupConfiguration.InstrumentDataTransformationType, &type metadata for ImageGroupConfiguration.InstrumentDataTransformationType);
    atomic_store(result, qword_256826D28);
  }
  return result;
}

void *sub_2379EC544(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    sub_2378702E0(result, a2, a3, a4, a5);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_2379EC570(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    sub_237870090(result, a2, a3, a4, a5);
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t (*SlotViewBuilder.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(uint64_t a1)@<X8>))(uint64_t a1)
{
  uint64_t (*result)(uint64_t);

  result = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)result + 2) = a3;
  *((_QWORD *)result + 3) = a4;
  *((_QWORD *)result + 4) = a1;
  *((_QWORD *)result + 5) = a2;
  *a5 = sub_2379EC698;
  a5[1] = result;
  return result;
}

uint64_t sub_2379EC600(uint64_t a1)
{
  __n128 v1;
  void (*v2)(__n128);

  v1 = MEMORY[0x24BDAC7A8](a1);
  v2(v1);
  return sub_237A873C8();
}

uint64_t sub_2379EC674()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379EC698(uint64_t a1)
{
  return sub_2379EC600(a1);
}

ValueMetadata *type metadata accessor for SlotViewBuilder()
{
  return &type metadata for SlotViewBuilder;
}

uint64_t sub_2379EC6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_237A86D38();
  v5 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_237A86D44();
}

uint64_t sub_2379EC778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  v5 = sub_237A86D38();
  v6 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_237A86D44();
}

uint64_t Angle.description.getter()
{
  sub_237A87BA8();
  sub_237A878E4();
  sub_237A87BA8();
  sub_237A878E4();
  return 0;
}

uint64_t sub_2379EC8E8()
{
  sub_237A87BA8();
  sub_237A878E4();
  sub_237A87BA8();
  sub_237A878E4();
  return 0;
}

uint64_t IdentifiableIndices.Element.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_2379ECA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a6, a1, AssociatedTypeWitness);
  v13 = a6 + *(int *)(type metadata accessor for IdentifiableIndices.Element(0, a3, a4, a5) + 44);
  v14 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
}

uint64_t IdentifiableIndices.startIndex.getter(uint64_t a1)
{
  return sub_2379ECB28(a1, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE18A0]);
}

uint64_t IdentifiableIndices.endIndex.getter(uint64_t a1)
{
  return sub_2379ECB28(a1, MEMORY[0x24BEE1910]);
}

uint64_t sub_2379ECB28(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8));
}

uint64_t IdentifiableIndices.subscript.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[32];

  v23 = a3;
  v5 = a2[2];
  v22 = a2[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v19 - v7;
  v9 = a2[4];
  swift_getAssociatedTypeWitness();
  v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - v11;
  v13 = swift_checkMetadataState();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v19 - v15;
  v17 = (void (*)(_BYTE *, _QWORD))sub_237A87CC8();
  (*(void (**)(char *))(v14 + 16))(v16);
  v17(v24, 0);
  sub_237A87F68();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v8, a1, v21);
  return sub_2379ECA18((uint64_t)v12, (uint64_t)v8, v5, v22, v9, v23);
}

uint64_t IdentifiableIndices.index(before:)()
{
  return sub_237A87734();
}

uint64_t IdentifiableIndices.index(after:)()
{
  return sub_237A87C50();
}

uint64_t sub_2379ECD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a3);
  return sub_237A8774C();
}

uint64_t sub_2379ECDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a3);
  return sub_237A87758();
}

uint64_t sub_2379ECDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379ED04C(a1, a2, a3, (void (*)(uint64_t, uint64_t, __n128))IdentifiableIndices.index(before:));
}

uint64_t sub_2379ECE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a4);
  return sub_237A87C2C();
}

void (*sub_2379ECE70(uint64_t **a1, uint64_t a2, _QWORD *a3))(_QWORD *a1)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2379ECECC(v6, a2, a3);
  return sub_2378B9D94;
}

void (*sub_2379ECECC(uint64_t *a1, uint64_t a2, _QWORD *a3))(_QWORD *a1)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for IdentifiableIndices.Element(0, a3[2], a3[3], a3[4]);
  *a1 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  IdentifiableIndices.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_2379ECF48;
}

void sub_2379ECF48(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_2379ECF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_237A87E0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_2379ECFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379F01B8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E0]);
}

uint64_t sub_2379ED014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379F01B8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE08B8], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

uint64_t sub_2379ED040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379ED04C(a1, a2, a3, (void (*)(uint64_t, uint64_t, __n128))IdentifiableIndices.index(after:));
}

uint64_t sub_2379ED04C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, __n128))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v13 - v10;
  a4(a1, a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, AssociatedTypeWitness);
}

uint64_t sub_2379ED110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v13 - v8;
  v10 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(a2, v2, a1, v7);
  IdentifiableIndices.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, a1);
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a1);
  v11 = sub_237A8807C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v11 + 36), v9, AssociatedTypeWitness);
}

uint64_t sub_2379ED208(uint64_t a1)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a1);
  return sub_237A87C74();
}

uint64_t sub_2379ED23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, a1);
  v4 = sub_2379F0364(v1, a1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v4;
}

uint64_t sub_2379ED2A0()
{
  return sub_237A87998();
}

uint64_t RandomAccessCollection<>.identifiableIndices.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t ForEach<>.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24[1] = a4;
  v25 = a2;
  v26 = a3;
  v27 = a1;
  v28 = a9;
  v16 = type metadata accessor for IdentifiableIndices(0, a6, a8, a10);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))((char *)v24 - v19, a1, v16, v18);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = a7;
  v20[6] = a8;
  v20[7] = a10;
  v21 = v26;
  v20[8] = v25;
  v20[9] = v21;
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, v16);
  v22 = type metadata accessor for IdentifiableIndices.Element(255, a6, a8, a10);
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>.Element, v22);
  sub_237A87410();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v27, v16);
}

uint64_t type metadata accessor for IdentifiableIndices(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IdentifiableIndices);
}

uint64_t sub_2379ED4B8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - v12;
  v17 = type metadata accessor for IdentifiableIndices.Element(0, v15, v16, v14);
  a2(a1 + *(int *)(v17 + 44));
  sub_23799E408((uint64_t)v10, a3, (uint64_t)v13);
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, a3);
  sub_237991B00((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, a3);
}

uint64_t sub_2379ED5BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379ED5E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2379ED4B8(a1, *(void (**)(uint64_t))(v2 + 64), *(_QWORD *)(v2 + 24), a2);
}

uint64_t type metadata accessor for IdentifiableIndices.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IdentifiableIndices.Element);
}

uint64_t ForEach<>.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  return sub_2379EDB0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&unk_25097CEF0, (uint64_t)sub_2379EDAC8);
}

{
  return sub_2379EDB0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&unk_25097CF18, (uint64_t)sub_2379EE2E8);
}

uint64_t sub_2379ED654@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  void (*v60)(char *, uint64_t, uint64_t, __n128);
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t AssociatedTypeWitness;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v69 = a5;
  v78 = a4;
  v74 = a3;
  v75 = a2;
  v80 = a1;
  v76 = a9;
  v81 = a10;
  v82 = a8;
  v66 = a11;
  v67 = a12;
  v61 = type metadata accessor for IdentifiableIndices.Element(0, a7, a11, a12);
  v77 = *(_QWORD *)(v61 - 8);
  v14 = *(_QWORD *)(v77 + 64);
  MEMORY[0x24BDAC7A8](v61);
  v71 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v52 - v16;
  v58 = (char *)&v52 - v16;
  v79 = a7;
  v18 = sub_237A873F8();
  v19 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64);
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v62 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v52 - v22;
  v57 = (char *)&v52 - v22;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v73 = sub_237A873F8();
  v70 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v64 = (char *)&v52 - v24;
  v72 = *(_QWORD *)(a6 - 8);
  v25 = a6;
  v55 = a6;
  MEMORY[0x24BDAC7A8](v26);
  v63 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v65 = (uint64_t)&v52 - v30;
  v53 = v20;
  v60 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  v60(v23, v78, v18, v29);
  v31 = v77;
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v32 = v17;
  v33 = v61;
  v59(v32, v80, v61);
  v34 = (*(unsigned __int8 *)(v20 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v35 = (v19 + v34 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v56 = v35 + v14;
  v54 = v35;
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v37 = v69;
  v36[4] = v69;
  v36[5] = v25;
  v38 = v82;
  v36[6] = v79;
  v36[7] = v38;
  v39 = v66;
  v40 = v67;
  v36[8] = v81;
  v36[9] = v39;
  v36[10] = v40;
  v53 = *(_QWORD *)(v53 + 32);
  v52 = v18;
  ((void (*)(char *, char *, uint64_t))v53)((char *)v36 + v34, v57, v18);
  v77 = *(_QWORD *)(v77 + 32);
  ((void (*)(char *, char *, uint64_t))v77)((char *)v36 + v35, v58, v33);
  v41 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v60)(v62, v78, v18);
  v42 = v71;
  v59(v71, v80, v33);
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = 0;
  v43[3] = 0;
  v44 = v55;
  v43[4] = v37;
  v43[5] = v44;
  v45 = v82;
  v43[6] = v79;
  v43[7] = v45;
  v43[8] = v81;
  v43[9] = v39;
  v43[10] = v40;
  ((void (*)(char *, char *, uint64_t))v53)((char *)v43 + v34, v41, v52);
  ((void (*)(char *, char *, uint64_t))v77)((char *)v43 + v54, v42, v33);
  v46 = v64;
  sub_237A873EC();
  v47 = (uint64_t)v63;
  v75(v46);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v73);
  v48 = v65;
  v49 = v47;
  sub_23799E408(v47, v44, v65);
  v50 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v50(v49, v44);
  sub_237991B00(v48, v44, v76);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v48, v44);
}

uint64_t sub_2379EDAC8(uint64_t a1)
{
  return sub_2379EE2F4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_2379ED654);
}

uint64_t sub_2379EDB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v50 = a3;
  v51 = a8;
  v48 = a2;
  v49 = a7;
  v46 = a4;
  v47 = a5;
  v52 = a9;
  v53 = a13;
  v45 = a12;
  v40 = a11;
  v41 = a10;
  v15 = sub_237A873F8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - v17;
  v38 = (char *)&v38 - v17;
  v44 = type metadata accessor for IdentifiableIndices(0, a6, a10, a11);
  MEMORY[0x24BDAC7A8](v44);
  v20 = (char *)&v38 - v19;
  v43 = (char *)&v38 - v19;
  v21 = *(_QWORD *)(a6 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1;
  MEMORY[0x23B81E034](v15, v23);
  RandomAccessCollection<>.identifiableIndices.getter(a6, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v25, a6);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v27 = v18;
  v28 = v15;
  v39 = v15;
  v26(v27, a1, v15);
  v29 = (*(unsigned __int8 *)(v16 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v30 = (char *)swift_allocObject();
  v31 = v47;
  *((_QWORD *)v30 + 2) = v46;
  *((_QWORD *)v30 + 3) = v31;
  v32 = v49;
  *((_QWORD *)v30 + 4) = a6;
  *((_QWORD *)v30 + 5) = v32;
  v34 = v40;
  v33 = v41;
  *((_QWORD *)v30 + 6) = v51;
  *((_QWORD *)v30 + 7) = v33;
  v35 = v48;
  *((_QWORD *)v30 + 8) = v34;
  *((_QWORD *)v30 + 9) = v35;
  *((_QWORD *)v30 + 10) = v50;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v30[v29], v38, v28);
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>, v44);
  v36 = type metadata accessor for IdentifiableIndices.Element(255, a6, v33, v34);
  MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>.Element, v36);
  sub_237A87410();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v42, v39);
}

uint64_t sub_2379EDD54@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  _QWORD v62[3];
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t AssociatedTypeWitness;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v91 = a5;
  v92 = a8;
  v82 = a3;
  v83 = a2;
  v87 = a1;
  v84 = a9;
  v88 = a10;
  v89 = a4;
  v90 = a11;
  v77 = a12;
  v14 = type metadata accessor for IdentifiableIndices.Element(0, a7, a11, a12);
  v69 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v69 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v80 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v67 = (char *)v62 - v17;
  v18 = sub_237A873F8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v62 - v22;
  v63 = (char *)v62 - v22;
  v66 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = sub_237A873F8();
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v75 = (char *)v62 - v24;
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v71 = v25;
  v72 = v26;
  MEMORY[0x24BDAC7A8](v25);
  v68 = (char *)v62 - v27;
  v76 = *(_QWORD *)(a6 - 8);
  v86 = a6;
  MEMORY[0x24BDAC7A8]((char *)v62 - v27);
  v70 = (char *)v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v73 = (uint64_t)v62 - v31;
  v32 = v14;
  v85 = v14;
  v33 = v87;
  (*(void (**)(__n128))(v34 + 16))(v30);
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v65(v23, v89, v18);
  v35 = v69;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v36 = v67;
  v64(v67, v33, v32);
  v37 = *(unsigned __int8 *)(v19 + 80);
  v38 = (v37 + 88) & ~v37;
  v39 = *(unsigned __int8 *)(v35 + 80);
  v40 = (v20 + v38 + v39) & ~v39;
  v62[2] = v40 + v15;
  v62[1] = v37 | v39 | 7;
  v41 = (char *)swift_allocObject();
  *((_QWORD *)v41 + 2) = 0;
  *((_QWORD *)v41 + 3) = 0;
  *((_QWORD *)v41 + 4) = v91;
  *((_QWORD *)v41 + 5) = a6;
  v42 = v66;
  v43 = v92;
  *((_QWORD *)v41 + 6) = v66;
  *((_QWORD *)v41 + 7) = v43;
  v44 = v90;
  *((_QWORD *)v41 + 8) = v88;
  *((_QWORD *)v41 + 9) = v44;
  v45 = v77;
  *((_QWORD *)v41 + 10) = v77;
  v46 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v62[0] = v18;
  v46(&v41[v38], v63, v18);
  v47 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v48 = v85;
  v47(&v41[v40], v36, v85);
  v49 = v74;
  v65(v74, v89, v18);
  v50 = v80;
  v64(v80, v87, v48);
  v51 = (char *)swift_allocObject();
  *((_QWORD *)v51 + 2) = 0;
  *((_QWORD *)v51 + 3) = 0;
  v52 = v86;
  *((_QWORD *)v51 + 4) = v91;
  *((_QWORD *)v51 + 5) = v52;
  *((_QWORD *)v51 + 6) = v42;
  v53 = v88;
  *((_QWORD *)v51 + 7) = v92;
  *((_QWORD *)v51 + 8) = v53;
  *((_QWORD *)v51 + 9) = v90;
  *((_QWORD *)v51 + 10) = v45;
  v46(&v51[v38], v49, v62[0]);
  v47(&v51[v40], v50, v85);
  v54 = v75;
  sub_237A873EC();
  v55 = (uint64_t)v70;
  v56 = v68;
  v83(v68, v54);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v81);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v56, v71);
  v57 = v73;
  v58 = v55;
  v59 = v86;
  sub_23799E408(v55, v86, v73);
  v60 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v60(v58, v59);
  sub_237991B00(v57, v59, v84);
  return ((uint64_t (*)(uint64_t, uint64_t))v60)(v57, v59);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_237A873F8();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 88) & ~v3;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v2 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_2379EE2E8(uint64_t a1)
{
  return sub_2379EE2F4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_2379EDD54);
}

uint64_t sub_2379EE2F4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v12 = *(_OWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_237A873F8() - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), v2 + ((v10 + 88) & ~v10), v5, v6, v7, v8, v12, *((_QWORD *)&v12 + 1), v9);
}

uint64_t sub_2379EE3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  _BYTE v17[32];

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_237A873F8();
  MEMORY[0x23B81E034](v11);
  type metadata accessor for IdentifiableIndices.Element(0, a2, a5, a6);
  v12 = (void (*)(_BYTE *, _QWORD))sub_237A87CC8();
  v14 = v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a3, v14, AssociatedTypeWitness);
  v12(v17, 0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, a2);
}

uint64_t sub_2379EE4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a5;
  v25 = a1;
  v26 = a4;
  v23 = a12;
  MEMORY[0x24BDAC7A8](a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)&v23 - v15;
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v23 - v19;
  v21 = type metadata accessor for IdentifiableIndices.Element(0, a8, a11, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v24 + *(int *)(v21 + 44), v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v25, AssociatedTypeWitness);
  sub_237A873F8();
  MEMORY[0x23B81E034]();
  sub_237A877C4();
  return sub_237A873E0();
}

uint64_t Binding.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x23B81E034](v7, v4);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t Binding.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  _BYTE v13[32];

  v4 = *a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x23B81E034](v10, v7);
  v11 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE2B70] + v4 + 8) - 8) + 16))(a3);
  v11(v13, 0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_2379EE7D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a3;
  v5 = sub_237A873F8();
  swift_retain();
  sub_2379F04F0(a1, v4, v5);
  return swift_release();
}

uint64_t Binding.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *a2;
  sub_2379F04F0(a1, (uint64_t)a2, a3);
  swift_release();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE2B70] + v4 + 8) - 8) + 8))(a1);
}

void (*Binding.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  Binding.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_2379EE938;
}

void sub_2379EE938(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  v5 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = (*a1)[1];
  v8 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    swift_retain();
    sub_2379F04F0((uint64_t)v3, v8, v7);
    swift_release();
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
  }
  else
  {
    swift_retain();
    sub_2379F04F0((uint64_t)v4, v8, v7);
    swift_release();
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Binding<A>.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a5;
  v31 = a4;
  v32 = a6;
  v28 = a2;
  v29 = a3;
  v9 = sub_237A873F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v16((char *)&v27 - v14, a1, v9, v13);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = a2;
  *((_QWORD *)v18 + 5) = a3;
  v19 = v31;
  v20 = v34;
  *((_QWORD *)v18 + 6) = v31;
  *((_QWORD *)v18 + 7) = v20;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(&v18[v17], v15, v9);
  v22 = v30;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v30, v33, v9);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  v24 = v29;
  *((_QWORD *)v23 + 4) = v28;
  *((_QWORD *)v23 + 5) = v24;
  v25 = v34;
  *((_QWORD *)v23 + 6) = v19;
  *((_QWORD *)v23 + 7) = v25;
  v21(&v23[v17], v22, v9);
  sub_237A873EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v33, v9);
}

uint64_t sub_2379EEBAC(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  v1 = sub_237A873F8();
  MEMORY[0x23B81E034](v1);
  return sub_237A87644();
}

uint64_t sub_2379EEC58(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, __n128))(v5 + 16))(v2, v4);
  sub_237A87644();
  sub_237A873F8();
  return sub_237A873E0();
}

uint64_t Binding<A>.init(_:skipping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a4;
  v37 = a2;
  v35 = a5;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v33 = *(_QWORD *)(a3 - 8);
  v34 = v7;
  MEMORY[0x24BDAC7A8](a1);
  v31 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A873F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v30 = a1;
  v17((char *)&v28 - v15, a1, v9, v14);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v32 = v10;
  v19 = (v18 + 48) & ~v18;
  v28 = v18 | 7;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  v21 = v36;
  *((_QWORD *)v20 + 4) = a3;
  *((_QWORD *)v20 + 5) = v21;
  v29 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v29(&v20[v19], v16, v9);
  ((void (*)(char *, uint64_t, uint64_t))v17)(v12, a1, v9);
  v22 = v33;
  v23 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, v37, a3);
  v24 = (v19 + v11 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = 0;
  *((_QWORD *)v25 + 3) = 0;
  v26 = v36;
  *((_QWORD *)v25 + 4) = a3;
  *((_QWORD *)v25 + 5) = v26;
  v29(&v25[v19], v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v25[v24], v23, a3);
  sub_237A873EC();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v37, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v30, v9);
}

uint64_t sub_2379EEF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_237A877DC() & 1) != 0)
  {
    v11 = sub_237A873F8();
    MEMORY[0x23B81E034](v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a6);
  }
  sub_237A873F8();
  return sub_237A873E0();
}

uint64_t Binding<A>.skipping(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v15, v4, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  return Binding<A>.init(_:skipping:)((uint64_t)v15, (uint64_t)v11, v8, a3, a4);
}

uint64_t sub_2379EF108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];

  v4 = v3;
  v86 = a1;
  v92 = a3;
  MEMORY[0x23B81FA98](&unk_237AA2A00);
  v6 = sub_237A86D80();
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v90 = sub_237A86D74();
  v9 = sub_237A869B4();
  v77 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v79 = (uint64_t)&v74 - v12;
  v13 = *(_QWORD *)(a2 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_237A87B84();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v74 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v7;
  v21 = sub_237A86C60();
  v93 = v6;
  v94 = v21;
  v22 = sub_237A869B4();
  v75 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v76 = (uint64_t)&v74 - v26;
  v91 = v9;
  v27 = sub_237A86D50();
  v88 = *(_QWORD *)(v27 - 8);
  v89 = v27;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v87 = (char *)&v74 - v29;
  LODWORD(v9) = *(unsigned __int8 *)(v4 + *(int *)(a2 + 44));
  v30 = v4 + *(int *)(a2 + 36);
  v84 = v17;
  v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v82 = v20;
  v31(v20, v30, v8, v28);
  if ((_DWORD)v9 == 1)
  {
    v32 = v4 + *(int *)(a2 + 40);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    v79 = v22;
    v34 = v74;
    v33(v74, v32, v81);
    v35 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v83, v4, a2);
    v36 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v37 = swift_allocObject();
    v38 = v85;
    *(_QWORD *)(v37 + 16) = v8;
    *(_QWORD *)(v37 + 24) = v38;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v37 + v36, v35, a2);
    v39 = v93;
    v40 = MEMORY[0x23B81FA98](MEMORY[0x24BDEFB78], v93);
    v41 = v82;
    sub_237A8711C();
    swift_release();
    v42 = v34;
    v22 = v79;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v81);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v41, v8);
    v43 = MEMORY[0x23B81FA98](MEMORY[0x24BDEECB8], v94);
    v96[0] = v40;
    v96[1] = v43;
    v44 = MEMORY[0x24BDED308];
    MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v22, v96);
    v45 = v76;
    sub_23799E408((uint64_t)v24, v22, v76);
    v46 = *(void (**)(char *, uint64_t))(v75 + 8);
    v46(v24, v22);
    sub_237991B00(v45, v22, (uint64_t)v24);
    v47 = v90;
    v48 = MEMORY[0x23B81FA98](MEMORY[0x24BDEF860], v90);
    v95[0] = v40;
    v95[1] = v48;
    v49 = v44;
    v50 = v91;
    MEMORY[0x23B81FA98](v49, v91, v95);
    v51 = (uint64_t)v87;
    sub_2379EC6B4((uint64_t)v24, v22);
    v46(v24, v22);
    v52 = v45;
    v53 = v22;
  }
  else
  {
    v54 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v83, v4, a2);
    v55 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v56 = swift_allocObject();
    v57 = (uint64_t)v78;
    v58 = v85;
    *(_QWORD *)(v56 + 16) = v8;
    *(_QWORD *)(v56 + 24) = v58;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v56 + v55, v54, a2);
    v59 = MEMORY[0x23B81FA98](MEMORY[0x24BDEFB78], v93);
    v60 = v82;
    sub_237A87170();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v8);
    v47 = v90;
    v61 = MEMORY[0x23B81FA98](MEMORY[0x24BDEF860], v90);
    v101[0] = v59;
    v101[1] = v61;
    v62 = MEMORY[0x24BDED308];
    v50 = v91;
    MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v91, v101);
    v63 = v79;
    sub_23799E408(v57, v50, v79);
    v46 = *(void (**)(char *, uint64_t))(v77 + 8);
    v46((char *)v57, v50);
    sub_237991B00(v63, v50, v57);
    v64 = MEMORY[0x23B81FA98](MEMORY[0x24BDEECB8], v94);
    v100[0] = v59;
    v100[1] = v64;
    MEMORY[0x23B81FA98](v62, v22, v100);
    v51 = (uint64_t)v87;
    sub_2379EC778(v57, v22, v50);
    v65 = v57;
    v39 = v93;
    v46((char *)v65, v50);
    v52 = v63;
    v53 = v50;
  }
  v46((char *)v52, v53);
  v66 = MEMORY[0x23B81FA98](MEMORY[0x24BDEFB78], v39);
  v67 = MEMORY[0x23B81FA98](MEMORY[0x24BDEECB8], v94);
  v99[0] = v66;
  v99[1] = v67;
  v68 = MEMORY[0x24BDED308];
  v69 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v22, v99);
  v70 = MEMORY[0x23B81FA98](MEMORY[0x24BDEF860], v47);
  v98[0] = v66;
  v98[1] = v70;
  v71 = MEMORY[0x23B81FA98](v68, v50, v98);
  v97[0] = v69;
  v97[1] = v71;
  v72 = v89;
  MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v89, v97);
  sub_237991B00(v51, v72, v92);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v51, v72);
}

uint64_t sub_2379EF830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_237A87B6C();
  v3[5] = sub_237A87B60();
  v3[6] = sub_237A87B54();
  v3[7] = v4;
  return swift_task_switch();
}

uint64_t sub_2379EF8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for TaskConditional(0, v4[3], v4[4], a4) + 48));
  v9 = (uint64_t (*)(void))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_2379EF90C;
  return v9();
}

uint64_t sub_2379EF90C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2379EF958(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v22 = a3;
  v23 = a4;
  v5 = type metadata accessor for TaskConditional(0, a3, a4, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC8);
  sub_237A87350();
  if (v25)
  {
    sub_237A87B90();
    swift_release();
  }
  v12 = (char *)a2 + *(int *)(v5 + 40);
  v13 = sub_237A87B84();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  (*(void (**)(char *, __int128 *, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_237A87B6C();
  v15 = sub_237A87B60();
  v16 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = (char *)swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  *((_QWORD *)v17 + 2) = v15;
  *((_QWORD *)v17 + 3) = v18;
  v19 = v23;
  *((_QWORD *)v17 + 4) = v22;
  *((_QWORD *)v17 + 5) = v19;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v17[v16], v8, v5);
  v20 = sub_237A461F0((uint64_t)v11, (uint64_t)&unk_256826ED8, (uint64_t)v17);
  v24 = *a2;
  v25 = v20;
  return sub_237A8735C();
}

uint64_t sub_2379EFB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_237A87B6C();
  v6[5] = sub_237A87B60();
  v6[6] = sub_237A87B54();
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_2379EFBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for TaskConditional(0, v4[3], v4[4], a4) + 48));
  v9 = (uint64_t (*)(void))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_2379EFC38;
  return v9();
}

uint64_t sub_2379EFC38()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2379EFC84()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2379EFCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  __int128 v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256826EE0);
  sub_237A87344();
  *(_OWORD *)a8 = v22;
  v17 = (int *)type metadata accessor for TaskConditional(0, a6, a7, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a8[v17[9]], a1, a6);
  v18 = &a8[v17[10]];
  v19 = sub_237A87B84();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  a8[v17[11]] = a3;
  v21 = &a8[v17[12]];
  *(_QWORD *)v21 = a4;
  *((_QWORD *)v21 + 1) = a5;
  return result;
}

uint64_t View.task<A>(id:priority:runOnAppear:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a8;
  v33 = a9;
  v34 = a6;
  v29 = a2;
  v30 = a5;
  v32 = a4;
  v31 = a3;
  v28 = a1;
  v11 = sub_237A87B84();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TaskConditional(0, a7, a10, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v27 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v28, a7, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v29, v11);
  v25 = v30;
  swift_retain();
  sub_2379EFCB4((uint64_t)v18, (uint64_t)v14, v31, v32, v25, a7, a10, v24);
  MEMORY[0x23B81DDB8](v24, v34, v20, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
}

uint64_t EdgeInsets.hash(into:)()
{
  sub_237A88604();
  sub_237A88604();
  sub_237A88604();
  return sub_237A88604();
}

uint64_t EdgeInsets.hashValue.getter()
{
  sub_237A885D4();
  EdgeInsets.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379F0004()
{
  sub_237A885D4();
  EdgeInsets.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379F0068()
{
  return EdgeInsets.hash(into:)();
}

uint64_t sub_2379F0074()
{
  sub_237A885D4();
  EdgeInsets.hash(into:)();
  return sub_237A88610();
}

double UIEdgeInsets.init(_:layoutDirection:)(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;

  v4 = sub_237A869A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x24BDED118], v4, v6);
  sub_237A8699C();
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(a1, v4);
  v9((uint64_t)v8, v4);
  return a2;
}

uint64_t sub_2379F01B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v22 - v17;
  v19 = sub_237A87788();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v14[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_2379F0368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_237A87D10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_237A87788();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v7, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_237A87788();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_2379F04F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x24BDAC7A8](a1);
  v5 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, __n128))(v6 + 16))((char *)&v9 - v7, v5);
  MEMORY[0x23B81E034](a3);
  swift_setAtWritableKeyPath();
  return sub_237A873E0();
}

uint64_t sub_2379F05D0()
{
  uint64_t v0;

  sub_237A873F8();
  return sub_2379EEBAC(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = sub_237A873F8();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 64) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v2 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_2379F06D8(uint64_t a1)
{
  sub_237A873F8();
  return sub_2379EEC58(a1);
}

uint64_t sub_2379F0744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_237A873F8();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 48) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v2 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_2379F07DC()
{
  sub_237A873F8();
  return MEMORY[0x23B81E034]();
}

uint64_t sub_2379F0820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_237A873F8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v7 = v0 + v4 + *(int *)(v2 + 32);
  v8 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v8(v7, v1);
  v8(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_2379F08E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = v1[4];
  v4 = *(_QWORD *)(sub_237A873F8() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_2379EEF64(a1, v1[2], v1[3], (uint64_t)v1 + v5, (uint64_t)v1 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6), v3);
}

uint64_t type metadata accessor for TaskConditional(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaskConditional);
}

uint64_t sub_2379F0964()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_2379F09C8()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379F09D8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE0668], a1, &v3);
}

uint64_t sub_2379F0A20(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_2379F0A68()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379F0A78(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE0658], a1, &v3);
}

uint64_t sub_2379F0AC0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B81FA98](&protocol conformance descriptor for IdentifiableIndices<A>);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_2379F0B08()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379F0B18()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_2379F0B3C()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379F0B4C()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379F0B5C()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379F0B6C@<X0>(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = *a1;
  v4 = sub_237A873F8();
  return Binding.subscript.getter(v3, v4, a2);
}

uint64_t sub_2379F0BC0()
{
  return 16;
}

__n128 sub_2379F0BCC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2379F0BD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2379F0C44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2379F0CF4 + 4 * byte_237AA2690[(v7 - 1)]))();
}

void sub_2379F0D44(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_2379F0EF4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2379F0FE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (v10 & (unint64_t)~v9) + *(_QWORD *)(v8 + 64) > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    v15 = v7;
    v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v15);
  }
  return a1;
}

uint64_t sub_2379F1128(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_2379F11F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_2379F12D8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_2379F13C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_2379F14A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_2379F1590(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = *(_QWORD *)(v5 + 64) + v11;
  if (a2 <= v10)
    goto LABEL_23;
  v13 = (v12 & ~v11) + *(_QWORD *)(v8 + 64);
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_23:
      if (v10)
      {
        if (v6 >= v9)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v12 + a1) & ~v11, v9, v7);
      }
      return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_23;
LABEL_14:
  v17 = (v15 - 1) << v14;
  if (v13 > 3)
    v17 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v18 = v13;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  return v10 + v17 + 1;
}

void sub_2379F179C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + *(_QWORD *)(v8 + 64);
  if (a3 <= v9)
  {
    v11 = 0;
  }
  else if (v10 <= 3)
  {
    v13 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v11 = 4u;
    }
    else if (v13 >= 0x100)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 > 1;
    }
  }
  else
  {
    v11 = 1u;
  }
  if (v9 < a2)
  {
    v12 = ~v9 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v14 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if ((_DWORD)v10 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_2379F1A2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for TaskConditional(255, a1[1], a1[3], a4);
  v6 = sub_237A869B4();
  v8[0] = v4;
  v8[1] = MEMORY[0x23B81FA98](&unk_237AA2A00, v5);
  return MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_2379F1AA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_237A87B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2379F1B50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, unint64_t, uint64_t);
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_237A87B84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = (*(_DWORD *)(v10 + 80) | v7) & 0x100000;
  v15 = *a2;
  *a1 = *a2;
  if ((v11 | (unint64_t)v7) > 7
    || v14 != 0
    || ((((v12 + ((v7 + 16) & ~(unint64_t)v7)) & ~v11) + v13) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((v12 + ((v7 + 16) & ~(unint64_t)v7)) & ~v11) + v13) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    a1 = (uint64_t *)(v15
                   + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16)));
  }
  else
  {
    v28 = ~v11;
    a1[1] = a2[1];
    v18 = (char *)a2 + v7;
    v19 = ((unint64_t)a1 + v7 + 16) & ~(unint64_t)v7;
    v20 = (unint64_t)(v18 + 16) & ~(unint64_t)v7;
    v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v21(v19, v20, v5);
    v22 = (v19 + v12) & v28;
    v23 = (v20 + v12) & v28;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v22, v23, v9);
    *(_BYTE *)(v22 + v13) = *(_BYTE *)(v23 + v13);
    v24 = (v22 + v13) & 0xFFFFFFFFFFFFFFF8;
    v25 = (v23 + v13) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)(v25 + 16);
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v26;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2379F1CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_237A87B84();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))((v5 + v6 + *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80), v7);
  return swift_release();
}

_QWORD *sub_2379F1D5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = sub_237A87B84();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (v11 + v14 + v8) & ~v14;
  v17 = (v15 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = v16 + v18;
  v20 = v17 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_retain();
  return a1;
}

_QWORD *sub_2379F1E40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_237A87B84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v10 + v13 + v8) & ~v13;
  v15 = (v10 + v13 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2379F1F48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = sub_237A87B84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v11 + v6) & ~v11;
  v13 = (v8 + v11 + v7) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_OWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

_QWORD *sub_2379F2010(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = sub_237A87B84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v10 + v13 + v8) & ~v13;
  v15 = (v10 + v13 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 8);
  swift_release();
  return a1;
}

uint64_t sub_2379F2100(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_237A87B84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = v8;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = *(_QWORD *)(v6 + 64);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v9 + 64);
  if (v11 < a2)
  {
    if (((((((v14 + v15 + ((v13 + 16) & ~v13)) & ~v15) + v16) & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v11 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X0 }
  }
  v21 = (a1 + v13 + 16) & ~v13;
  if ((_DWORD)v7 == v11)
  {
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v10 = v7;
    v12 = v5;
    return v22(v21, v10, v12);
  }
  v21 = (v21 + v14 + v15) & ~v15;
  if ((_DWORD)v10 == v11)
  {
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v22(v21, v10, v12);
  }
  v23 = *(_QWORD *)(((v21 + v16) & 0xFFFFFFFFFFFFF8) + 8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void sub_2379F22AC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_237A87B84() - 8);
  if (v8 <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = v8;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (v10 >= a3)
  {
    v13 = 0;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((((*(_DWORD *)(v7 + 64)
           + *(unsigned __int8 *)(v9 + 80)
           + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80))) & ~*(unsigned __int8 *)(v9 + 80))
         + *(_DWORD *)(v9 + 64)) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v11 = a3 - v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((*(_DWORD *)(v7 + 64)
         + *(unsigned __int8 *)(v9 + 80)
         + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80))) & ~*(unsigned __int8 *)(v9 + 80))
       + *(_DWORD *)(v9 + 64)) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    v14 = ~v10 + a2;
    bzero(a1, ((((*(_QWORD *)(v7 + 64)+ *(unsigned __int8 *)(v9 + 80)+ ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 64)) & 0xFFFFFFFFFFFFFFF8)+ 24);
    *a1 = v14;
  }
  __asm { BR              X10 }
}

void sub_2379F23EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2379F2494);
}

void sub_2379F23F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x2379F23FCLL);
  JUMPOUT(0x2379F2494);
}

void sub_2379F2458()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2379F2494);
}

void sub_2379F2460()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2379F2494);
}

uint64_t sub_2379F2468@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_WORD *)(v14 + v17) = 0;
  if (!(_DWORD)v13)
    JUMPOUT(0x2379F2494);
  v3 = (v14 + v10 + 16) & v12;
  if ((_DWORD)v16 == v7)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v5 = v13;
    a1 = v16;
    a2 = v15;
  }
  else
  {
    v3 = (v3 + v9 + v8) & v11;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x2379F2474);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v13;
  }
  return v4(v3, v5, a1, a2);
}

uint64_t sub_2379F24B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379F24E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TaskConditional(0, v6, v7, a4) - 8) + 80);
  return sub_2379EF958(a1, (__int128 *)(v4 + ((v8 + 32) & ~v8)), v6, v7);
}

uint64_t objectdestroy_21Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for TaskConditional(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  v9 = v8 + *(int *)(v6 + 40);
  v10 = sub_237A87B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379F2608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TaskConditional(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_2379F2C78;
  return sub_2379EF830(v9, v6, v7);
}

uint64_t sub_2379F2688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = type metadata accessor for TaskConditional(0, v5, *(_QWORD *)(v4 + 40), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 48) & ~v7;
  swift_unknownObjectRelease();
  v9 = v4 + v8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v6 + 36), v5);
  v10 = v9 + *(int *)(v6 + 40);
  v11 = sub_237A87B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379F2754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TaskConditional(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_2379F27F4;
  return sub_2379EFB5C(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_2379F27F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2379F2850@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1[6];
  v5 = v1[8];
  v4 = v1[9];
  v6 = v1[10];
  sub_237A873F8();
  type metadata accessor for IdentifiableIndices.Element(0, v3, v4, v6);
  return sub_2379EE3A0(v1[2], v3, a1, v5, v4, v6);
}

uint64_t objectdestroy_34Tm()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;

  v1 = *((_QWORD *)v0 + 4);
  v2 = *((_QWORD *)v0 + 6);
  v3 = *((_QWORD *)v0 + 9);
  v4 = *((_QWORD *)v0 + 10);
  v5 = sub_237A873F8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for IdentifiableIndices.Element(0, v2, v3, v4);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (v7 + v8 + v10) & ~v10;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(&v0[v7 + *(int *)(v5 + 32)], v2);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(&v0[v11], v1);
  v12 = &v0[v11 + *(int *)(v9 + 44)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v12, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_2379F2A5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v1[5];
  v14 = v1[4];
  v4 = v1[6];
  v5 = v1[7];
  v7 = v1[8];
  v6 = v1[9];
  v8 = v1[10];
  v9 = *(_QWORD *)(sub_237A873F8() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentifiableIndices.Element(0, v4, v6, v8) - 8)
                           + 80);
  return sub_2379EE4C8(a1, v1[2], v1[3], (uint64_t)v1 + v10, (uint64_t)v1 + ((v10 + v11 + v12) & ~v12), v14, v3, v4, v5, v7, v6, v8);
}

uint64_t sub_2379F2B24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];

  v4 = type metadata accessor for TaskConditional(255, *a1, a1[1], a4);
  MEMORY[0x23B81FA98](&unk_237AA2A00, v4);
  v5 = sub_237A86D80();
  v6 = sub_237A86C60();
  v7 = sub_237A869B4();
  v8 = sub_237A86D74();
  v9 = sub_237A869B4();
  v10 = sub_237A86D50();
  v11 = MEMORY[0x23B81FA98](MEMORY[0x24BDEFB78], v5);
  v17[0] = v11;
  v17[1] = MEMORY[0x23B81FA98](MEMORY[0x24BDEECB8], v6);
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v7, v17);
  v16[0] = v11;
  v16[1] = MEMORY[0x23B81FA98](MEMORY[0x24BDEF860], v8);
  v15[0] = v13;
  v15[1] = MEMORY[0x23B81FA98](v12, v9, v16);
  return MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v10, v15);
}

uint64_t sub_2379F2C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _BYTE __dst[432];
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_23;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_23;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_23;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    memcpy(__dst, (const void *)(*(_QWORD *)(a1 + 56) + (v10 << 9)), sizeof(__dst));
    v11 = NinePartImage.assets.getter();
    result = sub_2378805C4(v11);
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void Display.restoreAssets(from:)(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  int *v18;

  v3 = v1;
  v4 = a1;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_31:
      v5 = sub_23793E8E4(v5);
    v7 = 0;
    while (1)
    {
      if (v6 == v7)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v7 >= *(_QWORD *)(v5 + 16))
        goto LABEL_30;
      type metadata accessor for Layout();
      a1 = Layout.restoreAssets(from:)(v4);
      if (v2)
        break;
      if (v6 == ++v7)
      {
        *(_QWORD *)(v1 + 24) = v5;
        goto LABEL_9;
      }
    }
    *(_QWORD *)(v1 + 24) = v5;
  }
  else
  {
LABEL_9:
    v8 = *(_QWORD *)(v1 + 448);
    if (v8)
    {
      MEMORY[0x24BDAC7A8](a1);
      v18 = v4;
      swift_bridgeObjectRetain();
      sub_2379F9E50((void (*)(_OWORD *__return_ptr, _QWORD *))sub_2379F9BD0, (uint64_t)v17, v8);
      v10 = v9;
      swift_bridgeObjectRelease();
      if (v2)
        return;
    }
    else
    {
      v10 = 0;
    }
    v11 = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 448) = v10;
    v12 = *(_QWORD *)(v3 + 456);
    if (v12)
    {
      MEMORY[0x24BDAC7A8](v11);
      v18 = v4;
      swift_bridgeObjectRetain();
      v13 = sub_2379F9BE8((void (*)(_QWORD *__return_ptr, _BYTE *))sub_2379FA124, (uint64_t)v17, v12);
      swift_bridgeObjectRelease();
      if (v2)
        return;
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 456) = v13;
    if ((~*(_DWORD *)(v3 + 88) & 0xFELL) == 0 || (ImageAsset.restore(from:)(v4), !v2))
    {
      if ((~*(_DWORD *)(v3 + 160) & 0xFELL) == 0 || (ImageAsset.restore(from:)(v4), !v2))
      {
        if ((~*(_DWORD *)(v3 + 232) & 0xFELL) == 0 || (ImageAsset.restore(from:)(v4), !v2))
        {
          if ((~*(_DWORD *)(v3 + 304) & 0xFELL) == 0 || (ImageAsset.restore(from:)(v4), !v2))
          {
            ImageAsset.restore(from:)(v4);
            if (!v2)
            {
              ImageAsset.restore(from:)(v4);
              v14 = *((_QWORD *)v4 + 3);
              v15 = *((_QWORD *)v4 + 4);
              __swift_project_boxed_opaque_existential_2Tm(v4, v14);
              v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v3 + 464) = v16;
            }
          }
        }
      }
    }
  }
}

_QWORD *Display.assets.getter()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  ValueMetadata *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  int64_t v80;
  int v81;
  int64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  int64_t v100;
  int isUniquelyReferenced_nonNull_native;
  int64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  void *v137;
  char *v138;
  uint64_t v139;
  int64_t v140;
  int64_t v141;
  _QWORD *v142;
  int64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  _QWORD *v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  void *v167;
  uint64_t v168;
  id v169;
  _QWORD *v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  _QWORD v193[3];
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  void *v206;
  __int128 v207;
  void *v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228[62];
  __int128 v229;
  __int128 v230;
  _UNKNOWN **v231;
  __int128 v232;
  uint64_t v233;
  ValueMetadata *v234;
  _UNKNOWN **v235;
  uint64_t v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  _OWORD v240[6];
  uint64_t v241;
  _QWORD v242[63];

  v242[60] = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v1);
  v200 = (char *)v193 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for Slot();
  v210 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v226 = (uint64_t)v193 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = 0;
  v223 = type metadata accessor for Component();
  v211 = *(_QWORD *)(v223 - 8);
  MEMORY[0x24BDAC7A8](v223);
  v215 = (uint64_t)v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = type metadata accessor for Zone();
  v194 = *(_QWORD *)(v217 - 8);
  MEMORY[0x24BDAC7A8](v217);
  v216 = (uint64_t)v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v242, v0, 0x1E0uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826EE8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_237A89BC0;
  v7 = (void *)v242[7];
  v8 = v242[8];
  *(_QWORD *)(v6 + 32) = v242[7];
  v224 = v6 + 32;
  v9 = (void *)v242[9];
  v10 = v242[10];
  v11 = v242[11];
  v12 = v242[12];
  v13 = v242[13];
  v14 = v242[14];
  v15 = v242[15];
  *(_QWORD *)&v225 = v242[15];
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = v10;
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 72) = v12;
  *(_BYTE *)(v6 + 80) = v13;
  *(_QWORD *)(v6 + 88) = v14;
  *(_QWORD *)(v6 + 96) = v15;
  v16 = v242[17];
  v219 = v242[17];
  v220 = (void *)v242[16];
  v17 = v242[18];
  v218 = (void *)v242[18];
  v18 = v242[19];
  v19 = v242[20];
  v213 = v242[20];
  v214 = v242[19];
  v20 = v242[21];
  v212 = (void *)v242[21];
  v21 = v242[22];
  v22 = v242[23];
  v23 = v242[24];
  v221 = v242[24];
  *(_QWORD *)(v6 + 104) = v242[16];
  *(_QWORD *)(v6 + 112) = v16;
  *(_QWORD *)(v6 + 120) = v17;
  *(_QWORD *)(v6 + 128) = v18;
  *(_QWORD *)(v6 + 136) = v19;
  *(_QWORD *)(v6 + 144) = v20;
  *(_BYTE *)(v6 + 152) = v21;
  *(_QWORD *)(v6 + 160) = v22;
  *(_QWORD *)(v6 + 168) = v23;
  v24 = v242[26];
  v25 = v242[27];
  v206 = (void *)v242[27];
  *(_QWORD *)&v207 = v242[26];
  v26 = v242[28];
  v27 = v242[29];
  v204 = (void *)v242[29];
  v205 = v242[28];
  v28 = v242[30];
  v203 = v242[30];
  v29 = v242[31];
  v30 = v242[32];
  v31 = v242[33];
  v208 = (void *)v242[25];
  *(_QWORD *)&v209 = v242[33];
  *(_QWORD *)(v6 + 176) = v242[25];
  *(_QWORD *)(v6 + 184) = v24;
  *(_QWORD *)(v6 + 192) = v25;
  *(_QWORD *)(v6 + 200) = v26;
  *(_QWORD *)(v6 + 208) = v27;
  *(_QWORD *)(v6 + 216) = v28;
  *(_BYTE *)(v6 + 224) = v29;
  *(_QWORD *)(v6 + 232) = v30;
  *(_QWORD *)(v6 + 240) = v31;
  v32 = (void *)v242[34];
  v33 = v242[35];
  v34 = (void *)v242[36];
  v35 = v242[37];
  v36 = v242[41];
  v37 = v242[42];
  *(_BYTE *)(v6 + 296) = v242[40];
  *(_QWORD *)(v6 + 304) = v36;
  v228[0] = MEMORY[0x24BEE4AF8];
  v38 = v242[38];
  v39 = v242[39];
  *(_QWORD *)(v6 + 248) = v32;
  *(_QWORD *)(v6 + 256) = v33;
  *(_QWORD *)(v6 + 264) = v34;
  *(_QWORD *)(v6 + 272) = v35;
  *(_QWORD *)(v6 + 280) = v38;
  *(_QWORD *)(v6 + 288) = v39;
  *(_QWORD *)(v6 + 312) = v37;
  sub_23787007C(v7, v8, v9, v10, v11);
  swift_bridgeObjectRetain();
  sub_23787007C(v220, v219, v218, v214, v213);
  swift_bridgeObjectRetain();
  sub_23787007C(v208, v207, v206, v205, (char)v204);
  swift_bridgeObjectRetain();
  sub_23787007C(v32, v33, v34, v35, v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = v199;
  do
  {
    v41 = *(_BYTE *)(v6 + v40 + 80);
    v42 = *(_OWORD *)(v6 + v40 + 48);
    v237 = *(_OWORD *)(v6 + v40 + 32);
    v238 = v42;
    v239 = *(_OWORD *)(v6 + v40 + 64);
    LOBYTE(v240[0]) = v41;
    *(_OWORD *)((char *)v240 + 8) = *(_OWORD *)(v6 + v40 + 88);
    sub_2378BBFE0((uint64_t)&v237, (uint64_t)&v232, &qword_256826EF0);
    v43 = (char)v235;
    if ((~(_BYTE)v235 & 0xFE) != 0)
    {
      v44 = v236;
      v45 = v234;
      v46 = v233;
      v225 = v232;
      *((_QWORD *)&v230 + 1) = &type metadata for ImageAsset;
      v231 = &protocol witness table for ImageAsset;
      v47 = swift_allocObject();
      *(_QWORD *)&v229 = v47;
      *(_OWORD *)(v47 + 16) = v225;
      *(_QWORD *)(v47 + 32) = v46;
      *(_QWORD *)(v47 + 40) = v45;
      *(_BYTE *)(v47 + 48) = v43;
      *(_QWORD *)(v47 + 56) = v44;
      sub_237870734(&v229, (uint64_t)&v237);
      sub_237870734(&v237, (uint64_t)&v232);
      v48 = (_QWORD *)v228[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v48 = sub_237895520(0, v48[2] + 1, 1, v48);
        v228[0] = (uint64_t)v48;
      }
      v50 = v48[2];
      v49 = v48[3];
      if (v50 >= v49 >> 1)
        v228[0] = (uint64_t)sub_237895520((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
      v51 = v234;
      v52 = (uint64_t)v235;
      v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v232, (uint64_t)v234);
      v54 = MEMORY[0x24BDAC7A8](v53);
      v56 = (char *)v193 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v57 + 16))(v56, v54);
      sub_2379D2494(v50, (uint64_t)v56, v228, (uint64_t)v51, v52);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v232);
    }
    else
    {
      v231 = 0;
      v229 = 0u;
      v230 = 0u;
      sub_2378BC024((uint64_t)&v229, &qword_25681E760);
    }
    v40 += 72;
  }
  while (v40 != 288);
  swift_bridgeObjectRelease();
  v58 = (_QWORD *)v228[0];
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v227 = v58;
  v59 = v242[56];
  if (v242[56])
  {
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    v60 = v199;
    v61 = sub_2379FA4FC(v59, (void (*)(__int128 *__return_ptr, __int128 *))sub_2379FA800);
    v199 = v60;
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_2378805C4(v61);
  }
  if (v242[57])
  {
    v62 = swift_bridgeObjectRetain();
    v63 = v199;
    v64 = sub_2379F2C88(v62);
    v199 = v63;
    swift_bridgeObjectRelease();
    sub_2378805C4(v64);
  }
  v65 = v242[3];
  v195 = *(_QWORD *)(v242[3] + 16);
  if (v195)
  {
    v202 = (int *)type metadata accessor for Layout();
    v66 = *((_QWORD *)v202 - 1);
    v67 = *(unsigned __int8 *)(v66 + 80);
    v196 = *(_QWORD *)(v66 + 72);
    v197 = v65 + ((v67 + 32) & ~v67);
    v193[2] = v65;
    swift_bridgeObjectRetain();
    v68 = 0;
    v209 = xmmword_237A8A9F0;
    v207 = xmmword_237A95640;
    while (1)
    {
      v198 = v68;
      v69 = v202[6];
      v201 = v197 + v196 * v68;
      v70 = *(_QWORD *)(v201 + v69);
      v71 = *(_QWORD *)(v70 + 16);
      if (!v71)
      {
        v75 = MEMORY[0x24BEE4AF8];
        v91 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (!v91)
          goto LABEL_63;
LABEL_40:
        v92 = v211;
        v93 = v75 + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
        swift_bridgeObjectRetain();
        v94 = *(_QWORD *)(v92 + 72);
        v95 = (_QWORD *)MEMORY[0x24BEE4AF8];
        while (2)
        {
          v96 = v215;
          sub_2378D07D8(v93, v215, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v97 = *(_QWORD *)(v96 + *(int *)(v223 + 32));
          swift_bridgeObjectRetain();
          sub_2378DE6A4(v96, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v98 = *(_QWORD *)(v97 + 16);
          v99 = v95[2];
          v100 = v99 + v98;
          if (__OFADD__(v99, v98))
            goto LABEL_114;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v100 <= v95[3] >> 1)
          {
            if (!*(_QWORD *)(v97 + 16))
            {
LABEL_41:
              if (v98)
                goto LABEL_115;
              goto LABEL_42;
            }
          }
          else
          {
            if (v99 <= v100)
              v102 = v99 + v98;
            else
              v102 = v99;
            v95 = (_QWORD *)sub_237896114(isUniquelyReferenced_nonNull_native, v102, 1, (unint64_t)v95);
            if (!*(_QWORD *)(v97 + 16))
              goto LABEL_41;
          }
          v103 = v95[2];
          if ((v95[3] >> 1) - v103 < v98)
            goto LABEL_119;
          v104 = (*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80);
          v105 = *(_QWORD *)(v210 + 72);
          v106 = (char *)v95 + v104 + v105 * v103;
          if (v97 + v104 < (unint64_t)&v106[v105 * v98] && (unint64_t)v106 < v97 + v104 + v105 * v98)
            goto LABEL_124;
          swift_arrayInitWithCopy();
          if (v98)
          {
            v108 = v95[2];
            v89 = __OFADD__(v108, v98);
            v109 = v108 + v98;
            if (v89)
              goto LABEL_122;
            v95[2] = v109;
          }
LABEL_42:
          swift_bridgeObjectRelease();
          v93 += v94;
          if (!--v91)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_64;
          }
          continue;
        }
      }
      v72 = v194;
      v73 = v70 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
      swift_bridgeObjectRetain_n();
      v74 = *(_QWORD *)(v72 + 72);
      v75 = MEMORY[0x24BEE4AF8];
      do
      {
        v76 = v216;
        sub_2378D07D8(v73, v216, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        v77 = *(_QWORD *)(v76 + *(int *)(v217 + 28));
        swift_bridgeObjectRetain();
        sub_2378DE6A4(v76, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
        v78 = *(_QWORD *)(v77 + 16);
        v79 = *(_QWORD *)(v75 + 16);
        v80 = v79 + v78;
        if (__OFADD__(v79, v78))
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
          JUMPOUT(0x2379F5204);
        }
        v81 = swift_isUniquelyReferenced_nonNull_native();
        if (v81 && v80 <= *(_QWORD *)(v75 + 24) >> 1)
        {
          if (*(_QWORD *)(v77 + 16))
            goto LABEL_30;
        }
        else
        {
          if (v79 <= v80)
            v82 = v79 + v78;
          else
            v82 = v79;
          v75 = sub_237895BE4(v81, v82, 1, v75);
          if (*(_QWORD *)(v77 + 16))
          {
LABEL_30:
            v83 = *(_QWORD *)(v75 + 16);
            if ((*(_QWORD *)(v75 + 24) >> 1) - v83 < v78)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
              JUMPOUT(0x2379F5218);
            }
            v84 = (*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80);
            v85 = *(_QWORD *)(v211 + 72);
            v86 = v75 + v84 + v85 * v83;
            if (v77 + v84 < v86 + v85 * v78 && v86 < v77 + v84 + v85 * v78)
            {
LABEL_124:
              sub_237A880F4();
              __break(1u);
              JUMPOUT(0x2379F5300);
            }
            swift_arrayInitWithCopy();
            if (v78)
            {
              v88 = *(_QWORD *)(v75 + 16);
              v89 = __OFADD__(v88, v78);
              v90 = v88 + v78;
              if (v89)
              {
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
                JUMPOUT(0x2379F5228);
              }
              *(_QWORD *)(v75 + 16) = v90;
            }
            goto LABEL_20;
          }
        }
        if (v78)
          goto LABEL_113;
LABEL_20:
        swift_bridgeObjectRelease();
        v73 += v74;
        --v71;
      }
      while (v71);
      swift_bridgeObjectRelease_n();
      v91 = *(_QWORD *)(v75 + 16);
      if (v91)
        goto LABEL_40;
LABEL_63:
      swift_bridgeObjectRelease();
      v95 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_64:
      v110 = v95[2];
      v111 = (uint64_t)v200;
      if (v110)
      {
        v112 = v210;
        v113 = (uint64_t)v95
             + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80));
        swift_bridgeObjectRetain();
        *(_QWORD *)&v225 = *(_QWORD *)(v112 + 72);
        v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v218 = v95;
        while (1)
        {
          v115 = v226;
          sub_2378D07D8(v113, v226, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
          sub_2378BBFE0(v115 + *(int *)(v222 + 36), v111, &qword_25681F430);
          v116 = type metadata accessor for Instrument();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v111, 1, v116) == 1)
          {
            sub_2378BC024(v111, &qword_25681F430);
            v117 = MEMORY[0x24BEE4AF8];
          }
          else
          {
            sub_23788F46C((const void *)(v111 + *(int *)(v116 + 20)), &v232);
            sub_23788F46C(&v232, &v237);
            v118 = sub_2378A1BDC((uint64_t)&v237);
            if (v118 == 1)
            {
              v137 = (void *)sub_2378A1BF8((uint64_t)&v237);
              sub_237918E30(v137, &v229);
              v138 = (char *)&loc_2379F3CA8 + *((int *)qword_2379F5300 + sub_237919130((uint64_t)&v229));
              __asm { BR              X9 }
            }
            if (v118 == 2
              && (v119 = sub_2378A1BF8((uint64_t)&v237),
                  v120 = *(_QWORD *)(v119 + 40),
                  (~*(_DWORD *)(v119 + 40) & 0xFELL) != 0))
            {
              v121 = *(_QWORD *)(v119 + 96);
              v213 = *(_QWORD *)(v119 + 80);
              v214 = v121;
              v212 = *(void **)(v119 + 72);
              v208 = *(void **)(v119 + 64);
              v122 = *(void **)(v119 + 56);
              v205 = *(_QWORD *)(v119 + 48);
              v206 = v122;
              v220 = v114;
              v221 = v110;
              v123 = *(void **)(v119 + 24);
              v124 = *(_QWORD *)(v119 + 32);
              v203 = v120;
              v204 = v123;
              v224 = v113;
              v126 = *(void **)(v119 + 8);
              v125 = *(_QWORD *)(v119 + 16);
              LODWORD(v219) = *(unsigned __int8 *)(v119 + 88);
              __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
              v117 = swift_allocObject();
              *(_OWORD *)(v117 + 16) = v207;
              *(_QWORD *)(v117 + 56) = &type metadata for ImageAsset;
              *(_QWORD *)(v117 + 64) = &protocol witness table for ImageAsset;
              v127 = swift_allocObject();
              *(_QWORD *)(v117 + 32) = v127;
              *(_QWORD *)(v127 + 16) = v126;
              *(_QWORD *)(v127 + 24) = v125;
              *(_QWORD *)(v127 + 32) = v123;
              *(_QWORD *)(v127 + 40) = v124;
              *(_BYTE *)(v127 + 48) = v120;
              *(_QWORD *)(v127 + 56) = v205;
              *(_QWORD *)(v117 + 96) = &type metadata for ImageAsset;
              *(_QWORD *)(v117 + 104) = &protocol witness table for ImageAsset;
              v128 = swift_allocObject();
              *(_QWORD *)(v117 + 72) = v128;
              v129 = v206;
              v130 = (uint64_t)v208;
              *(_QWORD *)(v128 + 16) = v206;
              *(_QWORD *)(v128 + 24) = v130;
              v132 = v212;
              v131 = v213;
              *(_QWORD *)(v128 + 32) = v212;
              *(_QWORD *)(v128 + 40) = v131;
              *(_BYTE *)(v128 + 48) = v219;
              *(_QWORD *)(v128 + 56) = v214;
              v133 = v126;
              v134 = v125;
              v113 = v224;
              v135 = v124;
              v114 = v220;
              v110 = v221;
              sub_237870090(v133, v134, v204, v135, v203);
              v136 = v132;
              v111 = (uint64_t)v200;
              sub_237870090(v129, v130, v136, v131, v219);
            }
            else
            {
              v117 = MEMORY[0x24BEE4AF8];
            }
            sub_2378DE6A4(v111, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
          }
          sub_2378DE6A4(v226, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
          v139 = *(_QWORD *)(v117 + 16);
          v140 = v114[2];
          v141 = v140 + v139;
          if (__OFADD__(v140, v139))
            goto LABEL_116;
          v142 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if ((_DWORD)v142 && v141 <= v114[3] >> 1)
          {
            if (*(_QWORD *)(v117 + 16))
              goto LABEL_86;
          }
          else
          {
            if (v140 <= v141)
              v143 = v140 + v139;
            else
              v143 = v140;
            v114 = sub_237895520(v142, v143, 1, v114);
            if (*(_QWORD *)(v117 + 16))
            {
LABEL_86:
              v144 = v114[2];
              if ((v114[3] >> 1) - v144 < v139)
                goto LABEL_120;
              v145 = (unint64_t)&v114[5 * v144 + 4];
              if (v117 + 32 < v145 + 40 * v139 && v145 < v117 + 32 + 40 * v139)
                goto LABEL_124;
              __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC80);
              swift_arrayInitWithCopy();
              if (v139)
              {
                v147 = v114[2];
                v89 = __OFADD__(v147, v139);
                v148 = v147 + v139;
                if (v89)
                  goto LABEL_123;
                v114[2] = v148;
              }
              goto LABEL_67;
            }
          }
          if (v139)
            goto LABEL_117;
LABEL_67:
          swift_bridgeObjectRelease();
          v113 += v225;
          if (!--v110)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_97;
          }
        }
      }
      swift_bridgeObjectRelease();
      v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_97:
      *(_QWORD *)&v232 = v114;
      v149 = v201 + v202[12];
      v150 = *(_QWORD *)(v149 + 16);
      if (v150)
      {
        v152 = *(_QWORD *)(v149 + 24);
        v151 = *(_QWORD *)(v149 + 32);
        v154 = *(void **)v149;
        v153 = *(_QWORD *)(v149 + 8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
        v155 = swift_allocObject();
        *(_OWORD *)(v155 + 16) = v209;
        *(_QWORD *)(v155 + 56) = &type metadata for CAPackageAsset;
        *(_QWORD *)(v155 + 64) = &protocol witness table for CAPackageAsset;
        v156 = (_QWORD *)swift_allocObject();
        *(_QWORD *)(v155 + 32) = v156;
        v156[2] = v154;
        v156[3] = v153;
        v156[4] = v150;
        v156[5] = v152;
        v156[6] = v151;
        v157 = v154;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2378805C4(v155);
      }
      v158 = *(_QWORD *)(v201 + v202[13]);
      v159 = *(_QWORD *)(v158 + 16);
      if (v159)
      {
        swift_bridgeObjectRetain_n();
        *(_QWORD *)&v225 = v159 - 1;
        v214 = v158;
        v224 = 32;
        v160 = *(_OWORD *)(v158 + 48);
        v237 = *(_OWORD *)(v158 + 32);
        v238 = v160;
        v161 = *(_OWORD *)(v158 + 64);
        v162 = *(_OWORD *)(v158 + 80);
        v163 = *(_OWORD *)(v158 + 112);
        v240[1] = *(_OWORD *)(v158 + 96);
        v240[2] = v163;
        v239 = v161;
        v240[0] = v162;
        v164 = *(_OWORD *)(v158 + 128);
        v165 = *(_OWORD *)(v158 + 144);
        v166 = *(_OWORD *)(v158 + 160);
        v241 = *(_QWORD *)(v158 + 176);
        v240[4] = v165;
        v240[5] = v166;
        v240[3] = v164;
        v221 = *((_QWORD *)&v163 + 1);
        __asm { BR              X9 }
      }
      v68 = v198 + 1;
      sub_2378805C4(v232);
      if (v68 == v195)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v167 = (void *)*MEMORY[0x24BEBB568];
  v168 = *MEMORY[0x24BEBB608];
  *((_QWORD *)&v239 + 1) = 0x322D6D6574737953;
  *(_QWORD *)&v240[0] = 0xE900000000000034;
  LOBYTE(v237) = 0;
  *((_QWORD *)&v237 + 1) = 100;
  *(_QWORD *)&v238 = v167;
  *((_QWORD *)&v238 + 1) = v168;
  LOWORD(v239) = 0;
  sub_23786FE8C((uint64_t)v242);
  v169 = v167;
  sub_237978E54();
  swift_bridgeObjectRelease();
  sub_2378700DC((uint64_t)v242);
  v170 = v227;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v170 = sub_237895520(0, v170[2] + 1, 1, v170);
  v172 = v170[2];
  v171 = v170[3];
  if (v172 >= v171 >> 1)
    v170 = sub_237895520((_QWORD *)(v171 > 1), v172 + 1, 1, v170);
  v234 = &type metadata for InstrumentFont;
  v235 = &protocol witness table for InstrumentFont;
  v173 = swift_allocObject();
  *(_QWORD *)&v232 = v173;
  *(_BYTE *)(v173 + 16) = 0;
  *(_QWORD *)(v173 + 24) = 100;
  *(_QWORD *)(v173 + 32) = v169;
  *(_QWORD *)(v173 + 40) = v168;
  *(_WORD *)(v173 + 48) = 0;
  *(_QWORD *)(v173 + 56) = 0x746C7561666564;
  *(_QWORD *)(v173 + 64) = 0xE700000000000000;
  v170[2] = v172 + 1;
  sub_237870734(&v232, (uint64_t)&v170[5 * v172 + 4]);
  v174 = v242[43];
  v175 = v242[44];
  v176 = v242[45];
  v177 = v242[46];
  v178 = v242[47];
  v179 = v242[48];
  sub_237870090((void *)v242[43], v242[44], (void *)v242[45], v242[46], v242[47]);
  v181 = v170[2];
  v180 = v170[3];
  if (v181 >= v180 >> 1)
    v170 = sub_237895520((_QWORD *)(v180 > 1), v181 + 1, 1, v170);
  *((_QWORD *)&v238 + 1) = &type metadata for ImageAsset;
  *(_QWORD *)&v239 = &protocol witness table for ImageAsset;
  v182 = swift_allocObject();
  *(_QWORD *)&v237 = v182;
  *(_QWORD *)(v182 + 16) = v174;
  *(_QWORD *)(v182 + 24) = v175;
  *(_QWORD *)(v182 + 32) = v176;
  *(_QWORD *)(v182 + 40) = v177;
  *(_BYTE *)(v182 + 48) = v178;
  *(_QWORD *)(v182 + 56) = v179;
  v170[2] = v181 + 1;
  sub_237870734(&v237, (uint64_t)&v170[5 * v181 + 4]);
  v183 = v242[49];
  v184 = v242[50];
  v185 = v242[51];
  v186 = v242[52];
  v187 = v242[53];
  v188 = v242[54];
  sub_237870090((void *)v242[49], v242[50], (void *)v242[51], v242[52], v242[53]);
  v190 = v170[2];
  v189 = v170[3];
  if (v190 >= v189 >> 1)
    v170 = sub_237895520((_QWORD *)(v189 > 1), v190 + 1, 1, v170);
  *((_QWORD *)&v238 + 1) = &type metadata for ImageAsset;
  *(_QWORD *)&v239 = &protocol witness table for ImageAsset;
  v191 = swift_allocObject();
  *(_QWORD *)&v237 = v191;
  *(_QWORD *)(v191 + 16) = v183;
  *(_QWORD *)(v191 + 24) = v184;
  *(_QWORD *)(v191 + 32) = v185;
  *(_QWORD *)(v191 + 40) = v186;
  *(_BYTE *)(v191 + 48) = v187;
  *(_QWORD *)(v191 + 56) = v188;
  v170[2] = v190 + 1;
  sub_237870734(&v237, (uint64_t)&v170[5 * v190 + 4]);
  return v170;
}

uint64_t Display.DisplayType.defaultID.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x445F7265746E6543;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x5F72657473756C43;
}

void *Display.init(type:manufacturerLogo:appleLogo:id:size:density:requiresDarkAppearance:reversesDynamicContentDPadScrolling:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, int a5@<W4>, char a6@<W5>, _OWORD *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _OWORD *v60;
  void *result;
  _QWORD v62[2];
  _OWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  _QWORD v75[5];
  uint64_t v76[2];
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[27];
  _OWORD v82[27];
  __int128 v83;
  uint64_t v84;

  LODWORD(v70) = a5;
  v63 = a7;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v18);
  v68 = (uint64_t)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v71 = (uint64_t)v62 - v21;
  v67 = type metadata accessor for LayoutTemplate();
  v22 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v24 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Layout();
  v66 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v72 = (uint64_t)v62 - v29;
  v30 = *a1;
  v31 = *(_BYTE *)(a2 + 32);
  v32 = *(_QWORD *)(a2 + 40);
  v33 = *((_BYTE *)a3 + 32);
  v34 = *((_QWORD *)a3 + 5);
  v83 = *a4;
  LOBYTE(v76[0]) = v30;
  v35 = *(_OWORD *)(a2 + 16);
  v82[0] = *(_OWORD *)a2;
  v82[1] = v35;
  LOBYTE(v82[2]) = v31;
  *((_QWORD *)&v82[2] + 1) = v32;
  v36 = a3[1];
  v73 = *a3;
  v74 = v36;
  LOBYTE(v75[0]) = v33;
  v75[1] = v34;
  v37 = MEMORY[0x24BEE4AF8];
  v38 = sub_2378D1F24(MEMORY[0x24BEE4AF8]);
  Display.init(id:type:layouts:size:density:manufacturerLogo:appleLogo:requiresDarkAppearance:reversesDynamicContentDPadScrolling:localNotifications:shadows:)((unint64_t *)&v83, (unsigned __int8 *)v76, v37, (uint64_t *)v82, (uint64_t *)&v73, v70, a6, v38, (uint64_t)&v78, a8, a9, a10, 0);
  v83 = v78;
  v39 = *((_QWORD *)&v79 + 1);
  v84 = v79;
  v40 = v80;
  memcpy(v82, v81, sizeof(v82));
  if (v30)
  {
    if (v30 == 1)
    {
      if (qword_25681E330 != -1)
        swift_once();
      v41 = &qword_2568232E0;
    }
    else
    {
      if (qword_25681E338 != -1)
        swift_once();
      v41 = &qword_2568232E8;
    }
  }
  else
  {
    if (qword_25681E328 != -1)
      swift_once();
    v41 = (uint64_t *)&off_2568232D8;
  }
  v42 = *v41;
  v43 = *(_QWORD *)(*v41 + 16);
  if (v43)
  {
    v44 = v42 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v64 = *(_QWORD *)(v22 + 72);
    v62[1] = v42;
    swift_bridgeObjectRetain_n();
    v45 = type metadata accessor for LayoutTemplate;
    v65 = v27;
    do
    {
      v69 = v43;
      v70 = v39;
      v46 = v45;
      sub_2378D07D8(v44, (uint64_t)v24, (uint64_t (*)(_QWORD))v45);
      sub_237A86588();
      if (qword_25681E078 != -1)
        swift_once();
      v47 = qword_256820BC8;
      v48 = v71;
      v49 = v68;
      sub_2378BBFE0(v71, v68, &qword_256820D58);
      v50 = (uint64_t *)&v24[*(int *)(v67 + 20)];
      v51 = *v50;
      v52 = v50[1];
      swift_retain();
      swift_bridgeObjectRetain();
      v53 = (uint64_t)v24;
      v54 = LayoutTemplate.scaledZones(for:)(*(double *)&v40, *((double *)&v40 + 1));
      v77 = 0;
      v80 = 0u;
      v81[0] = 0u;
      v78 = 0u;
      v79 = 0u;
      BYTE2(v81[1]) = 0;
      LOWORD(v81[1]) = 512;
      v76[0] = 0;
      v76[1] = 0;
      v74 = 0u;
      memset(v75, 0, 25);
      v73 = 0u;
      v55 = v72;
      Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)(v49, v51, v52, v54, &v77, (uint64_t *)&v78, v47, v76, v72, 0.0, 0.0, 0.0, 0.0, (uint64_t)&v73, MEMORY[0x24BEE4AF8]);
      v56 = (char *)v53;
      v45 = v46;
      sub_2378DE6A4(v53, (uint64_t (*)(_QWORD))v46);
      sub_2378BC024(v48, &qword_256820D58);
      v57 = (uint64_t)v65;
      sub_2378D07D8(v55, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      v39 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v39 = sub_237895680(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
      v59 = *(_QWORD *)(v39 + 16);
      v58 = *(_QWORD *)(v39 + 24);
      v24 = v56;
      if (v59 >= v58 >> 1)
        v39 = sub_237895680(v58 > 1, v59 + 1, 1, v39);
      *(_QWORD *)(v39 + 16) = v59 + 1;
      sub_2378D0858(v57, v39+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v59, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      sub_2378DE6A4(v72, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      v44 += v64;
      v43 = v69 - 1;
    }
    while (v69 != 1);
    swift_bridgeObjectRelease_n();
  }
  v60 = v63;
  *v63 = v83;
  *((_QWORD *)v60 + 2) = v84;
  result = memcpy(v60 + 3, v82, 0x1B0uLL);
  *((_QWORD *)v60 + 3) = v39;
  v60[2] = v40;
  return result;
}

void Display.DisplayType.id.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

CarPlayAssetUI::Display::DisplayType_optional __swiftcall Display.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CarPlayAssetUI::Display::DisplayType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static Display.DisplayType.allCases.getter()
{
  return &unk_25096B818;
}

uint64_t Display.DisplayType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F437265746E6563;
  if (*v0 != 1)
    v1 = 0x65676E6573736170;
  if (*v0)
    return v1;
  else
    return 0x72657473756C63;
}

uint64_t sub_2379F5A18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5028(*a1, *a2);
}

uint64_t sub_2379F5A24()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379F5AD4()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379F5B60()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::Display::DisplayType_optional sub_2379F5C0C(Swift::String *a1)
{
  return Display.DisplayType.init(rawValue:)(*a1);
}

void sub_2379F5C18(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xED0000656C6F736ELL;
  v5 = 0x6F437265746E6563;
  if (v2 != 1)
  {
    v5 = 0x65676E6573736170;
    v4 = 0xE900000000000072;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x72657473756C63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2379F5C88()
{
  sub_2379FC56C();
  return sub_237A87A34();
}

uint64_t sub_2379F5CE4()
{
  sub_2379FC56C();
  return sub_237A879EC();
}

void sub_2379F5D30(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A4F8;
}

uint64_t Display.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Display.id.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*Display.id.modify())()
{
  return nullsub_1;
}

void Display.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *Display.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*Display.type.modify())()
{
  return nullsub_1;
}

uint64_t Display.layouts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.layouts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Display.layouts.modify())()
{
  return nullsub_1;
}

double Display.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void sub_2379F5DFC(double *a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(double *)(a2 + 32);
  v5 = *(double *)(a2 + 40);
  *(double *)(a2 + 32) = *a1;
  *(double *)(a2 + 40) = v3;
  if (v2 != v4 || v3 != v5)
    sub_2379F5E58(v4, v5, v2, v3);
}

void Display.size.setter(CGFloat a1, double a2)
{
  uint64_t v2;
  double v5;
  double v6;

  v5 = *(double *)(v2 + 32);
  v6 = *(double *)(v2 + 40);
  *(CGFloat *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
  if (v5 != a1 || v6 != a2)
    sub_2379F5E58(v5, v6, a1, a2);
}

void sub_2379F5E58(CGFloat a1, double MidY, CGFloat a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  double v52;
  double v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  double *v66;
  double v67;
  double v68;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  double v82;
  double v83;
  double v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  double MinY;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  double MinX;
  CGFloat v95;
  double MaxY;
  double MaxX;
  CGFloat v98;
  double v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  int64_t v103;
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  double v127;
  double v128;
  CGFloat MidX;
  CGFloat a;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  CGFloat v155;
  CGFloat v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  int64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  int64_t v170;
  double *v171;
  uint64_t v172;
  double *v173;
  char *v174;
  char *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  CGFloat v184;
  double v185;
  double v186;
  double v187;
  CGFloat v188;
  CGFloat width;
  CGFloat height;
  CGFloat y;
  uint64_t v192;
  double v193;
  double v194;
  double x;
  uint64_t v196;
  uint64_t v197;
  CGAffineTransform v198;
  uint64_t v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (unint64_t)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for Slot();
  v181 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v13 = (char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (double *)((char *)&v144 - v15);
  MEMORY[0x24BDAC7A8](v17);
  v174 = (char *)&v144 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v177 = (uint64_t)&v144 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v144 - v22);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v144 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v192 = (uint64_t)&v144 - v28;
  v166 = type metadata accessor for Component();
  v151 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v172 = (uint64_t)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v144 - v31;
  v161 = type metadata accessor for Zone();
  v144 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v34 = (char *)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v162 = (uint64_t)&v144 - v36;
  v150 = v4;
  v37 = *(_QWORD *)(v4 + 24);
  if (*(_QWORD *)(v37 + 16))
  {
    v145 = *(_QWORD *)(v37 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_74;
    while (1)
    {
      v156 = a3 / a1;
      v155 = a4 / MidY;
      v176 = v11;
      v11 = 0;
      v175 = v13;
      v180 = v23;
      v179 = v26;
      v183 = v32;
      v38 = v145;
      v154 = v34;
      v173 = v16;
      while (v11 != v38)
      {
        *(_QWORD *)(v150 + 24) = v37;
        if (v11 >= *(_QWORD *)(v37 + 16))
          goto LABEL_73;
        v40 = type metadata accessor for Layout();
        v41 = v37
            + ((*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80))
            + *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72) * v11;
        v42 = *(int *)(v40 + 24);
        v43 = *(_QWORD *)(v41 + v42);
        v44 = *(_QWORD *)(v43 + 16);
        if (v44)
        {
          v147 = v42;
          v148 = v41;
          v149 = v11;
          v199 = MEMORY[0x24BEE4AF8];
          v45 = v43;
          v46 = v44;
          swift_bridgeObjectRetain();
          v160 = v46;
          sub_2379D64EC(0, v46, 0);
          v34 = v154;
          v47 = 0;
          v48 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
          v146 = v45;
          v159 = v48;
          v158 = v45 + v48;
          v49 = *(_QWORD *)(v144 + 72);
          v50 = v162;
          v157 = v49;
          do
          {
            v163 = v47;
            sub_2378D07D8(v158 + v49 * v47, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
            sub_2378D07D8((uint64_t)v34, v50, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
            v51 = (double *)(v50 + *(int *)(v161 + 24));
            MidY = *v51;
            a1 = v51[1];
            v52 = v51[2];
            v53 = v51[3];
            CGAffineTransformMakeScale(&v198, v156, v155);
            v200.origin.x = MidY;
            v200.origin.y = a1;
            v200.size.width = v52;
            v200.size.height = v53;
            v201 = CGRectApplyAffineTransform(v200, &v198);
            *(CGRect *)v51 = v201;
            v171 = v51;
            v54 = v201.size.width == v52 && v201.size.height == v53;
            if (!v54)
            {
              v55 = *(int *)(v161 + 28);
              v56 = *(_QWORD *)(v50 + v55);
              v57 = *(_QWORD *)(v56 + 16);
              if (v57)
              {
                v153 = *(int *)(v161 + 28);
                v197 = MEMORY[0x24BEE4AF8];
                v58 = v56;
                swift_bridgeObjectRetain();
                v170 = v57;
                sub_2379D64B4(0, v57, 0);
                v59 = 0;
                v60 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
                v152 = v58;
                v169 = v60;
                v168 = v58 + v60;
                v61 = *(_QWORD *)(v151 + 72);
                v167 = v61;
                do
                {
                  v62 = v172;
                  sub_2378D07D8(v168 + v61 * v59, v172, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                  sub_2378D07D8(v62, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                  v64 = v171[2];
                  v63 = v171[3];
                  v65 = v166;
                  v66 = (double *)&v32[*(int *)(v166 + 28)];
                  v68 = *v66;
                  v67 = v66[1];
                  *v66 = v64;
                  v66[1] = v63;
                  if (v64 != v68 || v63 != v67)
                  {
                    v165 = v59;
                    v70 = *(int *)(v65 + 32);
                    v71 = *(_QWORD *)&v32[v70];
                    v72 = *(_QWORD *)(v71 + 16);
                    v182 = v70;
                    if (v72)
                    {
                      v193 = v64 / v68;
                      v196 = MEMORY[0x24BEE4AF8];
                      v184 = v63 / v67;
                      v73 = v71;
                      swift_bridgeObjectRetain();
                      sub_2379D64D0(0, v72, 0);
                      v74 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
                      v164 = v73;
                      v75 = v73 + v74;
                      v76 = *(_QWORD *)(v181 + 72);
                      do
                      {
                        sub_2378D07D8(v75, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        sub_2378D07D8((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        v77 = v16[6];
                        v78 = v16[7];
                        v79 = v16[8];
                        v80 = v16[9];
                        v81 = v184;
                        CGAffineTransformMakeScale(&v198, v193, v184);
                        v202.origin.x = v77;
                        v202.origin.y = v78;
                        v202.size.width = v79;
                        v202.size.height = v80;
                        v203 = CGRectApplyAffineTransform(v202, &v198);
                        x = v203.origin.x;
                        y = v203.origin.y;
                        width = v203.size.width;
                        height = v203.size.height;
                        v83 = v16[10];
                        v82 = v16[11];
                        v84 = v16[13];
                        v187 = v16[12];
                        v203.origin.x = v77;
                        v203.origin.y = v78;
                        v203.size.width = v79;
                        v203.size.height = v80;
                        v194 = v82 + CGRectGetMinX(v203);
                        v204.origin.x = v77;
                        v204.origin.y = v78;
                        v204.size.width = v79;
                        v204.size.height = v80;
                        v188 = v83 + CGRectGetMinY(v204);
                        v205.origin.x = v77;
                        v205.origin.y = v78;
                        v205.size.width = v79;
                        v205.size.height = v80;
                        v85 = CGRectGetWidth(v205) - v84 - v82;
                        v206.origin.x = v77;
                        v206.origin.y = v78;
                        v206.size.width = v79;
                        v206.size.height = v80;
                        v86 = CGRectGetHeight(v206) - v187 - v83;
                        CGAffineTransformMakeScale(&v198, v193, v81);
                        v207.origin.x = v194;
                        v207.origin.y = v188;
                        v207.size.width = v85;
                        v207.size.height = v86;
                        v208 = CGRectApplyAffineTransform(v207, &v198);
                        v194 = v208.origin.y;
                        MidY = v208.size.width;
                        a1 = v208.size.height;
                        v87 = v208.origin.x;
                        v185 = v208.origin.x;
                        MinY = CGRectGetMinY(v208);
                        v89 = x;
                        v209.origin.x = x;
                        v90 = y;
                        v209.origin.y = y;
                        v91 = width;
                        v209.size.width = width;
                        v92 = height;
                        v209.size.height = height;
                        v188 = MinY - CGRectGetMinY(v209);
                        v210.origin.x = v87;
                        v93 = v194;
                        v210.origin.y = v194;
                        v210.size.width = MidY;
                        v210.size.height = a1;
                        MinX = CGRectGetMinX(v210);
                        v211.origin.x = v89;
                        v211.origin.y = v90;
                        v211.size.width = v91;
                        v211.size.height = v92;
                        v187 = MinX - CGRectGetMinX(v211);
                        v212.origin.x = v89;
                        v212.origin.y = v90;
                        v212.size.width = v91;
                        v95 = v92;
                        v212.size.height = v92;
                        MaxY = CGRectGetMaxY(v212);
                        a3 = v185;
                        v213.origin.x = v185;
                        v213.origin.y = v93;
                        v213.size.width = MidY;
                        v213.size.height = a1;
                        v186 = MaxY - CGRectGetMaxY(v213);
                        a4 = x;
                        v214.origin.x = x;
                        v214.origin.y = v90;
                        v214.size.width = v91;
                        v214.size.height = v95;
                        MaxX = CGRectGetMaxX(v214);
                        v215.origin.x = a3;
                        v215.origin.y = v194;
                        v215.size.width = MidY;
                        v215.size.height = a1;
                        v98 = CGRectGetMaxX(v215);
                        v16[6] = a4;
                        v16[7] = v90;
                        v16[8] = v91;
                        v16[9] = v95;
                        v99 = v187;
                        v16[10] = v188;
                        v16[11] = v99;
                        v16[12] = v186;
                        v16[13] = MaxX - v98;
                        sub_2378DE6A4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        v100 = v196;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_2379D64D0(0, *(_QWORD *)(v100 + 16) + 1, 1);
                          v100 = v196;
                        }
                        v102 = *(_QWORD *)(v100 + 16);
                        v101 = *(_QWORD *)(v100 + 24);
                        if (v102 >= v101 >> 1)
                        {
                          sub_2379D64D0(v101 > 1, v102 + 1, 1);
                          v100 = v196;
                        }
                        *(_QWORD *)(v100 + 16) = v102 + 1;
                        sub_2378D0858((uint64_t)v16, v100 + v74 + v102 * v76, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        v75 += v76;
                        --v72;
                      }
                      while (v72);
                      swift_bridgeObjectRelease();
                      v32 = v183;
                      v70 = v182;
                      v23 = v180;
                      v26 = v179;
                    }
                    else
                    {
                      v100 = MEMORY[0x24BEE4AF8];
                    }
                    swift_bridgeObjectRelease();
                    *(_QWORD *)&v32[v70] = v100;
                    v103 = *(_QWORD *)(v100 + 16);
                    if (v103)
                    {
                      *(_QWORD *)&v198.a = MEMORY[0x24BEE4AF8];
                      v104 = v103;
                      swift_bridgeObjectRetain();
                      v194 = *(double *)&v104;
                      sub_2379D64D0(0, v104, 0);
                      v105 = 0;
                      *(_QWORD *)&x = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
                      *(_QWORD *)&v193 = v100 + *(_QWORD *)&x;
                      v106 = *(_QWORD *)(v181 + 72);
                      while (1)
                      {
                        sub_2378D07D8(*(_QWORD *)&v193 + v106 * v105, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        sub_2378D07D8((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        v107 = v23[5];
                        if (v107 >= 2)
                        {
                          v108 = *v23;
                          v109 = v23[1];
                          v110 = v23[2];
                          v111 = v23[3];
                          v112 = v23[4];
                          v113 = *(_QWORD *)&v183[v182];
                          v114 = *(_QWORD *)(v113 + 16);
                          y = *(double *)&v108;
                          if (v114)
                          {
                            v115 = v113 + *(_QWORD *)&x;
                            sub_23795CD9C(v108, v109, v110, v111, v112, v107);
                            swift_bridgeObjectRetain();
                            v116 = (uint64_t)v174;
                            while (1)
                            {
                              sub_2378D07D8(v115, v116, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                              v117 = *(_QWORD *)(v116 + 120) == v112 && v107 == *(_QWORD *)(v116 + 128);
                              if (v117 || (sub_237A8840C() & 1) != 0)
                                break;
                              sub_2378DE6A4(v116, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                              v115 += v106;
                              if (!--v114)
                              {
                                v118 = 1;
                                v119 = v176;
                                goto LABEL_41;
                              }
                            }
                            v119 = v176;
                            sub_2378D0858(v116, v176, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                            v118 = 0;
LABEL_41:
                            v16 = v173;
                          }
                          else
                          {
                            sub_23795CD9C(v108, v109, v110, v111, v112, v107);
                            swift_bridgeObjectRetain();
                            v118 = 1;
                            v119 = v176;
                          }
                          v120 = v181;
                          v121 = v178;
                          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v181 + 56))(v119, v118, 1, v178);
                          swift_bridgeObjectRelease();
                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v119, 1, v121) == 1)
                          {
                            sub_2378BC024(v119, &qword_256820CE0);
                            sub_237A880AC();
                            __break(1u);
                            return;
                          }
                          v122 = v119;
                          v123 = v177;
                          sub_2378D0858(v122, v177, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                          v124 = *(double *)(v123 + 48);
                          a1 = *(double *)(v123 + 56);
                          v125 = *(double *)(v123 + 64);
                          v126 = *(double *)(v123 + 72);
                          v216.origin.x = v124;
                          v216.origin.y = a1;
                          v216.size.width = v125;
                          v216.size.height = v126;
                          v127 = CGRectGetWidth(v216);
                          v217.origin.x = v124;
                          v217.origin.y = a1;
                          v217.size.width = v125;
                          v217.size.height = v126;
                          v128 = CGRectGetHeight(v217);
                          if (v128 >= v127)
                            v128 = v127;
                          a3 = v128 * 0.5 + 15.0 + 20.0;
                          v218.origin.x = v124;
                          v218.origin.y = a1;
                          v218.size.width = v125;
                          v218.size.height = v126;
                          MidX = CGRectGetMidX(v218);
                          v219.origin.x = v124;
                          v219.origin.y = a1;
                          v219.size.width = v125;
                          v219.size.height = v126;
                          MidY = CGRectGetMidY(v219);
                          sub_2378DE6A4(v123, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                          v23 = v180;
                          sub_23795CDB0(*v180, v180[1], v180[2], v180[3], v180[4], v180[5]);
                          *(CGFloat *)v23 = y;
                          *((CGFloat *)v23 + 1) = a3;
                          *((CGFloat *)v23 + 2) = MidX;
                          *((double *)v23 + 3) = MidY;
                          v23[4] = v112;
                          v23[5] = v107;
                          v13 = v175;
                          v26 = v179;
                        }
                        sub_2378D0858((uint64_t)v23, v192, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        sub_2378DE6A4((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        a = v198.a;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_2379D64D0(0, *(_QWORD *)(*(_QWORD *)&a + 16) + 1, 1);
                          a = v198.a;
                        }
                        v132 = *(_QWORD *)(*(_QWORD *)&a + 16);
                        v131 = *(_QWORD *)(*(_QWORD *)&a + 24);
                        if (v132 >= v131 >> 1)
                        {
                          sub_2379D64D0(v131 > 1, v132 + 1, 1);
                          a = v198.a;
                        }
                        ++v105;
                        *(_QWORD *)(*(_QWORD *)&a + 16) = v132 + 1;
                        sub_2378D0858(v192, *(_QWORD *)&a + *(_QWORD *)&x + v132 * v106, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
                        if (v105 == *(_QWORD *)&v194)
                        {
                          swift_bridgeObjectRelease();
                          v32 = v183;
                          v70 = v182;
                          goto LABEL_54;
                        }
                      }
                    }
                    a = MEMORY[0x24BEE4AF8];
LABEL_54:
                    swift_bridgeObjectRelease();
                    *(CGFloat *)&v32[v70] = a;
                    v59 = v165;
                  }
                  sub_2378DE6A4(v172, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                  v133 = v197;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_2379D64B4(0, *(_QWORD *)(v133 + 16) + 1, 1);
                    v133 = v197;
                  }
                  v135 = *(_QWORD *)(v133 + 16);
                  v134 = *(_QWORD *)(v133 + 24);
                  if (v135 >= v134 >> 1)
                  {
                    sub_2379D64B4(v134 > 1, v135 + 1, 1);
                    v133 = v197;
                  }
                  *(_QWORD *)(v133 + 16) = v135 + 1;
                  ++v59;
                  v61 = v167;
                  v136 = v133 + v169 + v135 * v167;
                  v32 = v183;
                  sub_2378D0858((uint64_t)v183, v136, (uint64_t (*)(_QWORD))type metadata accessor for Component);
                }
                while (v59 != v170);
                swift_bridgeObjectRelease();
                v137 = v162;
                v55 = v153;
                v34 = v154;
              }
              else
              {
                v133 = MEMORY[0x24BEE4AF8];
                v137 = v162;
              }
              swift_bridgeObjectRelease();
              *(_QWORD *)(v137 + v55) = v133;
            }
            sub_2378DE6A4((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
            v138 = v199;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2379D64EC(0, *(_QWORD *)(v138 + 16) + 1, 1);
              v34 = v154;
              v138 = v199;
            }
            v139 = v163;
            v141 = *(_QWORD *)(v138 + 16);
            v140 = *(_QWORD *)(v138 + 24);
            if (v141 >= v140 >> 1)
            {
              sub_2379D64EC(v140 > 1, v141 + 1, 1);
              v139 = v163;
              v34 = v154;
              v138 = v199;
            }
            *(_QWORD *)(v138 + 16) = v141 + 1;
            v49 = v157;
            v142 = v138 + v159 + v141 * v157;
            v50 = v162;
            v143 = v139 + 1;
            sub_2378D0858(v162, v142, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
            v47 = v143;
            v54 = v143 == v160;
            v32 = v183;
          }
          while (!v54);
          swift_bridgeObjectRelease();
          v41 = v148;
          v39 = v147;
          v11 = v149;
        }
        else
        {
          v138 = MEMORY[0x24BEE4AF8];
          v39 = v42;
        }
        ++v11;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v41 + v39) = v138;
        v37 = *(_QWORD *)(v150 + 24);
        v38 = v145;
        if (v11 == v145)
          return;
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      v37 = sub_23793E8E4(v37);
    }
  }
}

void (*Display.size.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  return sub_2379F6E98;
}

void sub_2379F6E98(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  v4 = *(double *)(v1 + 32);
  v5 = *(double *)(v1 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)a1;
  *(double *)(v1 + 40) = v3;
  if (v2 != v4 || v3 != v5)
    sub_2379F5E58(v4, v5, v2, v3);
}

double Display.density.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void Display.density.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*Display.density.modify())()
{
  return nullsub_1;
}

uint64_t Display.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void **)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(void **)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_BYTE *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  sub_23787007C(v2, v3, v4, v5, v6);
  return swift_bridgeObjectRetain();
}

__n128 Display.background.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a1[1];
  v9 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 8);
  sub_2378702CC(*(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 56) = v9;
  result = v8;
  *(__n128 *)(v1 + 72) = v8;
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 112) = v5;
  *(_QWORD *)(v1 + 120) = v6;
  return result;
}

uint64_t (*Display.background.modify())()
{
  return nullsub_1;
}

uint64_t Display.shapeMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void **)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  v4 = *(void **)(v1 + 144);
  v5 = *(_QWORD *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 160);
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_BYTE *)(v1 + 176);
  v9 = *(_QWORD *)(v1 + 184);
  v10 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  sub_23787007C(v2, v3, v4, v5, v6);
  return swift_bridgeObjectRetain();
}

__n128 Display.shapeMask.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a1[1];
  v9 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 8);
  sub_2378702CC(*(void **)(v1 + 128), *(_QWORD *)(v1 + 136), *(void **)(v1 + 144), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
  swift_bridgeObjectRelease();
  result = v8;
  *(_OWORD *)(v1 + 128) = v9;
  *(__n128 *)(v1 + 144) = v8;
  *(_QWORD *)(v1 + 160) = v2;
  *(_QWORD *)(v1 + 168) = v3;
  *(_BYTE *)(v1 + 176) = v4;
  *(_QWORD *)(v1 + 184) = v5;
  *(_QWORD *)(v1 + 192) = v6;
  return result;
}

uint64_t (*Display.shapeMask.modify())()
{
  return nullsub_1;
}

uint64_t Display.interior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void **)(v1 + 200);
  v3 = *(_QWORD *)(v1 + 208);
  v4 = *(void **)(v1 + 216);
  v5 = *(_QWORD *)(v1 + 224);
  v6 = *(_QWORD *)(v1 + 232);
  v7 = *(_QWORD *)(v1 + 240);
  v8 = *(_BYTE *)(v1 + 248);
  v9 = *(_QWORD *)(v1 + 256);
  v10 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  sub_23787007C(v2, v3, v4, v5, v6);
  return swift_bridgeObjectRetain();
}

__n128 Display.interior.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a1[1];
  v9 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 8);
  sub_2378702CC(*(void **)(v1 + 200), *(_QWORD *)(v1 + 208), *(void **)(v1 + 216), *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 200) = v9;
  result = v8;
  *(__n128 *)(v1 + 216) = v8;
  *(_QWORD *)(v1 + 232) = v2;
  *(_QWORD *)(v1 + 240) = v3;
  *(_BYTE *)(v1 + 248) = v4;
  *(_QWORD *)(v1 + 256) = v5;
  *(_QWORD *)(v1 + 264) = v6;
  return result;
}

uint64_t (*Display.interior.modify())()
{
  return nullsub_1;
}

uint64_t Display.wheelOcclusion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void **)(v1 + 272);
  v3 = *(_QWORD *)(v1 + 280);
  v4 = *(void **)(v1 + 288);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 304);
  v7 = *(_QWORD *)(v1 + 312);
  v8 = *(_BYTE *)(v1 + 320);
  v9 = *(_QWORD *)(v1 + 328);
  v10 = *(_QWORD *)(v1 + 336);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  sub_23787007C(v2, v3, v4, v5, v6);
  return swift_bridgeObjectRetain();
}

__n128 Display.wheelOcclusion.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a1[1];
  v9 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 8);
  sub_2378702CC(*(void **)(v1 + 272), *(_QWORD *)(v1 + 280), *(void **)(v1 + 288), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304));
  swift_bridgeObjectRelease();
  result = v8;
  *(_OWORD *)(v1 + 272) = v9;
  *(__n128 *)(v1 + 288) = v8;
  *(_QWORD *)(v1 + 304) = v2;
  *(_QWORD *)(v1 + 312) = v3;
  *(_BYTE *)(v1 + 320) = v4;
  *(_QWORD *)(v1 + 328) = v5;
  *(_QWORD *)(v1 + 336) = v6;
  return result;
}

uint64_t (*Display.wheelOcclusion.modify())()
{
  return nullsub_1;
}

uint64_t Display.manufacturerLogo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)(v1 + 344);
  v3 = *(_QWORD *)(v1 + 352);
  v4 = *(void **)(v1 + 360);
  v5 = *(_QWORD *)(v1 + 368);
  v6 = *(_QWORD *)(v1 + 384);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 376);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Display.manufacturerLogo.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)(v1 + 344), *(_QWORD *)(v1 + 352), *(void **)(v1 + 360), *(_QWORD *)(v1 + 368), *(_BYTE *)(v1 + 376));
  result = v7;
  *(__n128 *)(v1 + 344) = v7;
  *(_QWORD *)(v1 + 360) = v2;
  *(_QWORD *)(v1 + 368) = v3;
  *(_BYTE *)(v1 + 376) = v4;
  *(_QWORD *)(v1 + 384) = v5;
  return result;
}

uint64_t (*Display.manufacturerLogo.modify())()
{
  return nullsub_1;
}

uint64_t Display.appleLogo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)(v1 + 392);
  v3 = *(_QWORD *)(v1 + 400);
  v4 = *(void **)(v1 + 408);
  v5 = *(_QWORD *)(v1 + 416);
  v6 = *(_QWORD *)(v1 + 432);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 424);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Display.appleLogo.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)(v1 + 392), *(_QWORD *)(v1 + 400), *(void **)(v1 + 408), *(_QWORD *)(v1 + 416), *(_BYTE *)(v1 + 424));
  result = v7;
  *(__n128 *)(v1 + 392) = v7;
  *(_QWORD *)(v1 + 408) = v2;
  *(_QWORD *)(v1 + 416) = v3;
  *(_BYTE *)(v1 + 424) = v4;
  *(_QWORD *)(v1 + 432) = v5;
  return result;
}

uint64_t (*Display.appleLogo.modify())()
{
  return nullsub_1;
}

uint64_t Display.requiresDarkAppearance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 440);
}

uint64_t Display.requiresDarkAppearance.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 440) = result;
  return result;
}

uint64_t (*Display.requiresDarkAppearance.modify())()
{
  return nullsub_1;
}

uint64_t Display.reversesDynamicContentDPadScrolling.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 441);
}

uint64_t Display.reversesDynamicContentDPadScrolling.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 441) = result;
  return result;
}

uint64_t (*Display.reversesDynamicContentDPadScrolling.modify())()
{
  return nullsub_1;
}

uint64_t Display.localNotifications.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.localNotifications.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 448) = a1;
  return result;
}

uint64_t (*Display.localNotifications.modify())()
{
  return nullsub_1;
}

uint64_t Display.shadows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.shadows.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 456) = a1;
  return result;
}

uint64_t (*Display.shadows.modify())()
{
  return nullsub_1;
}

uint64_t Display.manifestEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Display.manifestEntries.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 464) = a1;
  return result;
}

uint64_t (*Display.manifestEntries.modify())()
{
  return nullsub_1;
}

unint64_t Display.init(id:type:layouts:size:density:manufacturerLogo:appleLogo:requiresDarkAppearance:reversesDynamicContentDPadScrolling:localNotifications:shadows:)@<X0>(unint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13)
{
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v20 = *a1;
  v19 = a1[1];
  v21 = *a2;
  v34 = a4[1];
  v35 = *a4;
  v22 = a4[3];
  v23 = *((_BYTE *)a4 + 32);
  v32 = a4[5];
  v33 = a4[2];
  v30 = a5[1];
  v31 = *a5;
  v28 = a5[3];
  v29 = a5[2];
  v27 = *((_BYTE *)a5 + 32);
  v26 = a5[5];
  if (qword_25681E410 != -1)
    swift_once();
  v24 = qword_256825198;
  if (!v19)
  {
    if (v21)
    {
      if (v21 == 1)
      {
        v19 = 0xEE0079616C707369;
        v20 = 0x445F7265746E6543;
      }
      else
      {
        v19 = 0x8000000237AB1E90;
        v20 = 0xD000000000000011;
      }
    }
    else
    {
      v19 = 0xEF79616C70736944;
      v20 = 0x5F72657473756C43;
    }
  }
  result = sub_2378D1DE0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)a9 = v20;
  *(_QWORD *)(a9 + 8) = v19;
  *(_BYTE *)(a9 + 16) = v21;
  *(_QWORD *)(a9 + 24) = a3;
  *(double *)(a9 + 32) = a10;
  *(double *)(a9 + 40) = a11;
  *(double *)(a9 + 48) = a12;
  *(_OWORD *)(a9 + 56) = 0u;
  *(_OWORD *)(a9 + 72) = 0u;
  *(_OWORD *)(a9 + 88) = xmmword_237A9FA20;
  *(_BYTE *)(a9 + 104) = 0;
  *(_OWORD *)(a9 + 112) = xmmword_237AA2A50;
  *(_OWORD *)(a9 + 128) = 0u;
  *(_OWORD *)(a9 + 144) = 0u;
  *(_OWORD *)(a9 + 160) = xmmword_237A9FA20;
  *(_BYTE *)(a9 + 176) = 0;
  *(_OWORD *)(a9 + 184) = xmmword_237AA2A60;
  *(_OWORD *)(a9 + 216) = 0u;
  *(_OWORD *)(a9 + 200) = 0u;
  *(_OWORD *)(a9 + 232) = xmmword_237A9FA20;
  *(_BYTE *)(a9 + 248) = 0;
  *(_OWORD *)(a9 + 256) = xmmword_237AA2A70;
  *(_OWORD *)(a9 + 272) = 0u;
  *(_OWORD *)(a9 + 288) = 0u;
  *(_OWORD *)(a9 + 304) = xmmword_237A9FA20;
  *(_BYTE *)(a9 + 320) = 0;
  strcpy((char *)(a9 + 328), "wheelOcclusion");
  *(_BYTE *)(a9 + 343) = -18;
  *(_QWORD *)(a9 + 344) = v35;
  *(_QWORD *)(a9 + 352) = v34;
  *(_QWORD *)(a9 + 360) = v33;
  *(_QWORD *)(a9 + 368) = v22;
  *(_BYTE *)(a9 + 376) = v23;
  *(_QWORD *)(a9 + 384) = v32;
  *(_QWORD *)(a9 + 392) = v31;
  *(_QWORD *)(a9 + 400) = v30;
  *(_QWORD *)(a9 + 408) = v29;
  *(_QWORD *)(a9 + 416) = v28;
  *(_BYTE *)(a9 + 424) = v27;
  *(_QWORD *)(a9 + 432) = v26;
  *(_BYTE *)(a9 + 440) = a6 & 1;
  *(_BYTE *)(a9 + 441) = a7;
  *(_QWORD *)(a9 + 448) = a8;
  *(_QWORD *)(a9 + 456) = a13;
  *(_QWORD *)(a9 + 464) = result;
  *(_QWORD *)(a9 + 472) = v24;
  return result;
}

uint64_t Display.addLayout(using:layoutType:layoutStyleID:)(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[4];
  uint64_t v43[2];
  _OWORD v44[4];
  __int16 v45;
  char v46;
  char v47[9];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - v11;
  v13 = type metadata accessor for LayoutTemplate();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Layout();
  v41 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - v20;
  v22 = *a2;
  v23 = *a3;
  v24 = a3[1];
  v38 = v23;
  sub_2378D07D8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LayoutTemplate);
  v25 = *(double *)(v4 + 32);
  v26 = *(double *)(v4 + 40);
  v39 = v4;
  swift_bridgeObjectRetain();
  sub_237A86588();
  if (qword_25681E078 != -1)
    swift_once();
  v27 = qword_256820BC8;
  v28 = v40;
  sub_2378BBFE0((uint64_t)v12, v40, &qword_256820D58);
  v29 = (uint64_t *)&v15[*(int *)(v13 + 20)];
  v30 = *v29;
  v31 = v29[1];
  swift_retain();
  swift_bridgeObjectRetain();
  v32 = LayoutTemplate.scaledZones(for:)(v25, v26);
  v47[0] = v22;
  memset(v44, 0, sizeof(v44));
  v46 = 0;
  v45 = 512;
  v43[0] = v38;
  v43[1] = v24;
  memset(v42, 0, 57);
  Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)(v28, v30, v31, v32, v47, (uint64_t *)v44, v27, v43, (uint64_t)v21, 0.0, 0.0, 0.0, 0.0, (uint64_t)v42, MEMORY[0x24BEE4AF8]);
  sub_2378DE6A4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LayoutTemplate);
  sub_2378BC024((uint64_t)v12, &qword_256820D58);
  sub_2378D07D8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  v33 = v39;
  v34 = *(_QWORD *)(v39 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v34 = sub_237895680(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
  v36 = *(_QWORD *)(v34 + 16);
  v35 = *(_QWORD *)(v34 + 24);
  if (v36 >= v35 >> 1)
    v34 = sub_237895680(v35 > 1, v36 + 1, 1, v34);
  *(_QWORD *)(v34 + 16) = v36 + 1;
  sub_2378D0858((uint64_t)v18, v34+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v36, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  *(_QWORD *)(v33 + 24) = v34;
  return sub_2378DE6A4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
}

uint64_t Display.getLayouts(layoutType:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = type metadata accessor for Layout();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - v6;
  v8 = *a1;
  v9 = *(_QWORD *)(v1 + 24);
  v10 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(v9 + 16);
  result = swift_bridgeObjectRetain();
  v24 = v11;
  if (!v11)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return v10;
  }
  v13 = 0;
  if (v8)
    v14 = 0x79616C7265766FLL;
  else
    v14 = 0x7972616D697270;
  while (v13 < *(_QWORD *)(v9 + 16))
  {
    v15 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v16 = *(_QWORD *)(v23 + 72);
    sub_2378D07D8(v9 + v15 + v16 * v13, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
    if (v7[*(int *)(v25 + 36)])
      v17 = 0x79616C7265766FLL;
    else
      v17 = 0x7972616D697270;
    if (v17 == v14)
    {
      swift_bridgeObjectRelease_n();
LABEL_14:
      v19 = (uint64_t)v4;
      sub_2378D0858((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2379D6498(0, *(_QWORD *)(v10 + 16) + 1, 1);
      v10 = v26;
      v21 = *(_QWORD *)(v26 + 16);
      v20 = *(_QWORD *)(v26 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2379D6498(v20 > 1, v21 + 1, 1);
        v10 = v26;
      }
      *(_QWORD *)(v10 + 16) = v21 + 1;
      v22 = v10 + v15 + v21 * v16;
      v4 = (char *)v19;
      result = sub_2378D0858(v19, v22, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
      goto LABEL_6;
    }
    v18 = sub_237A8840C();
    swift_bridgeObjectRelease_n();
    if ((v18 & 1) != 0)
      goto LABEL_14;
    result = sub_2378DE6A4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Layout);
LABEL_6:
    if (v24 == ++v13)
    {
      v10 = v26;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2379F7CDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379F7D04 + 4 * byte_237AA2A80[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2379F7D04()
{
  return 1701869940;
}

uint64_t sub_2379F7D14()
{
  return 0x7374756F79616CLL;
}

uint64_t sub_2379F7D2C()
{
  return 1702521203;
}

uint64_t sub_2379F7D3C()
{
  return 0x797469736E6564;
}

uint64_t sub_2379F7D54()
{
  return 0x756F72676B636162;
}

uint64_t sub_2379F7D70()
{
  return 0x73614D6570616873;
}

uint64_t sub_2379F7D8C()
{
  return 0x726F697265746E69;
}

uint64_t sub_2379F7DA4()
{
  return 0x63634F6C65656877;
}

unint64_t sub_2379F7DC8()
{
  return 0xD000000000000010;
}

uint64_t sub_2379F7DE4()
{
  return 0x676F4C656C707061;
}

unint64_t sub_2379F7E04()
{
  return 0xD000000000000016;
}

uint64_t sub_2379F7E54()
{
  return 0x73776F64616873;
}

uint64_t sub_2379F7E6C()
{
  return 0x74736566696E616DLL;
}

uint64_t sub_2379F7E90()
{
  unsigned __int8 *v0;

  return sub_2379F7CDC(*v0);
}

uint64_t sub_2379F7E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379FBEFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2379F7EBC(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_2379F7EC8()
{
  sub_2379FA808();
  return sub_237A88718();
}

uint64_t sub_2379F7EF0()
{
  sub_2379FA808();
  return sub_237A88724();
}

uint64_t Display.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v78 = v1[1];
  v77 = *((unsigned __int8 *)v1 + 16);
  v8 = v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = v1[6];
  v75 = v1[7];
  v76 = v8;
  v12 = v1[8];
  v73 = v1[9];
  v74 = v12;
  v13 = v1[10];
  v71 = v1[11];
  v72 = v13;
  v70 = v1[12];
  v69 = *((unsigned __int8 *)v1 + 104);
  v68 = v1[14];
  v67 = v1[15];
  v58 = v1[16];
  v59 = v1[17];
  v60 = v1[18];
  v66 = v1[19];
  v65 = v1[20];
  v64 = v1[21];
  v63 = *((unsigned __int8 *)v1 + 176);
  v62 = v1[23];
  v61 = v1[24];
  v51 = v1[25];
  v52 = v1[26];
  v53 = v1[27];
  v57 = v1[28];
  v56 = v1[29];
  v55 = v1[30];
  v54 = *((unsigned __int8 *)v1 + 248);
  v27 = *((unsigned __int8 *)v1 + 440);
  v49 = v1[32];
  v50 = v1[33];
  v40 = v1[34];
  v41 = v1[35];
  v42 = v1[36];
  v43 = v1[37];
  v44 = v1[38];
  v45 = v1[39];
  v46 = *((unsigned __int8 *)v1 + 320);
  v47 = v1[41];
  v48 = v1[42];
  v34 = v1[43];
  v35 = v1[44];
  v36 = v1[45];
  v37 = v1[46];
  v38 = *((unsigned __int8 *)v1 + 376);
  v39 = v1[48];
  v28 = v1[49];
  v29 = v1[50];
  v30 = v1[51];
  v31 = v1[52];
  v32 = *((unsigned __int8 *)v1 + 424);
  v33 = v1[54];
  v26 = *((unsigned __int8 *)v1 + 441);
  v25 = v1[56];
  v24 = v1[57];
  v14 = v1[59];
  v23 = v1[58];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379FA808();
  sub_237A886B8();
  v15 = v6;
  v80 = v7;
  v81 = v78;
  v89 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F08);
  sub_2379FAA00(&qword_256826F10, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v16 = v79;
  sub_237A882B0();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = v75;
  v17 = v76;
  v19 = v73;
  v20 = v74;
  LOBYTE(v80) = v77;
  v89 = 1;
  sub_2379FA84C();
  sub_237A882B0();
  v80 = v17;
  v89 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F20);
  sub_2379FAAA8(&qword_256826F28, &qword_256826F30, (uint64_t)&protocol conformance descriptor for Layout, MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  v80 = v9;
  v81 = v10;
  v89 = 3;
  type metadata accessor for CGSize(0);
  sub_23786FAA0(&qword_256823300, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
  sub_237A882B0();
  v80 = v11;
  v89 = 4;
  sub_23787ADF8();
  sub_237A882B0();
  v80 = v18;
  v81 = v20;
  v82 = v19;
  v83 = v72;
  v84 = v71;
  v85 = v70;
  v86 = v69;
  v87 = v68;
  v88 = v67;
  v89 = 5;
  sub_2379C203C();
  sub_237A882B0();
  v80 = v58;
  v81 = v59;
  v82 = v60;
  v83 = v66;
  v84 = v65;
  v85 = v64;
  v86 = v63;
  v87 = v62;
  v88 = v61;
  v89 = 6;
  sub_237A882B0();
  v80 = v51;
  v81 = v52;
  v82 = v53;
  v83 = v57;
  v84 = v56;
  v85 = v55;
  v86 = v54;
  v87 = v49;
  v88 = v50;
  v89 = 7;
  sub_237A882B0();
  v80 = v40;
  v81 = v41;
  v82 = v42;
  v83 = v43;
  v84 = v44;
  v85 = v45;
  v86 = v46;
  v87 = v47;
  v88 = v48;
  v89 = 8;
  sub_237A882B0();
  v80 = v34;
  v81 = v35;
  v82 = v36;
  v83 = v37;
  LOBYTE(v84) = v38;
  v85 = v39;
  v89 = 9;
  sub_2378888DC();
  sub_237A882B0();
  v80 = v28;
  v81 = v29;
  v82 = v30;
  v83 = v31;
  LOBYTE(v84) = v32;
  v85 = v33;
  v89 = 10;
  sub_237A882B0();
  LOBYTE(v80) = 11;
  sub_237A88280();
  LOBYTE(v80) = 12;
  sub_237A88238();
  v80 = v25;
  v89 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F38);
  sub_2379FA994(&qword_256826F40, &qword_256826F38, (uint64_t (*)(void))sub_2379FA890);
  sub_237A88268();
  v80 = v24;
  v89 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F50);
  sub_2379FA994(&qword_256826F58, &qword_256826F50, (uint64_t (*)(void))sub_2379FA8D4);
  sub_237A88268();
  v80 = v23;
  v81 = v14;
  v89 = 15;
  if ((qword_237AA2E68[byte_2568219B8] & v14) == 0)
  {
    if (v23)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256826F68);
      sub_2379FA918();
      sub_237A882B0();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v15, v3);
}

uint64_t Display.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  void *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int v39;
  void *v40;
  int v41;
  void *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[60];
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _BYTE v102[7];
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  _BYTE v112[7];
  void *v113;
  unint64_t v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  _BYTE v122[7];
  void *v123;
  unint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  _BYTE v132[7];
  void *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  char v139;
  _BYTE v140[7];
  uint64_t v141;
  void *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  char v146;
  _BYTE v147[7];
  uint64_t v148;
  char v149;
  char v150;
  int v151;
  __int16 v152;
  void *v153;
  void *v154;
  void *v155;
  uint64_t v156;
  char v157;
  int v158;
  __int16 v159;
  _BYTE v160[7];
  _BYTE v161[7];
  _BYTE v162[7];
  _BYTE v163[7];
  _BYTE v164[7];
  _BYTE v165[7];
  _DWORD v166[3];

  v58 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826F78);
  v59 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25681E410 != -1)
    swift_once();
  v7 = qword_256825198;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379FA808();
  sub_237A88688();
  if (v2)
  {
    v84 = 0;
    v85 = 0;
    v82 = 0;
    v83 = 0;
    v81 = 0;
    v69 = 0;
    v70 = 0;
    v66 = 0;
    v67 = 0;
    v64 = 0;
    v65 = 0;
    v72 = 0;
    v73 = 0;
    v71 = 0;
    v68 = 0;
    v77 = 0;
    v78 = 0;
    v75 = 0;
    v76 = 0;
    v74 = 0;
    v79 = 0xE90000000000006BLL;
    v80 = 254;
    v62 = 254;
    v63 = 0xE800000000000000;
    v61 = 254;
    v60 = 254;
    v86 = v2;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    v8 = 0;
    v9 = 0;
LABEL_6:
    sub_2378702CC(v74, v75, v76, v77, v60);
    swift_bridgeObjectRelease();
    sub_2378702CC(v68, v70, v71, v72, v61);
    swift_bridgeObjectRelease();
    sub_2378702CC(v64, v65, v66, v67, v62);
    swift_bridgeObjectRelease();
    sub_2378702CC(v81, v82, v83, v84, v80);
    swift_bridgeObjectRelease();
    if (v9)
      sub_2378702E0(v56, v55, v54, v53, v52);
    if (v8)
      sub_2378702E0(v47, v48, v49, v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v46 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F08);
  LOBYTE(v87[0]) = 0;
  sub_2379FAA00(&qword_256826F80, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  sub_237A881F0();
  v11 = v88;
  v12 = v89;
  LOBYTE(v87[0]) = 1;
  sub_2379FAA64();
  sub_237A881F0();
  v13 = v88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F20);
  LOBYTE(v87[0]) = 2;
  sub_2379FAAA8(&qword_256826F90, &qword_256826F98, (uint64_t)&protocol conformance descriptor for Layout, MEMORY[0x24BEE12D0]);
  sub_237A881F0();
  v57 = (uint64_t)v88;
  type metadata accessor for CGSize(0);
  LOBYTE(v87[0]) = 3;
  sub_23786FAA0(&qword_256823310, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
  sub_237A881F0();
  v14 = (uint64_t)v88;
  v15 = v89;
  LOBYTE(v87[0]) = 4;
  sub_23787AE3C();
  sub_237A881F0();
  v45 = v13;
  v16 = v88;
  LOBYTE(v87[0]) = 5;
  sub_2379C1FF4();
  sub_237A881F0();
  v74 = v88;
  v75 = v89;
  v76 = v90;
  v77 = v91;
  v60 = v92;
  v78 = v93;
  v43 = v94;
  v42 = v95;
  v44 = v96;
  LOBYTE(v87[0]) = 6;
  sub_237A881F0();
  v68 = v88;
  v70 = v89;
  v71 = v90;
  v61 = v92;
  v72 = v91;
  v73 = v93;
  v41 = v94;
  v40 = v95;
  v79 = v96;
  LOBYTE(v87[0]) = 7;
  sub_237A881F0();
  v64 = v88;
  v65 = v89;
  v66 = v90;
  v67 = v91;
  v69 = v93;
  v39 = v94;
  v38 = v95;
  v62 = v92;
  v63 = v96;
  LOBYTE(v87[0]) = 8;
  sub_237A881F0();
  v81 = v88;
  v82 = v89;
  v83 = v90;
  v84 = v91;
  v80 = v92;
  v85 = v93;
  v34 = v94;
  v35 = v95;
  v36 = v12;
  v37 = v96;
  LOBYTE(v87[0]) = 9;
  sub_237888A0C();
  sub_237A881F0();
  v55 = v89;
  v56 = v88;
  v53 = v91;
  v54 = v90;
  v52 = v92;
  v33 = v93;
  LOBYTE(v87[0]) = 10;
  sub_237A881F0();
  v8 = 1;
  v86 = 0;
  v47 = v88;
  v48 = v89;
  v49 = v90;
  v50 = v91;
  v51 = v92;
  v32 = v93;
  LOBYTE(v88) = 11;
  LODWORD(v31) = sub_237A881C0();
  v86 = 0;
  LOBYTE(v88) = 12;
  v30 = sub_237A88178();
  v86 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F38);
  LOBYTE(v87[0]) = 13;
  sub_2379FAB2C();
  v17 = v86;
  sub_237A881A8();
  v86 = v17;
  if (v17)
    goto LABEL_12;
  v18 = v88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826F50);
  LOBYTE(v87[0]) = 14;
  sub_2379FABDC();
  v19 = v86;
  sub_237A881A8();
  v86 = v19;
  if (v19
    || (v20 = v88,
        v157 = 15,
        __swift_instantiateConcreteTypeFromMangledName(&qword_256826F68),
        sub_2379FAC8C(),
        v21 = v86,
        sub_237A881A8(),
        (v86 = v21) != 0))
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v4);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    v9 = 1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v29 = v31 & 1;
  v22 = v88;
  if (v88 == (void *)1)
    v22 = 0;
  v31 = v22;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v4);
  swift_bridgeObjectRelease();
  v28 = v11;
  v87[0] = v11;
  v87[1] = v36;
  LOBYTE(v87[2]) = v45;
  v87[3] = v57;
  v87[4] = v14;
  v87[5] = v15;
  v87[6] = v16;
  v87[7] = v74;
  v87[8] = v75;
  v87[9] = v76;
  v87[10] = v77;
  v87[11] = v60;
  v87[12] = v78;
  LOBYTE(v87[13]) = v43;
  v87[14] = v42;
  v87[15] = v44;
  v87[16] = v68;
  v87[17] = v70;
  v87[18] = v71;
  v87[19] = v72;
  v23 = v62;
  v87[20] = v61;
  v87[21] = v73;
  LOBYTE(v87[22]) = v41;
  v87[23] = v40;
  v87[24] = v79;
  v24 = v63;
  v87[25] = v64;
  v87[26] = v65;
  v87[27] = v66;
  v87[28] = v67;
  v87[29] = v62;
  v25 = v69;
  v87[30] = v69;
  v26 = v39;
  LOBYTE(v87[31]) = v39;
  v27 = v38;
  v87[32] = v38;
  v87[33] = v63;
  v87[34] = v81;
  v87[35] = v82;
  v87[36] = v83;
  v87[37] = v84;
  v87[38] = v80;
  v87[39] = v85;
  LOBYTE(v87[40]) = v34;
  v87[41] = v35;
  v87[42] = v37;
  v87[43] = v56;
  v87[44] = v55;
  v87[45] = v54;
  v87[46] = v53;
  LOBYTE(v87[47]) = v52;
  v87[48] = v33;
  v87[49] = v47;
  v87[50] = v48;
  v87[51] = v49;
  v87[52] = v50;
  LOBYTE(v87[53]) = v51;
  v87[54] = v32;
  LOBYTE(v87[55]) = v29;
  BYTE1(v87[55]) = v30;
  v87[56] = v18;
  v87[57] = v20;
  v87[58] = v31;
  v87[59] = v46;
  memcpy(v58, v87, 0x1E0uLL);
  sub_23786FE8C((uint64_t)v87);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v88 = v28;
  v89 = v36;
  LOBYTE(v90) = v45;
  v91 = v57;
  v95 = v74;
  v96 = v75;
  v97 = v76;
  v98 = v77;
  v99 = v60;
  v100 = v78;
  v101 = v43;
  v103 = v42;
  v104 = v44;
  v105 = v68;
  v106 = v70;
  v107 = v71;
  v108 = v72;
  v109 = v61;
  v110 = v73;
  v111 = v41;
  v113 = v40;
  v114 = v79;
  v115 = v64;
  v116 = v65;
  v117 = v66;
  v118 = v67;
  v119 = v23;
  v120 = v25;
  v121 = v26;
  v123 = v27;
  v124 = v24;
  *(_DWORD *)((char *)&v90 + 1) = v166[0];
  HIDWORD(v90) = *(_DWORD *)((char *)v166 + 3);
  v92 = v14;
  v93 = v15;
  v94 = v16;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v165[3];
  *(_DWORD *)v102 = *(_DWORD *)v165;
  *(_DWORD *)v112 = *(_DWORD *)v164;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v164[3];
  *(_DWORD *)&v122[3] = *(_DWORD *)&v163[3];
  *(_DWORD *)v122 = *(_DWORD *)v163;
  v125 = v81;
  v126 = v82;
  v127 = v83;
  v128 = v84;
  v129 = v80;
  v130 = v85;
  v131 = v34;
  *(_DWORD *)v132 = *(_DWORD *)v162;
  *(_DWORD *)&v132[3] = *(_DWORD *)&v162[3];
  v133 = v35;
  v134 = v37;
  v135 = v56;
  v136 = v55;
  v137 = v54;
  v138 = v53;
  v139 = v52;
  *(_DWORD *)v140 = *(_DWORD *)v161;
  *(_DWORD *)&v140[3] = *(_DWORD *)&v161[3];
  v141 = v33;
  v142 = v47;
  v143 = v48;
  v144 = v49;
  v145 = v50;
  v146 = v51;
  *(_DWORD *)v147 = *(_DWORD *)v160;
  *(_DWORD *)&v147[3] = *(_DWORD *)&v160[3];
  v148 = v32;
  v149 = v29;
  v150 = v30;
  v151 = v158;
  v152 = v159;
  v153 = v18;
  v154 = v20;
  v155 = v31;
  v156 = v46;
  return sub_2378700DC((uint64_t)&v88);
}

uint64_t sub_2379F98A4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return Display.init(from:)(a1, a2);
}

uint64_t sub_2379F98B8(_QWORD *a1)
{
  return Display.encode(to:)(a1);
}

void sub_2379F98CC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  sub_237870090(*(void **)a1, v2, v3, v4, v5);
  swift_getAtKeyPath();
  sub_2378702E0(v1, v2, v3, v4, v5);
}

void sub_2379F9974(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  sub_237870090(*(void **)a1, v7, v8, v9, v10);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    sub_2378702E0(v6, v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v7;
    *(_QWORD *)(a3 + 16) = v8;
    *(_QWORD *)(a3 + 24) = v9;
    *(_BYTE *)(a3 + 32) = v10;
    *(_QWORD *)(a3 + 40) = v11;
    *(_BYTE *)(a3 + 48) = v12;
  }
}

void *sub_2379F9A24@<X0>(void *__src@<X0>, _QWORD *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  _BYTE v8[512];
  _BYTE __srca[505];
  _DWORD __dst[128];

  memcpy(__dst, __src, 0x1F9uLL);
  memcpy(__srca, __src, sizeof(__srca));
  sub_2379B4BE8((uint64_t)__dst);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    memcpy(v8, __srca, 0x1F9uLL);
    return (void *)sub_2379B4DC8((uint64_t)v8);
  }
  else
  {
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    if ((~LOBYTE(__dst[56]) & 0xFE) != 0)
      ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    ImageAsset.restore(from:)(a2);
    return memcpy(a3, __srca, 0x1F9uLL);
  }
}

void sub_2379F9BBC(int *a1)
{
  Display.restoreAssets(from:)(a1);
}

void sub_2379F9BD0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2379F9974(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_2379F9BE8(void (*a1)(_QWORD *__return_ptr, _BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD __src[64];
  _BYTE v30[512];
  _BYTE __dst[520];
  uint64_t v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256827010);
  result = sub_237A880D0();
  v6 = (_QWORD *)result;
  v7 = 0;
  v32 = a3;
  v10 = *(_QWORD *)(a3 + 64);
  v9 = a3 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v26 = (unint64_t)(v11 + 63) >> 6;
  v27 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * i);
    v21 = *v19;
    v20 = v19[1];
    v22 = (const void *)(*(_QWORD *)(v32 + 56) + (i << 9));
    memcpy(__dst, v22, 0x1F9uLL);
    memcpy(v30, v22, 0x1F9uLL);
    swift_bridgeObjectRetain();
    sub_2379B4BE8((uint64_t)__dst);
    a1(__src, v30);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_2379B4DC8((uint64_t)__dst);
      return (uint64_t)v6;
    }
    sub_2379B4DC8((uint64_t)__dst);
    *(_QWORD *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v6[6] + 16 * i);
    *v23 = v21;
    v23[1] = v20;
    result = (uint64_t)memcpy((void *)(v6[7] + (i << 9)), __src, 0x1F9uLL);
    v24 = v6[2];
    v16 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v25;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v7++, 1);
    if (v16)
      goto LABEL_27;
    if (v7 >= v26)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v9 + 8 * v7);
    if (!v17)
      break;
LABEL_15:
    v13 = (v17 - 1) & v17;
  }
  v18 = v7 + 1;
  if (v7 + 1 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 2;
  if (v7 + 2 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 3;
  if (v7 + 3 >= v26)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_14:
    v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v26)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v9 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_2379F9E50(void (*a1)(_OWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  char v44;
  uint64_t v45;
  char v46;
  _QWORD v47[4];
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256820418);
  v4 = sub_237A880D0();
  v5 = 0;
  v38 = a3;
  v39 = (_QWORD *)v4;
  v8 = *(_QWORD *)(a3 + 64);
  v7 = a3 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v35 = (unint64_t)(v9 + 63) >> 6;
  v36 = v4 + 64;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v40 = (v11 - 1) & v11;
  v41 = v5;
  for (i = __clz(__rbit64(v11)) | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v14 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v18 = v17[1];
    v42 = *v17;
    v19 = *(_QWORD *)(v38 + 56) + 56 * i;
    v20 = *(void **)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(void **)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_BYTE *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    LOBYTE(v19) = *(_BYTE *)(v19 + 48);
    v47[0] = v20;
    v47[1] = v21;
    v47[2] = v22;
    v47[3] = v23;
    v48 = v24;
    v49 = v25;
    v50 = v19;
    swift_bridgeObjectRetain();
    sub_237870090(v20, v21, v22, v23, v24);
    v26 = v51;
    a1(v43, v47);
    v51 = v26;
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_2378702E0(v20, v21, v22, v23, v24);
      return;
    }
    sub_2378702E0(v20, v21, v22, v23, v24);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = (_QWORD *)(v39[6] + 16 * i);
    *v27 = v42;
    v27[1] = v18;
    v28 = v39[7] + 56 * i;
    v29 = v44;
    v30 = v45;
    v31 = v46;
    v32 = v43[1];
    *(_OWORD *)v28 = v43[0];
    *(_OWORD *)(v28 + 16) = v32;
    *(_BYTE *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 40) = v30;
    *(_BYTE *)(v28 + 48) = v31;
    v33 = v39[2];
    v13 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v39[2] = v34;
    v11 = v40;
    v5 = v41;
    if (v40)
      goto LABEL_4;
LABEL_5:
    v13 = __OFADD__(v5, 1);
    v14 = v5 + 1;
    if (v13)
      goto LABEL_27;
    if (v14 >= v35)
      return;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (!v15)
      break;
LABEL_15:
    v40 = (v15 - 1) & v15;
    v41 = v14;
  }
  v16 = v14 + 1;
  if (v14 + 1 >= v35)
    return;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v14 + 2;
  if (v14 + 2 >= v35)
    return;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v14 + 3;
  if (v14 + 3 >= v35)
    return;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_14:
    v14 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v35)
      return;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

void *sub_2379FA124@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_2379F9A24(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_2379FA13C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2379FA170()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2379FA19C()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void sub_2379FA1C8(void (*a1)(_OWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  _OWORD v40[2];
  char v41;
  uint64_t v42;
  _QWORD v43[4];
  char v44;
  uint64_t v45;
  uint64_t v46;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568203C8);
  v4 = sub_237A880D0();
  v5 = 0;
  v36 = a3;
  v37 = (_QWORD *)v4;
  v8 = *(_QWORD *)(a3 + 64);
  v7 = a3 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v32 = v7;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v34 = v4 + 64;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v38 = (v11 - 1) & v11;
  v39 = v5;
  for (i = __clz(__rbit64(v11)) | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v14 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v36 + 48) + 8 * i);
    v18 = *(_QWORD *)(v36 + 56) + 48 * i;
    v19 = *(void **)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v22 = *(void **)(v18 + 16);
    v21 = *(_QWORD *)(v18 + 24);
    v23 = *(_BYTE *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 40);
    v43[0] = v19;
    v43[1] = v20;
    v43[2] = v22;
    v43[3] = v21;
    v44 = v23;
    v45 = v24;
    sub_237870090(v19, v20, v22, v21, v23);
    v25 = v46;
    a1(v40, v43);
    v46 = v25;
    if (v25)
    {
      swift_release();
      sub_2378702E0(v19, v20, v22, v21, v23);
      return;
    }
    sub_2378702E0(v19, v20, v22, v21, v23);
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v37[6] + 8 * i) = v17;
    v26 = v37[7] + 48 * i;
    v27 = v41;
    v28 = v42;
    v29 = v40[1];
    *(_OWORD *)v26 = v40[0];
    *(_OWORD *)(v26 + 16) = v29;
    *(_BYTE *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v28;
    v30 = v37[2];
    v13 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v37[2] = v31;
    v11 = v38;
    v5 = v39;
    if (v38)
      goto LABEL_4;
LABEL_5:
    v13 = __OFADD__(v5, 1);
    v14 = v5 + 1;
    if (v13)
      goto LABEL_27;
    if (v14 >= v33)
      return;
    v15 = *(_QWORD *)(v32 + 8 * v14);
    if (!v15)
      break;
LABEL_15:
    v38 = (v15 - 1) & v15;
    v39 = v14;
  }
  v16 = v14 + 1;
  if (v14 + 1 >= v33)
    return;
  v15 = *(_QWORD *)(v32 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v14 + 2;
  if (v14 + 2 >= v33)
    return;
  v15 = *(_QWORD *)(v32 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v14 + 3;
  if (v14 + 3 >= v33)
    return;
  v15 = *(_QWORD *)(v32 + 8 * v16);
  if (v15)
  {
LABEL_14:
    v14 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v33)
      return;
    v15 = *(_QWORD *)(v32 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_2379FA474(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2379FA4FC(uint64_t a1, void (*a2)(__int128 *__return_ptr, __int128 *))
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v4 = a1;
  v54 = MEMORY[0x24BEE4AF8];
  sub_2379D6310(0, v2, 0);
  v3 = v54;
  result = sub_2379FA474(v4);
  v7 = result;
  v8 = 0;
  v9 = v4 + 64;
  v34 = v4 + 88;
  v35 = v2;
  v36 = v6;
  v37 = v4 + 64;
  v38 = v4;
  while ((v7 & 0x8000000000000000) == 0 && (uint64_t)v7 < 1 << *(_BYTE *)(v4 + 32))
  {
    if ((*(_QWORD *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v4 + 36) != v6)
      goto LABEL_26;
    v40 = v8;
    v41 = v7 >> 6;
    v12 = *(_QWORD *)(v4 + 56) + 56 * v7;
    v14 = *(void **)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v15 = *(void **)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    v17 = *(_QWORD *)(v12 + 40);
    v18 = *(_BYTE *)(v12 + 48);
    v19 = *(_BYTE *)(v12 + 32);
    *(_QWORD *)&v43 = v14;
    *((_QWORD *)&v43 + 1) = v13;
    v44 = v15;
    v45 = (ValueMetadata *)v16;
    LOBYTE(v46) = v19;
    v47 = v17;
    v48 = v18;
    sub_237870090(v14, v13, v15, v16, v19);
    a2(&v49, &v43);
    sub_2378702E0(v14, v13, v15, v16, v19);
    v54 = v3;
    v21 = *(_QWORD *)(v3 + 16);
    v20 = *(_QWORD *)(v3 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_2379D6310(v20 > 1, v21 + 1, 1);
      v3 = v54;
    }
    v42 = v49;
    v22 = v3;
    v23 = v50;
    v24 = v51;
    v25 = v52;
    v26 = v53;
    v45 = &type metadata for ImageAsset;
    v46 = &protocol witness table for ImageAsset;
    v27 = swift_allocObject();
    *(_QWORD *)&v43 = v27;
    *(_OWORD *)(v27 + 16) = v42;
    *(_QWORD *)(v27 + 32) = v23;
    *(_QWORD *)(v27 + 40) = v24;
    v3 = v22;
    *(_BYTE *)(v27 + 48) = v25;
    *(_QWORD *)(v27 + 56) = v26;
    *(_QWORD *)(v22 + 16) = v21 + 1;
    result = sub_237870734(&v43, v22 + 40 * v21 + 32);
    v4 = v38;
    v10 = 1 << *(_BYTE *)(v38 + 32);
    if ((uint64_t)v7 >= v10)
      goto LABEL_27;
    v9 = v37;
    v28 = v7 >> 6;
    v29 = *(_QWORD *)(v37 + 8 * v41);
    if ((v29 & (1 << v7)) == 0)
      goto LABEL_28;
    v6 = v36;
    if (*(_DWORD *)(v38 + 36) != v36)
      goto LABEL_29;
    v30 = v29 & (-2 << (v7 & 0x3F));
    if (v30)
    {
      v10 = __clz(__rbit64(v30)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v11 = v35;
    }
    else
    {
      v31 = v41 + 1;
      v32 = (unint64_t)(v10 + 63) >> 6;
      v11 = v35;
      if (v41 + 1 < v32)
      {
        v33 = *(_QWORD *)(v37 + 8 * v31);
        if (!v33)
        {
          v31 = v41 + 2;
          if (v41 + 2 >= v32)
            goto LABEL_4;
          v33 = *(_QWORD *)(v37 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v28)
            {
              v33 = *(_QWORD *)(v34 + 8 * v28++);
              if (v33)
              {
                v31 = v28 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v10 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    v8 = v40 + 1;
    v7 = v10;
    if (v40 + 1 == v11)
      return v3;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_2379FA800(uint64_t a1)
{
  sub_2379F98CC(a1);
}

unint64_t sub_2379FA808()
{
  unint64_t result;

  result = qword_256826F00;
  if (!qword_256826F00)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2E14, &type metadata for Display.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826F00);
  }
  return result;
}

unint64_t sub_2379FA84C()
{
  unint64_t result;

  result = qword_256826F18;
  if (!qword_256826F18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display.DisplayType, &type metadata for Display.DisplayType);
    atomic_store(result, (unint64_t *)&qword_256826F18);
  }
  return result;
}

unint64_t sub_2379FA890()
{
  unint64_t result;

  result = qword_256826F48;
  if (!qword_256826F48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LocalNotification, &type metadata for LocalNotification);
    atomic_store(result, (unint64_t *)&qword_256826F48);
  }
  return result;
}

unint64_t sub_2379FA8D4()
{
  unint64_t result;

  result = qword_256826F60;
  if (!qword_256826F60)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ShadowConfiguration, &type metadata for ShadowConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826F60);
  }
  return result;
}

unint64_t sub_2379FA918()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256826F70;
  if (!qword_256826F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F68);
    v2 = sub_2379FA994((unint64_t *)&qword_256823D88, &qword_256823D80, (uint64_t (*)(void))sub_23797CB2C);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256826F70);
  }
  return result;
}

uint64_t sub_2379FA994(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x24BEE0D08];
    v8[1] = v7;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2379FAA00(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F08);
    v6[0] = MEMORY[0x24BEE0D38];
    v6[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B81FA98](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379FAA64()
{
  unint64_t result;

  result = qword_256826F88;
  if (!qword_256826F88)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display.DisplayType, &type metadata for Display.DisplayType);
    atomic_store(result, (unint64_t *)&qword_256826F88);
  }
  return result;
}

uint64_t sub_2379FAAA8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F20);
    v10 = sub_23786FAA0(a2, (uint64_t (*)(uint64_t))type metadata accessor for Layout, a3);
    result = MEMORY[0x23B81FA98](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379FAB2C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256826FA0;
  if (!qword_256826FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F38);
    v2 = sub_2379FAB98();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256826FA0);
  }
  return result;
}

unint64_t sub_2379FAB98()
{
  unint64_t result;

  result = qword_256826FA8;
  if (!qword_256826FA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LocalNotification, &type metadata for LocalNotification);
    atomic_store(result, (unint64_t *)&qword_256826FA8);
  }
  return result;
}

unint64_t sub_2379FABDC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256826FB0;
  if (!qword_256826FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F50);
    v2 = sub_2379FAC48();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256826FB0);
  }
  return result;
}

unint64_t sub_2379FAC48()
{
  unint64_t result;

  result = qword_256826FB8;
  if (!qword_256826FB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ShadowConfiguration, &type metadata for ShadowConfiguration);
    atomic_store(result, (unint64_t *)&qword_256826FB8);
  }
  return result;
}

unint64_t sub_2379FAC8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256826FC0;
  if (!qword_256826FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F68);
    v2 = sub_2379AADE0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE4AC0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256826FC0);
  }
  return result;
}

unint64_t sub_2379FACF4()
{
  unint64_t result;

  result = qword_256826FC8;
  if (!qword_256826FC8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display.DisplayType, &type metadata for Display.DisplayType);
    atomic_store(result, (unint64_t *)&qword_256826FC8);
  }
  return result;
}

unint64_t sub_2379FAD3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256826FD0;
  if (!qword_256826FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826FD8);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256826FD0);
  }
  return result;
}

unint64_t sub_2379FAD8C()
{
  unint64_t result;

  result = qword_256826FE0;
  if (!qword_256826FE0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display.DisplayType, &type metadata for Display.DisplayType);
    atomic_store(result, (unint64_t *)&qword_256826FE0);
  }
  return result;
}

unint64_t sub_2379FADD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256826FE8;
  if (!qword_256826FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826F08);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256826FE8);
  }
  return result;
}

__n128 sub_2379FAE30@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[2];
  *a2 = result;
  return result;
}

uint64_t sub_2379FAE40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 464);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379FAE4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 464) = v3;
  return result;
}

uint64_t destroy for Display(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 88) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 160) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160));
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 232) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 200), *(_QWORD *)(a1 + 208), *(void **)(a1 + 216), *(_QWORD *)(a1 + 224), *(_QWORD *)(a1 + 232));
  swift_bridgeObjectRelease();
  if ((~*(_DWORD *)(a1 + 304) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 272), *(_QWORD *)(a1 + 280), *(void **)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304));
  swift_bridgeObjectRelease();
  sub_2378702E0(*(void **)(a1 + 344), *(_QWORD *)(a1 + 352), *(void **)(a1 + 360), *(_QWORD *)(a1 + 368), *(_BYTE *)(a1 + 376));
  sub_2378702E0(*(void **)(a1 + 392), *(_QWORD *)(a1 + 400), *(void **)(a1 + 408), *(_QWORD *)(a1 + 416), *(_BYTE *)(a1 + 424));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Display(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 88);
  v6 = ~*(_DWORD *)(a2 + 88) & 0xFELL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(void **)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 64);
    v10 = *(void **)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 80);
    sub_237870090(v8, v9, v10, v11, v5);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 88) = v5;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  v13 = *(_QWORD *)(a2 + 160);
  v14 = ~*(_DWORD *)(a2 + 160) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v14)
  {
    v16 = *(void **)(a2 + 128);
    v17 = *(_QWORD *)(a2 + 136);
    v18 = *(void **)(a2 + 144);
    v19 = *(_QWORD *)(a2 + 152);
    sub_237870090(v16, v17, v18, v19, v13);
    *(_QWORD *)(a1 + 128) = v16;
    *(_QWORD *)(a1 + 136) = v17;
    *(_QWORD *)(a1 + 144) = v18;
    *(_QWORD *)(a1 + 152) = v19;
    *(_BYTE *)(a1 + 160) = v13;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v20 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v20;
  v21 = *(_QWORD *)(a2 + 232);
  v22 = ~*(_DWORD *)(a2 + 232) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v22)
  {
    v24 = *(void **)(a2 + 200);
    v25 = *(_QWORD *)(a2 + 208);
    v26 = *(void **)(a2 + 216);
    v27 = *(_QWORD *)(a2 + 224);
    sub_237870090(v24, v25, v26, v27, v21);
    *(_QWORD *)(a1 + 200) = v24;
    *(_QWORD *)(a1 + 208) = v25;
    *(_QWORD *)(a1 + 216) = v26;
    *(_QWORD *)(a1 + 224) = v27;
    *(_BYTE *)(a1 + 232) = v21;
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v23;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  }
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v28 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v28;
  v29 = *(_QWORD *)(a2 + 304);
  v30 = ~*(_DWORD *)(a2 + 304) & 0xFELL;
  swift_bridgeObjectRetain();
  if (v30)
  {
    v32 = *(void **)(a2 + 272);
    v33 = *(_QWORD *)(a2 + 280);
    v34 = *(void **)(a2 + 288);
    v35 = *(_QWORD *)(a2 + 296);
    sub_237870090(v32, v33, v34, v35, v29);
    *(_QWORD *)(a1 + 272) = v32;
    *(_QWORD *)(a1 + 280) = v33;
    *(_QWORD *)(a1 + 288) = v34;
    *(_QWORD *)(a1 + 296) = v35;
    *(_BYTE *)(a1 + 304) = v29;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  }
  else
  {
    v31 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v31;
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  }
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  v36 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v36;
  v37 = *(void **)(a2 + 344);
  v38 = *(_QWORD *)(a2 + 352);
  v39 = *(void **)(a2 + 360);
  v40 = *(_QWORD *)(a2 + 368);
  v41 = *(_BYTE *)(a2 + 376);
  swift_bridgeObjectRetain();
  sub_237870090(v37, v38, v39, v40, v41);
  *(_QWORD *)(a1 + 344) = v37;
  *(_QWORD *)(a1 + 352) = v38;
  *(_QWORD *)(a1 + 360) = v39;
  *(_QWORD *)(a1 + 368) = v40;
  *(_BYTE *)(a1 + 376) = v41;
  v42 = *(void **)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  v43 = *(_QWORD *)(a2 + 400);
  v44 = *(void **)(a2 + 408);
  v45 = *(_QWORD *)(a2 + 416);
  v46 = *(_BYTE *)(a2 + 424);
  sub_237870090(v42, v43, v44, v45, v46);
  *(_QWORD *)(a1 + 392) = v42;
  *(_QWORD *)(a1 + 400) = v43;
  *(_QWORD *)(a1 + 408) = v44;
  *(_QWORD *)(a1 + 416) = v45;
  *(_BYTE *)(a1 + 424) = v46;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  v47 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v47;
  v48 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Display(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char v97;
  void *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  char v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char v107;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = (_OWORD *)(a1 + 56);
  v5 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 88);
  v7 = v6 & 0xFE;
  if ((~*(_DWORD *)(a1 + 88) & 0xFELL) != 0)
  {
    if (v7 == 254)
    {
      sub_237988280(a1 + 56);
      v11 = *(_OWORD *)(a2 + 72);
      v10 = *(_OWORD *)(a2 + 88);
      *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v11;
      *(_OWORD *)(a1 + 88) = v10;
      goto LABEL_9;
    }
    v16 = *(void **)(a2 + 56);
    v17 = *(_QWORD *)(a2 + 64);
    v18 = *(void **)(a2 + 72);
    v19 = *(_QWORD *)(a2 + 80);
    sub_237870090(v16, v17, v18, v19, *(_QWORD *)(a2 + 88));
    v20 = *(void **)(a1 + 56);
    v21 = *(_QWORD *)(a1 + 64);
    v22 = *(void **)(a1 + 72);
    v23 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 72) = v18;
    *(_QWORD *)(a1 + 80) = v19;
    v24 = *(_BYTE *)(a1 + 88);
    *(_BYTE *)(a1 + 88) = v6;
    sub_2378702E0(v20, v21, v22, v23, v24);
  }
  else
  {
    if (v7 == 254)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v9;
      *v4 = v8;
      goto LABEL_9;
    }
    v12 = *(void **)(a2 + 56);
    v13 = *(_QWORD *)(a2 + 64);
    v14 = *(void **)(a2 + 72);
    v15 = *(_QWORD *)(a2 + 80);
    sub_237870090(v12, v13, v14, v15, *(_QWORD *)(a2 + 88));
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 80) = v15;
    *(_BYTE *)(a1 + 88) = v6;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
LABEL_9:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (_OWORD *)(a1 + 128);
  v26 = (_OWORD *)(a2 + 128);
  v27 = *(_QWORD *)(a2 + 160);
  v28 = v27 & 0xFE;
  if ((~*(_DWORD *)(a1 + 160) & 0xFELL) != 0)
  {
    if (v28 == 254)
    {
      sub_237988280(a1 + 128);
      v32 = *(_OWORD *)(a2 + 144);
      v31 = *(_OWORD *)(a2 + 160);
      *v25 = *v26;
      *(_OWORD *)(a1 + 144) = v32;
      *(_OWORD *)(a1 + 160) = v31;
      goto LABEL_17;
    }
    v37 = *(void **)(a2 + 128);
    v38 = *(_QWORD *)(a2 + 136);
    v39 = *(void **)(a2 + 144);
    v40 = *(_QWORD *)(a2 + 152);
    sub_237870090(v37, v38, v39, v40, *(_QWORD *)(a2 + 160));
    v41 = *(void **)(a1 + 128);
    v42 = *(_QWORD *)(a1 + 136);
    v43 = *(void **)(a1 + 144);
    v44 = *(_QWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 128) = v37;
    *(_QWORD *)(a1 + 136) = v38;
    *(_QWORD *)(a1 + 144) = v39;
    *(_QWORD *)(a1 + 152) = v40;
    v45 = *(_BYTE *)(a1 + 160);
    *(_BYTE *)(a1 + 160) = v27;
    sub_2378702E0(v41, v42, v43, v44, v45);
  }
  else
  {
    if (v28 == 254)
    {
      v29 = *v26;
      v30 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v30;
      *v25 = v29;
      goto LABEL_17;
    }
    v33 = *(void **)(a2 + 128);
    v34 = *(_QWORD *)(a2 + 136);
    v35 = *(void **)(a2 + 144);
    v36 = *(_QWORD *)(a2 + 152);
    sub_237870090(v33, v34, v35, v36, *(_QWORD *)(a2 + 160));
    *(_QWORD *)(a1 + 128) = v33;
    *(_QWORD *)(a1 + 136) = v34;
    *(_QWORD *)(a1 + 144) = v35;
    *(_QWORD *)(a1 + 152) = v36;
    *(_BYTE *)(a1 + 160) = v27;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
LABEL_17:
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = (_OWORD *)(a1 + 200);
  v47 = (_OWORD *)(a2 + 200);
  v48 = *(_QWORD *)(a2 + 232);
  v49 = v48 & 0xFE;
  if ((~*(_DWORD *)(a1 + 232) & 0xFELL) != 0)
  {
    if (v49 == 254)
    {
      sub_237988280(a1 + 200);
      v53 = *(_OWORD *)(a2 + 216);
      v52 = *(_OWORD *)(a2 + 232);
      *v46 = *v47;
      *(_OWORD *)(a1 + 216) = v53;
      *(_OWORD *)(a1 + 232) = v52;
      goto LABEL_25;
    }
    v58 = *(void **)(a2 + 200);
    v59 = *(_QWORD *)(a2 + 208);
    v60 = *(void **)(a2 + 216);
    v61 = *(_QWORD *)(a2 + 224);
    sub_237870090(v58, v59, v60, v61, *(_QWORD *)(a2 + 232));
    v62 = *(void **)(a1 + 200);
    v63 = *(_QWORD *)(a1 + 208);
    v64 = *(void **)(a1 + 216);
    v65 = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 200) = v58;
    *(_QWORD *)(a1 + 208) = v59;
    *(_QWORD *)(a1 + 216) = v60;
    *(_QWORD *)(a1 + 224) = v61;
    v66 = *(_BYTE *)(a1 + 232);
    *(_BYTE *)(a1 + 232) = v48;
    sub_2378702E0(v62, v63, v64, v65, v66);
  }
  else
  {
    if (v49 == 254)
    {
      v50 = *v47;
      v51 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v51;
      *v46 = v50;
      goto LABEL_25;
    }
    v54 = *(void **)(a2 + 200);
    v55 = *(_QWORD *)(a2 + 208);
    v56 = *(void **)(a2 + 216);
    v57 = *(_QWORD *)(a2 + 224);
    sub_237870090(v54, v55, v56, v57, *(_QWORD *)(a2 + 232));
    *(_QWORD *)(a1 + 200) = v54;
    *(_QWORD *)(a1 + 208) = v55;
    *(_QWORD *)(a1 + 216) = v56;
    *(_QWORD *)(a1 + 224) = v57;
    *(_BYTE *)(a1 + 232) = v48;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
LABEL_25:
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = (_OWORD *)(a1 + 272);
  v68 = (_OWORD *)(a2 + 272);
  v69 = *(_QWORD *)(a2 + 304);
  v70 = v69 & 0xFE;
  if ((~*(_DWORD *)(a1 + 304) & 0xFELL) != 0)
  {
    if (v70 == 254)
    {
      sub_237988280(a1 + 272);
      v74 = *(_OWORD *)(a2 + 288);
      v73 = *(_OWORD *)(a2 + 304);
      *v67 = *v68;
      *(_OWORD *)(a1 + 288) = v74;
      *(_OWORD *)(a1 + 304) = v73;
      goto LABEL_33;
    }
    v79 = *(void **)(a2 + 272);
    v80 = *(_QWORD *)(a2 + 280);
    v81 = *(void **)(a2 + 288);
    v82 = *(_QWORD *)(a2 + 296);
    sub_237870090(v79, v80, v81, v82, *(_QWORD *)(a2 + 304));
    v83 = *(void **)(a1 + 272);
    v84 = *(_QWORD *)(a1 + 280);
    v85 = *(void **)(a1 + 288);
    v86 = *(_QWORD *)(a1 + 296);
    *(_QWORD *)(a1 + 272) = v79;
    *(_QWORD *)(a1 + 280) = v80;
    *(_QWORD *)(a1 + 288) = v81;
    *(_QWORD *)(a1 + 296) = v82;
    v87 = *(_BYTE *)(a1 + 304);
    *(_BYTE *)(a1 + 304) = v69;
    sub_2378702E0(v83, v84, v85, v86, v87);
LABEL_32:
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    goto LABEL_33;
  }
  if (v70 != 254)
  {
    v75 = *(void **)(a2 + 272);
    v76 = *(_QWORD *)(a2 + 280);
    v77 = *(void **)(a2 + 288);
    v78 = *(_QWORD *)(a2 + 296);
    sub_237870090(v75, v76, v77, v78, *(_QWORD *)(a2 + 304));
    *(_QWORD *)(a1 + 272) = v75;
    *(_QWORD *)(a1 + 280) = v76;
    *(_QWORD *)(a1 + 288) = v77;
    *(_QWORD *)(a1 + 296) = v78;
    *(_BYTE *)(a1 + 304) = v69;
    goto LABEL_32;
  }
  v71 = *v68;
  v72 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v72;
  *v67 = v71;
LABEL_33:
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88 = *(void **)(a2 + 344);
  v89 = *(_QWORD *)(a2 + 352);
  v90 = *(void **)(a2 + 360);
  v91 = *(_QWORD *)(a2 + 368);
  v92 = *(_BYTE *)(a2 + 376);
  sub_237870090(v88, v89, v90, v91, v92);
  v93 = *(void **)(a1 + 344);
  v94 = *(_QWORD *)(a1 + 352);
  v95 = *(void **)(a1 + 360);
  v96 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 344) = v88;
  *(_QWORD *)(a1 + 352) = v89;
  *(_QWORD *)(a1 + 360) = v90;
  *(_QWORD *)(a1 + 368) = v91;
  v97 = *(_BYTE *)(a1 + 376);
  *(_BYTE *)(a1 + 376) = v92;
  sub_2378702E0(v93, v94, v95, v96, v97);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  v98 = *(void **)(a2 + 392);
  v99 = *(_QWORD *)(a2 + 400);
  v100 = *(void **)(a2 + 408);
  v101 = *(_QWORD *)(a2 + 416);
  v102 = *(_BYTE *)(a2 + 424);
  sub_237870090(v98, v99, v100, v101, v102);
  v103 = *(void **)(a1 + 392);
  v104 = *(_QWORD *)(a1 + 400);
  v105 = *(void **)(a1 + 408);
  v106 = *(_QWORD *)(a1 + 416);
  *(_QWORD *)(a1 + 392) = v98;
  *(_QWORD *)(a1 + 400) = v99;
  *(_QWORD *)(a1 + 408) = v100;
  *(_QWORD *)(a1 + 416) = v101;
  v107 = *(_BYTE *)(a1 + 424);
  *(_BYTE *)(a1 + 424) = v102;
  sub_2378702E0(v103, v104, v105, v106, v107);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  return a1;
}

void *__swift_memcpy480_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1E0uLL);
}

uint64_t assignWithTake for Display(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  char v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  __int128 v52;
  char v53;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_DWORD *)(a1 + 88);
  if ((~(_BYTE)v5 & 0xFE) == 0)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 88);
  if ((~*(_DWORD *)(a2 + 88) & 0xFELL) == 0)
  {
    sub_237988280(a1 + 56);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  v8 = *(void **)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(void **)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v6;
  sub_2378702E0(v8, v9, v10, v11, v5);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
LABEL_6:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_DWORD *)(a1 + 160);
  if ((~(_BYTE)v13 & 0xFE) == 0)
  {
LABEL_9:
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_11;
  }
  v14 = *(_QWORD *)(a2 + 160);
  if ((~*(_DWORD *)(a2 + 160) & 0xFELL) == 0)
  {
    sub_237988280(a1 + 128);
    goto LABEL_9;
  }
  v16 = *(void **)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 136);
  v18 = *(void **)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 152);
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  *(_BYTE *)(a1 + 160) = v14;
  sub_2378702E0(v16, v17, v18, v19, v13);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
LABEL_11:
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_DWORD *)(a1 + 232);
  if ((~(_BYTE)v22 & 0xFE) == 0)
  {
LABEL_14:
    v24 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v24;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    goto LABEL_16;
  }
  v23 = *(_QWORD *)(a2 + 232);
  if ((~*(_DWORD *)(a2 + 232) & 0xFELL) == 0)
  {
    sub_237988280(a1 + 200);
    goto LABEL_14;
  }
  v25 = *(void **)(a1 + 200);
  v26 = *(_QWORD *)(a1 + 208);
  v27 = *(void **)(a1 + 216);
  v28 = *(_QWORD *)(a1 + 224);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = v23;
  sub_2378702E0(v25, v26, v27, v28, v22);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
LABEL_16:
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v29 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_DWORD *)(a1 + 304);
  if ((~(_BYTE)v30 & 0xFE) != 0)
  {
    v31 = *(_QWORD *)(a2 + 304);
    if ((~*(_DWORD *)(a2 + 304) & 0xFELL) != 0)
    {
      v33 = *(void **)(a1 + 272);
      v34 = *(_QWORD *)(a1 + 280);
      v35 = *(void **)(a1 + 288);
      v36 = *(_QWORD *)(a1 + 296);
      v37 = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 288) = v37;
      *(_BYTE *)(a1 + 304) = v31;
      sub_2378702E0(v33, v34, v35, v36, v30);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      goto LABEL_21;
    }
    sub_237988280(a1 + 272);
  }
  v32 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v32;
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
LABEL_21:
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  v38 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_BYTE *)(a2 + 376);
  v40 = *(void **)(a1 + 344);
  v41 = *(_QWORD *)(a1 + 352);
  v42 = *(void **)(a1 + 360);
  v43 = *(_QWORD *)(a1 + 368);
  v44 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v44;
  v45 = *(_BYTE *)(a1 + 376);
  *(_BYTE *)(a1 + 376) = v39;
  sub_2378702E0(v40, v41, v42, v43, v45);
  v46 = *(_QWORD *)(a2 + 416);
  v47 = *(_BYTE *)(a2 + 424);
  v48 = *(void **)(a1 + 392);
  v49 = *(_QWORD *)(a1 + 400);
  v50 = *(void **)(a1 + 408);
  v51 = *(_QWORD *)(a1 + 416);
  v52 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v52;
  *(_QWORD *)(a1 + 416) = v46;
  v53 = *(_BYTE *)(a1 + 424);
  *(_BYTE *)(a1 + 424) = v47;
  sub_2378702E0(v48, v49, v50, v51, v53);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  return a1;
}

uint64_t getEnumTagSinglePayload for Display(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 480))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Display(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 472) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 480) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 480) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Display()
{
  return &type metadata for Display;
}

uint64_t storeEnumTagSinglePayload for Display.DisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2379FBC48 + 4 * byte_237AA2A9B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2379FBC7C + 4 * byte_237AA2A96[v4]))();
}

uint64_t sub_2379FBC7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379FBC84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379FBC8CLL);
  return result;
}

uint64_t sub_2379FBC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379FBCA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2379FBCA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379FBCAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Display.DisplayType()
{
  return &type metadata for Display.DisplayType;
}

uint64_t getEnumTagSinglePayload for Display.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Display.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_2379FBDA4 + 4 * byte_237AA2AA5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_2379FBDD8 + 4 * byte_237AA2AA0[v4]))();
}

uint64_t sub_2379FBDD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379FBDE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379FBDE8);
  return result;
}

uint64_t sub_2379FBDF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379FBDFCLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_2379FBE00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379FBE08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Display.CodingKeys()
{
  return &type metadata for Display.CodingKeys;
}

unint64_t sub_2379FBE28()
{
  unint64_t result;

  result = qword_256826FF0;
  if (!qword_256826FF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2DEC, &type metadata for Display.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826FF0);
  }
  return result;
}

unint64_t sub_2379FBE70()
{
  unint64_t result;

  result = qword_256826FF8;
  if (!qword_256826FF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2D5C, &type metadata for Display.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826FF8);
  }
  return result;
}

unint64_t sub_2379FBEB8()
{
  unint64_t result;

  result = qword_256827000;
  if (!qword_256827000)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2D84, &type metadata for Display.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827000);
  }
  return result;
}

uint64_t sub_2379FBEFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7374756F79616CLL && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x797469736E6564 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73614D6570616873 && a2 == 0xE90000000000006BLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F697265746E69 && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x63634F6C65656877 && a2 == 0xEE006E6F6973756CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB2140 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x676F4C656C707061 && a2 == 0xE90000000000006FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB2160 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000237AB2180 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB21B0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x73776F64616873 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xEF73656972746E45)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

unint64_t sub_2379FC56C()
{
  unint64_t result;

  result = qword_256827008;
  if (!qword_256827008)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display.DisplayType, &type metadata for Display.DisplayType);
    atomic_store(result, (unint64_t *)&qword_256827008);
  }
  return result;
}

uint64_t sub_2379FC5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6;
  char v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[6];
  _BYTE v17[25];

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_2378D2DB4(a1, a2), (v7 & 1) != 0))
  {
    v8 = (__int128 *)(*(_QWORD *)(a3 + 56) + (v6 << 7));
    v9 = v8[3];
    v11 = *v8;
    v10 = v8[1];
    v16[2] = v8[2];
    v16[3] = v9;
    v16[0] = v11;
    v16[1] = v10;
    v13 = v8[5];
    v12 = v8[6];
    v14 = v8[4];
    *(_OWORD *)&v17[9] = *(__int128 *)((char *)v8 + 105);
    v16[5] = v13;
    *(_OWORD *)v17 = v12;
    v16[4] = v14;
    memmove(a4, v8, 0x79uLL);
    nullsub_1(a4);
    return sub_23787AC58((uint64_t)v16);
  }
  else
  {
    sub_2378CFEF0(v16);
    return sub_237A007EC((uint64_t)v16, (uint64_t)a4);
  }
}

uint64_t EditableTheme.layoutStyles()()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v1 = *v0;
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v2 = sub_2378CD378(v1);
  swift_bridgeObjectRelease();
  v4 = v2;
  sub_2378CEEB0((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  swift_release_n();
  return (uint64_t)v4;
}

void EditableTheme.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4B00];
  *a1 = MEMORY[0x24BEE4B08];
  a1[1] = v1;
}

uint64_t sub_2379FC70C()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v102;
  uint64_t v103;
  _BOOL8 v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  int v128;
  char v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  _OWORD *v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char v150;
  uint64_t v151;
  _BOOL8 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  _QWORD *v157;
  _OWORD *v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  __int128 *v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  char v186;
  uint64_t v187;
  _BOOL8 v188;
  char v189;
  char v190;
  unint64_t v191;
  uint64_t v192;
  _BOOL8 v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  char v197;
  _QWORD *v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t result;
  void *v204;
  id v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int64_t v210;
  uint64_t v211;
  int64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  int64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  char v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  int64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  _OWORD *v253;
  id v254;
  _OWORD v255[6];
  _OWORD v256[2];
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  _OWORD v263[2];
  _QWORD *v264;
  _QWORD *v265;

  v3 = *v0;
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x24BEE4AF8];
  v213 = sub_2378D1B10(MEMORY[0x24BEE4AF8]);
  v214 = v3;
  v209 = v3 + 56;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v210 = (unint64_t)(v5 + 63) >> 6;
  v7 = v6 & *(_QWORD *)(v3 + 56);
  swift_bridgeObjectRetain();
  v8 = 0;
  if (!v7)
    goto LABEL_5;
  while (2)
  {
    v211 = (v7 - 1) & v7;
    v9 = __clz(__rbit64(v7)) | (v8 << 6);
    v10 = v214;
LABEL_20:
    v212 = v8;
    v14 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 56 * v9);
    v215 = *v14;
    v15 = v14[2];
    v16 = *(_QWORD *)(v15 + 16);
    v219 = v14[1];
    v220 = v15;
    if (!v16)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v138 = v4;
      goto LABEL_129;
    }
    v265 = (_QWORD *)v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2379D6460(0, v16, 0);
    v17 = sub_2379FA470(v15);
    if ((v17 & 0x8000000000000000) != 0 || (uint64_t)v17 >= 1 << *(_BYTE *)(v15 + 32))
    {
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
      goto LABEL_189;
    }
    v19 = v15 + 64;
    v216 = v18;
    v217 = v15 + 64;
    v208 = v15 + 88;
    v20 = 1;
    v218 = v16;
    while (1)
    {
      if ((*(_QWORD *)(v19 + 8 * (v17 >> 6)) & (1 << v17)) == 0)
        goto LABEL_182;
      if (*(_DWORD *)(v15 + 36) != v18)
        goto LABEL_183;
      v222 = v18;
      v223 = 1 << v17;
      v224 = v17 >> 6;
      v221 = v20;
      v21 = *(_QWORD *)(v15 + 56);
      v22 = *(_QWORD *)(v15 + 48) + 112 * v17;
      v232 = *(_QWORD *)v22;
      v23 = *(_QWORD *)(v22 + 24);
      v243 = *(_QWORD *)(v22 + 8);
      v244 = *(_QWORD *)(v22 + 16);
      v241 = v23;
      v24 = *(_QWORD *)(v22 + 32);
      v25 = *(_QWORD *)(v22 + 40);
      v26 = *(_QWORD *)(v22 + 48);
      v27 = *(_QWORD *)(v22 + 56);
      v245 = v26;
      v235 = v27;
      v28 = *(_BYTE *)(v22 + 64);
      v29 = *(_QWORD *)(v22 + 80);
      v229 = *(_QWORD *)(v22 + 72);
      v1 = *(_QWORD *)(v22 + 88);
      v230 = *(_BYTE *)(v22 + 96);
      v233 = *(_QWORD *)(v22 + 104);
      v226 = v17;
      v30 = *(_QWORD *)(v21 + 8 * v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v231 = v28;
      sub_23787978C(v23, v24, v25, v26, v27, v28);
      sub_2378797D4(v29);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v234 = v24;
      sub_23787978C(v23, v24, v25, v26, v27, v28);
      sub_2378797D4(v29);
      swift_retain();
      v242 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v23, v24, v25, v26, v27, v28);
      v240 = v29;
      sub_23787A14C(v29);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v23, v24, v25, v26, v27, v28);
      sub_2378797D4(v29);
      swift_retain();
      *(_QWORD *)&v257 = v232;
      *((_QWORD *)&v257 + 1) = v243;
      sub_237879800();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v31 = sub_237A87E3C();
      v225 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v23, v24, v25, v26, v27, v28);
      sub_2378797D4(v29);
      swift_retain();
      v33 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
      v238 = *(_QWORD *)(v33 + 16);
      v239 = v25;
      v227 = v31;
      if (!v238)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v2) = v28;
        sub_237876B84(v23, v24, v25, v245, v27, v28);
        sub_23787A14C(v29);
        swift_release();
        v108 = (_QWORD *)MEMORY[0x24BEE4B00];
        goto LABEL_100;
      }
      v237 = v33 + 32;
      swift_bridgeObjectRetain();
      v34 = 0;
      v35 = (_QWORD *)MEMORY[0x24BEE4B00];
      v236 = v1;
      v36 = v242;
      do
      {
        v39 = v237 + 24 * v34;
        v40 = *(_QWORD *)v39;
        v41 = *(_QWORD *)(v39 + 8);
        v42 = *(unsigned __int8 *)(v39 + 16);
        v43 = *(_QWORD *)(v36 + 16);
        sub_23787A11C(*(_QWORD *)v39, v41, *(_BYTE *)(v39 + 16));
        sub_23787A11C(v40, v41, v42);
        v247 = v35;
        v248 = v42;
        v246 = v34;
        if (!v43)
        {
          swift_bridgeObjectRetain();
          v45 = v42;
          goto LABEL_62;
        }
        sub_23787A11C(v40, v41, v42);
        swift_bridgeObjectRetain();
        v44 = sub_2378D2DC4(v40, v41, v42);
        v45 = v42;
        if ((v46 & 1) == 0)
        {
          sub_23787A134(v40, v41, v42);
LABEL_62:
          __asm { BR              X8 }
        }
        v47 = (uint64_t *)(*(_QWORD *)(v36 + 56) + 24 * v44);
        v48 = *v47;
        v2 = v47[1];
        v1 = v47[2];
        sub_23787D104(*v47, v2);
        sub_23787A134(v40, v41, v45);
        if (v2 < 0)
        {
          v264 = (_QWORD *)v48;
          goto LABEL_80;
        }
        v228 = v41;
        if (!*(_QWORD *)(v244 + 16))
          goto LABEL_196;
        LOBYTE(v257) = v2 & 1;
        v49 = sub_2378D2D10(v48, v2 & 1, v1);
        if ((v50 & 1) == 0)
          goto LABEL_196;
        v51 = *(_QWORD *)(*(_QWORD *)(v244 + 56) + 8 * v49);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC68);
        v52 = swift_allocObject();
        *(_QWORD *)(v52 + 32) = 0;
        *(_QWORD *)(v52 + 40) = v51;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2568203F0);
        v53 = sub_237A880E8();
        v54 = *(double *)(v52 + 32);
        v55 = *(_QWORD *)(v52 + 40);
        v56 = sub_2378D31FC(v54);
        if ((v57 & 1) != 0)
          goto LABEL_178;
        v58 = v53 + 64;
        *(_QWORD *)(v53 + 64 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
        v59 = 8 * v56;
        *(double *)(*(_QWORD *)(v53 + 48) + v59) = v54;
        *(_QWORD *)(*(_QWORD *)(v53 + 56) + v59) = v55;
        v60 = *(_QWORD *)(v53 + 16);
        v11 = __OFADD__(v60, 1);
        v61 = v60 + 1;
        if (v11)
          goto LABEL_179;
        *(_QWORD *)(v53 + 16) = v61;
        swift_setDeallocating();
        swift_retain_n();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC70);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v62 = *(_QWORD *)(v53 + 16);
        if (v62)
        {
          *(_QWORD *)&v257 = MEMORY[0x24BEE4AF8];
          sub_2379D6428(0, v62, 0);
          v63 = *(_BYTE *)(v53 + 32);
          v64 = *(_QWORD *)(v53 + 64);
          if (v64)
          {
            v65 = 0;
            goto LABEL_40;
          }
          v66 = 1 << v63;
          if ((v63 & 0x3Fu) >= 7)
          {
            v64 = *(_QWORD *)(v53 + 72);
            if (v64)
            {
              v65 = 1;
LABEL_40:
              v66 = __clz(__rbit64(v64)) + (v65 << 6);
            }
            else
            {
              v112 = 0;
              v113 = (unint64_t)(v66 + 63) >> 6;
              if (v113 <= 2)
                v113 = 2;
              v114 = v113 - 2;
              while (v114 != v112)
              {
                v64 = *(_QWORD *)(v53 + 80 + 8 * v112++);
                if (v64)
                {
                  v65 = v112 + 1;
                  goto LABEL_40;
                }
              }
            }
          }
          v67 = 0;
          v68 = v257;
          v250 = *(_DWORD *)(v53 + 36);
          v251 = v53 + 64;
          v249 = v62;
          do
          {
            if (v67 == v62)
            {
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
              JUMPOUT(0x2379FE214);
            }
            if (v66 < 0)
              goto LABEL_165;
            if (v66 >= 1 << v63)
              goto LABEL_166;
            v70 = (unint64_t)v66 >> 6;
            if ((*(_QWORD *)(v58 + 8 * ((unint64_t)v66 >> 6)) & (1 << v66)) == 0)
              goto LABEL_167;
            v71 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v66);
            v72 = sub_237A87B9C();
            v252 = v73;
            v253 = (_OWORD *)v72;
            *(_QWORD *)&v257 = v68;
            v75 = *(_QWORD *)(v68 + 16);
            v74 = *(_QWORD *)(v68 + 24);
            swift_retain();
            if (v75 >= v74 >> 1)
            {
              sub_2379D6428(v74 > 1, v75 + 1, 1);
              v68 = v257;
            }
            *(_QWORD *)(v68 + 16) = v75 + 1;
            v76 = (_QWORD *)(v68 + 24 * v75);
            v76[4] = v253;
            v76[5] = v252;
            v76[6] = v71;
            v63 = *(_BYTE *)(v53 + 32);
            v69 = 1 << v63;
            if (v66 >= 1 << v63)
              goto LABEL_168;
            v58 = v53 + 64;
            v77 = *(_QWORD *)(v251 + 8 * v70);
            if ((v77 & (1 << v66)) == 0)
              goto LABEL_169;
            if (v250 != *(_DWORD *)(v53 + 36))
              goto LABEL_170;
            v78 = v77 & (-2 << (v66 & 0x3F));
            if (v78)
            {
              v69 = __clz(__rbit64(v78)) | v66 & 0xFFFFFFFFFFFFFFC0;
              v62 = v249;
            }
            else
            {
              v79 = v70 + 1;
              v80 = (v69 + 63) >> 6;
              v62 = v249;
              if (v70 + 1 < v80)
              {
                v81 = *(_QWORD *)(v251 + 8 * v79);
                if (v81)
                {
LABEL_59:
                  v69 = __clz(__rbit64(v81)) + (v79 << 6);
                }
                else
                {
                  while (v80 - 2 != v70)
                  {
                    v81 = *(_QWORD *)(v53 + 80 + 8 * v70++);
                    if (v81)
                    {
                      v79 = v70 + 1;
                      goto LABEL_59;
                    }
                  }
                }
              }
            }
            ++v67;
            v66 = v69;
          }
          while (v67 != v62);
          swift_release();
          goto LABEL_66;
        }
        swift_release();
        v68 = MEMORY[0x24BEE4AF8];
LABEL_66:
        v82 = v68;
        if (*(_QWORD *)(v68 + 16))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
          v83 = (_QWORD *)sub_237A880E8();
          v84 = *(_QWORD *)(v82 + 16);
          v264 = v83;
          v85 = v40;
          if (v84)
          {
            swift_bridgeObjectRetain_n();
            v86 = 0;
            v253 = (_OWORD *)v82;
            v87 = (unint64_t *)(v82 + 48);
            while (1)
            {
              v88 = v86 + 1;
              if (__OFADD__(v86, 1))
                break;
              v89 = *(v87 - 1);
              v1 = *v87;
              *(_QWORD *)&v257 = *(v87 - 2);
              v2 = v257;
              *((_QWORD *)&v257 + 1) = v89;
              swift_bridgeObjectRetain();
              swift_retain();
              v90 = sub_2378D2DB8(v2, v89);
              v92 = v83[2];
              v93 = (v91 & 1) == 0;
              v11 = __OFADD__(v92, v93);
              v94 = v92 + v93;
              if (v11)
                goto LABEL_172;
              v95 = v91;
              if (v83[3] < v94)
              {
                sub_2378C8D1C(v94, 1);
                v83 = v264;
                v90 = sub_2378D2DB8(v2, v89);
                if ((v95 & 1) != (v96 & 1))
                {
                  sub_237A8858C();
                  __break(1u);
                  goto LABEL_194;
                }
              }
              if ((v95 & 1) != 0)
                goto LABEL_191;
              v83[(v90 >> 6) + 8] |= 1 << v90;
              v97 = (uint64_t *)(v83[6] + 16 * v90);
              *v97 = v2;
              v97[1] = v89;
              *(_QWORD *)(v83[7] + 8 * v90) = v1;
              v98 = v83[2];
              v11 = __OFADD__(v98, 1);
              v99 = v98 + 1;
              if (v11)
                goto LABEL_173;
              v83[2] = v99;
              v87 += 3;
              ++v86;
              if (v88 == v84)
              {
                swift_release();
                swift_bridgeObjectRelease_n();
                goto LABEL_79;
              }
            }
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
        }
        else
        {
          v85 = v40;
          v83 = (_QWORD *)MEMORY[0x24BEE4B00];
          v264 = (_QWORD *)MEMORY[0x24BEE4B00];
        }
        swift_release();
LABEL_79:
        swift_bridgeObjectRelease();
        v264 = v83;
        v40 = v85;
        v41 = v228;
LABEL_80:
        v100 = v264;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v257 = v247;
        v2 = v40;
        v48 = sub_2378D2DC4(v40, v41, v248);
        v103 = v247[2];
        v104 = (v102 & 1) == 0;
        v105 = v103 + v104;
        if (__OFADD__(v103, v104))
        {
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        v1 = v102;
        if (v247[3] >= v105)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_2378C47F0();
        }
        else
        {
          sub_2378C8570(v105, isUniquelyReferenced_nonNull_native);
          v106 = sub_2378D2DC4(v40, v41, v248);
          if ((v1 & 1) != (v107 & 1))
            goto LABEL_195;
          v48 = v106;
        }
        v108 = (_QWORD *)v257;
        if ((v1 & 1) != 0)
        {
          v37 = *(_QWORD *)(v257 + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v37 + 8 * v48) = v100;
          v38 = v248;
        }
        else
        {
          *(_QWORD *)(v257 + 8 * (v48 >> 6) + 64) |= 1 << v48;
          v109 = v108[6] + 24 * v48;
          *(_QWORD *)v109 = v2;
          *(_QWORD *)(v109 + 8) = v41;
          v38 = v248;
          *(_BYTE *)(v109 + 16) = v248;
          *(_QWORD *)(v108[7] + 8 * v48) = v100;
          v110 = v108[2];
          v11 = __OFADD__(v110, 1);
          v111 = v110 + 1;
          if (v11)
            goto LABEL_176;
          v108[2] = v111;
          sub_23787A11C(v2, v41, v248);
        }
        swift_bridgeObjectRelease();
        v34 = v246 + 1;
        sub_23787A134(v2, v41, v38);
        sub_23787A134(v2, v41, v38);
        swift_bridgeObjectRelease();
        v35 = v108;
        v1 = v236;
        v36 = v242;
      }
      while (v246 + 1 != v238);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      LOBYTE(v2) = v231;
      sub_237876B84(v241, v234, v239, v245, v235, v231);
      sub_23787A14C(v240);
      swift_release();
LABEL_100:
      swift_bridgeObjectRelease();
      swift_retain();
      sub_23787978C(v241, v234, v239, v245, v235, v2);
      sub_2378797D4(v240);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_237876B84(v241, v234, v239, v245, v235, v2);
      sub_23787A14C(v240);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_237876B84(v241, v234, v239, v245, v235, v2);
      sub_23787A14C(v240);
      swift_bridgeObjectRelease();
      swift_release();
      v115 = v265;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v116 = v115;
        v117 = v227;
      }
      else
      {
        sub_2379D6460(0, v115[2] + 1, 1);
        v117 = v227;
        v116 = v265;
      }
      v119 = v116[2];
      v118 = v116[3];
      v121 = v239;
      v120 = v240;
      v122 = v2;
      v123 = v235;
      v124 = v245;
      v125 = v241;
      v126 = v243;
      if (v119 >= v118 >> 1)
      {
        sub_2379D6460(v118 > 1, v119 + 1, 1);
        v117 = v227;
        v126 = v243;
        v120 = v240;
        v125 = v241;
        v121 = v239;
        v124 = v245;
        v123 = v235;
        v122 = v2;
        v116 = v265;
      }
      v116[2] = v119 + 1;
      v127 = &v116[16 * v119];
      v127[4] = v232;
      v127[5] = v126;
      v127[6] = v117;
      v127[7] = v225;
      v127[8] = v233;
      v127[9] = v108;
      v127[10] = v125;
      v127[11] = v234;
      v127[12] = v121;
      v127[13] = v124;
      v127[14] = v123;
      *((_BYTE *)v127 + 120) = v122;
      v128 = *(_DWORD *)((char *)&v257 + 3);
      *(_DWORD *)((char *)v127 + 121) = v257;
      *((_DWORD *)v127 + 31) = v128;
      v127[16] = v229;
      v127[17] = v120;
      v127[18] = v1;
      *((_BYTE *)v127 + 152) = v230;
      v15 = v220;
      v129 = *(_BYTE *)(v220 + 32);
      if (v226 >= 1 << v129)
        goto LABEL_184;
      v19 = v217;
      v130 = v224;
      v131 = *(_QWORD *)(v217 + 8 * v224);
      if ((v131 & v223) == 0)
        goto LABEL_185;
      if (*(_DWORD *)(v220 + 36) != v222)
        goto LABEL_186;
      v132 = v131 & (-2 << (v226 & 0x3F));
      if (v132)
      {
        v17 = __clz(__rbit64(v132)) | v226 & 0xFFFFFFFFFFFFFFC0;
        v133 = v221;
        v4 = MEMORY[0x24BEE4AF8];
        if (v221 == v218)
          goto LABEL_159;
        goto LABEL_123;
      }
      v134 = v224 + 1;
      v135 = (unint64_t)((1 << v129) + 63) >> 6;
      v4 = MEMORY[0x24BEE4AF8];
      if (v224 + 1 >= v135)
        goto LABEL_122;
      v136 = *(_QWORD *)(v217 + 8 * v134);
      if (v136)
      {
LABEL_113:
        v133 = v221;
        goto LABEL_114;
      }
      v134 = v224 + 2;
      if (v224 + 2 >= v135)
      {
LABEL_122:
        v17 = 1 << v129;
        v133 = v221;
        if (v221 == v218)
          goto LABEL_159;
        goto LABEL_123;
      }
      v136 = *(_QWORD *)(v217 + 8 * v134);
      if (v136)
        goto LABEL_113;
      v137 = v135 - 3;
      v133 = v221;
LABEL_119:
      if (v137 != v130)
        break;
      v17 = 1 << v129;
      if (v221 == v218)
        goto LABEL_159;
LABEL_123:
      if ((v17 & 0x8000000000000000) == 0)
      {
        v20 = v133 + 1;
        v18 = v216;
        if ((uint64_t)v17 < 1 << v129)
          continue;
      }
      goto LABEL_181;
    }
    v136 = *(_QWORD *)(v208 + 8 * v130++);
    if (!v136)
      goto LABEL_119;
    v134 = v130 + 2;
LABEL_114:
    v17 = __clz(__rbit64(v136)) + (v134 << 6);
    if (v133 != v218)
      goto LABEL_123;
LABEL_159:
    v138 = (uint64_t)v116;
    swift_bridgeObjectRelease();
LABEL_129:
    swift_bridgeObjectRetain();
    v139 = (_QWORD *)sub_2378D1C28(v4);
    v140 = *(_QWORD *)(v138 + 16);
    if (!v140)
      goto LABEL_147;
    v141 = (_OWORD *)swift_bridgeObjectRetain();
    v142 = v141[2];
    v143 = v141[7];
    v261 = v141[6];
    v262 = v143;
    v263[0] = v141[8];
    *(_OWORD *)((char *)v263 + 9) = *(_OWORD *)((char *)v141 + 137);
    v144 = v141[3];
    v145 = v141[4];
    v257 = v142;
    v258 = v144;
    v253 = v141;
    v146 = v141[5];
    v259 = v145;
    v260 = v146;
    v147 = *((_QWORD *)&v257 + 1);
    v148 = v257;
    sub_23787AC58((uint64_t)&v257);
    swift_bridgeObjectRetain();
    v149 = swift_isUniquelyReferenced_nonNull_native();
    v265 = v139;
    v1 = sub_2378D2DB4(v148, v147);
    v151 = v139[2];
    v152 = (v150 & 1) == 0;
    v153 = v151 + v152;
    if (__OFADD__(v151, v152))
    {
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
      JUMPOUT(0x2379FE2A8);
    }
    LOBYTE(v2) = v150;
    v154 = 10;
    while (1)
    {
      if (v139[3] >= v153)
      {
        if ((v149 & 1) != 0)
        {
          if ((v2 & 1) != 0)
            goto LABEL_139;
        }
        else
        {
          sub_2378C4FC4();
          if ((v2 & 1) != 0)
            goto LABEL_139;
        }
      }
      else
      {
        sub_2378C93D8(v153, v149 & 1);
        v155 = sub_2378D2DB4(v148, v147);
        if ((v2 & 1) != (v156 & 1))
        {
          v206 = &qword_25681E8F0;
          goto LABEL_200;
        }
        v1 = v155;
        if ((v2 & 1) != 0)
        {
LABEL_139:
          v139 = v265;
          v167 = (__int128 *)(v265[7] + (v1 << 7));
          v168 = v167[3];
          v170 = *v167;
          v169 = v167[1];
          v255[2] = v167[2];
          v255[3] = v168;
          v255[0] = v170;
          v255[1] = v169;
          v172 = v167[5];
          v171 = v167[6];
          v173 = v167[4];
          *(_OWORD *)((char *)v256 + 9) = *(__int128 *)((char *)v167 + 105);
          v255[5] = v172;
          v256[0] = v171;
          v255[4] = v173;
          sub_23787AD04((uint64_t)v255);
          v174 = v260;
          v176 = v257;
          v175 = v258;
          v167[2] = v259;
          v167[3] = v174;
          *v167 = v176;
          v167[1] = v175;
          v178 = v262;
          v177 = v263[0];
          v179 = v261;
          *(__int128 *)((char *)v167 + 105) = *(_OWORD *)((char *)v263 + 9);
          v167[5] = v178;
          v167[6] = v177;
          v167[4] = v179;
          goto LABEL_140;
        }
      }
      v139 = v265;
      v265[(v1 >> 6) + 8] |= 1 << v1;
      v157 = (_QWORD *)(v139[6] + 16 * v1);
      *v157 = v148;
      v157[1] = v147;
      v158 = (_OWORD *)(v139[7] + (v1 << 7));
      v159 = *(_OWORD *)((char *)v263 + 9);
      v161 = v262;
      v160 = v263[0];
      v158[4] = v261;
      v158[5] = v161;
      v158[6] = v160;
      *(_OWORD *)((char *)v158 + 105) = v159;
      v163 = v259;
      v162 = v260;
      v164 = v258;
      *v158 = v257;
      v158[1] = v164;
      v158[2] = v163;
      v158[3] = v162;
      v165 = v139[2];
      v11 = __OFADD__(v165, 1);
      v166 = v165 + 1;
      if (v11)
        goto LABEL_180;
      v139[2] = v166;
      swift_bridgeObjectRetain();
LABEL_140:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v140)
        break;
      v180 = v253[v154 + 3];
      v182 = v253[v154];
      v181 = v253[v154 + 1];
      v259 = v253[v154 + 2];
      v260 = v180;
      v257 = v182;
      v258 = v181;
      v183 = v253[v154 + 4];
      v184 = v253[v154 + 5];
      v185 = v253[v154 + 6];
      *(_OWORD *)((char *)v263 + 9) = *(_OWORD *)((char *)&v253[v154 + 6] + 9);
      v262 = v184;
      v263[0] = v185;
      v261 = v183;
      v147 = *((_QWORD *)&v182 + 1);
      v148 = v182;
      sub_23787AC58((uint64_t)&v257);
      swift_bridgeObjectRetain();
      v149 = swift_isUniquelyReferenced_nonNull_native();
      v265 = v139;
      v1 = sub_2378D2DB4(v148, v147);
      LOBYTE(v2) = v186;
      v187 = v139[2];
      v188 = (v186 & 1) == 0;
      v154 += 8;
      v153 = v187 + v188;
      if (__OFADD__(v187, v188))
        goto LABEL_177;
    }
    swift_bridgeObjectRelease();
LABEL_147:
    swift_bridgeObjectRelease();
    v189 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v257 = v213;
    v191 = sub_2378D2DB4(v215, v219);
    v192 = *(_QWORD *)(v213 + 16);
    v193 = (v190 & 1) == 0;
    v194 = v192 + v193;
    v4 = MEMORY[0x24BEE4AF8];
    if (__OFADD__(v192, v193))
      goto LABEL_187;
    v195 = v190;
    if (*(_QWORD *)(v213 + 24) < v194)
    {
      sub_2378C93CC(v194, v189);
      v196 = sub_2378D2DB4(v215, v219);
      if ((v195 & 1) == (v197 & 1))
      {
        v191 = v196;
        goto LABEL_153;
      }
LABEL_199:
      v206 = &qword_25681E8E8;
LABEL_200:
      __swift_instantiateConcreteTypeFromMangledName(v206);
      sub_237A8858C();
      __break(1u);
      JUMPOUT(0x2379FE580);
    }
    if ((v189 & 1) == 0)
      sub_2378C4FB8();
LABEL_153:
    v198 = (_QWORD *)v257;
    v213 = v257;
    if ((v195 & 1) != 0)
    {
      v199 = *(_QWORD *)(v257 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v199 + 8 * v191) = v139;
      goto LABEL_157;
    }
    *(_QWORD *)(v257 + 8 * (v191 >> 6) + 64) |= 1 << v191;
    v200 = (_QWORD *)(v198[6] + 16 * v191);
    *v200 = v215;
    v200[1] = v219;
    *(_QWORD *)(v198[7] + 8 * v191) = v139;
    v201 = v198[2];
    v11 = __OFADD__(v201, 1);
    v202 = v201 + 1;
    if (v11)
    {
LABEL_189:
      __break(1u);
      goto LABEL_190;
    }
    v198[2] = v202;
    swift_bridgeObjectRetain();
LABEL_157:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v7 = v211;
    v8 = v212;
    if (v211)
      continue;
    break;
  }
LABEL_5:
  v11 = __OFADD__(v8++, 1);
  v10 = v214;
  if (v11)
    goto LABEL_188;
  if (v8 < v210)
  {
    v12 = *(_QWORD *)(v209 + 8 * v8);
    if (v12)
      goto LABEL_19;
    v13 = v8 + 1;
    if (v8 + 1 < v210)
    {
      v12 = *(_QWORD *)(v209 + 8 * v13);
      if (v12)
        goto LABEL_18;
      v13 = v8 + 2;
      if (v8 + 2 < v210)
      {
        v12 = *(_QWORD *)(v209 + 8 * v13);
        if (v12)
          goto LABEL_18;
        v13 = v8 + 3;
        if (v8 + 3 < v210)
        {
          v12 = *(_QWORD *)(v209 + 8 * v13);
          if (v12)
            goto LABEL_18;
          v13 = v8 + 4;
          if (v8 + 4 < v210)
          {
            v12 = *(_QWORD *)(v209 + 8 * v13);
            if (v12)
              goto LABEL_18;
            v13 = v8 + 5;
            if (v8 + 5 < v210)
            {
              v12 = *(_QWORD *)(v209 + 8 * v13);
              if (v12)
              {
LABEL_18:
                v8 = v13;
LABEL_19:
                v211 = (v12 - 1) & v12;
                v9 = __clz(__rbit64(v12)) + (v8 << 6);
                goto LABEL_20;
              }
              while (1)
              {
                v8 = v13 + 1;
                if (__OFADD__(v13, 1))
                  break;
                if (v8 >= v210)
                  goto LABEL_174;
                v12 = *(_QWORD *)(v209 + 8 * v8);
                ++v13;
                if (v12)
                  goto LABEL_19;
              }
LABEL_190:
              __break(1u);
LABEL_191:
              v204 = (void *)swift_allocError();
              swift_willThrow();
              v254 = v204;
              v205 = v204;
              __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
              if ((swift_dynamicCast() & 1) != 0)
              {
                *(_QWORD *)&v255[0] = 0;
                *((_QWORD *)&v255[0] + 1) = 0xE000000000000000;
                sub_237A87F44();
                sub_237A878E4();
                sub_237A88070();
                sub_237A878E4();
              }
              else
              {
LABEL_194:
                swift_release();
                v48 = (unint64_t)v253;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_unexpectedError();
                __break(1u);
LABEL_195:
                sub_237A8858C();
                __break(1u);
LABEL_196:
                *(_QWORD *)&v257 = 0;
                *((_QWORD *)&v257 + 1) = 0xE000000000000000;
                sub_237A87F44();
                sub_237A878E4();
                *(_QWORD *)&v255[0] = v48;
                BYTE8(v255[0]) = v2 & 1;
                sub_237A88070();
                sub_237A878E4();
                *(_QWORD *)&v255[0] = v1;
                sub_237A882E0();
                sub_237A878E4();
                swift_bridgeObjectRelease();
              }
              sub_237A880AC();
              __break(1u);
              goto LABEL_199;
            }
          }
        }
      }
    }
  }
LABEL_174:
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v207 + 8) = v213;
  return result;
}

double EditableTheme.addLayoutStyle(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[8];
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;

  v4 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v4;
  v10[2] = *(_OWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 48);
  v5 = *v2;
  v6 = v2[1];
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2378C00C4((uint64_t)v10);
  sub_2378FE7B0((uint64_t)v8, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2379FC70C();
  result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t EditableTheme.addingLayoutStyle(_:)(uint64_t a1)
{
  __int128 v1;
  _BYTE v3[8];
  _OWORD v4[3];
  uint64_t v5;

  v1 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v1;
  v4[2] = *(_OWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  sub_2378C00C4((uint64_t)v4);
  sub_2378FE7B0((uint64_t)v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2379FC70C();
}

uint64_t EditableTheme.updatingLayoutStyle(_:)(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  char v7[8];
  unint64_t v8;
  _OWORD v9[3];
  uint64_t v10;

  v2 = v1;
  v3 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v3;
  v9[2] = *(_OWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 48);
  sub_2378C00C4((uint64_t)v9);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_237A00600(v4, v9);
  sub_2378CF92C((uint64_t)v9);
  v8 = v5;
  sub_2378C00C4((uint64_t)v9);
  sub_2378FE7B0((uint64_t)v7, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v8;
  return sub_2379FC70C();
}

double EditableTheme.layoutStyle(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8[2];
  __int128 v9;

  v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v9 = *v2;
    v8[0] = v6;
    v8[1] = v5;
    EditableTheme.subscript.getter(v8, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

unint64_t EditableTheme.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _QWORD v17[2];

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_bridgeObjectRetain();
  v6 = sub_2378CD378(v5);
  swift_bridgeObjectRelease();
  v17[0] = v4;
  v17[1] = v3;
  v16[2] = v17;
  swift_bridgeObjectRetain();
  result = sub_2378C1878(sub_237A007D4, (uint64_t)v16, (uint64_t)v6);
  if ((v8 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    result = swift_release();
    *(_QWORD *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < v6[2])
    {
      v9 = &v6[7 * result];
      v10 = v9[5];
      v12 = v9[6];
      v11 = v9[7];
      v14 = v9[8];
      v13 = v9[9];
      v15 = v9[10];
      *(_QWORD *)a2 = v9[4];
      *(_QWORD *)(a2 + 8) = v10;
      *(_QWORD *)(a2 + 16) = v12;
      *(_QWORD *)(a2 + 24) = v11;
      *(_QWORD *)(a2 + 32) = v14;
      *(_QWORD *)(a2 + 40) = v13;
      *(_QWORD *)(a2 + 48) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
  }
  return result;
}

uint64_t EditableTheme.palettes(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain_n();
  v5 = sub_2378D2DB4(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v8 = sub_2378CD81C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v8;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  v5 = sub_2378D2DB4(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v8 = sub_2378CD81C(v7);
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t EditableTheme.palettes(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  v4 = v3[1];
  if (v4)
  {
    if (*(_QWORD *)(v2 + 16))
    {
      v5 = *v3;
      swift_bridgeObjectRetain();
      v6 = sub_2378D2DB4(v5, v4);
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        v4 = sub_2378CD81C(v8);
        swift_bridgeObjectRelease_n();
        return v4;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v4;
}

unint64_t EditableTheme.defaultPalette(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  _OWORD v20[8];

  v5 = *v2;
  v4 = v2[1];
  v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v9 = sub_2378CD378(v5);
    v10 = swift_bridgeObjectRelease();
    *(_QWORD *)&v20[0] = v8;
    *((_QWORD *)&v20[0] + 1) = v7;
    MEMORY[0x24BDAC7A8](v10);
    v18[2] = v20;
    swift_bridgeObjectRetain();
    result = sub_2378C1878(sub_237A007D4, (uint64_t)v18, (uint64_t)v9);
    if ((v12 & 1) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < v9[2])
      {
        v13 = &v9[7 * result];
        v14 = v13[8];
        v19 = v13[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_release();
        if (*(_QWORD *)(v4 + 16))
        {
          v15 = sub_2378D2DB4(v8, v7);
          if ((v16 & 1) != 0)
          {
            v17 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_2379FC5B0(v19, v14, v17, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
LABEL_10:
  sub_2378CFEF0(v20);
  return sub_237A007EC((uint64_t)v20, (uint64_t)a2);
}

uint64_t static EditableTheme.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_2379FED8C(*a1, *a2) & 1) != 0)
    return sub_2379B75F4(v2, v3);
  else
    return 0;
}

uint64_t sub_2379FED8C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  char v53;
  uint64_t v54;
  char v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  char v82[72];
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v57 = result;
  v58 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v67 = a2 + 56;
  v56 = v7;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v59 = (v6 - 1) & v6;
  v60 = v3;
  v8 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_24:
  v13 = (uint64_t *)(*(_QWORD *)(result + 48) + 56 * v8);
  v15 = *v13;
  v14 = v13[1];
  v16 = v13[2];
  v17 = v13[3];
  v18 = v13[4];
  v19 = v13[5];
  v20 = v13[6];
  sub_237A885D4();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71 = v15;
  sub_237A87710();
  v72 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237878474((uint64_t)v82, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v64 = v17;
  sub_237A87710();
  v62 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v63 = v19;
  sub_237A87710();
  v61 = v20;
  swift_bridgeObjectRelease();
  v21 = sub_237A88610();
  v22 = -1 << *(_BYTE *)(v2 + 32);
  v23 = v21 & ~v22;
  if (((*(_QWORD *)(v67 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v65 = ~v22;
  v77 = v16;
  while (1)
  {
    v73 = v23;
    v25 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 56 * v23);
    v26 = v25[2];
    v27 = v25[4];
    v68 = v25[5];
    v69 = v25[3];
    v76 = v25[6];
    v28 = *v25 == v71 && v25[1] == v72;
    if (!v28 && (sub_237A8840C() & 1) == 0)
      goto LABEL_27;
    if (v26 != v16)
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_61:
    if (v69 == v64 && v27 == v62 || (sub_237A8840C() & 1) != 0)
    {
      if (v68 == v63 && v76 == v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = a2;
        v7 = v56;
        result = v57;
        v6 = v59;
        v3 = v60;
        if (v59)
          goto LABEL_7;
LABEL_8:
        v9 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_77;
        if (v9 < v7)
        {
          v10 = *(_QWORD *)(v58 + 8 * v9);
          v11 = v3 + 1;
          if (v10)
            goto LABEL_23;
          v11 = v3 + 2;
          if (v3 + 2 < v7)
          {
            v10 = *(_QWORD *)(v58 + 8 * v11);
            if (v10)
              goto LABEL_23;
            v11 = v3 + 3;
            if (v3 + 3 < v7)
            {
              v10 = *(_QWORD *)(v58 + 8 * v11);
              if (v10)
                goto LABEL_23;
              v11 = v3 + 4;
              if (v3 + 4 < v7)
              {
                v10 = *(_QWORD *)(v58 + 8 * v11);
                if (v10)
                  goto LABEL_23;
                v12 = v3 + 5;
                if (v3 + 5 < v7)
                {
                  v10 = *(_QWORD *)(v58 + 8 * v12);
                  if (!v10)
                  {
                    while (1)
                    {
                      v11 = v12 + 1;
                      if (__OFADD__(v12, 1))
                        goto LABEL_78;
                      if (v11 >= v7)
                        return 1;
                      v10 = *(_QWORD *)(v58 + 8 * v11);
                      ++v12;
                      if (v10)
                        goto LABEL_23;
                    }
                  }
                  v11 = v3 + 5;
LABEL_23:
                  v59 = (v10 - 1) & v10;
                  v60 = v11;
                  v8 = __clz(__rbit64(v10)) + (v11 << 6);
                  goto LABEL_24;
                }
              }
            }
          }
        }
        return 1;
      }
      v24 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_70;
    }
    else
    {
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_69:
      swift_bridgeObjectRelease();
    }
LABEL_27:
    v2 = a2;
    v23 = (v73 + 1) & v65;
    if (((*(_QWORD *)(v67 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_73;
  }
  if (*(_QWORD *)(v26 + 16) != *(_QWORD *)(v16 + 16))
    goto LABEL_27;
  v29 = 1 << *(_BYTE *)(v26 + 32);
  v74 = v26 + 64;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v31 = v30 & *(_QWORD *)(v26 + 64);
  v75 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70 = v27;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v32 = 0;
  v78 = v26;
  while (1)
  {
    if (v31)
    {
      v79 = (v31 - 1) & v31;
      v80 = v32;
      v33 = __clz(__rbit64(v31)) | (v32 << 6);
      goto LABEL_57;
    }
    v34 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      goto LABEL_76;
    }
    v27 = v70;
    if (v34 >= v75)
      goto LABEL_61;
    v35 = *(_QWORD *)(v74 + 8 * v34);
    v36 = v32 + 1;
    if (!v35)
    {
      v36 = v32 + 2;
      if (v32 + 2 >= v75)
        goto LABEL_61;
      v35 = *(_QWORD *)(v74 + 8 * v36);
      if (!v35)
      {
        v36 = v32 + 3;
        if (v32 + 3 >= v75)
          goto LABEL_61;
        v35 = *(_QWORD *)(v74 + 8 * v36);
        if (!v35)
        {
          v36 = v32 + 4;
          if (v32 + 4 >= v75)
            goto LABEL_61;
          v35 = *(_QWORD *)(v74 + 8 * v36);
          if (!v35)
            break;
        }
      }
    }
LABEL_56:
    v79 = (v35 - 1) & v35;
    v80 = v36;
    v33 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_57:
    v38 = *(_QWORD *)(v26 + 56);
    v39 = *(_QWORD *)(v26 + 48) + 112 * v33;
    v40 = *(_QWORD *)(v39 + 8);
    v41 = *(_QWORD *)(v39 + 16);
    v42 = *(_QWORD *)(v39 + 24);
    v44 = *(_QWORD *)(v39 + 32);
    v43 = *(_QWORD *)(v39 + 40);
    v46 = *(_QWORD *)(v39 + 48);
    v45 = *(_QWORD *)(v39 + 56);
    v47 = *(_QWORD *)(v39 + 72);
    v48 = *(_QWORD *)(v39 + 80);
    v49 = *(_QWORD *)(v39 + 88);
    v50 = *(unsigned __int8 *)(v39 + 96);
    v81 = *(_QWORD *)(v39 + 104);
    v51 = *(_QWORD *)(v38 + 8 * v33);
    v52 = *(_BYTE *)(v39 + 64);
    *(_QWORD *)&v83 = *(_QWORD *)v39;
    *((_QWORD *)&v83 + 1) = v40;
    v84 = v41;
    v85 = v42;
    v86 = v44;
    v87 = v43;
    v88 = v46;
    v89 = v45;
    v90 = v52;
    v91 = v47;
    v92 = v48;
    v93 = v49;
    v94 = v50;
    v95 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v42, v44, v43, v46, v45, v52);
    sub_2378797D4(v48);
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = v77;
    sub_2378D2E58(&v83);
    LOBYTE(v43) = v53;
    sub_23789E3CC((uint64_t)&v83);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
    v54 = swift_bridgeObjectRetain();
    v55 = sub_2379B6ADC(v54, v51);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v26 = v78;
    v31 = v79;
    v32 = v80;
    if ((v55 & 1) == 0)
      goto LABEL_68;
  }
  v37 = v32 + 5;
  if (v32 + 5 >= v75)
    goto LABEL_61;
  v35 = *(_QWORD *)(v74 + 8 * v37);
  if (v35)
  {
    v36 = v32 + 5;
    goto LABEL_56;
  }
  while (1)
  {
    v36 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v36 >= v75)
      goto LABEL_61;
    v35 = *(_QWORD *)(v74 + 8 * v36);
    ++v37;
    if (v35)
      goto LABEL_56;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_2379FF4D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_2379FED8C(*a1, *a2) & 1) != 0)
    return sub_2379B75F4(v2, v3);
  else
    return 0;
}

unint64_t EditableTheme.defaultPalette(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[4];
  uint64_t v26;
  void *v27;
  char v28[16];
  uint64_t *v29;
  _OWORD v30[6];
  _BYTE v31[25];
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v6 = *v2;
  v7 = v2[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_2378CD378(v6);
  swift_bridgeObjectRelease();
  v32 = v4;
  v33 = v5;
  v29 = &v32;
  swift_bridgeObjectRetain();
  result = sub_2378C1878(sub_237A007D4, (uint64_t)v28, (uint64_t)v8);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_2378CFEF0(v30);
    v24 = (uint64_t)a2;
    return sub_237A007EC((uint64_t)v30, v24);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result >= v8[2])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v27 = a2;
  v11 = &v8[7 * result];
  v12 = v11[8];
  v26 = v11[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v30[0] = v6;
  *((_QWORD *)&v30[0] + 1) = v7;
  v32 = v4;
  v33 = v5;
  v13 = EditableTheme.palettes(for:)(&v32);
  if (v13)
  {
    v14 = v13;
    v32 = v26;
    v33 = v12;
    MEMORY[0x24BDAC7A8](v13);
    v25[2] = &v32;
    result = sub_2378C177C((uint64_t (*)(_OWORD *))sub_237A00834, (uint64_t)v25, v14);
    if ((v15 & 1) == 0)
    {
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(_QWORD *)(v14 + 16))
        {
          v16 = (_OWORD *)(v14 + (result << 7));
          v17 = v16[2];
          v18 = v16[3];
          v19 = v16[5];
          v30[2] = v16[4];
          v30[3] = v19;
          v30[0] = v17;
          v30[1] = v18;
          v20 = v16[6];
          v21 = v16[7];
          v22 = v16[8];
          *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v16 + 137);
          v30[5] = v21;
          *(_OWORD *)v31 = v22;
          v30[4] = v20;
          v23 = v27;
          memmove(v27, v16 + 2, 0x79uLL);
          nullsub_1(v23);
          sub_23787AC58((uint64_t)v30);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_2378CFEF0(v30);
  v24 = (uint64_t)v27;
  return sub_237A007EC((uint64_t)v30, v24);
}

unint64_t EditableTheme.defaultWallpaperID(for:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _QWORD v14[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = *v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_2378CD378(v6);
  swift_bridgeObjectRelease();
  v14[0] = v4;
  v14[1] = v5;
  v13[2] = v14;
  swift_bridgeObjectRetain();
  result = sub_2378C1878(sub_237A007D4, (uint64_t)v13, (uint64_t)v7);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    result = swift_release();
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < v7[2])
    {
      v10 = &v7[7 * result];
      v11 = v10[9];
      v12 = v10[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *a2 = v11;
      a2[1] = v12;
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2379FF924()
{
  return 0x745374756F79616CLL;
}

uint64_t sub_2379FF944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x745374756F79616CLL && a2 == 0xEC00000073656C79)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2379FF9F0()
{
  sub_237A00850();
  return sub_237A88718();
}

uint64_t sub_2379FFA18()
{
  sub_237A00850();
  return sub_237A88724();
}

uint64_t EditableTheme.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827018);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BEE4B00];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A00850();
  sub_237A88688();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256827028);
    sub_237A00894();
    sub_237A881F0();
    v10 = sub_2378BFCD4(v14);
    swift_bridgeObjectRelease();
    v12 = v10;
    sub_2379FC70C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v13;
    *a2 = v12;
    a2[1] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EditableTheme.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[7];
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827040);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A00850();
  sub_237A886B8();
  sub_237A88214();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v9 = sub_2378CD378(v8);
  swift_bridgeObjectRelease();
  v24[0] = (uint64_t)v9;
  sub_2378CEEB0(v24);
  if (v2)
  {
    swift_release();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release_n();
    v10 = v24[0];
    v11 = *(_QWORD *)(v24[0] + 16);
    if (v11)
    {
      v21 = v7;
      v22 = v5;
      v23 = v4;
      swift_retain();
      v20 = v10;
      v12 = (uint64_t *)(v10 + 80);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v15 = *(v12 - 3);
        v16 = *(v12 - 2);
        v17 = *(v12 - 5);
        v18 = *(v12 - 4);
        v24[0] = *(v12 - 6);
        v24[1] = v17;
        v24[2] = v18;
        v24[3] = v15;
        v24[4] = v16;
        v24[5] = v13;
        v24[6] = v14;
        v28 = v27;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        sub_237A0093C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_237A88304();
        v12 += 7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v11;
      }
      while (v11);
      swift_release();
      v5 = v22;
      v4 = v23;
      v7 = v21;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
  }
  return result;
}

uint64_t sub_2379FFE88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return EditableTheme.init(from:)(a1, a2);
}

uint64_t sub_2379FFE9C(_QWORD *a1)
{
  return EditableTheme.encode(to:)(a1);
}

uint64_t sub_2379FFEB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213D8);
  result = sub_237A87F14();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_237A885D4();
    swift_bridgeObjectRetain();
    sub_237A87710();
    result = sub_237A88610();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_237A00144(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29[72];

  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821390);
  result = sub_237A87F14();
  v6 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v25 = result + 56;
  while (1)
  {
    if (v8)
    {
      v26 = (v8 - 1) & v8;
      v27 = v9;
      v10 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_30;
      if (v11 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      v12 = a1[v11];
      v13 = v9 + 1;
      if (!v12)
      {
        v13 = v9 + 2;
        if (v9 + 2 >= a2)
          goto LABEL_27;
        v12 = a1[v13];
        if (!v12)
        {
          v13 = v9 + 3;
          if (v9 + 3 >= a2)
            goto LABEL_27;
          v12 = a1[v13];
          if (!v12)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= a2)
              goto LABEL_27;
            v12 = a1[v14];
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_31;
                if (v13 >= a2)
                  goto LABEL_27;
                v12 = a1[v13];
                ++v14;
                if (v12)
                  goto LABEL_24;
              }
            }
            v13 = v9 + 4;
          }
        }
      }
LABEL_24:
      v26 = (v12 - 1) & v12;
      v27 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = *(_QWORD *)(a4 + 48) + 56 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 24);
    v18 = *(_QWORD *)(v15 + 32);
    v20 = *(_QWORD *)(v15 + 40);
    v19 = *(_QWORD *)(v15 + 48);
    v28 = *(_OWORD *)(v15 + 8);
    sub_237A885D4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237878474((uint64_t)v29, *((uint64_t *)&v28 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_237A88610();
    result = sub_237A87EB4();
    *(_QWORD *)(v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = *(_QWORD *)(v6 + 48) + 56 * result;
    *(_QWORD *)v21 = v16;
    *(_OWORD *)(v21 + 8) = v28;
    *(_QWORD *)(v21 + 24) = v17;
    *(_QWORD *)(v21 + 32) = v18;
    *(_QWORD *)(v21 + 40) = v20;
    *(_QWORD *)(v21 + 48) = v19;
    ++*(_QWORD *)(v6 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v8 = v26;
    v9 = v27;
    if (!v5)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_237A00450(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t *v18;
  unint64_t *v22;

  v22 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v7 << 6);
LABEL_20:
    v18 = (unint64_t *)(*(_QWORD *)(a3 + 48) + 56 * v14);
    result = *v18;
    if (*v18 != *a4 || v18[1] != a4[1])
    {
      result = sub_237A8840C();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v22 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_28:
          swift_retain();
          return sub_237A00144(v22, a2, v6, a3);
        }
      }
    }
  }
  v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v15 >= v12)
    goto LABEL_28;
  v16 = *(_QWORD *)(v8 + 8 * v15);
  ++v7;
  if (v16)
    goto LABEL_19;
  v7 = v15 + 1;
  if (v15 + 1 >= v12)
    goto LABEL_28;
  v16 = *(_QWORD *)(v8 + 8 * v7);
  if (v16)
    goto LABEL_19;
  v7 = v15 + 2;
  if (v15 + 2 >= v12)
    goto LABEL_28;
  v16 = *(_QWORD *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_20;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_28;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_28;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_237A00600(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  unint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  sub_2378C00C4((uint64_t)a2);
  isStackAllocationSafe = sub_2378C00C4((uint64_t)a2);
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_2378C00C4((uint64_t)a2);
    v10 = sub_237A00450((unint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    sub_2378CF92C((uint64_t)a2);
    swift_release();
    if (v2)
      swift_willThrow();
    sub_2378CF92C((uint64_t)a2);
    sub_2378CF92C((uint64_t)a2);
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_2378C00C4((uint64_t)a2);
    v10 = sub_237A00450((unint64_t)v11, v7, a1, a2);
    sub_2378CF92C((uint64_t)a2);
    swift_release();
    MEMORY[0x23B81FB7C](v11, -1, -1);
    sub_2378CF92C((uint64_t)a2);
    sub_2378CF92C((uint64_t)a2);
  }
  return v10;
}

uint64_t sub_237A007D4(_QWORD *a1)
{
  return sub_237882A4C(a1) & 1;
}

uint64_t sub_237A007EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237A00834(_QWORD *a1)
{
  uint64_t v1;

  return sub_2378CDAC4(a1, *(_QWORD **)(v1 + 16)) & 1;
}

unint64_t sub_237A00850()
{
  unint64_t result;

  result = qword_256827020;
  if (!qword_256827020)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3018, &type metadata for EditableTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827020);
  }
  return result;
}

unint64_t sub_237A00894()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256827030;
  if (!qword_256827030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827028);
    v2 = sub_237A008F8();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256827030);
  }
  return result;
}

unint64_t sub_237A008F8()
{
  unint64_t result;

  result = qword_256827038;
  if (!qword_256827038)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.LayoutStyle, &type metadata for Theme.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_256827038);
  }
  return result;
}

unint64_t sub_237A0093C()
{
  unint64_t result;

  result = qword_256827048;
  if (!qword_256827048)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.LayoutStyle, &type metadata for Theme.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_256827048);
  }
  return result;
}

ValueMetadata *type metadata accessor for EditableTheme()
{
  return &type metadata for EditableTheme;
}

uint64_t storeEnumTagSinglePayload for EditableTheme.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A009D0 + 4 * byte_237AA2E80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A009F0 + 4 * byte_237AA2E85[v4]))();
}

_BYTE *sub_237A009D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A009F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A009F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A00A00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A00A08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A00A10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EditableTheme.CodingKeys()
{
  return &type metadata for EditableTheme.CodingKeys;
}

unint64_t sub_237A00A30()
{
  unint64_t result;

  result = qword_256827050;
  if (!qword_256827050)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2FF0, &type metadata for EditableTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827050);
  }
  return result;
}

unint64_t sub_237A00A78()
{
  unint64_t result;

  result = qword_256827058;
  if (!qword_256827058)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2F60, &type metadata for EditableTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827058);
  }
  return result;
}

unint64_t sub_237A00AC0()
{
  unint64_t result;

  result = qword_256827060;
  if (!qword_256827060)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA2F88, &type metadata for EditableTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827060);
  }
  return result;
}

uint64_t NotificationSymbolConfiguration.font.getter()
{
  return swift_retain();
}

uint64_t NotificationSymbolConfiguration.font.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.font.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.containerMinSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t NotificationSymbolConfiguration.containerMinSize.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 8) = result;
  *(_QWORD *)(v3 + 16) = a2;
  *(_BYTE *)(v3 + 24) = a3 & 1;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.containerMinSize.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v4 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationSymbolConfiguration(uint64_t a1)
{
  return sub_23790828C(a1, qword_256827348);
}

uint64_t NotificationSymbolConfiguration.scale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v4 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSymbolConfiguration.scale.modify())(_QWORD)
{
  type metadata accessor for NotificationSymbolConfiguration(0);
  return nullsub_1;
}

double NotificationSymbolConfiguration.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 28));
}

uint64_t NotificationSymbolConfiguration.padding.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for NotificationSymbolConfiguration(0);
  v10 = (double *)(v4 + *(int *)(result + 28));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*NotificationSymbolConfiguration.padding.modify())(_QWORD)
{
  type metadata accessor for NotificationSymbolConfiguration(0);
  return nullsub_1;
}

uint64_t NotificationSymbolConfiguration.init(font:containerMinSize:scale:padding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  double *v20;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  v16 = type metadata accessor for NotificationSymbolConfiguration(0);
  v17 = a6 + *(int *)(v16 + 24);
  v18 = sub_237A872D8();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a5, v18);
  v20 = (double *)(a6 + *(int *)(v16 + 28));
  *v20 = a7;
  v20[1] = a8;
  v20[2] = a9;
  v20[3] = a10;
  return result;
}

uint64_t NotificationTextConfiguration.titleFont.getter()
{
  return swift_retain();
}

uint64_t NotificationTextConfiguration.titleFont.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*NotificationTextConfiguration.titleFont.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.bodyFont.getter()
{
  return swift_retain();
}

uint64_t NotificationTextConfiguration.bodyFont.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*NotificationTextConfiguration.bodyFont.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.titleForegroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23787076C(v1 + 16, a1);
}

uint64_t NotificationTextConfiguration.titleForegroundStyle.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  __swift_destroy_boxed_opaque_existential_2Tm(v3);
  return sub_237870734(a1, v3);
}

uint64_t (*NotificationTextConfiguration.titleForegroundStyle.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.bodyForegroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23787076C(v1 + 56, a1);
}

uint64_t NotificationTextConfiguration.bodyForegroundStyle.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 56;
  __swift_destroy_boxed_opaque_existential_2Tm(v3);
  return sub_237870734(a1, v3);
}

uint64_t (*NotificationTextConfiguration.bodyForegroundStyle.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.xPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void NotificationTextConfiguration.xPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*NotificationTextConfiguration.xPadding.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.yPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void NotificationTextConfiguration.yPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*NotificationTextConfiguration.yPadding.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.intertextPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void NotificationTextConfiguration.intertextPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*NotificationTextConfiguration.intertextPadding.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.lineLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t NotificationTextConfiguration.lineLimit.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = result;
  return result;
}

uint64_t (*NotificationTextConfiguration.lineLimit.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.leadingAlignment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t NotificationTextConfiguration.leadingAlignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = result;
  return result;
}

uint64_t (*NotificationTextConfiguration.leadingAlignment.modify())()
{
  return nullsub_1;
}

double NotificationTextConfiguration.minimumScaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

void NotificationTextConfiguration.minimumScaleFactor.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 136) = a1;
}

uint64_t (*NotificationTextConfiguration.minimumScaleFactor.modify())()
{
  return nullsub_1;
}

uint64_t NotificationTextConfiguration.init(titleFont:bodyFont:titleForegroundStyle:bodyForegroundStyle:xPadding:yPadding:intertextPadding:lineLimit:leadingAlignment:minimumScaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t result;

  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  sub_237870734(a3, a7 + 16);
  result = sub_237870734(a4, a7 + 56);
  *(double *)(a7 + 96) = a8;
  *(double *)(a7 + 104) = a9;
  *(double *)(a7 + 112) = a10;
  *(_QWORD *)(a7 + 120) = a5;
  *(_BYTE *)(a7 + 128) = a6;
  *(double *)(a7 + 136) = a11;
  return result;
}

uint64_t UserInteractiveConfiguration.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
  swift_retain();
  return swift_retain();
}

__n128 UserInteractiveConfiguration.buttonConfiguration.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v8 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 6);
  v6 = *((_QWORD *)a1 + 7);
  swift_release();
  swift_release();
  *(_OWORD *)v1 = v8;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  result = (__n128)a1[2];
  *(__n128 *)(v1 + 32) = result;
  *(_QWORD *)(v1 + 48) = v5;
  *(_QWORD *)(v1 + 56) = v6;
  return result;
}

uint64_t (*UserInteractiveConfiguration.buttonConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.leadingSymbol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t UserInteractiveConfiguration.leadingSymbol.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*UserInteractiveConfiguration.leadingSymbol.modify())()
{
  return nullsub_1;
}

double UserInteractiveConfiguration.platterCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void UserInteractiveConfiguration.platterCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*UserInteractiveConfiguration.platterCornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0184C(type metadata accessor for UserInteractiveConfiguration, a1);
}

uint64_t type metadata accessor for UserInteractiveConfiguration(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568273E0);
}

uint64_t UserInteractiveConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  return sub_237A01898(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.symbolConfiguration.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A01908(type metadata accessor for UserInteractiveConfiguration, a1);
}

uint64_t sub_237A01124(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NotificationTextConfiguration(a2, a1);
  return a2;
}

uint64_t UserInteractiveConfiguration.textConfiguration.setter(uint64_t a1)
{
  return sub_237A01948(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_237A01164(uint64_t a1, uint64_t a2)
{
  assignWithTake for NotificationTextConfiguration(a2, a1);
  return a2;
}

uint64_t (*UserInteractiveConfiguration.textConfiguration.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.maxNotificationSize.getter()
{
  return sub_237A019AC(type metadata accessor for UserInteractiveConfiguration);
}

uint64_t UserInteractiveConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237A019E4(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.maxNotificationSize.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.minNotificationSize.getter()
{
  return sub_237A01A60(type metadata accessor for UserInteractiveConfiguration);
}

uint64_t UserInteractiveConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237A01A98(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.minNotificationSize.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.pushToBottom.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 44));
}

uint64_t UserInteractiveConfiguration.pushToBottom.setter(char a1)
{
  return sub_237A01B34(a1, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t (*UserInteractiveConfiguration.pushToBottom.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.platterBackgroundMaterial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 48);
  v4 = sub_237A8747C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UserInteractiveConfiguration.platterBackgroundMaterial.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 48);
  v4 = sub_237A8747C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UserInteractiveConfiguration.platterBackgroundMaterial.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

uint64_t UserInteractiveConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 52);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_retain();
}

__n128 UserInteractiveConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for UserInteractiveConfiguration(0) + 52));
  swift_release();
  result = v5;
  *v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*UserInteractiveConfiguration.shadowConfiguration.modify())(_QWORD)
{
  type metadata accessor for UserInteractiveConfiguration(0);
  return nullsub_1;
}

double UserInteractiveConfiguration.init(buttonConfiguration:leadingSymbol:platterCornerRadius:symbolConfiguration:textConfiguration:pushToBottom:maxNotificationSize:minNotificationSize:platterBackgroundMaterial:shadowConfiguration:)@<D0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  double v48[4];

  v46 = a8;
  v43 = a6;
  v44 = a7;
  v37 = a3;
  v38 = a4;
  v41 = a13;
  v42 = a5;
  v39 = a11;
  v40 = a12;
  v45 = a14;
  v19 = sub_237A8747C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  v23 = *((_QWORD *)a1 + 2);
  v24 = *((_QWORD *)a1 + 3);
  v25 = *((_QWORD *)a1 + 6);
  v26 = *((_QWORD *)a1 + 7);
  *(_OWORD *)v48 = *(_OWORD *)a15;
  v47 = *(_QWORD *)(a15 + 16);
  v27 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v28 = a9 + v27[9];
  v29 = a9 + v27[10];
  v30 = (_QWORD *)(a9 + v27[13]);
  v30[1] = 0;
  v30[2] = 0;
  *v30 = 0;
  *(_OWORD *)a9 = v36;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_QWORD *)(a9 + 48) = v25;
  *(_QWORD *)(a9 + 56) = v26;
  *(_BYTE *)(a9 + 64) = a2;
  *(double *)(a9 + 72) = a10;
  v31 = v37;
  sub_2378D07D8(v37, a9 + v27[7], type metadata accessor for NotificationSymbolConfiguration);
  v32 = v38;
  sub_237A01124(v38, a9 + v27[8]);
  *(_BYTE *)(a9 + v27[11]) = v42;
  v33 = v44;
  *(_QWORD *)v28 = v43;
  *(_QWORD *)(v28 + 8) = v33;
  *(_BYTE *)(v28 + 16) = v46 & 1;
  v34 = v40;
  *(_QWORD *)v29 = v39;
  *(_QWORD *)(v29 + 8) = v34;
  *(_BYTE *)(v29 + 16) = v41 & 1;
  sub_237A87470();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v45, v19);
  sub_237A01600(v32);
  sub_2378DE6A4(v31, type metadata accessor for NotificationSymbolConfiguration);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a9 + v27[12], v22, v19);
  swift_release();
  result = v48[0];
  *(_OWORD *)v30 = *(_OWORD *)v48;
  v30[2] = v47;
  return result;
}

uint64_t sub_237A01600(uint64_t a1)
{
  destroy for NotificationTextConfiguration(a1);
  return a1;
}

uint64_t sub_237A0162C()
{
  uint64_t result;

  result = sub_237A87248();
  qword_2568706E8 = result;
  return result;
}

uint64_t sub_237A01648()
{
  uint64_t result;

  result = sub_237A87254();
  qword_2568706F0 = result;
  return result;
}

double UserInteractiveConfiguration.ButtonConfiguration.interButtonPadding.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double UserInteractiveConfiguration.ButtonConfiguration.xPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double UserInteractiveConfiguration.ButtonConfiguration.height.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double UserInteractiveConfiguration.ButtonConfiguration.maxWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.fill.getter()
{
  return swift_retain();
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.getter()
{
  return swift_retain();
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*UserInteractiveConfiguration.ButtonConfiguration.buttonLabelFont.modify())()
{
  return nullsub_1;
}

double UserInteractiveConfiguration.ButtonConfiguration.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double UserInteractiveConfiguration.ButtonConfiguration.lineWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

uint64_t UserInteractiveConfiguration.ButtonConfiguration.init(interButtonPadding:xPadding:height:maxWidth:fill:buttonLabelFont:cornerRadius:lineWidth:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(double *)(a3 + 24) = a7;
  *(_QWORD *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 40) = a2;
  *(double *)(a3 + 48) = a8;
  *(double *)(a3 + 56) = a9;
  return result;
}

uint64_t BannerConfiguration.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378D07D8(v1, a1, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t BannerConfiguration.buttonConfiguration.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23787246C(a1, v1, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t (*BannerConfiguration.buttonConfiguration.modify())()
{
  return nullsub_1;
}

double BannerConfiguration.platterCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 20));
}

uint64_t type metadata accessor for BannerConfiguration(uint64_t a1)
{
  return sub_23790828C(a1, qword_256827490);
}

uint64_t BannerConfiguration.platterCornerRadius.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerConfiguration(0);
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.platterCornerRadius.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.includeCloseButtonAffordance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 24));
}

uint64_t BannerConfiguration.includeCloseButtonAffordance.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerConfiguration(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.includeCloseButtonAffordance.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0184C(type metadata accessor for BannerConfiguration, a1);
}

uint64_t sub_237A0184C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_2378D07D8(v2 + *(int *)(v4 + 28), a2, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t BannerConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  return sub_237A01898(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A01898(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return sub_23787246C(a1, v2 + *(int *)(v4 + 28), type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t (*BannerConfiguration.symbolConfiguration.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A01908(type metadata accessor for BannerConfiguration, a1);
}

uint64_t sub_237A01908@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a1(0) + 32);
  return sub_237A01124(v4, a2);
}

uint64_t BannerConfiguration.textConfiguration.setter(uint64_t a1)
{
  return sub_237A01948(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A01948(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a2(0) + 32);
  return sub_237A01164(a1, v4);
}

uint64_t (*BannerConfiguration.textConfiguration.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.maxNotificationSize.getter()
{
  return sub_237A019AC(type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A019AC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 36));
}

uint64_t BannerConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237A019E4(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A019E4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = a4(0);
  v9 = v4 + *(int *)(result + 36);
  *(_QWORD *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_BYTE *)(v9 + 16) = a3 & 1;
  return result;
}

uint64_t (*BannerConfiguration.maxNotificationSize.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.minNotificationSize.getter()
{
  return sub_237A01A60(type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A01A60(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 40));
}

uint64_t BannerConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return sub_237A01A98(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A01A98(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = a4(0);
  v9 = v4 + *(int *)(result + 40);
  *(_QWORD *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_BYTE *)(v9 + 16) = a3 & 1;
  return result;
}

uint64_t (*BannerConfiguration.minNotificationSize.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.pushToBottom.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BannerConfiguration(0) + 44));
}

uint64_t BannerConfiguration.pushToBottom.setter(char a1)
{
  return sub_237A01B34(a1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A01B34(char a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  result = a2(0);
  *(_BYTE *)(v2 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*BannerConfiguration.pushToBottom.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

uint64_t BannerConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerConfiguration(0) + 48);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_retain();
}

__n128 BannerConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for BannerConfiguration(0) + 48));
  swift_release();
  result = v5;
  *v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*BannerConfiguration.shadowConfiguration.modify())(_QWORD)
{
  type metadata accessor for BannerConfiguration(0);
  return nullsub_1;
}

__n128 BannerConfiguration.init(buttonConfiguration:platterCornerRadius:symbolConfiguration:textConfiguration:includeCloseButtonAffordance:pushToBottom:maxNotificationSize:minNotificationSize:shadowConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, char a13, __n128 *a14)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 result;
  unint64_t v30;
  __n128 v31;

  v31 = *a14;
  v30 = a14[1].n128_u64[0];
  v20 = (int *)type metadata accessor for BannerConfiguration(0);
  v21 = a9 + v20[9];
  v22 = a9 + v20[10];
  v23 = (__n128 *)(a9 + v20[12]);
  sub_2378D0858(a1, a9, type metadata accessor for IconNotificationButtonConfiguration);
  *(double *)(a9 + v20[5]) = a10;
  sub_2378D0858(a2, a9 + v20[7], type metadata accessor for NotificationSymbolConfiguration);
  v24 = (_OWORD *)(a9 + v20[8]);
  v25 = a3[7];
  v24[6] = a3[6];
  v24[7] = v25;
  v24[8] = a3[8];
  v26 = a3[3];
  v24[2] = a3[2];
  v24[3] = v26;
  v27 = a3[5];
  v24[4] = a3[4];
  v24[5] = v27;
  v28 = a3[1];
  *v24 = *a3;
  v24[1] = v28;
  *(_BYTE *)(a9 + v20[6]) = a4;
  *(_BYTE *)(a9 + v20[11]) = a5;
  *(_QWORD *)v21 = a6;
  *(_QWORD *)(v21 + 8) = a7;
  *(_BYTE *)(v21 + 16) = a8 & 1;
  *(_QWORD *)v22 = a11;
  *(_QWORD *)(v22 + 8) = a12;
  *(_BYTE *)(v22 + 16) = a13 & 1;
  result = v31;
  *v23 = v31;
  v23[1].n128_u64[0] = v30;
  return result;
}

double NoticeConfiguration.platterCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void NoticeConfiguration.platterCornerRadius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*NoticeConfiguration.platterCornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t NoticeConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NoticeConfiguration(0);
  return sub_2378D07D8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t type metadata accessor for NoticeConfiguration(uint64_t a1)
{
  return sub_23790828C(a1, qword_256827540);
}

uint64_t NoticeConfiguration.symbolConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NoticeConfiguration(0);
  return sub_23787246C(a1, v1 + *(int *)(v3 + 20), type metadata accessor for NotificationSymbolConfiguration);
}

uint64_t (*NoticeConfiguration.symbolConfiguration.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

uint64_t NoticeConfiguration.textConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 24);
  return sub_237A01124(v3, a1);
}

uint64_t NoticeConfiguration.textConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 24);
  return sub_237A01164(a1, v3);
}

uint64_t (*NoticeConfiguration.textConfiguration.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

uint64_t NoticeConfiguration.maxNotificationSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 28));
}

uint64_t NoticeConfiguration.maxNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for NoticeConfiguration(0);
  v8 = v3 + *(int *)(result + 28);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*NoticeConfiguration.maxNotificationSize.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

uint64_t NoticeConfiguration.minNotificationSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 32));
}

uint64_t NoticeConfiguration.minNotificationSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for NoticeConfiguration(0);
  v8 = v3 + *(int *)(result + 32);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*NoticeConfiguration.minNotificationSize.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

uint64_t NoticeConfiguration.pushToBottom.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 36));
}

uint64_t NoticeConfiguration.pushToBottom.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NoticeConfiguration(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*NoticeConfiguration.pushToBottom.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

uint64_t NoticeConfiguration.shadowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 40);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_retain();
}

__n128 NoticeConfiguration.shadowConfiguration.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for NoticeConfiguration(0) + 40));
  swift_release();
  result = v5;
  *v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*NoticeConfiguration.shadowConfiguration.modify())(_QWORD)
{
  type metadata accessor for NoticeConfiguration(0);
  return nullsub_1;
}

__n128 NoticeConfiguration.init(platterCornerRadius:symbolConfiguration:textConfiguration:pushToBottom:maxNotificationSize:minNotificationSize:shadowConfiguration:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, char a11, __n128 *a12)
{
  unint64_t v18;
  int *v19;
  char *v20;
  char *v21;
  __n128 *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __n128 result;
  __n128 v29;

  v29 = *a12;
  v18 = a12[1].n128_u64[0];
  v19 = (int *)type metadata accessor for NoticeConfiguration(0);
  v20 = (char *)a9 + v19[7];
  v21 = (char *)a9 + v19[8];
  v22 = (__n128 *)((char *)a9 + v19[10]);
  *a9 = a10;
  sub_2378D0858(a1, (uint64_t)a9 + v19[5], type metadata accessor for NotificationSymbolConfiguration);
  v23 = (_OWORD *)((char *)a9 + v19[6]);
  v24 = a2[7];
  v23[6] = a2[6];
  v23[7] = v24;
  v23[8] = a2[8];
  v25 = a2[3];
  v23[2] = a2[2];
  v23[3] = v25;
  v26 = a2[5];
  v23[4] = a2[4];
  v23[5] = v26;
  v27 = a2[1];
  *v23 = *a2;
  v23[1] = v27;
  *((_BYTE *)a9 + v19[9]) = a3;
  *(_QWORD *)v20 = a4;
  *((_QWORD *)v20 + 1) = a5;
  v20[16] = a6 & 1;
  *(_QWORD *)v21 = a7;
  *((_QWORD *)v21 + 1) = a8;
  v21[16] = a11 & 1;
  result = v29;
  *v22 = v29;
  v22[1].n128_u64[0] = v18;
  return result;
}

double sub_237A02290()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  double result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NotificationSymbolConfiguration(0);
  __swift_allocate_value_buffer(v3, qword_256827068);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_256827068);
  v5 = sub_237A86F84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_237A86FB4();
  sub_237A06F68((uint64_t)v2);
  sub_237A86FA8();
  v6 = sub_237A86FC0();
  swift_release();
  v7 = v4 + *(int *)(v3 + 24);
  v8 = *MEMORY[0x24BDF40A8];
  v9 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  *(_QWORD *)v4 = v6;
  *(_OWORD *)(v4 + 8) = xmmword_237AA3070;
  *(_BYTE *)(v4 + 24) = 0;
  v10 = (_OWORD *)(v4 + *(int *)(v3 + 28));
  result = 0.0;
  *v10 = xmmword_237AA3080;
  v10[1] = xmmword_237AA3080;
  return result;
}

uint64_t static NotificationSymbolConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E450, type metadata accessor for NotificationSymbolConfiguration, (uint64_t)qword_256827068, a1);
}

uint64_t sub_237A02400(uint64_t a1)
{
  return sub_237A02548(a1, &qword_2568706F8);
}

double sub_237A0240C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double result;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_25681E458 != -1)
    swift_once();
  v0 = qword_2568706F8;
  sub_237A86FA8();
  v1 = sub_237A86FC0();
  swift_retain();
  v2 = sub_237A86D8C();
  v3 = MEMORY[0x24BDEFCF8];
  v4 = MEMORY[0x24BDEFCD0];
  v8 = MEMORY[0x24BDEFCF8];
  v9 = MEMORY[0x24BDEFCD0];
  LODWORD(v7) = v2;
  v5 = sub_237A86DA4();
  qword_2568270D0 = v3;
  unk_2568270D8 = v4;
  dword_2568270B8 = v5;
  qword_256827080 = v1;
  unk_256827088 = v0;
  sub_237870734(&v7, (uint64_t)&unk_256827090);
  result = 44.0;
  xmmword_2568270E0 = xmmword_237AA3090;
  qword_2568270F0 = 0x4020000000000000;
  unk_2568270F8 = 8;
  byte_256827100 = 1;
  qword_256827108 = 0x3FF0000000000000;
  return result;
}

uint64_t static NotificationTextConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_25681E460 != -1)
    swift_once();
  return sub_237A01124((uint64_t)&qword_256827080, a1);
}

uint64_t sub_237A0253C(uint64_t a1)
{
  return sub_237A02548(a1, &qword_256870700);
}

uint64_t sub_237A02548(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237A86F84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_237A86FB4();
  result = sub_237A06F68((uint64_t)v5);
  *a2 = v7;
  return result;
}

double sub_237A025F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(), sel__carSystemQuaternaryColor);
  v4 = MEMORY[0x23B81DEE4](v3);
  sub_237A86FA8();
  v5 = sub_237A86F84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = sub_237A86FB4();
  sub_237A06F68((uint64_t)v2);
  xmmword_256827110 = xmmword_237AA30A0;
  *(_OWORD *)&qword_256827120 = xmmword_237AA30B0;
  qword_256827130 = v4;
  unk_256827138 = v6;
  result = 20.0;
  xmmword_256827140 = xmmword_237AA30C0;
  return result;
}

double sub_237A026EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double result;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_25681E468 != -1)
    swift_once();
  v0 = qword_256870700;
  sub_237A86FA8();
  v1 = sub_237A86FC0();
  swift_retain();
  v2 = sub_237A86D8C();
  v3 = MEMORY[0x24BDEFCF8];
  v4 = MEMORY[0x24BDEFCD0];
  v8 = MEMORY[0x24BDEFCF8];
  v9 = MEMORY[0x24BDEFCD0];
  LODWORD(v7) = v2;
  v5 = sub_237A86DA4();
  qword_2568271A0 = v3;
  unk_2568271A8 = v4;
  dword_256827188 = v5;
  qword_256827150 = v1;
  unk_256827158 = v0;
  sub_237870734(&v7, (uint64_t)&unk_256827160);
  result = 44.0;
  xmmword_2568271B0 = xmmword_237AA3090;
  qword_2568271C0 = 0x4020000000000000;
  unk_2568271C8 = 8;
  byte_2568271D0 = 0;
  qword_2568271D8 = 0x3FF0000000000000;
  return result;
}

double sub_237A027C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  double result;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NotificationSymbolConfiguration(0);
  __swift_allocate_value_buffer(v3, qword_2568271E0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2568271E0);
  v5 = sub_237A86F84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_237A86FB4();
  sub_237A06F68((uint64_t)v2);
  sub_237A86FA8();
  v6 = sub_237A86FC0();
  swift_release();
  v7 = v4 + *(int *)(v3 + 24);
  v8 = *MEMORY[0x24BDF40A8];
  v9 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  *(_QWORD *)v4 = v6;
  *(_OWORD *)(v4 + 8) = xmmword_237AA3070;
  *(_BYTE *)(v4 + 24) = 0;
  v10 = (_OWORD *)(v4 + *(int *)(v3 + 28));
  result = 40.0;
  __asm { FMOV            V1.2D, #16.0 }
  *v10 = xmmword_237AA30D0;
  v10[1] = _Q1;
  return result;
}

uint64_t static UserInteractiveConfiguration.symbolConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E480, type metadata accessor for NotificationSymbolConfiguration, (uint64_t)qword_2568271E0, a1);
}

uint64_t sub_237A0293C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return sub_2378D07D8(v8, a4, a2);
}

double sub_237A0299C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[152];

  v27 = sub_237A8747C();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - v2;
  v4 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v7, qword_2568271F8);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_2568271F8);
  if (qword_25681E470 != -1)
    swift_once();
  v9 = xmmword_256827110;
  v10 = qword_256827120;
  v11 = unk_256827128;
  v12 = qword_256827130;
  v13 = unk_256827138;
  v14 = xmmword_256827140;
  v15 = qword_25681E480;
  swift_retain();
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_2568271E0);
  sub_2378D07D8(v16, (uint64_t)v6, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_25681E478 != -1)
    swift_once();
  sub_237A01124((uint64_t)&qword_256827150, (uint64_t)v28);
  sub_237A871F4();
  v17 = sub_237A8723C();
  swift_release();
  sub_237A87470();
  v18 = v8 + v7[9];
  v19 = v8 + v7[10];
  v20 = (uint64_t *)(v8 + v7[13]);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = 0;
  *(_OWORD *)v8 = v9;
  *(_QWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 24) = v11;
  *(_QWORD *)(v8 + 32) = v12;
  *(_QWORD *)(v8 + 40) = v13;
  *(_OWORD *)(v8 + 48) = v14;
  *(_BYTE *)(v8 + 64) = 0;
  *(_QWORD *)(v8 + 72) = 0x4044000000000000;
  sub_2378D07D8((uint64_t)v6, v8 + v7[7], type metadata accessor for NotificationSymbolConfiguration);
  sub_237A01124((uint64_t)v28, v8 + v7[8]);
  *(_BYTE *)(v8 + v7[11]) = 0;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 1;
  v21 = v25;
  sub_237A87470();
  v22 = v26;
  v23 = v27;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  sub_237A01600((uint64_t)v28);
  sub_2378DE6A4((uint64_t)v6, type metadata accessor for NotificationSymbolConfiguration);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v8 + v7[12], v21, v23);
  swift_release();
  *v20 = v17;
  result = 60.0;
  *(_OWORD *)(v20 + 1) = xmmword_237AA0830;
  return result;
}

uint64_t static UserInteractiveConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E488, type metadata accessor for UserInteractiveConfiguration, (uint64_t)qword_2568271F8, a1);
}

double sub_237A02CD0(uint64_t a1)
{
  return sub_237A02D3C(a1, qword_256827210, &qword_25681E3F0, (uint64_t)qword_256824A90);
}

uint64_t static BannerConfiguration.close.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E490, type metadata accessor for BannerConfiguration, (uint64_t)qword_256827210, a1);
}

double sub_237A02D18(uint64_t a1)
{
  return sub_237A02D3C(a1, qword_256827228, &qword_25681E3F8, (uint64_t)qword_256824AA8);
}

double sub_237A02D3C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  double result;
  _OWORD v29[9];

  v7 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v13, a2);
  v14 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, a4);
  sub_2378D07D8(v15, (uint64_t)v12, type metadata accessor for IconNotificationButtonConfiguration);
  if (qword_25681E450 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v7, (uint64_t)qword_256827068);
  sub_2378D07D8(v16, (uint64_t)v9, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_25681E460 != -1)
    swift_once();
  sub_237A01124((uint64_t)&qword_256827080, (uint64_t)v29);
  sub_237A871F4();
  v17 = sub_237A8723C();
  swift_release();
  v18 = v14 + v13[9];
  v19 = v14 + v13[10];
  v20 = v14 + v13[12];
  sub_2378D0858((uint64_t)v12, v14, type metadata accessor for IconNotificationButtonConfiguration);
  *(_QWORD *)(v14 + v13[5]) = 0x4044000000000000;
  sub_2378D0858((uint64_t)v9, v14 + v13[7], type metadata accessor for NotificationSymbolConfiguration);
  v21 = (_OWORD *)(v14 + v13[8]);
  v23 = v29[7];
  v22 = v29[8];
  v24 = v29[6];
  v21[5] = v29[5];
  v21[6] = v24;
  v21[7] = v23;
  v21[8] = v22;
  v26 = v29[3];
  v25 = v29[4];
  v27 = v29[2];
  v21[1] = v29[1];
  v21[2] = v27;
  v21[3] = v26;
  v21[4] = v25;
  *v21 = v29[0];
  *(_BYTE *)(v14 + v13[6]) = 0;
  *(_BYTE *)(v14 + v13[11]) = 0;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 1;
  *(_QWORD *)v20 = v17;
  result = 60.0;
  *(_OWORD *)(v20 + 8) = xmmword_237AA0830;
  return result;
}

uint64_t static BannerConfiguration.chevron.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E498, type metadata accessor for BannerConfiguration, (uint64_t)qword_256827228, a1);
}

double sub_237A02FCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double result;
  _OWORD v18[9];

  v0 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (int *)type metadata accessor for NoticeConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v3, qword_256827240);
  v4 = (_QWORD *)__swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_256827240);
  if (qword_25681E450 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256827068);
  sub_2378D07D8(v5, (uint64_t)v2, type metadata accessor for NotificationSymbolConfiguration);
  if (qword_25681E460 != -1)
    swift_once();
  sub_237A01124((uint64_t)&qword_256827080, (uint64_t)v18);
  sub_237A871F4();
  v6 = sub_237A8723C();
  swift_release();
  v7 = (char *)v4 + v3[7];
  v8 = (char *)v4 + v3[8];
  v9 = (char *)v4 + v3[10];
  *v4 = 0x4044000000000000;
  sub_2378D0858((uint64_t)v2, (uint64_t)v4 + v3[5], type metadata accessor for NotificationSymbolConfiguration);
  v10 = (_OWORD *)((char *)v4 + v3[6]);
  v12 = v18[7];
  v11 = v18[8];
  v13 = v18[6];
  v10[5] = v18[5];
  v10[6] = v13;
  v10[7] = v12;
  v10[8] = v11;
  v15 = v18[3];
  v14 = v18[4];
  v16 = v18[2];
  v10[1] = v18[1];
  v10[2] = v16;
  v10[3] = v15;
  v10[4] = v14;
  *v10 = v18[0];
  *((_BYTE *)v4 + v3[9]) = 0;
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  *(_QWORD *)v9 = v6;
  result = 60.0;
  *(_OWORD *)(v9 + 8) = xmmword_237AA0830;
  return result;
}

uint64_t static NoticeConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237A0293C(&qword_25681E4A0, type metadata accessor for NoticeConfiguration, (uint64_t)qword_256827240, a1);
}

uint64_t sub_237A031BC(uint64_t a1)
{
  return sub_237A031F8(a1, qword_256827258);
}

uint64_t sub_237A031C8@<X0>(uint64_t a1@<X8>)
{
  return sub_237A034B4(&qword_25681E4A8, type metadata accessor for UserInteractiveConfiguration, (uint64_t)qword_256827258, a1);
}

uint64_t sub_237A031EC(uint64_t a1)
{
  return sub_237A031F8(a1, qword_256827270);
}

uint64_t sub_237A031F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for UserInteractiveConfiguration(0);
  __swift_allocate_value_buffer(v3, a2);
  v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_25681E488 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_2568271F8);
  return sub_2378D07D8(v5, v4, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_237A03280@<X0>(uint64_t a1@<X8>)
{
  return sub_237A034B4(&qword_25681E4B0, type metadata accessor for UserInteractiveConfiguration, (uint64_t)qword_256827270, a1);
}

uint64_t sub_237A032A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_256827288);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256827288);
  if (qword_25681E490 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_256827210);
  return sub_2378D07D8(v2, v1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A03330@<X0>(uint64_t a1@<X8>)
{
  return sub_237A034B4(&qword_25681E4B8, type metadata accessor for BannerConfiguration, (uint64_t)qword_256827288, a1);
}

uint64_t sub_237A03354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for BannerConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_2568272A0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2568272A0);
  if (qword_25681E498 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_256827228);
  return sub_2378D07D8(v2, v1, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A033E0@<X0>(uint64_t a1@<X8>)
{
  return sub_237A034B4(&qword_25681E4C0, type metadata accessor for BannerConfiguration, (uint64_t)qword_2568272A0, a1);
}

uint64_t sub_237A03404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for NoticeConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_2568272B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2568272B8);
  if (qword_25681E4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_256827240);
  return sub_2378D07D8(v2, v1, type metadata accessor for NoticeConfiguration);
}

uint64_t sub_237A03490@<X0>(uint64_t a1@<X8>)
{
  return sub_237A034B4(&qword_25681E4C8, type metadata accessor for NoticeConfiguration, (uint64_t)qword_2568272B8, a1);
}

uint64_t sub_237A034B4@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return sub_2378D07D8(v8, a4, a2);
}

uint64_t EnvironmentValues.userInteractiveConfiguration.getter()
{
  sub_2379A3C70();
  return sub_237A86B88();
}

uint64_t EnvironmentValues.userInteractiveConfiguration.setter(uint64_t a1)
{
  return sub_237A03B88(a1, type metadata accessor for UserInteractiveConfiguration, (void (*)(uint64_t))sub_2379A3C70);
}

void (*EnvironmentValues.userInteractiveConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UserInteractiveConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_2379A3C70();
  sub_237A86B88();
  return sub_237A03604;
}

void sub_237A03604(uint64_t **a1, char a2)
{
  sub_237A03CD8(a1, a2, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t EnvironmentValues.blockingUserInteractiveConfiguration.getter()
{
  sub_237A0364C();
  return sub_237A86B88();
}

unint64_t sub_237A0364C()
{
  unint64_t result;

  result = qword_2568272D0;
  if (!qword_2568272D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA34A8, &type metadata for BlockingAlertNotificationKey);
    atomic_store(result, (unint64_t *)&qword_2568272D0);
  }
  return result;
}

uint64_t EnvironmentValues.blockingUserInteractiveConfiguration.setter(uint64_t a1)
{
  return sub_237A03B88(a1, type metadata accessor for UserInteractiveConfiguration, (void (*)(uint64_t))sub_237A0364C);
}

void (*EnvironmentValues.blockingUserInteractiveConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UserInteractiveConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_237A0364C();
  sub_237A86B88();
  return sub_237A03748;
}

void sub_237A03748(uint64_t **a1, char a2)
{
  sub_237A03CD8(a1, a2, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t EnvironmentValues.closeButtonBannerConfiguration.getter()
{
  sub_237A03790();
  return sub_237A86B88();
}

unint64_t sub_237A03790()
{
  unint64_t result;

  result = qword_2568272D8;
  if (!qword_2568272D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3470, &type metadata for CloseButtonBannerNotificationKey);
    atomic_store(result, (unint64_t *)&qword_2568272D8);
  }
  return result;
}

uint64_t EnvironmentValues.closeButtonBannerConfiguration.setter(uint64_t a1)
{
  return sub_237A03B88(a1, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A03790);
}

void (*EnvironmentValues.closeButtonBannerConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for BannerConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_237A03790();
  sub_237A86B88();
  return sub_237A0388C;
}

void sub_237A0388C(uint64_t **a1, char a2)
{
  sub_237A03CD8(a1, a2, type metadata accessor for BannerConfiguration);
}

uint64_t EnvironmentValues.chevronBannerConfiguration.getter()
{
  sub_237A038D4();
  return sub_237A86B88();
}

unint64_t sub_237A038D4()
{
  unint64_t result;

  result = qword_2568272E0;
  if (!qword_2568272E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3438, &type metadata for ChevronBannerNotificationKey);
    atomic_store(result, (unint64_t *)&qword_2568272E0);
  }
  return result;
}

uint64_t EnvironmentValues.chevronBannerConfiguration.setter(uint64_t a1)
{
  return sub_237A03B88(a1, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A038D4);
}

void (*EnvironmentValues.chevronBannerConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for BannerConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_237A038D4();
  sub_237A86B88();
  return sub_237A039D0;
}

void sub_237A039D0(uint64_t **a1, char a2)
{
  sub_237A03CD8(a1, a2, type metadata accessor for BannerConfiguration);
}

uint64_t EnvironmentValues.noticeNotificationConfiguration.getter()
{
  sub_237A03A18();
  return sub_237A86B88();
}

unint64_t sub_237A03A18()
{
  unint64_t result;

  result = qword_2568272E8;
  if (!qword_2568272E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3400, &type metadata for NoticeNotificationKey);
    atomic_store(result, (unint64_t *)&qword_2568272E8);
  }
  return result;
}

uint64_t sub_237A03A5C()
{
  sub_237A03A18();
  return sub_237A86B88();
}

uint64_t sub_237A03A98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_2378D07D8(a1, (uint64_t)&v9 - v6, type metadata accessor for NoticeConfiguration);
  sub_2378D07D8((uint64_t)v7, (uint64_t)v4, type metadata accessor for NoticeConfiguration);
  sub_237A03A18();
  sub_237A86B94();
  return sub_2378DE6A4((uint64_t)v7, type metadata accessor for NoticeConfiguration);
}

uint64_t EnvironmentValues.noticeNotificationConfiguration.setter(uint64_t a1)
{
  return sub_237A03B88(a1, type metadata accessor for NoticeConfiguration, (void (*)(uint64_t))sub_237A03A18);
}

uint64_t sub_237A03B88(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = a2(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_2378D07D8(a1, (uint64_t)&v10 - v7, a2);
  a3(v8);
  sub_237A86B94();
  return sub_2378DE6A4(a1, a2);
}

void (*EnvironmentValues.noticeNotificationConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for NoticeConfiguration(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_237A03A18();
  sub_237A86B88();
  return sub_237A03CC4;
}

void sub_237A03CC4(uint64_t **a1, char a2)
{
  sub_237A03CD8(a1, a2, type metadata accessor for NoticeConfiguration);
}

void sub_237A03CD8(uint64_t **a1, char a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = *a1;
  sub_2378D07D8((*a1)[3], (*a1)[2], a3);
  v6 = (void *)v5[3];
  v7 = (void *)v5[1];
  v8 = (void *)v5[2];
  if ((a2 & 1) != 0)
  {
    sub_2378D07D8(v5[2], v5[1], a3);
    sub_237A86B94();
    sub_2378DE6A4((uint64_t)v8, a3);
  }
  else
  {
    sub_237A86B94();
  }
  sub_2378DE6A4((uint64_t)v6, a3);
  free(v6);
  free(v8);
  free(v7);
  free(v5);
}

uint64_t sub_237A03DC4()
{
  sub_237A03A18();
  return sub_237A86B88();
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationSymbolConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_237A872D8();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (_OWORD *)(v7 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
  }
  return v7;
}

uint64_t initializeWithCopy for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237A872D8();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t assignWithCopy for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v6 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  return a1;
}

uint64_t initializeWithTake for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t assignWithTake for NotificationSymbolConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSymbolConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A04160(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237A872D8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NotificationSymbolConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_237A041E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_237A872D8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_237A0425C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A872D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for NotificationTextConfiguration(uint64_t a1)
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 16);
  return __swift_destroy_boxed_opaque_existential_2Tm(a1 + 56);
}

uint64_t initializeWithCopy for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 16, v5, v7);
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for NotificationTextConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_2Tm(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationTextConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationTextConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationTextConfiguration()
{
  return &type metadata for NotificationTextConfiguration;
}

_QWORD *initializeBufferWithCopyOfBuffer for UserInteractiveConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v43 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v43 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 72) = a2[9];
    v9 = a3[7];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)v10 = *(uint64_t *)((char *)a2 + v9);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
    *(_BYTE *)(v10 + 24) = *((_BYTE *)a2 + v9 + 24);
    v12 = type metadata accessor for NotificationSymbolConfiguration(0);
    v13 = *(int *)(v12 + 24);
    v46 = v11 + v13;
    v47 = v10 + v13;
    v14 = sub_237A872D8();
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v45(v47, v46, v14);
    v15 = *(int *)(v12 + 28);
    v16 = (_OWORD *)(v10 + v15);
    v17 = (_OWORD *)(v11 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *(_QWORD *)v20 = *(uint64_t *)((char *)a2 + v19);
    *((_QWORD *)v20 + 1) = v22;
    v23 = (uint64_t)v4 + v19 + 16;
    v24 = (uint64_t)a2 + v19 + 16;
    v25 = *(_OWORD *)((char *)a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v25;
    v26 = v25;
    v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
    swift_retain();
    swift_retain();
    v27(v23, v24, v26);
    v28 = *(_OWORD *)(v21 + 80);
    *((_OWORD *)v20 + 5) = v28;
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))((uint64_t)(v20 + 56), v21 + 56);
    v29 = *(_OWORD *)(v21 + 112);
    *((_OWORD *)v20 + 6) = *(_OWORD *)(v21 + 96);
    *((_OWORD *)v20 + 7) = v29;
    v20[128] = *(_BYTE *)(v21 + 128);
    *((_QWORD *)v20 + 17) = *(_QWORD *)(v21 + 136);
    v30 = a3[9];
    v31 = a3[10];
    v32 = (char *)v4 + v30;
    v33 = (uint64_t)a2 + v30;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = *(_BYTE *)(v33 + 16);
    v34 = (char *)v4 + v31;
    v35 = (uint64_t)a2 + v31;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = *(_BYTE *)(v35 + 16);
    v36 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v37 = (char *)v4 + v36;
    v38 = (uint64_t)a2 + v36;
    v39 = sub_237A8747C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)v4 + v40;
    v42 = (uint64_t)a2 + v40;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for UserInteractiveConfiguration(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  swift_release();
  v4 = a1 + a2[7];
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v6 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[8];
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 56);
  v8 = a1 + a2[12];
  v9 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_release();
}

uint64_t initializeWithCopy for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(a2 + v7 + 24);
  v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11 = *(int *)(v10 + 24);
  v43 = v9 + v11;
  v44 = v8 + v11;
  v12 = sub_237A872D8();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v13(v44, v43, v12);
  v14 = *(int *)(v10 + 28);
  v15 = (_OWORD *)(v8 + v14);
  v16 = (_OWORD *)(v9 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 8);
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = v21;
  v22 = a1 + v18 + 16;
  v23 = a2 + v18 + 16;
  v24 = *(_OWORD *)(a2 + v18 + 40);
  *(_OWORD *)(v19 + 40) = v24;
  v25 = v24;
  v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
  swift_retain();
  swift_retain();
  v26(v22, v23, v25);
  v27 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 80) = v27;
  (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v19 + 56, v20 + 56);
  v28 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v28;
  *(_BYTE *)(v19 + 128) = *(_BYTE *)(v20 + 128);
  *(_QWORD *)(v19 + 136) = *(_QWORD *)(v20 + 136);
  v29 = a3[9];
  v30 = a3[10];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  v33 = a1 + v30;
  v34 = a2 + v30;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  v35 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  swift_retain();
  swift_release();
  v9 = *(_OWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 24) = *(_BYTE *)(v8 + 24);
  *(_OWORD *)(v7 + 8) = v9;
  v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11 = *(int *)(v10 + 24);
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(v10 + 28);
  v16 = (_QWORD *)(v7 + v15);
  v17 = (_QWORD *)(v8 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  v16[3] = v17[3];
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_retain();
  swift_release();
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v19 + 16), (uint64_t *)(v20 + 16));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v19 + 56), (uint64_t *)(v20 + 56));
  *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
  *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
  *(_QWORD *)(v19 + 112) = *(_QWORD *)(v20 + 112);
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  *(_BYTE *)(v19 + 128) = *(_BYTE *)(v20 + 128);
  *(_QWORD *)(v19 + 136) = *(_QWORD *)(v20 + 136);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *v23;
  *(_BYTE *)(v22 + 16) = *((_BYTE *)v23 + 16);
  *(_OWORD *)v22 = v24;
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (__int128 *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 16) = *((_BYTE *)v27 + 16);
  *(_OWORD *)v26 = v28;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  v33 = a3[13];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_retain();
  swift_release();
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  return a1;
}

uint64_t initializeWithTake for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(a2 + v8 + 24);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + v8 + 8);
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(int *)(v11 + 24);
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = *(int *)(v11 + 28);
  v17 = (_OWORD *)(v9 + v16);
  v18 = (_OWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_OWORD *)(a1 + v20);
  v23 = (_OWORD *)(a2 + v20);
  v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v25 = v23[1];
  *v22 = *v23;
  v22[1] = v25;
  v26 = v23[8];
  v27 = v23[6];
  v22[7] = v23[7];
  v22[8] = v26;
  v28 = v23[5];
  v22[4] = v23[4];
  v22[5] = v28;
  v22[6] = v27;
  v29 = a1 + v21;
  v30 = a2 + v21;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = (__int128 *)(a2 + v31);
  v35 = *v34;
  *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
  LOBYTE(v34) = *(_BYTE *)(a2 + v32);
  *(_OWORD *)v33 = v35;
  *(_BYTE *)(a1 + v32) = (_BYTE)v34;
  v36 = a3[12];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  v40 = a3[13];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
  return a1;
}

uint64_t assignWithTake for UserInteractiveConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11 = *(int *)(v10 + 24);
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = *(int *)(v10 + 28);
  v16 = (_OWORD *)(v8 + v15);
  v17 = (_OWORD *)(v9 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_release();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v20 + 16);
  v22 = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
  __swift_destroy_boxed_opaque_existential_2Tm(v20 + 56);
  *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_QWORD *)(v20 + 112) = *(_QWORD *)(v21 + 112);
  *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
  *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
  *(_QWORD *)(v20 + 136) = *(_QWORD *)(v21 + 136);
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  v29 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = a3[13];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)(a1 + v33) = *(_QWORD *)v35;
  swift_release();
  *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInteractiveConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A0526C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NotificationSymbolConfiguration(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_237A8747C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UserInteractiveConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A05318(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for NotificationSymbolConfiguration(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_237A8747C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_237A053B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for NotificationSymbolConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = sub_237A8747C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for UserInteractiveConfiguration.ButtonConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for UserInteractiveConfiguration.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for UserInteractiveConfiguration.ButtonConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for UserInteractiveConfiguration.ButtonConfiguration(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInteractiveConfiguration.ButtonConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInteractiveConfiguration.ButtonConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInteractiveConfiguration.ButtonConfiguration()
{
  return &type metadata for UserInteractiveConfiguration.ButtonConfiguration;
}

_QWORD *initializeBufferWithCopyOfBuffer for BannerConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v55)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v9 = v8[6];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_237A872D8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v55 = v13;
    swift_retain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    v15[32] = v16[32];
    v18 = v8[8];
    v19 = (_OWORD *)((char *)v7 + v18);
    v20 = (_OWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_QWORD *)((char *)v7 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
    v22 = a3[6];
    *(_QWORD *)((char *)v7 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)v7 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[7];
    v24 = (char *)v7 + v23;
    v25 = (char *)a2 + v23;
    *(_QWORD *)v24 = *(_QWORD *)((char *)a2 + v23);
    v24[24] = *((_BYTE *)a2 + v23 + 24);
    *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)a2 + v23 + 8);
    v26 = type metadata accessor for NotificationSymbolConfiguration(0);
    v27 = *(int *)(v26 + 24);
    v28 = &v24[v27];
    v29 = &v25[v27];
    swift_retain();
    v55(v28, v29, v12);
    v30 = *(int *)(v26 + 28);
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v33;
    v34 = a3[8];
    v35 = (char *)v7 + v34;
    v36 = (char *)a2 + v34;
    v37 = *(_QWORD *)((char *)a2 + v34 + 8);
    *(_QWORD *)v35 = *(_QWORD *)((char *)a2 + v34);
    *((_QWORD *)v35 + 1) = v37;
    v38 = (uint64_t)v7 + v34 + 16;
    v39 = (uint64_t)a2 + v34 + 16;
    v40 = *(_OWORD *)((char *)a2 + v34 + 40);
    *(_OWORD *)(v35 + 40) = v40;
    v41 = v40;
    v42 = **(void (***)(uint64_t, uint64_t, uint64_t))(v40 - 8);
    swift_retain();
    swift_retain();
    v42(v38, v39, v41);
    v43 = *((_OWORD *)v36 + 5);
    *((_OWORD *)v35 + 5) = v43;
    (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v35 + 56), (uint64_t)(v36 + 56));
    v44 = *((_OWORD *)v36 + 7);
    *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
    *((_OWORD *)v35 + 7) = v44;
    v35[128] = v36[128];
    *((_QWORD *)v35 + 17) = *((_QWORD *)v36 + 17);
    v45 = a3[9];
    v46 = a3[10];
    v47 = (char *)v7 + v45;
    v48 = (char *)a2 + v45;
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    v49 = (char *)v7 + v46;
    v50 = (char *)a2 + v46;
    *(_OWORD *)v49 = *(_OWORD *)v50;
    v49[16] = v50[16];
    v51 = a3[12];
    *((_BYTE *)v7 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v52 = (char *)v7 + v51;
    v53 = (char *)a2 + v51;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
  }
  swift_retain();
  return v7;
}

uint64_t destroy for BannerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v5 = sub_237A872D8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  swift_release();
  v8 = type metadata accessor for NotificationSymbolConfiguration(0);
  v6(v7 + *(int *)(v8 + 24), v5);
  v9 = a1 + *(int *)(a2 + 32);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v9 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v9 + 56);
  return swift_release();
}

_QWORD *initializeWithCopy for BannerConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v54)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_237A872D8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v54 = v12;
  swift_retain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  v17 = v7[8];
  v18 = (_OWORD *)((char *)a1 + v17);
  v19 = (_OWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
  v21 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
  v23[24] = *((_BYTE *)a2 + v22 + 24);
  *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
  v25 = type metadata accessor for NotificationSymbolConfiguration(0);
  v26 = *(int *)(v25 + 24);
  v27 = &v23[v26];
  v28 = &v24[v26];
  swift_retain();
  v54(v27, v28, v11);
  v29 = *(int *)(v25 + 28);
  v30 = &v23[v29];
  v31 = &v24[v29];
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)((char *)a2 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
  *((_QWORD *)v34 + 1) = v36;
  v37 = (uint64_t)a1 + v33 + 16;
  v38 = (uint64_t)a2 + v33 + 16;
  v39 = *(_OWORD *)((char *)a2 + v33 + 40);
  *(_OWORD *)(v34 + 40) = v39;
  v40 = v39;
  v41 = **(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8);
  swift_retain();
  swift_retain();
  v41(v37, v38, v40);
  v42 = *((_OWORD *)v35 + 5);
  *((_OWORD *)v34 + 5) = v42;
  (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v34 + 56), (uint64_t)(v35 + 56));
  v43 = *((_OWORD *)v35 + 7);
  *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
  *((_OWORD *)v34 + 7) = v43;
  v34[128] = v35[128];
  *((_QWORD *)v34 + 17) = *((_QWORD *)v35 + 17);
  v44 = a3[9];
  v45 = a3[10];
  v46 = (char *)a1 + v44;
  v47 = (char *)a2 + v44;
  *(_OWORD *)v46 = *(_OWORD *)v47;
  v46[16] = v47[16];
  v48 = (char *)a1 + v45;
  v49 = (char *)a2 + v45;
  *(_OWORD *)v48 = *(_OWORD *)v49;
  v48[16] = v49[16];
  v50 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BannerConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_OWORD *)v14;
  v16 = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  *(_OWORD *)v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  v17 = v6[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  v23 = *(_OWORD *)(v22 + 8);
  v21[24] = v22[24];
  *(_OWORD *)(v21 + 8) = v23;
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v21[*(int *)(v24 + 24)], &v22[*(int *)(v24 + 24)], v10);
  v25 = *(int *)(v24 + 28);
  v26 = &v21[v25];
  v27 = &v22[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
  *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
  v28 = a3[8];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  swift_retain();
  swift_release();
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v29 + 2, (uint64_t *)v30 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v29 + 7, (uint64_t *)v30 + 7);
  *((_QWORD *)v29 + 12) = *((_QWORD *)v30 + 12);
  *((_QWORD *)v29 + 13) = *((_QWORD *)v30 + 13);
  *((_QWORD *)v29 + 14) = *((_QWORD *)v30 + 14);
  *((_QWORD *)v29 + 15) = *((_QWORD *)v30 + 15);
  v29[128] = v30[128];
  *((_QWORD *)v29 + 17) = *((_QWORD *)v30 + 17);
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)v32 = v34;
  v35 = a3[10];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_OWORD *)v37;
  v36[16] = v37[16];
  *(_OWORD *)v36 = v38;
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  return a1;
}

_OWORD *initializeWithTake for BannerConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v6[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)((char *)a2 + v21);
  v22[24] = *((_BYTE *)a2 + v21 + 24);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  v25 = *(int *)(v24 + 28);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v29 = a3[8];
  v30 = a3[9];
  v31 = (_OWORD *)((char *)a1 + v29);
  v32 = (_OWORD *)((char *)a2 + v29);
  v33 = v32[3];
  v31[2] = v32[2];
  v31[3] = v33;
  v34 = v32[1];
  *v31 = *v32;
  v31[1] = v34;
  v35 = v32[8];
  v36 = v32[6];
  v31[7] = v32[7];
  v31[8] = v35;
  v37 = v32[5];
  v31[4] = v32[4];
  v31[5] = v37;
  v31[6] = v36;
  v38 = (char *)a1 + v30;
  v39 = (char *)a2 + v30;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  v40 = a3[10];
  v41 = a3[11];
  v42 = (char *)a1 + v40;
  v43 = (char *)a2 + v40;
  *(_OWORD *)v42 = *(_OWORD *)v43;
  v42[16] = v43[16];
  *((_BYTE *)a1 + v41) = *((_BYTE *)a2 + v41);
  v44 = a3[12];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
  return a1;
}

_QWORD *assignWithTake for BannerConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v6[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_release();
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  v25 = *(int *)(v24 + 28);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v29 = a3[8];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 16));
  v32 = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 1) = *((_OWORD *)v31 + 1);
  *((_OWORD *)v30 + 2) = v32;
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 56));
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  *((_QWORD *)v30 + 14) = *((_QWORD *)v31 + 14);
  *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
  v30[128] = v31[128];
  *((_QWORD *)v30 + 17) = *((_QWORD *)v31 + 17);
  v33 = a3[9];
  v34 = a3[10];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  v37 = (char *)a1 + v34;
  v38 = (char *)a2 + v34;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  v39 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)v41;
  swift_release();
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A06258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A0630C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for NotificationSymbolConfiguration(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_237A063B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for NotificationSymbolConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
    v8[24] = *((_BYTE *)a2 + v7 + 24);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
    v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    v11 = *(int *)(v10 + 24);
    v41 = &v8[v11];
    v12 = &v9[v11];
    v13 = sub_237A872D8();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v14(v41, v12, v13);
    v15 = *(int *)(v10 + 28);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    v19 = a3[6];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)((char *)a2 + v19 + 8);
    *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
    *((_QWORD *)v20 + 1) = v22;
    v23 = (uint64_t)v4 + v19 + 16;
    v24 = (uint64_t)a2 + v19 + 16;
    v25 = *(_OWORD *)((char *)a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v25;
    v26 = v25;
    v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
    swift_retain();
    swift_retain();
    v27(v23, v24, v26);
    v28 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 5) = v28;
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))((uint64_t)(v20 + 56), (uint64_t)(v21 + 56));
    v29 = *((_OWORD *)v21 + 7);
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    *((_OWORD *)v20 + 7) = v29;
    v20[128] = v21[128];
    *((_QWORD *)v20 + 17) = *((_QWORD *)v21 + 17);
    v30 = a3[7];
    v31 = a3[8];
    v32 = (char *)v4 + v30;
    v33 = (char *)a2 + v30;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    v34 = (char *)v4 + v31;
    v35 = (char *)a2 + v31;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    v36 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v37 = (char *)v4 + v36;
    v38 = (char *)a2 + v36;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v6 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v7 + 56);
  return swift_release();
}

_QWORD *initializeWithCopy for NoticeConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  *a1 = *a2;
  v5 = a3[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_QWORD *)v6 = *(_QWORD *)((char *)a2 + v5);
  v6[24] = *((_BYTE *)a2 + v5 + 24);
  *(_OWORD *)(v6 + 8) = *(_OWORD *)((char *)a2 + v5 + 8);
  v8 = type metadata accessor for NotificationSymbolConfiguration(0);
  v9 = *(int *)(v8 + 24);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_237A872D8();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain();
  v13(v10, v11, v12);
  v14 = *(int *)(v8 + 28);
  v15 = &v6[v14];
  v16 = &v7[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)((char *)a2 + v18 + 8);
  *(_QWORD *)v19 = *(_QWORD *)((char *)a2 + v18);
  *((_QWORD *)v19 + 1) = v21;
  v22 = (uint64_t)a1 + v18 + 16;
  v23 = (uint64_t)a2 + v18 + 16;
  v24 = *(_OWORD *)((char *)a2 + v18 + 40);
  *(_OWORD *)(v19 + 40) = v24;
  v25 = v24;
  v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
  swift_retain();
  swift_retain();
  v26(v22, v23, v25);
  v27 = *((_OWORD *)v20 + 5);
  *((_OWORD *)v19 + 5) = v27;
  (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v19 + 56), (uint64_t)(v20 + 56));
  v28 = *((_OWORD *)v20 + 7);
  *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
  *((_OWORD *)v19 + 7) = v28;
  v19[128] = v20[128];
  *((_QWORD *)v19 + 17) = *((_QWORD *)v20 + 17);
  v29 = a3[7];
  v30 = a3[8];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  v33 = (char *)a1 + v30;
  v34 = (char *)a2 + v30;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  v35 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_OWORD *)(v36 + 8) = *(_OWORD *)(v37 + 8);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NoticeConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  v9 = *(_OWORD *)(v8 + 8);
  v7[24] = v8[24];
  *(_OWORD *)(v7 + 8) = v9;
  v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11 = *(int *)(v10 + 24);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(v10 + 28);
  v16 = &v7[v15];
  v17 = &v8[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v19 + 2, (uint64_t *)v20 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v19 + 7, (uint64_t *)v20 + 7);
  *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
  *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
  *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
  *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
  v19[128] = v20[128];
  *((_QWORD *)v19 + 17) = *((_QWORD *)v20 + 17);
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_OWORD *)v22 = v24;
  v25 = a3[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)v26 = v28;
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  return a1;
}

_QWORD *initializeWithTake for NoticeConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  v7[24] = *((_BYTE *)a2 + v6 + 24);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)((char *)a2 + v6 + 8);
  v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  v10 = *(int *)(v9 + 24);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 28);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = a3[6];
  v19 = a3[7];
  v20 = (_OWORD *)((char *)a1 + v18);
  v21 = (_OWORD *)((char *)a2 + v18);
  v22 = v21[3];
  v20[2] = v21[2];
  v20[3] = v22;
  v23 = v21[1];
  *v20 = *v21;
  v20[1] = v23;
  v24 = v21[8];
  v25 = v21[6];
  v20[7] = v21[7];
  v20[8] = v24;
  v26 = v21[5];
  v20[4] = v21[4];
  v20[5] = v26;
  v20[6] = v25;
  v27 = (char *)a1 + v19;
  v28 = (char *)a2 + v19;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = a3[8];
  v30 = a3[9];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v33 = a3[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  return a1;
}

_QWORD *assignWithTake for NoticeConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v7[24] = v8[24];
  v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  v10 = *(int *)(v9 + 24);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(v9 + 28);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_release();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 16));
  v21 = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
  *((_OWORD *)v19 + 2) = v21;
  *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 56));
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
  *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
  *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
  *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
  v19[128] = v20[128];
  *((_QWORD *)v19 + 17) = *((_QWORD *)v20 + 17);
  v22 = a3[7];
  v23 = a3[8];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  v26 = (char *)a1 + v23;
  v27 = (char *)a2 + v23;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  v28 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)v30;
  swift_release();
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A06D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for NotificationSymbolConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A06DFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for NotificationSymbolConfiguration(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_237A06E78()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NotificationSymbolConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeNotificationKey()
{
  return &type metadata for NoticeNotificationKey;
}

ValueMetadata *type metadata accessor for ChevronBannerNotificationKey()
{
  return &type metadata for ChevronBannerNotificationKey;
}

ValueMetadata *type metadata accessor for CloseButtonBannerNotificationKey()
{
  return &type metadata for CloseButtonBannerNotificationKey;
}

ValueMetadata *type metadata accessor for BlockingAlertNotificationKey()
{
  return &type metadata for BlockingAlertNotificationKey;
}

ValueMetadata *type metadata accessor for UserInteractiveNotificationKey()
{
  return &type metadata for UserInteractiveNotificationKey;
}

uint64_t sub_237A06F68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237A06FA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  sub_2379D62F4(0, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v4 = *v3;
      ObjectType = swift_getObjectType();
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      swift_unknownObjectRetain();
      v7 = v6(ObjectType, v4);
      v9 = v8;
      swift_unknownObjectRelease();
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_2379D62F4(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v3 += 2;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_237A070B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s16UnkeyedContainerCMa()
{
  return objc_opt_self();
}

uint64_t sub_237A0710C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t result;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  v6 = (_QWORD *)(v1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  swift_bridgeObjectRetain();
  v8 = sub_237A882E0();
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_2378829BC();
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v7;
  *(_BYTE *)(v11 + 40) = 0;
  sub_237880450(inited);
  v12 = v4;
  v13 = *(_QWORD *)(v2 + 32);
  v14 = _s20SingleValueContainerCMa();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0xE000000000000000;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v15 + 40) = v12;
  *(_QWORD *)(v15 + 48) = v13;
  swift_beginAccess();
  v16 = *(_QWORD **)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_237895414(0, v16[2] + 1, 1, v16);
    *v6 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_237895414((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *v6 = v16;
  }
  v16[2] = v19 + 1;
  v20 = &v16[2 * v19];
  v20[4] = v15;
  v20[5] = &off_25097A0B8;
  swift_endAccess();
  a1[3] = v14;
  result = sub_2379849D4(&qword_256822EF0, 255, (uint64_t (*)(uint64_t))_s20SingleValueContainerCMa, (uint64_t)&unk_237A9E958);
  a1[4] = result;
  *a1 = v15;
  return result;
}

uint64_t sub_237A07344()
{
  uint64_t v1[4];

  sub_237A0710C(v1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_237A073D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v5 = v4;
  v6 = _s14KeyedContainerCMa(0, a2, a3, a4);
  v7 = *(_QWORD *)(v4 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  v9 = (_QWORD *)(v4 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  swift_bridgeObjectRetain();
  v11 = sub_237A882E0();
  v13 = v12;
  *(_QWORD *)(inited + 56) = &type metadata for AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_2378829BC();
  v14 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = 0;
  sub_237880450(inited);
  v15 = v7;
  v16 = *(_QWORD *)(v5 + 32);
  swift_bridgeObjectRetain();
  v17 = sub_237955578(v15, v16);
  swift_beginAccess();
  v18 = *(_QWORD **)(v5 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + 16) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_237895414(0, v18[2] + 1, 1, v18);
    *v9 = v18;
  }
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    v18 = sub_237895414((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    *v9 = v18;
  }
  v18[2] = v21 + 1;
  v22 = &v18[2 * v21];
  v22[4] = v17;
  v22[5] = &off_250976360;
  swift_endAccess();
  MEMORY[0x23B81FA98](&unk_237A98F20, v6);
  return sub_237A882C8();
}

uint64_t sub_237A07608@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;

  v2 = v1;
  v4 = *v1;
  v5 = v1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  v7 = v1 + 2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v1[2] + 16);
  swift_bridgeObjectRetain();
  v9 = sub_237A882E0();
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_2378829BC();
  v12 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v8;
  *(_BYTE *)(v12 + 40) = 0;
  sub_237880450(inited);
  v13 = v2[4];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = MEMORY[0x24BEE4AF8];
  v14[3] = v5;
  v14[4] = v13;
  swift_beginAccess();
  v15 = (_QWORD *)v2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[2] = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_237895414(0, v15[2] + 1, 1, v15);
    *v7 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_237895414((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v7 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[2 * v18];
  v19[4] = v14;
  v19[5] = &off_25097DC18;
  swift_endAccess();
  a1[3] = v4;
  result = sub_2379849D4(&qword_256822EE8, v20, (uint64_t (*)(uint64_t))_s16UnkeyedContainerCMa, (uint64_t)&unk_237AA3564);
  a1[4] = result;
  *a1 = v14;
  return result;
}

uint64_t sub_237A0783C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 56) = &type metadata for AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_2378829BC();
  v6 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(v6 + 16) = 0x7265707573;
  *(_QWORD *)(v6 + 24) = 0xE500000000000000;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  swift_bridgeObjectRetain();
  sub_237880450(inited);
  v7 = v4;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = type metadata accessor for _LuaEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = 0;
  v10[5] = 0;
  a1[3] = v9;
  a1[4] = sub_2379849D4((unint64_t *)&qword_256822EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  *a1 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237A07990()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
}

uint64_t sub_237A079D0()
{
  uint64_t v1[4];

  sub_237A0710C(v1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_237A88490();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_237A07A3C(char a1)
{
  uint64_t v2[4];
  char v3;

  v3 = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3[7];

  v3[5] = a1;
  v3[6] = a2;
  sub_237A0710C(v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v3[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_237A07B44(double a1)
{
  uint64_t v2[6];

  *(double *)&v2[5] = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07BC8(float a1)
{
  uint64_t v2[4];
  float v3;

  v3 = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07C4C(uint64_t a1)
{
  return sub_237A07F6C(a1);
}

uint64_t sub_237A07C70(char a1)
{
  return sub_237A07D5C(a1);
}

uint64_t sub_237A07C94(__int16 a1)
{
  return sub_237A07E0C(a1);
}

uint64_t sub_237A07CB8(int a1)
{
  return sub_237A07EBC(a1);
}

uint64_t sub_237A07CDC(uint64_t a1)
{
  return sub_237A07F6C(a1);
}

uint64_t sub_237A07D00()
{
  return sub_237A883E8();
}

uint64_t sub_237A07D14(uint64_t a1)
{
  return sub_237A07F6C(a1);
}

uint64_t sub_237A07D38(char a1)
{
  return sub_237A07D5C(a1);
}

uint64_t sub_237A07D5C(char a1)
{
  uint64_t v2[4];
  char v3;

  v3 = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07DE8(__int16 a1)
{
  return sub_237A07E0C(a1);
}

uint64_t sub_237A07E0C(__int16 a1)
{
  uint64_t v2[4];
  __int16 v3;

  v3 = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07E98(int a1)
{
  return sub_237A07EBC(a1);
}

uint64_t sub_237A07EBC(int a1)
{
  uint64_t v2[4];
  int v3;

  v3 = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07F48(uint64_t a1)
{
  return sub_237A07F6C(a1);
}

uint64_t sub_237A07F6C(uint64_t a1)
{
  uint64_t v2[6];

  v2[5] = a1;
  sub_237A0710C(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_237A88484();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_237A07FF8()
{
  return sub_237A883F4();
}

uint64_t sub_237A0800C()
{
  return sub_237A07344();
}

uint64_t sub_237A0802C()
{
  return sub_237A88310();
}

uint64_t sub_237A08054()
{
  return sub_237A88334();
}

uint64_t sub_237A0807C()
{
  return sub_237A88328();
}

uint64_t sub_237A080A4()
{
  return sub_237A88340();
}

uint64_t sub_237A080CC()
{
  return sub_237A8834C();
}

uint64_t sub_237A080F4()
{
  return sub_237A88358();
}

uint64_t sub_237A0811C()
{
  return sub_237A88370();
}

uint64_t sub_237A08144()
{
  return sub_237A8837C();
}

uint64_t sub_237A0816C()
{
  return sub_237A88388();
}

uint64_t sub_237A08194()
{
  return sub_237A88394();
}

uint64_t sub_237A081BC()
{
  return sub_237A883AC();
}

uint64_t sub_237A081E4()
{
  return sub_237A88364();
}

uint64_t sub_237A0820C()
{
  return sub_237A883A0();
}

uint64_t sub_237A08234()
{
  return sub_237A883B8();
}

uint64_t sub_237A0825C()
{
  return sub_237A883C4();
}

uint64_t sub_237A08284()
{
  return sub_237A883D0();
}

uint64_t sub_237A082AC()
{
  return sub_237A883DC();
}

uint64_t sub_237A082D4()
{
  return sub_237A8831C();
}

uint64_t sub_237A08304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A073D4(a1, a2, a3, a4);
}

uint64_t sub_237A08324@<X0>(_QWORD *a1@<X8>)
{
  return sub_237A07608(a1);
}

uint64_t sub_237A08344@<X0>(_QWORD *a1@<X8>)
{
  return sub_237A0783C(a1);
}

uint64_t sub_237A08364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
    return 32123;
  v1 = swift_bridgeObjectRetain();
  sub_237A06FA8(v1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
  sub_237926878();
  v2 = sub_237A87764();
  v4 = v3;
  swift_bridgeObjectRelease();
  sub_237A08558(123, 0xE100000000000000, v2, v4);
  if ((v5 & 1) != 0)
  {
    v11 = 8315;
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x23B81E5BC](8224, 0xE200000000000000, *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16));
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    sub_237A0866C(v9, v6, v8);
    swift_bridgeObjectRelease();
    v11 = 2683;
    sub_237A87764();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
  }
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return v11;
}

unint64_t sub_237A08558(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_237A87968() != a1 || v9 != a2)
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_237A878A8();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_237A08648()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237A0866C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  sub_2379D62F4(0, 0, 0);
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      swift_unknownObjectRetain();
      v9(ObjectType, v7);
      sub_237A878E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237A878E4();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      if (v11 >= v10 >> 1)
        sub_2379D62F4(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v12 = v15 + 16 * v11;
      *(_QWORD *)(v12 + 32) = a2;
      *(_QWORD *)(v12 + 40) = a3;
      v6 += 2;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return v15;
}

double ArcDocument.init(package:editableTheme:extras:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  double result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_BYTE *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_QWORD *)(a4 + 16) = v4;
  *(_QWORD *)(a4 + 24) = v5;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(a4 + 48) = v6;
  *(_QWORD *)(a4 + 56) = v7;
  *(_QWORD *)(a4 + 64) = v8;
  *(_OWORD *)(a4 + 72) = *(_OWORD *)(a1 + 72);
  *(_QWORD *)(a4 + 88) = v9;
  *(_QWORD *)(a4 + 96) = v10;
  *(_BYTE *)(a4 + 104) = v11;
  *(_QWORD *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 120) = *a2;
  result = 0.0;
  *(_OWORD *)(a4 + 168) = 0u;
  *(_OWORD *)(a4 + 152) = 0u;
  *(_OWORD *)(a4 + 136) = 0u;
  *(_QWORD *)(a4 + 184) = 0;
  *(_QWORD *)(a4 + 192) = a3;
  *(_QWORD *)(a4 + 200) = 0;
  return result;
}

uint64_t ArcDocument.save(using:)(_QWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[13];

  v2 = v1[11];
  v11[10] = v1[10];
  v11[11] = v2;
  v11[12] = v1[12];
  v3 = v1[7];
  v11[6] = v1[6];
  v11[7] = v3;
  v4 = v1[9];
  v11[8] = v1[8];
  v11[9] = v4;
  v5 = v1[3];
  v11[2] = v1[2];
  v11[3] = v5;
  v6 = v1[5];
  v11[4] = v1[4];
  v11[5] = v6;
  v7 = v1[1];
  v11[0] = *v1;
  v11[1] = v7;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v8);
  return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v9 + 8))(v11, v8, v9);
}

uint64_t ArcDocument.package.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 88);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_BYTE *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 72);
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237A08964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_BYTE *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_QWORD *)(a2 + 88) = v8;
  *(_QWORD *)(a2 + 96) = v9;
  *(_BYTE *)(a2 + 104) = v10;
  *(_QWORD *)(a2 + 112) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237A089F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = a1[1];
  v4 = a1[3];
  v19 = a1[2];
  v20 = *a1;
  v17 = a1[5];
  v18 = a1[4];
  v16 = *((_BYTE *)a1 + 48);
  v5 = a1[8];
  v15 = a1[7];
  v14 = *(_OWORD *)(a1 + 9);
  v6 = a1[12];
  v13 = a1[11];
  v12 = *((_BYTE *)a1 + 104);
  v7 = a1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v17;
  *(_BYTE *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 88) = v13;
  *(_QWORD *)(a2 + 96) = v6;
  *(_BYTE *)(a2 + 104) = v12;
  *(_QWORD *)(a2 + 112) = v7;
  v9 = *(_QWORD *)(a2 + 200);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    *(_QWORD *)(a2 + 200) = v11;
  return result;
}

uint64_t ArcDocument.package.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v15 = a1[1];
  v16 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v13 = *(__int128 *)((char *)a1 + 72);
  v14 = *(__int128 *)((char *)a1 + 56);
  v5 = *((_QWORD *)a1 + 11);
  v6 = *((_QWORD *)a1 + 12);
  v12 = *((_BYTE *)a1 + 104);
  v11 = *((_QWORD *)a1 + 14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_OWORD *)v1 = v16;
  *(_OWORD *)(v1 + 16) = v15;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  *(_OWORD *)(v1 + 56) = v14;
  *(_OWORD *)(v1 + 72) = v13;
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 96) = v6;
  *(_BYTE *)(v1 + 104) = v12;
  *(_QWORD *)(v1 + 112) = v11;
  v8 = *(_QWORD *)(v1 + 200);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    *(_QWORD *)(v1 + 200) = v10;
  return result;
}

uint64_t (*ArcDocument.package.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_237A08C48;
}

uint64_t ArcDocument.editableTheme.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 128);
  *a1 = *(_QWORD *)(v1 + 120);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237A08C74(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  a2[15] = v3;
  a2[16] = v4;
  v6 = a2[25];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a2[25] = v8;
  return result;
}

uint64_t ArcDocument.editableTheme.setter(_OWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 120) = *a1;
  v4 = *(_QWORD *)(v1 + 200);
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    *(_QWORD *)(v1 + 200) = v6;
  return result;
}

uint64_t (*ArcDocument.editableTheme.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_237A08C48;
}

uint64_t sub_237A08D44(uint64_t result, char a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if ((a2 & 1) == 0)
  {
    v2 = *(_QWORD *)(*(_QWORD *)result + 200);
    v3 = __OFADD__(v2, 1);
    v4 = v2 + 1;
    if (v3)
      __break(1u);
    else
      *(_QWORD *)(*(_QWORD *)result + 200) = v4;
  }
  return result;
}

uint64_t ArcDocument.theme.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = v1[17];
  v3 = v1[18];
  v5 = v1[19];
  v6 = v1[20];
  v7 = v1[21];
  v8 = v1[22];
  v9 = v1[23];
  if (v5)
  {
    v15 = &type metadata for ResolvedTheme;
    v16 = &protocol witness table for ResolvedTheme;
    v10 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v14 = v10;
    v10[2] = v4;
    v10[3] = v3;
    v10[4] = v5;
    v10[5] = v6;
    v10[6] = v7;
    v10[7] = v8;
    v10[8] = v9;
    sub_237870734(&v14, (uint64_t)a1);
  }
  else
  {
    v11 = v1[15];
    v12 = v1[16];
    a1[3] = &type metadata for EditableTheme;
    a1[4] = &protocol witness table for EditableTheme;
    *a1 = v11;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return sub_237A08E50(v4, v3, v5);
}

uint64_t sub_237A08E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_237A08EA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *ArcDocument.extras.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 192);
  v2 = v1;
  return v1;
}

void ArcDocument.extras.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
}

uint64_t (*ArcDocument.extras.modify())()
{
  return nullsub_1;
}

uint64_t ArcDocument.revision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t ArcDocument.revision.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = result;
  return result;
}

uint64_t (*ArcDocument.revision.modify())()
{
  return nullsub_1;
}

uint64_t sub_237A08F70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 128);
  *a2 = *(_QWORD *)(a1 + 120);
  a2[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void destroy for ArcDocument(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

}

uint64_t initializeWithCopy for ArcDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  id v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v10;
    v11 = *(_QWORD *)(a2 + 160);
    v12 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 152) = v9;
    *(_QWORD *)(a1 + 160) = v11;
    v14 = *(_QWORD *)(a2 + 176);
    v13 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 168) = v12;
    *(_QWORD *)(a1 + 176) = v14;
    *(_QWORD *)(a1 + 184) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v15;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  }
  v16 = *(void **)(a2 + 192);
  v17 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v16;
  *(_QWORD *)(a1 + 200) = v17;
  v18 = v16;
  return a1;
}

uint64_t assignWithCopy for ArcDocument(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  void *v14;
  id v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 136);
  v5 = (__int128 *)(a2 + 136);
  v6 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    }
    else
    {
      sub_237A093F4(a1 + 136);
      v8 = *(_OWORD *)(a2 + 152);
      v7 = *(_OWORD *)(a2 + 168);
      v9 = *v5;
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 152) = v8;
      *(_OWORD *)(a1 + 168) = v7;
      *v4 = v9;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 152);
    v12 = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v11;
    *(_OWORD *)(a1 + 168) = v12;
    *v4 = v10;
  }
  v13 = *(void **)(a1 + 192);
  v14 = *(void **)(a2 + 192);
  *(_QWORD *)(a1 + 192) = v14;
  v15 = v14;

  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t sub_237A093F4(uint64_t a1)
{
  destroy for ResolvedTheme();
  return a1;
}

uint64_t assignWithTake for ArcDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 152))
    goto LABEL_5;
  v8 = *(_QWORD *)(a2 + 152);
  if (!v8)
  {
    sub_237A093F4(a1 + 136);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v9;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_6:
  v10 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArcDocument(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcDocument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcDocument()
{
  return &type metadata for ArcDocument;
}

uint64_t Color.encode(to:)(_QWORD *a1, uint64_t a2)
{
  CGColorSpaceRef v4;
  CGColorSpace *v5;
  CGColor *v6;
  CGColor *v7;
  CGColorRef CopyByMatchingToColorSpace;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t result;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _BYTE v19[24];
  uint64_t v20;

  v4 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF318]);
  if (!v4)
    goto LABEL_16;
  v5 = v4;
  v6 = (CGColor *)sub_237A871A0();
  if (!v6
    || (v7 = v6,
        CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v5, kCGRenderingIntentDefault, v6, 0),
        v7,
        !CopyByMatchingToColorSpace))
  {
    CopyByMatchingToColorSpace = v5;
LABEL_15:

LABEL_16:
    v16 = sub_237A87FD4();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256825880);
    v18[3] = MEMORY[0x24BDF3E48];
    *v18 = a2;
    __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
    swift_retain();
    sub_237A88664();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE2728], v16);
    return swift_willThrow();
  }
  if (CGColorGetNumberOfComponents(CopyByMatchingToColorSpace) != 4 || (v9 = sub_237A87D1C()) == 0)
  {

    goto LABEL_15;
  }
  v10 = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886AC();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(double *)(v10 + 8 * v12 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256821E90);
      result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_237A8A9F0;
      v15 = v13 * 255.0;
      if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) == 0)
        break;
      if (v15 <= -9.22337204e18)
        goto LABEL_19;
      if (v15 >= 9.22337204e18)
        goto LABEL_20;
      ++v12;
      *(_QWORD *)(result + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(result + 64) = MEMORY[0x24BEE17F0];
      *(_QWORD *)(result + 32) = (uint64_t)v15;
      sub_237A87830();
      swift_bridgeObjectRetain();
      sub_237A878E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    sub_237A88460();
    swift_bridgeObjectRelease();

    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
  }
  return result;
}

__int128 *Color.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  CGColorRef SRGB;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int128 *v23;
  CGColorRef v24;
  __int128 *p_alpha;
  __int128 *v26;
  uint64_t v27;
  __int128 alpha;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A88670();
  if (v1)
  {

    __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
    sub_237A8867C();
    __swift_project_boxed_opaque_existential_2Tm(v29, v30);
    v3 = sub_237A88418();
    v5 = v4;
    if ((sub_237A87950() & 1) != 0 && sub_237A8789C() == 9)
    {
      v6 = sub_237A878C0();
      swift_bridgeObjectRetain();
      v7 = sub_2379BDD34(v6, v3, v5);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      swift_bridgeObjectRelease();
      MEMORY[0x23B81E4C0](v7, v9, v11, v13);
      swift_bridgeObjectRelease();
      v14 = objc_allocWithZone(MEMORY[0x24BDD17A8]);
      v15 = (void *)sub_237A877F4();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend(v14, sel_initWithString_, v15);

      v27 = 0;
      if (objc_msgSend(v16, sel_scanHexLongLong_, &v27))
      {
        swift_bridgeObjectRelease();
        SRGB = CGColorCreateSRGB((double)BYTE3(v27) / 255.0, (double)BYTE2(v27) / 255.0, (double)BYTE1(v27) / 255.0, (double)v27 / 255.0);
        p_alpha = (__int128 *)MEMORY[0x23B81DED8](SRGB);
      }
      else
      {
        v22 = sub_237A87FB0();
        swift_allocError();
        v26 = v23;
        __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
        sub_237A88664();
        *(_QWORD *)&alpha = 0;
        *((_QWORD *)&alpha + 1) = 0xE000000000000000;
        sub_237A87F44();
        swift_bridgeObjectRelease();
        strcpy((char *)&alpha, "invalid color ");
        HIBYTE(alpha) = -18;
        sub_237A878E4();
        swift_bridgeObjectRelease();
        p_alpha = v26;
        sub_237A87F98();
        (*(void (**)(__int128 *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v26, *MEMORY[0x24BEE26D8], v22);
        swift_willThrow();
      }

    }
    else
    {
      v18 = sub_237A87FB0();
      swift_allocError();
      v20 = v19;
      __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
      sub_237A88664();
      sub_237A87F44();
      swift_bridgeObjectRelease();
      strcpy((char *)&alpha, "invalid color ");
      HIBYTE(alpha) = -18;
      p_alpha = &alpha;
      sub_237A878E4();
      swift_bridgeObjectRelease();
      sub_237A87F98();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D8], v18);
      swift_willThrow();
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_23787AE3C();
    sub_237A882EC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_237A882EC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_237A882EC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_237A882EC();
    v24 = CGColorCreateSRGB(*(CGFloat *)&alpha, *(CGFloat *)&alpha, *(CGFloat *)&alpha, *(CGFloat *)&alpha);
    p_alpha = (__int128 *)MEMORY[0x23B81DED8](v24);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return p_alpha;
}

__int128 *sub_237A09F84@<X0>(_QWORD *a1@<X0>, __int128 **a2@<X8>)
{
  uint64_t v2;
  __int128 *result;

  result = Color.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_237A09FAC(_QWORD *a1)
{
  uint64_t *v1;

  return Color.encode(to:)(a1, *v1);
}

uint64_t sub_237A09FC4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  int64_t v33;
  __int128 v34;
  ValueMetadata *v35;
  _UNKNOWN **v36;
  uint64_t v37;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v37 = MEMORY[0x24BEE4AF8];
  sub_2379D6310(0, v1, 0);
  v2 = v37;
  result = sub_2379FA474(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v25 = v3 + 80;
  v26 = v1;
  v27 = v5;
  v28 = v3 + 64;
  v29 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v30 = v7;
    v12 = *(_QWORD *)(v3 + 56) + 48 * v6;
    v13 = *(void **)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 24);
    v16 = *(_BYTE *)(v12 + 32);
    v31 = *(_QWORD *)(v12 + 40);
    v32 = *(void **)(v12 + 16);
    sub_237870090(*(void **)v12, v14, v32, v15, v16);
    v37 = v2;
    v18 = *(_QWORD *)(v2 + 16);
    v17 = *(_QWORD *)(v2 + 24);
    v33 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      sub_2379D6310(v17 > 1, v33, 1);
      v2 = v37;
    }
    v35 = &type metadata for ImageAsset;
    v36 = &protocol witness table for ImageAsset;
    v19 = swift_allocObject();
    *(_QWORD *)&v34 = v19;
    *(_QWORD *)(v19 + 16) = v13;
    *(_QWORD *)(v19 + 24) = v14;
    *(_QWORD *)(v19 + 32) = v32;
    *(_QWORD *)(v19 + 40) = v15;
    *(_BYTE *)(v19 + 48) = v16;
    *(_QWORD *)(v19 + 56) = v31;
    *(_QWORD *)(v2 + 16) = v33;
    result = sub_237870734(&v34, v2 + 40 * v18 + 32);
    v3 = v29;
    v9 = 1 << *(_BYTE *)(v29 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v28;
    v20 = *(_QWORD *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v27;
    if (*(_DWORD *)(v29 + 36) != v27)
      goto LABEL_27;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v26;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v26;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(v25 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v30 + 1;
    v6 = v9;
    if (v30 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.stateColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.defaultColorID.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(dataIdentifier:stateColorIDs:defaultColorID:)@<Q0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4;
  __n128 result;

  v4 = a3[1].n128_u8[0];
  a4->n128_u8[0] = *a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  a4[2].n128_u8[0] = v4;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  sub_23787A11C(v3, v5, v6);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_23787A134(v3, v5, v6);
}

uint64_t sub_237A0A414()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6F436574617473;
  if (*v0 != 1)
    v1 = 0x43746C7561666564;
  if (*v0)
    return v1;
  else
    return 0x6E65644961746164;
}

uint64_t sub_237A0A494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A0D658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A0A4B8()
{
  sub_237A0C55C();
  return sub_237A88718();
}

uint64_t sub_237A0A4E0()
{
  sub_237A0C55C();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  char v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827640);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v16 = *((_QWORD *)v1 + 2);
  v17 = v9;
  v15 = *((_QWORD *)v1 + 3);
  v21 = v1[32];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C55C();
  sub_237A886B8();
  LOBYTE(v18) = v8;
  v22 = 0;
  sub_237888154();
  sub_237A882B0();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v5;
  v12 = v21;
  v14 = v15;
  v13 = v16;
  v18 = v17;
  v22 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  v18 = v13;
  v19 = v14;
  v20 = v12;
  v22 = 2;
  sub_23787AA5C();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v2 = *(_QWORD *)(v0 + 8);
  v1 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  sub_23787A11C(v1, v3, v4);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v1, v3, v4);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C55C();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v19 = 0;
  sub_237888198();
  sub_237A881F0();
  v9 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  v19 = 1;
  sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
  sub_237A881F0();
  v10 = v16;
  v19 = 2;
  sub_23787AB8C();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v16;
  v12 = v17;
  v13 = v18;
  swift_bridgeObjectRetain();
  sub_23787A11C(v11, v12, v13);
  swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_23787A134(v11, v12, v13);
}

uint64_t sub_237A0AA38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.init(from:)(a1, a2);
}

uint64_t sub_237A0AA4C(_QWORD *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors.encode(to:)(a1);
}

uint64_t sub_237A0AA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[72];

  v2 = *(_QWORD *)(v0 + 8);
  v1 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  sub_23787A11C(v1, v3, v4);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v1, v3, v4);
  return sub_237A88610();
}

void Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StateImages.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.StateImages.images.modify())()
{
  return nullsub_1;
}

_BYTE *Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(dataIdentifier:images:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.assets.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_237A09FC4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void Instrument.GaugeStyle.StateSensitiveImage.StateImages.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  v3 = *(_QWORD *)(v1 + 8);
  v6[2] = a1;
  sub_2379FA1C8((void (*)(_OWORD *__return_ptr, _QWORD *))sub_237A0C5A0, (uint64_t)v6, v3);
  if (!v2)
  {
    v5 = v4;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 8) = v5;
  }
}

void sub_237A0AC70(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  sub_237870090(*(void **)a1, v7, v8, v9, v10);
  ImageAsset.restore(from:)(a2);
  if (v3)
  {
    sub_2378702E0(v6, v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v7;
    *(_QWORD *)(a3 + 16) = v8;
    *(_QWORD *)(a3 + 24) = v9;
    *(_BYTE *)(a3 + 32) = v10;
    *(_QWORD *)(a3 + 40) = v11;
  }
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2378775A8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A0AD8C()
{
  _BYTE *v0;

  if (*v0)
    return 0x736567616D69;
  else
    return 0x6E65644961746164;
}

uint64_t sub_237A0ADD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A0D818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A0ADF4()
{
  sub_237A0C5B8();
  return sub_237A88718();
}

uint64_t sub_237A0AE1C()
{
  sub_237A0C5B8();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827658);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C5B8();
  sub_237A886B8();
  v13 = v8;
  v12 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v10[1] = v10[0];
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
    sub_237888998(&qword_25681EDA0, (uint64_t (*)(void))sub_2378888DC, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_2378775A8((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827668);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C5B8();
  sub_237A88688();
  if (!v2)
  {
    v14 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
    v13 = 1;
    sub_237888998(&qword_25681EDC0, (uint64_t (*)(void))sub_237888A0C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A0B1E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_237A09FC4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_237A0B238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  v3 = *(_QWORD *)(v1 + 8);
  v6[2] = a1;
  sub_2379FA1C8((void (*)(_OWORD *__return_ptr, _QWORD *))sub_237A0DAA4, (uint64_t)v6, v3);
  if (!v2)
  {
    v5 = v4;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 8) = v5;
  }
}

uint64_t sub_237A0B28C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StateImages.init(from:)(a1, a2);
}

uint64_t sub_237A0B2A0(_QWORD *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.StateImages.encode(to:)(a1);
}

uint64_t sub_237A0B2B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_2378775A8((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t sub_237A0B330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_2378775A8(a1, v3);
}

uint64_t sub_237A0B398()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_2378775A8((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.defaultImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.defaultImage.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v7;
  *(__n128 *)v1 = v7;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.defaultImage.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.stateImages.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.stateImages.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.stateImages.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_237A0C5FC(v2, v3, v4, v5, v6);
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_237A0C644(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_BYTE *)(v1 + 96));
  result = v6;
  *(__n128 *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v3;
  *(_BYTE *)(v1 + 96) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.StateSensitiveImage.statefulSolidColors.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.StateSensitiveImage.init(defaultImage:stateImages:statefulSolidColors:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;

  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v4;
  result = *a2;
  v6 = *a3;
  v7 = a3[1];
  *(__n128 *)(a4 + 48) = *a2;
  *(_OWORD *)(a4 + 64) = v6;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *((_BYTE *)a3 + 32);
  *(_BYTE *)(a4 + 32) = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a4 + 40) = v8;
  *(_OWORD *)(a4 + 80) = v7;
  *(_BYTE *)(a4 + 96) = v9;
  return result;
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.assets.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v8 + 56) = &type metadata for ImageAsset;
  *(_QWORD *)(v8 + 64) = &protocol witness table for ImageAsset;
  v9 = swift_allocObject();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v9 + 16) = v1;
  *(_QWORD *)(v9 + 24) = v2;
  *(_QWORD *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 40) = v4;
  *(_BYTE *)(v9 + 48) = v5;
  *(_QWORD *)(v9 + 56) = v6;
  sub_237870090(v1, v2, v3, v4, v5);
  if (v7)
  {
    v10 = swift_bridgeObjectRetain();
    v11 = sub_237A09FC4(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  sub_2378805C4(v11);
  return v8;
}

void Instrument.GaugeStyle.StateSensitiveImage.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    if (*(_QWORD *)(v1 + 56))
    {
      MEMORY[0x24BDAC7A8](v4);
      v8[2] = a1;
      sub_2379FA1C8((void (*)(_OWORD *__return_ptr, _QWORD *))sub_237A0DAA4, (uint64_t)v8, v5);
      v7 = v6;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 56) = v7;
    }
  }
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 88);
  v7 = *(_BYTE *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 8);
  v12 = *(void **)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = *(_BYTE *)(v1 + 32);
  sub_237870090(*(void **)v1, v11, v12, v13, v14);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v3, v11, v12, v13, v14);
  if (v4)
  {
    sub_237A885EC();
    InstrumentDataIdentifier.rawValue.getter();
    swift_bridgeObjectRetain_n();
    sub_237A87710();
    swift_bridgeObjectRelease();
    sub_2378775A8(a1, v4);
    swift_bridgeObjectRelease_n();
    if (v5)
    {
LABEL_3:
      sub_237A885EC();
      InstrumentDataIdentifier.rawValue.getter();
      swift_bridgeObjectRetain();
      sub_23787A11C(v9, v8, v7);
      swift_bridgeObjectRetain();
      sub_23787A11C(v9, v8, v7);
      sub_237A87710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_237876E24(a1, v5);
      swift_bridgeObjectRelease();
      sub_23787A11C(v9, v8, v7);
      Theme.ColorID.rawValue.getter();
      sub_237A87710();
      swift_bridgeObjectRelease();
      sub_23787A134(v9, v8, v7);
      sub_237A0C644(v10, v5, v9, v8, v7);
      return sub_237A0C644(v10, v5, v9, v8, v7);
    }
  }
  else
  {
    sub_237A885EC();
    if (v5)
      goto LABEL_3;
  }
  return sub_237A885EC();
}

uint64_t sub_237A0B9D4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x616D496574617473;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0x49746C7561666564;
}

uint64_t sub_237A0BA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A0D924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A0BA68()
{
  sub_237A0C9F8();
  return sub_237A88718();
}

uint64_t sub_237A0BA90()
{
  sub_237A0C9F8();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  char v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827670);
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  v9 = *((_QWORD *)v1 + 5);
  v25 = *((_QWORD *)v1 + 6);
  v26 = v9;
  v10 = *((_QWORD *)v1 + 7);
  v23 = *((_QWORD *)v1 + 8);
  v24 = v10;
  v11 = *((_QWORD *)v1 + 9);
  v21 = *((_QWORD *)v1 + 10);
  v22 = v11;
  v20 = *((_QWORD *)v1 + 11);
  v35 = *((unsigned __int8 *)v1 + 96);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C9F8();
  sub_237A886B8();
  v30 = v27;
  v31 = v7;
  v32 = v6;
  v33 = v8;
  v34 = v26;
  v36 = 0;
  sub_2378888DC();
  v12 = v29;
  sub_237A882B0();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  v15 = v20;
  v14 = v21;
  v17 = v22;
  v16 = v23;
  v18 = v28;
  *(_QWORD *)&v30 = v25;
  *((_QWORD *)&v30 + 1) = v24;
  v36 = 1;
  sub_237A0CA3C();
  sub_237A88268();
  *(_QWORD *)&v30 = v16;
  *((_QWORD *)&v30 + 1) = v17;
  v31 = v14;
  v32 = v15;
  v33 = v35;
  v36 = 2;
  sub_237A0CA80();
  sub_237A88268();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.hashValue.getter()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 11);
  v3 = *((_BYTE *)v0 + 96);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 40);
  v11 = *(__int128 *)((char *)v0 + 56);
  v12 = *(__int128 *)((char *)v0 + 72);
  v13 = v2;
  v14 = v3;
  sub_237A885D4();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.StateSensitiveImage.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  int v56;
  char v57;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827690);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A0C9F8();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v57 = 0;
    sub_237888A0C();
    sub_237A881F0();
    v47 = a2;
    v10 = v53;
    v11 = v54;
    v46 = v55;
    v57 = 1;
    v48 = v51;
    v49 = v50;
    v12 = v52;
    sub_237870090(v50, v51, v52, v53, v54);
    sub_237A0CAC4();
    sub_237A881A8();
    v56 = v11;
    v44 = v12;
    v45 = v10;
    v13 = v48;
    v14 = v49;
    v15 = v51;
    v43 = v50;
    v57 = 2;
    sub_237A0CB08();
    swift_bridgeObjectRetain();
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = (uint64_t)v50;
    v16 = v51;
    v42 = v53;
    v41 = v54;
    v18 = (uint64_t)v52;
    sub_237A0C5FC((uint64_t)v50, v51, (uint64_t)v52, v53, v54);
    sub_237A0C644(0, 0, 0, 0, 0);
    v19 = v44;
    sub_237870090(v14, v13, v44, v45, v56);
    swift_bridgeObjectRetain();
    v39 = v16;
    v40 = v17;
    v20 = v18;
    v38 = v18;
    v21 = v18;
    v22 = v42;
    LOBYTE(v18) = v41;
    sub_237A0C5FC(v17, v16, v21, v42, v41);
    sub_237A0C644(v17, v16, v20, v22, v18);
    swift_bridgeObjectRelease();
    v24 = v48;
    v23 = v49;
    v25 = v45;
    LOBYTE(v17) = v56;
    sub_2378702E0(v49, v48, v19, v45, v56);
    v27 = v46;
    v26 = v47;
    *v47 = v23;
    v26[1] = v24;
    v26[2] = v19;
    v26[3] = v25;
    *((_BYTE *)v26 + 32) = v17;
    v29 = v42;
    v28 = v43;
    v26[5] = v27;
    v26[6] = v28;
    v30 = v39;
    v31 = v40;
    v26[7] = v15;
    v26[8] = v31;
    v32 = v38;
    v26[9] = v30;
    v26[10] = v32;
    v26[11] = v29;
    LOBYTE(v24) = v41;
    *((_BYTE *)v26 + 96) = v41;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702E0(v49, v48, v19, v45, v56);
    swift_bridgeObjectRelease();
    v33 = v31;
    v34 = v30;
    v35 = v32;
    v36 = v29;
    v37 = v24;
  }
  return sub_237A0C644(v33, v34, v35, v36, v37);
}

void sub_237A0C11C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    if (*(_QWORD *)(v1 + 56))
    {
      MEMORY[0x24BDAC7A8](v4);
      v8[2] = a1;
      sub_2379FA1C8((void (*)(_OWORD *__return_ptr, _QWORD *))sub_237A0DAA4, (uint64_t)v8, v5);
      v7 = v6;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 56) = v7;
    }
  }
}

uint64_t sub_237A0C1B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.StateSensitiveImage.init(from:)(a1, a2);
}

uint64_t sub_237A0C1C4(_QWORD *a1)
{
  return Instrument.GaugeStyle.StateSensitiveImage.encode(to:)(a1);
}

uint64_t sub_237A0C1D8()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 11);
  v3 = *((_BYTE *)v0 + 96);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 40);
  v11 = *(__int128 *)((char *)v0 + 56);
  v12 = *(__int128 *)((char *)v0 + 72);
  v13 = v2;
  v14 = v3;
  sub_237A885D4();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t sub_237A0C258()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 11);
  v3 = *((_BYTE *)v0 + 96);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 40);
  v11 = *(__int128 *)((char *)v0 + 56);
  v12 = *(__int128 *)((char *)v0 + 72);
  v13 = v2;
  v14 = v3;
  sub_237A885D4();
  Instrument.GaugeStyle.StateSensitiveImage.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV0H6ImagesV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = InstrumentDataIdentifier.rawValue.getter();
  v6 = v5;
  if (v4 == InstrumentDataIdentifier.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v9 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return 0;
  }
  return sub_2379B9100(v2, v3);
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV19StatefulSolidColorsV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v22 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = InstrumentDataIdentifier.rawValue.getter();
  v11 = v10;
  if (v9 == InstrumentDataIdentifier.rawValue.getter() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = 0;
    if ((v13 & 1) == 0)
      return v14 & 1;
  }
  if ((sub_2379B7304(v3, v6) & 1) != 0)
  {
    sub_23787A11C(v2, v4, v22);
    sub_23787A11C(v5, v7, v8);
    Theme.ColorID.rawValue.getter();
    v16 = v15;
    v18 = v17;
    Theme.ColorID.rawValue.getter();
    if (v16 == v20 && v18 == v19)
      v14 = 1;
    else
      v14 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v5, v7, v8);
    sub_23787A134(v2, v4, v22);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_237A0C55C()
{
  unint64_t result;

  result = qword_256827648;
  if (!qword_256827648)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3CD4, &_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827648);
  }
  return result;
}

void sub_237A0C5A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_237A0AC70(a1, *(_QWORD **)(v2 + 16), a2);
}

unint64_t sub_237A0C5B8()
{
  unint64_t result;

  result = qword_256827660;
  if (!qword_256827660)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3C84, &_s19StateSensitiveImageV11StateImagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827660);
  }
  return result;
}

uint64_t sub_237A0C5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_23787A11C(a3, a4, a5);
  }
  return result;
}

uint64_t sub_237A0C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_23787A134(a3, a4, a5);
  }
  return result;
}

uint64_t sub_237A0C68C()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV2eeoiySbAG_AGtFZ_0(__int128 *a1, __int128 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _BOOL8 result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  char v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v2 = *((_BYTE *)a1 + 32);
  v4 = *((_QWORD *)a1 + 5);
  v3 = *((_QWORD *)a1 + 6);
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 9);
  v35 = *((_QWORD *)a1 + 10);
  v36 = *((_QWORD *)a1 + 8);
  v7 = *((_QWORD *)a1 + 11);
  v8 = *((_BYTE *)a1 + 96);
  v9 = *((_BYTE *)a2 + 32);
  v11 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)a2 + 6);
  v12 = *((_QWORD *)a2 + 7);
  v13 = *((_QWORD *)a2 + 9);
  v32 = *((_QWORD *)a2 + 8);
  v33 = a2[5];
  v34 = *((_BYTE *)a2 + 96);
  v14 = a1[1];
  v40 = *a1;
  v41 = v14;
  v42 = v2;
  v15 = a2[1];
  v37 = *a2;
  v38 = v15;
  v39 = v9;
  v16 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v40, (uint64_t)&v37);
  result = 0;
  if ((v16 & 1) != 0 && v4 == v11)
  {
    if (v5)
    {
      if (v12)
      {
        LOBYTE(v40) = v3;
        LOBYTE(v37) = v10;
        v18 = InstrumentDataIdentifier.rawValue.getter();
        v20 = v19;
        if (v18 == InstrumentDataIdentifier.rawValue.getter() && v20 == v21)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v22 = sub_237A8840C();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        v23 = sub_2379B9100(v5, v12);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
          return 0;
LABEL_14:
        v24 = v6;
        if (v6)
        {
          v25 = v35;
          v26 = v36;
          *(_QWORD *)&v40 = v36;
          *((_QWORD *)&v40 + 1) = v24;
          *(_QWORD *)&v41 = v35;
          *((_QWORD *)&v41 + 1) = v7;
          v27 = v7;
          v28 = v8;
          v42 = v8;
          if (v13)
          {
            LOBYTE(v37) = v32;
            *((_QWORD *)&v37 + 1) = v13;
            v38 = v33;
            v39 = v34;
            sub_237A0C5FC(v36, v24, v35, v7, v8);
            swift_bridgeObjectRetain();
            sub_23787A11C(v35, v7, v8);
            v29 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO19StateSensitiveImageV19StatefulSolidColorsV2eeoiySbAI_AItFZ_0((uint64_t)&v40, (uint64_t)&v37);
            v30 = v41;
            v31 = v42;
            swift_bridgeObjectRelease();
            sub_23787A134(v30, *((uint64_t *)&v30 + 1), v31);
            sub_237A0C644(v36, v24, v35, v7, v8);
            return (v29 & 1) != 0;
          }
          swift_bridgeObjectRetain();
          sub_23787A11C(v35, v7, v8);
          swift_bridgeObjectRetain();
          sub_23787A11C(v35, v7, v8);
          swift_bridgeObjectRelease();
          sub_23787A134(v35, v7, v8);
        }
        else
        {
          v28 = v8;
          v27 = v7;
          v25 = v35;
          v26 = v36;
          if (!v13)
            return 1;
        }
        sub_237A0C5FC(v32, v13, v33, *((uint64_t *)&v33 + 1), v34);
        sub_237A0C644(v26, v24, v25, v27, v28);
        sub_237A0C644(v32, v13, v33, *((uint64_t *)&v33 + 1), v34);
        return 0;
      }
      swift_bridgeObjectRetain();
    }
    else if (!v12)
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_237A0C9F8()
{
  unint64_t result;

  result = qword_256827678;
  if (!qword_256827678)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3C34, &_s19StateSensitiveImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827678);
  }
  return result;
}

unint64_t sub_237A0CA3C()
{
  unint64_t result;

  result = qword_256827680;
  if (!qword_256827680)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StateImages, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StateImages);
    atomic_store(result, (unint64_t *)&qword_256827680);
  }
  return result;
}

unint64_t sub_237A0CA80()
{
  unint64_t result;

  result = qword_256827688;
  if (!qword_256827688)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors);
    atomic_store(result, (unint64_t *)&qword_256827688);
  }
  return result;
}

unint64_t sub_237A0CAC4()
{
  unint64_t result;

  result = qword_256827698;
  if (!qword_256827698)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StateImages, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StateImages);
    atomic_store(result, (unint64_t *)&qword_256827698);
  }
  return result;
}

unint64_t sub_237A0CB08()
{
  unint64_t result;

  result = qword_2568276A0;
  if (!qword_2568276A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors);
    atomic_store(result, (unint64_t *)&qword_2568276A0);
  }
  return result;
}

unint64_t sub_237A0CB50()
{
  unint64_t result;

  result = qword_2568276A8;
  if (!qword_2568276A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors);
    atomic_store(result, (unint64_t *)&qword_2568276A8);
  }
  return result;
}

unint64_t sub_237A0CB98()
{
  unint64_t result;

  result = qword_2568276B0;
  if (!qword_2568276B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage.StateImages, &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StateImages);
    atomic_store(result, (unint64_t *)&qword_2568276B0);
  }
  return result;
}

unint64_t sub_237A0CBE0()
{
  unint64_t result;

  result = qword_2568276B8;
  if (!qword_2568276B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.StateSensitiveImage, &type metadata for Instrument.GaugeStyle.StateSensitiveImage);
    atomic_store(result, (unint64_t *)&qword_2568276B8);
  }
  return result;
}

uint64_t _s19StateSensitiveImageVwxx(uint64_t a1)
{
  uint64_t result;

  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 72);
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_23787A134(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  }
  return result;
}

uint64_t _s19StateSensitiveImageVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v9;
    v10 = *(_QWORD *)(a2 + 80);
    v11 = *(_QWORD *)(a2 + 88);
    v12 = *(_BYTE *)(a2 + 96);
    swift_bridgeObjectRetain();
    sub_23787A11C(v10, v11, v12);
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    *(_BYTE *)(a1 + 96) = v12;
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  return a1;
}

uint64_t _s19StateSensitiveImageVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (_OWORD *)(a1 + 64);
  v15 = (_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v16)
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 80);
      v18 = *(_QWORD *)(a2 + 88);
      v19 = *(_BYTE *)(a2 + 96);
      sub_23787A11C(v17, v18, v19);
      v20 = *(_QWORD *)(a1 + 80);
      v21 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = v17;
      *(_QWORD *)(a1 + 88) = v18;
      v22 = *(_BYTE *)(a1 + 96);
      *(_BYTE *)(a1 + 96) = v19;
      sub_23787A134(v20, v21, v22);
    }
    else
    {
      sub_237A0CECC(a1 + 64);
      v26 = *(_BYTE *)(a2 + 96);
      v27 = *(_OWORD *)(a2 + 80);
      *v14 = *v15;
      *(_OWORD *)(a1 + 80) = v27;
      *(_BYTE *)(a1 + 96) = v26;
    }
  }
  else if (v16)
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = *(_QWORD *)(a2 + 88);
    v25 = *(_BYTE *)(a2 + 96);
    swift_bridgeObjectRetain();
    sub_23787A11C(v23, v24, v25);
    *(_QWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 88) = v24;
    *(_BYTE *)(a1 + 96) = v25;
  }
  else
  {
    v28 = *v15;
    v29 = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *v14 = v28;
    *(_OWORD *)(a1 + 80) = v29;
  }
  return a1;
}

uint64_t sub_237A0CECC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t _s19StateSensitiveImageVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v5, v6, v7, v8, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 72))
    goto LABEL_5;
  v11 = *(_QWORD *)(a2 + 72);
  if (!v11)
  {
    sub_237A0CECC(a1 + 64);
LABEL_5:
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    return a1;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_BYTE *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v12;
  sub_23787A134(v13, v14, v15);
  return a1;
}

uint64_t _s19StateSensitiveImageVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s19StateSensitiveImageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage;
}

uint64_t _s19StateSensitiveImageV19StatefulSolidColorsVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_23787A134(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t _s19StateSensitiveImageV19StatefulSolidColorsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_23787A11C(v3, v4, v5);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t _s19StateSensitiveImageV19StatefulSolidColorsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_23787A11C(v4, v5, v2);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v2;
  sub_23787A134(v6, v7, v8);
  return a1;
}

uint64_t _s19StateSensitiveImageV19StatefulSolidColorsVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_23787A134(v5, v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StatefulSolidColors;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.StateSensitiveImage.StateImages()
{
  return &type metadata for Instrument.GaugeStyle.StateSensitiveImage.StateImages;
}

ValueMetadata *_s19StateSensitiveImageV10CodingKeysOMa()
{
  return &_s19StateSensitiveImageV10CodingKeysON;
}

uint64_t _s19StateSensitiveImageV11StateImagesV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A0D284 + 4 * byte_237AA3745[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A0D2B8 + 4 * byte_237AA3740[v4]))();
}

uint64_t sub_237A0D2B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A0D2C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A0D2C8);
  return result;
}

uint64_t sub_237A0D2D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A0D2DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A0D2E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A0D2E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19StateSensitiveImageV11StateImagesV10CodingKeysOMa()
{
  return &_s19StateSensitiveImageV11StateImagesV10CodingKeysON;
}

uint64_t _s19StateSensitiveImageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237A0D350 + 4 * byte_237AA374F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237A0D384 + 4 * byte_237AA374A[v4]))();
}

uint64_t sub_237A0D384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A0D38C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A0D394);
  return result;
}

uint64_t sub_237A0D3A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A0D3A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237A0D3AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A0D3B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysOMa()
{
  return &_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON;
}

unint64_t sub_237A0D3D4()
{
  unint64_t result;

  result = qword_2568276C0;
  if (!qword_2568276C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3A9C, &_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276C0);
  }
  return result;
}

unint64_t sub_237A0D41C()
{
  unint64_t result;

  result = qword_2568276C8;
  if (!qword_2568276C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3B54, &_s19StateSensitiveImageV11StateImagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276C8);
  }
  return result;
}

unint64_t sub_237A0D464()
{
  unint64_t result;

  result = qword_2568276D0;
  if (!qword_2568276D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3C0C, &_s19StateSensitiveImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276D0);
  }
  return result;
}

unint64_t sub_237A0D4AC()
{
  unint64_t result;

  result = qword_2568276D8;
  if (!qword_2568276D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3B7C, &_s19StateSensitiveImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276D8);
  }
  return result;
}

unint64_t sub_237A0D4F4()
{
  unint64_t result;

  result = qword_2568276E0;
  if (!qword_2568276E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3BA4, &_s19StateSensitiveImageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276E0);
  }
  return result;
}

unint64_t sub_237A0D53C()
{
  unint64_t result;

  result = qword_2568276E8;
  if (!qword_2568276E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3AC4, &_s19StateSensitiveImageV11StateImagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276E8);
  }
  return result;
}

unint64_t sub_237A0D584()
{
  unint64_t result;

  result = qword_2568276F0;
  if (!qword_2568276F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3AEC, &_s19StateSensitiveImageV11StateImagesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276F0);
  }
  return result;
}

unint64_t sub_237A0D5CC()
{
  unint64_t result;

  result = qword_2568276F8;
  if (!qword_2568276F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3A0C, &_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568276F8);
  }
  return result;
}

unint64_t sub_237A0D614()
{
  unint64_t result;

  result = qword_256827700;
  if (!qword_256827700)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA3A34, &_s19StateSensitiveImageV19StatefulSolidColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827700);
  }
  return result;
}

uint64_t sub_237A0D658(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F436574617473 && a2 == 0xED0000734449726FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x43746C7561666564 && a2 == 0xEE004449726F6C6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_237A0D818(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567616D69 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A0D924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746C7561666564 && a2 == 0xEC0000006567616DLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616D496574617473 && a2 == 0xEB00000000736567 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB2210)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_237A0DAA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_237A0C5A0(a1, a2);
}

uint64_t sub_237A0DAB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827898);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v2, &qword_256827798);
  v15 = v9;
  sub_237A87DA0();
  sub_237A15C94();
  v10 = sub_237A866B4();
  swift_release();
  v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86738();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_2568278A0, &qword_256827898, MEMORY[0x24BDB94C8]);
  v11 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  v12 = swift_retain();
  return sub_237A0E72C(v12, v11, 1);
}

uint64_t sub_237A0DD30()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827988);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v2, &qword_256827798);
  v15 = v9;
  sub_237A87DA0();
  sub_237A15C94();
  v10 = sub_237A866B4();
  swift_release();
  v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86738();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827990, &qword_256827988, MEMORY[0x24BDB94C8]);
  v11 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  v12 = swift_retain();
  return sub_237A10518(v12, v11, 1);
}

uint64_t sub_237A0DFA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827948);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v2, &qword_256827798);
  v15 = v9;
  sub_237A87DA0();
  sub_237A15C94();
  v10 = sub_237A866B4();
  swift_release();
  v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86738();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827950, &qword_256827948, MEMORY[0x24BDB94C8]);
  v11 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  v12 = swift_retain();
  return sub_237A0F8E8(v12, v11, 1);
}

uint64_t sub_237A0E220()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568277E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v2, &qword_256827798);
  v15 = v9;
  sub_237A87DA0();
  sub_237A15C94();
  v10 = sub_237A866B4();
  swift_release();
  v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CF0);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86738();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_2568277E8, &qword_2568277E0, MEMORY[0x24BDB94C8]);
  v11 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  v12 = swift_retain();
  return sub_237A1026C(v12, v11, 1);
}

uint64_t sub_237A0E4A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827800);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v2, &qword_256827798);
  v15 = v9;
  sub_237A87DA0();
  sub_237A15C94();
  v10 = sub_237A866B4();
  swift_release();
  v15 = v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256822CD8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86738();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827808, &qword_256827800, MEMORY[0x24BDB94C8]);
  v11 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  v12 = swift_retain();
  return sub_237A0FB60(v12, v11, 1);
}

uint64_t sub_237A0E72C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _UNKNOWN **v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v19, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE4260];
  *((_QWORD *)&v20 + 1) = MEMORY[0x24BEE4260];
  v21 = &protocol witness table for UInt8;
  LOBYTE(v19) = *(_BYTE *)(a1 + 40);
  sub_237870370((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v20 + 1) = v13;
    v21 = &protocol witness table for UInt8;
    LOBYTE(v19) = *(_BYTE *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v19, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = sub_237A160CC;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_237A0E988(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _UNKNOWN **v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v19, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE13C8];
  *((_QWORD *)&v20 + 1) = MEMORY[0x24BEE13C8];
  v21 = &protocol witness table for Double;
  *(_QWORD *)&v19 = *(_QWORD *)(a1 + 40);
  sub_237870370((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v20 + 1) = v13;
    v21 = &protocol witness table for Double;
    *(_QWORD *)&v19 = *(_QWORD *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v19, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = sub_237A1687C;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_237A0EBE4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _UNKNOWN **v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v19, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE1328];
  *((_QWORD *)&v20 + 1) = MEMORY[0x24BEE1328];
  v21 = &protocol witness table for Bool;
  LOBYTE(v19) = *(_BYTE *)(a1 + 40);
  sub_237870370((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v20 + 1) = v13;
    v21 = &protocol witness table for Bool;
    LOBYTE(v19) = *(_BYTE *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v19, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = sub_237A165BC;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_237A0EE40(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  _BYTE v42[40];
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  LODWORD(KeyPath) = a3;
  v41 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v45 = 0;
  v43 = 0u;
  v44 = 0u;
  sub_2378BBFE0((uint64_t)&v43, (uint64_t)v42, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v43, &qword_256820020);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v10 = nullsub_1;
  v10[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822BE8);
  *((_QWORD *)&v44 + 1) = v11;
  v12 = sub_23795339C(&qword_256822BF0, &qword_256822BE8, (uint64_t)&protocol witness table for SingleSelectMenuModel);
  v45 = v12;
  v13 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v43 = v13;
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v13[2] = v14;
  v13[3] = v15;
  v13[4] = v16;
  v13[5] = v17;
  v13[6] = v19;
  v13[7] = v18;
  v39 = v18;
  v13[8] = v20;
  sub_237870370((uint64_t)&v43, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  v21 = KeyPath;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = KeyPath;
  if ((v21 & 1) != 0)
  {
    *((_QWORD *)&v44 + 1) = v11;
    v45 = v12;
    v22 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v43 = v22;
    v23 = *(_QWORD *)(a1 + 40);
    v24 = *(_QWORD *)(a1 + 48);
    v25 = *(_QWORD *)(a1 + 56);
    v37 = *(_QWORD *)(a1 + 64);
    v26 = v37;
    v38 = v25;
    v27 = *(_QWORD *)(a1 + 72);
    v35 = *(_QWORD *)(a1 + 80);
    v28 = v35;
    v36 = v27;
    v34 = *(_QWORD *)(a1 + 88);
    v29 = v34;
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = v25;
    v22[5] = v26;
    v22[6] = v27;
    v22[7] = v28;
    v22[8] = v29;
    KeyPath = swift_getKeyPath();
    v33 = swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v43, (uint64_t)v42, &qword_256820020);
    sub_237A16500(v14, v15, v16, v17, v19, v39);
    sub_237A16500(v23, v24, v38, v37, v36, v35);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v43, &qword_256820020);
  }
  else
  {
    sub_237A16500(v14, v15, v16, v17, v19, v39);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v41;
  *(_QWORD *)(v30 + 24) = v3;
  v31 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v31 = sub_237A16550;
  v31[1] = (uint64_t (*)())v30;
  swift_release();
  return v3;
}

uint64_t sub_237A0F19C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[40];
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  LODWORD(v70) = a3;
  v71 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v75 = 0;
  v73 = 0u;
  v74 = 0u;
  sub_2378BBFE0((uint64_t)&v73, (uint64_t)v72, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v73, &qword_256820020);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v10 = nullsub_1;
  v10[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C00);
  *((_QWORD *)&v74 + 1) = v11;
  v12 = sub_23795339C(&qword_256822C08, &qword_256822C00, (uint64_t)&protocol witness table for WidgetModel);
  v75 = v12;
  v13 = swift_allocObject();
  *(_QWORD *)&v73 = v13;
  v14 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  v25 = *(_QWORD *)(a1 + 128);
  v26 = *(_QWORD *)(a1 + 136);
  v27 = *(_QWORD *)(a1 + 144);
  LOBYTE(v9) = *(_BYTE *)(a1 + 152);
  v68 = *(_QWORD *)(a1 + 48);
  v15 = v68;
  v69 = v14;
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = v15;
  v66 = v17;
  v67 = v16;
  *(_QWORD *)(v13 + 32) = v16;
  *(_QWORD *)(v13 + 40) = v17;
  v64 = v19;
  v65 = v18;
  *(_QWORD *)(v13 + 48) = v18;
  *(_QWORD *)(v13 + 56) = v19;
  v62 = v21;
  v63 = v20;
  *(_QWORD *)(v13 + 64) = v20;
  *(_QWORD *)(v13 + 72) = v21;
  v61 = v22;
  *(_QWORD *)(v13 + 80) = v22;
  *(_QWORD *)(v13 + 88) = v23;
  *(_QWORD *)(v13 + 96) = v24;
  *(_QWORD *)(v13 + 104) = v25;
  *(_QWORD *)(v13 + 112) = v26;
  *(_QWORD *)(v13 + 120) = v27;
  *(_BYTE *)(v13 + 128) = v9;
  sub_237870370((uint64_t)&v73, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  v28 = v70;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = v70;
  if ((v28 & 1) != 0)
  {
    *((_QWORD *)&v74 + 1) = v11;
    v75 = v12;
    v29 = swift_allocObject();
    *(_QWORD *)&v73 = v29;
    v30 = *(_QWORD *)(a1 + 48);
    v70 = *(_QWORD *)(a1 + 40);
    v60 = v30;
    v59 = *(_QWORD *)(a1 + 56);
    v31 = v59;
    v58 = *(_QWORD *)(a1 + 64);
    v32 = v58;
    v57 = *(_QWORD *)(a1 + 72);
    v33 = v57;
    v56 = *(_QWORD *)(a1 + 80);
    v34 = v56;
    v55 = *(_QWORD *)(a1 + 88);
    v35 = v55;
    v54 = *(_QWORD *)(a1 + 96);
    v36 = v54;
    v51 = *(_QWORD *)(a1 + 104);
    v37 = v51;
    v38 = *(_QWORD *)(a1 + 120);
    v50 = *(_QWORD *)(a1 + 112);
    v39 = v50;
    v49 = v38;
    v41 = *(_QWORD *)(a1 + 136);
    v48 = *(_QWORD *)(a1 + 128);
    v40 = v48;
    v47 = v41;
    v42 = *(_QWORD *)(a1 + 144);
    v43 = *(_BYTE *)(a1 + 152);
    *(_QWORD *)(v29 + 16) = v70;
    *(_QWORD *)(v29 + 24) = v30;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v32;
    *(_QWORD *)(v29 + 48) = v33;
    *(_QWORD *)(v29 + 56) = v34;
    *(_QWORD *)(v29 + 64) = v35;
    *(_QWORD *)(v29 + 72) = v36;
    *(_QWORD *)(v29 + 80) = v37;
    *(_QWORD *)(v29 + 88) = v39;
    *(_QWORD *)(v29 + 96) = v38;
    *(_QWORD *)(v29 + 104) = v40;
    *(_QWORD *)(v29 + 112) = v41;
    *(_QWORD *)(v29 + 120) = v42;
    *(_BYTE *)(v29 + 128) = v43;
    KeyPath = swift_getKeyPath();
    v52 = swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v73, (uint64_t)v72, &qword_256820020);
    sub_237A163D8(v69, v68, v67, v66, v65, v64, v63, v62, v61, v23, v24, v25);
    sub_237A163D8(v70, v60, v59, v58, v57, v56, v55, v54, v51, v50, v49, v48);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v73, &qword_256820020);
  }
  else
  {
    sub_237A163D8(v69, v68, v67, v66, v65, v64, v63, v62, v61, v23, v24, v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v71;
  *(_QWORD *)(v44 + 24) = v3;
  v45 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v45 = sub_237A16480;
  v45[1] = (uint64_t (*)())v44;
  swift_release();
  return v3;
}

uint64_t sub_237A0F65C(_BYTE *a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  void (*v19)(uint64_t *, _BYTE *, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];
  __int128 v29;
  __int128 v30;
  _UNKNOWN **v31;

  v26 = a2;
  v27 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v31 = 0;
  v29 = 0u;
  v30 = 0u;
  sub_2378BBFE0((uint64_t)&v29, (uint64_t)v28, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v29, &qword_256820020);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v15 = (_QWORD *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = nullsub_1;
  v15[1] = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = a1[16];
  v16 = &a1[*(_QWORD *)(*(_QWORD *)a1 + 112)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(a4);
  *((_QWORD *)&v30 + 1) = v17;
  v31 = &protocol witness table for Measurement<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v29);
  v19 = *(void (**)(uint64_t *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(boxed_opaque_existential_0, v16, v17);
  sub_237870370((uint64_t)&v29, v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v30 + 1) = v17;
    v31 = &protocol witness table for Measurement<A>;
    v20 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v29);
    v19(v20, v16, v17);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v29, (uint64_t)v28, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v29, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 24) = v6;
  v23 = (_QWORD *)(v6 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v23 = v22;
  v23[1] = v21;
  swift_release();
  return v6;
}

uint64_t sub_237A0F8E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)();
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;
  _UNKNOWN **v23;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v23 = 0;
  v21 = 0u;
  v22 = 0u;
  sub_2378BBFE0((uint64_t)&v21, (uint64_t)v20, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v21, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE0D00];
  *((_QWORD *)&v22 + 1) = MEMORY[0x24BEE0D00];
  v23 = &protocol witness table for String;
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)&v21 = *(_QWORD *)(a1 + 40);
  *((_QWORD *)&v21 + 1) = v14;
  sub_237870370((uint64_t)&v21, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v22 + 1) = v13;
    v23 = &protocol witness table for String;
    v15 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)&v21 = *(_QWORD *)(a1 + 40);
    *((_QWORD *)&v21 + 1) = v15;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v21, (uint64_t)v20, &qword_256820020);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v21, &qword_256820020);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v3;
  v17 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v17 = sub_237A16020;
  v17[1] = (uint64_t (*)())v16;
  swift_release();
  return v3;
}

uint64_t sub_237A0FB60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[40];
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  LODWORD(v71) = a3;
  v72 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v76 = 0;
  v74 = 0u;
  v75 = 0u;
  sub_2378BBFE0((uint64_t)&v74, (uint64_t)v73, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v74, &qword_256820020);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v10 = nullsub_1;
  v10[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CD8);
  *((_QWORD *)&v75 + 1) = v11;
  v12 = sub_23795339C(&qword_256822CE0, &qword_256822CD8, (uint64_t)&protocol witness table for NotificationModel);
  v76 = v12;
  v13 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v74 = v13;
  v14 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  v25 = *(_QWORD *)(a1 + 128);
  v26 = *(_QWORD *)(a1 + 136);
  v27 = *(_QWORD *)(a1 + 144);
  v28 = *(_QWORD *)(a1 + 152);
  v69 = *(_QWORD *)(a1 + 48);
  v15 = v69;
  v70 = v14;
  v13[2] = v14;
  v13[3] = v15;
  v67 = v17;
  v68 = v16;
  v13[4] = v16;
  v13[5] = v17;
  v65 = v19;
  v66 = v18;
  v13[6] = v18;
  v13[7] = v19;
  v63 = v21;
  v64 = v20;
  v13[8] = v20;
  v13[9] = v21;
  v62 = v22;
  v13[10] = v22;
  v13[11] = v23;
  v13[12] = v24;
  v13[13] = v25;
  v13[14] = v26;
  v13[15] = v27;
  v13[16] = v28;
  sub_237870370((uint64_t)&v74, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  v29 = v71;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = v71;
  if ((v29 & 1) != 0)
  {
    *((_QWORD *)&v75 + 1) = v11;
    v76 = v12;
    v30 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v74 = v30;
    v31 = *(_QWORD *)(a1 + 48);
    v71 = *(_QWORD *)(a1 + 40);
    v61 = v31;
    v60 = *(_QWORD *)(a1 + 56);
    v32 = v60;
    v59 = *(_QWORD *)(a1 + 64);
    v33 = v59;
    v58 = *(_QWORD *)(a1 + 72);
    v34 = v58;
    v57 = *(_QWORD *)(a1 + 80);
    v35 = v57;
    v56 = *(_QWORD *)(a1 + 88);
    v36 = v56;
    v55 = *(_QWORD *)(a1 + 96);
    v37 = v55;
    v52 = *(_QWORD *)(a1 + 104);
    v38 = v52;
    v39 = *(_QWORD *)(a1 + 120);
    v51 = *(_QWORD *)(a1 + 112);
    v40 = v51;
    v50 = v39;
    v42 = *(_QWORD *)(a1 + 136);
    v49 = *(_QWORD *)(a1 + 128);
    v41 = v49;
    v48 = v42;
    v44 = *(_QWORD *)(a1 + 144);
    v43 = *(_QWORD *)(a1 + 152);
    v30[2] = v71;
    v30[3] = v31;
    v30[4] = v32;
    v30[5] = v33;
    v30[6] = v34;
    v30[7] = v35;
    v30[8] = v36;
    v30[9] = v37;
    v30[10] = v38;
    v30[11] = v40;
    v30[12] = v39;
    v30[13] = v41;
    v30[14] = v42;
    v30[15] = v44;
    v30[16] = v43;
    KeyPath = swift_getKeyPath();
    v53 = swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v74, (uint64_t)v73, &qword_256820020);
    sub_237A15DFC(v70, v69, v68, v67, v66, v65, v64, v63, v62, v23, v24, v25);
    sub_237A15DFC(v71, v61, v60, v59, v58, v57, v56, v55, v52, v51, v50, v49);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v74, &qword_256820020);
  }
  else
  {
    sub_237A15DFC(v70, v69, v68, v67, v66, v65, v64, v63, v62, v23, v24, v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v72;
  *(_QWORD *)(v45 + 24) = v3;
  v46 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v46 = sub_237A15EBC;
  v46[1] = (uint64_t (*)())v45;
  swift_release();
  return v3;
}

uint64_t sub_237A10010(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _UNKNOWN **v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v19, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE4478];
  *((_QWORD *)&v20 + 1) = MEMORY[0x24BEE4478];
  v21 = &protocol witness table for UInt16;
  LOWORD(v19) = *(_WORD *)(a1 + 40);
  sub_237870370((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v20 + 1) = v13;
    v21 = &protocol witness table for UInt16;
    LOWORD(v19) = *(_WORD *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v19, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = sub_237A1633C;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_237A1026C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t (**v20)();
  _BYTE v23[40];
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v26 = 0;
  v24 = 0u;
  v25 = 0u;
  sub_2378BBFE0((uint64_t)&v24, (uint64_t)v23, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v24, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CF0);
  *((_QWORD *)&v25 + 1) = v13;
  v14 = sub_23795339C(&qword_256822CF8, &qword_256822CF0, (uint64_t)&protocol witness table for LocalNotificationState);
  v26 = v14;
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_WORD *)(a1 + 56);
  *(_QWORD *)&v24 = *(_QWORD *)(a1 + 40);
  *((_QWORD *)&v24 + 1) = v15;
  LOWORD(v25) = v16;
  sub_237870370((uint64_t)&v24, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v25 + 1) = v13;
    v26 = v14;
    v17 = *(_QWORD *)(a1 + 48);
    v18 = *(_WORD *)(a1 + 56);
    *(_QWORD *)&v24 = *(_QWORD *)(a1 + 40);
    *((_QWORD *)&v24 + 1) = v17;
    LOWORD(v25) = v18;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v24, (uint64_t)v23, &qword_256820020);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v24, &qword_256820020);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = v3;
  v20 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v20 = sub_237A15D4C;
  v20[1] = (uint64_t (*)())v19;
  swift_release();
  return v3;
}

uint64_t sub_237A10518(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _UNKNOWN **v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2378BC024((uint64_t)&v19, &qword_256820020);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v12 = nullsub_1;
  v12[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = *(_BYTE *)(a1 + 16);
  v13 = MEMORY[0x24BEE1768];
  *((_QWORD *)&v20 + 1) = MEMORY[0x24BEE1768];
  v21 = &protocol witness table for Int;
  *(_QWORD *)&v19 = *(_QWORD *)(a1 + 40);
  sub_237870370((uint64_t)&v19, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, &qword_256820020);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v20 + 1) = v13;
    v21 = &protocol witness table for Int;
    *(_QWORD *)&v19 = *(_QWORD *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2378BBFE0((uint64_t)&v19, (uint64_t)v18, &qword_256820020);
    swift_retain();
    sub_237A86708();
    sub_2378BC024((uint64_t)&v19, &qword_256820020);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v15 = sub_237A15CF8;
  v15[1] = (uint64_t (*)())v14;
  swift_release();
  return v3;
}

uint64_t sub_237A10774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_2378B70D4(a5, a4, MEMORY[0x24BDB9AF8]);
  sub_237A8675C();
  swift_unownedRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_237A86690();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_237A10898(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t v9[5];

  swift_unownedRetainStrong();
  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9[3] = v5;
  v9[4] = (uint64_t)&protocol witness table for Measurement<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_0, a1, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v9, (uint64_t)&v8, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v9, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A10970(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v32 = v5;
  v33 = v7;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  v30 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v30 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827858);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v16 = (void *)objc_opt_self();
  swift_retain();
  v17 = objc_msgSend(v16, sel_mainRunLoop);
  v18 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  v19 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v13, &qword_256827798);
  v37 = v19;
  sub_237A87DA0();
  sub_237A15C94();
  v20 = sub_237A866B4();
  swift_release();
  v37 = v20;
  sub_2378BBFE0(a2, (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256822CA0);
  v21 = v31;
  v22 = a3;
  v23 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v22, v32);
  v24 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v25 = (v10 + *(unsigned __int8 *)(v6 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26 = swift_allocObject();
  sub_237870370((uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v24, &qword_256822CA0);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v21, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86744();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827860, &qword_256827858, MEMORY[0x24BDB96C0]);
  v27 = v34;
  v28 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v27);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_237A0F65C(v35, v28, 1, &qword_256822C88, (uint64_t)&unk_25097E4F0, (uint64_t)sub_237A15FC4);
}

uint64_t sub_237A10D28(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v32 = v5;
  v33 = v7;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  v30 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v30 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827968);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v16 = (void *)objc_opt_self();
  swift_retain();
  v17 = objc_msgSend(v16, sel_mainRunLoop);
  v18 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  v19 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v13, &qword_256827798);
  v37 = v19;
  sub_237A87DA0();
  sub_237A15C94();
  v20 = sub_237A866B4();
  swift_release();
  v37 = v20;
  sub_2378BBFE0(a2, (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256822D10);
  v21 = v31;
  v22 = a3;
  v23 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v22, v32);
  v24 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v25 = (v10 + *(unsigned __int8 *)(v6 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26 = swift_allocObject();
  sub_237870370((uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v24, &qword_256822D10);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v21, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86744();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827970, &qword_256827968, MEMORY[0x24BDB96C0]);
  v27 = v34;
  v28 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v27);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_237A0F65C(v35, v28, 1, &qword_2568214E8, (uint64_t)&unk_25097E860, (uint64_t)sub_237A167C4);
}

uint64_t sub_237A110E0(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v32 = v5;
  v33 = v7;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
  v30 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v30 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827888);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v16 = (void *)objc_opt_self();
  swift_retain();
  v17 = objc_msgSend(v16, sel_mainRunLoop);
  v18 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  v19 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v13, &qword_256827798);
  v37 = v19;
  sub_237A87DA0();
  sub_237A15C94();
  v20 = sub_237A866B4();
  swift_release();
  v37 = v20;
  sub_2378BBFE0(a2, (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256822C50);
  v21 = v31;
  v22 = a3;
  v23 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v22, v32);
  v24 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v25 = (v10 + *(unsigned __int8 *)(v6 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26 = swift_allocObject();
  sub_237870370((uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v24, &qword_256822C50);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v21, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86744();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827890, &qword_256827888, MEMORY[0x24BDB96C0]);
  v27 = v34;
  v28 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v27);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_237A0F65C(v35, v28, 1, &qword_256822C58, (uint64_t)&unk_25097E450, (uint64_t)sub_237A15F00);
}

void sub_237A11498(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double v4;
  unint64_t v7;
  double v8;

  v4 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) != 0)
  {
    v7 = sub_2379D6578(0x20000000000001uLL);
    v8 = v4 * ((double)v7 * 1.11022302e-16) + a2;
    if (v7 == 0x20000000000000)
      v8 = a3;
    *a1 = v8;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_237A11518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, unint64_t *a6)
{
  double v8;
  double v9;
  uint64_t result;
  double v11;

  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_237A863FC();
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_237A863FC();
  if (v9 > v11)
  {
    __break(1u);
  }
  else if ((~COERCE__INT64(v11 - v9) & 0x7FF0000000000000) != 0)
  {
    sub_2379D6578(0x20000000000001uLL);
    sub_237A863E4();
    sub_2378BFF5C(0, a6);
    return sub_237A863F0();
  }
  __break(1u);
  return result;
}

unint64_t sub_237A11624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  int v5;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    v5 = 0;
    return v5 | ((v3 == 0) << 8);
  }
  result = sub_2379D6578(*(_QWORD *)(v2 + 16));
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v2 + 16))
  {
    v5 = *(unsigned __int8 *)(v2 + result + 32);
    return v5 | ((v3 == 0) << 8);
  }
  __break(1u);
  return result;
}

unint64_t sub_237A1168C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 160);
  result = *(_QWORD *)(v3 + 16);
  if (result)
  {
    result = sub_2379D6578(result);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v3 + 16))
    {
      v5 = (_QWORD *)(v3 + 120 * result);
      v6 = v5[4];
      v7 = v5[5];
      v8 = v5[6];
      v9 = v5[7];
      v10 = v5[8];
      v11 = v5[9];
      v12 = v5[10];
      v13 = v5[11];
      v14 = v5[12];
      v15 = v5[13];
      v16 = v5[14];
      v17 = v5[15];
      v18 = v5[16];
      v19 = v5[17];
      v20 = v5[18];
      *a2 = v6;
      a2[1] = v7;
      a2[2] = v8;
      a2[3] = v9;
      a2[4] = v10;
      a2[5] = v11;
      a2[6] = v12;
      a2[7] = v13;
      a2[8] = v14;
      a2[9] = v15;
      a2[10] = v16;
      a2[11] = v17;
      a2[12] = v18;
      a2[13] = v19;
      a2[14] = v20;
      return sub_237A15DFC(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    }
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = xmmword_237AA3D30;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 5) = 0u;
    *((_OWORD *)a2 + 6) = 0u;
    a2[14] = 0;
  }
  return result;
}

unint64_t sub_237A11758@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 64);
  result = *(_QWORD *)(v3 + 16);
  if (result)
  {
    result = sub_2379D6578(result);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v3 + 16))
    {
      v5 = v3 + 24 * result;
      v7 = *(_QWORD *)(v5 + 32);
      v6 = *(_QWORD *)(v5 + 40);
      LOWORD(v5) = *(_WORD *)(v5 + 48);
      *(_QWORD *)a2 = v7;
      *(_QWORD *)(a2 + 8) = v6;
      *(_WORD *)(a2 + 16) = v5;
      return swift_bridgeObjectRetain();
    }
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = xmmword_237AA3D30;
    *(_WORD *)(a2 + 16) = 0;
  }
  return result;
}

unint64_t sub_237A117D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t result;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 56);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  result = sub_2379D6578(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v2 + 16))
  {
    v5 = *(_QWORD *)(v2 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
  return result;
}

unint64_t sub_237A11834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  result = sub_2379D6578(*(_QWORD *)(v2 + 16));
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v2 + 16))
  {
    return *(_QWORD *)(v2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_237A11890(int a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  double v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[12];
  int v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278F0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278F8);
  v33 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v31[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a2 / a3;
  if (a6 >= a4)
    v22 = a4;
  else
    v22 = a6;
  if (a4 >= a5)
    v23 = v22;
  else
    v23 = a5;
  sub_2378BFF5C(0, &qword_2568277A8);
  v24 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v25 = sub_237A87DE8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 1, 1, v25);
  v26 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v13, &qword_256827798);
  v34 = *(double *)&v26;
  sub_237A87DA0();
  sub_237A15C94();
  v27 = sub_237A866B4();
  swift_release();
  v35 = 1;
  v36 = v27;
  v34 = a5;
  v28 = swift_allocObject();
  *(double *)(v28 + 16) = v23;
  *(double *)(v28 + 24) = a5;
  *(double *)(v28 + 32) = a6;
  *(double *)(v28 + 40) = v21;
  *(_BYTE *)(v28 + 48) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256827900);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86750();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_256827908, &qword_2568278F0, MEMORY[0x24BDB9710]);
  sub_237A86744();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
  sub_2378B70D4(&qword_256827910, &qword_2568278F8, MEMORY[0x24BDB96C0]);
  v29 = sub_237A8672C();
  (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v20, v18);
  return v29;
}

uint64_t sub_237A11BE0@<X0>(uint64_t result@<X0>, char a2@<W2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D3>)
{
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(result + 8);
  v7 = (a4 - a5) * a6 * (double)v6;
  v8 = *(double *)result + v7;
  if (v8 < a4)
    v9 = *(double *)result + v7;
  else
    v9 = a5;
  v10 = -1;
  if (v8 <= a5)
    v10 = 1;
  v11 = -1;
  if (v8 < a4)
    v11 = 1;
  if (v6 != 1)
    v11 = *(_QWORD *)(result + 8);
  if (v6 == -1)
    v12 = v10;
  else
    v12 = v11;
  if (v8 <= a4)
    a4 = v8;
  if (v8 < a5)
    a4 = a5;
  if ((a2 & 1) == 0)
  {
    a4 = v9;
    v12 = 1;
  }
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = v12;
  return result;
}

double sub_237A11C5C@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_237A11C68(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C20);
  v52 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v54 = v10;
  v55 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278C8);
  MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278D0);
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278D8);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v63 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v50 = v18;
  v51 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v48 - v20;
  v22 = *(int *)(v9 + 36);
  sub_2378B70D4(&qword_256822C38, &qword_25681FFD8, MEMORY[0x24BDCB5C0]);
  if ((sub_237A8777C() & 1) != 0)
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v23(v21, a2, v17);
  }
  else
  {
    v24 = a2 + v22;
    v25 = sub_237A87770();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    if ((v25 & 1) != 0)
    {
      v26 = v21;
      v27 = v24;
    }
    else
    {
      v26 = v21;
      v27 = a1;
    }
    v23(v26, v27, v17);
  }
  sub_2378BFF5C(0, &qword_2568277A8);
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v29 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
  v30 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v14, &qword_256827798);
  v64 = v30;
  sub_237A87DA0();
  sub_237A15C94();
  v31 = sub_237A866B4();
  swift_release();
  v64 = v31;
  v32 = *(int *)(v53 + 48);
  v33 = (uint64_t)v49;
  v23(v49, a2, v17);
  *(_QWORD *)(v33 + v32) = 1;
  v34 = v51;
  v48 = v21;
  v23(v51, (uint64_t)v21, v17);
  v35 = v55;
  sub_2378BBFE0(a2, v55, &qword_256822C20);
  v36 = v63;
  v37 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v38 = (v50 + *(unsigned __int8 *)(v52 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v39 = (v54 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v37, v34, v17);
  sub_237870370(v35, v40 + v38, &qword_256822C20);
  v41 = v40 + v39;
  *(double *)v41 = a4 / a5;
  *(_BYTE *)(v41 + 8) = v59 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  v42 = v56;
  sub_237A86750();
  swift_release();
  sub_2378BC024(v33, &qword_2568278C8);
  swift_release();
  sub_2378B70D4(&qword_2568278E0, &qword_2568278D0, MEMORY[0x24BDB9710]);
  v43 = v57;
  v44 = v61;
  sub_237A86744();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v44);
  sub_2378B70D4(&qword_2568278E8, &qword_2568278D8, MEMORY[0x24BDB96C0]);
  v45 = v62;
  v46 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v48, v17);
  return v46;
}

uint64_t sub_237A12208(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
  v52 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v54 = v10;
  v55 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827830);
  MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827838);
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827840);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v63 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v50 = v18;
  v51 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v48 - v20;
  v22 = *(int *)(v9 + 36);
  sub_2378B70D4(&qword_256822C78, &qword_256822C58, MEMORY[0x24BDCB5C0]);
  if ((sub_237A8777C() & 1) != 0)
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v23(v21, a2, v17);
  }
  else
  {
    v24 = a2 + v22;
    v25 = sub_237A87770();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    if ((v25 & 1) != 0)
    {
      v26 = v21;
      v27 = v24;
    }
    else
    {
      v26 = v21;
      v27 = a1;
    }
    v23(v26, v27, v17);
  }
  sub_2378BFF5C(0, &qword_2568277A8);
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v29 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
  v30 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v14, &qword_256827798);
  v64 = v30;
  sub_237A87DA0();
  sub_237A15C94();
  v31 = sub_237A866B4();
  swift_release();
  v64 = v31;
  v32 = *(int *)(v53 + 48);
  v33 = (uint64_t)v49;
  v23(v49, a2, v17);
  *(_QWORD *)(v33 + v32) = 1;
  v34 = v51;
  v48 = v21;
  v23(v51, (uint64_t)v21, v17);
  v35 = v55;
  sub_2378BBFE0(a2, v55, &qword_256822C50);
  v36 = v63;
  v37 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v38 = (v50 + *(unsigned __int8 *)(v52 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v39 = (v54 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v37, v34, v17);
  sub_237870370(v35, v40 + v38, &qword_256822C50);
  v41 = v40 + v39;
  *(double *)v41 = a4 / a5;
  *(_BYTE *)(v41 + 8) = v59 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  v42 = v56;
  sub_237A86750();
  swift_release();
  sub_2378BC024(v33, &qword_256827830);
  swift_release();
  sub_2378B70D4(&qword_256827848, &qword_256827838, MEMORY[0x24BDB9710]);
  v43 = v57;
  v44 = v61;
  sub_237A86744();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v44);
  sub_2378B70D4(&qword_256827850, &qword_256827840, MEMORY[0x24BDB96C0]);
  v45 = v62;
  v46 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v48, v17);
  return v46;
}

uint64_t sub_237A127A8@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;

  LODWORD(v65) = a4;
  v63 = a5;
  v64 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568278C8);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C20);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681FFD8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v55 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)&v55 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v55 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v55 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v55 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v55 - v28;
  sub_2378BFF5C(0, (unint64_t *)&qword_256820048);
  v66 = a2;
  v61 = a3;
  sub_237A863D8();
  sub_237A863C0();
  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v20, v11);
  v62 = v7;
  v31 = *(int *)(v7 + 48);
  v32 = v64;
  sub_237A863C0();
  v30(v23, v11);
  sub_237A863CC();
  v30(v26, v11);
  if ((v65 & 1) == 0)
  {
    sub_2378B70D4(&qword_256822C38, &qword_25681FFD8, MEMORY[0x24BDCB5C0]);
    if ((sub_237A8777C() & 1) != 0)
    {
      v45 = v63;
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v63, v29, v11);
    }
    else
    {
      v30(v29, v11);
      v45 = v63;
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v63, v61, v11);
    }
    *(_QWORD *)&v45[*(int *)(v62 + 48)] = 1;
    return result;
  }
  v33 = v58;
  v34 = *(_QWORD *)&v32[v31];
  v35 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v36 = v60;
  v65 = v29;
  v35(v60, v29, v11);
  v37 = v59;
  v35(v59, (char *)v66, v11);
  if (v34 == 1)
  {
    sub_2378B70D4(&qword_256822C38, &qword_25681FFD8, MEMORY[0x24BDCB5C0]);
    v38 = sub_237A8777C();
    v30(v37, v11);
    v30(v36, v11);
    v39 = (uint64_t)v33;
    if ((v38 & 1) == 0)
    {
      v40 = -1;
      v41 = v62;
      v42 = v63;
      v43 = v61;
      v44 = v65;
      goto LABEL_15;
    }
  }
  else
  {
    v30(v37, v11);
    v30(v36, v11);
    v39 = (uint64_t)v33;
  }
  v47 = *(_QWORD *)&v32[v31];
  v48 = v57;
  v44 = v65;
  v35(v57, v65, v11);
  v43 = v61;
  sub_2378BBFE0(v61, v39, &qword_256822C20);
  if (v47 != -1)
  {
    v49 = v32;
    sub_2378BC024(v39, &qword_256822C20);
    v30(v48, v11);
    v41 = v62;
    v42 = v63;
LABEL_13:
    v50 = *(int *)(v41 + 48);
    v51 = v56;
    v35(v56, v49, v11);
    v40 = *(_QWORD *)&v49[v31];
    *(_QWORD *)&v51[v50] = v40;
    v44 = v65;
    v30(v51, v11);
    goto LABEL_15;
  }
  v49 = v32;
  sub_2378B70D4(&qword_256822C38, &qword_25681FFD8, MEMORY[0x24BDCB5C0]);
  LODWORD(v60) = sub_237A8777C();
  sub_2378BC024(v39, &qword_256822C20);
  v30(v48, v11);
  v41 = v62;
  v42 = v63;
  if ((v60 & 1) != 0)
    goto LABEL_13;
  v40 = 1;
LABEL_15:
  sub_2378B70D4(&qword_256822C38, &qword_25681FFD8, MEMORY[0x24BDCB5C0]);
  if ((sub_237A8777C() & 1) != 0 || (v43 = v66, (sub_237A87770() & 1) != 0))
  {
    v52 = v42;
    v53 = v43;
  }
  else
  {
    v52 = v42;
    v53 = (uint64_t)v44;
  }
  v35(v52, (char *)v53, v11);
  v54 = *(int *)(v41 + 48);
  result = ((uint64_t (*)(char *, uint64_t))v30)(v44, v11);
  *(_QWORD *)&v42[v54] = v40;
  return result;
}

uint64_t sub_237A12CE8@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;

  LODWORD(v65) = a4;
  v63 = a5;
  v64 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827830);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C50);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C58);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v55 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)&v55 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v55 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v55 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v55 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v55 - v28;
  sub_2378BFF5C(0, &qword_256822C60);
  v66 = a2;
  v61 = a3;
  sub_237A863D8();
  sub_237A863C0();
  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v20, v11);
  v62 = v7;
  v31 = *(int *)(v7 + 48);
  v32 = v64;
  sub_237A863C0();
  v30(v23, v11);
  sub_237A863CC();
  v30(v26, v11);
  if ((v65 & 1) == 0)
  {
    sub_2378B70D4(&qword_256822C78, &qword_256822C58, MEMORY[0x24BDCB5C0]);
    if ((sub_237A8777C() & 1) != 0)
    {
      v45 = v63;
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v63, v29, v11);
    }
    else
    {
      v30(v29, v11);
      v45 = v63;
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v63, v61, v11);
    }
    *(_QWORD *)&v45[*(int *)(v62 + 48)] = 1;
    return result;
  }
  v33 = v58;
  v34 = *(_QWORD *)&v32[v31];
  v35 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v36 = v60;
  v65 = v29;
  v35(v60, v29, v11);
  v37 = v59;
  v35(v59, (char *)v66, v11);
  if (v34 == 1)
  {
    sub_2378B70D4(&qword_256822C78, &qword_256822C58, MEMORY[0x24BDCB5C0]);
    v38 = sub_237A8777C();
    v30(v37, v11);
    v30(v36, v11);
    v39 = (uint64_t)v33;
    if ((v38 & 1) == 0)
    {
      v40 = -1;
      v41 = v62;
      v42 = v63;
      v43 = v61;
      v44 = v65;
      goto LABEL_15;
    }
  }
  else
  {
    v30(v37, v11);
    v30(v36, v11);
    v39 = (uint64_t)v33;
  }
  v47 = *(_QWORD *)&v32[v31];
  v48 = v57;
  v44 = v65;
  v35(v57, v65, v11);
  v43 = v61;
  sub_2378BBFE0(v61, v39, &qword_256822C50);
  if (v47 != -1)
  {
    v49 = v32;
    sub_2378BC024(v39, &qword_256822C50);
    v30(v48, v11);
    v41 = v62;
    v42 = v63;
LABEL_13:
    v50 = *(int *)(v41 + 48);
    v51 = v56;
    v35(v56, v49, v11);
    v40 = *(_QWORD *)&v49[v31];
    *(_QWORD *)&v51[v50] = v40;
    v44 = v65;
    v30(v51, v11);
    goto LABEL_15;
  }
  v49 = v32;
  sub_2378B70D4(&qword_256822C78, &qword_256822C58, MEMORY[0x24BDCB5C0]);
  LODWORD(v60) = sub_237A8777C();
  sub_2378BC024(v39, &qword_256822C50);
  v30(v48, v11);
  v41 = v62;
  v42 = v63;
  if ((v60 & 1) != 0)
    goto LABEL_13;
  v40 = 1;
LABEL_15:
  sub_2378B70D4(&qword_256822C78, &qword_256822C58, MEMORY[0x24BDCB5C0]);
  if ((sub_237A8777C() & 1) != 0 || (v43 = v66, (sub_237A87770() & 1) != 0))
  {
    v52 = v42;
    v53 = v43;
  }
  else
  {
    v52 = v42;
    v53 = (uint64_t)v44;
  }
  v35(v52, (char *)v53, v11);
  v54 = *(int *)(v41 + 48);
  result = ((uint64_t (*)(char *, uint64_t))v30)(v44, v11);
  *(_QWORD *)&v42[v54] = v40;
  return result;
}

uint64_t sub_237A13228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237A13250(a1, &qword_2568278C8, &qword_25681FFD8, a2);
}

uint64_t sub_237A1323C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237A13250(a1, &qword_256827830, &qword_256822C58, a2);
}

uint64_t sub_237A13250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v9, v10);
}

_BYTE *sub_237A132F4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_237A13308(char *a1)
{
  char v1;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;
  _UNKNOWN **v6;

  v1 = *a1;
  swift_unownedRetainStrong();
  v5 = MEMORY[0x24BEE4260];
  v6 = &protocol witness table for UInt8;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v4, (uint64_t)&v3, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v4, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A133C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v4[5];

  v1 = *a1;
  swift_unownedRetainStrong();
  v4[3] = MEMORY[0x24BEE13C8];
  v4[4] = &protocol witness table for Double;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v4, (uint64_t)&v3, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v4, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13480(char *a1)
{
  char v1;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;
  _UNKNOWN **v6;

  v1 = *a1;
  swift_unownedRetainStrong();
  v5 = MEMORY[0x24BEE1328];
  v6 = &protocol witness table for Bool;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v4, (uint64_t)&v3, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v4, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13538(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD v11[5];

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  swift_unownedRetainStrong();
  v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256822BE8);
  v11[4] = sub_23795339C(&qword_256822BF0, &qword_256822BE8, (uint64_t)&protocol witness table for SingleSelectMenuModel);
  v8 = (_QWORD *)swift_allocObject();
  v11[0] = v8;
  v8[2] = v1;
  v8[3] = v2;
  v8[4] = v3;
  v8[5] = v4;
  v8[6] = v5;
  v8[7] = v6;
  v8[8] = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v11, (uint64_t)&v10, &qword_256820020);
  sub_237A16500(v1, v2, v3, v4, v5, v6);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v11, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  _QWORD v20[6];

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 112);
  swift_unownedRetainStrong();
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C00);
  v20[4] = sub_23795339C(&qword_256822C08, &qword_256822C00, (uint64_t)&protocol witness table for WidgetModel);
  v10 = swift_allocObject();
  v20[0] = v10;
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = v5;
  *(_QWORD *)(v10 + 56) = v18;
  *(_QWORD *)(v10 + 64) = v17;
  *(_QWORD *)(v10 + 72) = v16;
  *(_QWORD *)(v10 + 80) = v15;
  *(_QWORD *)(v10 + 88) = v6;
  *(_QWORD *)(v10 + 96) = v7;
  *(_QWORD *)(v10 + 104) = v14;
  *(_QWORD *)(v10 + 112) = v8;
  *(_QWORD *)(v10 + 120) = v13;
  *(_BYTE *)(v10 + 128) = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v20, (uint64_t)v19, &qword_256820020);
  sub_237A163D8(v12, v2, v3, v4, v5, v18, v17, v16, v15, v6, v7, v14);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v20, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13804(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[5];

  v2 = *a1;
  v1 = a1[1];
  swift_unownedRetainStrong();
  v5[3] = MEMORY[0x24BEE0D00];
  v5[4] = &protocol witness table for String;
  v5[0] = v2;
  v5[1] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v5, (uint64_t)&v4, &qword_256820020);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v5, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A138CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[40];
  _QWORD v20[6];

  v1 = *a1;
  v2 = a1[1];
  v12 = *a1;
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v18 = a1[5];
  v16 = a1[7];
  v17 = a1[6];
  v6 = a1[9];
  v7 = a1[10];
  v14 = a1[11];
  v15 = a1[8];
  v8 = a1[12];
  v13 = a1[13];
  v9 = a1[14];
  swift_unownedRetainStrong();
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CD8);
  v20[4] = sub_23795339C(&qword_256822CE0, &qword_256822CD8, (uint64_t)&protocol witness table for NotificationModel);
  v10 = (_QWORD *)swift_allocObject();
  v20[0] = v10;
  v10[2] = v1;
  v10[3] = v2;
  v10[4] = v3;
  v10[5] = v4;
  v10[6] = v5;
  v10[7] = v18;
  v10[8] = v17;
  v10[9] = v16;
  v10[10] = v15;
  v10[11] = v6;
  v10[12] = v7;
  v10[13] = v14;
  v10[14] = v8;
  v10[15] = v13;
  v10[16] = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v20, (uint64_t)v19, &qword_256820020);
  sub_237A15DFC(v12, v2, v3, v4, v5, v18, v17, v16, v15, v6, v7, v14);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v20, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13A5C(__int16 *a1)
{
  __int16 v1;
  uint64_t v3;
  _WORD v4[12];
  uint64_t v5;
  _UNKNOWN **v6;

  v1 = *a1;
  swift_unownedRetainStrong();
  v5 = MEMORY[0x24BEE4478];
  v6 = &protocol witness table for UInt16;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v4, (uint64_t)&v3, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v4, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13B14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v5;
  _QWORD v6[2];
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v1 = a1[1];
  v3 = *((_WORD *)a1 + 8);
  swift_unownedRetainStrong();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CF0);
  v9 = sub_23795339C(&qword_256822CF8, &qword_256822CF0, (uint64_t)&protocol witness table for LocalNotificationState);
  v6[0] = v2;
  v6[1] = v1;
  v7 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v6, (uint64_t)&v5, &qword_256820020);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v6, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13C00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v4[5];

  v1 = *a1;
  swift_unownedRetainStrong();
  v4[3] = MEMORY[0x24BEE1768];
  v4[4] = &protocol witness table for Int;
  v4[0] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v4, (uint64_t)&v3, &qword_256820020);
  swift_retain();
  sub_237A86708();
  sub_2378BC024((uint64_t)v4, &qword_256820020);
  return swift_release();
}

uint64_t sub_237A13CB8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568277A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BFF5C(0, &qword_2568277A8);
  v13 = (void *)objc_opt_self();
  swift_retain();
  v14 = objc_msgSend(v13, sel_mainRunLoop);
  v15 = sub_237A87DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  v16 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v8, &qword_256827798);
  v22 = v16;
  sub_237A87DA0();
  sub_237A15C94();
  v17 = sub_237A866B4();
  swift_release();
  v22 = v17;
  v18 = swift_allocObject();
  *(double *)(v18 + 16) = a2;
  *(double *)(v18 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86744();
  swift_release();
  swift_release();
  sub_2378B70D4(&qword_2568277C8, &qword_2568277A0, MEMORY[0x24BDB96C0]);
  v19 = sub_237A8672C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_237A0E988(a1, v19, 1);
}

uint64_t sub_237A13F60(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[8];
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827798);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279A8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2378BFF5C(0, &qword_2568277A8);
  v11 = (void *)objc_opt_self();
  swift_retain();
  v12 = objc_msgSend(v11, sel_mainRunLoop);
  v13 = sub_237A87DE8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  v14 = sub_237A87DAC();

  sub_2378BC024((uint64_t)v6, &qword_256827798);
  v19 = v14;
  sub_237A87DA0();
  sub_237A15C94();
  v15 = sub_237A866B4();
  swift_release();
  v19 = v15;
  v18[7] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568277B8);
  sub_2378B70D4(&qword_2568277C0, &qword_2568277B8, MEMORY[0x24BDB9510]);
  sub_237A86750();
  swift_release();
  sub_2378B70D4(&qword_2568279B0, &qword_2568279A8, MEMORY[0x24BDB9710]);
  v16 = sub_237A8672C();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for InstrumentDataSource();
  swift_allocObject();
  return sub_237A0EBE4(a1, v16, 1);
}

void _s14CarPlayAssetUI20InstrumentDataSourceC07previewG014dataIdentifier10zoneRegionAcA0efJ0O_SSSgtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827708);
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v25 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827710);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827718);
  v20[4] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20[2] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827720);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  v20[5] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v20[3] = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  MEMORY[0x24BDAC7A8](v9);
  v20[1] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827728);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v31 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827730);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827738);
  v35 = *(_QWORD *)(v14 - 8);
  v36 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v34 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827740);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822C88);
  MEMORY[0x24BDAC7A8](v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822CA0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827748);
  MEMORY[0x24BDAC7A8](v19);
  __asm { BR              X10 }
}

uint64_t sub_237A1456C()
{
  if (qword_25681E130 != -1)
    swift_once();
  return sub_237A0DFA8();
}

unint64_t sub_237A15C94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568277B0;
  if (!qword_2568277B0)
  {
    v1 = sub_237A87DA0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDD01B0], v1);
    atomic_store(result, (unint64_t *)&qword_2568277B0);
  }
  return result;
}

uint64_t sub_237A15CDC()
{
  return swift_deallocObject();
}

void sub_237A15CEC(double *a1@<X8>)
{
  uint64_t v1;

  sub_237A11498(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_237A15CF8()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E360, &qword_2568277D0, &qword_2568277D8);
}

uint64_t sub_237A15D38(uint64_t *a1)
{
  return sub_237A13C00(a1);
}

unint64_t sub_237A15D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237A11758(v1, a1);
}

uint64_t sub_237A15D4C()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E3B0, &qword_2568277F0, &qword_2568277F8);
}

uint64_t sub_237A15D84(uint64_t *a1)
{
  return sub_237A13B14(a1);
}

unint64_t sub_237A15D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_237A1168C(v1, a1);
}

uint64_t sub_237A15D94()
{
  uint64_t v0;
  int v1;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    sub_23790BCE8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
    v1 = *(unsigned __int8 *)(v0 + 88);
    if (v1 != 255)
      sub_23790BD3C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v1);
    if (*(_QWORD *)(v0 + 104))
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_237A15DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2379732BC(a3, a4, a5, a6, a7);
    sub_2379DBB3C(a8, a9, a10);
    sub_2379DBB50(a11, a12);
    return swift_retain();
  }
  return result;
}

uint64_t sub_237A15EBC()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E428, &qword_256827810, &qword_256827818);
}

uint64_t sub_237A15EF4(uint64_t *a1)
{
  return sub_237A138CC(a1);
}

uint64_t sub_237A15F00()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E478, &qword_256827820, &qword_256827828);
}

uint64_t sub_237A15F38(uint64_t a1)
{
  uint64_t v1;

  return sub_237A10898(a1, *(_QWORD *)(v1 + 16), &qword_256822C58);
}

uint64_t sub_237A15F58()
{
  return objectdestroy_33Tm(&qword_256822C58, &qword_256822C50);
}

uint64_t sub_237A15F6C(uint64_t a1, uint64_t a2)
{
  return sub_237A16260(a1, a2, &qword_256822C58, &qword_256822C50, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, double))sub_237A12CE8);
}

uint64_t sub_237A15F88()
{
  return objectdestroy_36Tm(&qword_256822CA0, &qword_256822C88);
}

uint64_t sub_237A15F9C(uint64_t a1)
{
  return sub_237A16714(a1, &qword_256822CA0, &qword_256822C88, &qword_256822C90);
}

uint64_t sub_237A15FC4()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E518, &qword_256827868, &qword_256827870);
}

uint64_t sub_237A15FFC(uint64_t a1)
{
  uint64_t v1;

  return sub_237A10898(a1, *(_QWORD *)(v1 + 16), &qword_256822C88);
}

uint64_t sub_237A16020()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E568, &qword_256827878, &qword_256827880);
}

uint64_t sub_237A16058(uint64_t *a1)
{
  return sub_237A13804(a1);
}

uint64_t sub_237A16060()
{
  return objectdestroy_36Tm(&qword_256822C50, &qword_256822C58);
}

uint64_t sub_237A16074(uint64_t a1)
{
  return sub_237A16714(a1, &qword_256822C50, &qword_256822C58, &qword_256822C60);
}

unint64_t sub_237A16098@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_237A11624(a1, v2);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_237A160CC()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E5E0, &qword_2568278A8, &qword_2568278B0);
}

uint64_t sub_237A16104(char *a1)
{
  return sub_237A13308(a1);
}

uint64_t sub_237A16110()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E630, &qword_2568278B8, &qword_2568278C0);
}

uint64_t sub_237A16148(uint64_t a1)
{
  uint64_t v1;

  return sub_237A10898(a1, *(_QWORD *)(v1 + 16), &qword_25681FFD8);
}

uint64_t sub_237A16168()
{
  return objectdestroy_33Tm(&qword_25681FFD8, &qword_256822C20);
}

uint64_t objectdestroy_33Tm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v6 + v7 + v9) & ~v9;
  v11 = v2 + v6;
  v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v12(v11, v4);
  v12(v2 + v10, v4);
  v12(v2 + v10 + *(int *)(v8 + 36), v4);
  return swift_deallocObject();
}

uint64_t sub_237A16244(uint64_t a1, uint64_t a2)
{
  return sub_237A16260(a1, a2, &qword_25681FFD8, &qword_256822C20, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, double))sub_237A127A8);
}

uint64_t sub_237A16260(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, double))
{
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a4) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = v5 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a5(a1, a2, v5 + v10, v5 + v13, *(unsigned __int8 *)(v14 + 8), *(double *)v14);
}

uint64_t sub_237A16318()
{
  return swift_deallocObject();
}

uint64_t sub_237A16328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_237A11BE0(a1, *(_BYTE *)(v2 + 48), a2, *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 40));
}

uint64_t sub_237A1633C()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E6D0, &qword_256827918, &qword_256827920);
}

uint64_t sub_237A16374(__int16 *a1)
{
  return sub_237A13A5C(a1);
}

uint64_t sub_237A1637C()
{
  _QWORD *v0;

  if (v0[3])
  {
    swift_bridgeObjectRelease();
    if (v0[5])
      swift_release();
    sub_2378902DC(v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);
  }
  return swift_deallocObject();
}

uint64_t sub_237A163D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2378A2BF4(a4);
    return sub_23788F390(a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_237A16480()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E748, &qword_256827928, &qword_256827930);
}

uint64_t sub_237A164B8(uint64_t a1)
{
  return sub_237A13674(a1);
}

uint64_t sub_237A164C0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 56))
      swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_237A16500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_2378A2BF4(a6);
  }
  return result;
}

uint64_t sub_237A16550()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E7C0, &qword_256827938, &qword_256827940);
}

uint64_t sub_237A16588(uint64_t *a1)
{
  return sub_237A13538(a1);
}

unint64_t sub_237A16590@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  unint64_t v5;

  result = sub_237A117D0(a1, v2);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_237A165BC()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E810, &qword_256827958, &qword_256827960);
}

uint64_t sub_237A165F4()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_237A16618(char *a1)
{
  return sub_237A13480(a1);
}

uint64_t sub_237A16620()
{
  return objectdestroy_36Tm(&qword_256822D10, &qword_2568214E8);
}

uint64_t objectdestroy_36Tm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v2 + v6;
  v12 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v12(v11, v8);
  v12(v11 + *(int *)(v4 + 36), v8);
  v12(v2 + v10, v8);
  return swift_deallocObject();
}

uint64_t sub_237A166F0(uint64_t a1)
{
  return sub_237A16714(a1, &qword_256822D10, &qword_2568214E8, (unint64_t *)&qword_2568214F0);
}

uint64_t sub_237A16714(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_237A11518(a1, v4 + v10, v4 + ((v10 + v11 + v12) & ~v12), a3, a2, a4);
}

uint64_t sub_237A167C4()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E888, &qword_256827978, &qword_256827980);
}

uint64_t sub_237A167FC(uint64_t a1)
{
  uint64_t v1;

  return sub_237A10898(a1, *(_QWORD *)(v1 + 16), &qword_2568214E8);
}

unint64_t sub_237A1681C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  char v5;

  result = sub_237A11834(a1, v2);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_237A1687C()
{
  uint64_t v0;

  return sub_237A10774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_25097E8D8, &qword_256827998, &qword_2568279A0);
}

uint64_t sub_237A168B4(uint64_t *a1)
{
  return sub_237A133C0(a1);
}

uint64_t static BackgroundConfiguration.defaultState.getter()
{
  return 0;
}

float BackgroundConfiguration.BlurConfiguration.radius.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

float BackgroundConfiguration.BlurConfiguration.opacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void BackgroundConfiguration.BlurConfiguration.opacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*BackgroundConfiguration.BlurConfiguration.opacity.modify())()
{
  return nullsub_1;
}

void BackgroundConfiguration.BlurConfiguration.init(radius:opacity:)(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  *a1 = a2;
  a1[1] = a3;
}

double static BackgroundConfiguration.BlurConfiguration.default.getter@<D0>(_QWORD *a1@<X8>)
{
  double result;

  swift_beginAccess();
  result = *(double *)&qword_2568279B8;
  *a1 = qword_2568279B8;
  return result;
}

double static BackgroundConfiguration.BlurConfiguration.default.setter(double *a1)
{
  double result;

  swift_beginAccess();
  result = *a1;
  qword_2568279B8 = *(_QWORD *)a1;
  return result;
}

uint64_t (*static BackgroundConfiguration.BlurConfiguration.default.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t BackgroundConfiguration.BlurConfiguration.hash(into:)()
{
  sub_237A885F8();
  return sub_237A885F8();
}

BOOL static BackgroundConfiguration.BlurConfiguration.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_237A16A68()
{
  _BYTE *v0;

  if (*v0)
    return 0x7974696361706FLL;
  else
    return 0x737569646172;
}

uint64_t sub_237A16AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A19E80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A16AC4()
{
  sub_237A16C44();
  return sub_237A88718();
}

uint64_t sub_237A16AEC()
{
  sub_237A16C44();
  return sub_237A88724();
}

uint64_t BackgroundConfiguration.BlurConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  _BYTE v10[8];
  int v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A16C44();
  sub_237A886B8();
  v12 = 0;
  sub_237A8828C();
  if (!v2)
  {
    v11 = v8;
    v10[7] = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_237A16C44()
{
  unint64_t result;

  result = qword_2568279C8;
  if (!qword_2568279C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA467C, &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568279C8);
  }
  return result;
}

uint64_t BackgroundConfiguration.BlurConfiguration.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t BackgroundConfiguration.BlurConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  float v12;
  uint64_t v13;
  float v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A16C44();
  sub_237A88688();
  if (!v2)
  {
    v17 = 0;
    sub_237A881CC();
    v10 = v9;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826390);
    sub_2379C77AC();
    sub_237A881A8();
    if (v15)
      v12 = 0.0;
    else
      v12 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(float *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A16E6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundConfiguration.BlurConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A16E80(_QWORD *a1)
{
  return BackgroundConfiguration.BlurConfiguration.encode(to:)(a1);
}

uint64_t sub_237A16E98()
{
  sub_237A885F8();
  return sub_237A885F8();
}

uint64_t sub_237A16EDC()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A88610();
}

BOOL sub_237A16F38(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional __swiftcall BackgroundConfiguration.RadialBackgroundType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional)rawValue;
}

uint64_t BackgroundConfiguration.RadialBackgroundType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

CarPlayAssetUI::BackgroundConfiguration::RadialBackgroundType_optional sub_237A16F94(Swift::Int *a1)
{
  return BackgroundConfiguration.RadialBackgroundType.init(rawValue:)(*a1);
}

uint64_t sub_237A16F9C()
{
  sub_237A1A290();
  return sub_237A87A40();
}

uint64_t sub_237A16FF8()
{
  sub_237A1A290();
  return sub_237A879F8();
}

uint64_t BackgroundConfiguration.Style.hash(into:)()
{
  uint64_t v0;

  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    return sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    return sub_237A885E0();
  }
}

uint64_t sub_237A17198()
{
  _BYTE *v0;

  if (*v0)
    return 0x7261656E696CLL;
  else
    return 0x6C6169646172;
}

uint64_t sub_237A171C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A19F68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A171E8()
{
  sub_237A18FCC();
  return sub_237A88718();
}

uint64_t sub_237A17210()
{
  sub_237A18FCC();
  return sub_237A88724();
}

uint64_t sub_237A17238()
{
  sub_237A19010();
  return sub_237A88718();
}

uint64_t sub_237A17260()
{
  sub_237A19010();
  return sub_237A88724();
}

uint64_t sub_237A17288()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_237A172C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A1A048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A172EC()
{
  sub_237A19098();
  return sub_237A88718();
}

uint64_t sub_237A17314()
{
  sub_237A19098();
  return sub_237A88724();
}

uint64_t BackgroundConfiguration.Style.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  char v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279D8);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279E0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568279E8);
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 8);
  v34 = *(_QWORD *)v1;
  v35 = v11;
  v36 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 40);
  v15 = *(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v1 + 52) << 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A18FCC();
  v39 = v10;
  sub_237A886B8();
  if ((v15 & 0x8000000000000000) != 0)
  {
    v21 = v34;
    v20 = v35;
    v22 = HIDWORD(v34);
    v23 = HIDWORD(v35);
    LOBYTE(v40) = 1;
    sub_237A19010();
    v24 = v29;
    v25 = v38;
    v26 = v39;
    sub_237A88220();
    v40 = __PAIR64__(v22, v21);
    v41 = __PAIR64__(v23, v20);
    v42 = v36 & 1;
    sub_237A19054();
    v27 = v31;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v26, v25);
  }
  else
  {
    LOBYTE(v40) = 0;
    sub_237A19098();
    v16 = v38;
    sub_237A88220();
    v40 = v34;
    v41 = v35;
    v42 = v36 & 1;
    v43 = v12;
    v44 = v13;
    v45 = v14;
    v46 = v15;
    v47 = BYTE4(v15);
    v48 = 0;
    sub_237A190DC();
    v17 = v33;
    v18 = v37;
    sub_237A882B0();
    if (!v18)
    {
      LOBYTE(v40) = BYTE5(v15);
      v48 = 1;
      sub_237A19120();
      sub_237A882B0();
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v39, v16);
  }
}

uint64_t BackgroundConfiguration.Style.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
  }
  return sub_237A88610();
}

uint64_t BackgroundConfiguration.Style.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unsigned int v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  _QWORD *v41;
  uint64_t v42;
  __int128 v43;
  unsigned __int8 v44;
  __int128 v45;
  uint64_t v46;
  unsigned int v47;
  unsigned __int8 v48;
  char v49;
  unsigned __int8 v50;

  v37 = a2;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827A20);
  *(_QWORD *)&v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)&v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827A28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827A30);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_237A18FCC();
  v13 = v42;
  sub_237A88688();
  if (v13)
    goto LABEL_7;
  v14 = v40;
  v36 = v5;
  v42 = v9;
  v15 = sub_237A881FC();
  if (*(_QWORD *)(v15 + 16) != 1)
  {
    v17 = sub_237A87FB0();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v19 = &type metadata for BackgroundConfiguration.Style;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v8);
LABEL_7:
    v28 = (uint64_t)v41;
    return __swift_destroy_boxed_opaque_existential_2Tm(v28);
  }
  v16 = v42;
  if ((*(_BYTE *)(v15 + 32) & 1) != 0)
  {
    LOBYTE(v43) = 1;
    sub_237A19010();
    sub_237A88154();
    sub_237A19164();
    v22 = v39;
    sub_237A881F0();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v14, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v8);
    v23 = 0;
    v24 = v43;
    v25 = v44;
    v26 = 0uLL;
    v27 = 0x800000000000;
    v28 = (uint64_t)v41;
  }
  else
  {
    v20 = v42;
    LOBYTE(v43) = 0;
    sub_237A19098();
    sub_237A88154();
    v29 = v7;
    v30 = v11;
    v50 = 0;
    sub_237A191A8();
    sub_237A881F0();
    v40 = v43;
    LODWORD(v39) = v44;
    v38 = v45;
    v31 = v8;
    v23 = v46;
    v32 = v47;
    v35 = v48;
    v49 = 1;
    sub_237A191EC();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v31);
    v27 = v32 | (v35 << 32) | ((unint64_t)v50 << 40);
    v28 = (uint64_t)v41;
    v24 = v40;
    v25 = v39;
    v26 = v38;
  }
  v33 = v37;
  *v37 = v24;
  *((_QWORD *)v33 + 2) = v25;
  *(_OWORD *)((char *)v33 + 24) = v26;
  *((_QWORD *)v33 + 5) = v23;
  *((_DWORD *)v33 + 12) = v27;
  *((_WORD *)v33 + 26) = WORD2(v27);
  return __swift_destroy_boxed_opaque_existential_2Tm(v28);
}

uint64_t sub_237A17C8C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return BackgroundConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_237A17CA0(_QWORD *a1)
{
  return BackgroundConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_237A17CBC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
  }
  return sub_237A88610();
}

__n128 BackgroundConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  __int16 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 48);
  v3 = *(_WORD *)(v1 + 52);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

void BackgroundConfiguration.blurConfiguration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t BackgroundConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 BackgroundConfiguration.init(style:blurConfiguration:colorIDs:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  __int16 v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __n128 result;

  v4 = *(_DWORD *)(a1 + 48);
  v5 = *(_WORD *)(a1 + 52);
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a4 + 32) = result;
  *(_WORD *)(a4 + 52) = v5;
  *(_DWORD *)(a4 + 48) = v4;
  *(_QWORD *)(a4 + 56) = v6;
  *(_BYTE *)(a4 + 64) = v7;
  *(_QWORD *)(a4 + 72) = a3;
  return result;
}

uint64_t BackgroundConfiguration.assets.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t BackgroundConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 72);
  if (((*(unsigned int *)(v2 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v2 + 52) << 32)) & 0x8000000000000000) == 0)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    sub_237A885F8();
    sub_237A885F8();
    if (v5)
      goto LABEL_4;
    return sub_237A885EC();
  }
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  if (v5)
  {
LABEL_4:
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v5);
    return swift_bridgeObjectRelease();
  }
  return sub_237A885EC();
}

uint64_t sub_237A180F0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0x734449726F6C6F63;
  if (*v0)
    return v1;
  else
    return 0x656C797473;
}

uint64_t sub_237A1814C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A1A14C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A18170()
{
  sub_237A19230();
  return sub_237A88718();
}

uint64_t sub_237A18198()
{
  sub_237A19230();
  return sub_237A88724();
}

uint64_t BackgroundConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  int v28;
  char v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827A50);
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v17 = v1[1];
  v18 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v19 = *((unsigned int *)v1 + 12);
  v9 = *((_WORD *)v1 + 26);
  v10 = *((_QWORD *)v1 + 7);
  v28 = *((unsigned __int8 *)v1 + 64);
  v15 = *((_QWORD *)v1 + 9);
  v16 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A19230();
  sub_237A886B8();
  v22 = v18;
  v23 = v17;
  v24 = v8;
  v25 = v7;
  v27 = v9;
  v26 = v19;
  v29 = 0;
  sub_237A19274();
  v11 = v21;
  sub_237A882B0();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  v13 = v15;
  v14 = v20;
  *(_QWORD *)&v22 = v16;
  BYTE8(v22) = v28;
  v29 = 1;
  sub_237A192B8();
  sub_237A88268();
  *(_QWORD *)&v22 = v13;
  v29 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A88268();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v5, v3);
}

uint64_t BackgroundConfiguration.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  v2 = *(unsigned __int8 *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_237A885D4();
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    sub_237A885F8();
    sub_237A885F8();
    if (v3)
      goto LABEL_4;
LABEL_7:
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  if (!v3)
    goto LABEL_7;
LABEL_4:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t BackgroundConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned __int16 v34;
  char v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827A70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A19230();
  sub_237A88688();
  if (!v2)
  {
    v35 = 0;
    sub_237A192FC();
    sub_237A881F0();
    v25 = v28;
    v26 = v27;
    v23 = v30;
    v24 = v29;
    v21 = v32;
    v22 = v31;
    v9 = v34;
    v10 = v33;
    v35 = 1;
    sub_237A19340();
    sub_237A881A8();
    v19 = v10;
    v20 = v9;
    v12 = v27;
    LOBYTE(v10) = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v35 = 2;
    sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v19 | (v20 << 32);
    v14 = v27;
    v15 = v25;
    *(_QWORD *)a2 = v26;
    *(_QWORD *)(a2 + 8) = v15;
    v16 = v23;
    *(_QWORD *)(a2 + 16) = v24;
    *(_QWORD *)(a2 + 24) = v16;
    v17 = v21;
    *(_QWORD *)(a2 + 32) = v22;
    *(_QWORD *)(a2 + 40) = v17;
    *(_DWORD *)(a2 + 48) = v13;
    *(_WORD *)(a2 + 52) = WORD2(v13);
    *(_QWORD *)(a2 + 56) = v12;
    *(_BYTE *)(a2 + 64) = v10;
    *(_QWORD *)(a2 + 72) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A18874@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A18888(_QWORD *a1)
{
  return BackgroundConfiguration.encode(to:)(a1);
}

uint64_t sub_237A188A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 72);
  if (((*(unsigned int *)(v2 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v2 + 52) << 32)) & 0x8000000000000000) == 0)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    sub_237A885F8();
    sub_237A885F8();
    if (v5)
      goto LABEL_4;
    return sub_237A885EC();
  }
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  if (v5)
  {
LABEL_4:
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v5);
    return swift_bridgeObjectRelease();
  }
  return sub_237A885EC();
}

uint64_t sub_237A18AA8()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(__int16 *)(v0 + 52) << 32);
  v2 = *(unsigned __int8 *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_237A885D4();
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
    sub_237A885E0();
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    sub_237A885F8();
    sub_237A885F8();
    if (v3)
      goto LABEL_4;
LABEL_7:
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  if (!v3)
    goto LABEL_7;
LABEL_4:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

BOOL _s14CarPlayAssetUI23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  float v5;
  float v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _BOOL8 result;
  char v21;
  uint64_t v22;
  char v23;
  float32x4_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  char v29;
  float32x4_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  int v34;
  char v35;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int16 *)(a1 + 52) << 32);
  v6 = *(float *)(a1 + 56);
  v5 = *(float *)(a1 + 60);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int16 *)(a2 + 52) << 32);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_BYTE *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  if ((v4 & 0x800000000000) != 0)
  {
    if ((v12 & 0x800000000000) == 0)
      return 0;
    v30.i64[0] = *(_QWORD *)a1;
    v30.i64[1] = v2;
    v31 = v3 & 1;
    v24.i64[0] = v10;
    v24.i64[1] = v9;
    v25 = v11 & 1;
    if ((_s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v30, &v24) & 1) == 0)
      return 0;
    goto LABEL_8;
  }
  if ((v12 & 0x800000000000) != 0)
    return 0;
  v16 = *(_OWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a1 + 40);
  v30.i64[0] = *(_QWORD *)a1;
  v30.i64[1] = v2;
  v31 = v3 & 1;
  v32 = *(_OWORD *)(a1 + 24);
  v33 = v18;
  v34 = v4;
  v35 = BYTE4(v4);
  v24.i64[0] = v10;
  v24.i64[1] = v9;
  v25 = v11 & 1;
  v26 = v16;
  v27 = v17;
  v28 = v12;
  v29 = BYTE4(v12);
  v19 = _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v30, (uint64_t)&v24);
  result = 0;
  if (v19 && !((v12 ^ v4) >> 40))
  {
LABEL_8:
    if ((v7 & 1) != 0)
    {
      if ((v14 & 1) == 0)
        return 0;
    }
    else
    {
      if (v6 == *(float *)&v13)
        v21 = v14;
      else
        v21 = 1;
      if ((v21 & 1) != 0 || v5 != *((float *)&v13 + 1))
        return 0;
    }
    if (v8)
    {
      if (!v15)
        return 0;
      swift_bridgeObjectRetain();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_2379B7304(v22, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v23 & 1) != 0;
    }
    return !v15;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI23BackgroundConfigurationV5StyleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  float32x4_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  char v19;
  float32x4_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int16 *)(a1 + 52) << 32);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int16 *)(a2 + 52) << 32);
  if ((v4 & 0x800000000000) != 0)
  {
    if ((v8 & 0x800000000000) != 0)
    {
      v20.i64[0] = *(_QWORD *)a1;
      v20.i64[1] = v2;
      v21 = v3 & 1;
      v14.i64[0] = v6;
      v14.i64[1] = v5;
      v15 = v7 & 1;
      v12 = _s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v20, &v14);
      return v12 & 1;
    }
    goto LABEL_6;
  }
  if ((v8 & 0x800000000000) != 0)
    goto LABEL_6;
  v9 = *(_OWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  v20.i64[0] = *(_QWORD *)a1;
  v20.i64[1] = v2;
  v21 = v3 & 1;
  v22 = *(_OWORD *)(a1 + 24);
  v23 = v11;
  v24 = v4;
  v25 = BYTE4(v4);
  v14.i64[0] = v6;
  v14.i64[1] = v5;
  v15 = v7 & 1;
  v16 = v9;
  v17 = v10;
  v18 = v8;
  v19 = BYTE4(v8);
  if (!_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v20, (uint64_t)&v14))
  {
LABEL_6:
    v12 = 0;
    return v12 & 1;
  }
  v12 = (v8 ^ v4) >> 40 == 0;
  return v12 & 1;
}

unint64_t sub_237A18FCC()
{
  unint64_t result;

  result = qword_2568279F0;
  if (!qword_2568279F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA462C, &type metadata for BackgroundConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568279F0);
  }
  return result;
}

unint64_t sub_237A19010()
{
  unint64_t result;

  result = qword_2568279F8;
  if (!qword_2568279F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA45DC, &type metadata for BackgroundConfiguration.Style.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568279F8);
  }
  return result;
}

unint64_t sub_237A19054()
{
  unint64_t result;

  result = qword_256827A00;
  if (!qword_256827A00)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarLinearStyle, &type metadata for DigiBarLinearStyle);
    atomic_store(result, (unint64_t *)&qword_256827A00);
  }
  return result;
}

unint64_t sub_237A19098()
{
  unint64_t result;

  result = qword_256827A08;
  if (!qword_256827A08)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA458C, &type metadata for BackgroundConfiguration.Style.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827A08);
  }
  return result;
}

unint64_t sub_237A190DC()
{
  unint64_t result;

  result = qword_256827A10;
  if (!qword_256827A10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle, &type metadata for DigiBarRadialStyle);
    atomic_store(result, (unint64_t *)&qword_256827A10);
  }
  return result;
}

unint64_t sub_237A19120()
{
  unint64_t result;

  result = qword_256827A18;
  if (!qword_256827A18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.RadialBackgroundType, &type metadata for BackgroundConfiguration.RadialBackgroundType);
    atomic_store(result, (unint64_t *)&qword_256827A18);
  }
  return result;
}

unint64_t sub_237A19164()
{
  unint64_t result;

  result = qword_256827A38;
  if (!qword_256827A38)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarLinearStyle, &type metadata for DigiBarLinearStyle);
    atomic_store(result, (unint64_t *)&qword_256827A38);
  }
  return result;
}

unint64_t sub_237A191A8()
{
  unint64_t result;

  result = qword_256827A40;
  if (!qword_256827A40)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle, &type metadata for DigiBarRadialStyle);
    atomic_store(result, (unint64_t *)&qword_256827A40);
  }
  return result;
}

unint64_t sub_237A191EC()
{
  unint64_t result;

  result = qword_256827A48;
  if (!qword_256827A48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.RadialBackgroundType, &type metadata for BackgroundConfiguration.RadialBackgroundType);
    atomic_store(result, (unint64_t *)&qword_256827A48);
  }
  return result;
}

unint64_t sub_237A19230()
{
  unint64_t result;

  result = qword_256827A58;
  if (!qword_256827A58)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA453C, &type metadata for BackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827A58);
  }
  return result;
}

unint64_t sub_237A19274()
{
  unint64_t result;

  result = qword_256827A60;
  if (!qword_256827A60)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.Style, &type metadata for BackgroundConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256827A60);
  }
  return result;
}

unint64_t sub_237A192B8()
{
  unint64_t result;

  result = qword_256827A68;
  if (!qword_256827A68)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.BlurConfiguration, &type metadata for BackgroundConfiguration.BlurConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827A68);
  }
  return result;
}

unint64_t sub_237A192FC()
{
  unint64_t result;

  result = qword_256827A78;
  if (!qword_256827A78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.Style, &type metadata for BackgroundConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256827A78);
  }
  return result;
}

unint64_t sub_237A19340()
{
  unint64_t result;

  result = qword_256827A80;
  if (!qword_256827A80)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.BlurConfiguration, &type metadata for BackgroundConfiguration.BlurConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827A80);
  }
  return result;
}

unint64_t sub_237A19388()
{
  unint64_t result;

  result = qword_256827A88;
  if (!qword_256827A88)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.BlurConfiguration, &type metadata for BackgroundConfiguration.BlurConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827A88);
  }
  return result;
}

unint64_t sub_237A193D0()
{
  unint64_t result;

  result = qword_256827A90;
  if (!qword_256827A90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.RadialBackgroundType, &type metadata for BackgroundConfiguration.RadialBackgroundType);
    atomic_store(result, (unint64_t *)&qword_256827A90);
  }
  return result;
}

unint64_t sub_237A19418()
{
  unint64_t result;

  result = qword_256827A98;
  if (!qword_256827A98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.Style, &type metadata for BackgroundConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256827A98);
  }
  return result;
}

unint64_t sub_237A19460()
{
  unint64_t result;

  result = qword_256827AA0;
  if (!qword_256827AA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration, &type metadata for BackgroundConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827AA0);
  }
  return result;
}

float sub_237A194A4@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 4);
  *a2 = result;
  return result;
}

float sub_237A194B0(float *a1, uint64_t a2)
{
  float result;

  result = *a1;
  *(float *)(a2 + 4) = *a1;
  return result;
}

uint64_t destroy for BackgroundConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackgroundConfiguration(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  *(_QWORD *)(a1 + 46) = *(_QWORD *)((char *)a2 + 46);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  v6 = *((_QWORD *)a2 + 7);
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 46) = 0;
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration()
{
  return &type metadata for BackgroundConfiguration;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.BlurConfiguration()
{
  return &type metadata for BackgroundConfiguration.BlurConfiguration;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.RadialBackgroundType()
{
  return &type metadata for BackgroundConfiguration.RadialBackgroundType;
}

__n128 __swift_memcpy54_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 46) = *(_QWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration.Style(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 54))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration.Style(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 54) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 46) = 0;
      return result;
    }
    *(_BYTE *)(result + 54) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_237A19788(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 52) >> 15;
}

uint64_t sub_237A19794(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 48);
  result = a1 + 48;
  v3 = v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_WORD *)(result + 4) = WORD2(v3) & 0x7FFF;
  return result;
}

uint64_t sub_237A197B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 48);
  result = a1 + 48;
  v4 = (v3 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0x303030303030303 | (a2 << 47);
  *(_QWORD *)(result - 32) &= 1uLL;
  *(_DWORD *)result = v3;
  *(_WORD *)(result + 4) = WORD2(v4);
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style()
{
  return &type metadata for BackgroundConfiguration.Style;
}

uint64_t _s14CarPlayAssetUI23BackgroundConfigurationV20RadialBackgroundTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237A1983C + 4 * byte_237AA3D95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237A19870 + 4 * byte_237AA3D90[v4]))();
}

uint64_t sub_237A19870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A19878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A19880);
  return result;
}

uint64_t sub_237A1988C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A19894);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237A19898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A198A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.RadialCodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.RadialCodingKeys;
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration.Style.LinearCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A19920 + 4 * byte_237AA3D9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A19940 + 4 * byte_237AA3D9F[v4]))();
}

_BYTE *sub_237A19920(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A19940(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A19948(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A19950(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A19958(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A19960(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.Style.LinearCodingKeys()
{
  return &type metadata for BackgroundConfiguration.Style.LinearCodingKeys;
}

uint64_t _s14CarPlayAssetUI23BackgroundConfigurationV5StyleO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A199C8 + 4 * byte_237AA3DA9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A199FC + 4 * byte_237AA3DA4[v4]))();
}

uint64_t sub_237A199FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A19A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A19A0CLL);
  return result;
}

uint64_t sub_237A19A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A19A20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A19A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A19A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundConfiguration.BlurConfiguration.CodingKeys()
{
  return &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys;
}

unint64_t sub_237A19A4C()
{
  unint64_t result;

  result = qword_256827AA8;
  if (!qword_256827AA8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4234, &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AA8);
  }
  return result;
}

unint64_t sub_237A19A94()
{
  unint64_t result;

  result = qword_256827AB0;
  if (!qword_256827AB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA42EC, &type metadata for BackgroundConfiguration.Style.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AB0);
  }
  return result;
}

unint64_t sub_237A19ADC()
{
  unint64_t result;

  result = qword_256827AB8;
  if (!qword_256827AB8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA43A4, &type metadata for BackgroundConfiguration.Style.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AB8);
  }
  return result;
}

unint64_t sub_237A19B24()
{
  unint64_t result;

  result = qword_256827AC0;
  if (!qword_256827AC0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA445C, &type metadata for BackgroundConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AC0);
  }
  return result;
}

unint64_t sub_237A19B6C()
{
  unint64_t result;

  result = qword_256827AC8;
  if (!qword_256827AC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4514, &type metadata for BackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AC8);
  }
  return result;
}

unint64_t sub_237A19BB4()
{
  unint64_t result;

  result = qword_256827AD0;
  if (!qword_256827AD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4484, &type metadata for BackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AD0);
  }
  return result;
}

unint64_t sub_237A19BFC()
{
  unint64_t result;

  result = qword_256827AD8;
  if (!qword_256827AD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA44AC, &type metadata for BackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AD8);
  }
  return result;
}

unint64_t sub_237A19C44()
{
  unint64_t result;

  result = qword_256827AE0;
  if (!qword_256827AE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4314, &type metadata for BackgroundConfiguration.Style.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AE0);
  }
  return result;
}

unint64_t sub_237A19C8C()
{
  unint64_t result;

  result = qword_256827AE8;
  if (!qword_256827AE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA433C, &type metadata for BackgroundConfiguration.Style.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AE8);
  }
  return result;
}

unint64_t sub_237A19CD4()
{
  unint64_t result;

  result = qword_256827AF0;
  if (!qword_256827AF0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA425C, &type metadata for BackgroundConfiguration.Style.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AF0);
  }
  return result;
}

unint64_t sub_237A19D1C()
{
  unint64_t result;

  result = qword_256827AF8;
  if (!qword_256827AF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4284, &type metadata for BackgroundConfiguration.Style.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827AF8);
  }
  return result;
}

unint64_t sub_237A19D64()
{
  unint64_t result;

  result = qword_256827B00;
  if (!qword_256827B00)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA43CC, &type metadata for BackgroundConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827B00);
  }
  return result;
}

unint64_t sub_237A19DAC()
{
  unint64_t result;

  result = qword_256827B08;
  if (!qword_256827B08)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA43F4, &type metadata for BackgroundConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827B08);
  }
  return result;
}

unint64_t sub_237A19DF4()
{
  unint64_t result;

  result = qword_256827B10;
  if (!qword_256827B10)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA41A4, &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827B10);
  }
  return result;
}

unint64_t sub_237A19E3C()
{
  unint64_t result;

  result = qword_256827B18;
  if (!qword_256827B18)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA41CC, &type metadata for BackgroundConfiguration.BlurConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827B18);
  }
  return result;
}

uint64_t sub_237A19E80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A19F68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6169646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261656E696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A1A048(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A1A14C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB2230 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_237A1A290()
{
  unint64_t result;

  result = qword_256827B20;
  if (!qword_256827B20)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for BackgroundConfiguration.RadialBackgroundType, &type metadata for BackgroundConfiguration.RadialBackgroundType);
    atomic_store(result, (unint64_t *)&qword_256827B20);
  }
  return result;
}

uint64_t Generator.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Generator.callAsFunction()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t static Generator<A>.live.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_256827B28 + 1);
  *a1 = xmmword_256827B28;
  a1[1] = v2;
  return swift_retain();
}

uint64_t static Generator<A>.live.setter(__int128 *a1)
{
  swift_beginAccess();
  xmmword_256827B28 = *a1;
  return swift_release();
}

uint64_t (*static Generator<A>.live.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t Generator.callAsFunction<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (**v2)(__n128);
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*v2)(v5);
  return TaggedValue.init(rawValue:)((uint64_t)v7, v4, a2);
}

uint64_t type metadata accessor for Generator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Generator);
}

double static Instrument.GaugeStyle.AngleConfiguration.default.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;

  if (qword_25681E4D0 != -1)
    swift_once();
  v2 = byte_256827BC8;
  *(_OWORD *)a1 = xmmword_256827BB8;
  *(_BYTE *)(a1 + 16) = v2;
  result = *(double *)&algn_256827BC9[7];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_256827BC9[7];
  return result;
}

double Instrument.GaugeStyle.AngleConfiguration.minimumAngle.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Instrument.GaugeStyle.AngleConfiguration.minimumAngle.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.minimumAngle.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.AngleConfiguration.maximumAngle.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void Instrument.GaugeStyle.AngleConfiguration.maximumAngle.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.maximumAngle.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.clockwise.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.clockwise.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.clockwise.modify())()
{
  return nullsub_1;
}

double Instrument.GaugeStyle.AngleConfiguration.bounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void Instrument.GaugeStyle.AngleConfiguration.bounds.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*Instrument.GaugeStyle.AngleConfiguration.bounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.init(minimumAngle:maximumAngle:clockwise:bounds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(_BYTE *)(a2 + 16) = result;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.hash(into:)()
{
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  return sub_237896D64();
}

uint64_t sub_237A1A5CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A1A604 + 4 * byte_237AA4710[*v0]))(0x416D756D696E696DLL, 0xEC000000656C676ELL);
}

uint64_t sub_237A1A604()
{
  return 0x416D756D6978616DLL;
}

uint64_t sub_237A1A618()
{
  return 0x7369776B636F6C63;
}

uint64_t sub_237A1A634()
{
  return 0x73646E756F62;
}

uint64_t sub_237A1A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A1AFC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A1A66C()
{
  sub_237A1ACDC();
  return sub_237A88718();
}

uint64_t sub_237A1A694()
{
  sub_237A1ACDC();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827BE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = v1[3];
  v11 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1ACDC();
  sub_237A886B8();
  v13[0] = v9;
  v14 = 0;
  sub_23787ADF8();
  sub_237A882B0();
  if (!v2)
  {
    v13[0] = v8;
    v14 = 1;
    sub_237A882B0();
    LOBYTE(v13[0]) = 2;
    sub_237A88280();
    v13[0] = v10;
    v13[1] = v11;
    v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
    sub_2379192CC(&qword_25681F0C0, MEMORY[0x24BEE13D8], MEMORY[0x24BEE08E0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.hashValue.getter()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.AngleConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827BF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1ACDC();
  sub_237A88688();
  if (!v2)
  {
    v15 = 0;
    sub_23787AE3C();
    sub_237A881F0();
    v9 = v14;
    v15 = 1;
    sub_237A881F0();
    v10 = v14;
    LOBYTE(v14) = 2;
    v12 = sub_237A881C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F0B8);
    v15 = 3;
    sub_2379192CC(&qword_25681F0E0, MEMORY[0x24BEE1400], MEMORY[0x24BEE0900]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v14;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 16) = v12 & 1;
    *(_OWORD *)(a2 + 24) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A1AB48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.AngleConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A1AB5C(_QWORD *a1)
{
  return Instrument.GaugeStyle.AngleConfiguration.encode(to:)(a1);
}

uint64_t sub_237A1AB78()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  return sub_237A88610();
}

double sub_237A1AC04()
{
  double result;

  xmmword_256827BB8 = xmmword_237AA4940;
  byte_256827BC8 = 1;
  result = 0.0;
  *(_OWORD *)&algn_256827BC9[7] = xmmword_237AA4950;
  return result;
}

double sub_237A1AC30@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;

  if (qword_25681E4D0 != -1)
    swift_once();
  v2 = byte_256827BC8;
  *(_OWORD *)a1 = xmmword_256827BB8;
  *(_BYTE *)(a1 + 16) = v2;
  result = *(double *)&algn_256827BC9[7];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_256827BC9[7];
  return result;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18AngleConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  BOOL v4;
  double v5;
  _BOOL4 v6;

  result = 0;
  v4 = *(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
  if (v4 && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0)
  {
    v5 = *(double *)(a1 + 32);
    v6 = *(double *)(a1 + 24) == *(double *)(a2 + 24);
    return v5 == *(double *)(a2 + 32) && v6;
  }
  return result;
}

unint64_t sub_237A1ACDC()
{
  unint64_t result;

  result = qword_256827BE8;
  if (!qword_256827BE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA48E8, &_s18AngleConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827BE8);
  }
  return result;
}

unint64_t sub_237A1AD24()
{
  unint64_t result;

  result = qword_256827BF8;
  if (!qword_256827BF8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.AngleConfiguration, &type metadata for Instrument.GaugeStyle.AngleConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827BF8);
  }
  return result;
}

uint64_t _s18AngleConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s18AngleConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.AngleConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.AngleConfiguration;
}

uint64_t _s18AngleConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A1AE6C + 4 * byte_237AA4719[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A1AEA0 + 4 * byte_237AA4714[v4]))();
}

uint64_t sub_237A1AEA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A1AEA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A1AEB0);
  return result;
}

uint64_t sub_237A1AEBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A1AEC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A1AEC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A1AED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18AngleConfigurationV10CodingKeysOMa()
{
  return &_s18AngleConfigurationV10CodingKeysON;
}

unint64_t sub_237A1AEF0()
{
  unint64_t result;

  result = qword_256827C30;
  if (!qword_256827C30)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA48C0, &_s18AngleConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827C30);
  }
  return result;
}

unint64_t sub_237A1AF38()
{
  unint64_t result;

  result = qword_256827C38;
  if (!qword_256827C38)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4830, &_s18AngleConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827C38);
  }
  return result;
}

unint64_t sub_237A1AF80()
{
  unint64_t result;

  result = qword_256827C40;
  if (!qword_256827C40)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4858, &_s18AngleConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827C40);
  }
  return result;
}

uint64_t sub_237A1AFC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x416D756D696E696DLL && a2 == 0xEC000000656C676ELL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x416D756D6978616DLL && a2 == 0xEC000000656C676ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void TachometerDataIdentifiers.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TachometerDataIdentifiers.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.engineRPMMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *TachometerDataIdentifiers.engineRPMMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.engineRPMMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.markerRedlineDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *TachometerDataIdentifiers.markerRedlineDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.markerRedlineDataIdentifier.modify())()
{
  return nullsub_1;
}

void TachometerDataIdentifiers.engineRPMStateDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *TachometerDataIdentifiers.engineRPMStateDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*TachometerDataIdentifiers.engineRPMStateDataIdentifier.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::TachometerDataIdentifiers __swiftcall TachometerDataIdentifiers.init()()
{
  _DWORD *v0;
  CarPlayAssetUI::TachometerDataIdentifiers result;

  *v0 = 252580369;
  return result;
}

uint64_t TachometerDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A1B350(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A1B390 + 4 * byte_237AA4970[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

unint64_t sub_237A1B390()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_237A1B3AC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_237A1B3E4()
{
  unsigned __int8 *v0;

  return sub_237A1B350(*v0);
}

uint64_t sub_237A1B3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A1BBC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A1B410()
{
  sub_237A1B980();
  return sub_237A88718();
}

uint64_t sub_237A1B438()
{
  sub_237A1B980();
  return sub_237A88724();
}

uint64_t TachometerDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827C48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v15 = v1[2];
  v16 = v9;
  HIDWORD(v14) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1B980();
  sub_237A886B8();
  v24 = v8;
  v23 = 0;
  sub_237888154();
  sub_237A882B0();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v5;
  v12 = BYTE4(v14);
  v13 = v15;
  v22 = v16;
  v21 = 1;
  sub_237A882B0();
  v20 = v13;
  v19 = 2;
  sub_237A882B0();
  v18 = v12;
  v17 = 3;
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t TachometerDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t TachometerDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827C58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1B980();
  sub_237A88688();
  if (!v2)
  {
    v22 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v23;
    v20 = 1;
    sub_237A881F0();
    v15 = v9;
    v10 = v21;
    v18 = 2;
    sub_237A881F0();
    v14 = v10;
    LOBYTE(v10) = v19;
    v16 = 3;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A1B950@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return TachometerDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237A1B964(_QWORD *a1)
{
  return TachometerDataIdentifiers.encode(to:)(a1);
}

unint64_t sub_237A1B980()
{
  unint64_t result;

  result = qword_256827C50;
  if (!qword_256827C50)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4B50, &type metadata for TachometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827C50);
  }
  return result;
}

unint64_t sub_237A1B9C8()
{
  unint64_t result;

  result = qword_256827C60;
  if (!qword_256827C60)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TachometerDataIdentifiers, &type metadata for TachometerDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256827C60);
  }
  return result;
}

ValueMetadata *type metadata accessor for TachometerDataIdentifiers()
{
  return &type metadata for TachometerDataIdentifiers;
}

uint64_t storeEnumTagSinglePayload for TachometerDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A1BA68 + 4 * byte_237AA4979[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A1BA9C + 4 * byte_237AA4974[v4]))();
}

uint64_t sub_237A1BA9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A1BAA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A1BAACLL);
  return result;
}

uint64_t sub_237A1BAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A1BAC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A1BAC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A1BACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TachometerDataIdentifiers.CodingKeys()
{
  return &type metadata for TachometerDataIdentifiers.CodingKeys;
}

unint64_t sub_237A1BAEC()
{
  unint64_t result;

  result = qword_256827C68;
  if (!qword_256827C68)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4B28, &type metadata for TachometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827C68);
  }
  return result;
}

unint64_t sub_237A1BB34()
{
  unint64_t result;

  result = qword_256827C70;
  if (!qword_256827C70)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4A98, &type metadata for TachometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827C70);
  }
  return result;
}

unint64_t sub_237A1BB7C()
{
  unint64_t result;

  result = qword_256827C78;
  if (!qword_256827C78)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4AC0, &type metadata for TachometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827C78);
  }
  return result;
}

uint64_t sub_237A1BBC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000237AB2250 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AB2270 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000237AB2290)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t Instrument.PopoverLocation.name.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
    return 0x6C61636F6CLL;
  else
    return 0x65746F6D6572;
}

BOOL static Instrument.PopoverConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void *v73;
  _QWORD v74[6];
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[6];
  char v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[29];

  v2 = *a1;
  v3 = a1[1];
  v4 = (void *)a1[2];
  v5 = a1[3];
  v6 = (void *)a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = (void *)a1[8];
  v11 = a1[9];
  v13 = (void *)a1[10];
  v12 = a1[11];
  v15 = a1[12];
  v14 = a1[13];
  v16 = *a2;
  v17 = a2[1];
  v18 = (void *)a2[2];
  v19 = a2[3];
  v20 = (void *)a2[4];
  v21 = a2[5];
  v23 = a2[6];
  v22 = a2[7];
  v24 = (void *)a2[8];
  v25 = a2[9];
  v27 = (void *)a2[10];
  v26 = a2[11];
  v28 = a2[12];
  v29 = a2[13];
  v30 = v2;
  v92[0] = v2;
  v92[1] = v3;
  v66 = v4;
  v92[2] = v4;
  v70 = v5;
  v71 = v7;
  v92[3] = v5;
  v73 = v6;
  v92[4] = v6;
  v92[5] = v7;
  v72 = v8;
  v92[6] = v8;
  v92[7] = v9;
  v92[8] = v10;
  v92[9] = v11;
  v92[10] = v13;
  v31 = v12;
  v92[11] = v12;
  v32 = v15;
  v92[12] = v15;
  v92[13] = v14;
  v92[14] = v16;
  v33 = v17;
  v92[15] = v17;
  v92[16] = v18;
  v92[17] = v19;
  v92[18] = v20;
  v92[19] = v21;
  v67 = v23;
  v68 = v25;
  v92[20] = v23;
  v34 = v22;
  v92[21] = v22;
  v92[22] = v24;
  v92[23] = v25;
  v69 = v27;
  v92[24] = v27;
  v92[25] = v26;
  v92[26] = v28;
  v92[27] = v29;
  if (v3)
  {
    if (v17)
    {
      v35 = v30;
      v83[0] = v30;
      v83[1] = v3;
      v83[2] = v4;
      v83[3] = v5;
      v83[4] = v6;
      v83[5] = v7;
      v84 = v72;
      v85 = v9;
      v86 = v10;
      v87 = v11;
      v88 = v13;
      v89 = v31;
      v90 = v15;
      v91 = v14;
      v74[0] = v16;
      v74[1] = v17;
      v55 = v17;
      v61 = v18;
      v74[2] = v18;
      v74[3] = v19;
      v53 = v20;
      v36 = v20;
      v74[4] = v20;
      v74[5] = v21;
      v64 = v22;
      v75 = v67;
      v76 = v22;
      v77 = v24;
      v78 = v68;
      v79 = v27;
      v80 = v26;
      v81 = v28;
      v82 = v29;
      v56 = v16;
      v54 = v28;
      v62 = v11;
      v37 = v31;
      v58 = v31;
      v59 = v26;
      v38 = v32;
      v57 = v32;
      v39 = v3;
      v40 = v34;
      v41 = v10;
      v63 = v10;
      v42 = v11;
      v43 = v13;
      v60 = v24;
      sub_2378DE5FC(v16, v33, v18, v19, v36, v21, v67, v40, v24, v68, v27, v26, v28);
      sub_2378DE5FC(v35, v39, v66, v70, v73, v71, v72, v9, v41, v42, v43, v37, v38);
      sub_2378DE5FC(v35, v39, v66, v70, v73, v71, v72, v9, v63, v62, v43, v58, v38);
      sub_2378DE5FC(v56, v55, v61, v19, v53, v21, v67, v64, v60, v68, v27, v59, v54);
      v52 = _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)v83, (uint64_t)v74);
      sub_237A1F060((uint64_t)v92);
      sub_2378DF9A8(v56, v55, v61, v19, v53, v21, v67, v64, v60, v68, v27, v59, v54);
      sub_2378DF9A8(v35, v39, v66, v70, v73, v71, v72, v9, v63, v62, v43, v58, v57);
      return (v52 & 1) != 0;
    }
  }
  else if (!v17)
  {
    sub_237A1F060((uint64_t)v92);
    return 1;
  }
  v45 = v16;
  v46 = v28;
  v47 = v3;
  v48 = v18;
  v65 = v22;
  v49 = v17;
  v50 = v24;
  v51 = v26;
  sub_2378DE5FC(v30, v47, v4, v5, v6, v7, v72, v9, v10, v11, v13, v31, v15);
  sub_2378DE5FC(v45, v49, v48, v19, v20, v21, v67, v65, v50, v68, v69, v51, v46);
  sub_237A1F060((uint64_t)v92);
  return 0;
}

BOOL Instrument.PopoverLocation.rendersLocally.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8) != 0;
}

void *Instrument.PopoverConfiguration.location.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *v1;
  v3 = v1[1];
  v4 = (void *)v1[2];
  v5 = v1[3];
  v6 = (void *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = (void *)v1[8];
  v11 = v1[9];
  v12 = (void *)v1[10];
  v13 = v1[11];
  v14 = v1[12];
  v15 = v1[13];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = (uint64_t)v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = (uint64_t)v10;
  a1[9] = v11;
  a1[10] = (uint64_t)v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  return sub_2378DE5FC(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

__n128 Instrument.PopoverConfiguration.location.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v8 = a1[2];
  v6 = a1[4];
  v7 = a1[3];
  v5 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  v3 = *((_QWORD *)a1 + 13);
  sub_2378DF9A8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  *(_OWORD *)v1 = v10;
  *(_OWORD *)(v1 + 16) = v9;
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 48) = v7;
  result = v5;
  *(_OWORD *)(v1 + 64) = v6;
  *(__n128 *)(v1 + 80) = v5;
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  return result;
}

uint64_t (*Instrument.PopoverConfiguration.location.modify())()
{
  return nullsub_1;
}

__n128 Instrument.PopoverConfiguration.init(location:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 96);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

void Instrument.PopoverConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
  {
    sub_237A885E0();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_237A885E0();
  }
}

uint64_t sub_237A1C400()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_237A1C418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237A1C4AC()
{
  sub_237A1F128();
  return sub_237A88718();
}

uint64_t sub_237A1C4D4()
{
  sub_237A1F128();
  return sub_237A88724();
}

uint64_t Instrument.PopoverConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827C80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v15 = v1[1];
  v16 = v7;
  v14 = v1[2];
  v13 = v1[3];
  v12 = v1[4];
  v11 = v1[5];
  v9 = *((_QWORD *)v1 + 12);
  v8 = *((_QWORD *)v1 + 13);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1F128();
  sub_237A886B8();
  v17 = v16;
  v18 = v15;
  v19 = v14;
  v20 = v13;
  v21 = v12;
  v22 = v11;
  v23 = v9;
  v24 = v8;
  sub_237A1F16C();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.PopoverConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[80];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if (v1)
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Instrument.PopoverConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[7];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827C98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1F128();
  sub_237A88688();
  if (!v2)
  {
    sub_237A1F1B0();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v16[1];
    v10 = v16[2];
    v11 = v16[3];
    v12 = v16[4];
    v13 = v16[5];
    v14 = v16[6];
    *a2 = v16[0];
    a2[1] = v9;
    a2[2] = v10;
    a2[3] = v11;
    a2[4] = v12;
    a2[5] = v13;
    a2[6] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A1C888@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.PopoverConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A1C89C(_QWORD *a1)
{
  return Instrument.PopoverConfiguration.encode(to:)(a1);
}

uint64_t sub_237A1C8B0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[80];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if (v1)
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

void sub_237A1C990(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
  {
    sub_237A885E0();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_237A885E0();
  }
}

uint64_t sub_237A1CA5C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[80];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if (v1)
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t sub_237A1CB38(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[7];
  _OWORD v10[7];

  v2 = a1[1];
  v10[0] = *a1;
  v10[1] = v2;
  v3 = a1[3];
  v10[2] = a1[2];
  v10[3] = v3;
  v4 = a1[5];
  v10[4] = a1[4];
  v10[5] = v4;
  v10[6] = a1[6];
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  v6 = a2[3];
  v9[2] = a2[2];
  v9[3] = v6;
  v7 = a2[5];
  v9[4] = a2[4];
  v9[5] = v7;
  v9[6] = a2[6];
  return _s14CarPlayAssetUI10InstrumentV15PopoverLocationO2eeoiySbAE_AEtFZ_0((uint64_t *)v10, (uint64_t *)v9) & 1;
}

uint64_t Instrument.PopoverLocation.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  if (!*(_QWORD *)(v0 + 8))
    return MEMORY[0x24BEE4AF8];
  v2 = *(void **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(void **)(v0 + 64);
  v14 = *(void **)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_BYTE *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F158);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_BYTE *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v8;
  if ((~(_BYTE)v6 & 0xFE) != 0)
  {
    sub_23787007C(v5, v15, v14, v13, v6);
    sub_23787007C(v5, v15, v14, v13, v6);
    sub_237870090(v2, v1, v3, v4, v9);
    inited = (uint64_t)sub_2378967E0((_QWORD *)1, 2, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = 2;
    *(_QWORD *)(inited + 80) = v5;
    *(_QWORD *)(inited + 88) = v15;
    *(_QWORD *)(inited + 96) = v14;
    *(_QWORD *)(inited + 104) = v13;
    *(_BYTE *)(inited + 112) = v6;
    *(_QWORD *)(inited + 120) = v7;
    sub_2378702CC(v5, v15, v14, v13, v6);
  }
  else
  {
    sub_237870090(v2, v1, v3, v4, v9);
  }
  v11 = sub_237A1D350(inited);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.assets.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(void **)(v0 + 64);
  v13 = *(void **)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 88);
  v8 = ~*(_DWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F158);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  *(_BYTE *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  if ((v8 & 0xFE) != 0)
  {
    sub_23787007C(v15, v14, v13, v16, v7);
    sub_237870090(v1, v2, v4, v3, v5);
    sub_23787007C(v15, v14, v13, v16, v7);
    inited = (uint64_t)sub_2378967E0((_QWORD *)1, 2, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = 2;
    *(_QWORD *)(inited + 80) = v15;
    *(_QWORD *)(inited + 88) = v14;
    *(_QWORD *)(inited + 96) = v13;
    *(_QWORD *)(inited + 104) = v16;
    *(_BYTE *)(inited + 112) = v7;
    *(_QWORD *)(inited + 120) = v9;
    sub_2378702CC(v15, v14, v13, v16, v7);
  }
  else
  {
    sub_237870090(v1, v2, v4, v3, v5);
  }
  v11 = sub_237A1D350(inited);
  swift_bridgeObjectRelease();
  return v11;
}

void Instrument.PopoverLocation.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  if (*(_QWORD *)(v1 + 8))
  {
    v9 = v2;
    v10 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 48);
    v4 = *(void **)(v1 + 64);
    v5 = *(_QWORD *)(v1 + 72);
    v7 = *(_QWORD *)(v1 + 24);
    v8 = *(_QWORD *)(v1 + 88);
    v11 = *(_QWORD *)(v1 + 8);
    *(_QWORD *)&v12 = *(_QWORD *)(v1 + 16);
    *((_QWORD *)&v12 + 1) = v7;
    v13 = *(_OWORD *)(v1 + 32);
    v6 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)&v14 = v6;
    *((_QWORD *)&v14 + 1) = v4;
    *(_QWORD *)&v15 = v5;
    *((_QWORD *)&v15 + 1) = *(_QWORD *)(v1 + 80);
    *(_QWORD *)&v16 = v8;
    *((_QWORD *)&v16 + 1) = *(_QWORD *)(v1 + 96);
    v17 = *(_QWORD *)(v1 + 104);
    swift_bridgeObjectRetain();
    sub_237870090((void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3);
    sub_23787007C(v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
    ImageAsset.restore(from:)(a1);
    if (v9)
    {
      swift_bridgeObjectRelease();
      sub_2378702E0((void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3);
      sub_2378702CC(v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
    }
    else
    {
      if ((~BYTE8(v16) & 0xFE) != 0)
        ImageAsset.restore(from:)(a1);
      sub_2378DF9A8(v10, v11, (void *)v12, v7, (void *)v13, *((uint64_t *)&v13 + 1), v3, v6, v4, v5, *((void **)&v15 + 1), v8, SBYTE8(v16));
      *(_QWORD *)v1 = v10;
      *(_QWORD *)(v1 + 8) = v11;
      *(_OWORD *)(v1 + 16) = v12;
      *(_OWORD *)(v1 + 32) = v13;
      *(_QWORD *)(v1 + 48) = v3;
      *(_OWORD *)(v1 + 56) = v14;
      *(_OWORD *)(v1 + 72) = v15;
      *(_OWORD *)(v1 + 88) = v16;
      *(_QWORD *)(v1 + 104) = v17;
    }
  }
}

void Instrument.PopoverLocation.LocalConfiguration.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  ImageAsset.restore(from:)(a1);
  if (!v2 && (~*(_DWORD *)(v1 + 96) & 0xFELL) != 0)
    ImageAsset.restore(from:)(a1);
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.streamName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.streamName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.streamName.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.closeButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(void **)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  return sub_237870090(v2, v3, v4, v5, v7);
}

__n128 Instrument.PopoverLocation.LocalConfiguration.closeButton.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  sub_2378702E0(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  result = v7;
  *(__n128 *)(v1 + 16) = v7;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.closeButton.modify())()
{
  return nullsub_1;
}

void *Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)v1[8];
  v3 = v1[9];
  v4 = (void *)v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_23787007C(v2, v3, v4, v5, v6);
}

__n128 Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  sub_2378702CC(*(void **)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  result = v5;
  *(_OWORD *)(v1 + 64) = v6;
  *(__n128 *)(v1 + 80) = v5;
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  return result;
}

uint64_t (*Instrument.PopoverLocation.LocalConfiguration.focusedCloseButton.modify())()
{
  return nullsub_1;
}

__n128 Instrument.PopoverLocation.LocalConfiguration.init(streamName:closeButton:focusedCloseButton:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __n128 result;
  __int128 v11;

  v5 = *(_BYTE *)(a3 + 32);
  v6 = *(_QWORD *)(a3 + 40);
  v7 = *(unsigned __int8 *)(a4 + 32);
  v8 = *(_QWORD *)(a4 + 40);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 32) = v9;
  *(_BYTE *)(a5 + 48) = v5;
  *(_QWORD *)(a5 + 56) = v6;
  result = *(__n128 *)a4;
  v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 64) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 80) = v11;
  *(_QWORD *)(a5 + 96) = v7;
  *(_QWORD *)(a5 + 104) = v8;
  return result;
}

uint64_t sub_237A1D350(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_2379D6310(0, v1, 0);
    v2 = v18;
    v4 = (_QWORD *)(a1 + 72);
    do
    {
      v5 = (void *)*(v4 - 5);
      v6 = *(v4 - 4);
      v7 = (void *)*(v4 - 3);
      v8 = *(v4 - 2);
      v9 = *((_BYTE *)v4 - 8);
      v14 = *v4;
      sub_237870090(v5, v6, v7, v8, v9);
      v18 = v2;
      v11 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2379D6310(v10 > 1, v11 + 1, 1);
        v2 = v18;
      }
      v4 += 6;
      v16 = &type metadata for ImageAsset;
      v17 = &protocol witness table for ImageAsset;
      v12 = swift_allocObject();
      *(_QWORD *)&v15 = v12;
      *(_QWORD *)(v12 + 16) = v5;
      *(_QWORD *)(v12 + 24) = v6;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v8;
      *(_BYTE *)(v12 + 48) = v9;
      *(_QWORD *)(v12 + 56) = v14;
      *(_QWORD *)(v2 + 16) = v11 + 1;
      sub_237870734(&v15, v2 + 40 * v11 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void Instrument.PopoverLocation.LocalConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;

  v4 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(void **)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v12 = *(void **)(v1 + 64);
  v10 = *(void **)(v1 + 80);
  v11 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 96);
  v13 = ~*(_DWORD *)(v1 + 96);
  v9 = *(_QWORD *)(v1 + 88);
  v8 = *(_BYTE *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237870090(v4, v3, v5, v6, v8);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_237A885E0();
  sub_2378702E0(v4, v3, v5, v6, v8);
  sub_237A885EC();
  if ((v13 & 0xFE) != 0)
  {
    sub_237870090(v12, v11, v10, v9, v7);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_237A885E0();
    sub_2378702CC(v12, v11, v10, v9, v7);
  }
}

uint64_t sub_237A1D630()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x74754265736F6C63;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x614E6D6165727473;
}

uint64_t sub_237A1D69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A20A2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A1D6C0()
{
  sub_237A1F1F4();
  return sub_237A88718();
}

uint64_t sub_237A1D6E8()
{
  sub_237A1F1F4();
  return sub_237A88724();
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v1 + 24);
  v27 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v24 = *(_QWORD *)(v1 + 40);
  v25 = v8;
  v35 = *(unsigned __int8 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v22 = *(_QWORD *)(v1 + 64);
  v23 = v9;
  v10 = *(_QWORD *)(v1 + 72);
  v20 = *(_QWORD *)(v1 + 80);
  v21 = v10;
  v11 = *(_QWORD *)(v1 + 88);
  v18 = *(_QWORD *)(v1 + 96);
  v19 = v11;
  v17 = *(_QWORD *)(v1 + 104);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1F1F4();
  sub_237A886B8();
  LOBYTE(v29) = 0;
  v12 = v28;
  sub_237A88274();
  if (!v12)
  {
    v14 = v20;
    v13 = v21;
    v29 = v27;
    v30 = v26;
    v31 = v25;
    v32 = v24;
    LOBYTE(v33) = v35;
    v15 = v22;
    v34 = v23;
    v36 = 1;
    sub_2378888DC();
    sub_237A882B0();
    v29 = v15;
    v30 = v13;
    v31 = v14;
    v32 = v19;
    v33 = v18;
    v34 = v17;
    v36 = 2;
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.PopoverLocation.LocalConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  _BYTE v6[72];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v1 = v0[1];
  v2 = *((_BYTE *)v0 + 48);
  v3 = v0[13];
  v7 = *v0;
  v8 = v1;
  v4 = *((_OWORD *)v0 + 2);
  v9 = *((_OWORD *)v0 + 1);
  v10 = v4;
  v11 = v2;
  v12 = *(_OWORD *)(v0 + 7);
  v13 = *(_OWORD *)(v0 + 9);
  v14 = *(_OWORD *)(v0 + 11);
  v15 = v3;
  sub_237A885D4();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

void Instrument.PopoverLocation.LocalConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  char v53;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1F1F4();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = -2;
  }
  else
  {
    LOBYTE(v46) = 0;
    v9 = sub_237A881B4();
    v11 = v10;
    v44 = v9;
    v53 = 1;
    v12 = sub_237888A0C();
    swift_bridgeObjectRetain();
    v45 = v12;
    sub_237A881F0();
    v39 = v51;
    v40 = v49;
    v53 = 2;
    v42 = v47;
    v43 = v46;
    v41 = v48;
    v52 = v50;
    sub_237870090(v46, v47, v48, v49, v50);
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v46;
    v45 = v51;
    v14 = v47;
    v15 = v48;
    v16 = v49;
    v17 = v50;
    sub_23787007C(v46, v47, v48, v49, v50);
    sub_2378702CC(0, 0, 0, 0, 254);
    v38 = v11;
    swift_bridgeObjectRetain();
    sub_237870090(v43, v42, v41, v40, v52);
    v36 = v14;
    v37 = v13;
    v34 = v16;
    v35 = v15;
    v33 = v17;
    sub_23787007C(v13, v14, v15, v16, v17);
    sub_2378702CC(v13, v14, v15, v16, v17);
    v19 = v42;
    v18 = v43;
    v21 = v40;
    v20 = v41;
    LOBYTE(v17) = v52;
    sub_2378702E0(v43, v42, v41, v40, v52);
    v22 = v38;
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v44;
    *(_QWORD *)(a2 + 8) = v22;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v20;
    *(_QWORD *)(a2 + 40) = v21;
    *(_BYTE *)(a2 + 48) = v17;
    v23 = v36;
    v24 = v37;
    *(_QWORD *)(a2 + 56) = v39;
    *(_QWORD *)(a2 + 64) = v24;
    v26 = v34;
    v25 = v35;
    *(_QWORD *)(a2 + 72) = v23;
    *(_QWORD *)(a2 + 80) = v25;
    v27 = v33;
    *(_QWORD *)(a2 + 88) = v26;
    *(_QWORD *)(a2 + 96) = v27;
    *(_QWORD *)(a2 + 104) = v45;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_2378702E0(v43, v42, v41, v40, v52);
    v28 = v24;
    v29 = v23;
    v30 = v25;
    v31 = v26;
    v32 = v27;
  }
  sub_2378702CC(v28, v29, v30, v31, v32);
}

void sub_237A1DD54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  ImageAsset.restore(from:)(a1);
  if (!v2 && (~*(_DWORD *)(v1 + 96) & 0xFELL) != 0)
    ImageAsset.restore(from:)(a1);
}

void sub_237A1DDA4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Instrument.PopoverLocation.LocalConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A1DDB8(_QWORD *a1)
{
  return Instrument.PopoverLocation.LocalConfiguration.encode(to:)(a1);
}

uint64_t sub_237A1DDCC()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  _BYTE v6[72];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v1 = v0[1];
  v2 = *((_BYTE *)v0 + 48);
  v3 = v0[13];
  v7 = *v0;
  v8 = v1;
  v4 = *((_OWORD *)v0 + 2);
  v9 = *((_OWORD *)v0 + 1);
  v10 = v4;
  v11 = v2;
  v12 = *(_OWORD *)(v0 + 7);
  v13 = *(_OWORD *)(v0 + 9);
  v14 = *(_OWORD *)(v0 + 11);
  v15 = v3;
  sub_237A885D4();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t sub_237A1DE4C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  _BYTE v6[72];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v1 = v0[1];
  v2 = *((_BYTE *)v0 + 48);
  v3 = v0[13];
  v7 = *v0;
  v8 = v1;
  v4 = *((_OWORD *)v0 + 2);
  v9 = *((_OWORD *)v0 + 1);
  v10 = v4;
  v11 = v2;
  v12 = *(_OWORD *)(v0 + 7);
  v13 = *(_OWORD *)(v0 + 9);
  v14 = *(_OWORD *)(v0 + 11);
  v15 = v3;
  sub_237A885D4();
  Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

void Instrument.PopoverLocation.hash(into:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
  {
    sub_237A885E0();
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
  }
  else
  {
    sub_237A885E0();
  }
}

uint64_t sub_237A1DF94()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746F6D6572;
  else
    return 0x6E65526C61636F6CLL;
}

uint64_t sub_237A1DFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A20BA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A1DFFC()
{
  sub_237A1F238();
  return sub_237A88718();
}

uint64_t sub_237A1E024()
{
  sub_237A1F238();
  return sub_237A88724();
}

uint64_t sub_237A1E04C()
{
  sub_237A1F2C0();
  return sub_237A88718();
}

uint64_t sub_237A1E074()
{
  sub_237A1F2C0();
  return sub_237A88724();
}

uint64_t sub_237A1E09C()
{
  sub_237A1F27C();
  return sub_237A88718();
}

uint64_t sub_237A1E0C4()
{
  sub_237A1F27C();
  return sub_237A88724();
}

void Instrument.PopoverLocation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;

  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CC0);
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CC8);
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v27 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CD0);
  v30 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v39 = (void *)v1[2];
  v40 = v8;
  v10 = v1[3];
  v57 = (void *)v1[4];
  v37 = v1[5];
  v38 = v10;
  v42 = v1[6];
  v36 = v1[7];
  v31 = (void *)v1[8];
  v35 = v1[9];
  v34 = (void *)v1[10];
  v33 = v1[11];
  v32 = v1[12];
  v26 = v1[13];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A1F238();
  sub_237A886B8();
  if (v9)
  {
    LOBYTE(v43) = 0;
    v11 = v9;
    v23 = v9;
    swift_bridgeObjectRetain();
    v12 = v38;
    v13 = v39;
    v14 = v37;
    sub_237870090(v39, v38, v57, v37, v42);
    v15 = v31;
    v16 = v26;
    sub_23787007C(v31, v35, v34, v33, v32);
    sub_237A1F2C0();
    v17 = v27;
    sub_237A88220();
    v43 = v40;
    v44 = v11;
    v45 = v13;
    v46 = v12;
    v47 = v57;
    v48 = v14;
    v49 = v42;
    v50 = v36;
    v51 = v15;
    v18 = v35;
    v19 = v34;
    v52 = v35;
    v53 = v34;
    v25 = (uint64_t)v7;
    v20 = v33;
    LOBYTE(v15) = v32;
    v54 = v33;
    v55 = v32;
    v56 = v16;
    sub_237A1F304();
    v21 = v29;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v21);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v41);
    sub_2378DF9A8(v40, v23, v39, v38, v57, v37, v42, v36, v31, v18, v19, v20, (char)v15);
  }
  else
  {
    LOBYTE(v43) = 1;
    sub_237A1F27C();
    v22 = v41;
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v22);
  }
}

uint64_t Instrument.PopoverLocation.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[80];

  v1 = *(_QWORD *)(v0 + 8);
  sub_237A885D4();
  sub_237A885E0();
  if (v1)
    Instrument.PopoverLocation.LocalConfiguration.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t Instrument.PopoverLocation.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v35 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827CF8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827D00);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827D08);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_237A1F238();
  v13 = v48;
  sub_237A88688();
  if (v13)
    goto LABEL_9;
  v33 = v5;
  v14 = v36;
  v15 = v37;
  v48 = v9;
  v16 = sub_237A881FC();
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v26 = sub_237A87FB0();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v28 = &type metadata for Instrument.PopoverLocation;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v8);
LABEL_9:
    v29 = (uint64_t)v38;
    return __swift_destroy_boxed_opaque_existential_2Tm(v29);
  }
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    LOBYTE(v39) = 1;
    sub_237A1F27C();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v8);
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
  }
  else
  {
    LOBYTE(v39) = 0;
    sub_237A1F2C0();
    sub_237A88154();
    sub_237A1F348();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v8);
    v17 = v39;
    v18 = v40;
    v21 = v41;
    v22 = v42;
    v19 = v43;
    v23 = v44;
    v24 = v45;
    v25 = v46;
    v20 = v47;
  }
  v29 = (uint64_t)v38;
  v31 = v35;
  *v35 = v17;
  v31[1] = v18;
  *((_OWORD *)v31 + 1) = v21;
  *((_OWORD *)v31 + 2) = v22;
  v31[6] = v19;
  *(_OWORD *)(v31 + 7) = v23;
  *(_OWORD *)(v31 + 9) = v24;
  *(_OWORD *)(v31 + 11) = v25;
  v31[13] = v20;
  return __swift_destroy_boxed_opaque_existential_2Tm(v29);
}

uint64_t sub_237A1E984()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
    return Instrument.PopoverLocation.LocalConfiguration.assets.getter();
  else
    return MEMORY[0x24BEE4AF8];
}

void sub_237A1E9F8(_QWORD *a1)
{
  Instrument.PopoverLocation.restoreAssets(from:)(a1);
}

uint64_t sub_237A1EA0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Instrument.PopoverLocation.init(from:)(a1, a2);
}

void sub_237A1EA20(_QWORD *a1)
{
  Instrument.PopoverLocation.encode(to:)(a1);
}

uint64_t _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v7 = *(void **)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v29 = *(_QWORD *)(a1 + 104);
  v30 = *(_QWORD *)(a1 + 88);
  v10 = *(_OWORD *)(a2 + 16);
  v11 = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v13 = *(void **)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_OWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 96);
  v28 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_5;
  v24 = *(_OWORD *)(a1 + 32);
  v25 = *(_OWORD *)(a1 + 16);
  v22 = *(_OWORD *)(a2 + 32);
  v23 = *(_OWORD *)(a2 + 16);
  v16 = sub_237A8840C();
  v11 = v22;
  v10 = v23;
  v3 = v24;
  v2 = v25;
  v17 = v16;
  result = 0;
  if ((v17 & 1) != 0)
  {
LABEL_5:
    v34 = v2;
    v35 = v3;
    v36 = v4;
    v31 = v10;
    v32 = v11;
    v33 = v12;
    v19 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v34, (uint64_t)&v31);
    result = 0;
    if ((v19 & 1) != 0 && v6 == v14)
    {
      v20 = v15 & 0xFE;
      if ((~(_BYTE)v9 & 0xFE) == 0)
      {
        if (v20 == 254)
          return 1;
        goto LABEL_11;
      }
      if (v20 == 254)
      {
        sub_237870090(v5, v8, v7, v30, v9);
        sub_237870090(v5, v8, v7, v30, v9);
        sub_2378702E0(v5, v8, v7, v30, v9);
LABEL_11:
        sub_23787007C(v13, v26, (void *)v27, *((uint64_t *)&v27 + 1), v15);
        sub_2378702CC(v5, v8, v7, v30, v9);
        sub_2378702CC(v13, v26, (void *)v27, *((uint64_t *)&v27 + 1), v15);
        return 0;
      }
      *(_QWORD *)&v34 = v5;
      *((_QWORD *)&v34 + 1) = v8;
      *(_QWORD *)&v35 = v7;
      *((_QWORD *)&v35 + 1) = v30;
      v36 = v9;
      *(_QWORD *)&v31 = v13;
      *((_QWORD *)&v31 + 1) = v26;
      v32 = v27;
      v33 = v15;
      sub_237870090(v5, v8, v7, v30, v9);
      sub_237870090(v5, v8, v7, v30, v9);
      v21 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v34, (uint64_t)&v31);
      sub_2378702E0(v5, v8, v7, v30, v9);
      sub_2378702CC(v5, v8, v7, v30, v9);
      return v21 & (v29 == v28);
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10InstrumentV15PopoverLocationO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  char v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  void *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _QWORD v70[6];
  char v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[6];
  char v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[29];

  v2 = a1[1];
  v3 = (void *)a1[2];
  v4 = a1[3];
  v5 = (void *)a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = (void *)a1[8];
  v10 = a1[9];
  v11 = (void *)a1[10];
  v12 = a1[11];
  v14 = a1[12];
  v13 = a1[13];
  v15 = *a2;
  v16 = a2[1];
  v17 = (void *)a2[2];
  v18 = a2[3];
  v19 = (void *)a2[4];
  v20 = a2[5];
  v21 = a2[6];
  v22 = a2[7];
  v24 = (void *)a2[8];
  v23 = a2[9];
  v25 = (void *)a2[10];
  v26 = a2[11];
  v28 = a2[12];
  v27 = a2[13];
  v29 = *a1;
  v88[0] = v29;
  v88[1] = v2;
  v88[2] = v3;
  v88[3] = v4;
  v88[4] = v5;
  v88[5] = v6;
  v88[6] = v7;
  v88[7] = v8;
  v88[8] = v9;
  v88[9] = v10;
  v88[10] = v11;
  v88[11] = v12;
  v88[12] = v14;
  v88[13] = v13;
  v67 = v15;
  v68 = v17;
  v88[14] = v15;
  v30 = v16;
  v88[15] = v16;
  v88[16] = v17;
  v69 = v18;
  v88[17] = v18;
  v88[18] = v19;
  v88[19] = v20;
  v88[20] = v21;
  v31 = v22;
  v88[21] = v22;
  v88[22] = v24;
  v88[23] = v23;
  v32 = v25;
  v88[24] = v25;
  v88[25] = v26;
  v88[26] = v28;
  v88[27] = v27;
  if (!v2)
  {
    if (!v30)
    {
      sub_237A1F060((uint64_t)v88);
      v40 = 1;
      return v40 & 1;
    }
    goto LABEL_5;
  }
  if (!v30)
  {
LABEL_5:
    v48 = v14;
    v41 = v2;
    v42 = v19;
    v43 = v20;
    v44 = v21;
    sub_2378DE5FC(v29, v41, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v48);
    sub_2378DE5FC(v67, v30, v68, v69, v42, v43, v44, v31, v24, v23, v25, v26, v28);
    sub_237A1F060((uint64_t)v88);
    v40 = 0;
    return v40 & 1;
  }
  v79[0] = v29;
  v79[1] = v2;
  v79[2] = v3;
  v79[3] = v4;
  v79[4] = v5;
  v79[5] = v6;
  v80 = v7;
  v81 = v8;
  v82 = v9;
  v83 = v10;
  v84 = v11;
  v85 = v12;
  v86 = v14;
  v87 = v13;
  v59 = v12;
  v60 = v14;
  v70[0] = v15;
  v70[1] = v30;
  v52 = v28;
  v53 = v22;
  v70[2] = v68;
  v70[3] = v18;
  v70[4] = v19;
  v70[5] = v20;
  v71 = v21;
  v72 = v22;
  v73 = v24;
  v74 = v23;
  v75 = v25;
  v50 = v25;
  v51 = v23;
  v76 = v26;
  v77 = v28;
  v78 = v27;
  v47 = v28;
  v46 = v23;
  v33 = v3;
  v55 = v3;
  v56 = v8;
  v34 = v4;
  v64 = v9;
  v65 = v4;
  v57 = v7;
  v58 = v5;
  v35 = v6;
  v61 = v2;
  v36 = v29;
  v37 = v9;
  v38 = v10;
  v66 = v10;
  v39 = v11;
  v62 = v19;
  v63 = v20;
  v49 = v21;
  sub_2378DE5FC(v15, v30, v68, v18, v19, v20, v21, v31, v24, v46, v32, v26, v47);
  v54 = v39;
  sub_2378DE5FC(v36, v61, v33, v34, v58, v35, v57, v56, v37, v38, v39, v59, v60);
  sub_2378DE5FC(v36, v61, v55, v65, v58, v35, v57, v56, v64, v66, v39, v59, v60);
  sub_2378DE5FC(v67, v30, v68, v69, v62, v63, v49, v53, v24, v51, v50, v26, v52);
  v40 = _s14CarPlayAssetUI10InstrumentV15PopoverLocationO18LocalConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)v79, (uint64_t)v70);
  sub_237A1F060((uint64_t)v88);
  sub_2378DF9A8(v67, v30, v68, v69, v62, v63, v49, v53, v24, v51, v50, v26, v52);
  sub_2378DF9A8(v36, v61, v55, v65, v58, v35, v57, v56, v64, v66, v54, v59, v60);
  return v40 & 1;
}

uint64_t sub_237A1F060(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(void **)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(void **)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 168);
  v11 = *(_OWORD *)(a1 + 192);
  v12 = *(_OWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 208);
  sub_2378DF9A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  sub_2378DF9A8(v13, v2, v3, v4, v5, v6, v7, v8, (void *)v12, *((uint64_t *)&v12 + 1), (void *)v11, *((uint64_t *)&v11 + 1), v9);
  return a1;
}

unint64_t sub_237A1F128()
{
  unint64_t result;

  result = qword_256827C88;
  if (!qword_256827C88)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5324, &_s20PopoverConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827C88);
  }
  return result;
}

unint64_t sub_237A1F16C()
{
  unint64_t result;

  result = qword_256827C90;
  if (!qword_256827C90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation, &type metadata for Instrument.PopoverLocation);
    atomic_store(result, (unint64_t *)&qword_256827C90);
  }
  return result;
}

unint64_t sub_237A1F1B0()
{
  unint64_t result;

  result = qword_256827CA0;
  if (!qword_256827CA0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation, &type metadata for Instrument.PopoverLocation);
    atomic_store(result, (unint64_t *)&qword_256827CA0);
  }
  return result;
}

unint64_t sub_237A1F1F4()
{
  unint64_t result;

  result = qword_256827CB0;
  if (!qword_256827CB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA52D4, &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827CB0);
  }
  return result;
}

unint64_t sub_237A1F238()
{
  unint64_t result;

  result = qword_256827CD8;
  if (!qword_256827CD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5284, &_s15PopoverLocationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827CD8);
  }
  return result;
}

unint64_t sub_237A1F27C()
{
  unint64_t result;

  result = qword_256827CE0;
  if (!qword_256827CE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5234, &_s15PopoverLocationO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827CE0);
  }
  return result;
}

unint64_t sub_237A1F2C0()
{
  unint64_t result;

  result = qword_256827CE8;
  if (!qword_256827CE8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA51E4, &_s15PopoverLocationO23LocalRendererCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827CE8);
  }
  return result;
}

unint64_t sub_237A1F304()
{
  unint64_t result;

  result = qword_256827CF0;
  if (!qword_256827CF0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation.LocalConfiguration, &type metadata for Instrument.PopoverLocation.LocalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827CF0);
  }
  return result;
}

unint64_t sub_237A1F348()
{
  unint64_t result;

  result = qword_256827D10;
  if (!qword_256827D10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation.LocalConfiguration, &type metadata for Instrument.PopoverLocation.LocalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827D10);
  }
  return result;
}

unint64_t sub_237A1F390()
{
  unint64_t result;

  result = qword_256827D18;
  if (!qword_256827D18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverConfiguration, &type metadata for Instrument.PopoverConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827D18);
  }
  return result;
}

unint64_t sub_237A1F3D8()
{
  unint64_t result;

  result = qword_256827D20;
  if (!qword_256827D20)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation.LocalConfiguration, &type metadata for Instrument.PopoverLocation.LocalConfiguration);
    atomic_store(result, (unint64_t *)&qword_256827D20);
  }
  return result;
}

unint64_t sub_237A1F420()
{
  unint64_t result;

  result = qword_256827D28;
  if (!qword_256827D28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.PopoverLocation, &type metadata for Instrument.PopoverLocation);
    atomic_store(result, (unint64_t *)&qword_256827D28);
  }
  return result;
}

void _s20PopoverConfigurationVwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    sub_2378702E0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
      sub_2378702E0(*(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  }
}

uint64_t _s20PopoverConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(void **)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(void **)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_237870090(v5, v6, v7, v8, v9);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      v15 = *(void **)(a2 + 64);
      v16 = *(_QWORD *)(a2 + 72);
      v17 = *(void **)(a2 + 80);
      v18 = *(_QWORD *)(a2 + 88);
      sub_237870090(v15, v16, v17, v18, *(_QWORD *)(a2 + 96));
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v16;
      *(_QWORD *)(a1 + 80) = v17;
      *(_QWORD *)(a1 + 88) = v18;
      *(_BYTE *)(a1 + 96) = v10;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    }
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
  }
  return a1;
}

uint64_t _s20PopoverConfigurationVwca(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char v52;

  v4 = *((_QWORD *)a2 + 1);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (!v4)
    {
      v39 = *a2;
      v40 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v40;
      *(_OWORD *)a1 = v39;
      v41 = a2[3];
      v42 = a2[4];
      v43 = a2[6];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v43;
      *(_OWORD *)(a1 + 48) = v41;
      *(_OWORD *)(a1 + 64) = v42;
      return a1;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    v21 = (void *)*((_QWORD *)a2 + 2);
    v22 = *((_QWORD *)a2 + 3);
    v23 = (void *)*((_QWORD *)a2 + 4);
    v24 = *((_QWORD *)a2 + 5);
    v25 = *((_BYTE *)a2 + 48);
    swift_bridgeObjectRetain();
    sub_237870090(v21, v22, v23, v24, v25);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v24;
    *(_BYTE *)(a1 + 48) = v25;
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    v17 = *((_QWORD *)a2 + 12);
    if ((~*((_DWORD *)a2 + 24) & 0xFELL) == 0)
    {
      v26 = a2[4];
      v27 = a2[6];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 64) = v26;
      return a1;
    }
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_237A1F81C(a1);
    v29 = a2[1];
    v28 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v29;
    *(_OWORD *)(a1 + 32) = v28;
    v30 = a2[6];
    v32 = a2[3];
    v31 = a2[4];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v30;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v31;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a2 + 3);
  v7 = (void *)*((_QWORD *)a2 + 4);
  v8 = *((_QWORD *)a2 + 5);
  v9 = *((_BYTE *)a2 + 48);
  sub_237870090(v5, v6, v7, v8, v9);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(void **)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v14 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_2378702E0(v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  v15 = (_OWORD *)(a1 + 64);
  v16 = a2 + 4;
  v17 = *((_QWORD *)a2 + 12);
  v18 = v17 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v18 == 254)
    {
      sub_237988280(a1 + 64);
      v38 = a2[5];
      v37 = a2[6];
      *v15 = *v16;
      *(_OWORD *)(a1 + 80) = v38;
      *(_OWORD *)(a1 + 96) = v37;
      return a1;
    }
    v44 = (void *)*((_QWORD *)a2 + 8);
    v45 = *((_QWORD *)a2 + 9);
    v46 = (void *)*((_QWORD *)a2 + 10);
    v47 = *((_QWORD *)a2 + 11);
    sub_237870090(v44, v45, v46, v47, *((_QWORD *)a2 + 12));
    v48 = *(void **)(a1 + 64);
    v49 = *(_QWORD *)(a1 + 72);
    v50 = *(void **)(a1 + 80);
    v51 = *(_QWORD *)(a1 + 88);
    *(_QWORD *)(a1 + 64) = v44;
    *(_QWORD *)(a1 + 72) = v45;
    *(_QWORD *)(a1 + 80) = v46;
    *(_QWORD *)(a1 + 88) = v47;
    v52 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v17;
    sub_2378702E0(v48, v49, v50, v51, v52);
LABEL_15:
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    return a1;
  }
  if (v18 != 254)
  {
LABEL_10:
    v33 = (void *)*((_QWORD *)a2 + 8);
    v34 = *((_QWORD *)a2 + 9);
    v35 = (void *)*((_QWORD *)a2 + 10);
    v36 = *((_QWORD *)a2 + 11);
    sub_237870090(v33, v34, v35, v36, v17);
    *(_QWORD *)(a1 + 64) = v33;
    *(_QWORD *)(a1 + 72) = v34;
    *(_QWORD *)(a1 + 80) = v35;
    *(_QWORD *)(a1 + 88) = v36;
    *(_BYTE *)(a1 + 96) = v17;
    goto LABEL_15;
  }
  v19 = *v16;
  v20 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v20;
  *v15 = v19;
  return a1;
}

uint64_t sub_237A1F81C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827D30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s20PopoverConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_8;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_237A1F81C(a1);
LABEL_8:
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_2378702E0(v6, v7, v8, v9, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    v13 = *(_QWORD *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      v19 = *(void **)(a1 + 64);
      v20 = *(_QWORD *)(a1 + 72);
      v21 = *(void **)(a1 + 80);
      v22 = *(_QWORD *)(a1 + 88);
      v23 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v23;
      *(_BYTE *)(a1 + 96) = v13;
      sub_2378702E0(v19, v20, v21, v22, v12);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      return a1;
    }
    sub_237988280(a1 + 64);
  }
  v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t _s20PopoverConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s20PopoverConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.PopoverConfiguration()
{
  return &type metadata for Instrument.PopoverConfiguration;
}

void _s15PopoverLocationOwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    sub_2378702E0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
      sub_2378702E0(*(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  }
}

uint64_t _s15PopoverLocationOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(void **)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(void **)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_237870090(v5, v6, v7, v8, v9);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      v15 = *(void **)(a2 + 64);
      v16 = *(_QWORD *)(a2 + 72);
      v17 = *(void **)(a2 + 80);
      v18 = *(_QWORD *)(a2 + 88);
      sub_237870090(v15, v16, v17, v18, *(_QWORD *)(a2 + 96));
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v16;
      *(_QWORD *)(a1 + 80) = v17;
      *(_QWORD *)(a1 + 88) = v18;
      *(_BYTE *)(a1 + 96) = v10;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    }
  }
  return a1;
}

uint64_t _s15PopoverLocationOwca(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char v47;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v21 = (void *)*((_QWORD *)a2 + 2);
      v22 = *((_QWORD *)a2 + 3);
      v23 = (void *)*((_QWORD *)a2 + 4);
      v24 = *((_QWORD *)a2 + 5);
      v25 = *((_BYTE *)a2 + 48);
      swift_bridgeObjectRetain();
      sub_237870090(v21, v22, v23, v24, v25);
      *(_QWORD *)(a1 + 16) = v21;
      *(_QWORD *)(a1 + 24) = v22;
      *(_QWORD *)(a1 + 32) = v23;
      *(_QWORD *)(a1 + 40) = v24;
      *(_BYTE *)(a1 + 48) = v25;
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      v17 = *((_QWORD *)a2 + 12);
      if ((~*((_DWORD *)a2 + 24) & 0xFELL) == 0)
      {
        v26 = a2[4];
        v27 = a2[6];
        *(_OWORD *)(a1 + 80) = a2[5];
        *(_OWORD *)(a1 + 96) = v27;
        *(_OWORD *)(a1 + 64) = v26;
        return a1;
      }
      goto LABEL_12;
    }
LABEL_11:
    v28 = *a2;
    v29 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v29;
    *(_OWORD *)a1 = v28;
    v30 = a2[3];
    v31 = a2[4];
    v32 = a2[6];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 48) = v30;
    *(_OWORD *)(a1 + 64) = v31;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2378702E0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
      sub_2378702E0(*(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a2 + 3);
  v7 = (void *)*((_QWORD *)a2 + 4);
  v8 = *((_QWORD *)a2 + 5);
  v9 = *((_BYTE *)a2 + 48);
  sub_237870090(v5, v6, v7, v8, v9);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(void **)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v14 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_2378702E0(v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  v15 = (_OWORD *)(a1 + 64);
  v16 = a2 + 4;
  v17 = *((_QWORD *)a2 + 12);
  v18 = v17 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v18 == 254)
    {
      sub_237988280(a1 + 64);
      v38 = a2[5];
      v37 = a2[6];
      *v15 = *v16;
      *(_OWORD *)(a1 + 80) = v38;
      *(_OWORD *)(a1 + 96) = v37;
      return a1;
    }
    v39 = (void *)*((_QWORD *)a2 + 8);
    v40 = *((_QWORD *)a2 + 9);
    v41 = (void *)*((_QWORD *)a2 + 10);
    v42 = *((_QWORD *)a2 + 11);
    sub_237870090(v39, v40, v41, v42, *((_QWORD *)a2 + 12));
    v43 = *(void **)(a1 + 64);
    v44 = *(_QWORD *)(a1 + 72);
    v45 = *(void **)(a1 + 80);
    v46 = *(_QWORD *)(a1 + 88);
    *(_QWORD *)(a1 + 64) = v39;
    *(_QWORD *)(a1 + 72) = v40;
    *(_QWORD *)(a1 + 80) = v41;
    *(_QWORD *)(a1 + 88) = v42;
    v47 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v17;
    sub_2378702E0(v43, v44, v45, v46, v47);
LABEL_16:
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    return a1;
  }
  if (v18 != 254)
  {
LABEL_12:
    v33 = (void *)*((_QWORD *)a2 + 8);
    v34 = *((_QWORD *)a2 + 9);
    v35 = (void *)*((_QWORD *)a2 + 10);
    v36 = *((_QWORD *)a2 + 11);
    sub_237870090(v33, v34, v35, v36, v17);
    *(_QWORD *)(a1 + 64) = v33;
    *(_QWORD *)(a1 + 72) = v34;
    *(_QWORD *)(a1 + 80) = v35;
    *(_QWORD *)(a1 + 88) = v36;
    *(_BYTE *)(a1 + 96) = v17;
    goto LABEL_16;
  }
  v19 = *v16;
  v20 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v20;
  *v15 = v19;
  return a1;
}

uint64_t _s15PopoverLocationOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2378702E0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
    if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
      sub_2378702E0(*(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
    goto LABEL_9;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_2378702E0(v6, v7, v8, v9, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    v13 = *(_QWORD *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      v19 = *(void **)(a1 + 64);
      v20 = *(_QWORD *)(a1 + 72);
      v21 = *(void **)(a1 + 80);
      v22 = *(_QWORD *)(a1 + 88);
      v23 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v23;
      *(_BYTE *)(a1 + 96) = v13;
      sub_2378702E0(v19, v20, v21, v22, v12);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      return a1;
    }
    sub_237988280(a1 + 64);
  }
  v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t _s15PopoverLocationOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s15PopoverLocationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

double sub_237A2000C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 104) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.PopoverLocation()
{
  return &type metadata for Instrument.PopoverLocation;
}

void _s15PopoverLocationO18LocalConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2378702E0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_237870090(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 96);
  if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
  {
    v12 = *(void **)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 72);
    v14 = *(void **)(a2 + 80);
    v15 = *(_QWORD *)(a2 + 88);
    sub_237870090(v12, v13, v14, v15, *(_QWORD *)(a2 + 96));
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v15;
    *(_BYTE *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  return a1;
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_237870090(v4, v5, v6, v7, v8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v13 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v14 = (_OWORD *)(a1 + 64);
  v15 = (_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = v16 & 0xFE;
  if ((~*(_DWORD *)(a1 + 96) & 0xFELL) != 0)
  {
    if (v17 == 254)
    {
      sub_237988280(a1 + 64);
      v21 = *(_OWORD *)(a2 + 80);
      v20 = *(_OWORD *)(a2 + 96);
      *v14 = *v15;
      *(_OWORD *)(a1 + 80) = v21;
      *(_OWORD *)(a1 + 96) = v20;
      return a1;
    }
    v26 = *(void **)(a2 + 64);
    v27 = *(_QWORD *)(a2 + 72);
    v28 = *(void **)(a2 + 80);
    v29 = *(_QWORD *)(a2 + 88);
    sub_237870090(v26, v27, v28, v29, *(_QWORD *)(a2 + 96));
    v30 = *(void **)(a1 + 64);
    v31 = *(_QWORD *)(a1 + 72);
    v32 = *(void **)(a1 + 80);
    v33 = *(_QWORD *)(a1 + 88);
    *(_QWORD *)(a1 + 64) = v26;
    *(_QWORD *)(a1 + 72) = v27;
    *(_QWORD *)(a1 + 80) = v28;
    *(_QWORD *)(a1 + 88) = v29;
    v34 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v16;
    sub_2378702E0(v30, v31, v32, v33, v34);
LABEL_8:
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    return a1;
  }
  if (v17 != 254)
  {
    v22 = *(void **)(a2 + 64);
    v23 = *(_QWORD *)(a2 + 72);
    v24 = *(void **)(a2 + 80);
    v25 = *(_QWORD *)(a2 + 88);
    sub_237870090(v22, v23, v24, v25, *(_QWORD *)(a2 + 96));
    *(_QWORD *)(a1 + 64) = v22;
    *(_QWORD *)(a1 + 72) = v23;
    *(_QWORD *)(a1 + 80) = v24;
    *(_QWORD *)(a1 + 88) = v25;
    *(_BYTE *)(a1 + 96) = v16;
    goto LABEL_8;
  }
  v18 = *v15;
  v19 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v19;
  *v14 = v18;
  return a1;
}

uint64_t _s15PopoverLocationO18LocalConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_2378702E0(v6, v7, v8, v9, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_DWORD *)(a1 + 96);
  if ((~(_BYTE)v12 & 0xFE) != 0)
  {
    v13 = *(_QWORD *)(a2 + 96);
    if ((~*(_DWORD *)(a2 + 96) & 0xFELL) != 0)
    {
      v15 = *(void **)(a1 + 64);
      v16 = *(_QWORD *)(a1 + 72);
      v17 = *(void **)(a1 + 80);
      v18 = *(_QWORD *)(a1 + 88);
      v19 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v19;
      *(_BYTE *)(a1 + 96) = v13;
      sub_2378702E0(v15, v16, v17, v18, v12);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      return a1;
    }
    sub_237988280(a1 + 64);
  }
  v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.PopoverLocation.LocalConfiguration()
{
  return &type metadata for Instrument.PopoverLocation.LocalConfiguration;
}

uint64_t _s15PopoverLocationO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A20430 + 4 * byte_237AA4BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A20464 + 4 * byte_237AA4BA0[v4]))();
}

uint64_t sub_237A20464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2046C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A20474);
  return result;
}

uint64_t sub_237A20480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A20488);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A2048C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A20494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15PopoverLocationO10CodingKeysOMa()
{
  return &_s15PopoverLocationO10CodingKeysON;
}

ValueMetadata *_s15PopoverLocationO23LocalRendererCodingKeysOMa()
{
  return &_s15PopoverLocationO23LocalRendererCodingKeysON;
}

ValueMetadata *_s15PopoverLocationO16RemoteCodingKeysOMa()
{
  return &_s15PopoverLocationO16RemoteCodingKeysON;
}

uint64_t _s15PopoverLocationO18LocalConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237A20520 + 4 * byte_237AA4BAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237A20554 + 4 * byte_237AA4BAA[v4]))();
}

uint64_t sub_237A20554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2055C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A20564);
  return result;
}

uint64_t sub_237A20570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A20578);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237A2057C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A20584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15PopoverLocationO18LocalConfigurationV10CodingKeysOMa()
{
  return &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON;
}

uint64_t _s15PopoverLocationO23LocalRendererCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A205E0 + 4 * byte_237AA4BB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A20600 + 4 * byte_237AA4BB9[v4]))();
}

_BYTE *sub_237A205E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A20600(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A20608(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A20610(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A20618(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A20620(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20PopoverConfigurationV10CodingKeysOMa()
{
  return &_s20PopoverConfigurationV10CodingKeysON;
}

unint64_t sub_237A20640()
{
  unint64_t result;

  result = qword_256827D38;
  if (!qword_256827D38)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4F44, &_s20PopoverConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D38);
  }
  return result;
}

unint64_t sub_237A20688()
{
  unint64_t result;

  result = qword_256827D40;
  if (!qword_256827D40)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4FFC, &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D40);
  }
  return result;
}

unint64_t sub_237A206D0()
{
  unint64_t result;

  result = qword_256827D48;
  if (!qword_256827D48)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5104, &_s15PopoverLocationO23LocalRendererCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D48);
  }
  return result;
}

unint64_t sub_237A20718()
{
  unint64_t result;

  result = qword_256827D50;
  if (!qword_256827D50)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA51BC, &_s15PopoverLocationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D50);
  }
  return result;
}

unint64_t sub_237A20760()
{
  unint64_t result;

  result = qword_256827D58;
  if (!qword_256827D58)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5074, &_s15PopoverLocationO23LocalRendererCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D58);
  }
  return result;
}

unint64_t sub_237A207A8()
{
  unint64_t result;

  result = qword_256827D60;
  if (!qword_256827D60)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA509C, &_s15PopoverLocationO23LocalRendererCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D60);
  }
  return result;
}

unint64_t sub_237A207F0()
{
  unint64_t result;

  result = qword_256827D68;
  if (!qword_256827D68)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5024, &_s15PopoverLocationO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D68);
  }
  return result;
}

unint64_t sub_237A20838()
{
  unint64_t result;

  result = qword_256827D70;
  if (!qword_256827D70)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA504C, &_s15PopoverLocationO16RemoteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D70);
  }
  return result;
}

unint64_t sub_237A20880()
{
  unint64_t result;

  result = qword_256827D78;
  if (!qword_256827D78)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA512C, &_s15PopoverLocationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D78);
  }
  return result;
}

unint64_t sub_237A208C8()
{
  unint64_t result;

  result = qword_256827D80;
  if (!qword_256827D80)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5154, &_s15PopoverLocationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D80);
  }
  return result;
}

unint64_t sub_237A20910()
{
  unint64_t result;

  result = qword_256827D88;
  if (!qword_256827D88)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4F6C, &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D88);
  }
  return result;
}

unint64_t sub_237A20958()
{
  unint64_t result;

  result = qword_256827D90;
  if (!qword_256827D90)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4F94, &_s15PopoverLocationO18LocalConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D90);
  }
  return result;
}

unint64_t sub_237A209A0()
{
  unint64_t result;

  result = qword_256827D98;
  if (!qword_256827D98)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4EB4, &_s20PopoverConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827D98);
  }
  return result;
}

unint64_t sub_237A209E8()
{
  unint64_t result;

  result = qword_256827DA0;
  if (!qword_256827DA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA4EDC, &_s20PopoverConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256827DA0);
  }
  return result;
}

uint64_t sub_237A20A2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E6D6165727473 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74754265736F6C63 && a2 == 0xEB000000006E6F74 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB0C80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_237A20BA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65526C61636F6CLL && a2 == 0xED00007265726564;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A20CAC()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t static TaggedValue<>.< infix(_:_:)()
{
  return sub_237A8777C() & 1;
}

uint64_t TaggedValue<>.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
}

uint64_t TaggedValue.subscript.getter()
{
  return swift_getAtKeyPath();
}

uint64_t TaggedValue.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t TaggedValue.rawValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t sub_237A20D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TaggedValue.init(rawValue:)(a1, *(_QWORD *)(a2 + 24), a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 0, 1, a2);
}

uint64_t Optional.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t sub_237A20DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Optional.init()(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_237A20DD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t sub_237A20DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A87620();
  *a1 = result;
  return result;
}

uint64_t sub_237A20E28(uint64_t a1, uint64_t a2)
{
  return TaggedValue<>.init()(a1, *(_QWORD *)(a1 + 24), *(_QWORD *)(a2 - 8));
}

uint64_t TaggedValue.description.getter(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_237A87854();
}

uint64_t TaggedValue.playgroundDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;

  v3 = *(_QWORD *)(a1 + 24);
  a2[3] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v2, v3);
}

uint64_t TaggedValue<>.init(BOOLeanLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE39C0], a4);
}

uint64_t sub_237A20EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(BOOLeanLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(extendedGraphemeClusterLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE3E28], a4);
}

uint64_t sub_237A20F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(extendedGraphemeClusterLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(floatLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE38A0], a4);
}

uint64_t sub_237A20F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(floatLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(integerLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE39E0], a4);
}

uint64_t sub_237A20F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(integerLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(stringLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE3980], a4);
}

uint64_t sub_237A20F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(stringLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(stringInterpolation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE3D70], a4);
}

uint64_t sub_237A20FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(stringInterpolation:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t TaggedValue<>.init(unicodeScalarLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_237A20FEC(a1, a2, a3, MEMORY[0x24BEE3DA8], a4);
}

uint64_t sub_237A20FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(char *, uint64_t, uint64_t)@<X6>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v20 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, AssociatedTypeWitness, v16);
  a4(v13, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v18, a2);
}

uint64_t sub_237A210F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TaggedValue<>.init(unicodeScalarLiteral:)(a1, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_237A21100()
{
  return static TaggedValue<>.< infix(_:_:)();
}

uint64_t TaggedValue<>.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v33 = a6;
  v34 = a5;
  v35 = a2;
  v36 = a7;
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_237A87E0C();
  v13 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v31 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, a4, v21);
  sub_237A8813C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v32);
    v25 = type metadata accessor for TaggedValue(0, v35, a3, v24);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v36, 1, 1, v25);
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v27(v23, v15, a3);
    v27(v19, v23, a3);
    v28 = v36;
    v27(v36, v19, a3);
    v30 = type metadata accessor for TaggedValue(0, v35, a3, v29);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 0, 1, v30);
  }
}

uint64_t type metadata accessor for TaggedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaggedValue);
}

uint64_t TaggedValue<>.codingKey.getter()
{
  return sub_237A88130();
}

uint64_t sub_237A21320()
{
  return TaggedValue<>.codingKey.getter();
}

uint64_t sub_237A21328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return TaggedValue<>.init<A>(codingKey:)(a1, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a2, *(_QWORD *)(a5 - 8), a3, a6);
}

uint64_t sub_237A21340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for TaggedValue<A, B>, a3);
  return sub_237A884C0();
}

uint64_t TaggedValue<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD v23[4];
  char *v24;

  v20 = a3;
  v22 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v24 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - v8;
  v13 = type metadata accessor for TaggedValue(0, v10, v11, v12);
  v18 = *(_QWORD *)(v13 - 8);
  v19 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v21 = (char *)&v18 - v14;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A8867C();
  if (v3)
  {
    sub_23787076C((uint64_t)a1, (uint64_t)v23);
    v15 = v24;
    sub_237A87BC0();

    v16 = v21;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v15, a2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_2Tm(v23, v23[3]);
    sub_237A88448();
    v16 = v21;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v9, a2);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v23);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v20, v16, v19);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

void TaggedValue<>.encode(to:)(_QWORD *a1)
{
  void *v1;
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886AC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_237A88484();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
  if (v1)
  {
    sub_237A876BC();

  }
}

uint64_t sub_237A21678@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TaggedValue<>.init(from:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void sub_237A21698(_QWORD *a1)
{
  TaggedValue<>.encode(to:)(a1);
}

uint64_t sub_237A216B0(uint64_t a1)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for TaggedValue<A, B>, a1);
  return sub_237A87A10();
}

uint64_t sub_237A216FC()
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for TaggedValue<A, B>);
  return sub_237A87A28();
}

uint64_t sub_237A21754()
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for TaggedValue<A, B>);
  return sub_237A87A1C();
}

uint64_t TaggedValue<>.id.getter()
{
  return sub_237A87F68();
}

uint64_t sub_237A217B4()
{
  return TaggedValue<>.id.getter();
}

uint64_t UUID.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827DA8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A86564();
  swift_bridgeObjectRelease();
  v5 = sub_237A86594();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

uint64_t sub_237A21880()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A218A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, a1, &v4);
}

uint64_t sub_237A218DC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21900()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21924()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, a1, &v4);
}

uint64_t sub_237A21980()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A219A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, a1, &v4);
}

uint64_t sub_237A219DC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21A00()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, a1, &v4);
}

uint64_t sub_237A21A5C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_237A21A80()
{
  return sub_2378D057C(&qword_256827DB0, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_237A21AA4()
{
  return MEMORY[0x24BEE0D80];
}

uint64_t sub_237A21AB4()
{
  return sub_2378D057C(qword_256827DB8, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_237A21AD8()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t sub_237A21AE4()
{
  return MEMORY[0x24BEE0D88];
}

uint64_t sub_237A21AF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827DA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A86564();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
  __break(1u);
  return result;
}

uint64_t sub_237A21BA8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_237A21C14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_237A21C84(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_237A21C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 16))();
  return a1;
}

uint64_t sub_237A21CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 24))();
  return a1;
}

uint64_t sub_237A21CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 32))();
  return a1;
}

uint64_t sub_237A21D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 40))();
  return a1;
}

uint64_t sub_237A21D54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_237A21E04 + 4 * byte_237AA5378[(v7 - 1)]))();
}

void sub_237A21E54(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t dispatch thunk of Initializable.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

double static PlatterShadowConfiguration.clusterDefault.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_237A226C4(a1, (__n128)xmmword_237AA0830).n128_u64[0];
  return result;
}

uint64_t sub_237A22028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  void *v31;
  _QWORD *v32;
  uint64_t v34;

  v3 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827EE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827EF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = (char *)v5 + *(int *)(v3 + 20);
  v14 = *MEMORY[0x24BDEEB68];
  v15 = sub_237A86C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *v5 = v12;
  v5[1] = v12;
  v16 = sub_237A222D4();
  sub_2378BBF60((uint64_t)v5, (uint64_t)v8);
  *(_QWORD *)&v8[*(int *)(v6 + 36)] = v16;
  sub_2378BBFA4((uint64_t)v5);
  v17 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PlatterView() + 32));
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  sub_2378BBFE0((uint64_t)v8, (uint64_t)v11, &qword_256827EE8);
  v21 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v21 = v18;
  *((_QWORD *)v21 + 1) = v19;
  *((_QWORD *)v21 + 2) = v20;
  swift_retain();
  sub_2378BC024((uint64_t)v8, &qword_256827EE8);
  v22 = sub_237A874AC();
  v24 = v23;
  v25 = *(_QWORD *)v1;
  v26 = *(_QWORD *)(v1 + 8);
  LOBYTE(v14) = *(_BYTE *)(v1 + 16);
  sub_237A228C0(*(_QWORD *)v1, v26, v14);
  sub_23796E214(v25, v26, v14);
  v28 = v27;
  sub_237971558(v25, v26, v14);
  if (v28)
  {
    v29 = *(double *)(v1 + 40);
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5650]), sel_init);
    v31 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setIdentifier_, v31);

    objc_msgSend(v30, sel_setCornerRadius_, v29);
  }
  else
  {
    v30 = 0;
  }
  sub_2378BBFE0((uint64_t)v11, a1, &qword_256827EF0);
  v32 = (_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256827EF8) + 36));
  *v32 = v30;
  v32[1] = v22;
  v32[2] = v24;
  return sub_2378BC024((uint64_t)v11, &qword_256827EF0);
}

uint64_t sub_237A222D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = sub_237A8747C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A871B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = *(_BYTE *)(v0 + 32);
  sub_237971568(v9, v10);
  v11 = sub_23796D5A0(v9, v10);
  sub_237971574(v9, v10);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF3C28], v5);
    v14[1] = MEMORY[0x23B81DEC0](v8, 0.17254902, 0.17254902, 0.180392157, 1.0);
  }
  else
  {
    v12 = type metadata accessor for PlatterView();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v12 + 28), v1);
  }
  return sub_237A86888();
}

uint64_t EnvironmentValues.opaquePlatterOverride.getter()
{
  unsigned __int8 v1;

  sub_237A2266C();
  sub_237A86B88();
  return v1;
}

uint64_t sub_237A22480@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_237A2266C();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_237A224CC()
{
  sub_237A2266C();
  return sub_237A86B94();
}

uint64_t EnvironmentValues.opaquePlatterOverride.setter()
{
  sub_237A2266C();
  return sub_237A86B94();
}

uint64_t (*EnvironmentValues.opaquePlatterOverride.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_237A2266C();
  sub_237A86B88();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_237A225AC;
}

uint64_t sub_237A225AC(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_237A86B94();
}

uint64_t PlatterShadowConfiguration.color.getter()
{
  return swift_retain();
}

uint64_t PlatterShadowConfiguration.color.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*PlatterShadowConfiguration.color.modify())()
{
  return nullsub_1;
}

double PlatterShadowConfiguration.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void PlatterShadowConfiguration.radius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*PlatterShadowConfiguration.radius.modify())()
{
  return nullsub_1;
}

double PlatterShadowConfiguration.y.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void PlatterShadowConfiguration.y.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*PlatterShadowConfiguration.y.modify())()
{
  return nullsub_1;
}

uint64_t PlatterShadowConfiguration.init(color:radius:y:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  return result;
}

unint64_t sub_237A2266C()
{
  unint64_t result;

  result = qword_256827E40;
  if (!qword_256827E40)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5AFC, &type metadata for OpaquePlatterOverrideKey);
    atomic_store(result, (unint64_t *)&qword_256827E40);
  }
  return result;
}

double static PlatterShadowConfiguration.centerConsoleDefault.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_237A226C4(a1, (__n128)xmmword_237AA59E0).n128_u64[0];
  return result;
}

__n128 sub_237A226C4@<Q0>(uint64_t a1@<X8>, __n128 a2@<Q1>)
{
  uint64_t v3;
  __n128 result;

  sub_237A871F4();
  v3 = sub_237A8723C();
  swift_release();
  *(_QWORD *)a1 = v3;
  result = a2;
  *(__n128 *)(a1 + 8) = a2;
  return result;
}

uint64_t sub_237A22728@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_237A2266C();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_237A22774()
{
  sub_237A2266C();
  return sub_237A86B94();
}

ValueMetadata *type metadata accessor for PlatterShadowConfiguration()
{
  return &type metadata for PlatterShadowConfiguration;
}

unint64_t sub_237A227D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_237A228C0(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 24);
    LOBYTE(v8) = *(_BYTE *)(a2 + 32);
    sub_237971568(v10, v8);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v11 = *(int *)(a3 + 28);
    v12 = a1 + v11;
    v13 = a2 + v11;
    v14 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = *(int *)(a3 + 32);
    v16 = a1 + v15;
    v17 = a2 + v15;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_237A228C0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_237A228D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_237971558(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_237971574(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t sub_237A22940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_237A228C0(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_237971568(v9, v7);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_237A22A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_237A228C0(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_237971558(v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_237971568(v12, v7);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v7;
  sub_237971574(v13, v14);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = *(int *)(a3 + 32);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_retain();
  swift_release();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  return a1;
}

uint64_t sub_237A22AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  return a1;
}

uint64_t sub_237A22BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_237971558(v7, v8, v9);
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v10;
  sub_237971574(v11, v12);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(a3 + 32);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)v19;
  swift_release();
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
  return a1;
}

uint64_t sub_237A22C70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A22C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_237A8747C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_237A22D08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A22D14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237A8747C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

uint64_t type metadata accessor for PlatterView()
{
  uint64_t result;

  result = qword_256827EA0;
  if (!qword_256827EA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237A22DCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A8747C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaquePlatterOverrideKey()
{
  return &type metadata for OpaquePlatterOverrideKey;
}

uint64_t sub_237A22E70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A22E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  _QWORD v21[2];

  v21[1] = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F58);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  if (*v2)
  {
    v17 = v2[1];
    v16 = v2[2];
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v14, a1, v4, v12);
    v18 = &v14[*(int *)(v11 + 36)];
    *(_QWORD *)v18 = v15;
    *((_QWORD *)v18 + 1) = v17;
    *((_QWORD *)v18 + 2) = 0;
    *((_QWORD *)v18 + 3) = v16;
    sub_2378BBFE0((uint64_t)v14, (uint64_t)v10, &qword_256827F58);
    swift_storeEnumTagMultiPayload();
    sub_237A233B8();
    sub_2378B70D4(&qword_256827F68, &qword_256827F48, MEMORY[0x24BDEFB78]);
    swift_retain();
    sub_237A86D44();
    return sub_2378BC024((uint64_t)v14, &qword_256827F58);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v20(v7, a1, v4, v12);
    ((void (*)(char *, char *, uint64_t))v20)(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_237A233B8();
    sub_2378B70D4(&qword_256827F68, &qword_256827F48, MEMORY[0x24BDEFB78]);
    sub_237A86D44();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ConditionalShadowModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for ConditionalShadowModifier()
{
  return swift_release();
}

_QWORD *_s14CarPlayAssetUI26PlatterShadowConfigurationVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ConditionalShadowModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ConditionalShadowModifier()
{
  return &type metadata for ConditionalShadowModifier;
}

unint64_t sub_237A231A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256827F00;
  if (!qword_256827F00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827EF8);
    v2[0] = sub_237A2322C();
    v2[1] = sub_2378B70D4(&qword_256827F38, &qword_256827F40, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256827F00);
  }
  return result;
}

unint64_t sub_237A2322C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256827F08;
  if (!qword_256827F08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827EF0);
    v2[0] = sub_237A23298();
    v2[1] = sub_237A23364();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256827F08);
  }
  return result;
}

unint64_t sub_237A23298()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256827F10;
  if (!qword_256827F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827EE8);
    v2[0] = sub_237A2331C();
    v2[1] = sub_2378B70D4(&qword_256827F20, &qword_256827F28, MEMORY[0x24BDF0710]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256827F10);
  }
  return result;
}

unint64_t sub_237A2331C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256827F18;
  if (!qword_256827F18)
  {
    v1 = sub_237A869F0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED988], v1);
    atomic_store(result, (unint64_t *)&qword_256827F18);
  }
  return result;
}

unint64_t sub_237A23364()
{
  unint64_t result;

  result = qword_256827F30;
  if (!qword_256827F30)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5B5C, &type metadata for ConditionalShadowModifier);
    atomic_store(result, (unint64_t *)&qword_256827F30);
  }
  return result;
}

uint64_t sub_237A233A8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237A233B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256827F60;
  if (!qword_256827F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827F58);
    v2[0] = sub_2378B70D4(&qword_256827F68, &qword_256827F48, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256827F60);
  }
  return result;
}

unint64_t sub_237A23440()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256827F70;
  if (!qword_256827F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256827F78);
    v2[0] = sub_237A233B8();
    v2[1] = sub_2378B70D4(&qword_256827F68, &qword_256827F48, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256827F70);
  }
  return result;
}

double SystemUILayout.ContentArea.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void SystemUILayout.ContentArea.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*SystemUILayout.ContentArea.frame.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::SystemUILayout::ContentArea __swiftcall SystemUILayout.ContentArea.init(frame:)(CarPlayAssetUI::SystemUILayout::ContentArea frame)
{
  CarPlayAssetUI::SystemUILayout::ContentArea *v1;

  *v1 = frame;
  return frame;
}

uint64_t sub_237A23504()
{
  return 0x656D617266;
}

uint64_t sub_237A23518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D617266 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237A235A4()
{
  sub_237A2371C();
  return sub_237A88718();
}

uint64_t sub_237A235CC()
{
  sub_237A2371C();
  return sub_237A88724();
}

uint64_t SystemUILayout.ContentArea.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(_OWORD *)v1;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2371C();
  sub_237A886B8();
  v10[1] = v10[0];
  v11 = v7;
  v12 = v8;
  type metadata accessor for CGRect(0);
  sub_237A23898(&qword_256820580, MEMORY[0x24BDBD828]);
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_237A2371C()
{
  unint64_t result;

  result = qword_256827F88;
  if (!qword_256827F88)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5E64, &type metadata for SystemUILayout.ContentArea.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827F88);
  }
  return result;
}

uint64_t SystemUILayout.ContentArea.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2371C();
  sub_237A88688();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    sub_237A23898(&qword_2568205C8, MEMORY[0x24BDBD838]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A23898(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x23B81FA98](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237A238D8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return SystemUILayout.ContentArea.init(from:)(a1, a2);
}

uint64_t sub_237A238EC(_QWORD *a1)
{
  return SystemUILayout.ContentArea.encode(to:)(a1);
}

__n128 SystemUILayout.primaryContentArea.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 SystemUILayout.primaryContentArea.setter(uint64_t a1)
{
  _OWORD *v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*SystemUILayout.primaryContentArea.modify())()
{
  return nullsub_1;
}

__n128 SystemUILayout.secondaryContentArea.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 64);
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

__n128 SystemUILayout.secondaryContentArea.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  *(_BYTE *)(v1 + 64) = v2;
  return result;
}

uint64_t (*SystemUILayout.secondaryContentArea.modify())()
{
  return nullsub_1;
}

uint64_t SystemUILayout.hasDualStatusBar.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t SystemUILayout.hasDualStatusBar.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*SystemUILayout.hasDualStatusBar.modify())()
{
  return nullsub_1;
}

uint64_t SystemUILayout.hasPhysicalControlBars.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t SystemUILayout.hasPhysicalControlBars.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 66) = result;
  return result;
}

uint64_t (*SystemUILayout.hasPhysicalControlBars.modify())()
{
  return nullsub_1;
}

void __swiftcall SystemUILayout.init(primaryContentArea:secondaryContentArea:hasDualStatusBar:hasPhysicalControlBars:)(CarPlayAssetUI::SystemUILayout *__return_ptr retstr, CarPlayAssetUI::SystemUILayout::ContentArea primaryContentArea, CarPlayAssetUI::SystemUILayout::ContentArea_optional *secondaryContentArea, Swift::Bool hasDualStatusBar, Swift::Bool hasPhysicalControlBars)
{
  Swift::Bool v5;
  char v6;
  CGSize size;
  CGSize v8;

  v6 = *(_BYTE *)(hasDualStatusBar + 32);
  size = secondaryContentArea->value.frame.size;
  retstr->primaryContentArea.frame.origin = secondaryContentArea->value.frame.origin;
  retstr->primaryContentArea.frame.size = size;
  v8 = *(CGSize *)(hasDualStatusBar + 16);
  retstr->secondaryContentArea.value.frame.origin = *(CGPoint *)hasDualStatusBar;
  retstr->secondaryContentArea.value.frame.size = v8;
  retstr->secondaryContentArea.is_nil = v6;
  retstr->hasDualStatusBar = hasPhysicalControlBars;
  retstr->hasPhysicalControlBars = v5;
}

uint64_t sub_237A239C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A23A00 + 4 * byte_237AA5BAC[a1]))(0xD000000000000012, 0x8000000237AB22B0);
}

uint64_t sub_237A23A00()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_237A23A44()
{
  unsigned __int8 *v0;

  return sub_237A239C4(*v0);
}

uint64_t sub_237A23A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A243EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A23A70()
{
  sub_237A23CB8();
  return sub_237A88718();
}

uint64_t sub_237A23A98()
{
  sub_237A23CB8();
  return sub_237A88724();
}

uint64_t SystemUILayout.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827F98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v16 = *((_QWORD *)v1 + 5);
  v17 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v14 = *((_QWORD *)v1 + 7);
  v15 = v11;
  v23 = *((unsigned __int8 *)v1 + 64);
  v13[3] = *((unsigned __int8 *)v1 + 65);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A23CB8();
  sub_237A886B8();
  v19 = v18;
  v20 = v8;
  v21 = v9;
  v24 = 0;
  sub_237A23CFC();
  sub_237A882B0();
  if (!v2)
  {
    *(_QWORD *)&v19 = v17;
    *((_QWORD *)&v19 + 1) = v16;
    v20 = v15;
    v21 = v14;
    v22 = v23;
    v24 = 1;
    sub_237A88268();
    LOBYTE(v19) = 2;
    sub_237A88280();
    LOBYTE(v19) = 3;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_237A23CB8()
{
  unint64_t result;

  result = qword_256827FA0;
  if (!qword_256827FA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5E14, &type metadata for SystemUILayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FA0);
  }
  return result;
}

unint64_t sub_237A23CFC()
{
  unint64_t result;

  result = qword_256827FA8;
  if (!qword_256827FA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SystemUILayout.ContentArea, &type metadata for SystemUILayout.ContentArea);
    atomic_store(result, (unint64_t *)&qword_256827FA8);
  }
  return result;
}

uint64_t SystemUILayout.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256827FB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A23CB8();
  sub_237A88688();
  if (!v2)
  {
    v30 = 0;
    sub_237A23F74();
    sub_237A881F0();
    v9 = v24;
    v10 = v25;
    v11 = v26;
    v12 = v27;
    v30 = 1;
    sub_237A881A8();
    v22 = v24;
    v23 = v25;
    v13 = v27;
    v21 = v26;
    v14 = v28;
    LOBYTE(v24) = 2;
    HIDWORD(v19) = sub_237A881C0();
    v29 = v14;
    v20 = v13;
    LOBYTE(v24) = 3;
    v16 = sub_237A881C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    v17 = v23;
    *(_QWORD *)(a2 + 32) = v22;
    *(_QWORD *)(a2 + 40) = v17;
    v18 = v20;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v18;
    *(_BYTE *)(a2 + 64) = v29;
    *(_BYTE *)(a2 + 65) = BYTE4(v19) & 1;
    *(_BYTE *)(a2 + 66) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

unint64_t sub_237A23F74()
{
  unint64_t result;

  result = qword_256827FB8;
  if (!qword_256827FB8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SystemUILayout.ContentArea, &type metadata for SystemUILayout.ContentArea);
    atomic_store(result, (unint64_t *)&qword_256827FB8);
  }
  return result;
}

uint64_t sub_237A23FB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SystemUILayout.init(from:)(a1, a2);
}

uint64_t sub_237A23FCC(_QWORD *a1)
{
  return SystemUILayout.encode(to:)(a1);
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemUILayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 67))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 65);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemUILayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 67) = 0;
    if (a2)
      *(_BYTE *)(result + 65) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout()
{
  return &type metadata for SystemUILayout;
}

ValueMetadata *type metadata accessor for SystemUILayout.ContentArea()
{
  return &type metadata for SystemUILayout.ContentArea;
}

uint64_t storeEnumTagSinglePayload for SystemUILayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A24120 + 4 * byte_237AA5BB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A24154 + 4 * byte_237AA5BB0[v4]))();
}

uint64_t sub_237A24154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2415C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A24164);
  return result;
}

uint64_t sub_237A24170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A24178);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A2417C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A24184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout.CodingKeys()
{
  return &type metadata for SystemUILayout.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SystemUILayout.ContentArea.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A241E0 + 4 * byte_237AA5BBA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A24200 + 4 * byte_237AA5BBF[v4]))();
}

_BYTE *sub_237A241E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A24200(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A24208(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A24210(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A24218(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A24220(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SystemUILayout.ContentArea.CodingKeys()
{
  return &type metadata for SystemUILayout.ContentArea.CodingKeys;
}

unint64_t sub_237A24240()
{
  unint64_t result;

  result = qword_256827FC0;
  if (!qword_256827FC0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5D34, &type metadata for SystemUILayout.ContentArea.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FC0);
  }
  return result;
}

unint64_t sub_237A24288()
{
  unint64_t result;

  result = qword_256827FC8;
  if (!qword_256827FC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5DEC, &type metadata for SystemUILayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FC8);
  }
  return result;
}

unint64_t sub_237A242D0()
{
  unint64_t result;

  result = qword_256827FD0;
  if (!qword_256827FD0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5D5C, &type metadata for SystemUILayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FD0);
  }
  return result;
}

unint64_t sub_237A24318()
{
  unint64_t result;

  result = qword_256827FD8;
  if (!qword_256827FD8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5D84, &type metadata for SystemUILayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FD8);
  }
  return result;
}

unint64_t sub_237A24360()
{
  unint64_t result;

  result = qword_256827FE0;
  if (!qword_256827FE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5CA4, &type metadata for SystemUILayout.ContentArea.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256827FE0);
  }
  return result;
}

unint64_t sub_237A243A8()
{
  unint64_t result;

  result = qword_256827FE8[0];
  if (!qword_256827FE8[0])
  {
    result = MEMORY[0x23B81FA98](&unk_237AA5CCC, &type metadata for SystemUILayout.ContentArea.CodingKeys);
    atomic_store(result, qword_256827FE8);
  }
  return result;
}

uint64_t sub_237A243EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB22B0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000237AB22D0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB22F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB2310)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

double CGSize.minSide.getter(double a1, double a2)
{
  double v2;
  double result;

  v2 = fabs(a2);
  result = fabs(a1);
  if (result >= v2)
    return v2;
  return result;
}

__C::CGRect __swiftcall CGRect.rounded()()
{
  CGFloat v0;
  double v1;
  double v2;
  double v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  __C::CGRect result;

  v4 = v3;
  v5 = v2;
  v6 = v1;
  v7 = v0;
  v8 = round(CGRectGetMinX(*(CGRect *)&v0));
  v15.origin.x = v7;
  v15.origin.y = v6;
  v15.size.width = v5;
  v15.size.height = v4;
  v9 = round(CGRectGetMinY(v15));
  v16.origin.x = v7;
  v16.origin.y = v6;
  v16.size.width = v5;
  v16.size.height = v4;
  v10 = round(CGRectGetWidth(v16));
  v17.origin.x = v7;
  v17.origin.y = v6;
  v17.size.width = v5;
  v17.size.height = v4;
  v11 = round(CGRectGetHeight(v17));
  v12 = v8;
  v13 = v9;
  v14 = v10;
  result.size.height = v11;
  result.size.width = v14;
  result.origin.y = v13;
  result.origin.x = v12;
  return result;
}

double CGRect.inset(from:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MinY;
  double v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v20.origin.x = a5;
  v20.origin.y = a6;
  v20.size.width = a7;
  v20.size.height = a8;
  MinY = CGRectGetMinY(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  v19 = MinY - CGRectGetMinY(v21);
  v22.origin.x = a5;
  v22.origin.y = a6;
  v22.size.width = a7;
  v22.size.height = a8;
  CGRectGetMinX(v22);
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  CGRectGetMinX(v23);
  v24.origin.x = a1;
  v24.origin.y = a2;
  v24.size.width = a3;
  v24.size.height = a4;
  CGRectGetMaxY(v24);
  v25.origin.x = a5;
  v25.origin.y = a6;
  v25.size.width = a7;
  v25.size.height = a8;
  CGRectGetMaxY(v25);
  v26.origin.x = a1;
  v26.origin.y = a2;
  v26.size.width = a3;
  v26.size.height = a4;
  CGRectGetMaxX(v26);
  v27.origin.x = a5;
  v27.origin.y = a6;
  v27.size.width = a7;
  v27.size.height = a8;
  CGRectGetMaxX(v27);
  return v19;
}

CGFloat CGRect.inset(by:)(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat v13;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v15.origin.x = a5;
  v15.origin.y = a6;
  v15.size.width = a7;
  v15.size.height = a8;
  v13 = CGRectGetMinX(v15) + a2;
  v16.origin.x = a5;
  v16.origin.y = a6;
  v16.size.width = a7;
  v16.size.height = a8;
  CGRectGetMinY(v16);
  v17.origin.x = a5;
  v17.origin.y = a6;
  v17.size.width = a7;
  v17.size.height = a8;
  CGRectGetWidth(v17);
  v18.origin.x = a5;
  v18.origin.y = a6;
  v18.size.width = a7;
  v18.size.height = a8;
  CGRectGetHeight(v18);
  return v13;
}

__C::CGRect __swiftcall CGRect.init(size:)(CGSize size)
{
  double height;
  double width;
  double v3;
  double v4;
  __C::CGRect result;

  height = size.height;
  width = size.width;
  v3 = 0.0;
  v4 = 0.0;
  result.size.height = height;
  result.size.width = width;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

__C::CGRect __swiftcall CGSize.centered(in:)(__C::CGRect in)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double MinX;
  double v10;
  double MinY;
  double v12;
  double v13;
  double v14;
  double v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  __C::CGRect result;

  v3 = v2;
  v4 = v1;
  height = in.size.height;
  width = in.size.width;
  y = in.origin.y;
  x = in.origin.x;
  MinX = CGRectGetMinX((CGRect)in);
  v16.origin.x = x;
  v16.origin.y = y;
  v16.size.width = width;
  v16.size.height = height;
  v10 = MinX + (CGRectGetWidth(v16) - v4) * 0.5;
  v17.origin.x = x;
  v17.origin.y = y;
  v17.size.width = width;
  v17.size.height = height;
  MinY = CGRectGetMinY(v17);
  v18.origin.x = x;
  v18.origin.y = y;
  v18.size.width = width;
  v18.size.height = height;
  v12 = MinY + (CGRectGetHeight(v18) - v3) * 0.5;
  v13 = v10;
  v14 = v4;
  v15 = v3;
  result.size.height = v15;
  result.size.width = v14;
  result.origin.y = v12;
  result.origin.x = v13;
  return result;
}

__C::CGRect __swiftcall CGSize.centeredX(in:)(__C::CGRect in)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double MinX;
  double v10;
  double MinY;
  double v12;
  double v13;
  double v14;
  CGRect v15;
  CGRect v16;
  __C::CGRect result;

  v3 = v2;
  v4 = v1;
  height = in.size.height;
  width = in.size.width;
  y = in.origin.y;
  x = in.origin.x;
  MinX = CGRectGetMinX((CGRect)in);
  v15.origin.x = x;
  v15.origin.y = y;
  v15.size.width = width;
  v15.size.height = height;
  v10 = MinX + (CGRectGetWidth(v15) - v4) * 0.5;
  v16.origin.x = x;
  v16.origin.y = y;
  v16.size.width = width;
  v16.size.height = height;
  MinY = CGRectGetMinY(v16);
  v12 = v10;
  v13 = v4;
  v14 = v3;
  result.size.height = v14;
  result.size.width = v13;
  result.origin.y = MinY;
  result.origin.x = v12;
  return result;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX;
  CGRect v10;

  MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

uint64_t WrapView.makeUIView(context:)()
{
  return sub_237A24E18();
}

uint64_t sub_237A24A04()
{
  return sub_237A24E18();
}

uint64_t sub_237A24A20(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_237A24BD0(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, _QWORD))MEMORY[0x24BDEF248]);
}

uint64_t sub_237A24A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapView<A>, a3);
  return sub_237A86D20();
}

uint64_t sub_237A24AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapView<A>, a3);
  return sub_237A86CCC();
}

void sub_237A24B10(uint64_t a1)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapView<A>, a1);
  sub_237A86D14();
  __break(1u);
}

_QWORD *WrapView.init(_:updater:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  return sub_237A24D08(a1, a2, a3, a4, a5, (uint64_t)sub_237A24E04, a6);
}

uint64_t WrapView.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_237A24D88(a1, a2, a3, (uint64_t)nullsub_1, a4);
}

uint64_t WrapViewController.init(_:updater:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t WrapViewController.makeUIViewController(context:)()
{
  return sub_237A24E18();
}

uint64_t WrapViewController.updateUIViewController(_:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_237A24BA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_237A24BD0(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, _QWORD))MEMORY[0x24BDF0EE0]);
}

uint64_t sub_237A24BD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, _QWORD))
{
  return a9(a1, a2 & 1);
}

uint64_t sub_237A24C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapViewController<A>, a3);
  return sub_237A86EF4();
}

uint64_t sub_237A24C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapViewController<A>, a3);
  return sub_237A86EC4();
}

void sub_237A24CC4(uint64_t a1)
{
  MEMORY[0x23B81FA98](&protocol conformance descriptor for WrapViewController<A>, a1);
  sub_237A86EE8();
  __break(1u);
}

_QWORD *WrapViewController.init(_:updater:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  return sub_237A24D08(a1, a2, a3, a4, a5, (uint64_t)sub_237A24E04, a6);
}

_QWORD *sub_237A24D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a5;
  result[3] = a3;
  result[4] = a4;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a6;
  a7[3] = result;
  return result;
}

uint64_t WrapViewController.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_237A24D88(a1, a2, a3, (uint64_t)nullsub_1, a4);
}

uint64_t sub_237A24D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a3;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a4;
  a5[3] = result;
  return result;
}

uint64_t sub_237A24DE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237A24E08()
{
  return swift_deallocObject();
}

uint64_t sub_237A24E18()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_237A24E38()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_237A24E58()
{
  return swift_deallocObject();
}

void sub_237A24E68()
{
  JUMPOUT(0x23B81FA98);
}

void sub_237A24E78()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t type metadata accessor for WrapView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapView);
}

uint64_t sub_237A24EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_237A24EE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_237A24F44(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t type metadata accessor for WrapViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapViewController);
}

CarPlayAssetUI::PowermeterDataIdentifiers __swiftcall PowermeterDataIdentifiers.init(powerDataIdentifier:powerMaxDataIdentifier:powerMinDataIdentifier:powerMarkerAvailableMaxDataIdentifier:powerMarkerAvailableMinDataIdentifier:)(CarPlayAssetUI::InstrumentDataIdentifier powerDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier powerMaxDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier powerMinDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier powerMarkerAvailableMaxDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier powerMarkerAvailableMinDataIdentifier)
{
  _BYTE *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  CarPlayAssetUI::PowermeterDataIdentifiers result;

  v6 = *(_BYTE *)powerMaxDataIdentifier;
  v7 = *(_BYTE *)powerMinDataIdentifier;
  v8 = *(_BYTE *)powerMarkerAvailableMaxDataIdentifier;
  v9 = *(_BYTE *)powerMarkerAvailableMinDataIdentifier;
  *v5 = *(_BYTE *)powerDataIdentifier;
  v5[1] = v6;
  v5[2] = v7;
  v5[3] = v8;
  v5[4] = v9;
  result.powerDataIdentifier = powerDataIdentifier;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.assets.getter()
{
  return MEMORY[0x24BEE4AF8];
}

void static DigiBarRadialStyle.LineCap.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional __swiftcall DigiBarRadialStyle.LineCap.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional)rawValue;
}

uint64_t DigiBarRadialStyle.LineCap.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

CarPlayAssetUI::DigiBarRadialStyle::LineCap_optional sub_237A25014(Swift::Int *a1)
{
  return DigiBarRadialStyle.LineCap.init(rawValue:)(*a1);
}

uint64_t sub_237A2501C()
{
  sub_237A30FB8();
  return sub_237A87A40();
}

uint64_t sub_237A25078()
{
  sub_237A30FB8();
  return sub_237A879F8();
}

__n128 DigiBarRadialStyle.angleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_BYTE *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 DigiBarRadialStyle.angleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 16) = v2;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 24) = result;
  return result;
}

uint64_t (*DigiBarRadialStyle.angleConfiguration.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.trackWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

void DigiBarRadialStyle.trackWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 40) = a1;
}

uint64_t (*DigiBarRadialStyle.trackWidth.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.trackInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

void DigiBarRadialStyle.trackInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 44) = a1;
}

uint64_t (*DigiBarRadialStyle.trackInset.modify())()
{
  return nullsub_1;
}

float DigiBarRadialStyle.platterInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void DigiBarRadialStyle.platterInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*DigiBarRadialStyle.platterInset.modify())()
{
  return nullsub_1;
}

void DigiBarRadialStyle.trackLineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 52);
}

_BYTE *DigiBarRadialStyle.trackLineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 52) = *result;
  return result;
}

uint64_t (*DigiBarRadialStyle.trackLineCap.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarRadialStyle.init(angleConfiguration:trackWidth:trackInset:trackLineCap:platterInset:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>, float a6@<S2>)
{
  char v6;
  char v7;

  v6 = *(_BYTE *)(result + 16);
  v7 = *a2;
  *(_OWORD *)a3 = *(_OWORD *)result;
  *(_BYTE *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(result + 24);
  *(float *)(a3 + 40) = a4;
  *(float *)(a3 + 44) = a5;
  *(float *)(a3 + 48) = a6;
  *(_BYTE *)(a3 + 52) = v7;
  return result;
}

uint64_t DigiBarRadialStyle.hash(into:)()
{
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A885E0();
}

uint64_t sub_237A25274()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A252A8 + 4 * byte_237AA60E0[*v0]))(0xD000000000000012, 0x8000000237AB0130);
}

uint64_t sub_237A252A8()
{
  return 0x6469576B63617274;
}

uint64_t sub_237A252C4()
{
  return 0x736E496B63617274;
}

uint64_t sub_237A252E4()
{
  return 0x4972657474616C70;
}

uint64_t sub_237A25304()
{
  return 0x6E694C6B63617274;
}

uint64_t sub_237A25324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A25348()
{
  sub_237A2D2A4();
  return sub_237A88718();
}

uint64_t sub_237A25370()
{
  sub_237A2D2A4();
  return sub_237A88724();
}

uint64_t DigiBarRadialStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828160);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = *((_BYTE *)v1 + 16);
  v11 = v1[3];
  v12 = v1[4];
  v15 = *((unsigned __int8 *)v1 + 52);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D2A4();
  sub_237A886B8();
  v17 = v8;
  v18 = v9;
  v19 = v10;
  v20 = v11;
  v21 = v12;
  v16 = 0;
  sub_2378B6D7C();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v15;
    LOBYTE(v17) = 1;
    sub_237A8828C();
    LOBYTE(v17) = 2;
    sub_237A8828C();
    LOBYTE(v17) = 3;
    sub_237A8828C();
    LOBYTE(v17) = v13;
    v16 = 4;
    sub_2378B6A7C();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBarRadialStyle.hashValue.getter()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t DigiBarRadialStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D2A4();
  sub_237A88688();
  if (!v2)
  {
    HIBYTE(v22) = 0;
    sub_2378B6EBC();
    sub_237A881F0();
    v9 = v23;
    v10 = v24;
    v11 = v25;
    v12 = v26;
    v13 = v27;
    LOBYTE(v23) = 1;
    sub_237A881CC();
    v15 = v14;
    LOBYTE(v23) = 2;
    sub_237A881CC();
    v17 = v16;
    LOBYTE(v23) = 3;
    sub_237A881CC();
    v20 = v19;
    HIBYTE(v22) = 4;
    sub_2378B6AC0();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v23;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v13;
    *(_DWORD *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 44) = v17;
    *(_DWORD *)(a2 + 48) = v20;
    *(_BYTE *)(a2 + 52) = v21;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A258AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarRadialStyle.init(from:)(a1, a2);
}

uint64_t sub_237A258C0(_QWORD *a1)
{
  return DigiBarRadialStyle.encode(to:)(a1);
}

uint64_t sub_237A258DC()
{
  sub_237A885D4();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

float DigiBarLinearStyle.trackWidth.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void DigiBarLinearStyle.trackWidth.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*DigiBarLinearStyle.trackWidth.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.leftInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void DigiBarLinearStyle.leftInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*DigiBarLinearStyle.leftInset.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.rightInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void DigiBarLinearStyle.rightInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*DigiBarLinearStyle.rightInset.modify())()
{
  return nullsub_1;
}

float DigiBarLinearStyle.centerOffset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void DigiBarLinearStyle.centerOffset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

uint64_t (*DigiBarLinearStyle.centerOffset.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarLinearStyle.isRTL.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DigiBarLinearStyle.isRTL.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*DigiBarLinearStyle.isRTL.modify())()
{
  return nullsub_1;
}

void __swiftcall DigiBarLinearStyle.init(trackWidth:leftInset:rightInset:centerOffset:isRTL:)(CarPlayAssetUI::DigiBarLinearStyle *__return_ptr retstr, Swift::Float trackWidth, Swift::Float leftInset, Swift::Float rightInset, Swift::Float centerOffset, Swift::Bool isRTL)
{
  retstr->trackWidth = trackWidth;
  retstr->leftInset = leftInset;
  retstr->rightInset = rightInset;
  retstr->centerOffset = centerOffset;
  retstr->isRTL = isRTL;
}

uint64_t DigiBarLinearStyle.hash(into:)()
{
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A885EC();
}

uint64_t sub_237A25AE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A25B18 + 4 * byte_237AA60E5[*v0]))(0x6469576B63617274, 0xEA00000000006874);
}

uint64_t sub_237A25B18()
{
  return 0x65736E497466656CLL;
}

uint64_t sub_237A25B34()
{
  return 0x736E497468676972;
}

uint64_t sub_237A25B4C()
{
  return 0x664F7265746E6563;
}

uint64_t sub_237A25B6C()
{
  return 0x4C54527369;
}

uint64_t sub_237A25B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A304DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A25BA4()
{
  sub_237A2D2E8();
  return sub_237A88718();
}

uint64_t sub_237A25BCC()
{
  sub_237A2D2E8();
  return sub_237A88724();
}

uint64_t DigiBarLinearStyle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828178);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D2E8();
  sub_237A886B8();
  v13 = 0;
  sub_237A8828C();
  if (!v1)
  {
    v12 = 1;
    sub_237A8828C();
    v11 = 2;
    sub_237A8828C();
    v10 = 3;
    sub_237A8828C();
    v9 = 4;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DigiBarLinearStyle.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t DigiBarLinearStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v16;
  int v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D2E8();
  sub_237A88688();
  if (!v2)
  {
    v24 = 0;
    sub_237A881CC();
    v10 = v9;
    v23 = 1;
    sub_237A881CC();
    v12 = v11;
    v22 = 2;
    sub_237A881CC();
    v14 = v13;
    v21 = 3;
    sub_237A881CC();
    v17 = v16;
    v20 = 4;
    v18 = sub_237A881C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
    *(_DWORD *)(a2 + 8) = v14;
    *(_DWORD *)(a2 + 12) = v17;
    *(_BYTE *)(a2 + 16) = v18 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A26014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarLinearStyle.init(from:)(a1, a2);
}

uint64_t sub_237A26028(_QWORD *a1)
{
  return DigiBarLinearStyle.encode(to:)(a1);
}

uint64_t sub_237A26044()
{
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  return sub_237A88610();
}

void PowermeterDataIdentifiers.powerDataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PowermeterDataIdentifiers.powerDataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *PowermeterDataIdentifiers.powerMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMinDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *PowermeterDataIdentifiers.powerMinDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMinDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMarkerAvailableMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*PowermeterDataIdentifiers.powerMarkerAvailableMinDataIdentifier.modify())()
{
  return nullsub_1;
}

double static PowermeterDataIdentifiers.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 640165136;
  *(_DWORD *)a1 = 640165136;
  *(_BYTE *)(a1 + 4) = 39;
  return result;
}

uint64_t PowermeterDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A262E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A2631C + 4 * byte_237AA60EA[a1]))(0xD000000000000013, 0x8000000237AB2330);
}

unint64_t sub_237A2631C()
{
  return 0xD000000000000016;
}

uint64_t sub_237A26344()
{
  uint64_t v0;

  return v0 + 15;
}

uint64_t sub_237A2636C()
{
  unsigned __int8 *v0;

  return sub_237A262E0(*v0);
}

uint64_t sub_237A26374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A26398()
{
  sub_237A2D32C();
  return sub_237A88718();
}

uint64_t sub_237A263C0()
{
  sub_237A2D32C();
  return sub_237A88724();
}

uint64_t PowermeterDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  int v10;
  char v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828190);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v17 = v1[2];
  v18 = v9;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D32C();
  sub_237A886B8();
  v28 = v8;
  v27 = 0;
  sub_237888154();
  sub_237A882B0();
  if (!v2)
  {
    v12 = v16;
    v11 = v17;
    v26 = v18;
    v25 = 1;
    sub_237A882B0();
    v24 = v11;
    v23 = 2;
    sub_237A882B0();
    v22 = v12;
    v21 = 3;
    sub_237A882B0();
    v20 = v15;
    v19 = 4;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PowermeterDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t PowermeterDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  int v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  char v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;
  unsigned __int8 v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D32C();
  sub_237A88688();
  if (!v2)
  {
    v24 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v25;
    v22 = 1;
    sub_237A881F0();
    v15 = v9;
    v10 = v23;
    v20 = 2;
    sub_237A881F0();
    v14 = v10;
    LOBYTE(v10) = v21;
    v18 = 3;
    sub_237A881F0();
    v13 = v19;
    v16 = 4;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v13;
    a2[4] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A26984@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PowermeterDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237A26998(_QWORD *a1)
{
  return PowermeterDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_237A269B4()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

double sub_237A26AE4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 640165136;
  *(_DWORD *)a1 = 640165136;
  *(_BYTE *)(a1 + 4) = 39;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.hash(into:)()
{
  uint64_t v0;

  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    return sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    return sub_237A885E0();
  }
}

uint64_t sub_237A26C48()
{
  sub_237A2D370();
  return sub_237A88718();
}

uint64_t sub_237A26C70()
{
  sub_237A2D370();
  return sub_237A88724();
}

uint64_t sub_237A26C98()
{
  sub_237A2D3B4();
  return sub_237A88718();
}

uint64_t sub_237A26CC0()
{
  sub_237A2D3B4();
  return sub_237A88724();
}

uint64_t sub_237A26CE8()
{
  sub_237A2D3F8();
  return sub_237A88718();
}

uint64_t sub_237A26D10()
{
  sub_237A2D3F8();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281A8);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281B0);
  v6 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  v30 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281B8);
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v31 = *(_QWORD *)v1;
  v32 = v13;
  v14 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 40);
  v17 = *(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D370();
  sub_237A886B8();
  if ((v17 & 0x8000000000000000) != 0)
  {
    v21 = v31;
    v22 = HIDWORD(v31);
    LOBYTE(v35) = 1;
    sub_237A2D3B4();
    v23 = v26;
    v24 = v34;
    sub_237A88220();
    v35 = __PAIR64__(v22, v21);
    v36 = v12;
    v37 = v32 & 1;
    sub_237A19054();
    v25 = v28;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v24);
  }
  else
  {
    LOBYTE(v35) = 0;
    sub_237A2D3F8();
    v18 = v34;
    sub_237A88220();
    v35 = v31;
    v36 = v12;
    v37 = v32 & 1;
    v38 = v14;
    v39 = v15;
    v40 = v16;
    v41 = v17;
    v42 = BYTE4(v17);
    sub_237A190DC();
    v19 = v29;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v18);
  }
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.Style.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  unsigned int v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  unsigned int v41;
  unsigned __int8 v42;
  uint64_t v43;

  v32 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281D8);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281E8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_237A2D370();
  v13 = v43;
  sub_237A88688();
  if (!v13)
  {
    v30 = v4;
    v31 = v5;
    v14 = v34;
    v15 = v35;
    v43 = v9;
    v16 = sub_237A881FC();
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      v17 = v11;
      if ((*(_BYTE *)(v16 + 32) & 1) != 0)
      {
        LOBYTE(v37) = 1;
        sub_237A2D3B4();
        sub_237A88154();
        sub_237A19164();
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
        v18 = 0;
        v19 = v37;
        v20 = v38;
        v21 = 0uLL;
        v22 = 0x8000000000;
      }
      else
      {
        LOBYTE(v37) = 0;
        sub_237A2D3F8();
        sub_237A88154();
        sub_237A191A8();
        v27 = v30;
        sub_237A881F0();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v8);
        v19 = v37;
        v20 = v38;
        v21 = v39;
        v18 = v40;
        v22 = v41 | ((unint64_t)v42 << 32);
      }
      v28 = v32;
      *v32 = v19;
      *((_QWORD *)v28 + 2) = v20;
      *(_OWORD *)((char *)v28 + 24) = v21;
      *((_QWORD *)v28 + 5) = v18;
      *((_DWORD *)v28 + 12) = v22;
      *((_BYTE *)v28 + 52) = BYTE4(v22);
    }
    else
    {
      v23 = sub_237A87FB0();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
      *v25 = &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style;
      sub_237A88160();
      sub_237A87F98();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v36);
}

uint64_t sub_237A27588@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_237A2759C(_QWORD *a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_237A275B8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return sub_2378DE3E0(v3);
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = v1->n128_i64[1];
  swift_bridgeObjectRelease();
  sub_2378706C8(v3);
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.colorsConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 72);
  v3 = *(_BYTE *)(v1 + 76);
  v4 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.style.setter(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 52);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 56) = result;
  *(_BYTE *)(v1 + 76) = v3;
  *(_DWORD *)(v1 + 72) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.style.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 80);
}

void Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 80) = a1;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.trackLimitGap.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 144);
  v10 = *(_BYTE *)(v1 + 156);
  v11 = *(_DWORD *)(v1 + 152);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 68) = v10;
  *(_DWORD *)(a1 + 64) = v11;
  return sub_2378DE3E0(v2);
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v8 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_DWORD *)a1 + 16);
  v5 = *((_BYTE *)a1 + 68);
  v6 = v1 + 152;
  sub_2378706C8(*(_QWORD *)(v6 - 64));
  *(_OWORD *)(v6 - 64) = v10;
  *(_OWORD *)(v6 - 48) = v9;
  result = v8;
  *(__n128 *)(v6 - 32) = v8;
  *(_QWORD *)(v6 - 16) = v2;
  *(_QWORD *)(v6 - 8) = v3;
  *(_BYTE *)(v6 + 4) = v5;
  *(_DWORD *)v6 = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarConfiguration.redlineConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.DigiBarConfiguration.init(colorsConfiguration:style:trackLimitGap:redlineConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  __int128 v5;
  int v6;
  char v7;
  int v8;
  char v9;
  __int128 v10;
  __n128 result;
  __int128 v12;

  *(_OWORD *)a4 = *(_OWORD *)a1;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 24) = *(_OWORD *)a2;
  v6 = *(_DWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 52);
  v8 = *(_DWORD *)(a3 + 64);
  v9 = *(_BYTE *)(a3 + 68);
  *(_QWORD *)(a4 + 16) = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 40) = v5;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a4 + 76) = v7;
  *(_DWORD *)(a4 + 72) = v6;
  *(float *)(a4 + 80) = a5;
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 88) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 104) = v10;
  result = *(__n128 *)(a3 + 32);
  v12 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(a4 + 120) = result;
  *(_OWORD *)(a4 + 136) = v12;
  *(_BYTE *)(a4 + 156) = v9;
  *(_DWORD *)(a4 + 152) = v8;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(unsigned int *)(v1 + 72) | (unint64_t)((uint64_t)*(char *)(v1 + 76) << 32);
  sub_2379E9F18(v1 + 88, (uint64_t)v9);
  if (!v3)
  {
    sub_237A885EC();
    sub_2378DE3E0(v4);
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v7 = 0;
    goto LABEL_7;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v4);
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  if (!v5)
  {
    sub_237A885EC();
    sub_2378706C8(v4);
    swift_bridgeObjectRelease();
    sub_2378706C8(v4);
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_10:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    goto LABEL_11;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v5);
  swift_bridgeObjectRelease();
  sub_2378706C8(v4);
  swift_bridgeObjectRelease();
  v7 = v4;
LABEL_7:
  sub_2378706C8(v7);
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_8:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
LABEL_11:
  sub_237A885F8();
  sub_2379E9F60((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_2379E741C(a1);
  return sub_2379E9F60((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
}

uint64_t sub_237A27C9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A27CD0 + 4 * byte_237AA60EF[*v0]))(0xD000000000000013, 0x8000000237AB23F0);
}

uint64_t sub_237A27CD0()
{
  return 0x656C797473;
}

uint64_t sub_237A27CE4()
{
  return 0x6D694C6B63617274;
}

uint64_t sub_237A27D08(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_237A27D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A27D44()
{
  sub_237A2D43C();
  return sub_237A88718();
}

uint64_t sub_237A27D6C()
{
  sub_237A2D43C();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568281F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v34 = *((_QWORD *)v1 + 4);
  v35 = v8;
  v10 = *((_QWORD *)v1 + 5);
  v32 = *((_QWORD *)v1 + 6);
  v33 = v10;
  v11 = *((_QWORD *)v1 + 7);
  v30 = *((_QWORD *)v1 + 8);
  v31 = v11;
  v29 = *((unsigned __int8 *)v1 + 76);
  v28 = *((unsigned int *)v1 + 18);
  v12 = *((_QWORD *)v1 + 11);
  v26 = *((_QWORD *)v1 + 12);
  v27 = v12;
  v18 = *((_QWORD *)v1 + 13);
  v19 = *((_QWORD *)v1 + 14);
  v23 = *((_QWORD *)v1 + 15);
  v22 = *((_QWORD *)v1 + 16);
  v21 = *((_QWORD *)v1 + 17);
  v20 = *((_QWORD *)v1 + 18);
  v25 = *((unsigned __int8 *)v1 + 156);
  v24 = *((unsigned int *)v1 + 38);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D43C();
  sub_237A886B8();
  v37 = v36;
  v38 = v9;
  v46 = 0;
  sub_2379804B0();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v24;
    v14 = v25;
    v16 = v26;
    v15 = v27;
    *(_QWORD *)&v37 = v35;
    *((_QWORD *)&v37 + 1) = v34;
    v38 = v33;
    v39 = v32;
    v40 = v31;
    v41 = v30;
    BYTE4(v42) = (v28 | (unint64_t)(v29 << 32)) >> 32;
    LODWORD(v42) = v28;
    v46 = 1;
    sub_23798EDA0();
    sub_237A882B0();
    LOBYTE(v37) = 2;
    sub_237A8828C();
    *(_QWORD *)&v37 = v15;
    *((_QWORD *)&v37 + 1) = v16;
    v38 = v18;
    v39 = v19;
    v40 = v23;
    v41 = v22;
    v42 = v21;
    v43 = v20;
    v44 = v13;
    v45 = (v13 | (unint64_t)(v14 << 32)) >> 32;
    v46 = 3;
    sub_237A2D480();
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE v7[72];
  _BYTE v8[80];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 72) | (unint64_t)((uint64_t)*(char *)(v0 + 76) << 32);
  sub_2379E9F18(v0 + 88, (uint64_t)v8);
  sub_237A885D4();
  if (!v1)
  {
    sub_237A885EC();
    sub_2378DE3E0(v2);
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v5 = 0;
    goto LABEL_7;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v2);
  if (!v3)
  {
    sub_237A885EC();
    sub_2378706C8(v2);
    swift_bridgeObjectRelease();
    sub_2378706C8(v2);
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_10:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    goto LABEL_11;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  swift_bridgeObjectRelease();
  v5 = v2;
LABEL_7:
  sub_2378706C8(v5);
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_8:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
LABEL_11:
  sub_237A885F8();
  sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_2379E741C((uint64_t)v7);
  sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DigiBarConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  char v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  unsigned __int8 v98;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828208);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_237A2D43C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v56);
    return sub_2378706C8(0);
  }
  else
  {
    v54 = a2;
    v55 = v6;
    LOBYTE(v57) = 0;
    sub_237980468();
    sub_237A881F0();
    v10 = v66;
    v11 = v67;
    v12 = v68;
    LOBYTE(v57) = 1;
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v11);
    sub_23798EE28();
    sub_237A881F0();
    *(_QWORD *)&v52 = v10;
    *((_QWORD *)&v52 + 1) = v11;
    v53 = v12;
    v50 = v67;
    v51 = v66;
    v13 = v70;
    v48 = v69;
    v49 = v68;
    v14 = v71;
    v15 = BYTE4(v72);
    v16 = v72;
    LOBYTE(v66) = 2;
    sub_237A881CC();
    v18 = v17;
    v44 = v15;
    v45 = v16;
    v46 = v14;
    v47 = v13;
    v88 = 3;
    sub_237A2D4C4();
    sub_237A881A8();
    v19 = v45 | (v44 << 32);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v5);
    v20 = v89;
    v21 = v90;
    v22 = v91;
    v23 = v93;
    v24 = v94;
    v44 = v92;
    v45 = v96;
    v55 = v97;
    v40 = v97 | ((unint64_t)v98 << 32);
    v41 = v98;
    v25 = v95;
    sub_2378DE3E0(v89);
    sub_2378706C8(0);
    v57 = v52;
    *(_QWORD *)&v58 = v53;
    *((_QWORD *)&v58 + 1) = v51;
    *(_QWORD *)&v59 = v50;
    *((_QWORD *)&v59 + 1) = v49;
    *(_QWORD *)&v60 = v48;
    *((_QWORD *)&v60 + 1) = v47;
    *(_QWORD *)&v61 = v46;
    v42 = v19;
    v43 = HIDWORD(v19);
    BYTE12(v61) = BYTE4(v19);
    DWORD2(v61) = v19;
    LODWORD(v62) = v18;
    v38 = v20;
    v39 = v21;
    *((_QWORD *)&v62 + 1) = v20;
    *(_QWORD *)&v63 = v21;
    *((_QWORD *)&v63 + 1) = v22;
    *(_QWORD *)&v64 = v44;
    v36 = v25;
    v37 = v23;
    *((_QWORD *)&v64 + 1) = v23;
    *(_QWORD *)&v65[0] = v24;
    *((_QWORD *)&v65[0] + 1) = v25;
    *(_QWORD *)&v65[1] = v45;
    v41 = v41;
    BYTE12(v65[1]) = v41;
    DWORD2(v65[1]) = v55;
    sub_2379E7DB8((uint64_t)&v57);
    v26 = v45;
    sub_2378706C8(v20);
    v27 = v52;
    swift_bridgeObjectRelease();
    v28 = *((_QWORD *)&v52 + 1);
    v29 = v53;
    sub_2378706C8(*((uint64_t *)&v52 + 1));
    v30 = v64;
    v31 = v54;
    v54[6] = v63;
    v31[7] = v30;
    v31[8] = v65[0];
    *(_OWORD *)((char *)v31 + 141) = *(_OWORD *)((char *)v65 + 13);
    v32 = v60;
    v31[2] = v59;
    v31[3] = v32;
    v33 = v62;
    v31[4] = v61;
    v31[5] = v33;
    v34 = v58;
    *v31 = v57;
    v31[1] = v34;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v56);
    v66 = v27;
    v67 = v28;
    v68 = v29;
    v69 = v51;
    v70 = v50;
    v71 = v49;
    v72 = v48;
    v73 = v47;
    v74 = v46;
    v76 = v43;
    v75 = v42;
    v77 = v18;
    v78 = v38;
    v79 = v39;
    v80 = v22;
    v81 = v44;
    v82 = v37;
    v83 = v24;
    v84 = v36;
    v85 = v26;
    v87 = v41;
    v86 = v55;
    return sub_2379E7E60((uint64_t)&v66);
  }
}

uint64_t sub_237A2887C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A28890(_QWORD *a1)
{
  return Instrument.GaugeStyle.DigiBarConfiguration.encode(to:)(a1);
}

uint64_t sub_237A288AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE v7[72];
  _BYTE v8[80];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned int *)(v0 + 72) | (unint64_t)((uint64_t)*(char *)(v0 + 76) << 32);
  sub_2379E9F18(v0 + 88, (uint64_t)v8);
  sub_237A885D4();
  if (!v1)
  {
    sub_237A885EC();
    sub_2378DE3E0(v2);
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v5 = 0;
    goto LABEL_7;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v2);
  if (!v3)
  {
    sub_237A885EC();
    sub_2378706C8(v2);
    swift_bridgeObjectRelease();
    sub_2378706C8(v2);
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_10:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    goto LABEL_11;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  swift_bridgeObjectRelease();
  v5 = v2;
LABEL_7:
  sub_2378706C8(v5);
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_8:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
LABEL_11:
  sub_237A885F8();
  sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378DE3E0);
  sub_2379E741C((uint64_t)v7);
  sub_2379E9F60((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_2378706C8);
  return sub_237A88610();
}

__n128 DigiBarMaskConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 52);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarMaskConfiguration.style.setter(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 52);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 52) = v3;
  *(_DWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*DigiBarMaskConfiguration.style.modify())()
{
  return nullsub_1;
}

float DigiBarMaskConfiguration.widthExtension.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 56);
}

void DigiBarMaskConfiguration.widthExtension.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 56) = a1;
}

uint64_t (*DigiBarMaskConfiguration.widthExtension.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarMaskConfiguration.init(style:widthExtension:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  int v3;
  char v4;
  __int128 v5;

  v3 = *(_DWORD *)(result + 48);
  v4 = *(_BYTE *)(result + 52);
  v5 = *(_OWORD *)(result + 16);
  *(_OWORD *)a2 = *(_OWORD *)result;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(result + 32);
  *(_BYTE *)(a2 + 52) = v4;
  *(_DWORD *)(a2 + 48) = v3;
  *(float *)(a2 + 56) = a3;
  return result;
}

uint64_t DigiBarMaskConfiguration.assets.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t DigiBarMaskConfiguration.hash(into:)()
{
  uint64_t v0;

  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return sub_237A885F8();
}

uint64_t sub_237A28DD4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7478456874646977;
  else
    return 0x656C797473;
}

uint64_t sub_237A28E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30AD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A28E3C()
{
  sub_237A2D770();
  return sub_237A88718();
}

uint64_t sub_237A28E64()
{
  sub_237A2D770();
  return sub_237A88724();
}

uint64_t DigiBarMaskConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828218);
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v12 = v1[1];
  v13 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v14 = *((unsigned int *)v1 + 12);
  v9 = *((_BYTE *)v1 + 52);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D770();
  sub_237A886B8();
  v18 = v13;
  v19 = v12;
  v20 = v8;
  v21 = v7;
  v23 = v9;
  v22 = v14;
  v17 = 0;
  sub_23798EDA0();
  v10 = v15;
  sub_237A882B0();
  if (!v10)
  {
    LOBYTE(v18) = 1;
    sub_237A8828C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t DigiBarMaskConfiguration.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t DigiBarMaskConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned __int8 v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D770();
  sub_237A88688();
  if (!v2)
  {
    v23 = 0;
    sub_23798EE28();
    sub_237A881F0();
    v21 = v25;
    v22 = v24;
    v19 = v27;
    v20 = v26;
    v17 = v29;
    v18 = v28;
    v9 = v31;
    v10 = v30;
    LOBYTE(v24) = 1;
    sub_237A881CC();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v21;
    *(_QWORD *)a2 = v22;
    *(_QWORD *)(a2 + 8) = v13;
    v14 = v19;
    *(_QWORD *)(a2 + 16) = v20;
    *(_QWORD *)(a2 + 24) = v14;
    v15 = v17;
    *(_QWORD *)(a2 + 32) = v18;
    *(_QWORD *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 48) = v10;
    *(_BYTE *)(a2 + 52) = (v10 | (unint64_t)(v9 << 32)) >> 32;
    *(_DWORD *)(a2 + 56) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A2937C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarMaskConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A29390(_QWORD *a1)
{
  return DigiBarMaskConfiguration.encode(to:)(a1);
}

uint64_t sub_237A293A8()
{
  uint64_t v0;

  if (((*(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return sub_237A885F8();
}

uint64_t sub_237A29508()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t sub_237A296B4(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;
  float v4;
  int v5;
  char v6;
  float v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[3];
  int v12;
  char v13;
  _OWORD v14[3];
  int v15;
  char v16;

  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 52);
  v4 = *(float *)(a1 + 56);
  v5 = *(_DWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 52);
  v7 = *(float *)(a2 + 56);
  v8 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v8;
  v14[2] = *(_OWORD *)(a1 + 32);
  v16 = v3;
  v15 = v2;
  v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  v11[2] = *(_OWORD *)(a2 + 32);
  v13 = v6;
  v12 = v5;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t *)v14, (uint64_t *)v11) & (v4 == v7);
}

uint64_t DigiBarRedlineConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBarRedlineConfiguration.colorIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarRedlineConfiguration.crossedColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBarRedlineConfiguration.crossedColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.crossedColorIDs.modify())()
{
  return nullsub_1;
}

__n128 DigiBarRedlineConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 64);
  v3 = *(_BYTE *)(v1 + 68);
  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarRedlineConfiguration.style.setter(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 52);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 68) = v3;
  *(_DWORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*DigiBarRedlineConfiguration.style.modify())()
{
  return nullsub_1;
}

__n128 DigiBarRedlineConfiguration.init(colorIDs:crossedColorIDs:style:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  char v5;
  __int128 v6;
  __n128 result;

  v4 = *(_DWORD *)(a3 + 48);
  v5 = *(_BYTE *)(a3 + 52);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v6;
  result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 48) = result;
  *(_BYTE *)(a4 + 68) = v5;
  *(_DWORD *)(a4 + 64) = v4;
  return result;
}

uint64_t DigiBarRedlineConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = v1;
  v5 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v6 = *(unsigned int *)(v2 + 64) | (unint64_t)((uint64_t)*(char *)(v2 + 68) << 32);
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v5);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v4);
    swift_bridgeObjectRelease();
    if ((v6 & 0x8000000000000000) == 0)
    {
LABEL_3:
      sub_237A885E0();
      sub_237A88604();
      sub_237A88604();
      sub_237A885EC();
      sub_237896D64();
      sub_237A885F8();
      sub_237A885F8();
      sub_237A885F8();
      return sub_237A885E0();
    }
  }
  else
  {
    sub_237A885EC();
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_3;
  }
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A885EC();
}

uint64_t sub_237A299D4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x43646573736F7263;
  if (*v0 != 1)
    v1 = 0x656C797473;
  if (*v0)
    return v1;
  else
    return 0x734449726F6C6F63;
}

uint64_t sub_237A29A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30BE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A29A5C()
{
  sub_237A2D7B4();
  return sub_237A88718();
}

uint64_t sub_237A29A84()
{
  sub_237A2D7B4();
  return sub_237A88724();
}

uint64_t DigiBarRedlineConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828230);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v23 = v1[2];
  v24 = v8;
  v10 = v1[3];
  v21 = v1[4];
  v22 = v10;
  v11 = v1[5];
  v19 = v1[6];
  v20 = v11;
  v12 = v1[7];
  v17 = *((unsigned __int8 *)v1 + 68);
  v18 = v12;
  v16 = *((unsigned int *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D7B4();
  sub_237A886B8();
  v25 = v9;
  v33 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  if (!v2)
  {
    v14 = v22;
    v13 = v23;
    v25 = v24;
    v33 = 1;
    sub_237A88268();
    v25 = v13;
    v26 = v14;
    v27 = v21;
    v28 = v20;
    v29 = v19;
    v30 = v18;
    v32 = (v16 | (unint64_t)(v17 << 32)) >> 32;
    v31 = v16;
    v33 = 2;
    sub_23798EDA0();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBarRedlineConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned int *)(v0 + 64) | (unint64_t)((uint64_t)*(char *)(v0 + 68) << 32);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_237A885EC();
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_5:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_5;
LABEL_3:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t DigiBarRedlineConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D7B4();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v25 = 0;
    sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    v10 = v20;
    v25 = 1;
    swift_bridgeObjectRetain();
    sub_237A881A8();
    v11 = v20;
    v25 = 2;
    sub_23798EE28();
    swift_bridgeObjectRetain();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v23;
    v13 = v24;
    v14 = v20;
    v15 = v21;
    v16 = v22;
    v17 = v19;
    *v19 = v10;
    v17[1] = v11;
    *((_OWORD *)v17 + 1) = v14;
    *((_OWORD *)v17 + 2) = v15;
    *((_OWORD *)v17 + 3) = v16;
    *((_BYTE *)v17 + 68) = v13;
    *((_DWORD *)v17 + 16) = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A2A128@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DigiBarRedlineConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A2A13C(_QWORD *a1)
{
  return DigiBarRedlineConfiguration.encode(to:)(a1);
}

uint64_t sub_237A2A158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned int *)(v0 + 64) | (unint64_t)((uint64_t)*(char *)(v0 + 68) << 32);
  sub_237A885D4();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_237A885EC();
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_5:
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_5;
LABEL_3:
  sub_237A885E0();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t DigiBandGradientProgressConfiguration.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigiBandGradientProgressConfiguration.colorIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DigiBandGradientProgressConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

float DigiBandGradientProgressConfiguration.style.getter@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  float result;
  char v4;

  v2 = *(_BYTE *)(v1 + 24);
  result = *(float *)(v1 + 56);
  v4 = *(_BYTE *)(v1 + 60);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v1 + 48);
  *(float *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 52) = v4;
  return result;
}

float DigiBandGradientProgressConfiguration.style.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  float result;
  char v4;

  v2 = *(_BYTE *)(a1 + 16);
  result = *(float *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 52);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 40);
  *(float *)(v1 + 56) = result;
  *(_BYTE *)(v1 + 60) = v4;
  return result;
}

uint64_t (*DigiBandGradientProgressConfiguration.style.modify())()
{
  return nullsub_1;
}

float DigiBandGradientProgressConfiguration.init(colorIDs:style:)@<S0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  float result;
  char v5;

  v3 = *(_BYTE *)(a2 + 16);
  result = *(float *)(a2 + 48);
  v5 = *(_BYTE *)(a2 + 52);
  *(_QWORD *)a3 = a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_BYTE *)(a3 + 24) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 40);
  *(float *)(a3 + 56) = result;
  *(_BYTE *)(a3 + 60) = v5;
  return result;
}

uint64_t DigiBandGradientProgressConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A885E0();
}

BOOL static DigiBandGradientProgressConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;

  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 32);
  v4 = *(_DWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 60);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_DWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 60);
  if ((sub_2379B7304(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    v27[0] = v19;
    v27[1] = v18;
    v28 = v2;
    v29 = v17;
    v30 = v16;
    v31 = v3;
    v32 = v4;
    v33 = v5;
    v20[0] = v6;
    v20[1] = v7;
    v21 = v8;
    v22 = v9;
    v23 = v10;
    v24 = v11;
    v25 = v12;
    v26 = v13;
    return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_237A2A60C()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C797473;
  else
    return 0x734449726F6C6F63;
}

uint64_t sub_237A2A644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30D50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A2A668()
{
  sub_237A2D7F8();
  return sub_237A88718();
}

uint64_t sub_237A2A690()
{
  sub_237A2D7F8();
  return sub_237A88724();
}

uint64_t DigiBandGradientProgressConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  int v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828248);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v25 = *((unsigned __int8 *)v1 + 24);
  v11 = v1[4];
  v12 = v1[5];
  v13 = v1[6];
  v14 = *((_DWORD *)v1 + 14);
  HIDWORD(v16) = *((unsigned __int8 *)v1 + 60);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D7F8();
  sub_237A886B8();
  v17 = v8;
  v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  if (!v2)
  {
    v17 = v9;
    v18 = v10;
    v19 = v25;
    v20 = v11;
    v21 = v12;
    v22 = v13;
    v23 = v14;
    v24 = BYTE4(v16);
    v26 = 1;
    sub_237A190DC();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DigiBandGradientProgressConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876E24((uint64_t)v3, v1);
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t DigiBandGradientProgressConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828258);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D7F8();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  v23 = 0;
  sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
  sub_237A881F0();
  v9 = v17;
  v23 = 1;
  sub_237A191A8();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v18;
  v11 = v21;
  v12 = v22;
  v13 = v20;
  v14 = v17;
  v15 = v19;
  *(_QWORD *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v13;
  *(_DWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 60) = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A2AB74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBandGradientProgressConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A2AB88(_QWORD *a1)
{
  return DigiBandGradientProgressConfiguration.encode(to:)(a1);
}

uint64_t sub_237A2ABA0(uint64_t a1)
{
  uint64_t *v1;

  sub_237876E24(a1, *v1);
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  return sub_237A885E0();
}

uint64_t sub_237A2AC5C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876E24((uint64_t)v3, v1);
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  return sub_237A88610();
}

BOOL sub_237A2AD54(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;

  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 32);
  v4 = *(_DWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 60);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_DWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 60);
  if ((sub_2379B7304(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    v27[0] = v19;
    v27[1] = v18;
    v28 = v2;
    v29 = v17;
    v30 = v16;
    v31 = v3;
    v32 = v4;
    v33 = v5;
    v20[0] = v6;
    v20[1] = v7;
    v21 = v8;
    v22 = v9;
    v23 = v10;
    v24 = v11;
    v25 = v12;
    v26 = v13;
    return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    return 0;
  }
}

double sub_237A2AE50()
{
  double result;

  if (qword_25681E4D0 != -1)
    swift_once();
  xmmword_2568280F0 = xmmword_256827BB8;
  qword_256828100 = byte_256827BC8;
  result = *(double *)&algn_256827BC9[7];
  *(_OWORD *)algn_256828108 = *(_OWORD *)&algn_256827BC9[7];
  qword_256828118 = 0x40C0000041F00000;
  byte_256828124 = 0;
  dword_256828120 = 0;
  return result;
}

double static Instrument.GaugeStyle.DigiBarConfiguration.Style.default.getter@<D0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  __int128 v4;
  double result;

  if (qword_25681E4D8 != -1)
    swift_once();
  v2 = dword_256828120;
  v3 = byte_256828124;
  v4 = *(_OWORD *)&qword_256828100;
  *(_OWORD *)a1 = xmmword_2568280F0;
  *(_OWORD *)(a1 + 16) = v4;
  result = dbl_256828110;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&dbl_256828110;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

double sub_237A2AF30@<D0>(uint64_t a1@<X8>)
{
  int v2;
  char v3;
  __int128 v4;
  double result;

  if (qword_25681E4D8 != -1)
    swift_once();
  v2 = dword_256828120;
  v3 = byte_256828124;
  v4 = *(_OWORD *)&qword_256828100;
  *(_OWORD *)a1 = xmmword_2568280F0;
  *(_OWORD *)(a1 + 16) = v4;
  result = dbl_256828110;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&dbl_256828110;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

double sub_237A2AF9C()
{
  double result;

  if (qword_25681E4D0 != -1)
    swift_once();
  xmmword_256828128 = xmmword_256827BB8;
  byte_256828138 = byte_256827BC8;
  unk_256828140 = *(_OWORD *)&algn_256827BC9[7];
  result = 8192.00201;
  qword_256828150 = 0x40C0000041F00000;
  dword_256828158 = 0;
  byte_25682815C = 0;
  return result;
}

float static DigiBarRadialStyle.default.getter@<S0>(uint64_t a1@<X8>)
{
  char v2;
  float result;
  char v4;

  if (qword_25681E4E0 != -1)
    swift_once();
  v2 = byte_256828138;
  result = *(float *)&dword_256828158;
  v4 = byte_25682815C;
  *(_OWORD *)a1 = xmmword_256828128;
  *(_BYTE *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = unk_256828140;
  *(_QWORD *)(a1 + 40) = qword_256828150;
  *(float *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 52) = v4;
  return result;
}

float sub_237A2B08C@<S0>(uint64_t a1@<X8>)
{
  char v2;
  float result;
  char v4;

  if (qword_25681E4E0 != -1)
    swift_once();
  v2 = byte_256828138;
  result = *(float *)&dword_256828158;
  v4 = byte_25682815C;
  *(_OWORD *)a1 = xmmword_256828128;
  *(_BYTE *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = unk_256828140;
  *(_QWORD *)(a1 + 40) = qword_256828150;
  *(float *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 52) = v4;
  return result;
}

CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional __swiftcall DigiBarCruiseControlConfiguration.BarType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional)rawValue;
}

uint64_t DigiBarCruiseControlConfiguration.BarType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

CarPlayAssetUI::DigiBarCruiseControlConfiguration::BarType_optional sub_237A2B138(Swift::Int *a1)
{
  return DigiBarCruiseControlConfiguration.BarType.init(rawValue:)(*a1);
}

uint64_t sub_237A2B140()
{
  sub_237A30F74();
  return sub_237A87A40();
}

uint64_t sub_237A2B19C()
{
  sub_237A30F74();
  return sub_237A879F8();
}

uint64_t DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v2 = v1[7];
  v3 = v1[5];
  v19 = v1[6];
  v20 = v2;
  v4 = v1[7];
  v21[0] = v1[8];
  *(_OWORD *)((char *)v21 + 13) = *(_OWORD *)((char *)v1 + 141);
  v5 = v1[3];
  v7 = v1[1];
  v15 = v1[2];
  v6 = v15;
  v16 = v5;
  v8 = v1[3];
  v9 = v1[5];
  v17 = v1[4];
  v10 = v17;
  v18 = v9;
  v11 = v1[1];
  v14[0] = *v1;
  v12 = v14[0];
  v14[1] = v11;
  a1[6] = v19;
  a1[7] = v4;
  a1[8] = v1[8];
  *(_OWORD *)((char *)a1 + 141) = *(_OWORD *)((char *)v1 + 141);
  a1[2] = v6;
  a1[3] = v8;
  a1[4] = v10;
  a1[5] = v3;
  *a1 = v12;
  a1[1] = v7;
  return sub_2379E7DB8((uint64_t)v14);
}

__n128 DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.setter(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[8];
  _OWORD v13[2];

  v3 = v1[7];
  v12[6] = v1[6];
  v12[7] = v3;
  v13[0] = v1[8];
  *(_OWORD *)((char *)v13 + 13) = *(_OWORD *)((char *)v1 + 141);
  v4 = v1[3];
  v12[2] = v1[2];
  v12[3] = v4;
  v5 = v1[5];
  v12[4] = v1[4];
  v12[5] = v5;
  v6 = v1[1];
  v12[0] = *v1;
  v12[1] = v6;
  sub_2379E7E60((uint64_t)v12);
  v7 = *(_OWORD *)(a1 + 112);
  v1[6] = *(_OWORD *)(a1 + 96);
  v1[7] = v7;
  v1[8] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)((char *)v1 + 141) = *(_OWORD *)(a1 + 141);
  v8 = *(_OWORD *)(a1 + 48);
  v1[2] = *(_OWORD *)(a1 + 32);
  v1[3] = v8;
  v9 = *(_OWORD *)(a1 + 80);
  v1[4] = *(_OWORD *)(a1 + 64);
  v1[5] = v9;
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v11;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.cruiseControlBarConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarCruiseControlConfiguration.trackConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v2 = v1[17];
  v3 = v1[15];
  v19 = v1[16];
  v20 = v2;
  v4 = v1[17];
  v21[0] = v1[18];
  v5 = v1[13];
  v7 = v1[11];
  v15 = v1[12];
  v6 = v15;
  v16 = v5;
  v8 = v1[13];
  v9 = v1[15];
  v17 = v1[14];
  v10 = v17;
  v18 = v9;
  v11 = v1[11];
  v14[0] = v1[10];
  v12 = v14[0];
  v14[1] = v11;
  *(_OWORD *)((char *)v21 + 13) = *(_OWORD *)((char *)v1 + 301);
  a1[6] = v19;
  a1[7] = v4;
  a1[8] = v1[18];
  *(_OWORD *)((char *)a1 + 141) = *(_OWORD *)((char *)v1 + 301);
  a1[2] = v6;
  a1[3] = v8;
  a1[4] = v10;
  a1[5] = v3;
  *a1 = v12;
  a1[1] = v7;
  return sub_2379E7DB8((uint64_t)v14);
}

__n128 DigiBarCruiseControlConfiguration.trackConfiguration.setter(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _OWORD v12[8];
  _OWORD v13[2];

  v3 = v1[17];
  v12[6] = v1[16];
  v12[7] = v3;
  v13[0] = v1[18];
  v4 = v1[13];
  v12[2] = v1[12];
  v12[3] = v4;
  v5 = v1[15];
  v12[4] = v1[14];
  v12[5] = v5;
  v6 = v1[11];
  v12[0] = v1[10];
  v12[1] = v6;
  *(_OWORD *)((char *)v13 + 13) = *(_OWORD *)((char *)v1 + 301);
  sub_2379E7E60((uint64_t)v12);
  v7 = *(_OWORD *)(a1 + 112);
  v1[16] = *(_OWORD *)(a1 + 96);
  v1[17] = v7;
  v1[18] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)((char *)v1 + 301) = *(_OWORD *)(a1 + 141);
  v8 = *(_OWORD *)(a1 + 48);
  v1[12] = *(_OWORD *)(a1 + 32);
  v1[13] = v8;
  v9 = *(_OWORD *)(a1 + 80);
  v1[14] = *(_OWORD *)(a1 + 64);
  v1[15] = v9;
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  v1[10] = *(_OWORD *)a1;
  v1[11] = v11;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.trackConfiguration.modify())()
{
  return nullsub_1;
}

void DigiBarCruiseControlConfiguration.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 317);
}

_BYTE *DigiBarCruiseControlConfiguration.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 317) = *result;
  return result;
}

uint64_t (*DigiBarCruiseControlConfiguration.type.modify())()
{
  return nullsub_1;
}

void *DigiBarCruiseControlConfiguration.init(cruiseControlBarConfiguration:trackConfiguration:type:)@<X0>(_OWORD *a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, _BYTE *a4@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  void *result;
  _OWORD v18[20];

  v5 = a1[7];
  v18[6] = a1[6];
  v18[7] = v5;
  v6 = *a2;
  v7 = a2[1];
  v18[8] = a1[8];
  *(_OWORD *)((char *)&v18[8] + 13) = *(_OWORD *)((char *)a1 + 141);
  v8 = a1[3];
  v18[2] = a1[2];
  v18[3] = v8;
  v9 = a1[5];
  v18[4] = a1[4];
  v18[5] = v9;
  v10 = a1[1];
  v18[0] = *a1;
  v18[1] = v10;
  *(_OWORD *)((char *)&v18[18] + 13) = *(__int128 *)((char *)a2 + 141);
  v11 = a2[6];
  v12 = a2[8];
  v18[17] = a2[7];
  v18[18] = v12;
  v13 = a2[2];
  v14 = a2[4];
  v15 = a2[5];
  v18[13] = a2[3];
  v18[14] = v14;
  v18[15] = v15;
  v18[16] = v11;
  v18[10] = v6;
  v18[11] = v7;
  v18[12] = v13;
  v16 = *a3;
  result = memcpy(a4, v18, 0x13DuLL);
  a4[317] = v16;
  return result;
}

uint64_t DigiBarCruiseControlConfiguration.assets.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t DigiBarCruiseControlConfiguration.hash(into:)(uint64_t a1)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16[8];
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[29];

  v3 = v1[7];
  v31 = v1[6];
  v32 = v3;
  *(_OWORD *)v33 = v1[8];
  *(_OWORD *)&v33[13] = *(__int128 *)((char *)v1 + 141);
  v4 = v1[3];
  v27 = v1[2];
  v28 = v4;
  v5 = v1[5];
  v29 = v1[4];
  v30 = v5;
  v6 = v1[1];
  v25 = *v1;
  v26 = v6;
  v7 = v1[17];
  v16[6] = v1[16];
  v16[7] = v7;
  v17[0] = v1[18];
  *(_OWORD *)((char *)v17 + 13) = *(__int128 *)((char *)v1 + 301);
  v8 = v1[13];
  v16[2] = v1[12];
  v16[3] = v8;
  v9 = v1[15];
  v16[4] = v1[14];
  v16[5] = v9;
  v10 = v1[11];
  v16[0] = v1[10];
  v16[1] = v10;
  v11 = v25;
  v12 = v26;
  if (!(_QWORD)v25)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v25);
    sub_2378DE3E0(*((uint64_t *)&v11 + 1));
    if (*((_QWORD *)&v11 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v13 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v25);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v11 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v11);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, *((uint64_t *)&v11 + 1));
  sub_237A885EC();
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v12);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v11 + 1));
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)&v11 + 1);
LABEL_9:
  sub_2378706C8(v13);
  if (((DWORD2(v29) | (unint64_t)((uint64_t)SBYTE12(v29) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v14 = *((_QWORD *)&v30 + 1);
  v18 = *((_QWORD *)&v30 + 1);
  v19 = v31;
  v20 = v32;
  v21 = *(_OWORD *)v33;
  v22 = *(_QWORD *)&v33[16];
  v24 = v33[28];
  v23 = *(_DWORD *)&v33[24];
  sub_237A885F8();
  sub_2378DE3E0(v14);
  sub_2379E741C(a1);
  sub_2378706C8(v14);
  sub_2379E7E60((uint64_t)&v25);
  sub_2379E7DB8((uint64_t)v16);
  sub_2379E27BC(v16);
  sub_2379E7E60((uint64_t)v16);
  return sub_237A885E0();
}

unint64_t sub_237A2B8F4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001DLL;
}

uint64_t sub_237A2B94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A30E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A2B970()
{
  sub_237A2D83C();
  return sub_237A88718();
}

uint64_t sub_237A2B998()
{
  sub_237A2D83C();
  return sub_237A88724();
}

uint64_t DigiBarCruiseControlConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[3];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828260);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_BYTE *)v3 + 317);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A2D83C();
  sub_237A886B8();
  v10 = v3[7];
  v27 = v3[6];
  v28 = v10;
  v29[0] = v3[8];
  *(_OWORD *)((char *)v29 + 13) = *(__int128 *)((char *)v3 + 141);
  v11 = v3[3];
  v23 = v3[2];
  v24 = v11;
  v12 = v3[5];
  v25 = v3[4];
  v26 = v12;
  v13 = v3[1];
  v21 = *v3;
  v22 = v13;
  v20 = 0;
  sub_2379E7B00();
  sub_237A882B0();
  if (!v2)
  {
    v14 = v3[17];
    v27 = v3[16];
    v28 = v14;
    v29[0] = v3[18];
    *(_OWORD *)((char *)v29 + 13) = *(__int128 *)((char *)v3 + 301);
    v15 = v3[13];
    v23 = v3[12];
    v24 = v15;
    v16 = v3[15];
    v25 = v3[14];
    v26 = v16;
    v17 = v3[11];
    v21 = v3[10];
    v22 = v17;
    v20 = 1;
    sub_237A882B0();
    LOBYTE(v21) = v9;
    v20 = 2;
    sub_237A2D880();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DigiBarCruiseControlConfiguration.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[72];
  __int128 v15[8];
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[29];

  v1 = v0[7];
  v31 = v0[6];
  v32 = v1;
  *(_OWORD *)v33 = v0[8];
  *(_OWORD *)&v33[13] = *(__int128 *)((char *)v0 + 141);
  v2 = v0[3];
  v27 = v0[2];
  v28 = v2;
  v3 = v0[5];
  v29 = v0[4];
  v30 = v3;
  v4 = v0[1];
  v25 = *v0;
  v26 = v4;
  v5 = v0[17];
  v15[6] = v0[16];
  v15[7] = v5;
  v16[0] = v0[18];
  *(_OWORD *)((char *)v16 + 13) = *(__int128 *)((char *)v0 + 301);
  v6 = v0[13];
  v15[2] = v0[12];
  v15[3] = v6;
  v7 = v0[15];
  v15[4] = v0[14];
  v15[5] = v7;
  v8 = v0[11];
  v15[0] = v0[10];
  v15[1] = v8;
  sub_237A885D4();
  v9 = v25;
  v10 = v26;
  if (!(_QWORD)v25)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v25);
    sub_2378DE3E0(*((uint64_t *)&v9 + 1));
    if (*((_QWORD *)&v9 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v11 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v25);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v14, v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v14, *((uint64_t *)&v9 + 1));
  sub_237A885EC();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v14, v10);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)&v9 + 1);
LABEL_9:
  sub_2378706C8(v11);
  if (((DWORD2(v29) | (unint64_t)((uint64_t)SBYTE12(v29) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v12 = *((_QWORD *)&v30 + 1);
  v17 = *((_QWORD *)&v30 + 1);
  v18 = v31;
  v19 = v32;
  v20 = *(_QWORD *)v33;
  v21 = *(_QWORD *)&v33[8];
  v22 = *(_QWORD *)&v33[16];
  v24 = v33[28];
  v23 = *(_DWORD *)&v33[24];
  sub_237A885F8();
  sub_2378DE3E0(v12);
  sub_2379E741C((uint64_t)v14);
  sub_2378706C8(v12);
  sub_2379E7E60((uint64_t)&v25);
  sub_2379E7DB8((uint64_t)v15);
  sub_2379E27BC(v15);
  sub_2379E7E60((uint64_t)v15);
  sub_237A885E0();
  return sub_237A88610();
}

_QWORD *DigiBarCruiseControlConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  _OWORD v12[20];
  _BYTE v13[317];
  char v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[29];
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[29];
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];
  _OWORD v55[21];
  _QWORD *v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828278);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_237A2D83C();
  sub_237A88688();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v56);
  v45 = 0;
  sub_2379E7BCC();
  sub_237A881F0();
  v42 = v52;
  v43 = v53;
  *(_OWORD *)v44 = v54[0];
  *(_OWORD *)&v44[13] = *(_OWORD *)((char *)v54 + 13);
  v38 = v48;
  v39 = v49;
  v40 = v50;
  v41 = v51;
  v36 = v46;
  v37 = v47;
  v55[6] = v52;
  v55[7] = v53;
  v55[8] = v54[0];
  *(_OWORD *)((char *)&v55[8] + 13) = *(_OWORD *)((char *)v54 + 13);
  v55[2] = v48;
  v55[3] = v49;
  v55[4] = v50;
  v55[5] = v51;
  v55[0] = v46;
  v55[1] = v47;
  v26 = 1;
  sub_2379E7DB8((uint64_t)&v36);
  sub_237A881F0();
  v23 = v33;
  v24 = v34;
  *(_OWORD *)v25 = v35[0];
  *(_OWORD *)&v25[13] = *(_OWORD *)((char *)v35 + 13);
  v19 = v29;
  v20 = v30;
  v21 = v31;
  v22 = v32;
  v17 = v27;
  v18 = v28;
  *(_OWORD *)((char *)&v55[18] + 13) = *(_OWORD *)((char *)v35 + 13);
  v55[16] = v33;
  v55[17] = v34;
  v55[18] = v35[0];
  v55[12] = v29;
  v55[13] = v30;
  v55[14] = v31;
  v55[15] = v32;
  v55[10] = v27;
  v55[11] = v28;
  v15 = 2;
  sub_2379E7DB8((uint64_t)&v17);
  sub_237A2D8C4();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12[6] = v42;
  v12[7] = v43;
  v12[8] = *(_OWORD *)v44;
  *(_OWORD *)((char *)&v12[8] + 13) = *(_OWORD *)&v44[13];
  v12[2] = v38;
  v12[3] = v39;
  v12[4] = v40;
  v12[5] = v41;
  v12[0] = v36;
  v12[1] = v37;
  *(_OWORD *)((char *)&v12[18] + 13) = *(_OWORD *)&v25[13];
  v12[17] = v24;
  v12[18] = *(_OWORD *)v25;
  v12[13] = v20;
  v12[14] = v21;
  v12[15] = v22;
  v12[16] = v23;
  v12[10] = v17;
  v12[11] = v18;
  v10 = v16;
  v12[12] = v19;
  BYTE13(v12[19]) = v16;
  sub_237A2D908(v12);
  sub_2379E7E60((uint64_t)&v17);
  sub_2379E7E60((uint64_t)&v36);
  memcpy(a2, v12, 0x13EuLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v56);
  memcpy(v13, v55, sizeof(v13));
  v14 = v10;
  return sub_237A2DA28(v13);
}

_QWORD *sub_237A2C478@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return DigiBarCruiseControlConfiguration.init(from:)(a1, a2);
}

uint64_t sub_237A2C48C(_QWORD *a1)
{
  return DigiBarCruiseControlConfiguration.encode(to:)(a1);
}

uint64_t sub_237A2C4A8()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[72];
  __int128 v15[8];
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[29];

  v1 = v0[7];
  v31 = v0[6];
  v32 = v1;
  *(_OWORD *)v33 = v0[8];
  *(_OWORD *)&v33[13] = *(__int128 *)((char *)v0 + 141);
  v2 = v0[3];
  v27 = v0[2];
  v28 = v2;
  v3 = v0[5];
  v29 = v0[4];
  v30 = v3;
  v4 = v0[1];
  v25 = *v0;
  v26 = v4;
  v5 = v0[17];
  v15[6] = v0[16];
  v15[7] = v5;
  v16[0] = v0[18];
  *(_OWORD *)((char *)v16 + 13) = *(__int128 *)((char *)v0 + 301);
  v6 = v0[13];
  v15[2] = v0[12];
  v15[3] = v6;
  v7 = v0[15];
  v15[4] = v0[14];
  v15[5] = v7;
  v8 = v0[11];
  v15[0] = v0[10];
  v15[1] = v8;
  sub_237A885D4();
  v9 = v25;
  v10 = v26;
  if (!(_QWORD)v25)
  {
    sub_237A885EC();
    sub_2379E7DB8((uint64_t)&v25);
    sub_2378DE3E0(*((uint64_t *)&v9 + 1));
    if (*((_QWORD *)&v9 + 1))
      goto LABEL_3;
LABEL_7:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    v11 = 0;
    goto LABEL_9;
  }
  sub_237A885EC();
  sub_2379E7DB8((uint64_t)&v25);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(*((uint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v14, v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_7;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v14, *((uint64_t *)&v9 + 1));
  sub_237A885EC();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v14, v10);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(*((uint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)&v9 + 1);
LABEL_9:
  sub_2378706C8(v11);
  if (((DWORD2(v29) | (unint64_t)((uint64_t)SBYTE12(v29) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  v12 = *((_QWORD *)&v30 + 1);
  v17 = *((_QWORD *)&v30 + 1);
  v18 = v31;
  v19 = v32;
  v20 = *(_QWORD *)v33;
  v21 = *(_QWORD *)&v33[8];
  v22 = *(_QWORD *)&v33[16];
  v24 = v33[28];
  v23 = *(_DWORD *)&v33[24];
  sub_237A885F8();
  sub_2378DE3E0(v12);
  sub_2379E741C((uint64_t)v14);
  sub_2378706C8(v12);
  sub_2379E7E60((uint64_t)&v25);
  sub_2379E7DB8((uint64_t)v15);
  sub_2379E27BC(v15);
  sub_2379E7E60((uint64_t)v15);
  sub_237A885E0();
  return sub_237A88610();
}

BOOL _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(float *)(a1 + 40) == *(float *)(a2 + 40)&& *(float *)(a1 + 44) == *(float *)(a2 + 44)&& *(float *)(a1 + 48) == *(float *)(a2 + 48)&& ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0)
  {
    return *(unsigned __int8 *)(a1 + 52) == *(unsigned __int8 *)(a2 + 52);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(float32x4_t *a1, float32x4_t *a2)
{
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*a1, *a2)), 0xFuLL))) & 1) != 0)
    return (a2[1].u8[0] ^ a1[1].u8[0] ^ 1) & 1;
  else
    return 0;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  BOOL v15;
  _QWORD v17[2];
  char v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  char v22;
  _QWORD v23[2];
  char v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  char v28;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((unsigned int *)a1 + 12) | (unint64_t)((uint64_t)*((char *)a1 + 52) << 32);
  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *((unsigned int *)a2 + 12) | (unint64_t)((uint64_t)*((char *)a2 + 52) << 32);
  if ((v5 & 0x8000000000000000) == 0)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      v10 = *(_OWORD *)(a2 + 3);
      v11 = a2[5];
      v12 = a1[5];
      v23[0] = *a1;
      v23[1] = v2;
      v24 = v4 & 1;
      v25 = *(_OWORD *)(a1 + 3);
      v26 = v12;
      v27 = v5;
      v28 = BYTE4(v5);
      v17[0] = v7;
      v17[1] = v6;
      v18 = v8 & 1;
      v19 = v10;
      v20 = v11;
      v21 = v9;
      v22 = BYTE4(v9);
      return _s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v17);
    }
    return 0;
  }
  if ((v9 & 0x8000000000000000) == 0)
    return 0;
  v14 = a2[1];
  v15 = *(float *)&v3 == *(float *)&v7;
  if (*((float *)&v3 + 1) != *((float *)&v7 + 1))
    v15 = 0;
  if (*(float *)&v2 != *(float *)&v14)
    v15 = 0;
  if (*((float *)&v2 + 1) != *((float *)&v14 + 1))
    v15 = 0;
  return v15 & (((a2[2] & 1) == 0) ^ v4);
}

BOOL _s14CarPlayAssetUI27DigiBarRedlineConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];
  int v38;
  char v39;
  uint64_t v40[6];
  int v41;
  char v42;

  v35 = *(_QWORD *)(a1 + 16);
  v36 = *(_QWORD *)(a1 + 8);
  v33 = *(_QWORD *)(a1 + 32);
  v34 = *(_QWORD *)(a1 + 24);
  v31 = *(_QWORD *)(a1 + 48);
  v32 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 56);
  v30 = *(unsigned __int8 *)(a1 + 68);
  v2 = *(unsigned int *)(a1 + 64);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(unsigned __int8 *)(a2 + 68);
  v11 = *(unsigned int *)(a2 + 64);
  if ((sub_2379B7304(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v23 = v11;
  v24 = v10;
  v25 = v2;
  v26 = v9;
  v27 = v6;
  v28 = v4;
  if (v36)
  {
    if (v3)
    {
      v12 = v8;
      v13 = v35;
      v14 = v33;
      v15 = v32;
      v16 = v31;
      v17 = v30;
      v18 = v7;
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v22 = sub_2379B7304(v19, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_5;
    }
    return 0;
  }
  v18 = v7;
  v12 = v8;
  v13 = v35;
  v14 = v33;
  v15 = v32;
  v16 = v31;
  v17 = v30;
  if (v3)
    return 0;
LABEL_5:
  v40[0] = v13;
  v40[1] = v34;
  v40[2] = v14;
  v40[3] = v15;
  v40[4] = v16;
  v40[5] = v29;
  v41 = v25;
  v42 = (v25 | (unint64_t)(v17 << 32)) >> 32;
  v37[0] = v28;
  v37[1] = v5;
  v37[2] = v27;
  v37[3] = v18;
  v37[4] = v12;
  v37[5] = v26;
  v39 = (v23 | (unint64_t)(v24 << 32)) >> 32;
  v38 = v23;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0(v40, v37);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(__int128 *a1, __int128 *a2)
{
  float v2;
  uint64_t v3;
  float v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _BOOL8 result;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char v96;

  v67 = *((_QWORD *)a1 + 4);
  v68 = *((_QWORD *)a1 + 3);
  v65 = *((_QWORD *)a1 + 6);
  v66 = *((_QWORD *)a1 + 5);
  v63 = *((_QWORD *)a1 + 8);
  v64 = *((_QWORD *)a1 + 7);
  v62 = *((unsigned __int8 *)a1 + 76);
  v61 = *((unsigned int *)a1 + 18);
  v2 = *((float *)a1 + 20);
  v46 = *(__int128 *)((char *)a1 + 88);
  v47 = *((_QWORD *)a1 + 13);
  v48 = *((_QWORD *)a1 + 14);
  v49 = *((_QWORD *)a1 + 15);
  v50 = *((_QWORD *)a1 + 16);
  v51 = *((_QWORD *)a1 + 17);
  v52 = *((_QWORD *)a1 + 18);
  v45 = *((unsigned __int8 *)a1 + 156);
  v44 = *((unsigned int *)a1 + 38);
  v3 = *((_QWORD *)a2 + 2);
  v59 = *((_QWORD *)a2 + 4);
  v60 = *((_QWORD *)a2 + 3);
  v57 = *((_QWORD *)a2 + 6);
  v58 = *((_QWORD *)a2 + 5);
  v55 = *((_QWORD *)a2 + 8);
  v56 = *((_QWORD *)a2 + 7);
  v54 = *((unsigned __int8 *)a2 + 76);
  v53 = *((unsigned int *)a2 + 18);
  v4 = *((float *)a2 + 20);
  v5 = *a1;
  v6 = *((_QWORD *)a2 + 11);
  v7 = *((_QWORD *)a2 + 12);
  v79 = *((_QWORD *)a1 + 2);
  v70 = v3;
  v9 = *((_QWORD *)a2 + 13);
  v8 = *((_QWORD *)a2 + 14);
  v78 = v5;
  v10 = *((_QWORD *)a2 + 15);
  v11 = *((_QWORD *)a2 + 16);
  v12 = *((_QWORD *)a2 + 17);
  v13 = *((_QWORD *)a2 + 18);
  v14 = *((unsigned __int8 *)a2 + 156);
  v15 = *((unsigned int *)a2 + 38);
  v69 = *a2;
  if ((_s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV2eeoiySbAG_AGtFZ_0(&v78, (uint64_t *)&v69) & 1) == 0)return 0;
  v37 = v9;
  v38 = v6;
  v39 = v8;
  v40 = v7;
  v41 = v11;
  v42 = v12;
  v43 = v13;
  *(_QWORD *)&v78 = v68;
  *((_QWORD *)&v78 + 1) = v67;
  v79 = v66;
  v80 = v65;
  v81 = v64;
  v82 = v63;
  LODWORD(v83) = v61;
  BYTE4(v83) = (v61 | (unint64_t)(v62 << 32)) >> 32;
  *(_QWORD *)&v69 = v60;
  *((_QWORD *)&v69 + 1) = v59;
  v70 = v58;
  v71 = v57;
  v72 = v56;
  v73 = v55;
  BYTE4(v74) = (v53 | (unint64_t)(v54 << 32)) >> 32;
  LODWORD(v74) = v53;
  v16 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV0G0O2eeoiySbAI_AItFZ_0((uint64_t *)&v78, (uint64_t *)&v69);
  result = 0;
  if (v16 && v2 == v4)
  {
    v18 = v44 | (v45 << 32);
    v19 = v15 | (v14 << 32);
    v20 = HIDWORD(v18);
    if ((_QWORD)v46)
    {
      v22 = *((_QWORD *)&v46 + 1);
      v21 = v47;
      v78 = v46;
      v24 = v48;
      v23 = v49;
      v79 = v47;
      v80 = v48;
      v26 = v50;
      v25 = v51;
      v81 = v49;
      v82 = v50;
      v27 = v52;
      v83 = v51;
      v84 = v52;
      v85 = v44;
      v86 = (v44 | (unint64_t)(v45 << 32)) >> 32;
      if (v38)
      {
        *(_QWORD *)&v69 = v38;
        *((_QWORD *)&v69 + 1) = v40;
        v70 = v37;
        v71 = v39;
        v72 = v10;
        v73 = v41;
        v74 = v42;
        v75 = v43;
        v76 = v19;
        v77 = BYTE4(v19);
        sub_2378DE3E0(v46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28 = _s14CarPlayAssetUI27DigiBarRedlineConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)&v78, (uint64_t)&v69);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2378706C8(v46);
        return v28;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v18) = v44;
      v36 = v37;
      v35 = 0;
      v33 = v39;
      v34 = v10;
      v31 = v40;
      v32 = v41;
      v29 = v42;
      v30 = v43;
    }
    else
    {
      v25 = v51;
      v27 = v52;
      v23 = v49;
      v26 = v50;
      v21 = v47;
      v24 = v48;
      v22 = *((_QWORD *)&v46 + 1);
      v29 = v42;
      v30 = v43;
      v31 = v40;
      v32 = v41;
      v33 = v39;
      v34 = v10;
      v36 = v37;
      v35 = v38;
      if (!v38)
        return 1;
    }
    *(_QWORD *)&v78 = v46;
    *((_QWORD *)&v78 + 1) = v22;
    v79 = v21;
    v80 = v24;
    v81 = v23;
    v82 = v26;
    v83 = v25;
    v84 = v27;
    v85 = v18;
    v86 = v20;
    v87 = v35;
    v88 = v31;
    v89 = v36;
    v90 = v33;
    v91 = v34;
    v92 = v32;
    v93 = v29;
    v94 = v30;
    v95 = v19;
    v96 = BYTE4(v19);
    sub_2378DE3E0(v35);
    sub_237A30FFC((uint64_t *)&v78);
    return 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = InstrumentDataIdentifier.rawValue.getter();
  v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v4 & 1) == 0)
      return v5 & 1;
  }
  v6 = InstrumentDataIdentifier.rawValue.getter();
  v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v10 & 1) == 0)
      return v5 & 1;
  }
  v11 = InstrumentDataIdentifier.rawValue.getter();
  v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v15 & 1) == 0)
      return v5 & 1;
  }
  v16 = InstrumentDataIdentifier.rawValue.getter();
  v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v20 & 1) == 0)
      return v5 & 1;
  }
  v21 = InstrumentDataIdentifier.rawValue.getter();
  v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24)
    v5 = 1;
  else
    v5 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_237A2D2A4()
{
  unint64_t result;

  result = qword_256828168;
  if (!qword_256828168)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA773C, &type metadata for DigiBarRadialStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828168);
  }
  return result;
}

unint64_t sub_237A2D2E8()
{
  unint64_t result;

  result = qword_256828180;
  if (!qword_256828180)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA76EC, &type metadata for DigiBarLinearStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828180);
  }
  return result;
}

unint64_t sub_237A2D32C()
{
  unint64_t result;

  result = qword_256828198;
  if (!qword_256828198)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA769C, &type metadata for PowermeterDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828198);
  }
  return result;
}

unint64_t sub_237A2D370()
{
  unint64_t result;

  result = qword_2568281C0;
  if (!qword_2568281C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA764C, &_s20DigiBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568281C0);
  }
  return result;
}

unint64_t sub_237A2D3B4()
{
  unint64_t result;

  result = qword_2568281C8;
  if (!qword_2568281C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA75FC, &_s20DigiBarConfigurationV5StyleO16LinearCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568281C8);
  }
  return result;
}

unint64_t sub_237A2D3F8()
{
  unint64_t result;

  result = qword_2568281D0;
  if (!qword_2568281D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA75AC, &_s20DigiBarConfigurationV5StyleO16RadialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568281D0);
  }
  return result;
}

unint64_t sub_237A2D43C()
{
  unint64_t result;

  result = qword_2568281F8;
  if (!qword_2568281F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA755C, &_s20DigiBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568281F8);
  }
  return result;
}

unint64_t sub_237A2D480()
{
  unint64_t result;

  result = qword_256828200;
  if (!qword_256828200)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRedlineConfiguration, &type metadata for DigiBarRedlineConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828200);
  }
  return result;
}

unint64_t sub_237A2D4C4()
{
  unint64_t result;

  result = qword_256828210;
  if (!qword_256828210)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRedlineConfiguration, &type metadata for DigiBarRedlineConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828210);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI33DigiBarCruiseControlConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];

  v4 = *(_OWORD *)(a1 + 112);
  v38 = *(_OWORD *)(a1 + 96);
  v39 = v4;
  v40[0] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)((char *)v40 + 13) = *(_OWORD *)(a1 + 141);
  v5 = *(_OWORD *)(a1 + 48);
  v34 = *(_OWORD *)(a1 + 32);
  v35 = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v36 = *(_OWORD *)(a1 + 64);
  v37 = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v32 = *(_OWORD *)a1;
  v33 = v7;
  v8 = *(unsigned __int8 *)(a1 + 317);
  v9 = *(_OWORD *)(a2 + 112);
  v29 = *(_OWORD *)(a2 + 96);
  v30 = v9;
  v31[0] = *(_OWORD *)(a2 + 128);
  *(_OWORD *)((char *)v31 + 13) = *(_OWORD *)(a2 + 141);
  v10 = *(_OWORD *)(a2 + 48);
  v25 = *(_OWORD *)(a2 + 32);
  v26 = v10;
  v11 = *(_OWORD *)(a2 + 80);
  v27 = *(_OWORD *)(a2 + 64);
  v28 = v11;
  v12 = *(_OWORD *)(a2 + 16);
  v23 = *(_OWORD *)a2;
  v24 = v12;
  v13 = *(unsigned __int8 *)(a2 + 317);
  if (!_s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v32, &v23))
    return 0;
  v14 = *(_OWORD *)(a1 + 272);
  v38 = *(_OWORD *)(a1 + 256);
  v39 = v14;
  v40[0] = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 208);
  v34 = *(_OWORD *)(a1 + 192);
  v35 = v15;
  v16 = *(_OWORD *)(a1 + 240);
  v36 = *(_OWORD *)(a1 + 224);
  v37 = v16;
  v17 = *(_OWORD *)(a1 + 176);
  v32 = *(_OWORD *)(a1 + 160);
  v33 = v17;
  *(_OWORD *)((char *)v40 + 13) = *(_OWORD *)(a1 + 301);
  v18 = *(_OWORD *)(a2 + 272);
  v29 = *(_OWORD *)(a2 + 256);
  v30 = v18;
  v31[0] = *(_OWORD *)(a2 + 288);
  *(_OWORD *)((char *)v31 + 13) = *(_OWORD *)(a2 + 301);
  v19 = *(_OWORD *)(a2 + 208);
  v25 = *(_OWORD *)(a2 + 192);
  v26 = v19;
  v20 = *(_OWORD *)(a2 + 240);
  v27 = *(_OWORD *)(a2 + 224);
  v28 = v20;
  v21 = *(_OWORD *)(a2 + 176);
  v23 = *(_OWORD *)(a2 + 160);
  v24 = v21;
  return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO20DigiBarConfigurationV2eeoiySbAG_AGtFZ_0(&v32, &v23) & (v8 == v13);
}

BOOL _s14CarPlayAssetUI24DigiBarMaskConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  float v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  _QWORD v19[2];
  char v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  char v24;
  _QWORD v25[2];
  char v26;
  __int128 v27;
  uint64_t v28;
  int v29;
  char v30;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((unsigned int *)a1 + 12) | (unint64_t)((uint64_t)*((char *)a1 + 52) << 32);
  v6 = *((float *)a1 + 14);
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = *((unsigned int *)a2 + 12) | (unint64_t)((uint64_t)*((char *)a2 + 52) << 32);
  v11 = *((float *)a2 + 14);
  if ((v5 & 0x8000000000000000) != 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      v16 = *(float *)&v3 == *(float *)&v8 && *((float *)&v3 + 1) == *((float *)&v8 + 1);
      v17 = v16 && *(float *)&v2 == *(float *)&v7;
      v18 = v17 && *((float *)&v2 + 1) == *((float *)&v7 + 1);
      if (v18 && ((v9 ^ v4) & 1) == 0)
        return v6 == v11;
    }
  }
  else if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = *(_OWORD *)(a2 + 3);
    v13 = a2[5];
    v14 = a1[5];
    v25[0] = *a1;
    v25[1] = v2;
    v26 = v4 & 1;
    v27 = *(_OWORD *)(a1 + 3);
    v28 = v14;
    v29 = v5;
    v30 = BYTE4(v5);
    v19[0] = v8;
    v19[1] = v7;
    v20 = v9 & 1;
    v21 = v12;
    v22 = v13;
    v23 = v10;
    v24 = BYTE4(v10);
    if (_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v19))
      return v6 == v11;
  }
  return 0;
}

unint64_t sub_237A2D770()
{
  unint64_t result;

  result = qword_256828220;
  if (!qword_256828220)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA750C, &type metadata for DigiBarMaskConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828220);
  }
  return result;
}

unint64_t sub_237A2D7B4()
{
  unint64_t result;

  result = qword_256828238;
  if (!qword_256828238)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA74BC, &type metadata for DigiBarRedlineConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828238);
  }
  return result;
}

unint64_t sub_237A2D7F8()
{
  unint64_t result;

  result = qword_256828250;
  if (!qword_256828250)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA746C, &type metadata for DigiBandGradientProgressConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828250);
  }
  return result;
}

unint64_t sub_237A2D83C()
{
  unint64_t result;

  result = qword_256828268;
  if (!qword_256828268)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA741C, &type metadata for DigiBarCruiseControlConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828268);
  }
  return result;
}

unint64_t sub_237A2D880()
{
  unint64_t result;

  result = qword_256828270;
  if (!qword_256828270)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarCruiseControlConfiguration.BarType, &type metadata for DigiBarCruiseControlConfiguration.BarType);
    atomic_store(result, (unint64_t *)&qword_256828270);
  }
  return result;
}

unint64_t sub_237A2D8C4()
{
  unint64_t result;

  result = qword_256828280;
  if (!qword_256828280)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarCruiseControlConfiguration.BarType, &type metadata for DigiBarCruiseControlConfiguration.BarType);
    atomic_store(result, (unint64_t *)&qword_256828280);
  }
  return result;
}

_QWORD *sub_237A2D908(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v5 = a1[11];
  v4 = a1[21];
  v6 = a1[31];
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v2);
  sub_2378DE3E0(v5);
  swift_bridgeObjectRetain();
  sub_2378DE3E0(v4);
  sub_2378DE3E0(v6);
  return a1;
}

_QWORD *sub_237A2DA28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v5 = a1[11];
  v4 = a1[21];
  v6 = a1[31];
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  sub_2378706C8(v5);
  swift_bridgeObjectRelease();
  sub_2378706C8(v4);
  sub_2378706C8(v6);
  return a1;
}

unint64_t sub_237A2DB4C()
{
  unint64_t result;

  result = qword_256828288;
  if (!qword_256828288)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle.LineCap, &type metadata for DigiBarRadialStyle.LineCap);
    atomic_store(result, (unint64_t *)&qword_256828288);
  }
  return result;
}

unint64_t sub_237A2DB9C()
{
  unint64_t result;

  result = qword_2568282C0;
  if (!qword_2568282C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle, &type metadata for DigiBarRadialStyle);
    atomic_store(result, (unint64_t *)&qword_2568282C0);
  }
  return result;
}

unint64_t sub_237A2DBE4()
{
  unint64_t result;

  result = qword_2568282C8;
  if (!qword_2568282C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarLinearStyle, &type metadata for DigiBarLinearStyle);
    atomic_store(result, (unint64_t *)&qword_2568282C8);
  }
  return result;
}

unint64_t sub_237A2DC2C()
{
  unint64_t result;

  result = qword_2568282D0;
  if (!qword_2568282D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for PowermeterDataIdentifiers, &type metadata for PowermeterDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_2568282D0);
  }
  return result;
}

unint64_t sub_237A2DC7C()
{
  unint64_t result;

  result = qword_256828308;
  if (!qword_256828308)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256828308);
  }
  return result;
}

unint64_t sub_237A2DCC4()
{
  unint64_t result;

  result = qword_256828310;
  if (!qword_256828310)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828310);
  }
  return result;
}

unint64_t sub_237A2DD0C()
{
  unint64_t result;

  result = qword_256828318;
  if (!qword_256828318)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarMaskConfiguration, &type metadata for DigiBarMaskConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828318);
  }
  return result;
}

unint64_t sub_237A2DD54()
{
  unint64_t result;

  result = qword_256828320;
  if (!qword_256828320)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRedlineConfiguration, &type metadata for DigiBarRedlineConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828320);
  }
  return result;
}

unint64_t sub_237A2DD9C()
{
  unint64_t result;

  result = qword_256828328;
  if (!qword_256828328)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBandGradientProgressConfiguration, &type metadata for DigiBandGradientProgressConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828328);
  }
  return result;
}

unint64_t sub_237A2DDF4()
{
  unint64_t result;

  result = qword_256828390;
  if (!qword_256828390)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarCruiseControlConfiguration.BarType, &type metadata for DigiBarCruiseControlConfiguration.BarType);
    atomic_store(result, (unint64_t *)&qword_256828390);
  }
  return result;
}

unint64_t sub_237A2DE3C()
{
  unint64_t result;

  result = qword_256828398;
  if (!qword_256828398)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarCruiseControlConfiguration, &type metadata for DigiBarCruiseControlConfiguration);
    atomic_store(result, (unint64_t *)&qword_256828398);
  }
  return result;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarRadialStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarRadialStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle()
{
  return &type metadata for DigiBarRadialStyle;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle.LineCap()
{
  return &type metadata for DigiBarRadialStyle.LineCap;
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarLinearStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarLinearStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarLinearStyle()
{
  return &type metadata for DigiBarLinearStyle;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PowermeterDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xC9 && a1[5])
    return (*(_DWORD *)a1 + 201);
  v3 = *a1;
  v4 = v3 >= 0x38;
  v5 = v3 - 56;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PowermeterDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC8)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 201;
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xC9)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 55;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowermeterDataIdentifiers()
{
  return &type metadata for PowermeterDataIdentifiers;
}

uint64_t _s20DigiBarConfigurationVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20DigiBarConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
  }
  return a1;
}

uint64_t _s20DigiBarConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23798066C(a1 + 8);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  v5 = *(_OWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  v8 = (_OWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v11 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_OWORD *)(a2 + 104);
      v13 = *(_OWORD *)(a2 + 120);
      v14 = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 120) = v13;
      *(_OWORD *)(a1 + 104) = v12;
    }
    else
    {
      sub_2379E90F4(a1 + 88);
      *v8 = *v11;
      v19 = *(_OWORD *)(a2 + 120);
      v18 = *(_OWORD *)(a2 + 136);
      v20 = *(_OWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
      *(_OWORD *)(a1 + 120) = v19;
      *(_OWORD *)(a1 + 136) = v18;
      *(_OWORD *)(a1 + 104) = v20;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v15 = *(_OWORD *)(a2 + 104);
    v16 = *(_OWORD *)(a2 + 120);
    v17 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    *(_OWORD *)(a1 + 136) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v8 = *v11;
    v21 = *(_OWORD *)(a2 + 104);
    v22 = *(_OWORD *)(a2 + 120);
    v23 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = v23;
    *(_OWORD *)(a1 + 104) = v21;
  }
  return a1;
}

__n128 __swift_memcpy157_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 141) = *(_OWORD *)(a2 + 141);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s20DigiBarConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23798066C(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_6:
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (!v6)
  {
LABEL_10:
    v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    return a1;
  }
  if (!v5)
  {
    sub_2379E90F4(a1 + 88);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
  return a1;
}

uint64_t _s20DigiBarConfigurationVwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 157))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s20DigiBarConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 156) = 0;
    *(_DWORD *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 157) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 2 * -a2;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = 0;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 69) = 0;
      return result;
    }
    *(_BYTE *)(result + 157) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarConfiguration;
}

uint64_t _s20DigiBarConfigurationV5StyleOwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 53))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s20DigiBarConfigurationV5StyleOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 45) = 0;
      return result;
    }
    *(_BYTE *)(result + 53) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_237A2E6CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 52) >> 7;
}

uint64_t sub_237A2E6D8(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 48);
  result = a1 + 48;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x7F;
  return result;
}

uint64_t sub_237A2E6F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v3;
  unint64_t v4;

  v3 = *(_DWORD *)(a1 + 48);
  result = a1 + 48;
  v4 = (a2 << 39) | ((unint64_t)(*(_BYTE *)(result + 4) & 3) << 32);
  *(_QWORD *)(result - 32) &= 1uLL;
  *(_DWORD *)result = v3;
  *(_BYTE *)(result + 4) = BYTE4(v4);
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarConfiguration.Style()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style;
}

__n128 __swift_memcpy60_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigiBarMaskConfiguration(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 60))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarMaskConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 60) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 45) = 0;
      return result;
    }
    *(_BYTE *)(result + 60) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMaskConfiguration()
{
  return &type metadata for DigiBarMaskConfiguration;
}

uint64_t initializeWithCopy for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 61) = *(_QWORD *)(a2 + 61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 61) = *(_QWORD *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy69_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 61) = *(_QWORD *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DigiBarRedlineConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 61) = *(_QWORD *)(a2 + 61);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarRedlineConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 69))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarRedlineConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 69) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 69) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRedlineConfiguration()
{
  return &type metadata for DigiBarRedlineConfiguration;
}

uint64_t initializeWithCopy for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 53) = *(_QWORD *)(a2 + 53);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  return a1;
}

__n128 __swift_memcpy61_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DigiBandGradientProgressConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBandGradientProgressConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 61))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBandGradientProgressConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 61) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBandGradientProgressConfiguration()
{
  return &type metadata for DigiBandGradientProgressConfiguration;
}

uint64_t destroy for DigiBarCruiseControlConfiguration(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[31];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
  }
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v12;
    *(_QWORD *)(a1 + 176) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  }
  v14 = *(_QWORD *)(a2 + 248);
  v15 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v15;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 229) = *(_QWORD *)(a2 + 229);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  if (v14)
  {
    v16 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = v14;
    *(_QWORD *)(a1 + 256) = v16;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v17;
    *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
    v18 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v18;
  }
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  return a1;
}

uint64_t assignWithCopy for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23798066C(a1 + 8);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  v5 = *(_OWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  v8 = (_OWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v11 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_OWORD *)(a2 + 104);
      v13 = *(_OWORD *)(a2 + 120);
      v14 = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
      *(_OWORD *)(a1 + 136) = v14;
      *(_OWORD *)(a1 + 120) = v13;
      *(_OWORD *)(a1 + 104) = v12;
    }
    else
    {
      sub_2379E90F4(a1 + 88);
      *v8 = *v11;
      v19 = *(_OWORD *)(a2 + 120);
      v18 = *(_OWORD *)(a2 + 136);
      v20 = *(_OWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
      *(_OWORD *)(a1 + 120) = v19;
      *(_OWORD *)(a1 + 136) = v18;
      *(_OWORD *)(a1 + 104) = v20;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v15 = *(_OWORD *)(a2 + 104);
    v16 = *(_OWORD *)(a2 + 120);
    v17 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    *(_OWORD *)(a1 + 136) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v8 = *v11;
    v21 = *(_OWORD *)(a2 + 104);
    v22 = *(_OWORD *)(a2 + 120);
    v23 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = v23;
    *(_OWORD *)(a1 + 104) = v21;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 168) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_23798066C(a1 + 168);
  }
  else if (v24)
  {
    *(_QWORD *)(a1 + 168) = v24;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_22:
  v25 = *(_OWORD *)(a2 + 184);
  v26 = *(_OWORD *)(a2 + 200);
  v27 = *(_OWORD *)(a2 + 216);
  v28 = (_OWORD *)(a1 + 248);
  v29 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 229) = *(_QWORD *)(a2 + 229);
  *(_OWORD *)(a1 + 200) = v26;
  *(_OWORD *)(a1 + 216) = v27;
  *(_OWORD *)(a1 + 184) = v25;
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  v31 = (_OWORD *)(a2 + 248);
  v30 = *(_QWORD *)(a2 + 248);
  if (v29)
  {
    if (v30)
    {
      *(_QWORD *)(a1 + 248) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32 = *(_OWORD *)(a2 + 264);
      v33 = *(_OWORD *)(a2 + 280);
      v34 = *(_OWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
      *(_OWORD *)(a1 + 296) = v34;
      *(_OWORD *)(a1 + 280) = v33;
      *(_OWORD *)(a1 + 264) = v32;
    }
    else
    {
      sub_2379E90F4(a1 + 248);
      *v28 = *v31;
      v39 = *(_OWORD *)(a2 + 280);
      v38 = *(_OWORD *)(a2 + 296);
      v40 = *(_OWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
      *(_OWORD *)(a1 + 280) = v39;
      *(_OWORD *)(a1 + 296) = v38;
      *(_OWORD *)(a1 + 264) = v40;
    }
  }
  else if (v30)
  {
    *(_QWORD *)(a1 + 248) = v30;
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    v35 = *(_OWORD *)(a2 + 264);
    v36 = *(_OWORD *)(a2 + 280);
    v37 = *(_OWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
    *(_OWORD *)(a1 + 296) = v37;
    *(_OWORD *)(a1 + 280) = v36;
    *(_OWORD *)(a1 + 264) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v28 = *v31;
    v41 = *(_OWORD *)(a2 + 264);
    v42 = *(_OWORD *)(a2 + 280);
    v43 = *(_OWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
    *(_OWORD *)(a1 + 280) = v42;
    *(_OWORD *)(a1 + 296) = v43;
    *(_OWORD *)(a1 + 264) = v41;
  }
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  return a1;
}

void *__swift_memcpy318_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x13EuLL);
}

uint64_t assignWithTake for DigiBarCruiseControlConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23798066C(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_6:
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  if (v6)
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 88) = v5;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
      goto LABEL_11;
    }
    sub_2379E90F4(a1 + 88);
  }
  v8 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v8;
  *(_QWORD *)(a1 + 149) = *(_QWORD *)(a2 + 149);
  v9 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v9;
LABEL_11:
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 168) = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_23798066C(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_16:
  v11 = *(_QWORD *)(a2 + 248);
  v12 = *(_QWORD *)(a1 + 248);
  v13 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v13;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 229) = *(_QWORD *)(a2 + 229);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  if (!v12)
  {
LABEL_20:
    v14 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v14;
    *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
    v15 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v15;
    goto LABEL_21;
  }
  if (!v11)
  {
    sub_2379E90F4(a1 + 248);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 248) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 309) = *(_QWORD *)(a2 + 309);
LABEL_21:
  *(_BYTE *)(a1 + 317) = *(_BYTE *)(a2 + 317);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarCruiseControlConfiguration(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 318))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarCruiseControlConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 316) = 0;
    *(_DWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 318) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 2 * -a2;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 56) = 0;
      *(_QWORD *)(result + 64) = 0;
      *(_QWORD *)(result + 69) = 0;
      return result;
    }
    *(_BYTE *)(result + 318) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration()
{
  return &type metadata for DigiBarCruiseControlConfiguration;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration.BarType()
{
  return &type metadata for DigiBarCruiseControlConfiguration.BarType;
}

ValueMetadata *type metadata accessor for DigiBarCruiseControlConfiguration.CodingKeys()
{
  return &type metadata for DigiBarCruiseControlConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBandGradientProgressConfiguration.CodingKeys()
{
  return &type metadata for DigiBandGradientProgressConfiguration.CodingKeys;
}

uint64_t _s14CarPlayAssetUI18DigiBarRadialStyleV7LineCapOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237A2F570 + 4 * byte_237AA60F8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237A2F5A4 + 4 * byte_237AA60F3[v4]))();
}

uint64_t sub_237A2F5A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F5AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A2F5B4);
  return result;
}

uint64_t sub_237A2F5C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A2F5C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237A2F5CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F5D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRedlineConfiguration.CodingKeys()
{
  return &type metadata for DigiBarRedlineConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMaskConfiguration.CodingKeys()
{
  return &type metadata for DigiBarMaskConfiguration.CodingKeys;
}

uint64_t _s20DigiBarConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A2F64C + 4 * byte_237AA6102[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A2F680 + 4 * byte_237AA60FD[v4]))();
}

uint64_t sub_237A2F680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A2F690);
  return result;
}

uint64_t sub_237A2F69C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A2F6A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A2F6A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F6B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20DigiBarConfigurationV10CodingKeysOMa()
{
  return &_s20DigiBarConfigurationV10CodingKeysON;
}

uint64_t _s14CarPlayAssetUI37DigiBandGradientProgressConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A2F718 + 4 * byte_237AA610C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A2F74C + 4 * byte_237AA6107[v4]))();
}

uint64_t sub_237A2F74C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A2F75CLL);
  return result;
}

uint64_t sub_237A2F768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A2F770);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A2F774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F77C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20DigiBarConfigurationV5StyleO10CodingKeysOMa()
{
  return &_s20DigiBarConfigurationV5StyleO10CodingKeysON;
}

ValueMetadata *_s20DigiBarConfigurationV5StyleO16RadialCodingKeysOMa()
{
  return &_s20DigiBarConfigurationV5StyleO16RadialCodingKeysON;
}

uint64_t _s20DigiBarConfigurationV5StyleO16RadialCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A2F7EC + 4 * byte_237AA6111[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A2F80C + 4 * byte_237AA6116[v4]))();
}

_BYTE *sub_237A2F7EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A2F80C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A2F814(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A2F81C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A2F824(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A2F82C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20DigiBarConfigurationV5StyleO16LinearCodingKeysOMa()
{
  return &_s20DigiBarConfigurationV5StyleO16LinearCodingKeysON;
}

ValueMetadata *type metadata accessor for PowermeterDataIdentifiers.CodingKeys()
{
  return &type metadata for PowermeterDataIdentifiers.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarLinearStyle.CodingKeys()
{
  return &type metadata for DigiBarLinearStyle.CodingKeys;
}

uint64_t _s14CarPlayAssetUI25PowermeterDataIdentifiersV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_237A2F8BC + 4 * byte_237AA6120[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_237A2F8F0 + 4 * byte_237AA611B[v4]))();
}

uint64_t sub_237A2F8F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F8F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A2F900);
  return result;
}

uint64_t sub_237A2F90C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A2F914);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_237A2F918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A2F920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigiBarRadialStyle.CodingKeys()
{
  return &type metadata for DigiBarRadialStyle.CodingKeys;
}

unint64_t sub_237A2F940()
{
  unint64_t result;

  result = qword_2568283A0;
  if (!qword_2568283A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6CC4, &type metadata for DigiBarRadialStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283A0);
  }
  return result;
}

unint64_t sub_237A2F988()
{
  unint64_t result;

  result = qword_2568283A8;
  if (!qword_2568283A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6D7C, &type metadata for DigiBarLinearStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283A8);
  }
  return result;
}

unint64_t sub_237A2F9D0()
{
  unint64_t result;

  result = qword_2568283B0;
  if (!qword_2568283B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6E34, &type metadata for PowermeterDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283B0);
  }
  return result;
}

unint64_t sub_237A2FA18()
{
  unint64_t result;

  result = qword_2568283B8;
  if (!qword_2568283B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6EEC, &_s20DigiBarConfigurationV5StyleO16LinearCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568283B8);
  }
  return result;
}

unint64_t sub_237A2FA60()
{
  unint64_t result;

  result = qword_2568283C0;
  if (!qword_2568283C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6FA4, &_s20DigiBarConfigurationV5StyleO16RadialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568283C0);
  }
  return result;
}

unint64_t sub_237A2FAA8()
{
  unint64_t result;

  result = qword_2568283C8;
  if (!qword_2568283C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA705C, &_s20DigiBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568283C8);
  }
  return result;
}

unint64_t sub_237A2FAF0()
{
  unint64_t result;

  result = qword_2568283D0;
  if (!qword_2568283D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7114, &_s20DigiBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2568283D0);
  }
  return result;
}

unint64_t sub_237A2FB38()
{
  unint64_t result;

  result = qword_2568283D8;
  if (!qword_2568283D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA71CC, &type metadata for DigiBarMaskConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283D8);
  }
  return result;
}

unint64_t sub_237A2FB80()
{
  unint64_t result;

  result = qword_2568283E0;
  if (!qword_2568283E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7284, &type metadata for DigiBarRedlineConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283E0);
  }
  return result;
}

unint64_t sub_237A2FBC8()
{
  unint64_t result;

  result = qword_2568283E8;
  if (!qword_2568283E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA733C, &type metadata for DigiBandGradientProgressConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283E8);
  }
  return result;
}

unint64_t sub_237A2FC10()
{
  unint64_t result;

  result = qword_2568283F0;
  if (!qword_2568283F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA73F4, &type metadata for DigiBarCruiseControlConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283F0);
  }
  return result;
}

unint64_t sub_237A2FC58()
{
  unint64_t result;

  result = qword_2568283F8;
  if (!qword_2568283F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7364, &type metadata for DigiBarCruiseControlConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568283F8);
  }
  return result;
}

unint64_t sub_237A2FCA0()
{
  unint64_t result;

  result = qword_256828400;
  if (!qword_256828400)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA738C, &type metadata for DigiBarCruiseControlConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828400);
  }
  return result;
}

unint64_t sub_237A2FCE8()
{
  unint64_t result;

  result = qword_256828408;
  if (!qword_256828408)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA72AC, &type metadata for DigiBandGradientProgressConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828408);
  }
  return result;
}

unint64_t sub_237A2FD30()
{
  unint64_t result;

  result = qword_256828410;
  if (!qword_256828410)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA72D4, &type metadata for DigiBandGradientProgressConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828410);
  }
  return result;
}

unint64_t sub_237A2FD78()
{
  unint64_t result;

  result = qword_256828418;
  if (!qword_256828418)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA71F4, &type metadata for DigiBarRedlineConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828418);
  }
  return result;
}

unint64_t sub_237A2FDC0()
{
  unint64_t result;

  result = qword_256828420;
  if (!qword_256828420)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA721C, &type metadata for DigiBarRedlineConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828420);
  }
  return result;
}

unint64_t sub_237A2FE08()
{
  unint64_t result;

  result = qword_256828428;
  if (!qword_256828428)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA713C, &type metadata for DigiBarMaskConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828428);
  }
  return result;
}

unint64_t sub_237A2FE50()
{
  unint64_t result;

  result = qword_256828430;
  if (!qword_256828430)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7164, &type metadata for DigiBarMaskConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828430);
  }
  return result;
}

unint64_t sub_237A2FE98()
{
  unint64_t result;

  result = qword_256828438;
  if (!qword_256828438)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7084, &_s20DigiBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828438);
  }
  return result;
}

unint64_t sub_237A2FEE0()
{
  unint64_t result;

  result = qword_256828440;
  if (!qword_256828440)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA70AC, &_s20DigiBarConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828440);
  }
  return result;
}

unint64_t sub_237A2FF28()
{
  unint64_t result;

  result = qword_256828448;
  if (!qword_256828448)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6F14, &_s20DigiBarConfigurationV5StyleO16RadialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828448);
  }
  return result;
}

unint64_t sub_237A2FF70()
{
  unint64_t result;

  result = qword_256828450;
  if (!qword_256828450)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6F3C, &_s20DigiBarConfigurationV5StyleO16RadialCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828450);
  }
  return result;
}

unint64_t sub_237A2FFB8()
{
  unint64_t result;

  result = qword_256828458;
  if (!qword_256828458)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6E5C, &_s20DigiBarConfigurationV5StyleO16LinearCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828458);
  }
  return result;
}

unint64_t sub_237A30000()
{
  unint64_t result;

  result = qword_256828460;
  if (!qword_256828460)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6E84, &_s20DigiBarConfigurationV5StyleO16LinearCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828460);
  }
  return result;
}

unint64_t sub_237A30048()
{
  unint64_t result;

  result = qword_256828468;
  if (!qword_256828468)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6FCC, &_s20DigiBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828468);
  }
  return result;
}

unint64_t sub_237A30090()
{
  unint64_t result;

  result = qword_256828470;
  if (!qword_256828470)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6FF4, &_s20DigiBarConfigurationV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256828470);
  }
  return result;
}

unint64_t sub_237A300D8()
{
  unint64_t result;

  result = qword_256828478;
  if (!qword_256828478)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6DA4, &type metadata for PowermeterDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828478);
  }
  return result;
}

unint64_t sub_237A30120()
{
  unint64_t result;

  result = qword_256828480;
  if (!qword_256828480)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6DCC, &type metadata for PowermeterDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828480);
  }
  return result;
}

unint64_t sub_237A30168()
{
  unint64_t result;

  result = qword_256828488;
  if (!qword_256828488)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6CEC, &type metadata for DigiBarLinearStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828488);
  }
  return result;
}

unint64_t sub_237A301B0()
{
  unint64_t result;

  result = qword_256828490;
  if (!qword_256828490)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6D14, &type metadata for DigiBarLinearStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828490);
  }
  return result;
}

unint64_t sub_237A301F8()
{
  unint64_t result;

  result = qword_256828498;
  if (!qword_256828498)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6C34, &type metadata for DigiBarRadialStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828498);
  }
  return result;
}

unint64_t sub_237A30240()
{
  unint64_t result;

  result = qword_2568284A0;
  if (!qword_2568284A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA6C5C, &type metadata for DigiBarRadialStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568284A0);
  }
  return result;
}

uint64_t sub_237A30284(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB0130 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469576B63617274 && a2 == 0xEA00000000006874 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E496B63617274 && a2 == 0xEA00000000007465 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972657474616C70 && a2 == 0xEC0000007465736ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E694C6B63617274 && a2 == 0xEC00000070614365)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_237A304DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6469576B63617274 && a2 == 0xEA00000000006874;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E497466656CLL && a2 == 0xE900000000000074 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E497468676972 && a2 == 0xEA00000000007465 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x664F7265746E6563 && a2 == 0xEC00000074657366 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C54527369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_237A30724(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB2330 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB2350 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000237AB2370 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000237AB2390 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000237AB23C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_237A30908(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB23F0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D694C6B63617274 && a2 == 0xED00007061477469 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000237AB2410)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237A30AD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7478456874646977 && a2 == 0xEE006E6F69736E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A30BE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43646573736F7263 && a2 == 0xEF734449726F6C6FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_237A30D50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237A30E38(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x8000000237AB2430 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB2450 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_237A30F74()
{
  unint64_t result;

  result = qword_2568284A8;
  if (!qword_2568284A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarCruiseControlConfiguration.BarType, &type metadata for DigiBarCruiseControlConfiguration.BarType);
    atomic_store(result, (unint64_t *)&qword_2568284A8);
  }
  return result;
}

unint64_t sub_237A30FB8()
{
  unint64_t result;

  result = qword_2568284B0;
  if (!qword_2568284B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarRadialStyle.LineCap, &type metadata for DigiBarRadialStyle.LineCap);
    atomic_store(result, (unint64_t *)&qword_2568284B0);
  }
  return result;
}

uint64_t *sub_237A30FFC(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[9];
  sub_2378706C8(*a1);
  sub_2378706C8(v2);
  return a1;
}

uint64_t DigiBarMaskConfiguration.restoreAssets(from:)()
{
  return Instrument.GaugeStyle.DigiBarConfiguration.restoreAssets(from:)();
}

uint64_t DigiBarCruiseControlConfiguration.restoreAssets(from:)()
{
  return Instrument.GaugeStyle.DigiBarConfiguration.restoreAssets(from:)();
}

void static VehicleUnitDataIdentifier.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 49;
}

void sub_237A310E4(_BYTE *a1@<X8>)
{
  *a1 = 49;
}

void static VehicleSpeedMaxDataIdentifier.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 48;
}

void sub_237A310FC(_BYTE *a1@<X8>)
{
  *a1 = 48;
}

void static ShowSecondarySpeedDataIdentifier.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 51;
}

void sub_237A31114(_BYTE *a1@<X8>)
{
  *a1 = 51;
}

void SpeedometerDataIdentifiers.dataIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SpeedometerDataIdentifiers.dataIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.unitDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *SpeedometerDataIdentifiers.unitDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.vehicleSpeedMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*SpeedometerDataIdentifiers.showSecondarySpeedDataIdentifier.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::SpeedometerDataIdentifiers __swiftcall SpeedometerDataIdentifiers.init()()
{
  _DWORD *v0;
  CarPlayAssetUI::SpeedometerDataIdentifiers result;

  *v0 = 858796335;
  return result;
}

uint64_t SpeedometerDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A312C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A31304 + 4 * byte_237AA77A0[a1]))(0x6E65644961746164, 0xEE00726569666974);
}

unint64_t sub_237A31304()
{
  return 0xD000000000000012;
}

unint64_t sub_237A31320()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_237A31358()
{
  unsigned __int8 *v0;

  return sub_237A312C4(*v0);
}

uint64_t sub_237A31360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A31B64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A31384()
{
  sub_237A318F4();
  return sub_237A88718();
}

uint64_t sub_237A313AC()
{
  sub_237A318F4();
  return sub_237A88724();
}

uint64_t SpeedometerDataIdentifiers.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568284B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v15 = v1[2];
  v16 = v9;
  HIDWORD(v14) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A318F4();
  sub_237A886B8();
  v24 = v8;
  v23 = 0;
  sub_237888154();
  sub_237A882B0();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v5;
  v12 = BYTE4(v14);
  v13 = v15;
  v22 = v16;
  v21 = 1;
  sub_237A882B0();
  v20 = v13;
  v19 = 2;
  sub_237A882B0();
  v18 = v12;
  v17 = 3;
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t SpeedometerDataIdentifiers.hashValue.getter()
{
  sub_237A885D4();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t SpeedometerDataIdentifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568284C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A318F4();
  sub_237A88688();
  if (!v2)
  {
    v22 = 0;
    sub_237888198();
    sub_237A881F0();
    v9 = v23;
    v20 = 1;
    sub_237A881F0();
    v15 = v9;
    v10 = v21;
    v18 = 2;
    sub_237A881F0();
    v14 = v10;
    LOBYTE(v10) = v19;
    v16 = 3;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A318C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SpeedometerDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_237A318D8(_QWORD *a1)
{
  return SpeedometerDataIdentifiers.encode(to:)(a1);
}

unint64_t sub_237A318F4()
{
  unint64_t result;

  result = qword_2568284C0;
  if (!qword_2568284C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7A20, &type metadata for SpeedometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568284C0);
  }
  return result;
}

unint64_t sub_237A3193C()
{
  unint64_t result;

  result = qword_256828560;
  if (!qword_256828560)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SpeedometerDataIdentifiers, &type metadata for SpeedometerDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256828560);
  }
  return result;
}

ValueMetadata *type metadata accessor for VehicleUnitDataIdentifier()
{
  return &type metadata for VehicleUnitDataIdentifier;
}

ValueMetadata *type metadata accessor for VehicleSpeedMaxDataIdentifier()
{
  return &type metadata for VehicleSpeedMaxDataIdentifier;
}

ValueMetadata *type metadata accessor for ShowSecondarySpeedDataIdentifier()
{
  return &type metadata for ShowSecondarySpeedDataIdentifier;
}

ValueMetadata *type metadata accessor for SpeedometerDataIdentifiers()
{
  return &type metadata for SpeedometerDataIdentifiers;
}

uint64_t storeEnumTagSinglePayload for SpeedometerDataIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A31A0C + 4 * byte_237AA77A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A31A40 + 4 * byte_237AA77A4[v4]))();
}

uint64_t sub_237A31A40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A31A48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A31A50);
  return result;
}

uint64_t sub_237A31A5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A31A64);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A31A68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A31A70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpeedometerDataIdentifiers.CodingKeys()
{
  return &type metadata for SpeedometerDataIdentifiers.CodingKeys;
}

unint64_t sub_237A31A90()
{
  unint64_t result;

  result = qword_256828568;
  if (!qword_256828568)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA79F8, &type metadata for SpeedometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828568);
  }
  return result;
}

unint64_t sub_237A31AD8()
{
  unint64_t result;

  result = qword_256828570;
  if (!qword_256828570)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7968, &type metadata for SpeedometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828570);
  }
  return result;
}

unint64_t sub_237A31B20()
{
  unint64_t result;

  result = qword_256828578;
  if (!qword_256828578)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7990, &type metadata for SpeedometerDataIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256828578);
  }
  return result;
}

uint64_t sub_237A31B64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AAF570 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000237AB2470 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000237AB2490)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

__n128 NotificationView.init(model:)@<Q0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  __n128 result;
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;

  v19 = a1[1];
  v20 = *a1;
  v4 = *((_QWORD *)a1 + 4);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *((_BYTE *)a1 + 48);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v17 = *((_BYTE *)a1 + 73);
  v18 = *((_BYTE *)a1 + 72);
  v16 = a1[5];
  v15 = *((_QWORD *)a1 + 12);
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  swift_storeEnumTagMultiPayload();
  v9 = (int *)type metadata accessor for NotificationView(0);
  v10 = (uint64_t *)((char *)a2 + v9[5]);
  *v10 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v11 = (uint64_t *)((char *)a2 + v9[6]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  swift_storeEnumTagMultiPayload();
  v12 = (uint64_t *)((char *)a2 + v9[7]);
  *v12 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v13 = (char *)a2 + v9[8];
  *(_OWORD *)v13 = v20;
  *((_OWORD *)v13 + 1) = v19;
  *((_QWORD *)v13 + 4) = v4;
  *((_QWORD *)v13 + 5) = v5;
  v13[48] = v6;
  *((_QWORD *)v13 + 7) = v7;
  *((_QWORD *)v13 + 8) = v8;
  v13[72] = v18;
  v13[73] = v17;
  *((_OWORD *)v13 + 5) = v16;
  *((_QWORD *)v13 + 12) = v15;
  result = *(__n128 *)((char *)a1 + 104);
  *(__n128 *)(v13 + 104) = result;
  return result;
}

uint64_t sub_237A31EB0()
{
  sub_237A0364C();
  return sub_237A86B88();
}

uint64_t sub_237A31EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for UserInteractiveConfiguration, (void (*)(uint64_t))sub_237A0364C);
}

uint64_t sub_237A31F08()
{
  sub_237A03790();
  return sub_237A86B88();
}

uint64_t sub_237A31F44()
{
  sub_237A03790();
  return sub_237A86B88();
}

uint64_t sub_237A31F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A03790);
}

uint64_t sub_237A31F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A03790);
}

uint64_t type metadata accessor for NotificationView(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_2568285F0);
}

uint64_t sub_237A31FDC()
{
  sub_237A038D4();
  return sub_237A86B88();
}

uint64_t sub_237A32018()
{
  sub_237A038D4();
  return sub_237A86B88();
}

uint64_t sub_237A32054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A038D4);
}

uint64_t sub_237A32070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v9 = a5(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - v13;
  sub_2378D07D8(a1, (uint64_t)&v17 - v13, a5);
  v15 = sub_2378D07D8((uint64_t)v14, (uint64_t)v11, a5);
  a6(v15);
  sub_237A86B94();
  return sub_2378DE6A4((uint64_t)v14, a5);
}

uint64_t sub_237A32150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for BannerConfiguration, (void (*)(uint64_t))sub_237A038D4);
}

uint64_t sub_237A3217C()
{
  sub_237A0364C();
  return sub_237A86B88();
}

uint64_t sub_237A321B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237A32070(a1, a2, a3, a4, type metadata accessor for UserInteractiveConfiguration, (void (*)(uint64_t))sub_237A0364C);
}

uint64_t NotificationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828580);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A322B0((uint64_t)v5);
  v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationView(0) + 32));
  v8 = *v6;
  v7 = v6[1];
  sub_2378BBFE0((uint64_t)v5, a1, &qword_256828580);
  v9 = (_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828588) + 52));
  *v9 = v8;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  return sub_2378BC024((uint64_t)v5, &qword_256828580);
}

uint64_t sub_237A322B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  char v69;
  uint64_t v70;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  char v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t (*v98)(uint64_t);
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  _BYTE *v145;
  unsigned __int8 v146;
  unsigned __int8 v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE v173[4];
  int v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE *v179;
  uint64_t v180;
  _BYTE *v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE *v187;
  _BYTE *v188;
  _BYTE *v189;
  uint64_t v190;
  _BYTE *v191;
  _BYTE *v192;
  _BYTE *v193;
  _BYTE *v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  _BYTE *v201;
  uint64_t v202;

  v196 = a1;
  v184 = type metadata accessor for NoticeView(0);
  MEMORY[0x24BDAC7A8](v184);
  v195 = &v173[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A90);
  MEMORY[0x24BDAC7A8](v180);
  v179 = &v173[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v194 = (_BYTE *)type metadata accessor for BannerConfiguration(0);
  MEMORY[0x24BDAC7A8](v194);
  v193 = &v173[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v188 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_256828A98);
  MEMORY[0x24BDAC7A8](v188);
  v181 = &v173[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AA0);
  MEMORY[0x24BDAC7A8](v186);
  v187 = &v173[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AA8);
  MEMORY[0x24BDAC7A8](v200);
  v189 = &v173[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v202 = type metadata accessor for BannerView(0);
  MEMORY[0x24BDAC7A8](v202);
  v201 = &v173[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AB0);
  MEMORY[0x24BDAC7A8](v197);
  v199 = &v173[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AB8);
  MEMORY[0x24BDAC7A8](v190);
  v191 = &v173[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AC0);
  MEMORY[0x24BDAC7A8](v198);
  v192 = &v173[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AC8);
  MEMORY[0x24BDAC7A8](v182);
  v183 = &v173[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v185 = type metadata accessor for UserInteractiveView(0);
  MEMORY[0x24BDAC7A8](v185);
  v14 = &v173[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A90);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v173[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_256828AD0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v173[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v173[-v22];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828AD8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = &v173[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = v1 + *(int *)(type metadata accessor for NotificationView(0) + 32);
  v29 = *(_QWORD *)(v27 + 56);
  v28 = *(_QWORD *)(v27 + 64);
  v30 = *(unsigned __int8 *)(v27 + 72);
  if (v30 <= 1)
  {
    v188 = v20;
    v189 = v23;
    v194 = v26;
    v195 = v17;
    v193 = v18;
    v178 = v24;
    if (!v30)
    {
      v31 = v201;
      v32 = v28;
      v33 = v29;
      sub_23796E3F0((uint64_t)v201);
      v34 = *(_QWORD *)v27;
      v35 = *(_QWORD *)(v27 + 8);
      v36 = *(_QWORD *)(v27 + 16);
      v37 = *(_QWORD *)(v27 + 24);
      v38 = *(_QWORD *)(v27 + 32);
      v39 = *(_QWORD *)(v27 + 40);
      v40 = *(_BYTE *)(v27 + 73);
      v42 = *(_QWORD *)(v27 + 80);
      v41 = *(_QWORD *)(v27 + 88);
      v43 = *(_QWORD *)(v27 + 104);
      v193 = *(_BYTE **)(v27 + 96);
      v44 = v193;
      v194 = (_BYTE *)v41;
      v195 = *(_BYTE **)(v27 + 112);
      v45 = v195;
      v46 = (uint64_t)v31;
      v47 = &v31[*(int *)(v202 + 20)];
      *(_QWORD *)v47 = v34;
      *((_QWORD *)v47 + 1) = v35;
      *((_QWORD *)v47 + 2) = v36;
      *((_QWORD *)v47 + 3) = v37;
      *((_QWORD *)v47 + 4) = v38;
      *((_QWORD *)v47 + 5) = v39;
      LOBYTE(v31) = *(_BYTE *)(v27 + 48);
      v47[48] = (_BYTE)v31;
      *((_QWORD *)v47 + 7) = v33;
      *((_QWORD *)v47 + 8) = v32;
      v47[72] = 0;
      v47[73] = v40;
      *((_QWORD *)v47 + 10) = v42;
      *((_QWORD *)v47 + 11) = v41;
      *((_QWORD *)v47 + 12) = v44;
      *((_QWORD *)v47 + 13) = v43;
      *((_QWORD *)v47 + 14) = v45;
      sub_2378D07D8(v46, (uint64_t)v191, type metadata accessor for BannerView);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_2379732BC(v36, v37, v38, v39, (char)v31);
      sub_2379DBB3C(v33, v32, 0);
      sub_2379DBB50(v42, (uint64_t)v194);
      sub_237A412C0();
      sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
      swift_retain();
      v48 = (uint64_t)v192;
      sub_237A86D44();
      v49 = &qword_256828AC0;
      sub_2378BBFE0(v48, (uint64_t)v199, &qword_256828AC0);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      sub_237A4123C();
      sub_237A413E8();
      sub_237A86D44();
      sub_2378BC024(v48, v49);
      return sub_2378DE6A4((uint64_t)v201, type metadata accessor for BannerView);
    }
    v72 = *(_BYTE *)(v27 + 73);
    v177 = v28;
    v73 = v29;
    if ((v72 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v74 = v185;
      v75 = (uint64_t)v14;
    }
    else
    {
      v99 = sub_237A8840C();
      swift_bridgeObjectRelease();
      v74 = v185;
      v75 = (uint64_t)v14;
      if ((v99 & 1) == 0)
      {
        sub_23796E620((uint64_t)v14);
        v156 = *(_QWORD *)v27;
        v157 = *(_QWORD *)(v27 + 8);
        v158 = *(_QWORD *)(v27 + 16);
        v159 = *(_QWORD *)(v27 + 24);
        v160 = *(_QWORD *)(v27 + 32);
        v161 = *(_QWORD *)(v27 + 40);
        v162 = *(_QWORD *)(v27 + 80);
        v195 = *(_BYTE **)(v27 + 88);
        v163 = v195;
        v164 = *(_QWORD *)(v27 + 104);
        v189 = *(_BYTE **)(v27 + 96);
        v165 = v189;
        v201 = *(_BYTE **)(v27 + 112);
        v166 = v201;
        v167 = &v14[*(int *)(v74 + 20)];
        v168 = (uint64_t)v14;
        v176 = v14;
        *(_QWORD *)v167 = v156;
        *((_QWORD *)v167 + 1) = v157;
        *((_QWORD *)v167 + 2) = v158;
        *((_QWORD *)v167 + 3) = v159;
        *((_QWORD *)v167 + 4) = v160;
        *((_QWORD *)v167 + 5) = v161;
        v169 = *(_BYTE *)(v27 + 48);
        v167[48] = v169;
        v170 = v73;
        v171 = v177;
        *((_QWORD *)v167 + 7) = v73;
        *((_QWORD *)v167 + 8) = v171;
        *((_WORD *)v167 + 36) = 1;
        *((_QWORD *)v167 + 10) = v162;
        *((_QWORD *)v167 + 11) = v163;
        v172 = v162;
        *((_QWORD *)v167 + 12) = v165;
        *((_QWORD *)v167 + 13) = v164;
        *((_QWORD *)v167 + 14) = v166;
        sub_2378D07D8(v168, (uint64_t)v183, type metadata accessor for UserInteractiveView);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        sub_2379732BC(v158, v159, v160, v161, v169);
        sub_2379DBB3C(v170, v171, 1);
        sub_2379DBB50(v172, (uint64_t)v195);
        sub_2379A2040(&qword_256828B08, &qword_256828AD0, (uint64_t (*)(void))sub_237A41364, MEMORY[0x24BDECC60]);
        sub_23786FAA0(&qword_256828B18, type metadata accessor for UserInteractiveView, (uint64_t)&unk_237AA7BF4);
        swift_retain();
        v96 = (uint64_t)v194;
        sub_237A86D44();
        sub_2378DE6A4((uint64_t)v176, type metadata accessor for UserInteractiveView);
        v123 = v191;
        v122 = (uint64_t)v192;
LABEL_20:
        v154 = &qword_256828AD8;
        sub_2378BBFE0(v96, (uint64_t)v123, &qword_256828AD8);
        swift_storeEnumTagMultiPayload();
        sub_237A412C0();
        sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
        sub_237A86D44();
        v155 = &qword_256828AC0;
        sub_2378BBFE0(v122, (uint64_t)v199, &qword_256828AC0);
        swift_storeEnumTagMultiPayload();
        sub_237A4123C();
        sub_237A413E8();
        goto LABEL_21;
      }
    }
    sub_23796E620(v75);
    v101 = *(_QWORD *)v27;
    v100 = *(_QWORD *)(v27 + 8);
    v102 = *(_QWORD *)(v27 + 16);
    v103 = *(_QWORD *)(v27 + 24);
    v104 = v72;
    v105 = *(_QWORD *)(v27 + 32);
    v106 = *(_QWORD *)(v27 + 40);
    v108 = *(_QWORD *)(v27 + 88);
    v187 = *(_BYTE **)(v27 + 80);
    v107 = v187;
    v109 = v74;
    v111 = *(_QWORD *)(v27 + 96);
    v110 = *(_QWORD *)(v27 + 104);
    v201 = *(_BYTE **)(v27 + 112);
    v112 = v201;
    v113 = v75 + *(int *)(v109 + 20);
    *(_QWORD *)v113 = v101;
    *(_QWORD *)(v113 + 8) = v100;
    *(_QWORD *)(v113 + 16) = v102;
    *(_QWORD *)(v113 + 24) = v103;
    *(_QWORD *)(v113 + 32) = v105;
    *(_QWORD *)(v113 + 40) = v106;
    v114 = *(_BYTE *)(v27 + 48);
    *(_BYTE *)(v113 + 48) = v114;
    v115 = v73;
    *(_QWORD *)(v113 + 56) = v73;
    v116 = v177;
    *(_QWORD *)(v113 + 64) = v177;
    *(_BYTE *)(v113 + 72) = 1;
    *(_BYTE *)(v113 + 73) = v104;
    *(_QWORD *)(v113 + 80) = v107;
    *(_QWORD *)(v113 + 88) = v108;
    *(_QWORD *)(v113 + 96) = v111;
    *(_QWORD *)(v113 + 104) = v110;
    *(_QWORD *)(v113 + 112) = v112;
    swift_bridgeObjectRetain();
    sub_2379732BC(v102, v103, v105, v106, v114);
    sub_2379DBB3C(v115, v116, 1);
    sub_2379DBB50((uint64_t)v187, v108);
    swift_retain();
    v117 = sub_237A874AC();
    sub_2378E1ABC(0.0, 1, INFINITY, 0, 0.0, 1, 0.0, 1, (uint64_t)v195, INFINITY, 0, 0.0, 1, v117, v118);
    sub_2378DE6A4(v75, type metadata accessor for UserInteractiveView);
    LOBYTE(v105) = sub_237A86F48();
    v119 = sub_237A86F54();
    v120 = sub_237A86F6C();
    sub_237A86F6C();
    if (sub_237A86F6C() != v105)
      v120 = sub_237A86F6C();
    sub_237A86F6C();
    v121 = sub_237A86F6C();
    v123 = v191;
    v122 = (uint64_t)v192;
    v124 = v193;
    v96 = (uint64_t)v194;
    v125 = (uint64_t)v189;
    if (v121 != v119)
      v120 = sub_237A86F6C();
    v126 = v195;
    sub_237A86798();
    v128 = v127;
    v130 = v129;
    v132 = v131;
    v134 = v133;
    v135 = (uint64_t)v188;
    sub_2378BBFE0((uint64_t)v126, (uint64_t)v188, &qword_256820A90);
    v136 = v135 + *((int *)v124 + 9);
    *(_BYTE *)v136 = v120;
    *(_QWORD *)(v136 + 8) = v128;
    *(_QWORD *)(v136 + 16) = v130;
    *(_QWORD *)(v136 + 24) = v132;
    *(_QWORD *)(v136 + 32) = v134;
    *(_BYTE *)(v136 + 40) = 0;
    sub_2378BC024((uint64_t)v126, &qword_256820A90);
    sub_237870370(v135, v125, &qword_256828AD0);
    sub_2378BBFE0(v125, (uint64_t)v183, &qword_256828AD0);
    swift_storeEnumTagMultiPayload();
    sub_2379A2040(&qword_256828B08, &qword_256828AD0, (uint64_t (*)(void))sub_237A41364, MEMORY[0x24BDECC60]);
    sub_23786FAA0(&qword_256828B18, type metadata accessor for UserInteractiveView, (uint64_t)&unk_237AA7BF4);
    sub_237A86D44();
    sub_2378BC024(v125, &qword_256828AD0);
    goto LABEL_20;
  }
  v51 = v193;
  v50 = (uint64_t)v194;
  v52 = (uint64_t *)v195;
  if (v30 == 2)
  {
    v53 = v201;
    v54 = *(_QWORD *)(v27 + 64);
    v55 = *(_QWORD *)(v27 + 56);
    sub_23796E3F0((uint64_t)v201);
    v56 = *(_QWORD *)v27;
    v57 = *(_QWORD *)(v27 + 8);
    v58 = *(_QWORD *)(v27 + 16);
    v59 = *(_QWORD *)(v27 + 24);
    v60 = *(_QWORD *)(v27 + 32);
    v61 = *(_QWORD *)(v27 + 40);
    v62 = *(_BYTE *)(v27 + 73);
    v63 = *(_QWORD *)(v27 + 80);
    v64 = *(_QWORD *)(v27 + 88);
    v65 = *(_QWORD *)(v27 + 104);
    v193 = *(_BYTE **)(v27 + 96);
    v66 = v193;
    v194 = (_BYTE *)v64;
    v195 = *(_BYTE **)(v27 + 112);
    v67 = v195;
    v68 = &v53[*(int *)(v202 + 20)];
    *(_QWORD *)v68 = v56;
    *((_QWORD *)v68 + 1) = v57;
    *((_QWORD *)v68 + 2) = v58;
    *((_QWORD *)v68 + 3) = v59;
    *((_QWORD *)v68 + 4) = v60;
    *((_QWORD *)v68 + 5) = v61;
    v69 = *(_BYTE *)(v27 + 48);
    v68[48] = v69;
    *((_QWORD *)v68 + 7) = v55;
    *((_QWORD *)v68 + 8) = v54;
    v68[72] = 2;
    v68[73] = v62;
    *((_QWORD *)v68 + 10) = v63;
    *((_QWORD *)v68 + 11) = v64;
    v70 = v63;
    *((_QWORD *)v68 + 12) = v66;
    *((_QWORD *)v68 + 13) = v65;
    *((_QWORD *)v68 + 14) = v67;
    sub_2378D07D8((uint64_t)v53, (uint64_t)v187, type metadata accessor for BannerView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2379732BC(v58, v59, v60, v61, v69);
    sub_2379DBB3C(v55, v54, 2);
    sub_2379DBB50(v70, (uint64_t)v194);
    sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    sub_237A411A0();
    swift_retain();
    v48 = (uint64_t)v189;
    sub_237A86D44();
    v49 = &qword_256828AA8;
    sub_2378BBFE0(v48, (uint64_t)v199, &qword_256828AA8);
    goto LABEL_6;
  }
  sub_23796E3F0((uint64_t)v193);
  v76 = v51[*(int *)(v50 + 24)];
  sub_2378DE6A4((uint64_t)v51, type metadata accessor for BannerConfiguration);
  if (v76 == 1)
  {
    v77 = v201;
    sub_23796E3F0((uint64_t)v201);
    v78 = *(_QWORD *)v27;
    v79 = *(_QWORD *)(v27 + 8);
    v80 = *(_QWORD *)(v27 + 16);
    v81 = *(_QWORD *)(v27 + 24);
    v82 = *(_QWORD *)(v27 + 32);
    v83 = *(_QWORD *)(v27 + 40);
    v84 = *(_QWORD *)(v27 + 56);
    v85 = *(_BYTE **)(v27 + 64);
    v86 = *(_BYTE *)(v27 + 73);
    v87 = *(_QWORD *)(v27 + 80);
    v193 = *(_BYTE **)(v27 + 88);
    v88 = v193;
    v194 = (_BYTE *)v87;
    v90 = *(_BYTE **)(v27 + 96);
    v89 = *(_QWORD *)(v27 + 104);
    v191 = v85;
    v192 = v90;
    v195 = *(_BYTE **)(v27 + 112);
    v91 = v195;
    v92 = (uint64_t)v77;
    v93 = &v77[*(int *)(v202 + 20)];
    LOBYTE(v77) = *(_BYTE *)(v27 + 48);
    v94 = *(_BYTE *)(v27 + 72);
    *(_QWORD *)v93 = v78;
    *((_QWORD *)v93 + 1) = v79;
    *((_QWORD *)v93 + 2) = v80;
    *((_QWORD *)v93 + 3) = v81;
    *((_QWORD *)v93 + 4) = v82;
    *((_QWORD *)v93 + 5) = v83;
    v93[48] = (_BYTE)v77;
    *((_QWORD *)v93 + 7) = v84;
    *((_QWORD *)v93 + 8) = v85;
    v95 = v84;
    v93[72] = v94;
    v93[73] = v86;
    *((_QWORD *)v93 + 10) = v87;
    *((_QWORD *)v93 + 11) = v88;
    *((_QWORD *)v93 + 12) = v90;
    *((_QWORD *)v93 + 13) = v89;
    *((_QWORD *)v93 + 14) = v91;
    sub_2378D07D8(v92, (uint64_t)v179, type metadata accessor for BannerView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2379732BC(v80, v81, v82, v83, (char)v77);
    sub_2379DBB3C(v95, (uint64_t)v191, v94);
    sub_2379DBB50((uint64_t)v194, (uint64_t)v193);
    sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    sub_23786FAA0(&qword_256828AE8, type metadata accessor for NoticeView, (uint64_t)&unk_237AA7C94);
    swift_retain();
    v96 = (uint64_t)v181;
    sub_237A86D44();
    v97 = (uint64_t *)v201;
    v98 = type metadata accessor for BannerView;
  }
  else
  {
    v190 = *(_QWORD *)v27;
    v137 = *(_QWORD *)(v27 + 16);
    v182 = *(_QWORD *)(v27 + 8);
    v177 = v137;
    v139 = *(_QWORD *)(v27 + 32);
    v176 = *(_BYTE **)(v27 + 24);
    v138 = (uint64_t)v176;
    v175 = v139;
    v185 = *(_QWORD *)(v27 + 40);
    v140 = *(_QWORD *)(v27 + 56);
    v141 = *(_QWORD *)(v27 + 64);
    LODWORD(v201) = *(unsigned __int8 *)(v27 + 73);
    v183 = *(_BYTE **)(v27 + 80);
    v142 = v183;
    v143 = *(_BYTE **)(v27 + 96);
    v144 = *(_QWORD *)(v27 + 104);
    v193 = *(_BYTE **)(v27 + 88);
    v194 = (_BYTE *)v144;
    v145 = *(_BYTE **)(v27 + 112);
    v191 = v143;
    v192 = v145;
    v146 = *(_BYTE *)(v27 + 48);
    v174 = v146;
    v147 = *(_BYTE *)(v27 + 72);
    LODWORD(v178) = v147;
    *v52 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
    swift_storeEnumTagMultiPayload();
    v148 = (char *)v52 + *(int *)(v184 + 20);
    v149 = v182;
    *(_QWORD *)v148 = v190;
    *((_QWORD *)v148 + 1) = v149;
    *((_QWORD *)v148 + 2) = v137;
    *((_QWORD *)v148 + 3) = v138;
    v150 = v185;
    *((_QWORD *)v148 + 4) = v139;
    *((_QWORD *)v148 + 5) = v150;
    v148[48] = v146;
    *((_QWORD *)v148 + 7) = v140;
    *((_QWORD *)v148 + 8) = v141;
    v148[72] = v147;
    v148[73] = (char)v201;
    v152 = v193;
    v151 = (uint64_t)v194;
    *((_QWORD *)v148 + 10) = v142;
    *((_QWORD *)v148 + 11) = v152;
    v153 = v192;
    *((_QWORD *)v148 + 12) = v191;
    *((_QWORD *)v148 + 13) = v151;
    *((_QWORD *)v148 + 14) = v153;
    sub_2378D07D8((uint64_t)v52, (uint64_t)v179, type metadata accessor for NoticeView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_2379732BC(v177, (uint64_t)v176, v175, v150, v174);
    sub_2379DBB3C(v140, v141, v178);
    sub_2379DBB50((uint64_t)v183, (uint64_t)v152);
    sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    sub_23786FAA0(&qword_256828AE8, type metadata accessor for NoticeView, (uint64_t)&unk_237AA7C94);
    swift_retain();
    v96 = (uint64_t)v181;
    sub_237A86D44();
    v97 = v52;
    v98 = type metadata accessor for NoticeView;
  }
  sub_2378DE6A4((uint64_t)v97, v98);
  v122 = (uint64_t)v189;
  v154 = &qword_256828A98;
  sub_2378BBFE0(v96, (uint64_t)v187, &qword_256828A98);
  swift_storeEnumTagMultiPayload();
  sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
  sub_237A411A0();
  sub_237A86D44();
  v155 = &qword_256828AA8;
  sub_2378BBFE0(v122, (uint64_t)v199, &qword_256828AA8);
  swift_storeEnumTagMultiPayload();
  sub_237A4123C();
  sub_237A413E8();
LABEL_21:
  sub_237A86D44();
  sub_2378BC024(v122, v155);
  return sub_2378BC024(v96, v154);
}

uint64_t sub_237A3342C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828580);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A322B0((uint64_t)v7);
  v8 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  v10 = *v8;
  v9 = v8[1];
  sub_2378BBFE0((uint64_t)v7, a2, &qword_256828580);
  v11 = (_QWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828588) + 52));
  *v11 = v10;
  v11[1] = v9;
  swift_bridgeObjectRetain();
  return sub_2378BC024((uint64_t)v7, &qword_256828580);
}

uint64_t sub_237A334EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  double v38;
  double v39;
  char v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a1;
  v2 = sub_237A8747C();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for PlatterView();
  MEMORY[0x24BDAC7A8](v51);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)&v48 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288D8);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288E0);
  MEMORY[0x24BDAC7A8](v50);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A70);
  MEMORY[0x24BDAC7A8](v53);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A78);
  MEMORY[0x24BDAC7A8](v15);
  v56 = (uint64_t)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A338C0();
  v17 = (int *)type metadata accessor for BannerConfiguration(0);
  v18 = *(_QWORD *)(v1 + v17[5]);
  sub_237A87470();
  v19 = (uint64_t *)(v1 + v17[12]);
  v20 = *v19;
  v21 = v19[1];
  v22 = v19[2];
  *(_QWORD *)v6 = swift_getKeyPath();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  *((_QWORD *)v6 + 3) = swift_getKeyPath();
  v6[32] = 0;
  *((_QWORD *)v6 + 5) = v18;
  v23 = v51;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v6[*(int *)(v51 + 28)], v4, v55);
  v24 = &v6[*(int *)(v23 + 32)];
  *(_QWORD *)v24 = v20;
  *((_QWORD *)v24 + 1) = v21;
  *((_QWORD *)v24 + 2) = v22;
  v25 = v52;
  sub_2378D0858((uint64_t)v6, v52, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  swift_retain();
  v26 = sub_237A874AC();
  v28 = v27;
  v29 = (uint64_t)&v12[*(int *)(v50 + 36)];
  sub_2378D07D8(v25, v29, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v30 = (uint64_t *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568265F0) + 36));
  *v30 = v26;
  v30[1] = v28;
  v31 = v49;
  sub_2378BBFE0(v49, (uint64_t)v12, &qword_2568288D8);
  sub_2378DE6A4(v25, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  sub_2378BC024(v31, &qword_2568288D8);
  LOBYTE(v26) = *(_BYTE *)(v1 + v17[11]);
  sub_2378BBFE0((uint64_t)v12, (uint64_t)v14, &qword_2568288E0);
  v14[*(int *)(v53 + 36)] = v26;
  sub_2378BC024((uint64_t)v12, &qword_2568288E0);
  v32 = 0.0;
  v33 = 0.0;
  v34 = v17[9];
  v35 = v1 + v17[10];
  v36 = *(_BYTE *)(v35 + 16);
  v37 = v1 + v34;
  v38 = *(double *)(v1 + v34);
  v39 = *(double *)(v1 + v34 + 8);
  v40 = *(_BYTE *)(v37 + 16);
  if ((v36 & 1) == 0)
  {
    v33 = *(double *)v35;
    v32 = *(double *)(v35 + 8);
  }
  if (*(_BYTE *)(v37 + 16))
    v41 = 0.0;
  else
    v41 = v38;
  if (*(_BYTE *)(v37 + 16))
    v42 = 0.0;
  else
    v42 = v39;
  v43 = sub_237A874AC();
  v47 = v42;
  v44 = v56;
  sub_2378E1B20(v33, v36, 0.0, 1, v41, v40, v32, v36, v56, v47, v40, 0.0, 1, v43, v45);
  sub_2378BC024((uint64_t)v14, &qword_256820A70);
  return sub_237870370(v44, v57, &qword_256820A78);
}

uint64_t sub_237A338C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BannerView(0) + 20) + 88);
  v11 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 36));
  if (v10)
  {
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 0;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828918);
    sub_237A3B730(v0, (uint64_t)&v9[*(int *)(v12 + 44)]);
    sub_2378BBFE0((uint64_t)v9, (uint64_t)v6, &qword_2568288F8);
    swift_storeEnumTagMultiPayload();
    v13 = MEMORY[0x24BDF4498];
    sub_2378B70D4(&qword_256828908, &qword_2568288F8, MEMORY[0x24BDF4498]);
    sub_2378B70D4(&qword_256828910, &qword_2568288E8, v13);
    sub_237A86D44();
    v14 = (uint64_t)v9;
    v15 = &qword_2568288F8;
  }
  else
  {
    *(_QWORD *)v3 = v11;
    *((_QWORD *)v3 + 1) = 0;
    v3[16] = 0;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828900);
    sub_237A3AC24(v0, (uint64_t)&v3[*(int *)(v16 + 44)]);
    sub_2378BBFE0((uint64_t)v3, (uint64_t)v6, &qword_2568288E8);
    swift_storeEnumTagMultiPayload();
    v17 = MEMORY[0x24BDF4498];
    sub_2378B70D4(&qword_256828908, &qword_2568288F8, MEMORY[0x24BDF4498]);
    sub_2378B70D4(&qword_256828910, &qword_2568288E8, v17);
    sub_237A86D44();
    v14 = (uint64_t)v3;
    v15 = &qword_2568288E8;
  }
  return sub_2378BC024(v14, v15);
}

uint64_t View.pushToBase(_:)(char a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = a1;
  return MEMORY[0x23B81DDB8](&v4, a2, &type metadata for PushToBaseModifier, a3);
}

uint64_t sub_237A33B68()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for NotificationView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  int v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __int128 v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  __int128 v153;
  uint64_t v154;
  int *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;
  char *v164;
  char *v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  void (*v212)(char *, char *, uint64_t);
  _QWORD *v213;
  int *v214;
  _QWORD *v215;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v54 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v54 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *v3;
    v214 = v6;
    v215 = a1;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = v3[1];
      v8 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v9 = v8[6];
      v10 = (char *)a1 + v9;
      v11 = (char *)v3 + v9;
      v12 = sub_237A872D8();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_retain();
      v13(v10, v11, v12);
      v14 = v8[7];
      v15 = (char *)v215 + v14;
      v16 = (char *)v3 + v14;
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      v15[32] = v16[32];
      v18 = v8[8];
      v19 = (_OWORD *)((char *)v215 + v18);
      v20 = (_OWORD *)((char *)v3 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      *(_QWORD *)((char *)v215 + v8[9]) = *(_QWORD *)((char *)v3 + v8[9]);
      v22 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)v215 + v22[5]) = *(_QWORD *)((char *)v3 + v22[5]);
      *((_BYTE *)v215 + v22[6]) = *((_BYTE *)v3 + v22[6]);
      v23 = v22[7];
      v24 = (char *)v215 + v23;
      v25 = (char *)v3 + v23;
      *(_QWORD *)v24 = *(_QWORD *)((char *)v3 + v23);
      *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v3 + v23 + 8);
      v24[24] = *((_BYTE *)v3 + v23 + 24);
      v26 = type metadata accessor for NotificationSymbolConfiguration(0);
      v27 = *(int *)(v26 + 24);
      v28 = &v24[v27];
      v29 = &v25[v27];
      swift_retain();
      v13(v28, v29, v12);
      v30 = *(int *)(v26 + 28);
      v31 = &v24[v30];
      v32 = &v25[v30];
      v33 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v33;
      v34 = v22[8];
      v35 = (char *)v215 + v34;
      v36 = (char *)v3 + v34;
      v37 = *(_QWORD *)((char *)v3 + v34 + 8);
      *(_QWORD *)v35 = *(_QWORD *)((char *)v3 + v34);
      *((_QWORD *)v35 + 1) = v37;
      v38 = (uint64_t)v3 + v34 + 16;
      v39 = *(_OWORD *)((char *)v3 + v34 + 40);
      *(_OWORD *)(v35 + 40) = v39;
      v40 = v39;
      v41 = **(void (***)(char *, uint64_t, uint64_t))(v39 - 8);
      swift_retain();
      swift_retain();
      v42 = v38;
      a1 = v215;
      v41(v35 + 16, v42, v40);
      v43 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 5) = v43;
      (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v35 + 56), (uint64_t)(v36 + 56));
      v44 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v44;
      v35[128] = v36[128];
      *((_QWORD *)v35 + 17) = *((_QWORD *)v36 + 17);
      v6 = v214;
      v45 = v22[9];
      v46 = (char *)v215 + v45;
      v47 = (char *)v3 + v45;
      v46[16] = v47[16];
      *(_OWORD *)v46 = *(_OWORD *)v47;
      v48 = v22[10];
      v49 = (char *)v215 + v48;
      v50 = (char *)v3 + v48;
      *(_OWORD *)v49 = *(_OWORD *)v50;
      v49[16] = v50[16];
      *((_BYTE *)v215 + v22[11]) = *((_BYTE *)v3 + v22[11]);
      v51 = v22[12];
      v52 = (char *)v215 + v51;
      v53 = (char *)v3 + v51;
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v55 = v6[5];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)v3 + v55);
    v58 = swift_getEnumCaseMultiPayload();
    *v56 = *v57;
    v213 = v3;
    if (v58 == 1)
    {
      v56[1] = v57[1];
      v59 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v60 = v59[6];
      v61 = (char *)v56 + v60;
      v62 = (char *)v57 + v60;
      v63 = sub_237A872D8();
      v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
      v212 = v64;
      swift_retain();
      v64(v61, v62, v63);
      v65 = v59[7];
      v66 = (char *)v56 + v65;
      v67 = (char *)v57 + v65;
      v68 = *((_OWORD *)v67 + 1);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v68;
      v66[32] = v67[32];
      v69 = v59[8];
      v70 = (_OWORD *)((char *)v56 + v69);
      v71 = (_OWORD *)((char *)v57 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      *(_QWORD *)((char *)v56 + v59[9]) = *(_QWORD *)((char *)v57 + v59[9]);
      v73 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)v56 + v73[5]) = *(_QWORD *)((char *)v57 + v73[5]);
      *((_BYTE *)v56 + v73[6]) = *((_BYTE *)v57 + v73[6]);
      v74 = v73[7];
      v75 = (char *)v56 + v74;
      v76 = (char *)v57 + v74;
      *(_QWORD *)v75 = *(_QWORD *)((char *)v57 + v74);
      *(_OWORD *)(v75 + 8) = *(_OWORD *)((char *)v57 + v74 + 8);
      v75[24] = *((_BYTE *)v57 + v74 + 24);
      v77 = type metadata accessor for NotificationSymbolConfiguration(0);
      v78 = *(int *)(v77 + 24);
      v79 = &v75[v78];
      v80 = &v76[v78];
      swift_retain();
      v212(v79, v80, v63);
      v81 = *(int *)(v77 + 28);
      v82 = &v75[v81];
      v83 = &v76[v81];
      v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      v85 = v73[8];
      v86 = (char *)v56 + v85;
      v87 = (char *)v57 + v85;
      v88 = *(_QWORD *)((char *)v57 + v85 + 8);
      *(_QWORD *)v86 = *(_QWORD *)((char *)v57 + v85);
      *((_QWORD *)v86 + 1) = v88;
      v89 = (uint64_t)v56 + v85 + 16;
      v90 = (uint64_t)v57 + v85 + 16;
      v91 = *(_OWORD *)((char *)v57 + v85 + 40);
      *(_OWORD *)(v86 + 40) = v91;
      v92 = v91;
      v93 = **(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8);
      swift_retain();
      swift_retain();
      v94 = v89;
      v3 = v213;
      v95 = v90;
      a1 = v215;
      v93(v94, v95, v92);
      v96 = *((_OWORD *)v87 + 5);
      *((_OWORD *)v86 + 5) = v96;
      (**(void (***)(uint64_t, uint64_t))(v96 - 8))((uint64_t)(v86 + 56), (uint64_t)(v87 + 56));
      v97 = *((_OWORD *)v87 + 7);
      *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
      *((_OWORD *)v86 + 7) = v97;
      v86[128] = v87[128];
      *((_QWORD *)v86 + 17) = *((_QWORD *)v87 + 17);
      v6 = v214;
      v98 = v73[9];
      v99 = (char *)v56 + v98;
      v100 = (char *)v57 + v98;
      v99[16] = v100[16];
      *(_OWORD *)v99 = *(_OWORD *)v100;
      v101 = v73[10];
      v102 = (char *)v56 + v101;
      v103 = (char *)v57 + v101;
      *(_OWORD *)v102 = *(_OWORD *)v103;
      v102[16] = v103[16];
      *((_BYTE *)v56 + v73[11]) = *((_BYTE *)v57 + v73[11]);
      v104 = v73[12];
      v105 = (char *)v56 + v104;
      v106 = (char *)v57 + v104;
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *(_OWORD *)(v105 + 8) = *(_OWORD *)(v106 + 8);
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v107 = v6[6];
    v108 = (char *)a1 + v107;
    v109 = (char *)v3 + v107;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v110 = *((_OWORD *)v109 + 1);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v110;
      v111 = *((_QWORD *)v109 + 5);
      *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
      *((_QWORD *)v108 + 5) = v111;
      *((_OWORD *)v108 + 3) = *((_OWORD *)v109 + 3);
      v108[64] = v109[64];
      *((_QWORD *)v108 + 9) = *((_QWORD *)v109 + 9);
      v112 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v113 = v112[7];
      v114 = &v108[v113];
      v115 = &v109[v113];
      *(_QWORD *)v114 = *(_QWORD *)&v109[v113];
      v114[24] = v109[v113 + 24];
      *(_OWORD *)(v114 + 8) = *(_OWORD *)&v109[v113 + 8];
      v116 = type metadata accessor for NotificationSymbolConfiguration(0);
      v117 = *(int *)(v116 + 24);
      v208 = &v115[v117];
      v210 = &v114[v117];
      v118 = sub_237A872D8();
      v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v119(v210, v208, v118);
      v120 = *(int *)(v116 + 28);
      v121 = &v114[v120];
      v122 = &v115[v120];
      v123 = *((_OWORD *)v122 + 1);
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v123;
      v124 = v112[8];
      v125 = &v108[v124];
      v126 = &v109[v124];
      v127 = *(_QWORD *)&v109[v124 + 8];
      *(_QWORD *)v125 = *(_QWORD *)&v109[v124];
      *((_QWORD *)v125 + 1) = v127;
      v128 = (uint64_t)&v108[v124 + 16];
      v129 = (uint64_t)&v109[v124 + 16];
      v130 = *(_OWORD *)&v109[v124 + 40];
      *(_OWORD *)(v125 + 40) = v130;
      v131 = v130;
      v132 = **(void (***)(uint64_t, uint64_t, uint64_t))(v130 - 8);
      swift_retain();
      swift_retain();
      v133 = v131;
      v3 = v213;
      v132(v128, v129, v133);
      v134 = *((_OWORD *)v126 + 5);
      *((_OWORD *)v125 + 5) = v134;
      (**(void (***)(uint64_t, uint64_t))(v134 - 8))((uint64_t)(v125 + 56), (uint64_t)(v126 + 56));
      v135 = *((_OWORD *)v126 + 7);
      *((_OWORD *)v125 + 6) = *((_OWORD *)v126 + 6);
      *((_OWORD *)v125 + 7) = v135;
      v125[128] = v126[128];
      *((_QWORD *)v125 + 17) = *((_QWORD *)v126 + 17);
      a1 = v215;
      v136 = v112[9];
      v137 = &v108[v136];
      v138 = &v109[v136];
      v137[16] = v138[16];
      *(_OWORD *)v137 = *(_OWORD *)v138;
      v139 = v112[10];
      v140 = &v108[v139];
      v141 = &v109[v139];
      *(_OWORD *)v140 = *(_OWORD *)v141;
      v140[16] = v141[16];
      v108[v112[11]] = v109[v112[11]];
      v142 = v112[12];
      v143 = &v108[v142];
      v144 = &v109[v142];
      v145 = sub_237A8747C();
      v146 = v143;
      v6 = v214;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v146, v144, v145);
      v147 = v112[13];
      v148 = &v108[v147];
      v149 = &v109[v147];
      *(_QWORD *)v148 = *(_QWORD *)v149;
      *(_OWORD *)(v148 + 8) = *(_OWORD *)(v149 + 8);
    }
    else
    {
      *(_QWORD *)v108 = *(_QWORD *)v109;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v150 = v6[7];
    v151 = (char *)a1 + v150;
    v152 = (char *)v3 + v150;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v153 = *((_OWORD *)v152 + 1);
      *(_OWORD *)v151 = *(_OWORD *)v152;
      *((_OWORD *)v151 + 1) = v153;
      v154 = *((_QWORD *)v152 + 5);
      *((_QWORD *)v151 + 4) = *((_QWORD *)v152 + 4);
      *((_QWORD *)v151 + 5) = v154;
      *((_OWORD *)v151 + 3) = *((_OWORD *)v152 + 3);
      v151[64] = v152[64];
      *((_QWORD *)v151 + 9) = *((_QWORD *)v152 + 9);
      v155 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v156 = v155[7];
      v157 = &v151[v156];
      v158 = &v152[v156];
      *(_QWORD *)v157 = *(_QWORD *)&v152[v156];
      v157[24] = v152[v156 + 24];
      *(_OWORD *)(v157 + 8) = *(_OWORD *)&v152[v156 + 8];
      v159 = type metadata accessor for NotificationSymbolConfiguration(0);
      v160 = *(int *)(v159 + 24);
      v209 = &v158[v160];
      v211 = &v157[v160];
      v161 = sub_237A872D8();
      v162 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v162(v211, v209, v161);
      v163 = *(int *)(v159 + 28);
      v164 = &v157[v163];
      v165 = &v158[v163];
      v166 = *((_OWORD *)v165 + 1);
      *(_OWORD *)v164 = *(_OWORD *)v165;
      *((_OWORD *)v164 + 1) = v166;
      v167 = v155[8];
      v168 = &v151[v167];
      v169 = &v152[v167];
      v170 = *(_QWORD *)&v152[v167 + 8];
      *(_QWORD *)v168 = *(_QWORD *)&v152[v167];
      *((_QWORD *)v168 + 1) = v170;
      v171 = (uint64_t)&v151[v167 + 16];
      v172 = (uint64_t)&v152[v167 + 16];
      v173 = *(_OWORD *)&v152[v167 + 40];
      *(_OWORD *)(v168 + 40) = v173;
      v174 = v173;
      v175 = **(void (***)(uint64_t, uint64_t, uint64_t))(v173 - 8);
      swift_retain();
      swift_retain();
      v176 = v174;
      v3 = v213;
      v175(v171, v172, v176);
      v177 = *((_OWORD *)v169 + 5);
      *((_OWORD *)v168 + 5) = v177;
      (**(void (***)(uint64_t, uint64_t))(v177 - 8))((uint64_t)(v168 + 56), (uint64_t)(v169 + 56));
      v178 = *((_OWORD *)v169 + 7);
      *((_OWORD *)v168 + 6) = *((_OWORD *)v169 + 6);
      *((_OWORD *)v168 + 7) = v178;
      v168[128] = v169[128];
      *((_QWORD *)v168 + 17) = *((_QWORD *)v169 + 17);
      a1 = v215;
      v179 = v155[9];
      v180 = &v151[v179];
      v181 = &v152[v179];
      v180[16] = v181[16];
      *(_OWORD *)v180 = *(_OWORD *)v181;
      v182 = v155[10];
      v183 = &v151[v182];
      v184 = &v152[v182];
      *(_OWORD *)v183 = *(_OWORD *)v184;
      v183[16] = v184[16];
      v151[v155[11]] = v152[v155[11]];
      v185 = v155[12];
      v186 = &v151[v185];
      v187 = &v152[v185];
      v188 = sub_237A8747C();
      v189 = v186;
      v6 = v214;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v189, v187, v188);
      v190 = v155[13];
      v191 = &v151[v190];
      v192 = &v152[v190];
      *(_QWORD *)v191 = *(_QWORD *)v192;
      *(_OWORD *)(v191 + 8) = *(_OWORD *)(v192 + 8);
    }
    else
    {
      *(_QWORD *)v151 = *(_QWORD *)v152;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v193 = v6[8];
    v194 = (char *)a1 + v193;
    v195 = (char *)v3 + v193;
    v196 = *(_QWORD *)((char *)v3 + v193 + 8);
    *(_QWORD *)v194 = *(_QWORD *)((char *)v3 + v193);
    *((_QWORD *)v194 + 1) = v196;
    v197 = *(_QWORD *)((char *)v3 + v193 + 16);
    v198 = *(_QWORD *)((char *)v3 + v193 + 24);
    v199 = *(_QWORD *)((char *)v3 + v193 + 32);
    v200 = *(_QWORD *)((char *)v3 + v193 + 40);
    v201 = v195[48];
    swift_bridgeObjectRetain();
    sub_2379732BC(v197, v198, v199, v200, v201);
    *((_QWORD *)v194 + 2) = v197;
    *((_QWORD *)v194 + 3) = v198;
    *((_QWORD *)v194 + 4) = v199;
    *((_QWORD *)v194 + 5) = v200;
    v194[48] = v201;
    v202 = v195[72];
    if (v202 == 255)
    {
      *(_OWORD *)(v194 + 56) = *(_OWORD *)(v195 + 56);
      v194[72] = v195[72];
    }
    else
    {
      v203 = *((_QWORD *)v195 + 7);
      v204 = *((_QWORD *)v195 + 8);
      sub_237973310(v203, v204, v195[72]);
      *((_QWORD *)v194 + 7) = v203;
      *((_QWORD *)v194 + 8) = v204;
      v194[72] = v202;
    }
    v194[73] = v195[73];
    v205 = *((_QWORD *)v195 + 11);
    if (v205)
    {
      *((_QWORD *)v194 + 10) = *((_QWORD *)v195 + 10);
      *((_QWORD *)v194 + 11) = v205;
      *((_QWORD *)v194 + 12) = *((_QWORD *)v195 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v194 + 5) = *((_OWORD *)v195 + 5);
      *((_QWORD *)v194 + 12) = *((_QWORD *)v195 + 12);
    }
    v206 = *((_QWORD *)v195 + 14);
    *((_QWORD *)v194 + 13) = *((_QWORD *)v195 + 13);
    *((_QWORD *)v194 + 14) = v206;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NotificationView(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
    v6 = sub_237A872D8();
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v5, v6);
    v8 = type metadata accessor for BannerConfiguration(0);
    v9 = a1 + *(int *)(v8 + 28);
    swift_release();
    v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    v7(v9 + *(int *)(v10 + 24), v6);
    v11 = a1 + *(int *)(v8 + 32);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v11 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v11 + 56);
    swift_release();
  }
  v12 = a1 + a2[5];
  v13 = swift_getEnumCaseMultiPayload();
  swift_release();
  if (v13 == 1)
  {
    v14 = v12 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
    v15 = sub_237A872D8();
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v17 = type metadata accessor for BannerConfiguration(0);
    v18 = v12 + *(int *)(v17 + 28);
    swift_release();
    v19 = type metadata accessor for NotificationSymbolConfiguration(0);
    v16(v18 + *(int *)(v19 + 24), v15);
    v20 = v12 + *(int *)(v17 + 32);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v20 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v20 + 56);
    swift_release();
  }
  v21 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    v22 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v23 = v21 + v22[7];
    swift_release();
    v24 = v23 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    v25 = sub_237A872D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v21 + v22[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v26 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v26 + 56);
    v27 = v21 + v22[12];
    v28 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  swift_release();
  v29 = a1 + a2[7];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    v30 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v31 = v29 + v30[7];
    swift_release();
    v32 = v31 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    v33 = sub_237A872D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
    v34 = v29 + v30[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v34 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v34 + 56);
    v35 = v29 + v30[12];
    v36 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  }
  swift_release();
  v37 = a1 + a2[8];
  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(v37 + 16), *(_QWORD *)(v37 + 24), *(_QWORD *)(v37 + 32), *(_QWORD *)(v37 + 40), *(_BYTE *)(v37 + 48));
  v38 = *(unsigned __int8 *)(v37 + 72);
  if (v38 != 255)
    sub_23790BD3C(*(_QWORD *)(v37 + 56), *(_QWORD *)(v37 + 64), v38);
  if (*(_QWORD *)(v37 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for NotificationView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  int v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  __int128 v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  __int128 v151;
  uint64_t v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  uint64_t v161;
  char *v162;
  char *v163;
  __int128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  void (*v210)(char *, char *, uint64_t);
  _QWORD *v211;
  int *v212;
  _QWORD *v213;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  v212 = a3;
  v213 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_237A872D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = v7[7];
    v14 = (char *)v213 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    v17 = v7[8];
    v18 = (_OWORD *)((char *)v213 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)((char *)v213 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
    v21 = (int *)type metadata accessor for BannerConfiguration(0);
    *(_QWORD *)((char *)v213 + v21[5]) = *(_QWORD *)((char *)a2 + v21[5]);
    *((_BYTE *)v213 + v21[6]) = *((_BYTE *)a2 + v21[6]);
    v22 = v21[7];
    v23 = (char *)v213 + v22;
    v24 = (char *)a2 + v22;
    *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
    v23[24] = *((_BYTE *)a2 + v22 + 24);
    v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    v26 = *(int *)(v25 + 24);
    v27 = &v23[v26];
    v28 = &v24[v26];
    swift_retain();
    v12(v27, v28, v11);
    v29 = *(int *)(v25 + 28);
    v30 = &v23[v29];
    v31 = &v24[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    v33 = v21[8];
    v34 = (char *)v213 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)((char *)a2 + v33 + 8);
    *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
    *((_QWORD *)v34 + 1) = v36;
    v37 = (uint64_t)a2 + v33 + 16;
    v38 = *(_OWORD *)((char *)a2 + v33 + 40);
    *(_OWORD *)(v34 + 40) = v38;
    v39 = v38;
    v40 = **(void (***)(char *, uint64_t, uint64_t))(v38 - 8);
    swift_retain();
    swift_retain();
    v41 = v37;
    a1 = v213;
    v40(v34 + 16, v41, v39);
    v42 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 5) = v42;
    (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v34 + 56), (uint64_t)(v35 + 56));
    v43 = *((_OWORD *)v35 + 7);
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    *((_OWORD *)v34 + 7) = v43;
    v34[128] = v35[128];
    *((_QWORD *)v34 + 17) = *((_QWORD *)v35 + 17);
    a3 = v212;
    v44 = v21[9];
    v45 = (char *)v213 + v44;
    v46 = (char *)a2 + v44;
    v45[16] = v46[16];
    *(_OWORD *)v45 = *(_OWORD *)v46;
    v47 = v21[10];
    v48 = (char *)v213 + v47;
    v49 = (char *)a2 + v47;
    *(_OWORD *)v48 = *(_OWORD *)v49;
    v48[16] = v49[16];
    *((_BYTE *)v213 + v21[11]) = *((_BYTE *)a2 + v21[11]);
    v50 = v21[12];
    v51 = (char *)v213 + v50;
    v52 = (char *)a2 + v50;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v53 = a3[5];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (_QWORD *)((char *)a2 + v53);
  v56 = swift_getEnumCaseMultiPayload();
  *v54 = *v55;
  v211 = a2;
  if (v56 == 1)
  {
    v54[1] = v55[1];
    v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v58 = v57[6];
    v59 = (char *)v54 + v58;
    v60 = (char *)v55 + v58;
    v61 = sub_237A872D8();
    v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    v210 = v62;
    swift_retain();
    v62(v59, v60, v61);
    v63 = v57[7];
    v64 = (char *)v54 + v63;
    v65 = (char *)v55 + v63;
    v66 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v66;
    v64[32] = v65[32];
    v67 = v57[8];
    v68 = (_OWORD *)((char *)v54 + v67);
    v69 = (_OWORD *)((char *)v55 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    *(_QWORD *)((char *)v54 + v57[9]) = *(_QWORD *)((char *)v55 + v57[9]);
    v71 = (int *)type metadata accessor for BannerConfiguration(0);
    *(_QWORD *)((char *)v54 + v71[5]) = *(_QWORD *)((char *)v55 + v71[5]);
    *((_BYTE *)v54 + v71[6]) = *((_BYTE *)v55 + v71[6]);
    v72 = v71[7];
    v73 = (char *)v54 + v72;
    v74 = (char *)v55 + v72;
    *(_QWORD *)v73 = *(_QWORD *)((char *)v55 + v72);
    *(_OWORD *)(v73 + 8) = *(_OWORD *)((char *)v55 + v72 + 8);
    v73[24] = *((_BYTE *)v55 + v72 + 24);
    v75 = type metadata accessor for NotificationSymbolConfiguration(0);
    v76 = *(int *)(v75 + 24);
    v77 = &v73[v76];
    v78 = &v74[v76];
    swift_retain();
    v210(v77, v78, v61);
    v79 = *(int *)(v75 + 28);
    v80 = &v73[v79];
    v81 = &v74[v79];
    v82 = *((_OWORD *)v81 + 1);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    *((_OWORD *)v80 + 1) = v82;
    v83 = v71[8];
    v84 = (char *)v54 + v83;
    v85 = (char *)v55 + v83;
    v86 = *(_QWORD *)((char *)v55 + v83 + 8);
    *(_QWORD *)v84 = *(_QWORD *)((char *)v55 + v83);
    *((_QWORD *)v84 + 1) = v86;
    v87 = (uint64_t)v54 + v83 + 16;
    v88 = (uint64_t)v55 + v83 + 16;
    v89 = *(_OWORD *)((char *)v55 + v83 + 40);
    *(_OWORD *)(v84 + 40) = v89;
    v90 = v89;
    v91 = **(void (***)(uint64_t, uint64_t, uint64_t))(v89 - 8);
    swift_retain();
    swift_retain();
    v92 = v87;
    a2 = v211;
    v93 = v88;
    a1 = v213;
    v91(v92, v93, v90);
    v94 = *((_OWORD *)v85 + 5);
    *((_OWORD *)v84 + 5) = v94;
    (**(void (***)(uint64_t, uint64_t))(v94 - 8))((uint64_t)(v84 + 56), (uint64_t)(v85 + 56));
    v95 = *((_OWORD *)v85 + 7);
    *((_OWORD *)v84 + 6) = *((_OWORD *)v85 + 6);
    *((_OWORD *)v84 + 7) = v95;
    v84[128] = v85[128];
    *((_QWORD *)v84 + 17) = *((_QWORD *)v85 + 17);
    a3 = v212;
    v96 = v71[9];
    v97 = (char *)v54 + v96;
    v98 = (char *)v55 + v96;
    v97[16] = v98[16];
    *(_OWORD *)v97 = *(_OWORD *)v98;
    v99 = v71[10];
    v100 = (char *)v54 + v99;
    v101 = (char *)v55 + v99;
    *(_OWORD *)v100 = *(_OWORD *)v101;
    v100[16] = v101[16];
    *((_BYTE *)v54 + v71[11]) = *((_BYTE *)v55 + v71[11]);
    v102 = v71[12];
    v103 = (char *)v54 + v102;
    v104 = (char *)v55 + v102;
    *(_QWORD *)v103 = *(_QWORD *)v104;
    *(_OWORD *)(v103 + 8) = *(_OWORD *)(v104 + 8);
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v105 = a3[6];
  v106 = (char *)a1 + v105;
  v107 = (char *)a2 + v105;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v108 = *((_OWORD *)v107 + 1);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v108;
    v109 = *((_QWORD *)v107 + 5);
    *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
    *((_QWORD *)v106 + 5) = v109;
    *((_OWORD *)v106 + 3) = *((_OWORD *)v107 + 3);
    v106[64] = v107[64];
    *((_QWORD *)v106 + 9) = *((_QWORD *)v107 + 9);
    v110 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v111 = v110[7];
    v112 = &v106[v111];
    v113 = &v107[v111];
    *(_QWORD *)v112 = *(_QWORD *)&v107[v111];
    v112[24] = v107[v111 + 24];
    *(_OWORD *)(v112 + 8) = *(_OWORD *)&v107[v111 + 8];
    v114 = type metadata accessor for NotificationSymbolConfiguration(0);
    v115 = *(int *)(v114 + 24);
    v206 = &v113[v115];
    v208 = &v112[v115];
    v116 = sub_237A872D8();
    v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v117(v208, v206, v116);
    v118 = *(int *)(v114 + 28);
    v119 = &v112[v118];
    v120 = &v113[v118];
    v121 = *((_OWORD *)v120 + 1);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *((_OWORD *)v119 + 1) = v121;
    v122 = v110[8];
    v123 = &v106[v122];
    v124 = &v107[v122];
    v125 = *(_QWORD *)&v107[v122 + 8];
    *(_QWORD *)v123 = *(_QWORD *)&v107[v122];
    *((_QWORD *)v123 + 1) = v125;
    v126 = (uint64_t)&v106[v122 + 16];
    v127 = (uint64_t)&v107[v122 + 16];
    v128 = *(_OWORD *)&v107[v122 + 40];
    *(_OWORD *)(v123 + 40) = v128;
    v129 = v128;
    v130 = **(void (***)(uint64_t, uint64_t, uint64_t))(v128 - 8);
    swift_retain();
    swift_retain();
    v131 = v129;
    a2 = v211;
    v130(v126, v127, v131);
    v132 = *((_OWORD *)v124 + 5);
    *((_OWORD *)v123 + 5) = v132;
    (**(void (***)(uint64_t, uint64_t))(v132 - 8))((uint64_t)(v123 + 56), (uint64_t)(v124 + 56));
    v133 = *((_OWORD *)v124 + 7);
    *((_OWORD *)v123 + 6) = *((_OWORD *)v124 + 6);
    *((_OWORD *)v123 + 7) = v133;
    v123[128] = v124[128];
    *((_QWORD *)v123 + 17) = *((_QWORD *)v124 + 17);
    a1 = v213;
    v134 = v110[9];
    v135 = &v106[v134];
    v136 = &v107[v134];
    v135[16] = v136[16];
    *(_OWORD *)v135 = *(_OWORD *)v136;
    v137 = v110[10];
    v138 = &v106[v137];
    v139 = &v107[v137];
    *(_OWORD *)v138 = *(_OWORD *)v139;
    v138[16] = v139[16];
    v106[v110[11]] = v107[v110[11]];
    v140 = v110[12];
    v141 = &v106[v140];
    v142 = &v107[v140];
    v143 = sub_237A8747C();
    v144 = v141;
    a3 = v212;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v144, v142, v143);
    v145 = v110[13];
    v146 = &v106[v145];
    v147 = &v107[v145];
    *(_QWORD *)v146 = *(_QWORD *)v147;
    *(_OWORD *)(v146 + 8) = *(_OWORD *)(v147 + 8);
  }
  else
  {
    *(_QWORD *)v106 = *(_QWORD *)v107;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v148 = a3[7];
  v149 = (char *)a1 + v148;
  v150 = (char *)a2 + v148;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v151 = *((_OWORD *)v150 + 1);
    *(_OWORD *)v149 = *(_OWORD *)v150;
    *((_OWORD *)v149 + 1) = v151;
    v152 = *((_QWORD *)v150 + 5);
    *((_QWORD *)v149 + 4) = *((_QWORD *)v150 + 4);
    *((_QWORD *)v149 + 5) = v152;
    *((_OWORD *)v149 + 3) = *((_OWORD *)v150 + 3);
    v149[64] = v150[64];
    *((_QWORD *)v149 + 9) = *((_QWORD *)v150 + 9);
    v153 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v154 = v153[7];
    v155 = &v149[v154];
    v156 = &v150[v154];
    *(_QWORD *)v155 = *(_QWORD *)&v150[v154];
    v155[24] = v150[v154 + 24];
    *(_OWORD *)(v155 + 8) = *(_OWORD *)&v150[v154 + 8];
    v157 = type metadata accessor for NotificationSymbolConfiguration(0);
    v158 = *(int *)(v157 + 24);
    v207 = &v156[v158];
    v209 = &v155[v158];
    v159 = sub_237A872D8();
    v160 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v160(v209, v207, v159);
    v161 = *(int *)(v157 + 28);
    v162 = &v155[v161];
    v163 = &v156[v161];
    v164 = *((_OWORD *)v163 + 1);
    *(_OWORD *)v162 = *(_OWORD *)v163;
    *((_OWORD *)v162 + 1) = v164;
    v165 = v153[8];
    v166 = &v149[v165];
    v167 = &v150[v165];
    v168 = *(_QWORD *)&v150[v165 + 8];
    *(_QWORD *)v166 = *(_QWORD *)&v150[v165];
    *((_QWORD *)v166 + 1) = v168;
    v169 = (uint64_t)&v149[v165 + 16];
    v170 = (uint64_t)&v150[v165 + 16];
    v171 = *(_OWORD *)&v150[v165 + 40];
    *(_OWORD *)(v166 + 40) = v171;
    v172 = v171;
    v173 = **(void (***)(uint64_t, uint64_t, uint64_t))(v171 - 8);
    swift_retain();
    swift_retain();
    v174 = v172;
    a2 = v211;
    v173(v169, v170, v174);
    v175 = *((_OWORD *)v167 + 5);
    *((_OWORD *)v166 + 5) = v175;
    (**(void (***)(uint64_t, uint64_t))(v175 - 8))((uint64_t)(v166 + 56), (uint64_t)(v167 + 56));
    v176 = *((_OWORD *)v167 + 7);
    *((_OWORD *)v166 + 6) = *((_OWORD *)v167 + 6);
    *((_OWORD *)v166 + 7) = v176;
    v166[128] = v167[128];
    *((_QWORD *)v166 + 17) = *((_QWORD *)v167 + 17);
    a1 = v213;
    v177 = v153[9];
    v178 = &v149[v177];
    v179 = &v150[v177];
    v178[16] = v179[16];
    *(_OWORD *)v178 = *(_OWORD *)v179;
    v180 = v153[10];
    v181 = &v149[v180];
    v182 = &v150[v180];
    *(_OWORD *)v181 = *(_OWORD *)v182;
    v181[16] = v182[16];
    v149[v153[11]] = v150[v153[11]];
    v183 = v153[12];
    v184 = &v149[v183];
    v185 = &v150[v183];
    v186 = sub_237A8747C();
    v187 = v184;
    a3 = v212;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v187, v185, v186);
    v188 = v153[13];
    v189 = &v149[v188];
    v190 = &v150[v188];
    *(_QWORD *)v189 = *(_QWORD *)v190;
    *(_OWORD *)(v189 + 8) = *(_OWORD *)(v190 + 8);
  }
  else
  {
    *(_QWORD *)v149 = *(_QWORD *)v150;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v191 = a3[8];
  v192 = (char *)a1 + v191;
  v193 = (char *)a2 + v191;
  v194 = *(_QWORD *)((char *)a2 + v191 + 8);
  *(_QWORD *)v192 = *(_QWORD *)((char *)a2 + v191);
  *((_QWORD *)v192 + 1) = v194;
  v195 = *(_QWORD *)((char *)a2 + v191 + 16);
  v196 = *(_QWORD *)((char *)a2 + v191 + 24);
  v197 = *(_QWORD *)((char *)a2 + v191 + 32);
  v198 = *(_QWORD *)((char *)a2 + v191 + 40);
  v199 = v193[48];
  swift_bridgeObjectRetain();
  sub_2379732BC(v195, v196, v197, v198, v199);
  *((_QWORD *)v192 + 2) = v195;
  *((_QWORD *)v192 + 3) = v196;
  *((_QWORD *)v192 + 4) = v197;
  *((_QWORD *)v192 + 5) = v198;
  v192[48] = v199;
  v200 = v193[72];
  if (v200 == 255)
  {
    *(_OWORD *)(v192 + 56) = *(_OWORD *)(v193 + 56);
    v192[72] = v193[72];
  }
  else
  {
    v201 = *((_QWORD *)v193 + 7);
    v202 = *((_QWORD *)v193 + 8);
    sub_237973310(v201, v202, v193[72]);
    *((_QWORD *)v192 + 7) = v201;
    *((_QWORD *)v192 + 8) = v202;
    v192[72] = v200;
  }
  v192[73] = v193[73];
  v203 = *((_QWORD *)v193 + 11);
  if (v203)
  {
    *((_QWORD *)v192 + 10) = *((_QWORD *)v193 + 10);
    *((_QWORD *)v192 + 11) = v203;
    *((_QWORD *)v192 + 12) = *((_QWORD *)v193 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v192 + 5) = *((_OWORD *)v193 + 5);
    *((_QWORD *)v192 + 12) = *((_QWORD *)v193 + 12);
  }
  v204 = *((_QWORD *)v193 + 14);
  *((_QWORD *)v192 + 13) = *((_QWORD *)v193 + 13);
  *((_QWORD *)v192 + 14) = v204;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NotificationView(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  int v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  int *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  uint64_t v161;
  char *v162;
  char *v163;
  __int128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  __int128 *v203;
  __int128 *v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  __int128 v214;
  _OWORD *v215;
  _OWORD *v216;
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  void (*v226)(char *, char *, uint64_t);
  int *v227;
  _QWORD *v228;
  _QWORD *v229;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_2378BC024(a1, &qword_2568237A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v5 = *v4;
    v228 = v4;
    v229 = v5;
    v227 = a3;
    if (EnumCaseMultiPayload == 1)
    {
      v5[1] = v4[1];
      v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v8 = v7[6];
      v9 = (char *)v5 + v8;
      v10 = (char *)v4 + v8;
      v11 = sub_237A872D8();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_retain();
      v12(v9, v10, v11);
      v13 = v7[7];
      v14 = (char *)v229 + v13;
      v15 = (char *)v4 + v13;
      v16 = *(_OWORD *)v15;
      v17 = *((_OWORD *)v15 + 1);
      v14[32] = v15[32];
      *(_OWORD *)v14 = v16;
      *((_OWORD *)v14 + 1) = v17;
      v18 = v7[8];
      v19 = (_OWORD *)((char *)v229 + v18);
      v20 = (_OWORD *)((char *)v4 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      *(_QWORD *)((char *)v229 + v7[9]) = *(_QWORD *)((char *)v4 + v7[9]);
      v22 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)v229 + v22[5]) = *(_QWORD *)((char *)v4 + v22[5]);
      *((_BYTE *)v229 + v22[6]) = *((_BYTE *)v4 + v22[6]);
      v23 = v22[7];
      v24 = (char *)v229 + v23;
      v25 = (char *)v228 + v23;
      *(_QWORD *)v24 = *(_QWORD *)((char *)v228 + v23);
      v26 = *(_OWORD *)((char *)v228 + v23 + 8);
      v24[24] = *((_BYTE *)v228 + v23 + 24);
      *(_OWORD *)(v24 + 8) = v26;
      v27 = type metadata accessor for NotificationSymbolConfiguration(0);
      v28 = *(int *)(v27 + 24);
      v29 = &v24[v28];
      v30 = &v25[v28];
      swift_retain();
      v12(v29, v30, v11);
      v31 = *(int *)(v27 + 28);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      v35 = v22[8];
      v36 = (char *)v229 + v35;
      v37 = (char *)v228 + v35;
      *(_QWORD *)v36 = *(_QWORD *)((char *)v228 + v35);
      *((_QWORD *)v36 + 1) = *(_QWORD *)((char *)v228 + v35 + 8);
      v38 = *(_QWORD *)((char *)v228 + v35 + 40);
      *((_QWORD *)v36 + 5) = v38;
      *((_QWORD *)v36 + 6) = *(_QWORD *)((char *)v228 + v35 + 48);
      v39 = **(void (***)(char *, char *, uint64_t))(v38 - 8);
      swift_retain();
      swift_retain();
      v5 = v229;
      v40 = v38;
      a3 = v227;
      v39(v36 + 16, v37 + 16, v40);
      v41 = *((_QWORD *)v37 + 10);
      *((_QWORD *)v36 + 10) = v41;
      *((_QWORD *)v36 + 11) = *((_QWORD *)v37 + 11);
      (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v36 + 56), (uint64_t)(v37 + 56));
      *((_QWORD *)v36 + 12) = *((_QWORD *)v37 + 12);
      *((_QWORD *)v36 + 13) = *((_QWORD *)v37 + 13);
      *((_QWORD *)v36 + 14) = *((_QWORD *)v37 + 14);
      *((_QWORD *)v36 + 15) = *((_QWORD *)v37 + 15);
      v36[128] = v37[128];
      v42 = *((_QWORD *)v37 + 17);
      v4 = v228;
      *((_QWORD *)v36 + 17) = v42;
      v43 = v22[9];
      v44 = (char *)v229 + v43;
      v45 = (char *)v228 + v43;
      v46 = v45[16];
      *(_OWORD *)v44 = *(_OWORD *)v45;
      v44[16] = v46;
      v47 = v22[10];
      v48 = (char *)v229 + v47;
      v49 = (char *)v228 + v47;
      v50 = v49[16];
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v48[16] = v50;
      *((_BYTE *)v229 + v22[11]) = *((_BYTE *)v228 + v22[11]);
      v51 = v22[12];
      v52 = (_QWORD *)((char *)v229 + v51);
      v53 = (_QWORD *)((char *)v228 + v51);
      *v52 = *v53;
      v52[1] = v53[1];
      v52[2] = v53[2];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v54 = a3[5];
    v55 = (_QWORD *)((char *)v5 + v54);
    v56 = (_QWORD *)((char *)v4 + v54);
    sub_2378BC024((uint64_t)v5 + v54, &qword_2568237A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
    v57 = swift_getEnumCaseMultiPayload();
    *v55 = *v56;
    if (v57 == 1)
    {
      v55[1] = v56[1];
      v58 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v59 = v58[6];
      v60 = (char *)v55 + v59;
      v61 = (char *)v56 + v59;
      v62 = sub_237A872D8();
      v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
      v226 = v63;
      swift_retain();
      v63(v60, v61, v62);
      v64 = v58[7];
      v65 = (char *)v55 + v64;
      v66 = (char *)v56 + v64;
      v67 = *(_OWORD *)v66;
      v68 = *((_OWORD *)v66 + 1);
      v65[32] = v66[32];
      *(_OWORD *)v65 = v67;
      *((_OWORD *)v65 + 1) = v68;
      v69 = v58[8];
      v70 = (_OWORD *)((char *)v55 + v69);
      v71 = (_OWORD *)((char *)v56 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      *(_QWORD *)((char *)v55 + v58[9]) = *(_QWORD *)((char *)v56 + v58[9]);
      v73 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)v55 + v73[5]) = *(_QWORD *)((char *)v56 + v73[5]);
      *((_BYTE *)v55 + v73[6]) = *((_BYTE *)v56 + v73[6]);
      v74 = v73[7];
      v75 = (char *)v55 + v74;
      v76 = (char *)v56 + v74;
      *(_QWORD *)v75 = *(_QWORD *)((char *)v56 + v74);
      v77 = *(_OWORD *)((char *)v56 + v74 + 8);
      v75[24] = *((_BYTE *)v56 + v74 + 24);
      *(_OWORD *)(v75 + 8) = v77;
      v78 = type metadata accessor for NotificationSymbolConfiguration(0);
      v79 = *(int *)(v78 + 24);
      v80 = &v75[v79];
      v81 = &v76[v79];
      swift_retain();
      v226(v80, v81, v62);
      v82 = *(int *)(v78 + 28);
      v83 = &v75[v82];
      v84 = &v76[v82];
      v85 = *((_OWORD *)v84 + 1);
      *(_OWORD *)v83 = *(_OWORD *)v84;
      *((_OWORD *)v83 + 1) = v85;
      v86 = v73[8];
      v87 = (char *)v55 + v86;
      v88 = (char *)v56 + v86;
      *(_QWORD *)v87 = *(_QWORD *)((char *)v56 + v86);
      *((_QWORD *)v87 + 1) = *(_QWORD *)((char *)v56 + v86 + 8);
      v89 = (uint64_t)v55 + v86 + 16;
      v90 = (uint64_t)v56 + v86 + 16;
      v91 = *(_QWORD *)((char *)v56 + v86 + 40);
      *((_QWORD *)v87 + 5) = v91;
      *((_QWORD *)v87 + 6) = *(_QWORD *)((char *)v56 + v86 + 48);
      v92 = **(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8);
      swift_retain();
      swift_retain();
      v93 = v90;
      v5 = v229;
      v94 = v91;
      a3 = v227;
      v92(v89, v93, v94);
      v95 = *((_QWORD *)v88 + 10);
      *((_QWORD *)v87 + 10) = v95;
      *((_QWORD *)v87 + 11) = *((_QWORD *)v88 + 11);
      (**(void (***)(uint64_t, uint64_t))(v95 - 8))((uint64_t)(v87 + 56), (uint64_t)(v88 + 56));
      *((_QWORD *)v87 + 12) = *((_QWORD *)v88 + 12);
      *((_QWORD *)v87 + 13) = *((_QWORD *)v88 + 13);
      *((_QWORD *)v87 + 14) = *((_QWORD *)v88 + 14);
      *((_QWORD *)v87 + 15) = *((_QWORD *)v88 + 15);
      v87[128] = v88[128];
      v96 = *((_QWORD *)v88 + 17);
      v4 = v228;
      *((_QWORD *)v87 + 17) = v96;
      v97 = v73[9];
      v98 = (char *)v55 + v97;
      v99 = (char *)v56 + v97;
      v100 = v99[16];
      *(_OWORD *)v98 = *(_OWORD *)v99;
      v98[16] = v100;
      v101 = v73[10];
      v102 = (char *)v55 + v101;
      v103 = (char *)v56 + v101;
      v104 = v103[16];
      *(_OWORD *)v102 = *(_OWORD *)v103;
      v102[16] = v104;
      *((_BYTE *)v55 + v73[11]) = *((_BYTE *)v56 + v73[11]);
      v105 = v73[12];
      v106 = (_QWORD *)((char *)v55 + v105);
      v107 = (_QWORD *)((char *)v56 + v105);
      *v106 = *v107;
      v106[1] = v107[1];
      v106[2] = v107[2];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v108 = a3[6];
    v109 = (char *)v5 + v108;
    v110 = (char *)v4 + v108;
    sub_2378BC024((uint64_t)v5 + v108, &qword_256823798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
      *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
      *((_QWORD *)v109 + 3) = *((_QWORD *)v110 + 3);
      *((_QWORD *)v109 + 4) = *((_QWORD *)v110 + 4);
      *((_QWORD *)v109 + 5) = *((_QWORD *)v110 + 5);
      *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
      *((_QWORD *)v109 + 7) = *((_QWORD *)v110 + 7);
      v109[64] = v110[64];
      *((_QWORD *)v109 + 9) = *((_QWORD *)v110 + 9);
      v111 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v112 = v111[7];
      v113 = &v109[v112];
      v114 = &v110[v112];
      *(_QWORD *)v113 = *(_QWORD *)&v110[v112];
      v115 = *(_OWORD *)&v110[v112 + 8];
      v113[24] = v110[v112 + 24];
      *(_OWORD *)(v113 + 8) = v115;
      v116 = type metadata accessor for NotificationSymbolConfiguration(0);
      v117 = *(int *)(v116 + 24);
      v222 = &v114[v117];
      v224 = &v113[v117];
      v118 = sub_237A872D8();
      v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v119(v224, v222, v118);
      v120 = *(int *)(v116 + 28);
      v121 = &v113[v120];
      v122 = &v114[v120];
      v123 = *((_OWORD *)v122 + 1);
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v123;
      v124 = v111[8];
      v125 = &v109[v124];
      v126 = &v110[v124];
      *(_QWORD *)v125 = *(_QWORD *)&v110[v124];
      *((_QWORD *)v125 + 1) = *(_QWORD *)&v110[v124 + 8];
      v127 = (uint64_t)&v109[v124 + 16];
      v128 = (uint64_t)&v110[v124 + 16];
      v129 = *(_QWORD *)&v110[v124 + 40];
      *((_QWORD *)v125 + 5) = v129;
      *((_QWORD *)v125 + 6) = *(_QWORD *)&v110[v124 + 48];
      v130 = **(void (***)(uint64_t, uint64_t, uint64_t))(v129 - 8);
      swift_retain();
      swift_retain();
      v130(v127, v128, v129);
      v131 = *((_QWORD *)v126 + 10);
      *((_QWORD *)v125 + 10) = v131;
      *((_QWORD *)v125 + 11) = *((_QWORD *)v126 + 11);
      (**(void (***)(uint64_t, uint64_t))(v131 - 8))((uint64_t)(v125 + 56), (uint64_t)(v126 + 56));
      *((_QWORD *)v125 + 12) = *((_QWORD *)v126 + 12);
      *((_QWORD *)v125 + 13) = *((_QWORD *)v126 + 13);
      *((_QWORD *)v125 + 14) = *((_QWORD *)v126 + 14);
      *((_QWORD *)v125 + 15) = *((_QWORD *)v126 + 15);
      v125[128] = v126[128];
      v132 = *((_QWORD *)v126 + 17);
      a3 = v227;
      *((_QWORD *)v125 + 17) = v132;
      v5 = v229;
      v133 = v111[9];
      v134 = &v109[v133];
      v135 = &v110[v133];
      v136 = v135[16];
      *(_OWORD *)v134 = *(_OWORD *)v135;
      v134[16] = v136;
      v137 = v111[10];
      v138 = &v109[v137];
      v139 = &v110[v137];
      v140 = v139[16];
      *(_OWORD *)v138 = *(_OWORD *)v139;
      v138[16] = v140;
      v109[v111[11]] = v110[v111[11]];
      v141 = v111[12];
      v142 = &v109[v141];
      v143 = &v110[v141];
      v144 = sub_237A8747C();
      v145 = v143;
      v4 = v228;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v145, v144);
      v146 = v111[13];
      v147 = &v109[v146];
      v148 = &v110[v146];
      *(_QWORD *)v147 = *(_QWORD *)v148;
      *((_QWORD *)v147 + 1) = *((_QWORD *)v148 + 1);
      *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
    }
    else
    {
      *(_QWORD *)v109 = *(_QWORD *)v110;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v149 = a3[7];
    v150 = (char *)v5 + v149;
    v151 = (char *)v4 + v149;
    sub_2378BC024((uint64_t)v5 + v149, &qword_256823798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v150 = *(_QWORD *)v151;
      *((_QWORD *)v150 + 1) = *((_QWORD *)v151 + 1);
      *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
      *((_QWORD *)v150 + 3) = *((_QWORD *)v151 + 3);
      *((_QWORD *)v150 + 4) = *((_QWORD *)v151 + 4);
      *((_QWORD *)v150 + 5) = *((_QWORD *)v151 + 5);
      *((_QWORD *)v150 + 6) = *((_QWORD *)v151 + 6);
      *((_QWORD *)v150 + 7) = *((_QWORD *)v151 + 7);
      v150[64] = v151[64];
      *((_QWORD *)v150 + 9) = *((_QWORD *)v151 + 9);
      v152 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v153 = v152[7];
      v154 = &v150[v153];
      v155 = &v151[v153];
      *(_QWORD *)v154 = *(_QWORD *)&v151[v153];
      v156 = *(_OWORD *)&v151[v153 + 8];
      v154[24] = v151[v153 + 24];
      *(_OWORD *)(v154 + 8) = v156;
      v157 = type metadata accessor for NotificationSymbolConfiguration(0);
      v158 = *(int *)(v157 + 24);
      v223 = &v155[v158];
      v225 = &v154[v158];
      v159 = sub_237A872D8();
      v160 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v160(v225, v223, v159);
      v161 = *(int *)(v157 + 28);
      v162 = &v154[v161];
      v163 = &v155[v161];
      v164 = *((_OWORD *)v163 + 1);
      *(_OWORD *)v162 = *(_OWORD *)v163;
      *((_OWORD *)v162 + 1) = v164;
      v165 = v152[8];
      v166 = &v150[v165];
      v167 = &v151[v165];
      *(_QWORD *)v166 = *(_QWORD *)&v151[v165];
      *((_QWORD *)v166 + 1) = *(_QWORD *)&v151[v165 + 8];
      v168 = (uint64_t)&v150[v165 + 16];
      v169 = (uint64_t)&v151[v165 + 16];
      v170 = *(_QWORD *)&v151[v165 + 40];
      *((_QWORD *)v166 + 5) = v170;
      *((_QWORD *)v166 + 6) = *(_QWORD *)&v151[v165 + 48];
      v171 = **(void (***)(uint64_t, uint64_t, uint64_t))(v170 - 8);
      swift_retain();
      swift_retain();
      v171(v168, v169, v170);
      v172 = *((_QWORD *)v167 + 10);
      *((_QWORD *)v166 + 10) = v172;
      *((_QWORD *)v166 + 11) = *((_QWORD *)v167 + 11);
      (**(void (***)(uint64_t, uint64_t))(v172 - 8))((uint64_t)(v166 + 56), (uint64_t)(v167 + 56));
      *((_QWORD *)v166 + 12) = *((_QWORD *)v167 + 12);
      *((_QWORD *)v166 + 13) = *((_QWORD *)v167 + 13);
      *((_QWORD *)v166 + 14) = *((_QWORD *)v167 + 14);
      *((_QWORD *)v166 + 15) = *((_QWORD *)v167 + 15);
      v166[128] = v167[128];
      v173 = *((_QWORD *)v167 + 17);
      a3 = v227;
      *((_QWORD *)v166 + 17) = v173;
      v5 = v229;
      v174 = v152[9];
      v175 = &v150[v174];
      v176 = &v151[v174];
      v177 = v176[16];
      *(_OWORD *)v175 = *(_OWORD *)v176;
      v175[16] = v177;
      v178 = v152[10];
      v179 = &v150[v178];
      v180 = &v151[v178];
      v181 = v180[16];
      *(_OWORD *)v179 = *(_OWORD *)v180;
      v179[16] = v181;
      v150[v152[11]] = v151[v152[11]];
      v182 = v152[12];
      v183 = &v150[v182];
      v184 = &v151[v182];
      v185 = sub_237A8747C();
      v186 = v184;
      v4 = v228;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v183, v186, v185);
      v187 = v152[13];
      v188 = &v150[v187];
      v189 = &v151[v187];
      *(_QWORD *)v188 = *(_QWORD *)v189;
      *((_QWORD *)v188 + 1) = *((_QWORD *)v189 + 1);
      *((_QWORD *)v188 + 2) = *((_QWORD *)v189 + 2);
    }
    else
    {
      *(_QWORD *)v150 = *(_QWORD *)v151;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v190 = a3[8];
  v191 = (char *)v5 + v190;
  v192 = (char *)v4 + v190;
  *(_QWORD *)v191 = *(_QWORD *)((char *)v4 + v190);
  *((_QWORD *)v191 + 1) = *(_QWORD *)((char *)v4 + v190 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v193 = *((_QWORD *)v192 + 2);
  v194 = *((_QWORD *)v192 + 3);
  v195 = *((_QWORD *)v192 + 4);
  v196 = *((_QWORD *)v192 + 5);
  v197 = v192[48];
  sub_2379732BC(v193, v194, v195, v196, v197);
  v198 = *((_QWORD *)v191 + 2);
  v199 = *((_QWORD *)v191 + 3);
  v200 = *((_QWORD *)v191 + 4);
  v201 = *((_QWORD *)v191 + 5);
  *((_QWORD *)v191 + 2) = v193;
  *((_QWORD *)v191 + 3) = v194;
  *((_QWORD *)v191 + 4) = v195;
  *((_QWORD *)v191 + 5) = v196;
  v202 = v191[48];
  v191[48] = v197;
  sub_23790BCE8(v198, v199, v200, v201, v202);
  v203 = (__int128 *)(v191 + 56);
  v204 = (__int128 *)(v192 + 56);
  v205 = v192[72];
  if (v191[72] == 255)
  {
    if (v205 == 255)
    {
      v214 = *v204;
      v191[72] = v192[72];
      *v203 = v214;
    }
    else
    {
      v211 = *((_QWORD *)v192 + 7);
      v212 = *((_QWORD *)v192 + 8);
      sub_237973310(v211, v212, v192[72]);
      *((_QWORD *)v191 + 7) = v211;
      *((_QWORD *)v191 + 8) = v212;
      v191[72] = v205;
    }
  }
  else if (v205 == 255)
  {
    sub_2379DBFE8((uint64_t)(v191 + 56));
    v213 = v192[72];
    *v203 = *v204;
    v191[72] = v213;
  }
  else
  {
    v206 = *((_QWORD *)v192 + 7);
    v207 = *((_QWORD *)v192 + 8);
    sub_237973310(v206, v207, v192[72]);
    v208 = *((_QWORD *)v191 + 7);
    v209 = *((_QWORD *)v191 + 8);
    *((_QWORD *)v191 + 7) = v206;
    *((_QWORD *)v191 + 8) = v207;
    v210 = v191[72];
    v191[72] = v205;
    sub_23790BD3C(v208, v209, v210);
  }
  v191[73] = v192[73];
  v215 = v191 + 80;
  v216 = v192 + 80;
  v217 = *((_QWORD *)v192 + 11);
  if (*((_QWORD *)v191 + 11))
  {
    if (v217)
    {
      *((_QWORD *)v191 + 10) = *((_QWORD *)v192 + 10);
      *((_QWORD *)v191 + 11) = *((_QWORD *)v192 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v191 + 12) = *((_QWORD *)v192 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018((uint64_t)(v191 + 80));
      v218 = *((_QWORD *)v192 + 12);
      *v215 = *v216;
      *((_QWORD *)v191 + 12) = v218;
    }
  }
  else if (v217)
  {
    *((_QWORD *)v191 + 10) = *((_QWORD *)v192 + 10);
    *((_QWORD *)v191 + 11) = *((_QWORD *)v192 + 11);
    *((_QWORD *)v191 + 12) = *((_QWORD *)v192 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v219 = *v216;
    *((_QWORD *)v191 + 12) = *((_QWORD *)v192 + 12);
    *v215 = v219;
  }
  v220 = *((_QWORD *)v192 + 14);
  *((_QWORD *)v191 + 13) = *((_QWORD *)v192 + 13);
  *((_QWORD *)v191 + 14) = v220;
  swift_retain();
  swift_release();
  return v5;
}

_OWORD *initializeWithTake for NotificationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  __int128 v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  int *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  __int128 v133;
  __int128 v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  __int128 v147;
  uint64_t v148;
  char *v149;
  char *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  uint64_t v176;
  int *v177;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_237A872D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
    v12(v9, v10, v11);
    v13 = v7[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    v17 = v7[8];
    v18 = (_OWORD *)((char *)a1 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
    v21 = (int *)type metadata accessor for BannerConfiguration(0);
    *(_QWORD *)((char *)a1 + v21[5]) = *(_QWORD *)((char *)a2 + v21[5]);
    *((_BYTE *)a1 + v21[6]) = *((_BYTE *)a2 + v21[6]);
    v22 = v21[7];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
    v23[24] = *((_BYTE *)a2 + v22 + 24);
    v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    v12(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v11);
    v26 = *(int *)(v25 + 28);
    v27 = &v23[v26];
    v28 = &v24[v26];
    v29 = *((_OWORD *)v28 + 1);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v29;
    v30 = v21[8];
    v31 = (_OWORD *)((char *)a1 + v30);
    v32 = (_OWORD *)((char *)a2 + v30);
    v33 = v32[3];
    v31[2] = v32[2];
    v31[3] = v33;
    v34 = v32[1];
    *v31 = *v32;
    v31[1] = v34;
    v35 = v32[8];
    v36 = v32[6];
    v31[7] = v32[7];
    v31[8] = v35;
    v37 = v32[5];
    v31[4] = v32[4];
    v31[5] = v37;
    v31[6] = v36;
    v38 = v21[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    v41 = v21[10];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *((_BYTE *)a1 + v21[11]) = *((_BYTE *)a2 + v21[11]);
    v44 = v21[12];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v47 = a3[5];
  v48 = (_OWORD *)((char *)a1 + v47);
  v49 = (_OWORD *)((char *)a2 + v47);
  v177 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v48 = *v49;
    v50 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v51 = v50[6];
    v52 = (char *)v48 + v51;
    v53 = (char *)v49 + v51;
    v54 = sub_237A872D8();
    v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
    v55(v52, v53, v54);
    v56 = v50[7];
    v57 = (char *)v48 + v56;
    v58 = (char *)v49 + v56;
    v59 = *((_OWORD *)v58 + 1);
    *(_OWORD *)v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v59;
    v57[32] = v58[32];
    v60 = v50[8];
    v61 = (_OWORD *)((char *)v48 + v60);
    v62 = (_OWORD *)((char *)v49 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(_QWORD *)((char *)v48 + v50[9]) = *(_QWORD *)((char *)v49 + v50[9]);
    v64 = (int *)type metadata accessor for BannerConfiguration(0);
    *(_QWORD *)((char *)v48 + v64[5]) = *(_QWORD *)((char *)v49 + v64[5]);
    *((_BYTE *)v48 + v64[6]) = *((_BYTE *)v49 + v64[6]);
    v65 = v64[7];
    v66 = (char *)v48 + v65;
    v67 = (char *)v49 + v65;
    *(_QWORD *)v66 = *(_QWORD *)((char *)v49 + v65);
    *(_OWORD *)(v66 + 8) = *(_OWORD *)((char *)v49 + v65 + 8);
    v66[24] = *((_BYTE *)v49 + v65 + 24);
    v68 = type metadata accessor for NotificationSymbolConfiguration(0);
    v55(&v66[*(int *)(v68 + 24)], &v67[*(int *)(v68 + 24)], v54);
    a3 = v177;
    v69 = *(int *)(v68 + 28);
    v70 = &v66[v69];
    v71 = &v67[v69];
    v72 = *((_OWORD *)v71 + 1);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *((_OWORD *)v70 + 1) = v72;
    v73 = v64[8];
    v74 = (_OWORD *)((char *)v48 + v73);
    v75 = (_OWORD *)((char *)v49 + v73);
    v76 = v75[3];
    v74[2] = v75[2];
    v74[3] = v76;
    v77 = v75[1];
    *v74 = *v75;
    v74[1] = v77;
    v78 = v75[8];
    v79 = v75[6];
    v74[7] = v75[7];
    v74[8] = v78;
    v80 = v75[5];
    v74[4] = v75[4];
    v74[5] = v80;
    v74[6] = v79;
    v81 = v64[9];
    v82 = (char *)v48 + v81;
    v83 = (char *)v49 + v81;
    *(_OWORD *)v82 = *(_OWORD *)v83;
    v82[16] = v83[16];
    v84 = v64[10];
    v85 = (char *)v48 + v84;
    v86 = (char *)v49 + v84;
    *(_OWORD *)v85 = *(_OWORD *)v86;
    v85[16] = v86[16];
    *((_BYTE *)v48 + v64[11]) = *((_BYTE *)v49 + v64[11]);
    v87 = v64[12];
    v88 = (char *)v48 + v87;
    v89 = (char *)v49 + v87;
    *(_OWORD *)v88 = *(_OWORD *)v89;
    *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v90 = a3[6];
  v91 = (char *)a1 + v90;
  v92 = (char *)a2 + v90;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  v176 = v93;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v94 = *((_OWORD *)v92 + 1);
    *(_OWORD *)v91 = *(_OWORD *)v92;
    *((_OWORD *)v91 + 1) = v94;
    v95 = *((_OWORD *)v92 + 3);
    *((_OWORD *)v91 + 2) = *((_OWORD *)v92 + 2);
    *((_OWORD *)v91 + 3) = v95;
    v91[64] = v92[64];
    *((_QWORD *)v91 + 9) = *((_QWORD *)v92 + 9);
    v96 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v97 = v96[7];
    v98 = &v91[v97];
    v99 = &v92[v97];
    *(_QWORD *)v98 = *(_QWORD *)&v92[v97];
    v98[24] = v92[v97 + 24];
    *(_OWORD *)(v98 + 8) = *(_OWORD *)&v92[v97 + 8];
    v100 = type metadata accessor for NotificationSymbolConfiguration(0);
    v101 = *(int *)(v100 + 24);
    v102 = &v98[v101];
    v103 = &v99[v101];
    v104 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
    v105 = *(int *)(v100 + 28);
    v106 = &v98[v105];
    v107 = &v99[v105];
    v93 = v176;
    a3 = v177;
    v108 = *((_OWORD *)v107 + 1);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v108;
    v109 = v96[8];
    v110 = &v91[v109];
    v111 = &v92[v109];
    v112 = *((_OWORD *)v111 + 3);
    *((_OWORD *)v110 + 2) = *((_OWORD *)v111 + 2);
    *((_OWORD *)v110 + 3) = v112;
    v113 = *((_OWORD *)v111 + 1);
    *(_OWORD *)v110 = *(_OWORD *)v111;
    *((_OWORD *)v110 + 1) = v113;
    v114 = *((_OWORD *)v111 + 8);
    v115 = *((_OWORD *)v111 + 6);
    *((_OWORD *)v110 + 7) = *((_OWORD *)v111 + 7);
    *((_OWORD *)v110 + 8) = v114;
    v116 = *((_OWORD *)v111 + 5);
    *((_OWORD *)v110 + 4) = *((_OWORD *)v111 + 4);
    *((_OWORD *)v110 + 5) = v116;
    *((_OWORD *)v110 + 6) = v115;
    v117 = v96[9];
    v118 = &v91[v117];
    v119 = &v92[v117];
    *(_OWORD *)v118 = *(_OWORD *)v119;
    v118[16] = v119[16];
    v120 = v96[10];
    v121 = &v91[v120];
    v122 = &v92[v120];
    *(_OWORD *)v121 = *(_OWORD *)v122;
    v121[16] = v122[16];
    v91[v96[11]] = v92[v96[11]];
    v123 = v96[12];
    v124 = &v91[v123];
    v125 = &v92[v123];
    v126 = sub_237A8747C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
    v127 = v96[13];
    v128 = &v91[v127];
    v129 = &v92[v127];
    *(_OWORD *)v128 = *(_OWORD *)v129;
    *((_QWORD *)v128 + 2) = *((_QWORD *)v129 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  v130 = a3[7];
  v131 = (char *)a1 + v130;
  v132 = (char *)a2 + v130;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v133 = *((_OWORD *)v132 + 1);
    *(_OWORD *)v131 = *(_OWORD *)v132;
    *((_OWORD *)v131 + 1) = v133;
    v134 = *((_OWORD *)v132 + 3);
    *((_OWORD *)v131 + 2) = *((_OWORD *)v132 + 2);
    *((_OWORD *)v131 + 3) = v134;
    v131[64] = v132[64];
    *((_QWORD *)v131 + 9) = *((_QWORD *)v132 + 9);
    v135 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v136 = v135[7];
    v137 = &v131[v136];
    v138 = &v132[v136];
    *(_QWORD *)v137 = *(_QWORD *)&v132[v136];
    v137[24] = v132[v136 + 24];
    *(_OWORD *)(v137 + 8) = *(_OWORD *)&v132[v136 + 8];
    v139 = type metadata accessor for NotificationSymbolConfiguration(0);
    v140 = *(int *)(v139 + 24);
    v141 = &v137[v140];
    v142 = &v138[v140];
    v143 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v141, v142, v143);
    v144 = *(int *)(v139 + 28);
    v145 = &v137[v144];
    a3 = v177;
    v146 = &v138[v144];
    v147 = *((_OWORD *)v146 + 1);
    *(_OWORD *)v145 = *(_OWORD *)v146;
    *((_OWORD *)v145 + 1) = v147;
    v148 = v135[8];
    v149 = &v131[v148];
    v150 = &v132[v148];
    v151 = *((_OWORD *)v150 + 3);
    *((_OWORD *)v149 + 2) = *((_OWORD *)v150 + 2);
    *((_OWORD *)v149 + 3) = v151;
    v152 = *((_OWORD *)v150 + 1);
    *(_OWORD *)v149 = *(_OWORD *)v150;
    *((_OWORD *)v149 + 1) = v152;
    v153 = *((_OWORD *)v150 + 8);
    v154 = *((_OWORD *)v150 + 6);
    *((_OWORD *)v149 + 7) = *((_OWORD *)v150 + 7);
    *((_OWORD *)v149 + 8) = v153;
    v155 = *((_OWORD *)v150 + 5);
    *((_OWORD *)v149 + 4) = *((_OWORD *)v150 + 4);
    *((_OWORD *)v149 + 5) = v155;
    *((_OWORD *)v149 + 6) = v154;
    v156 = v135[9];
    v157 = &v131[v156];
    v158 = &v132[v156];
    *(_OWORD *)v157 = *(_OWORD *)v158;
    v157[16] = v158[16];
    v159 = v135[10];
    v160 = &v131[v159];
    v161 = &v132[v159];
    *(_OWORD *)v160 = *(_OWORD *)v161;
    v160[16] = v161[16];
    v131[v135[11]] = v132[v135[11]];
    v162 = v135[12];
    v163 = &v131[v162];
    v164 = &v132[v162];
    v165 = sub_237A8747C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
    v166 = v135[13];
    v167 = &v131[v166];
    v168 = &v132[v166];
    *(_OWORD *)v167 = *(_OWORD *)v168;
    *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  v169 = a3[8];
  v170 = (char *)a1 + v169;
  v171 = (char *)a2 + v169;
  v172 = *((_OWORD *)v171 + 5);
  *((_OWORD *)v170 + 4) = *((_OWORD *)v171 + 4);
  *((_OWORD *)v170 + 5) = v172;
  *((_OWORD *)v170 + 6) = *((_OWORD *)v171 + 6);
  *((_QWORD *)v170 + 14) = *((_QWORD *)v171 + 14);
  v173 = *((_OWORD *)v171 + 1);
  *(_OWORD *)v170 = *(_OWORD *)v171;
  *((_OWORD *)v170 + 1) = v173;
  v174 = *((_OWORD *)v171 + 3);
  *((_OWORD *)v170 + 2) = *((_OWORD *)v171 + 2);
  *((_OWORD *)v170 + 3) = v174;
  return a1;
}

_OWORD *assignWithTake for NotificationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  __int128 v147;
  uint64_t v148;
  char *v149;
  char *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  char v179;
  _OWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v187)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_2568237A0);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v7 = v6[6];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_237A872D8();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = v6[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      v13[32] = v14[32];
      v16 = v6[8];
      v17 = (_OWORD *)((char *)a1 + v16);
      v18 = (_OWORD *)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
      v20 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
      *((_BYTE *)a1 + v20[6]) = *((_BYTE *)a2 + v20[6]);
      v21 = v20[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      *(_QWORD *)v22 = *(_QWORD *)((char *)a2 + v21);
      *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
      v22[24] = *((_BYTE *)a2 + v21 + 24);
      v24 = type metadata accessor for NotificationSymbolConfiguration(0);
      v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
      v25 = *(int *)(v24 + 28);
      v26 = &v22[v25];
      v27 = &v23[v25];
      v28 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v28;
      v29 = v20[8];
      v30 = (_OWORD *)((char *)a1 + v29);
      v31 = (_OWORD *)((char *)a2 + v29);
      v32 = v31[3];
      v30[2] = v31[2];
      v30[3] = v32;
      v33 = v31[1];
      *v30 = *v31;
      v30[1] = v33;
      v34 = v31[8];
      v35 = v31[6];
      v30[7] = v31[7];
      v30[8] = v34;
      v36 = v31[5];
      v30[4] = v31[4];
      v30[5] = v36;
      v30[6] = v35;
      v37 = v20[9];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      *(_OWORD *)v38 = *(_OWORD *)v39;
      v38[16] = v39[16];
      v40 = v20[10];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      *((_BYTE *)a1 + v20[11]) = *((_BYTE *)a2 + v20[11]);
      v43 = v20[12];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    v46 = a3[5];
    v47 = (_OWORD *)((char *)a1 + v46);
    v48 = (_OWORD *)((char *)a2 + v46);
    sub_2378BC024((uint64_t)a1 + v46, &qword_2568237A0);
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v47 = *v48;
      v50 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
      v51 = v50[6];
      v52 = (char *)v47 + v51;
      v53 = (char *)v48 + v51;
      v54 = sub_237A872D8();
      v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
      v187(v52, v53, v54);
      v55 = v50[7];
      v56 = (char *)v47 + v55;
      v57 = (char *)v48 + v55;
      v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      v56[32] = v57[32];
      v59 = v50[8];
      v60 = (_OWORD *)((char *)v47 + v59);
      v61 = (_OWORD *)((char *)v48 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *(_QWORD *)((char *)v47 + v50[9]) = *(_QWORD *)((char *)v48 + v50[9]);
      v63 = (int *)type metadata accessor for BannerConfiguration(0);
      *(_QWORD *)((char *)v47 + v63[5]) = *(_QWORD *)((char *)v48 + v63[5]);
      *((_BYTE *)v47 + v63[6]) = *((_BYTE *)v48 + v63[6]);
      v64 = v63[7];
      v65 = (char *)v47 + v64;
      v66 = (char *)v48 + v64;
      *(_QWORD *)v65 = *(_QWORD *)((char *)v48 + v64);
      *(_OWORD *)(v65 + 8) = *(_OWORD *)((char *)v48 + v64 + 8);
      v65[24] = *((_BYTE *)v48 + v64 + 24);
      v67 = type metadata accessor for NotificationSymbolConfiguration(0);
      v187(&v65[*(int *)(v67 + 24)], &v66[*(int *)(v67 + 24)], v54);
      v68 = *(int *)(v67 + 28);
      v69 = &v65[v68];
      v70 = &v66[v68];
      v71 = *((_OWORD *)v70 + 1);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v71;
      v72 = v63[8];
      v73 = (_OWORD *)((char *)v47 + v72);
      v74 = (_OWORD *)((char *)v48 + v72);
      v75 = v74[3];
      v73[2] = v74[2];
      v73[3] = v75;
      v76 = v74[1];
      *v73 = *v74;
      v73[1] = v76;
      v77 = v74[8];
      v78 = v74[6];
      v73[7] = v74[7];
      v73[8] = v77;
      v79 = v74[5];
      v73[4] = v74[4];
      v73[5] = v79;
      v73[6] = v78;
      v80 = v63[9];
      v81 = (char *)v47 + v80;
      v82 = (char *)v48 + v80;
      *(_OWORD *)v81 = *(_OWORD *)v82;
      v81[16] = v82[16];
      v83 = v63[10];
      v84 = (char *)v47 + v83;
      v85 = (char *)v48 + v83;
      *(_OWORD *)v84 = *(_OWORD *)v85;
      v84[16] = v85[16];
      *((_BYTE *)v47 + v63[11]) = *((_BYTE *)v48 + v63[11]);
      v86 = v63[12];
      v87 = (char *)v47 + v86;
      v88 = (char *)v48 + v86;
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    v89 = a3[6];
    v90 = (char *)a1 + v89;
    v91 = (char *)a2 + v89;
    sub_2378BC024((uint64_t)a1 + v89, &qword_256823798);
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v93 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v93;
      v94 = *((_OWORD *)v91 + 3);
      *((_OWORD *)v90 + 2) = *((_OWORD *)v91 + 2);
      *((_OWORD *)v90 + 3) = v94;
      v90[64] = v91[64];
      *((_QWORD *)v90 + 9) = *((_QWORD *)v91 + 9);
      v95 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v96 = v95[7];
      v97 = &v90[v96];
      v98 = &v91[v96];
      *(_QWORD *)v97 = *(_QWORD *)&v91[v96];
      v97[24] = v91[v96 + 24];
      *(_OWORD *)(v97 + 8) = *(_OWORD *)&v91[v96 + 8];
      v99 = type metadata accessor for NotificationSymbolConfiguration(0);
      v100 = *(int *)(v99 + 24);
      v101 = &v97[v100];
      v102 = &v98[v100];
      v103 = sub_237A872D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
      v104 = *(int *)(v99 + 28);
      v105 = &v97[v104];
      v106 = &v98[v104];
      v107 = *((_OWORD *)v106 + 1);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v107;
      v108 = v95[8];
      v109 = &v90[v108];
      v110 = &v91[v108];
      v111 = *((_OWORD *)v110 + 3);
      *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
      *((_OWORD *)v109 + 3) = v111;
      v112 = *((_OWORD *)v110 + 1);
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_OWORD *)v109 + 1) = v112;
      v113 = *((_OWORD *)v110 + 8);
      v114 = *((_OWORD *)v110 + 6);
      *((_OWORD *)v109 + 7) = *((_OWORD *)v110 + 7);
      *((_OWORD *)v109 + 8) = v113;
      v115 = *((_OWORD *)v110 + 5);
      *((_OWORD *)v109 + 4) = *((_OWORD *)v110 + 4);
      *((_OWORD *)v109 + 5) = v115;
      *((_OWORD *)v109 + 6) = v114;
      v116 = v95[9];
      v117 = &v90[v116];
      v118 = &v91[v116];
      *(_OWORD *)v117 = *(_OWORD *)v118;
      v117[16] = v118[16];
      v119 = v95[10];
      v120 = &v90[v119];
      v121 = &v91[v119];
      *(_OWORD *)v120 = *(_OWORD *)v121;
      v120[16] = v121[16];
      v90[v95[11]] = v91[v95[11]];
      v122 = v95[12];
      v123 = &v90[v122];
      v124 = &v91[v122];
      v125 = sub_237A8747C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
      v126 = v95[13];
      v127 = &v90[v126];
      v128 = &v91[v126];
      *(_OWORD *)v127 = *(_OWORD *)v128;
      *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    v129 = a3[7];
    v130 = (char *)a1 + v129;
    v131 = (char *)a2 + v129;
    sub_2378BC024((uint64_t)a1 + v129, &qword_256823798);
    v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v133 = *((_OWORD *)v131 + 1);
      *(_OWORD *)v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + 1) = v133;
      v134 = *((_OWORD *)v131 + 3);
      *((_OWORD *)v130 + 2) = *((_OWORD *)v131 + 2);
      *((_OWORD *)v130 + 3) = v134;
      v130[64] = v131[64];
      *((_QWORD *)v130 + 9) = *((_QWORD *)v131 + 9);
      v135 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v136 = v135[7];
      v137 = &v130[v136];
      v138 = &v131[v136];
      *(_QWORD *)v137 = *(_QWORD *)&v131[v136];
      v137[24] = v131[v136 + 24];
      *(_OWORD *)(v137 + 8) = *(_OWORD *)&v131[v136 + 8];
      v139 = type metadata accessor for NotificationSymbolConfiguration(0);
      v140 = *(int *)(v139 + 24);
      v141 = &v137[v140];
      v142 = &v138[v140];
      v143 = sub_237A872D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v141, v142, v143);
      v144 = *(int *)(v139 + 28);
      v145 = &v137[v144];
      v146 = &v138[v144];
      v147 = *((_OWORD *)v146 + 1);
      *(_OWORD *)v145 = *(_OWORD *)v146;
      *((_OWORD *)v145 + 1) = v147;
      v148 = v135[8];
      v149 = &v130[v148];
      v150 = &v131[v148];
      v151 = *((_OWORD *)v150 + 3);
      *((_OWORD *)v149 + 2) = *((_OWORD *)v150 + 2);
      *((_OWORD *)v149 + 3) = v151;
      v152 = *((_OWORD *)v150 + 1);
      *(_OWORD *)v149 = *(_OWORD *)v150;
      *((_OWORD *)v149 + 1) = v152;
      v153 = *((_OWORD *)v150 + 8);
      v154 = *((_OWORD *)v150 + 6);
      *((_OWORD *)v149 + 7) = *((_OWORD *)v150 + 7);
      *((_OWORD *)v149 + 8) = v153;
      v155 = *((_OWORD *)v150 + 5);
      *((_OWORD *)v149 + 4) = *((_OWORD *)v150 + 4);
      *((_OWORD *)v149 + 5) = v155;
      *((_OWORD *)v149 + 6) = v154;
      v156 = v135[9];
      v157 = &v130[v156];
      v158 = &v131[v156];
      *(_OWORD *)v157 = *(_OWORD *)v158;
      v157[16] = v158[16];
      v159 = v135[10];
      v160 = &v130[v159];
      v161 = &v131[v159];
      *(_OWORD *)v160 = *(_OWORD *)v161;
      v160[16] = v161[16];
      v130[v135[11]] = v131[v135[11]];
      v162 = v135[12];
      v163 = &v130[v162];
      v164 = &v131[v162];
      v165 = sub_237A8747C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
      v166 = v135[13];
      v167 = &v130[v166];
      v168 = &v131[v166];
      *(_OWORD *)v167 = *(_OWORD *)v168;
      *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    }
  }
  v169 = a3[8];
  v170 = (char *)a1 + v169;
  v171 = (char *)a2 + v169;
  v172 = *(_QWORD *)((char *)a2 + v169 + 8);
  *(_QWORD *)v170 = *(_QWORD *)((char *)a2 + v169);
  *((_QWORD *)v170 + 1) = v172;
  swift_bridgeObjectRelease();
  v173 = v171[48];
  v174 = *((_QWORD *)v170 + 2);
  v175 = *((_QWORD *)v170 + 3);
  v176 = *((_QWORD *)v170 + 4);
  v177 = *((_QWORD *)v170 + 5);
  v178 = *((_OWORD *)v171 + 2);
  *((_OWORD *)v170 + 1) = *((_OWORD *)v171 + 1);
  *((_OWORD *)v170 + 2) = v178;
  v179 = v170[48];
  v170[48] = v173;
  sub_23790BCE8(v174, v175, v176, v177, v179);
  v180 = v171 + 56;
  v181 = v170[72];
  if (v181 != 255)
  {
    v182 = v171[72];
    if (v182 != 255)
    {
      v183 = *((_QWORD *)v170 + 7);
      v184 = *((_QWORD *)v170 + 8);
      *(_OWORD *)(v170 + 56) = *v180;
      v170[72] = v182;
      sub_23790BD3C(v183, v184, v181);
      goto LABEL_19;
    }
    sub_2379DBFE8((uint64_t)(v170 + 56));
  }
  *(_OWORD *)(v170 + 56) = *v180;
  v170[72] = v171[72];
LABEL_19:
  v170[73] = v171[73];
  if (!*((_QWORD *)v170 + 11))
  {
LABEL_23:
    *((_OWORD *)v170 + 5) = *((_OWORD *)v171 + 5);
    *((_QWORD *)v170 + 12) = *((_QWORD *)v171 + 12);
    goto LABEL_24;
  }
  v185 = *((_QWORD *)v171 + 11);
  if (!v185)
  {
    sub_2379DC018((uint64_t)(v170 + 80));
    goto LABEL_23;
  }
  *((_QWORD *)v170 + 10) = *((_QWORD *)v171 + 10);
  *((_QWORD *)v170 + 11) = v185;
  swift_bridgeObjectRelease();
  *((_QWORD *)v170 + 12) = *((_QWORD *)v171 + 12);
  swift_release();
LABEL_24:
  *(_OWORD *)(v170 + 104) = *(_OWORD *)(v171 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A371CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828590);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A3728C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828590);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void sub_237A3733C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2379A3AF4(319, qword_256828600, (void (*)(uint64_t))type metadata accessor for BannerConfiguration);
  if (v0 <= 0x3F)
  {
    sub_2379A3AF4(319, &qword_256824E50, (void (*)(uint64_t))type metadata accessor for UserInteractiveConfiguration);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_237A373EC()
{
  return sub_2378B70D4(&qword_256828640, &qword_256828588, MEMORY[0x24BDF44C8]);
}

uint64_t sub_237A37418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_237A869B4();
  v4[0] = v1;
  v4[1] = sub_237A3746C();
  return MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_237A3746C()
{
  unint64_t result;

  result = qword_256828648;
  if (!qword_256828648)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA7CE4, &type metadata for PushToBaseModifier);
    atomic_store(result, (unint64_t *)&qword_256828648);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PushToBaseModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PushToBaseModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A3759C + 4 * byte_237AA7A75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A375D0 + 4 * byte_237AA7A70[v4]))();
}

uint64_t sub_237A375D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A375D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A375E0);
  return result;
}

uint64_t sub_237A375EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A375F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A375F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A37600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushToBaseModifier()
{
  return &type metadata for PushToBaseModifier;
}

_QWORD *sub_237A3761C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  char *v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for NoticeConfiguration(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
      v9[24] = *((_BYTE *)a2 + v8 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
      v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      v12 = *(int *)(v11 + 24);
      v54 = &v10[v12];
      v55 = &v9[v12];
      v13 = sub_237A872D8();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_retain();
      v14(v55, v54, v13);
      v15 = *(int *)(v11 + 28);
      v16 = &v9[v15];
      v17 = &v10[v15];
      v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      v19 = v7[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = *(_QWORD *)((char *)a2 + v19 + 8);
      *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
      *((_QWORD *)v20 + 1) = v22;
      v56 = (uint64_t)a1 + v19 + 16;
      v23 = (uint64_t)a2 + v19 + 16;
      v24 = *(_OWORD *)((char *)a2 + v19 + 40);
      *(_OWORD *)(v20 + 40) = v24;
      v25 = v24;
      v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_retain();
      swift_retain();
      v26(v56, v23, v25);
      v27 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 5) = v27;
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v20 + 56), (uint64_t)(v21 + 56));
      v28 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v28;
      v20[128] = v21[128];
      *((_QWORD *)v20 + 17) = *((_QWORD *)v21 + 17);
      v29 = v7[7];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v30[16] = v31[16];
      *(_OWORD *)v30 = *(_OWORD *)v31;
      v32 = v7[8];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
      *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
      v35 = v7[10];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_OWORD *)(v36 + 8) = *(_OWORD *)(v37 + 8);
    }
    else
    {
      *a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v39 = *(int *)(a3 + 20);
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    v42 = *(_QWORD *)((char *)a2 + v39 + 8);
    *(_QWORD *)v40 = *(_QWORD *)((char *)a2 + v39);
    *((_QWORD *)v40 + 1) = v42;
    v43 = *(_QWORD *)((char *)a2 + v39 + 16);
    v44 = *((_QWORD *)v41 + 3);
    v45 = *((_QWORD *)v41 + 4);
    v46 = *((_QWORD *)v41 + 5);
    v47 = v41[48];
    swift_bridgeObjectRetain();
    sub_2379732BC(v43, v44, v45, v46, v47);
    *((_QWORD *)v40 + 2) = v43;
    *((_QWORD *)v40 + 3) = v44;
    *((_QWORD *)v40 + 4) = v45;
    *((_QWORD *)v40 + 5) = v46;
    v40[48] = v47;
    v48 = v41[72];
    if (v48 == 255)
    {
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      v40[72] = v41[72];
    }
    else
    {
      v49 = *((_QWORD *)v41 + 7);
      v50 = *((_QWORD *)v41 + 8);
      sub_237973310(v49, v50, v41[72]);
      *((_QWORD *)v40 + 7) = v49;
      *((_QWORD *)v40 + 8) = v50;
      v40[72] = v48;
    }
    v40[73] = v41[73];
    v51 = *((_QWORD *)v41 + 11);
    if (v51)
    {
      *((_QWORD *)v40 + 10) = *((_QWORD *)v41 + 10);
      *((_QWORD *)v40 + 11) = v51;
      *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v40 + 5) = *((_OWORD *)v41 + 5);
      *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
    }
    v52 = *((_QWORD *)v41 + 14);
    *((_QWORD *)v40 + 13) = *((_QWORD *)v41 + 13);
    *((_QWORD *)v40 + 14) = v52;
  }
  swift_retain();
  return a1;
}

uint64_t sub_237A37940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for NoticeConfiguration(0);
    v5 = a1 + *(int *)(v4 + 20);
    swift_release();
    v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    v7 = sub_237A872D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + *(int *)(v4 + 24);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
  }
  swift_release();
  v9 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_BYTE *)(v9 + 48));
  v10 = *(unsigned __int8 *)(v9 + 72);
  if (v10 != 255)
    sub_23790BD3C(*(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), v10);
  if (*(_QWORD *)(v9 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_237A37A58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for NoticeConfiguration(0);
    v7 = v6[5];
    v55 = a3;
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
    v8[24] = *((_BYTE *)a2 + v7 + 24);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
    v10 = type metadata accessor for NotificationSymbolConfiguration(0);
    v11 = *(int *)(v10 + 24);
    v54 = &v8[v11];
    v12 = &v9[v11];
    v13 = sub_237A872D8();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v14(v54, v12, v13);
    v15 = *(int *)(v10 + 28);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    v19 = v6[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)((char *)a2 + v19 + 8);
    *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
    *((_QWORD *)v20 + 1) = v22;
    v23 = (uint64_t)a1 + v19 + 16;
    v24 = (uint64_t)a2 + v19 + 16;
    v25 = *(_OWORD *)((char *)a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v25;
    v26 = v25;
    v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
    swift_retain();
    swift_retain();
    v27(v23, v24, v26);
    v28 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 5) = v28;
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))((uint64_t)(v20 + 56), (uint64_t)(v21 + 56));
    v29 = *((_OWORD *)v21 + 7);
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    *((_OWORD *)v20 + 7) = v29;
    v20[128] = v21[128];
    *((_QWORD *)v20 + 17) = *((_QWORD *)v21 + 17);
    a3 = v55;
    v30 = v6[7];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v31[16] = v32[16];
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v33 = v6[8];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    v36 = v6[10];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
  }
  else
  {
    *a1 = *a2;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v39 = *(int *)(a3 + 20);
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = *(_QWORD *)((char *)a2 + v39 + 8);
  *(_QWORD *)v40 = *(_QWORD *)((char *)a2 + v39);
  *((_QWORD *)v40 + 1) = v42;
  v43 = *(_QWORD *)((char *)a2 + v39 + 16);
  v44 = *((_QWORD *)v41 + 3);
  v45 = *((_QWORD *)v41 + 4);
  v46 = *((_QWORD *)v41 + 5);
  v47 = v41[48];
  swift_bridgeObjectRetain();
  sub_2379732BC(v43, v44, v45, v46, v47);
  *((_QWORD *)v40 + 2) = v43;
  *((_QWORD *)v40 + 3) = v44;
  *((_QWORD *)v40 + 4) = v45;
  *((_QWORD *)v40 + 5) = v46;
  v40[48] = v47;
  v48 = v41[72];
  if (v48 == 255)
  {
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    v40[72] = v41[72];
  }
  else
  {
    v49 = *((_QWORD *)v41 + 7);
    v50 = *((_QWORD *)v41 + 8);
    sub_237973310(v49, v50, v41[72]);
    *((_QWORD *)v40 + 7) = v49;
    *((_QWORD *)v40 + 8) = v50;
    v40[72] = v48;
  }
  v40[73] = v41[73];
  v51 = *((_QWORD *)v41 + 11);
  if (v51)
  {
    *((_QWORD *)v40 + 10) = *((_QWORD *)v41 + 10);
    *((_QWORD *)v40 + 11) = v51;
    *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v40 + 5) = *((_OWORD *)v41 + 5);
    *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
  }
  v52 = *((_QWORD *)v41 + 14);
  *((_QWORD *)v40 + 13) = *((_QWORD *)v41 + 13);
  *((_QWORD *)v40 + 14) = v52;
  swift_retain();
  return a1;
}

_QWORD *sub_237A37D54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 *v52;
  __int128 *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  int *v71;
  uint64_t v72;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823790);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v71 = (int *)type metadata accessor for NoticeConfiguration(0);
      v6 = v71[5];
      v72 = a3;
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
      v9 = *(_OWORD *)((char *)a2 + v6 + 8);
      v7[24] = *((_BYTE *)a2 + v6 + 24);
      *(_OWORD *)(v7 + 8) = v9;
      v10 = type metadata accessor for NotificationSymbolConfiguration(0);
      v11 = *(int *)(v10 + 24);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = sub_237A872D8();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_retain();
      v15(v12, v13, v14);
      v16 = *(int *)(v10 + 28);
      v17 = &v7[v16];
      v18 = &v8[v16];
      v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      v20 = v71[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *(_QWORD *)v21 = *(_QWORD *)((char *)a2 + v20);
      *((_QWORD *)v21 + 1) = *(_QWORD *)((char *)a2 + v20 + 8);
      v23 = (uint64_t)a1 + v20 + 16;
      v24 = (uint64_t)a2 + v20 + 16;
      v25 = *(_QWORD *)((char *)a2 + v20 + 40);
      *((_QWORD *)v21 + 5) = v25;
      *((_QWORD *)v21 + 6) = *(_QWORD *)((char *)a2 + v20 + 48);
      v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
      swift_retain();
      swift_retain();
      v26(v23, v24, v25);
      v27 = *((_QWORD *)v22 + 10);
      *((_QWORD *)v21 + 10) = v27;
      *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v21 + 56), (uint64_t)(v22 + 56));
      *((_QWORD *)v21 + 12) = *((_QWORD *)v22 + 12);
      *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
      *((_QWORD *)v21 + 14) = *((_QWORD *)v22 + 14);
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      v21[128] = v22[128];
      *((_QWORD *)v21 + 17) = *((_QWORD *)v22 + 17);
      a3 = v72;
      v28 = v71[7];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = v30[16];
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[16] = v31;
      v32 = v71[8];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = v34[16];
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[16] = v35;
      *((_BYTE *)a1 + v71[9]) = *((_BYTE *)a2 + v71[9]);
      v36 = v71[10];
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      *v37 = *v38;
      v37[1] = v38[1];
      v37[2] = v38[2];
    }
    else
    {
      *a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v39 = *(int *)(a3 + 20);
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)((char *)a2 + v39);
  *((_QWORD *)v40 + 1) = *(_QWORD *)((char *)a2 + v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = *((_QWORD *)v41 + 2);
  v43 = *((_QWORD *)v41 + 3);
  v44 = *((_QWORD *)v41 + 4);
  v45 = *((_QWORD *)v41 + 5);
  v46 = v41[48];
  sub_2379732BC(v42, v43, v44, v45, v46);
  v47 = *((_QWORD *)v40 + 2);
  v48 = *((_QWORD *)v40 + 3);
  v49 = *((_QWORD *)v40 + 4);
  v50 = *((_QWORD *)v40 + 5);
  *((_QWORD *)v40 + 2) = v42;
  *((_QWORD *)v40 + 3) = v43;
  *((_QWORD *)v40 + 4) = v44;
  *((_QWORD *)v40 + 5) = v45;
  v51 = v40[48];
  v40[48] = v46;
  sub_23790BCE8(v47, v48, v49, v50, v51);
  v52 = (__int128 *)(v40 + 56);
  v53 = (__int128 *)(v41 + 56);
  v54 = v41[72];
  if (v40[72] == 255)
  {
    if (v54 == 255)
    {
      v63 = *v53;
      v40[72] = v41[72];
      *v52 = v63;
    }
    else
    {
      v60 = *((_QWORD *)v41 + 7);
      v61 = *((_QWORD *)v41 + 8);
      sub_237973310(v60, v61, v41[72]);
      *((_QWORD *)v40 + 7) = v60;
      *((_QWORD *)v40 + 8) = v61;
      v40[72] = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_2379DBFE8((uint64_t)(v40 + 56));
    v62 = v41[72];
    *v52 = *v53;
    v40[72] = v62;
  }
  else
  {
    v55 = *((_QWORD *)v41 + 7);
    v56 = *((_QWORD *)v41 + 8);
    sub_237973310(v55, v56, v41[72]);
    v57 = *((_QWORD *)v40 + 7);
    v58 = *((_QWORD *)v40 + 8);
    *((_QWORD *)v40 + 7) = v55;
    *((_QWORD *)v40 + 8) = v56;
    v59 = v40[72];
    v40[72] = v54;
    sub_23790BD3C(v57, v58, v59);
  }
  v40[73] = v41[73];
  v64 = v40 + 80;
  v65 = v41 + 80;
  v66 = *((_QWORD *)v41 + 11);
  if (*((_QWORD *)v40 + 11))
  {
    if (v66)
    {
      *((_QWORD *)v40 + 10) = *((_QWORD *)v41 + 10);
      *((_QWORD *)v40 + 11) = *((_QWORD *)v41 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018((uint64_t)(v40 + 80));
      v67 = *((_QWORD *)v41 + 12);
      *v64 = *v65;
      *((_QWORD *)v40 + 12) = v67;
    }
  }
  else if (v66)
  {
    *((_QWORD *)v40 + 10) = *((_QWORD *)v41 + 10);
    *((_QWORD *)v40 + 11) = *((_QWORD *)v41 + 11);
    *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v68 = *v65;
    *((_QWORD *)v40 + 12) = *((_QWORD *)v41 + 12);
    *v64 = v68;
  }
  v69 = *((_QWORD *)v41 + 14);
  *((_QWORD *)v40 + 13) = *((_QWORD *)v41 + 13);
  *((_QWORD *)v40 + 14) = v69;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_237A38190(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for NoticeConfiguration(0);
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    v9[24] = *((_BYTE *)a2 + v8 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
    v11 = type metadata accessor for NotificationSymbolConfiguration(0);
    v12 = *(int *)(v11 + 24);
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    v16 = *(int *)(v11 + 28);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    v20 = v7[6];
    v21 = (_OWORD *)((char *)a1 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    v23 = v22[3];
    v21[2] = v22[2];
    v21[3] = v23;
    v24 = v22[1];
    *v21 = *v22;
    v21[1] = v24;
    v25 = v22[8];
    v26 = v22[6];
    v21[7] = v22[7];
    v21[8] = v25;
    v27 = v22[5];
    v21[4] = v22[4];
    v21[5] = v27;
    v21[6] = v26;
    v28 = v7[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    v31 = v7[8];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    v34 = v7[10];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v37 = *(int *)(a3 + 20);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *((_OWORD *)v39 + 5);
  *((_OWORD *)v38 + 4) = *((_OWORD *)v39 + 4);
  *((_OWORD *)v38 + 5) = v40;
  *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
  *((_QWORD *)v38 + 14) = *((_QWORD *)v39 + 14);
  v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  v42 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v42;
  return a1;
}

_QWORD *sub_237A38370(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  _OWORD *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823790);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for NoticeConfiguration(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
      v9[24] = *((_BYTE *)a2 + v8 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
      v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      v12 = *(int *)(v11 + 24);
      v13 = &v9[v12];
      v14 = &v10[v12];
      v15 = sub_237A872D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = *(int *)(v11 + 28);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      v20 = v7[6];
      v21 = (_OWORD *)((char *)a1 + v20);
      v22 = (_OWORD *)((char *)a2 + v20);
      v23 = v22[3];
      v21[2] = v22[2];
      v21[3] = v23;
      v24 = v22[1];
      *v21 = *v22;
      v21[1] = v24;
      v25 = v22[8];
      v26 = v22[6];
      v21[7] = v22[7];
      v21[8] = v25;
      v27 = v22[5];
      v21[4] = v22[4];
      v21[5] = v27;
      v21[6] = v26;
      v28 = v7[7];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[16] = v30[16];
      v31 = v7[8];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v32[16] = v33[16];
      *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
      v34 = v7[10];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v37 = *(int *)(a3 + 20);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)((char *)a2 + v37 + 8);
  *(_QWORD *)v38 = *(_QWORD *)((char *)a2 + v37);
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  v41 = v39[48];
  v42 = *((_QWORD *)v38 + 2);
  v43 = *((_QWORD *)v38 + 3);
  v44 = *((_QWORD *)v38 + 4);
  v45 = *((_QWORD *)v38 + 5);
  v46 = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
  *((_OWORD *)v38 + 2) = v46;
  v47 = v38[48];
  v38[48] = v41;
  sub_23790BCE8(v42, v43, v44, v45, v47);
  v48 = v39 + 56;
  v49 = v38[72];
  if (v49 != 255)
  {
    v50 = v39[72];
    if (v50 != 255)
    {
      v51 = *((_QWORD *)v38 + 7);
      v52 = *((_QWORD *)v38 + 8);
      *(_OWORD *)(v38 + 56) = *v48;
      v38[72] = v50;
      sub_23790BD3C(v51, v52, v49);
      goto LABEL_10;
    }
    sub_2379DBFE8((uint64_t)(v38 + 56));
  }
  *(_OWORD *)(v38 + 56) = *v48;
  v38[72] = v39[72];
LABEL_10:
  v38[73] = v39[73];
  if (!*((_QWORD *)v38 + 11))
  {
LABEL_14:
    *((_OWORD *)v38 + 5) = *((_OWORD *)v39 + 5);
    *((_QWORD *)v38 + 12) = *((_QWORD *)v39 + 12);
    goto LABEL_15;
  }
  v53 = *((_QWORD *)v39 + 11);
  if (!v53)
  {
    sub_2379DC018((uint64_t)(v38 + 80));
    goto LABEL_14;
  }
  *((_QWORD *)v38 + 10) = *((_QWORD *)v39 + 10);
  *((_QWORD *)v38 + 11) = v53;
  swift_bridgeObjectRelease();
  *((_QWORD *)v38 + 12) = *((_QWORD *)v39 + 12);
  swift_release();
LABEL_15:
  *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
  swift_release();
  return a1;
}

uint64_t sub_237A38628()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A38634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256828650);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_237A386B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A386C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_256828650);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_2568286B0);
}

void sub_237A38758()
{
  unint64_t v0;

  sub_2379A3AF4(319, qword_2568286C0, (void (*)(uint64_t))type metadata accessor for NoticeConfiguration);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_237A387D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v68)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v6 = a1;
    a1[1] = a2[1];
    v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v8 = v7[6];
    v9 = (char *)v6 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_237A872D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v68 = v12;
    swift_retain();
    v12(v9, v10, v11);
    v13 = v7[7];
    v14 = (char *)v6 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    v17 = v7[8];
    v18 = (_OWORD *)((char *)v6 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)((char *)v6 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
    v21 = (int *)type metadata accessor for BannerConfiguration(0);
    *(_QWORD *)((char *)v6 + v21[5]) = *(_QWORD *)((char *)a2 + v21[5]);
    *((_BYTE *)v6 + v21[6]) = *((_BYTE *)a2 + v21[6]);
    v22 = v21[7];
    v23 = (char *)v6 + v22;
    v24 = (char *)a2 + v22;
    *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
    *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
    v23[24] = *((_BYTE *)a2 + v22 + 24);
    v25 = type metadata accessor for NotificationSymbolConfiguration(0);
    v26 = *(int *)(v25 + 24);
    v27 = &v23[v26];
    v28 = &v24[v26];
    swift_retain();
    v68(v27, v28, v11);
    v29 = *(int *)(v25 + 28);
    v30 = &v23[v29];
    v31 = &v24[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    v33 = v21[8];
    v34 = (char *)v6 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)((char *)a2 + v33 + 8);
    *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
    *((_QWORD *)v34 + 1) = v36;
    v37 = (uint64_t)v6 + v33 + 16;
    v38 = (uint64_t)a2 + v33 + 16;
    v39 = *(_OWORD *)((char *)a2 + v33 + 40);
    *(_OWORD *)(v34 + 40) = v39;
    v40 = v39;
    v41 = **(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8);
    swift_retain();
    swift_retain();
    v41(v37, v38, v40);
    v42 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 5) = v42;
    (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v34 + 56), (uint64_t)(v35 + 56));
    v43 = *((_OWORD *)v35 + 7);
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    *((_OWORD *)v34 + 7) = v43;
    v34[128] = v35[128];
    *((_QWORD *)v34 + 17) = *((_QWORD *)v35 + 17);
    v44 = v21[9];
    v45 = (char *)v6 + v44;
    v46 = (char *)a2 + v44;
    v45[16] = v46[16];
    *(_OWORD *)v45 = *(_OWORD *)v46;
    v47 = v21[10];
    v48 = (char *)v6 + v47;
    v49 = (char *)a2 + v47;
    *(_OWORD *)v48 = *(_OWORD *)v49;
    v48[16] = v49[16];
    *((_BYTE *)v6 + v21[11]) = *((_BYTE *)a2 + v21[11]);
    v50 = v21[12];
    v51 = (char *)v6 + v50;
    v52 = (char *)a2 + v50;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
    v53 = *(int *)(a3 + 20);
    v54 = (char *)v6 + v53;
    v55 = (char *)a2 + v53;
    v56 = *(_QWORD *)((char *)a2 + v53);
    v57 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = v56;
    *((_QWORD *)v54 + 1) = v57;
    v58 = *((_QWORD *)v55 + 2);
    v59 = *((_QWORD *)v55 + 3);
    v60 = *((_QWORD *)v55 + 4);
    v61 = *((_QWORD *)v55 + 5);
    LOBYTE(v38) = v55[48];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2379732BC(v58, v59, v60, v61, v38);
    *((_QWORD *)v54 + 2) = v58;
    *((_QWORD *)v54 + 3) = v59;
    *((_QWORD *)v54 + 4) = v60;
    *((_QWORD *)v54 + 5) = v61;
    v54[48] = v38;
    v62 = v55[72];
    if (v62 == 255)
    {
      *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
      v54[72] = v55[72];
    }
    else
    {
      v63 = *((_QWORD *)v55 + 7);
      v64 = *((_QWORD *)v55 + 8);
      sub_237973310(v63, v64, v55[72]);
      *((_QWORD *)v54 + 7) = v63;
      *((_QWORD *)v54 + 8) = v64;
      v54[72] = v62;
    }
    v54[73] = v55[73];
    v65 = *((_QWORD *)v55 + 11);
    if (v65)
    {
      *((_QWORD *)v54 + 10) = *((_QWORD *)v55 + 10);
      *((_QWORD *)v54 + 11) = v65;
      *((_QWORD *)v54 + 12) = *((_QWORD *)v55 + 12);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v54 + 5) = *((_OWORD *)v55 + 5);
      *((_QWORD *)v54 + 12) = *((_QWORD *)v55 + 12);
    }
    v66 = *((_QWORD *)v55 + 14);
    *((_QWORD *)v54 + 13) = *((_QWORD *)v55 + 13);
    *((_QWORD *)v54 + 14) = v66;
  }
  swift_retain();
  return v6;
}

uint64_t sub_237A38B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  swift_release();
  v4 = a1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v5 = sub_237A872D8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for BannerConfiguration(0);
  v8 = a1 + *(int *)(v7 + 28);
  swift_release();
  v9 = type metadata accessor for NotificationSymbolConfiguration(0);
  v6(v8 + *(int *)(v9 + 24), v5);
  v10 = a1 + *(int *)(v7 + 32);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v10 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v10 + 56);
  swift_release();
  v11 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_BYTE *)(v11 + 48));
  v12 = *(unsigned __int8 *)(v11 + 72);
  if (v12 != 255)
    sub_23790BD3C(*(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), v12);
  if (*(_QWORD *)(v11 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_237A38C5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v67)(char *, char *, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v67 = v11;
  swift_retain();
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v6[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
  *((_BYTE *)a1 + v20[6]) = *((_BYTE *)a2 + v20[6]);
  v21 = v20[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)((char *)a2 + v21);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  v22[24] = *((_BYTE *)a2 + v21 + 24);
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v25 = *(int *)(v24 + 24);
  v26 = &v22[v25];
  v27 = &v23[v25];
  swift_retain();
  v67(v26, v27, v10);
  v28 = *(int *)(v24 + 28);
  v29 = &v22[v28];
  v30 = &v23[v28];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  v32 = v20[8];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)((char *)a2 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)((char *)a2 + v32);
  *((_QWORD *)v33 + 1) = v35;
  v36 = (uint64_t)a1 + v32 + 16;
  v37 = (uint64_t)a2 + v32 + 16;
  v38 = *(_OWORD *)((char *)a2 + v32 + 40);
  *(_OWORD *)(v33 + 40) = v38;
  v39 = v38;
  v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
  swift_retain();
  swift_retain();
  v40(v36, v37, v39);
  v41 = *((_OWORD *)v34 + 5);
  *((_OWORD *)v33 + 5) = v41;
  (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v33 + 56), (uint64_t)(v34 + 56));
  v42 = *((_OWORD *)v34 + 7);
  *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
  *((_OWORD *)v33 + 7) = v42;
  v33[128] = v34[128];
  *((_QWORD *)v33 + 17) = *((_QWORD *)v34 + 17);
  v43 = v20[9];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v44[16] = v45[16];
  *(_OWORD *)v44 = *(_OWORD *)v45;
  v46 = v20[10];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  *(_OWORD *)v47 = *(_OWORD *)v48;
  v47[16] = v48[16];
  *((_BYTE *)a1 + v20[11]) = *((_BYTE *)a2 + v20[11]);
  v49 = v20[12];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
  v52 = *(int *)(a3 + 20);
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = *(_QWORD *)((char *)a2 + v52);
  v56 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = v55;
  *((_QWORD *)v53 + 1) = v56;
  v57 = *((_QWORD *)v54 + 2);
  v58 = *((_QWORD *)v54 + 3);
  v59 = *((_QWORD *)v54 + 4);
  v60 = *((_QWORD *)v54 + 5);
  LOBYTE(v37) = v54[48];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2379732BC(v57, v58, v59, v60, v37);
  *((_QWORD *)v53 + 2) = v57;
  *((_QWORD *)v53 + 3) = v58;
  *((_QWORD *)v53 + 4) = v59;
  *((_QWORD *)v53 + 5) = v60;
  v53[48] = v37;
  v61 = v54[72];
  if (v61 == 255)
  {
    *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    v53[72] = v54[72];
  }
  else
  {
    v62 = *((_QWORD *)v54 + 7);
    v63 = *((_QWORD *)v54 + 8);
    sub_237973310(v62, v63, v54[72]);
    *((_QWORD *)v53 + 7) = v62;
    *((_QWORD *)v53 + 8) = v63;
    v53[72] = v61;
  }
  v53[73] = v54[73];
  v64 = *((_QWORD *)v54 + 11);
  if (v64)
  {
    *((_QWORD *)v53 + 10) = *((_QWORD *)v54 + 10);
    *((_QWORD *)v53 + 11) = v64;
    *((_QWORD *)v53 + 12) = *((_QWORD *)v54 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *((_OWORD *)v53 + 5) = *((_OWORD *)v54 + 5);
    *((_QWORD *)v53 + 12) = *((_QWORD *)v54 + 12);
  }
  v65 = *((_QWORD *)v54 + 14);
  *((_QWORD *)v53 + 13) = *((_QWORD *)v54 + 13);
  *((_QWORD *)v53 + 14) = v65;
  swift_retain();
  return a1;
}

_QWORD *sub_237A38F98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int128 *v55;
  __int128 *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_OWORD *)v14;
  v16 = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  *(_OWORD *)v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  v17 = v6[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
  *((_BYTE *)a1 + v20[6]) = *((_BYTE *)a2 + v20[6]);
  v21 = v20[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  v24 = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  *(_OWORD *)(v22 + 8) = v24;
  v25 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v25 + 24)], &v23[*(int *)(v25 + 24)], v10);
  v26 = *(int *)(v25 + 28);
  v27 = &v22[v26];
  v28 = &v23[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
  *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
  v29 = v20[8];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v30 + 2, (uint64_t *)v31 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v30 + 7, (uint64_t *)v31 + 7);
  *((_QWORD *)v30 + 12) = *((_QWORD *)v31 + 12);
  *((_QWORD *)v30 + 13) = *((_QWORD *)v31 + 13);
  *((_QWORD *)v30 + 14) = *((_QWORD *)v31 + 14);
  *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
  v30[128] = v31[128];
  *((_QWORD *)v30 + 17) = *((_QWORD *)v31 + 17);
  v32 = v20[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)v33 = v35;
  v36 = v20[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *(_OWORD *)v37 = v39;
  *((_BYTE *)a1 + v20[11]) = *((_BYTE *)a2 + v20[11]);
  v40 = v20[12];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);
  swift_retain();
  swift_release();
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
  v43 = *(int *)(a3 + 20);
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  *(_QWORD *)v44 = *(_QWORD *)((char *)a2 + v43);
  *((_QWORD *)v44 + 1) = *(_QWORD *)((char *)a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = *((_QWORD *)v45 + 2);
  v47 = *((_QWORD *)v45 + 3);
  v48 = *((_QWORD *)v45 + 4);
  v49 = *((_QWORD *)v45 + 5);
  LOBYTE(v42) = v45[48];
  sub_2379732BC(v46, v47, v48, v49, (char)v42);
  v50 = *((_QWORD *)v44 + 2);
  v51 = *((_QWORD *)v44 + 3);
  v52 = *((_QWORD *)v44 + 4);
  v53 = *((_QWORD *)v44 + 5);
  *((_QWORD *)v44 + 2) = v46;
  *((_QWORD *)v44 + 3) = v47;
  *((_QWORD *)v44 + 4) = v48;
  *((_QWORD *)v44 + 5) = v49;
  v54 = v44[48];
  v44[48] = (char)v42;
  sub_23790BCE8(v50, v51, v52, v53, v54);
  v55 = (__int128 *)(v44 + 56);
  v56 = (__int128 *)(v45 + 56);
  v57 = v45[72];
  if (v44[72] == 255)
  {
    if (v57 == 255)
    {
      v66 = *v56;
      v44[72] = v45[72];
      *v55 = v66;
    }
    else
    {
      v63 = *((_QWORD *)v45 + 7);
      v64 = *((_QWORD *)v45 + 8);
      sub_237973310(v63, v64, v45[72]);
      *((_QWORD *)v44 + 7) = v63;
      *((_QWORD *)v44 + 8) = v64;
      v44[72] = v57;
    }
  }
  else if (v57 == 255)
  {
    sub_2379DBFE8((uint64_t)(v44 + 56));
    v65 = v45[72];
    *v55 = *v56;
    v44[72] = v65;
  }
  else
  {
    v58 = *((_QWORD *)v45 + 7);
    v59 = *((_QWORD *)v45 + 8);
    sub_237973310(v58, v59, v45[72]);
    v60 = *((_QWORD *)v44 + 7);
    v61 = *((_QWORD *)v44 + 8);
    *((_QWORD *)v44 + 7) = v58;
    *((_QWORD *)v44 + 8) = v59;
    v62 = v44[72];
    v44[72] = v57;
    sub_23790BD3C(v60, v61, v62);
  }
  v44[73] = v45[73];
  v67 = v44 + 80;
  v68 = v45 + 80;
  v69 = *((_QWORD *)v45 + 11);
  if (*((_QWORD *)v44 + 11))
  {
    if (v69)
    {
      *((_QWORD *)v44 + 10) = *((_QWORD *)v45 + 10);
      *((_QWORD *)v44 + 11) = *((_QWORD *)v45 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v44 + 12) = *((_QWORD *)v45 + 12);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018((uint64_t)(v44 + 80));
      v70 = *((_QWORD *)v45 + 12);
      *v67 = *v68;
      *((_QWORD *)v44 + 12) = v70;
    }
  }
  else if (v69)
  {
    *((_QWORD *)v44 + 10) = *((_QWORD *)v45 + 10);
    *((_QWORD *)v44 + 11) = *((_QWORD *)v45 + 11);
    *((_QWORD *)v44 + 12) = *((_QWORD *)v45 + 12);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v71 = *v68;
    *((_QWORD *)v44 + 12) = *((_QWORD *)v45 + 12);
    *v67 = v71;
  }
  v72 = *((_QWORD *)v45 + 14);
  *((_QWORD *)v44 + 13) = *((_QWORD *)v45 + 13);
  *((_QWORD *)v44 + 14) = v72;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_237A39404(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v6[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
  *((_BYTE *)a1 + v20[6]) = *((_BYTE *)a2 + v20[6]);
  v21 = v20[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)((char *)a2 + v21);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)((char *)a2 + v21 + 8);
  v22[24] = *((_BYTE *)a2 + v21 + 24);
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  v25 = *(int *)(v24 + 28);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v29 = v20[8];
  v30 = (_OWORD *)((char *)a1 + v29);
  v31 = (_OWORD *)((char *)a2 + v29);
  v32 = v31[3];
  v30[2] = v31[2];
  v30[3] = v32;
  v33 = v31[1];
  *v30 = *v31;
  v30[1] = v33;
  v34 = v31[8];
  v35 = v31[6];
  v30[7] = v31[7];
  v30[8] = v34;
  v36 = v31[5];
  v30[4] = v31[4];
  v30[5] = v36;
  v30[6] = v35;
  v37 = v20[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  v40 = v20[10];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *(_OWORD *)v41 = *(_OWORD *)v42;
  v41[16] = v42[16];
  *((_BYTE *)a1 + v20[11]) = *((_BYTE *)a2 + v20[11]);
  v43 = v20[12];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
  v46 = *(int *)(a3 + 20);
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = *((_OWORD *)v48 + 5);
  *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
  *((_OWORD *)v47 + 5) = v49;
  *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
  *((_QWORD *)v47 + 14) = *((_QWORD *)v48 + 14);
  v50 = *((_OWORD *)v48 + 1);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v50;
  v51 = *((_OWORD *)v48 + 3);
  *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  *((_OWORD *)v47 + 3) = v51;
  return a1;
}

_QWORD *sub_237A39610(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  _OWORD *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v6[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  v20 = (int *)type metadata accessor for BannerConfiguration(0);
  *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
  *((_BYTE *)a1 + v20[6]) = *((_BYTE *)a2 + v20[6]);
  v21 = v20[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_release();
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
  v22[24] = v23[24];
  v24 = type metadata accessor for NotificationSymbolConfiguration(0);
  v11(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v10);
  v25 = *(int *)(v24 + 28);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v29 = v20[8];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_release();
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 16));
  v32 = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 1) = *((_OWORD *)v31 + 1);
  *((_OWORD *)v30 + 2) = v32;
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v30 + 56));
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  *((_QWORD *)v30 + 14) = *((_QWORD *)v31 + 14);
  *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
  v30[128] = v31[128];
  *((_QWORD *)v30 + 17) = *((_QWORD *)v31 + 17);
  v33 = v20[9];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v34[16] = v35[16];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v36 = v20[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *((_BYTE *)a1 + v20[11]) = *((_BYTE *)a2 + v20[11]);
  v39 = v20[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_release();
  *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
  v42 = *(int *)(a3 + 20);
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)((char *)a2 + v42 + 8);
  *(_QWORD *)v43 = *(_QWORD *)((char *)a2 + v42);
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  v46 = v44[48];
  v47 = *((_QWORD *)v43 + 2);
  v48 = *((_QWORD *)v43 + 3);
  v49 = *((_QWORD *)v43 + 4);
  v50 = *((_QWORD *)v43 + 5);
  v51 = *((_OWORD *)v44 + 2);
  *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
  *((_OWORD *)v43 + 2) = v51;
  v52 = v43[48];
  v43[48] = v46;
  sub_23790BCE8(v47, v48, v49, v50, v52);
  v53 = v44 + 56;
  v54 = v43[72];
  if (v54 != 255)
  {
    v55 = v44[72];
    if (v55 != 255)
    {
      v56 = *((_QWORD *)v43 + 7);
      v57 = *((_QWORD *)v43 + 8);
      *(_OWORD *)(v43 + 56) = *v53;
      v43[72] = v55;
      sub_23790BD3C(v56, v57, v54);
      goto LABEL_6;
    }
    sub_2379DBFE8((uint64_t)(v43 + 56));
  }
  *(_OWORD *)(v43 + 56) = *v53;
  v43[72] = v44[72];
LABEL_6:
  v43[73] = v44[73];
  if (!*((_QWORD *)v43 + 11))
  {
LABEL_10:
    *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
    *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
    goto LABEL_11;
  }
  v58 = *((_QWORD *)v44 + 11);
  if (!v58)
  {
    sub_2379DC018((uint64_t)(v43 + 80));
    goto LABEL_10;
  }
  *((_QWORD *)v43 + 10) = *((_QWORD *)v44 + 10);
  *((_QWORD *)v43 + 11) = v58;
  swift_bridgeObjectRelease();
  *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
  swift_release();
LABEL_11:
  *(_OWORD *)(v43 + 104) = *(_OWORD *)(v44 + 104);
  swift_release();
  return a1;
}

uint64_t sub_237A39954()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A39960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A3996C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A39978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, type metadata accessor for BannerConfiguration);
}

uint64_t type metadata accessor for BannerView(uint64_t a1)
{
  return sub_23790828C(a1, qword_256828748);
}

uint64_t sub_237A39998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237A399A4(a1, a2, a3, type metadata accessor for BannerConfiguration);
}

uint64_t sub_237A399A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_237A39A14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 72) = a2[9];
    v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v9 = v8[7];
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)v10 = *(uint64_t *)((char *)a2 + v9);
    v10[24] = *((_BYTE *)a2 + v9 + 24);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
    v12 = type metadata accessor for NotificationSymbolConfiguration(0);
    v13 = *(int *)(v12 + 24);
    v60 = v11 + v13;
    v61 = &v10[v13];
    v14 = sub_237A872D8();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v15(v61, v60, v14);
    v16 = *(int *)(v12 + 28);
    v17 = &v10[v16];
    v18 = (_OWORD *)(v11 + v16);
    v19 = v18[1];
    *(_OWORD *)v17 = *v18;
    *((_OWORD *)v17 + 1) = v19;
    v20 = v8[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(uint64_t *)((char *)a2 + v20 + 8);
    *(_QWORD *)v21 = *(uint64_t *)((char *)a2 + v20);
    *((_QWORD *)v21 + 1) = v23;
    v24 = (uint64_t)v4 + v20 + 16;
    v25 = (uint64_t)a2 + v20 + 16;
    v26 = *(_OWORD *)((char *)a2 + v20 + 40);
    *(_OWORD *)(v21 + 40) = v26;
    v27 = v26;
    v28 = **(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8);
    swift_retain();
    swift_retain();
    v28(v24, v25, v27);
    v29 = *(_OWORD *)(v22 + 80);
    *((_OWORD *)v21 + 5) = v29;
    (**(void (***)(uint64_t, uint64_t))(v29 - 8))((uint64_t)(v21 + 56), v22 + 56);
    v30 = *(_OWORD *)(v22 + 112);
    *((_OWORD *)v21 + 6) = *(_OWORD *)(v22 + 96);
    *((_OWORD *)v21 + 7) = v30;
    v21[128] = *(_BYTE *)(v22 + 128);
    *((_QWORD *)v21 + 17) = *(_QWORD *)(v22 + 136);
    v31 = v8[9];
    v32 = (char *)v4 + v31;
    v33 = (uint64_t)a2 + v31;
    v32[16] = *(_BYTE *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v34 = v8[10];
    v35 = (char *)v4 + v34;
    v36 = (uint64_t)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = *(_BYTE *)(v36 + 16);
    *((_BYTE *)v4 + v8[11]) = *((_BYTE *)a2 + v8[11]);
    v37 = v8[12];
    v38 = (char *)v4 + v37;
    v39 = (uint64_t)a2 + v37;
    v40 = sub_237A8747C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    v41 = v8[13];
    v42 = (char *)v4 + v41;
    v43 = (uint64_t)a2 + v41;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_OWORD *)(v42 + 8) = *(_OWORD *)(v43 + 8);
    v44 = *(int *)(a3 + 20);
    v45 = (char *)v4 + v44;
    v46 = (uint64_t)a2 + v44;
    v47 = *(uint64_t *)((char *)a2 + v44);
    v48 = *(_QWORD *)(v46 + 8);
    *(_QWORD *)v45 = v47;
    *((_QWORD *)v45 + 1) = v48;
    v49 = *(_QWORD *)(v46 + 16);
    v50 = *(_QWORD *)(v46 + 24);
    v51 = *(_QWORD *)(v46 + 32);
    v52 = *(_QWORD *)(v46 + 40);
    LOBYTE(v27) = *(_BYTE *)(v46 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2379732BC(v49, v50, v51, v52, v27);
    *((_QWORD *)v45 + 2) = v49;
    *((_QWORD *)v45 + 3) = v50;
    *((_QWORD *)v45 + 4) = v51;
    *((_QWORD *)v45 + 5) = v52;
    v45[48] = v27;
    v53 = *(unsigned __int8 *)(v46 + 72);
    if (v53 == 255)
    {
      *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
      v45[72] = *(_BYTE *)(v46 + 72);
    }
    else
    {
      v54 = *(_QWORD *)(v46 + 56);
      v55 = *(_QWORD *)(v46 + 64);
      sub_237973310(v54, v55, *(_BYTE *)(v46 + 72));
      *((_QWORD *)v45 + 7) = v54;
      *((_QWORD *)v45 + 8) = v55;
      v45[72] = v53;
    }
    v45[73] = *(_BYTE *)(v46 + 73);
    v57 = *(_QWORD *)(v46 + 88);
    if (v57)
    {
      *((_QWORD *)v45 + 10) = *(_QWORD *)(v46 + 80);
      *((_QWORD *)v45 + 11) = v57;
      *((_QWORD *)v45 + 12) = *(_QWORD *)(v46 + 96);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *((_OWORD *)v45 + 5) = *(_OWORD *)(v46 + 80);
      *((_QWORD *)v45 + 12) = *(_QWORD *)(v46 + 96);
    }
    v58 = *(_QWORD *)(v46 + 112);
    *((_QWORD *)v45 + 13) = *(_QWORD *)(v46 + 104);
    *((_QWORD *)v45 + 14) = v58;
  }
  swift_retain();
  return v4;
}

uint64_t sub_237A39D48(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  swift_release();
  swift_release();
  v4 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v5 = a1 + v4[7];
  swift_release();
  v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v7 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v4[8];
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
  __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
  v9 = a1 + v4[12];
  v10 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  v11 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_BYTE *)(v11 + 48));
  v12 = *(unsigned __int8 *)(v11 + 72);
  if (v12 != 255)
    sub_23790BD3C(*(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), v12);
  if (*(_QWORD *)(v11 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_237A39E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(a2 + v8 + 24);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + v8 + 8);
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(int *)(v11 + 24);
  v58 = v10 + v12;
  v59 = v9 + v12;
  v13 = sub_237A872D8();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v14(v59, v58, v13);
  v15 = *(int *)(v11 + 28);
  v16 = (_OWORD *)(v9 + v15);
  v17 = (_OWORD *)(v10 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v7[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = v22;
  v23 = a1 + v19 + 16;
  v24 = a2 + v19 + 16;
  v25 = *(_OWORD *)(a2 + v19 + 40);
  *(_OWORD *)(v20 + 40) = v25;
  v26 = v25;
  v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  swift_retain();
  swift_retain();
  v27(v23, v24, v26);
  v28 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 80) = v28;
  (**(void (***)(uint64_t, uint64_t))(v28 - 8))(v20 + 56, v21 + 56);
  v29 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v29;
  *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
  *(_QWORD *)(v20 + 136) = *(_QWORD *)(v21 + 136);
  v30 = v7[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v33 = v7[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v36 = v7[12];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  v40 = v7[13];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  v43 = *(int *)(a3 + 20);
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43);
  v47 = *(_QWORD *)(v45 + 8);
  *(_QWORD *)v44 = v46;
  *(_QWORD *)(v44 + 8) = v47;
  v48 = *(_QWORD *)(v45 + 16);
  v49 = *(_QWORD *)(v45 + 24);
  v50 = *(_QWORD *)(v45 + 32);
  v51 = *(_QWORD *)(v45 + 40);
  LOBYTE(v26) = *(_BYTE *)(v45 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2379732BC(v48, v49, v50, v51, v26);
  *(_QWORD *)(v44 + 16) = v48;
  *(_QWORD *)(v44 + 24) = v49;
  *(_QWORD *)(v44 + 32) = v50;
  *(_QWORD *)(v44 + 40) = v51;
  *(_BYTE *)(v44 + 48) = v26;
  v52 = *(unsigned __int8 *)(v45 + 72);
  if (v52 == 255)
  {
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_BYTE *)(v44 + 72) = *(_BYTE *)(v45 + 72);
  }
  else
  {
    v53 = *(_QWORD *)(v45 + 56);
    v54 = *(_QWORD *)(v45 + 64);
    sub_237973310(v53, v54, *(_BYTE *)(v45 + 72));
    *(_QWORD *)(v44 + 56) = v53;
    *(_QWORD *)(v44 + 64) = v54;
    *(_BYTE *)(v44 + 72) = v52;
  }
  *(_BYTE *)(v44 + 73) = *(_BYTE *)(v45 + 73);
  v55 = *(_QWORD *)(v45 + 88);
  if (v55)
  {
    *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
    *(_QWORD *)(v44 + 88) = v55;
    *(_QWORD *)(v44 + 96) = *(_QWORD *)(v45 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v44 + 80) = *(_OWORD *)(v45 + 80);
    *(_QWORD *)(v44 + 96) = *(_QWORD *)(v45 + 96);
  }
  v56 = *(_QWORD *)(v45 + 112);
  *(_QWORD *)(v44 + 104) = *(_QWORD *)(v45 + 104);
  *(_QWORD *)(v44 + 112) = v56;
  swift_retain();
  return a1;
}

uint64_t sub_237A3A178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __int128 *v49;
  __int128 *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v7 = v6[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_release();
  v10 = *(_OWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_OWORD *)(v8 + 8) = v10;
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(int *)(v11 + 24);
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(v11 + 28);
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v19 = v6[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_retain();
  swift_release();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v20 + 16), (uint64_t *)(v21 + 16));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v20 + 56), (uint64_t *)(v21 + 56));
  *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
  *(_QWORD *)(v20 + 104) = *(_QWORD *)(v21 + 104);
  *(_QWORD *)(v20 + 112) = *(_QWORD *)(v21 + 112);
  *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
  *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
  *(_QWORD *)(v20 + 136) = *(_QWORD *)(v21 + 136);
  v22 = v6[9];
  v23 = a1 + v22;
  v24 = (__int128 *)(a2 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 16) = *((_BYTE *)v24 + 16);
  *(_OWORD *)v23 = v25;
  v26 = v6[10];
  v27 = a1 + v26;
  v28 = (__int128 *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 16) = *((_BYTE *)v28 + 16);
  *(_OWORD *)v27 = v29;
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v30 = v6[12];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = v6[13];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  swift_retain();
  swift_release();
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v39 + 16);
  v41 = *(_QWORD *)(v39 + 24);
  v42 = *(_QWORD *)(v39 + 32);
  v43 = *(_QWORD *)(v39 + 40);
  LOBYTE(v36) = *(_BYTE *)(v39 + 48);
  sub_2379732BC(v40, v41, v42, v43, v36);
  v44 = *(_QWORD *)(v38 + 16);
  v45 = *(_QWORD *)(v38 + 24);
  v46 = *(_QWORD *)(v38 + 32);
  v47 = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 24) = v41;
  *(_QWORD *)(v38 + 32) = v42;
  *(_QWORD *)(v38 + 40) = v43;
  v48 = *(_BYTE *)(v38 + 48);
  *(_BYTE *)(v38 + 48) = v36;
  sub_23790BCE8(v44, v45, v46, v47, v48);
  v49 = (__int128 *)(v38 + 56);
  v50 = (__int128 *)(v39 + 56);
  v51 = *(unsigned __int8 *)(v39 + 72);
  if (*(unsigned __int8 *)(v38 + 72) == 255)
  {
    if (v51 == 255)
    {
      v60 = *v50;
      *(_BYTE *)(v38 + 72) = *(_BYTE *)(v39 + 72);
      *v49 = v60;
    }
    else
    {
      v57 = *(_QWORD *)(v39 + 56);
      v58 = *(_QWORD *)(v39 + 64);
      sub_237973310(v57, v58, *(_BYTE *)(v39 + 72));
      *(_QWORD *)(v38 + 56) = v57;
      *(_QWORD *)(v38 + 64) = v58;
      *(_BYTE *)(v38 + 72) = v51;
    }
  }
  else if (v51 == 255)
  {
    sub_2379DBFE8(v38 + 56);
    v59 = *(_BYTE *)(v39 + 72);
    *v49 = *v50;
    *(_BYTE *)(v38 + 72) = v59;
  }
  else
  {
    v52 = *(_QWORD *)(v39 + 56);
    v53 = *(_QWORD *)(v39 + 64);
    sub_237973310(v52, v53, *(_BYTE *)(v39 + 72));
    v54 = *(_QWORD *)(v38 + 56);
    v55 = *(_QWORD *)(v38 + 64);
    *(_QWORD *)(v38 + 56) = v52;
    *(_QWORD *)(v38 + 64) = v53;
    v56 = *(_BYTE *)(v38 + 72);
    *(_BYTE *)(v38 + 72) = v51;
    sub_23790BD3C(v54, v55, v56);
  }
  *(_BYTE *)(v38 + 73) = *(_BYTE *)(v39 + 73);
  v61 = (_OWORD *)(v38 + 80);
  v62 = (_OWORD *)(v39 + 80);
  v63 = *(_QWORD *)(v39 + 88);
  if (*(_QWORD *)(v38 + 88))
  {
    if (v63)
    {
      *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
      *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018(v38 + 80);
      v64 = *(_QWORD *)(v39 + 96);
      *v61 = *v62;
      *(_QWORD *)(v38 + 96) = v64;
    }
  }
  else if (v63)
  {
    *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
    *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
    *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v65 = *v62;
    *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
    *v61 = v65;
  }
  v66 = *(_QWORD *)(v39 + 112);
  *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
  *(_QWORD *)(v38 + 112) = v66;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_237A3A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v9 = v8[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
  *(_BYTE *)(v10 + 24) = *(_BYTE *)(a2 + v9 + 24);
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(a2 + v9 + 8);
  v12 = type metadata accessor for NotificationSymbolConfiguration(0);
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = *(int *)(v12 + 28);
  v18 = (_OWORD *)(v10 + v17);
  v19 = (_OWORD *)(v11 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v8[8];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v25 = v23[1];
  *v22 = *v23;
  v22[1] = v25;
  v26 = v23[8];
  v27 = v23[6];
  v22[7] = v23[7];
  v22[8] = v26;
  v28 = v23[5];
  v22[4] = v23[4];
  v22[5] = v28;
  v22[6] = v27;
  v29 = v8[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v32 = v8[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  v35 = v8[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = v8[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  v42 = *(int *)(a3 + 20);
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_OWORD *)(v44 + 80);
  *(_OWORD *)(v43 + 64) = *(_OWORD *)(v44 + 64);
  *(_OWORD *)(v43 + 80) = v45;
  *(_OWORD *)(v43 + 96) = *(_OWORD *)(v44 + 96);
  *(_QWORD *)(v43 + 112) = *(_QWORD *)(v44 + 112);
  v46 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v46;
  v47 = *(_OWORD *)(v44 + 48);
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
  *(_OWORD *)(v43 + 48) = v47;
  return a1;
}

uint64_t sub_237A3A7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  _OWORD *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(int *)(v11 + 24);
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 28);
  v17 = (_OWORD *)(v9 + v16);
  v18 = (_OWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v7[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_release();
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v21 + 16);
  v23 = *(_OWORD *)(v22 + 32);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)(v22 + 16);
  *(_OWORD *)(v21 + 32) = v23;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
  __swift_destroy_boxed_opaque_existential_2Tm(v21 + 56);
  *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
  *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
  *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
  *(_QWORD *)(v21 + 112) = *(_QWORD *)(v22 + 112);
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
  *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = v7[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v30 = v7[12];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_237A8747C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = v7[13];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  swift_release();
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a2 + v37 + 8);
  *(_QWORD *)v38 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = v40;
  swift_bridgeObjectRelease();
  v41 = *(_BYTE *)(v39 + 48);
  v42 = *(_QWORD *)(v38 + 16);
  v43 = *(_QWORD *)(v38 + 24);
  v44 = *(_QWORD *)(v38 + 32);
  v45 = *(_QWORD *)(v38 + 40);
  v46 = *(_OWORD *)(v39 + 32);
  *(_OWORD *)(v38 + 16) = *(_OWORD *)(v39 + 16);
  *(_OWORD *)(v38 + 32) = v46;
  v47 = *(_BYTE *)(v38 + 48);
  *(_BYTE *)(v38 + 48) = v41;
  sub_23790BCE8(v42, v43, v44, v45, v47);
  v48 = (_OWORD *)(v39 + 56);
  v49 = *(unsigned __int8 *)(v38 + 72);
  if (v49 != 255)
  {
    v50 = *(unsigned __int8 *)(v39 + 72);
    if (v50 != 255)
    {
      v51 = *(_QWORD *)(v38 + 56);
      v52 = *(_QWORD *)(v38 + 64);
      *(_OWORD *)(v38 + 56) = *v48;
      *(_BYTE *)(v38 + 72) = v50;
      sub_23790BD3C(v51, v52, v49);
      goto LABEL_6;
    }
    sub_2379DBFE8(v38 + 56);
  }
  *(_OWORD *)(v38 + 56) = *v48;
  *(_BYTE *)(v38 + 72) = *(_BYTE *)(v39 + 72);
LABEL_6:
  *(_BYTE *)(v38 + 73) = *(_BYTE *)(v39 + 73);
  if (!*(_QWORD *)(v38 + 88))
  {
LABEL_10:
    *(_OWORD *)(v38 + 80) = *(_OWORD *)(v39 + 80);
    *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
    goto LABEL_11;
  }
  v53 = *(_QWORD *)(v39 + 88);
  if (!v53)
  {
    sub_2379DC018(v38 + 80);
    goto LABEL_10;
  }
  *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
  *(_QWORD *)(v38 + 88) = v53;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
  swift_release();
LABEL_11:
  *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
  swift_release();
  return a1;
}

uint64_t sub_237A3AAC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A3AAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t __swift_get_extra_inhabitant_index_17Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_237A3AB60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A3AB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t __swift_store_extra_inhabitant_index_18Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for UserInteractiveView(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568287D8);
}

uint64_t sub_237A3AC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237A399A4(a1, a2, a3, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_237A3AC14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A3AC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  unsigned __int8 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[9];

  v74 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828920);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v73 = (uint64_t)&v65 - v6;
  v7 = type metadata accessor for TextContentView(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828980);
  MEMORY[0x24BDAC7A8](v66);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v67 = (uint64_t)&v65 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v70 = (uint64_t)&v65 - v15;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828990);
  MEMORY[0x24BDAC7A8](v68);
  v69 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828998);
  MEMORY[0x24BDAC7A8](v17);
  v71 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v65 - v20;
  *(_QWORD *)v21 = sub_237A86BAC();
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 0;
  v22 = a1 + *(int *)(type metadata accessor for BannerView(0) + 20);
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  v25 = *(_QWORD *)(v22 + 32);
  v26 = *(_QWORD *)(v22 + 40);
  v27 = *(_BYTE *)(v22 + 48);
  v28 = *(int *)(type metadata accessor for BannerConfiguration(0) + 32);
  v72 = a1;
  sub_237A01124(a1 + v28, (uint64_t)v76);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  v29 = (char *)v9 + *(int *)(v7 + 20);
  *(_QWORD *)v29 = v24;
  *((_QWORD *)v29 + 1) = v23;
  *((_QWORD *)v29 + 2) = v25;
  *((_QWORD *)v29 + 3) = v26;
  v29[32] = v27;
  v30 = (_OWORD *)((char *)v9 + *(int *)(v7 + 24));
  v31 = v76[7];
  v30[6] = v76[6];
  v30[7] = v31;
  v30[8] = v76[8];
  v32 = v76[3];
  v30[2] = v76[2];
  v30[3] = v32;
  v33 = v76[5];
  v30[4] = v76[4];
  v30[5] = v33;
  v34 = v76[1];
  *v30 = v76[0];
  v30[1] = v34;
  sub_2379732BC(v24, v23, v25, v26, v27);
  LOBYTE(v24) = sub_237A86F48();
  v35 = sub_237A86F54();
  v36 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v24)
    v36 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v35)
    v36 = sub_237A86F6C();
  v37 = (uint64_t)&v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568289A0) + 44)];
  sub_237A86798();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_2378D07D8((uint64_t)v9, (uint64_t)v11, type metadata accessor for TextContentView);
  v46 = &v11[*(int *)(v66 + 36)];
  *v46 = v36;
  *((_QWORD *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_2378DE6A4((uint64_t)v9, type metadata accessor for TextContentView);
  v47 = v67;
  sub_237870370((uint64_t)v11, v67, &qword_256828980);
  v48 = v70;
  sub_237870370(v47, v70, &qword_256828980);
  LOBYTE(v47) = sub_237A86F60();
  sub_237A86798();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v57 = v69;
  sub_2378BBFE0(v48, v69, &qword_256828980);
  v58 = v57 + *(int *)(v68 + 36);
  *(_BYTE *)v58 = v47;
  *(_QWORD *)(v58 + 8) = v50;
  *(_QWORD *)(v58 + 16) = v52;
  *(_QWORD *)(v58 + 24) = v54;
  *(_QWORD *)(v58 + 32) = v56;
  *(_BYTE *)(v58 + 40) = 0;
  sub_2378BC024(v48, &qword_256828980);
  sub_237870370(v57, v37, &qword_256828990);
  v59 = v73;
  sub_237A3B178(v73);
  v60 = v71;
  sub_2378BBFE0((uint64_t)v21, v71, &qword_256828998);
  v61 = v75;
  sub_2378BBFE0(v59, v75, &qword_256828920);
  v62 = v74;
  sub_2378BBFE0(v60, v74, &qword_256828998);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289A8);
  sub_2378BBFE0(v61, v62 + *(int *)(v63 + 48), &qword_256828920);
  sub_2378BC024(v59, &qword_256828920);
  sub_2378BC024((uint64_t)v21, &qword_256828998);
  sub_2378BC024(v61, &qword_256828920);
  return sub_2378BC024(v60, &qword_256828998);
}

uint64_t sub_237A3B178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v41 = a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828940);
  MEMORY[0x24BDAC7A8](v39);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v36 - v5;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828948);
  MEMORY[0x24BDAC7A8](v37);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828950);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828958);
  MEMORY[0x24BDAC7A8](v38);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828920);
  MEMORY[0x24BDAC7A8](v13);
  v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IconNotificationButton(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = v1 + *(int *)(type metadata accessor for BannerView(0) + 20);
  v20 = *(_QWORD *)(v18 + 56);
  v19 = *(_QWORD *)(v18 + 64);
  v21 = *(unsigned __int8 *)(v18 + 72);
  if (!v21)
  {
    sub_2378D07D8(v1, (uint64_t)v17 + *(int *)(v15 + 20), type metadata accessor for IconNotificationButtonConfiguration);
    *v17 = v20;
    v17[1] = v19;
    sub_2378D07D8((uint64_t)v17, (uint64_t)v10, type metadata accessor for IconNotificationButton);
    swift_storeEnumTagMultiPayload();
    sub_2379DBB3C(v20, v19, 0);
    sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    swift_retain();
    sub_237A86D44();
    sub_2378BBFE0((uint64_t)v12, (uint64_t)v7, &qword_256828958);
    swift_storeEnumTagMultiPayload();
    sub_237A40EA0();
    sub_237A40F1C();
    v22 = v40;
    sub_237A86D44();
    v23 = v20;
    v24 = v19;
    v25 = 0;
    goto LABEL_5;
  }
  if (v21 == 2)
  {
    sub_2378D07D8(v1, (uint64_t)v17 + *(int *)(v15 + 20), type metadata accessor for IconNotificationButtonConfiguration);
    *v17 = v20;
    v17[1] = v19;
    sub_2378D07D8((uint64_t)v17, (uint64_t)v10, type metadata accessor for IconNotificationButton);
    swift_storeEnumTagMultiPayload();
    sub_237973310(v20, v19, 2);
    sub_237973310(v20, v19, 2);
    sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    sub_237A86D44();
    sub_2378BBFE0((uint64_t)v12, (uint64_t)v7, &qword_256828958);
    swift_storeEnumTagMultiPayload();
    sub_237A40EA0();
    sub_237A40F1C();
    v22 = v40;
    sub_237A86D44();
    v23 = v20;
    v24 = v19;
    v25 = 2;
LABEL_5:
    sub_237971B9C(v23, v24, v25);
    sub_2378BC024((uint64_t)v12, &qword_256828958);
    sub_2378DE6A4((uint64_t)v17, type metadata accessor for IconNotificationButton);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828960);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 0, 1, v26);
    v27 = (uint64_t)v22;
    return sub_237870370(v27, v41, &qword_256828920);
  }
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for BannerConfiguration(0) + 24)) == 1)
  {
    v28 = (uint64_t)v17 + *(int *)(v15 + 20);
    if (qword_25681E3F0 != -1)
      swift_once();
    v29 = type metadata accessor for IconNotificationButtonConfiguration(0);
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_256824A90);
    sub_2378D07D8(v30, v28, type metadata accessor for IconNotificationButtonConfiguration);
    *v17 = (uint64_t)nullsub_1;
    v17[1] = 0;
    sub_2378D07D8((uint64_t)v17, (uint64_t)v3, type metadata accessor for IconNotificationButton);
    sub_2378DE6A4((uint64_t)v17, type metadata accessor for IconNotificationButton);
    v31 = v36;
    sub_237870370((uint64_t)v3, v36, &qword_256828940);
    sub_2378BBFE0(v31, (uint64_t)v7, &qword_256828940);
    swift_storeEnumTagMultiPayload();
    sub_237A40EA0();
    sub_237A40F1C();
    v32 = v40;
    sub_237A86D44();
    sub_2378BC024(v31, &qword_256828940);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828960);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
    v27 = (uint64_t)v32;
    return sub_237870370(v27, v41, &qword_256828920);
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828960);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v41, 1, 1, v35);
}

uint64_t sub_237A3B730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828920);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828928);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - v14;
  *(_QWORD *)v15 = sub_237A86BAC();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828930);
  sub_237A3B8CC(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  sub_237A3B178((uint64_t)v9);
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v12, &qword_256828928);
  sub_2378BBFE0((uint64_t)v9, (uint64_t)v6, &qword_256828920);
  sub_2378BBFE0((uint64_t)v12, a2, &qword_256828928);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828938);
  sub_2378BBFE0((uint64_t)v6, a2 + *(int *)(v17 + 48), &qword_256828920);
  sub_2378BC024((uint64_t)v9, &qword_256828920);
  sub_2378BC024((uint64_t)v15, &qword_256828928);
  sub_2378BC024((uint64_t)v6, &qword_256828920);
  return sub_2378BC024((uint64_t)v12, &qword_256828928);
}

uint64_t sub_237A3B8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[9];

  v70 = a2;
  v62 = type metadata accessor for TextContentView(0);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (uint64_t *)((char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828980);
  MEMORY[0x24BDAC7A8](v66);
  v69 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v65 = (uint64_t)&v60 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t)&v60 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v60 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v68 = (uint64_t)&v60 - v12;
  v13 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SymbolView(0);
  MEMORY[0x24BDAC7A8](v16);
  v67 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v60 - v19;
  v21 = a1 + *(int *)(type metadata accessor for BannerView(0) + 20);
  v22 = *(_QWORD *)(v21 + 80);
  v23 = *(_QWORD *)(v21 + 88);
  v60 = *(_QWORD *)(v21 + 96);
  v24 = v60;
  v25 = type metadata accessor for BannerConfiguration(0);
  sub_2378D07D8(a1 + *(int *)(v25 + 28), (uint64_t)v15, type metadata accessor for NotificationSymbolConfiguration);
  *(_QWORD *)v20 = swift_getKeyPath();
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  *((_QWORD *)v20 + 3) = v22;
  *((_QWORD *)v20 + 4) = v23;
  *((_QWORD *)v20 + 5) = v24;
  sub_2378D0858((uint64_t)v15, (uint64_t)&v20[*(int *)(v16 + 24)], type metadata accessor for NotificationSymbolConfiguration);
  v26 = *(_QWORD *)(v21 + 16);
  v27 = *(_QWORD *)(v21 + 24);
  v29 = *(_QWORD *)(v21 + 32);
  v28 = *(_QWORD *)(v21 + 40);
  v30 = a1 + *(int *)(v25 + 32);
  LOBYTE(v25) = *(_BYTE *)(v21 + 48);
  v31 = v61;
  sub_237A01124(v30, (uint64_t)v71);
  *v31 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  v32 = v62;
  v33 = (char *)v31 + *(int *)(v62 + 20);
  *(_QWORD *)v33 = v26;
  *((_QWORD *)v33 + 1) = v27;
  *((_QWORD *)v33 + 2) = v29;
  *((_QWORD *)v33 + 3) = v28;
  v33[32] = v25;
  v34 = (_OWORD *)((char *)v31 + *(int *)(v32 + 24));
  v35 = v71[7];
  v34[6] = v71[6];
  v34[7] = v35;
  v34[8] = v71[8];
  v36 = v71[3];
  v34[2] = v71[2];
  v34[3] = v36;
  v37 = v71[5];
  v34[4] = v71[4];
  v34[5] = v37;
  v38 = v71[1];
  *v34 = v71[0];
  v34[1] = v38;
  sub_2379DBB50(v22, v23);
  sub_2379732BC(v26, v27, v29, v28, v25);
  LOBYTE(v26) = sub_237A86F48();
  v39 = sub_237A86F54();
  v40 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v26)
    v40 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v39)
    v40 = sub_237A86F6C();
  sub_237A86798();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v65;
  sub_2378D07D8((uint64_t)v31, v65, type metadata accessor for TextContentView);
  v50 = v49 + *(int *)(v66 + 36);
  *(_BYTE *)v50 = v40;
  *(_QWORD *)(v50 + 8) = v42;
  *(_QWORD *)(v50 + 16) = v44;
  *(_QWORD *)(v50 + 24) = v46;
  *(_QWORD *)(v50 + 32) = v48;
  *(_BYTE *)(v50 + 40) = 0;
  sub_2378DE6A4((uint64_t)v31, type metadata accessor for TextContentView);
  v51 = v64;
  sub_237870370(v49, v64, &qword_256828980);
  v52 = v51;
  v53 = v63;
  sub_237870370(v52, v63, &qword_256828980);
  v54 = v68;
  sub_237870370(v53, v68, &qword_256828980);
  v55 = v67;
  sub_2378D07D8((uint64_t)v20, v67, type metadata accessor for SymbolView);
  v56 = v69;
  sub_2378BBFE0(v54, v69, &qword_256828980);
  v57 = v70;
  sub_2378D07D8(v55, v70, type metadata accessor for SymbolView);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828988);
  sub_2378BBFE0(v56, v57 + *(int *)(v58 + 48), &qword_256828980);
  sub_2378BC024(v54, &qword_256828980);
  sub_2378DE6A4((uint64_t)v20, type metadata accessor for SymbolView);
  sub_2378BC024(v56, &qword_256828980);
  return sub_2378DE6A4(v55, type metadata accessor for SymbolView);
}

uint64_t sub_237A3BDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  double v28;
  int v29;
  char *v30;
  double v31;
  double v32;
  int v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v75 = a1;
  v2 = sub_237A8747C();
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v70 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for PlatterView();
  MEMORY[0x24BDAC7A8](v71);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v72 = (uint64_t)&v61 - v7;
  v8 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (uint64_t *)((char *)&v61 - v11);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v61 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v61 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A60);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A68);
  MEMORY[0x24BDAC7A8](v21);
  v63 = (uint64_t)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828848);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828850);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A3C2E8((uint64_t)v20);
  v76 = v1;
  sub_23796E850((uint64_t)v17);
  v25 = v8;
  v62 = v8;
  v26 = &v17[*(int *)(v8 + 32)];
  v28 = *(double *)v26;
  v27 = *((double *)v26 + 1);
  v29 = v26[16];
  sub_2378DE6A4((uint64_t)v17, type metadata accessor for NoticeConfiguration);
  sub_23796E850((uint64_t)v14);
  v30 = &v14[*(int *)(v25 + 28)];
  v31 = *(double *)v30;
  v32 = *((double *)v30 + 1);
  v33 = v30[16];
  sub_2378DE6A4((uint64_t)v14, type metadata accessor for NoticeConfiguration);
  if (v29)
    v34 = 0.0;
  else
    v34 = v28;
  if (v29)
    v35 = 0.0;
  else
    v35 = v27;
  if (v33)
    v36 = 0.0;
  else
    v36 = v31;
  if (v33)
    v37 = 0.0;
  else
    v37 = v32;
  v38 = sub_237A874AC();
  v39 = v63;
  sub_2378E1B84(v34, v29, 0.0, 1, v36, v33, v35, v29, v63, v37, v33, 0.0, 1, v38, v40);
  sub_2378BC024((uint64_t)v20, &qword_256820A60);
  v41 = v64;
  sub_23796E850((uint64_t)v64);
  v42 = *v41;
  sub_2378DE6A4((uint64_t)v41, type metadata accessor for NoticeConfiguration);
  v43 = v70;
  sub_237A87470();
  v44 = v67;
  sub_23796E850(v67);
  v45 = v62;
  v46 = (uint64_t *)(v44 + *(int *)(v62 + 40));
  v48 = *v46;
  v47 = v46[1];
  v49 = v46[2];
  swift_retain();
  sub_2378DE6A4(v44, type metadata accessor for NoticeConfiguration);
  *(_QWORD *)v5 = swift_getKeyPath();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  *((_QWORD *)v5 + 3) = swift_getKeyPath();
  v5[32] = 0;
  *((_QWORD *)v5 + 5) = v42;
  v50 = v71;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v5[*(int *)(v71 + 28)], v43, v74);
  v51 = &v5[*(int *)(v50 + 32)];
  *(_QWORD *)v51 = v48;
  *((_QWORD *)v51 + 1) = v47;
  *((_QWORD *)v51 + 2) = v49;
  v52 = v72;
  sub_2378D0858((uint64_t)v5, v72, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v53 = sub_237A874AC();
  v55 = v54;
  v56 = (uint64_t)v65;
  v57 = (uint64_t)&v65[*(int *)(v66 + 36)];
  sub_2378D07D8(v52, v57, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v58 = (uint64_t *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568265F0) + 36));
  *v58 = v53;
  v58[1] = v55;
  sub_2378BBFE0(v39, v56, &qword_256820A68);
  sub_2378DE6A4(v52, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  sub_2378BC024(v39, &qword_256820A68);
  sub_23796E850((uint64_t)v41);
  LOBYTE(v53) = *((_BYTE *)v41 + *(int *)(v45 + 36));
  sub_2378DE6A4((uint64_t)v41, type metadata accessor for NoticeConfiguration);
  v59 = v68;
  sub_2378BBFE0(v56, v68, &qword_256828848);
  *(_BYTE *)(v59 + *(int *)(v69 + 36)) = v53;
  sub_2378BC024(v56, &qword_256828848);
  return sub_237870370(v59, v75, &qword_256828850);
}

uint64_t sub_237A3C2E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned __int8 v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[96];

  v58 = a1;
  v55 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v55);
  v56 = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828858);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828860);
  MEMORY[0x24BDAC7A8](v57);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v48 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v48 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v48 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828868);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828870);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for NoticeView(0) + 20) + 88))
  {
    sub_237A3C790((uint64_t)v22);
    sub_2378BBFE0((uint64_t)v22, (uint64_t)v19, &qword_256828870);
    swift_storeEnumTagMultiPayload();
    sub_237A40C30();
    sub_2379A2040(&qword_256828890, &qword_256828860, sub_237A40CB4, MEMORY[0x24BDECC60]);
    sub_237A86D44();
    v23 = (uint64_t)v22;
    v24 = &qword_256828870;
  }
  else
  {
    v49 = v19;
    v50 = v13;
    v51 = v17;
    v52 = v10;
    v53 = v16;
    v54 = v20;
    v25 = (uint64_t)v5;
    sub_237A3CA88((uint64_t)v5);
    v26 = sub_237A86F60();
    v27 = sub_237A86F78();
    v28 = sub_237A86F6C();
    sub_237A86F6C();
    if (sub_237A86F6C() != v26)
      v28 = sub_237A86F6C();
    sub_237A86F6C();
    v29 = sub_237A86F6C();
    v30 = v57;
    v31 = (uint64_t)v52;
    v32 = (uint64_t)v7;
    v33 = (uint64_t)v50;
    v34 = (uint64_t)v49;
    if (v29 != v27)
      v28 = sub_237A86F6C();
    v35 = v56;
    sub_23796E850(v56);
    sub_237A01124(v35 + *(int *)(v55 + 24), (uint64_t)v59);
    sub_2378DE6A4(v35, type metadata accessor for NoticeConfiguration);
    sub_237A01600((uint64_t)v59);
    sub_237A86798();
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    sub_2378BBFE0(v25, v32, &qword_256828858);
    v44 = v32 + *(int *)(v30 + 36);
    *(_BYTE *)v44 = v28;
    *(_QWORD *)(v44 + 8) = v37;
    *(_QWORD *)(v44 + 16) = v39;
    *(_QWORD *)(v44 + 24) = v41;
    *(_QWORD *)(v44 + 32) = v43;
    *(_BYTE *)(v44 + 40) = 0;
    sub_2378BC024(v25, &qword_256828858);
    sub_237870370(v32, v31, &qword_256828860);
    sub_237870370(v31, v33, &qword_256828860);
    v45 = v33;
    v46 = (uint64_t)v53;
    sub_237870370(v45, (uint64_t)v53, &qword_256828860);
    sub_2378BBFE0(v46, v34, &qword_256828860);
    swift_storeEnumTagMultiPayload();
    sub_237A40C30();
    sub_2379A2040(&qword_256828890, &qword_256828860, sub_237A40CB4, MEMORY[0x24BDECC60]);
    sub_237A86D44();
    v23 = v46;
    v24 = &qword_256828860;
  }
  return sub_2378BC024(v23, v24);
}

uint64_t sub_237A3C790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE v34[152];

  v33 = a1;
  v31 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v31);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - v5;
  v7 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828888);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828870);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_237A86BAC();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288C8);
  sub_237A3CE60(v1, (uint64_t)&v15[*(int *)(v19 + 44)]);
  v32 = sub_237A86F78();
  sub_23796E850((uint64_t)v12);
  sub_237A01124((uint64_t)&v12[*(int *)(v7 + 24)], (uint64_t)v34);
  sub_2378DE6A4((uint64_t)v12, type metadata accessor for NoticeConfiguration);
  v20 = v34[128];
  sub_237A01600((uint64_t)v34);
  if ((v20 & 1) == 0)
  {
    sub_23796E850((uint64_t)v12);
    sub_2378D07D8((uint64_t)&v12[*(int *)(v7 + 20)], (uint64_t)v6, type metadata accessor for NotificationSymbolConfiguration);
    sub_2378DE6A4((uint64_t)v12, type metadata accessor for NoticeConfiguration);
    sub_2378DE6A4((uint64_t)v6, type metadata accessor for NotificationSymbolConfiguration);
    sub_23796E850((uint64_t)v9);
    sub_2378D07D8((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v3, type metadata accessor for NotificationSymbolConfiguration);
    sub_2378DE6A4((uint64_t)v9, type metadata accessor for NoticeConfiguration);
    sub_2378DE6A4((uint64_t)v3, type metadata accessor for NotificationSymbolConfiguration);
  }
  sub_237A86798();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v18, &qword_256828888);
  v29 = &v18[*(int *)(v16 + 36)];
  *v29 = v32;
  *((_QWORD *)v29 + 1) = v22;
  *((_QWORD *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  *((_QWORD *)v29 + 4) = v28;
  v29[40] = 0;
  sub_2378BC024((uint64_t)v15, &qword_256828888);
  return sub_237870370((uint64_t)v18, v33, &qword_256828870);
}

uint64_t sub_237A3CA88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  unsigned __int8 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[8];
  __int128 v45;

  v43 = a1;
  v2 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TextContentView(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288A8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828858);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  v12 = *(_QWORD *)(v10 + 16);
  v11 = *(_QWORD *)(v10 + 24);
  v14 = *(_QWORD *)(v10 + 32);
  v13 = *(_QWORD *)(v10 + 40);
  v15 = *(_BYTE *)(v10 + 48);
  sub_2379732BC(v12, v11, v14, v13, v15);
  sub_23796E850((uint64_t)v4);
  sub_237A01124((uint64_t)&v4[*(int *)(v2 + 24)], (uint64_t)v44);
  sub_2378DE6A4((uint64_t)v4, type metadata accessor for NoticeConfiguration);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  v16 = (char *)v7 + *(int *)(v5 + 20);
  *(_QWORD *)v16 = v12;
  *((_QWORD *)v16 + 1) = v11;
  *((_QWORD *)v16 + 2) = v14;
  *((_QWORD *)v16 + 3) = v13;
  v17 = (uint64_t)v39;
  v16[32] = v15;
  v18 = (_OWORD *)((char *)v7 + *(int *)(v5 + 24));
  v19 = v44[7];
  v18[6] = v44[6];
  v18[7] = v19;
  v18[8] = v45;
  v20 = v44[3];
  v18[2] = v44[2];
  v18[3] = v20;
  v21 = v44[5];
  v18[4] = v44[4];
  v18[5] = v21;
  v22 = v44[1];
  *v18 = v44[0];
  v18[1] = v22;
  sub_23796E850((uint64_t)v4);
  sub_237A01124((uint64_t)&v4[*(int *)(v2 + 24)], (uint64_t)v44);
  sub_2378DE6A4((uint64_t)v4, type metadata accessor for NoticeConfiguration);
  v23 = *((_QWORD *)&v45 + 1);
  sub_237A01600((uint64_t)v44);
  KeyPath = swift_getKeyPath();
  sub_2378D07D8((uint64_t)v7, v17, type metadata accessor for TextContentView);
  v25 = (uint64_t *)(v17 + *(int *)(v40 + 36));
  *v25 = KeyPath;
  v25[1] = v23;
  sub_2378DE6A4((uint64_t)v7, type metadata accessor for TextContentView);
  LOBYTE(v12) = sub_237A86F48();
  v26 = sub_237A86F54();
  v27 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v12)
    v27 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v26)
    v27 = sub_237A86F6C();
  sub_23796E850((uint64_t)v4);
  sub_237A01124((uint64_t)&v4[*(int *)(v2 + 24)], (uint64_t)v44);
  sub_2378DE6A4((uint64_t)v4, type metadata accessor for NoticeConfiguration);
  sub_237A01600((uint64_t)v44);
  sub_237A86798();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = v42;
  sub_2378BBFE0(v17, v42, &qword_2568288A8);
  v37 = v36 + *(int *)(v41 + 36);
  *(_BYTE *)v37 = v27;
  *(_QWORD *)(v37 + 8) = v29;
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v33;
  *(_QWORD *)(v37 + 32) = v35;
  *(_BYTE *)(v37 + 40) = 0;
  sub_2378BC024(v17, &qword_2568288A8);
  return sub_237870370(v36, v43, &qword_256828858);
}

uint64_t sub_237A3CE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[152];

  v60 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828858);
  MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828860);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t)&v52 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v58 = (uint64_t)&v52 - v9;
  v10 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - v13;
  v15 = type metadata accessor for NoticeConfiguration(0);
  MEMORY[0x24BDAC7A8](v15);
  v52 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for SymbolView(0);
  MEMORY[0x24BDAC7A8](v20);
  v55 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v52 - v23;
  v25 = (_QWORD *)(a1 + *(int *)(type metadata accessor for NoticeView(0) + 20));
  v26 = v25[10];
  v27 = v25[11];
  v28 = v25[12];
  sub_2379DBB50(v26, v27);
  sub_23796E850((uint64_t)v19);
  sub_2378D07D8((uint64_t)&v19[*(int *)(v15 + 20)], (uint64_t)v14, type metadata accessor for NotificationSymbolConfiguration);
  sub_2378DE6A4((uint64_t)v19, type metadata accessor for NoticeConfiguration);
  *(_QWORD *)v24 = swift_getKeyPath();
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 0;
  *((_QWORD *)v24 + 3) = v26;
  *((_QWORD *)v24 + 4) = v27;
  *((_QWORD *)v24 + 5) = v28;
  v29 = *(int *)(v20 + 24);
  v30 = (uint64_t)v54;
  sub_2378D0858((uint64_t)v14, (uint64_t)&v24[v29], type metadata accessor for NotificationSymbolConfiguration);
  sub_237A3CA88(v30);
  v31 = sub_237A86F78();
  sub_23796E850((uint64_t)v19);
  sub_237A01124((uint64_t)&v19[*(int *)(v15 + 24)], (uint64_t)v61);
  sub_2378DE6A4((uint64_t)v19, type metadata accessor for NoticeConfiguration);
  LODWORD(v14) = v61[128];
  sub_237A01600((uint64_t)v61);
  if ((_DWORD)v14 == 1)
  {
    sub_23796E850((uint64_t)v19);
    sub_237A01124((uint64_t)&v19[*(int *)(v15 + 24)], (uint64_t)v61);
    sub_2378DE6A4((uint64_t)v19, type metadata accessor for NoticeConfiguration);
    sub_237A01600((uint64_t)v61);
LABEL_5:
    sub_237A86798();
    v36 = v40;
    v37 = v41;
    v38 = v42;
    v39 = v43;
    v35 = 0;
    goto LABEL_6;
  }
  v32 = v52;
  sub_23796E850(v52);
  v33 = v53;
  sub_2378D07D8(v32 + *(int *)(v15 + 20), v53, type metadata accessor for NotificationSymbolConfiguration);
  sub_2378DE6A4(v32, type metadata accessor for NoticeConfiguration);
  v34 = *(_BYTE *)(v33 + 24);
  sub_2378DE6A4(v33, type metadata accessor for NotificationSymbolConfiguration);
  if ((v34 & 1) == 0)
    goto LABEL_5;
  v35 = 1;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0;
LABEL_6:
  v44 = v56;
  sub_2378BBFE0(v30, v56, &qword_256828858);
  v45 = v44 + *(int *)(v57 + 36);
  *(_BYTE *)v45 = v31;
  *(_QWORD *)(v45 + 8) = v36;
  *(_QWORD *)(v45 + 16) = v37;
  *(_QWORD *)(v45 + 24) = v38;
  *(_QWORD *)(v45 + 32) = v39;
  *(_BYTE *)(v45 + 40) = v35;
  sub_2378BC024(v30, &qword_256828858);
  v46 = v58;
  sub_237870370(v44, v58, &qword_256828860);
  v47 = v55;
  sub_2378D07D8((uint64_t)v24, v55, type metadata accessor for SymbolView);
  v48 = v59;
  sub_2378BBFE0(v46, v59, &qword_256828860);
  v49 = v60;
  sub_2378D07D8(v47, v60, type metadata accessor for SymbolView);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568288D0);
  sub_2378BBFE0(v48, v49 + *(int *)(v50 + 48), &qword_256828860);
  sub_2378BC024(v46, &qword_256828860);
  sub_2378DE6A4((uint64_t)v24, type metadata accessor for SymbolView);
  sub_2378BC024(v48, &qword_256828860);
  return sub_2378DE6A4(v47, type metadata accessor for SymbolView);
}

uint64_t sub_237A3D354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  double v40;
  double v41;
  char v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a1;
  v2 = sub_237A8747C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlatterView();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v50 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289B0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289B8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A80);
  MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820A88);
  MEMORY[0x24BDAC7A8](v15);
  v56 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A3D740();
  v17 = *(_QWORD *)(v1 + 72);
  v18 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + v18[12], v2);
  v19 = (uint64_t *)(v1 + v18[13]);
  v20 = *v19;
  v21 = v19[1];
  v22 = v19[2];
  *(_QWORD *)v8 = swift_getKeyPath();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  *((_QWORD *)v8 + 3) = swift_getKeyPath();
  v8[32] = 0;
  *((_QWORD *)v8 + 5) = v17;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v8[*(int *)(v6 + 28)], v5, v2);
  v23 = &v8[*(int *)(v6 + 32)];
  *(_QWORD *)v23 = v20;
  *((_QWORD *)v23 + 1) = v21;
  *((_QWORD *)v23 + 2) = v22;
  v24 = v54;
  sub_2378D0858((uint64_t)v8, v54, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  swift_retain();
  v25 = sub_237A874AC();
  v27 = v26;
  v28 = (uint64_t)v51;
  v29 = (uint64_t)&v51[*(int *)(v53 + 36)];
  sub_2378D07D8(v24, v29, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v30 = (uint64_t *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568265F0) + 36));
  *v30 = v25;
  v30[1] = v27;
  v31 = v50;
  sub_2378BBFE0(v50, v28, &qword_2568289B0);
  v32 = v24;
  v33 = (uint64_t)v52;
  sub_2378DE6A4(v32, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  sub_2378BC024(v31, &qword_2568289B0);
  LOBYTE(v25) = *(_BYTE *)(v1 + v18[11]);
  sub_2378BBFE0(v28, v33, &qword_2568289B8);
  *(_BYTE *)(v33 + *(int *)(v55 + 36)) = v25;
  sub_2378BC024(v28, &qword_2568289B8);
  v34 = 0.0;
  v35 = 0.0;
  v36 = v18[9];
  v37 = v1 + v18[10];
  v38 = *(_BYTE *)(v37 + 16);
  v39 = v1 + v36;
  v40 = *(double *)(v1 + v36);
  v41 = *(double *)(v1 + v36 + 8);
  v42 = *(_BYTE *)(v39 + 16);
  if ((v38 & 1) == 0)
  {
    v35 = *(double *)v37;
    v34 = *(double *)(v37 + 8);
  }
  if (*(_BYTE *)(v39 + 16))
    v43 = 0.0;
  else
    v43 = v40;
  if (*(_BYTE *)(v39 + 16))
    v44 = 0.0;
  else
    v44 = v41;
  v45 = sub_237A874AC();
  v49 = v44;
  v46 = v56;
  sub_2378E1BE8(v35, v38, 0.0, 1, v43, v42, v34, v38, v56, v49, v42, 0.0, 1, v45, v47);
  sub_2378BC024(v33, &qword_256820A80);
  return sub_237870370(v46, v57, &qword_256820A88);
}

uint64_t sub_237A3D740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289C0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    *(_QWORD *)v9 = sub_237A86C78();
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 0;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289F0);
    sub_237A3D99C(v0, (uint64_t)&v9[*(int *)(v10 + 44)]);
    sub_2378BBFE0((uint64_t)v9, (uint64_t)v6, &qword_2568289D0);
    swift_storeEnumTagMultiPayload();
    v11 = MEMORY[0x24BDF4700];
    sub_2378B70D4(&qword_2568289E0, &qword_2568289D0, MEMORY[0x24BDF4700]);
    sub_2378B70D4(&qword_2568289E8, &qword_2568289C0, v11);
    sub_237A86D44();
    v12 = (uint64_t)v9;
    v13 = &qword_2568289D0;
  }
  else
  {
    *(_QWORD *)v3 = sub_237A86C6C();
    *((_QWORD *)v3 + 1) = 0;
    v3[16] = 0;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289D8);
    sub_237A3E6C4(v0, (uint64_t)&v3[*(int *)(v14 + 44)]);
    sub_2378BBFE0((uint64_t)v3, (uint64_t)v6, &qword_2568289C0);
    swift_storeEnumTagMultiPayload();
    v15 = MEMORY[0x24BDF4700];
    sub_2378B70D4(&qword_2568289E0, &qword_2568289D0, MEMORY[0x24BDF4700]);
    sub_2378B70D4(&qword_2568289E8, &qword_2568289C0, v15);
    sub_237A86D44();
    v12 = (uint64_t)v3;
    v13 = &qword_2568289C0;
  }
  return sub_2378BC024(v12, v13);
}

uint64_t sub_237A3D99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - v14;
  *(_QWORD *)v15 = sub_237A86BAC();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A08);
  sub_237A3DB38(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  sub_237A3E1CC(v9);
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v12, &qword_256828A00);
  sub_2378BBFE0((uint64_t)v9, (uint64_t)v6, &qword_2568289F8);
  sub_2378BBFE0((uint64_t)v12, a2, &qword_256828A00);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A10);
  sub_2378BBFE0((uint64_t)v6, a2 + *(int *)(v17 + 48), &qword_2568289F8);
  sub_2378BC024((uint64_t)v9, &qword_2568289F8);
  sub_2378BC024((uint64_t)v15, &qword_256828A00);
  sub_2378BC024((uint64_t)v6, &qword_2568289F8);
  return sub_2378BC024((uint64_t)v12, &qword_256828A00);
}

uint64_t sub_237A3DB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[9];

  v81 = a2;
  v86 = type metadata accessor for TextContentView(0);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (uint64_t *)((char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828980);
  MEMORY[0x24BDAC7A8](v87);
  v88 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828990);
  MEMORY[0x24BDAC7A8](v89);
  v93 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A78);
  MEMORY[0x24BDAC7A8](v91);
  v95 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v90 = (uint64_t)&v81 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v94 = (uint64_t)&v81 - v10;
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SymbolView(0);
  MEMORY[0x24BDAC7A8](v14);
  v92 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v81 - v17;
  v19 = a1 + *(int *)(type metadata accessor for UserInteractiveView(0) + 20);
  v21 = *(_QWORD *)(v19 + 88);
  v82 = *(_QWORD *)(v19 + 80);
  v20 = v82;
  v84 = v21;
  v83 = *(_QWORD *)(v19 + 96);
  v22 = v83;
  v23 = type metadata accessor for UserInteractiveConfiguration(0);
  sub_2378D07D8(a1 + *(int *)(v23 + 28), (uint64_t)v13, type metadata accessor for NotificationSymbolConfiguration);
  *(_QWORD *)v18 = swift_getKeyPath();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  *((_QWORD *)v18 + 3) = v20;
  *((_QWORD *)v18 + 4) = v21;
  v24 = v85;
  *((_QWORD *)v18 + 5) = v22;
  sub_2378D0858((uint64_t)v13, (uint64_t)&v18[*(int *)(v14 + 24)], type metadata accessor for NotificationSymbolConfiguration);
  v26 = *(_QWORD *)(v19 + 16);
  v25 = *(_QWORD *)(v19 + 24);
  v28 = *(_QWORD *)(v19 + 32);
  v27 = *(_QWORD *)(v19 + 40);
  v29 = a1 + *(int *)(v23 + 32);
  LOBYTE(v23) = *(_BYTE *)(v19 + 48);
  sub_237A01124(v29, (uint64_t)v96);
  *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  v30 = v86;
  v31 = (char *)v24 + *(int *)(v86 + 20);
  *(_QWORD *)v31 = v26;
  *((_QWORD *)v31 + 1) = v25;
  *((_QWORD *)v31 + 2) = v28;
  *((_QWORD *)v31 + 3) = v27;
  v31[32] = v23;
  v32 = (_OWORD *)((char *)v24 + *(int *)(v30 + 24));
  v33 = v96[7];
  v32[6] = v96[6];
  v32[7] = v33;
  v32[8] = v96[8];
  v34 = v96[3];
  v32[2] = v96[2];
  v32[3] = v34;
  v35 = v96[5];
  v32[4] = v96[4];
  v32[5] = v35;
  v36 = v96[1];
  *v32 = v96[0];
  v32[1] = v36;
  sub_2379DBB50(v82, v84);
  sub_2379732BC(v26, v25, v28, v27, v23);
  LOBYTE(v28) = sub_237A86F78();
  v37 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v28)
    v37 = sub_237A86F6C();
  sub_237A86798();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v88;
  sub_2378D07D8((uint64_t)v24, v88, type metadata accessor for TextContentView);
  v47 = v46 + *(int *)(v87 + 36);
  *(_BYTE *)v47 = v37;
  *(_QWORD *)(v47 + 8) = v39;
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v43;
  *(_QWORD *)(v47 + 32) = v45;
  *(_BYTE *)(v47 + 40) = 0;
  sub_2378DE6A4((uint64_t)v24, type metadata accessor for TextContentView);
  v48 = sub_237A86F60();
  v49 = sub_237A86F6C();
  sub_237A86F6C();
  v50 = v46;
  if (sub_237A86F6C() != v48)
    v49 = sub_237A86F6C();
  v51 = (uint64_t)v93;
  sub_237A86798();
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  sub_2378BBFE0(v50, v51, &qword_256828980);
  v60 = v51 + *(int *)(v89 + 36);
  *(_BYTE *)v60 = v49;
  *(_QWORD *)(v60 + 8) = v53;
  *(_QWORD *)(v60 + 16) = v55;
  *(_QWORD *)(v60 + 24) = v57;
  *(_QWORD *)(v60 + 32) = v59;
  *(_BYTE *)(v60 + 40) = 0;
  sub_2378BC024(v50, &qword_256828980);
  v61 = sub_237A86F48();
  v62 = sub_237A86F54();
  v63 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v61)
    v63 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v62)
    v63 = sub_237A86F6C();
  v64 = v81;
  sub_237A86798();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v73 = v90;
  sub_2378BBFE0(v51, v90, &qword_256828990);
  v74 = v73 + *(int *)(v91 + 36);
  *(_BYTE *)v74 = v63;
  *(_QWORD *)(v74 + 8) = v66;
  *(_QWORD *)(v74 + 16) = v68;
  *(_QWORD *)(v74 + 24) = v70;
  *(_QWORD *)(v74 + 32) = v72;
  *(_BYTE *)(v74 + 40) = 0;
  sub_2378BC024(v51, &qword_256828990);
  v75 = v73;
  v76 = v94;
  sub_237870370(v75, v94, &qword_256828A78);
  v77 = v92;
  sub_2378D07D8((uint64_t)v18, v92, type metadata accessor for SymbolView);
  v78 = v95;
  sub_2378BBFE0(v76, v95, &qword_256828A78);
  sub_2378D07D8(v77, v64, type metadata accessor for SymbolView);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A80);
  sub_2378BBFE0(v78, v64 + *(int *)(v79 + 48), &qword_256828A78);
  sub_2378BC024(v76, &qword_256828A78);
  sub_2378DE6A4((uint64_t)v18, type metadata accessor for SymbolView);
  sub_2378BC024(v78, &qword_256828A78);
  return sub_2378DE6A4(v77, type metadata accessor for SymbolView);
}

uint64_t sub_237A3E1CC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  char v25;
  unsigned __int8 v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;

  v60 = a1;
  v1 = type metadata accessor for NotificationButtonTextStyle(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v51 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A18);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A28);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v51 - v18;
  v20 = (char *)v61 + *(int *)(type metadata accessor for UserInteractiveView(0) + 20);
  if (v20[72] != 1)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v60, 1, 1, v13);
  v52 = v19;
  v53 = (uint64_t *)v3;
  v54 = v12;
  v55 = v14;
  v56 = v16;
  v57 = v10;
  v58 = v6;
  v59 = v1;
  v22 = *((_QWORD *)v20 + 7);
  v21 = *((_QWORD *)v20 + 8);
  v23 = *v61;
  *(_QWORD *)v9 = sub_237A86BAC();
  *((_QWORD *)v9 + 1) = v23;
  v9[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256828A30);
  v62 = v22;
  sub_237973310(v22, v21, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256828A38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256828A40);
  sub_2378B70D4(&qword_256828A48, &qword_256828A38, MEMORY[0x24BEE12D8]);
  sub_2378B70D4(&qword_256828A50, &qword_256828A40, MEMORY[0x24BDF43B0]);
  sub_237A40FF8();
  sub_237A87410();
  v24 = sub_237A86F60();
  v25 = sub_237A86F78();
  v26 = sub_237A86F54();
  v27 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v24)
    v27 = sub_237A86F6C();
  sub_237A86F6C();
  v28 = sub_237A86F6C();
  v29 = (uint64_t)v58;
  v30 = v13;
  v32 = (uint64_t)v54;
  v31 = v55;
  v33 = v53;
  if (v28 != v25)
    v27 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v26)
    v27 = sub_237A86F6C();
  sub_237A86798();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_2378BBFE0((uint64_t)v9, v32, &qword_256828A18);
  v42 = v32 + *(int *)(v57 + 36);
  *(_BYTE *)v42 = v27;
  *(_QWORD *)(v42 + 8) = v35;
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v39;
  *(_QWORD *)(v42 + 32) = v41;
  *(_BYTE *)(v42 + 40) = 0;
  sub_2378BC024((uint64_t)v9, &qword_256828A18);
  *v33 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  swift_storeEnumTagMultiPayload();
  v43 = v59;
  v44 = (char *)v33 + *(int *)(v59 + 20);
  *(_QWORD *)v44 = swift_getKeyPath();
  v44[8] = 0;
  v45 = (uint64_t *)((char *)v33 + *(int *)(v43 + 24));
  *v45 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  sub_2378D0858((uint64_t)v33, v29, type metadata accessor for NotificationButtonTextStyle);
  sub_237A41040();
  sub_23786FAA0(&qword_256828A70, type metadata accessor for NotificationButtonTextStyle, (uint64_t)&unk_237AA7F78);
  v46 = v56;
  sub_237A870BC();
  sub_2378DE6A4(v29, type metadata accessor for NotificationButtonTextStyle);
  sub_2378BC024(v32, &qword_256828A20);
  v47 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v48 = v52;
  v47(v52, v46, v30);
  v49 = v60;
  v47(v60, v48, v30);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v49, 0, 1, v30);
}

uint64_t sub_237A3E6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD v107[9];

  v105 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568289F8);
  MEMORY[0x24BDAC7A8](v3);
  v106 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v91 = (char *)&v86 - v6;
  v96 = type metadata accessor for TextContentView(0);
  MEMORY[0x24BDAC7A8](v96);
  v95 = (uint64_t *)((char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828980);
  MEMORY[0x24BDAC7A8](v98);
  v89 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828990);
  MEMORY[0x24BDAC7A8](v99);
  v90 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A78);
  MEMORY[0x24BDAC7A8](v101);
  v104 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v100 = (uint64_t)&v86 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v103 = (uint64_t)&v86 - v14;
  v15 = type metadata accessor for NotificationSymbolConfiguration(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SymbolView(0);
  MEMORY[0x24BDAC7A8](v18);
  v102 = (uint64_t)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v86 - v21;
  v23 = a1 + *(int *)(type metadata accessor for UserInteractiveView(0) + 20);
  v25 = *(_QWORD *)(v23 + 88);
  v94 = *(_QWORD *)(v23 + 80);
  v24 = v94;
  v93 = v25;
  v92 = *(_QWORD *)(v23 + 96);
  v26 = v92;
  v27 = type metadata accessor for UserInteractiveConfiguration(0);
  sub_2378D07D8(a1 + *(int *)(v27 + 28), (uint64_t)v17, type metadata accessor for NotificationSymbolConfiguration);
  *(_QWORD *)v22 = swift_getKeyPath();
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  *((_QWORD *)v22 + 3) = v24;
  *((_QWORD *)v22 + 4) = v25;
  *((_QWORD *)v22 + 5) = v26;
  v28 = *(int *)(v18 + 24);
  v87 = v22;
  sub_2378D0858((uint64_t)v17, (uint64_t)&v22[v28], type metadata accessor for NotificationSymbolConfiguration);
  v29 = *(_QWORD *)(v23 + 16);
  v30 = *(_QWORD *)(v23 + 24);
  v32 = *(_QWORD *)(v23 + 32);
  v31 = *(_QWORD *)(v23 + 40);
  v33 = *(int *)(v27 + 32);
  v88 = a1;
  LOBYTE(v18) = *(_BYTE *)(v23 + 48);
  v97 = a1 + v33;
  sub_237A01124(a1 + v33, (uint64_t)v107);
  KeyPath = swift_getKeyPath();
  v35 = (uint64_t)v95;
  *v95 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  v36 = v96;
  v37 = v35 + *(int *)(v96 + 20);
  *(_QWORD *)v37 = v29;
  *(_QWORD *)(v37 + 8) = v30;
  *(_QWORD *)(v37 + 16) = v32;
  *(_QWORD *)(v37 + 24) = v31;
  *(_BYTE *)(v37 + 32) = v18;
  v38 = (_OWORD *)(v35 + *(int *)(v36 + 24));
  v39 = v107[7];
  v38[6] = v107[6];
  v38[7] = v39;
  v38[8] = v107[8];
  v40 = v107[3];
  v38[2] = v107[2];
  v38[3] = v40;
  v41 = v107[5];
  v38[4] = v107[4];
  v38[5] = v41;
  v42 = v107[1];
  *v38 = v107[0];
  v38[1] = v42;
  sub_2379DBB50(v94, v93);
  sub_2379732BC(v29, v30, v32, v31, v18);
  LOBYTE(v31) = sub_237A86F60();
  v43 = sub_237A86F78();
  v44 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v31)
    v44 = sub_237A86F6C();
  sub_237A86F6C();
  if (sub_237A86F6C() != v43)
    v44 = sub_237A86F6C();
  v45 = v91;
  v46 = (uint64_t)v90;
  v47 = (uint64_t)v89;
  v48 = (uint64_t)v87;
  sub_237A86798();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_2378D07D8(v35, v47, type metadata accessor for TextContentView);
  v57 = v47 + *(int *)(v98 + 36);
  *(_BYTE *)v57 = v44;
  *(_QWORD *)(v57 + 8) = v50;
  *(_QWORD *)(v57 + 16) = v52;
  *(_QWORD *)(v57 + 24) = v54;
  *(_QWORD *)(v57 + 32) = v56;
  *(_BYTE *)(v57 + 40) = 0;
  sub_2378DE6A4(v35, type metadata accessor for TextContentView);
  v58 = sub_237A86F48();
  sub_237A86798();
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v66 = v65;
  sub_2378BBFE0(v47, v46, &qword_256828980);
  v67 = v46 + *(int *)(v99 + 36);
  *(_BYTE *)v67 = v58;
  *(_QWORD *)(v67 + 8) = v60;
  *(_QWORD *)(v67 + 16) = v62;
  *(_QWORD *)(v67 + 24) = v64;
  *(_QWORD *)(v67 + 32) = v66;
  *(_BYTE *)(v67 + 40) = 0;
  sub_2378BC024(v47, &qword_256828980);
  v68 = sub_237A86F54();
  sub_237A86798();
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v100;
  sub_2378BBFE0(v46, v100, &qword_256828990);
  v78 = v77 + *(int *)(v101 + 36);
  *(_BYTE *)v78 = v68;
  *(_QWORD *)(v78 + 8) = v70;
  *(_QWORD *)(v78 + 16) = v72;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v76;
  *(_BYTE *)(v78 + 40) = 0;
  sub_2378BC024(v46, &qword_256828990);
  v79 = v103;
  sub_237870370(v77, v103, &qword_256828A78);
  sub_237A3E1CC(v45);
  v80 = v102;
  sub_2378D07D8(v48, v102, type metadata accessor for SymbolView);
  v81 = v104;
  sub_2378BBFE0(v79, v104, &qword_256828A78);
  v82 = v106;
  sub_2378BBFE0((uint64_t)v45, v106, &qword_2568289F8);
  v83 = v105;
  sub_2378D07D8(v80, v105, type metadata accessor for SymbolView);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828A88);
  sub_2378BBFE0(v81, v83 + *(int *)(v84 + 48), &qword_256828A78);
  sub_2378BBFE0(v82, v83 + *(int *)(v84 + 64), &qword_2568289F8);
  sub_2378BC024((uint64_t)v45, &qword_2568289F8);
  sub_2378BC024(v79, &qword_256828A78);
  sub_2378DE6A4(v48, type metadata accessor for SymbolView);
  sub_2378BC024(v82, &qword_2568289F8);
  sub_2378BC024(v81, &qword_256828A78);
  return sub_2378DE6A4(v80, type metadata accessor for SymbolView);
}

uint64_t sub_237A3EDF4(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  _BYTE v6[32];
  uint64_t v7;
  __int128 v8;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *(_OWORD *)&v6[16] = v2;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_OWORD *)&v6[8];
  v3 = swift_allocObject();
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a1 + 32);
  sub_23790B86C((uint64_t)&v8);
  sub_237A41100((uint64_t)v6);
  sub_237879800();
  return sub_237A87380();
}

uint64_t *sub_237A3EEA0(char *a1)
{
  void (*v1)(char *);
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  v1 = (void (*)(char *))v4;
  if (!(_QWORD)v4)
    return sub_237A41140((uint64_t *)&v4);
  v3 = *a1;
  sub_237A41140((uint64_t *)&v4);
  v1(&v3);
  return sub_237A4116C((uint64_t *)&v4);
}

uint64_t sub_237A3EF04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A3EF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A3EF24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A3EF34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  double v45;
  double v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t);

  v2 = v1;
  v74 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DF8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828E00);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828E08);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B98);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820BA0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256828E10);
  MEMORY[0x24BDAC7A8](v18);
  v24 = MEMORY[0x24BDAC7A8](v19);
  v25 = *(_QWORD *)(v2 + 32);
  if (!v25)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v74, 1, 1, v24);
  v62 = v9;
  v63 = v3;
  v64 = v12;
  *(_QWORD *)&v65 = v14;
  v69 = (uint64_t)&v61 - v21;
  v70 = v23;
  v71 = v17;
  v72 = v22;
  v73 = v20;
  v26 = *(_QWORD *)(v2 + 24);
  v27 = *(_QWORD *)(v2 + 40);
  v28 = *(_QWORD *)v2;
  v29 = *(_QWORD *)(v2 + 8);
  v30 = *(_BYTE *)(v2 + 16);
  sub_2379DBB50(v26, v25);
  sub_237971618();
  sub_23796EA80(v28, v29, v30, &v75);
  sub_237971624();
  v67 = v26;
  v31 = v75(v26, v25);
  swift_release();
  v68 = v25;
  v66 = v27;
  if (v27)
  {
    KeyPath = swift_getKeyPath();
    swift_retain();
    sub_237A86C84();
    v33 = v27;
  }
  else
  {
    v33 = sub_237A87248();
    KeyPath = swift_getKeyPath();
    sub_237A86C90();
  }
  v35 = v65;
  v36 = sub_237A86C9C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 0, 1, v36);
  v37 = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v8, (uint64_t)v5 + *(int *)(v63 + 28), &qword_256828E00);
  *v5 = v37;
  sub_2378BBFE0((uint64_t)v5, (uint64_t)v11 + *(int *)(v62 + 36), &qword_256828DF8);
  *v11 = v31;
  v11[1] = KeyPath;
  v11[2] = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2378BC024((uint64_t)v5, &qword_256828DF8);
  sub_2378BC024((uint64_t)v8, &qword_256828E00);
  swift_release();
  swift_release();
  swift_release();
  v38 = (uint64_t *)(v2 + *(int *)(type metadata accessor for SymbolView(0) + 24));
  v39 = *v38;
  v40 = type metadata accessor for NotificationSymbolConfiguration(0);
  v41 = (uint64_t)v38 + *(int *)(v40 + 24);
  v42 = (_QWORD *)(v35 + *(int *)(v64 + 36));
  v43 = (char *)v42 + *(int *)(type metadata accessor for NotificationIconStyle(0) + 20);
  v44 = sub_237A872D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v43, v41, v44);
  *v42 = v39;
  sub_2378BBFE0((uint64_t)v11, v35, &qword_256828E08);
  swift_retain();
  sub_2378BC024((uint64_t)v11, &qword_256828E08);
  v45 = 0.0;
  v46 = 0.0;
  v47 = *((_BYTE *)v38 + 24);
  if ((v47 & 1) == 0)
  {
    v46 = *((double *)v38 + 1);
    v45 = *((double *)v38 + 2);
  }
  v48 = sub_237A874AC();
  v49 = (uint64_t)v71;
  sub_2378E1C4C(v46, v47, 0.0, 1, 0.0, 1, v45, v47, (uint64_t)v71, 0.0, 1, 0.0, 1, v48, v50);
  sub_2378BC024(v35, &qword_256820B98);
  v51 = (__int128 *)((char *)v38 + *(int *)(v40 + 28));
  v65 = *v51;
  v52 = *((_QWORD *)v51 + 2);
  v53 = *((_QWORD *)v51 + 3);
  v54 = sub_237A86F3C();
  v55 = v70;
  sub_2378BBFE0(v49, v70, &qword_256820BA0);
  sub_237971BB0(v67, v68);
  v56 = v73;
  v57 = v55 + *(int *)(v73 + 36);
  *(_BYTE *)v57 = v54;
  *(_OWORD *)(v57 + 8) = v65;
  *(_QWORD *)(v57 + 24) = v52;
  *(_QWORD *)(v57 + 32) = v53;
  *(_BYTE *)(v57 + 40) = 0;
  sub_2378BC024(v49, &qword_256820BA0);
  v58 = v69;
  sub_237870370(v55, v69, qword_256828E10);
  v59 = v58;
  v60 = v74;
  sub_237870370(v59, v74, qword_256828E10);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v60, 0, 1, v56);
}

uint64_t sub_237A3F4A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  unsigned int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[11];

  v69 = a1;
  v2 = sub_237A869FC();
  MEMORY[0x24BDAC7A8](v2);
  v66 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237A867C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - v9;
  v63 = sub_237A8750C();
  v74 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D68);
  MEMORY[0x24BDAC7A8](v60);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D70);
  MEMORY[0x24BDAC7A8](v62);
  v65 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B78);
  MEMORY[0x24BDAC7A8](v64);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B80);
  MEMORY[0x24BDAC7A8](v17);
  v67 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1 + *(int *)(type metadata accessor for TextContentView(0) + 24);
  v20 = *(unsigned __int8 *)(v19 + 128);
  v68 = v16;
  if (v20 == 1)
    v21 = sub_237A86C78();
  else
    v21 = sub_237A86C6C();
  v58 = v21;
  v57 = *(_QWORD *)(v19 + 112);
  sub_237A3FA10(v1, v75);
  v72 = v75[1];
  v73 = v75[0];
  v71 = v75[2];
  v59 = v19;
  v70 = v75[3];
  v22 = v75[5];
  v56 = v75[4];
  v23 = v75[6];
  v24 = v75[7];
  v25 = v75[8];
  v55 = v75[9];
  sub_23796DFAC((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDEB3F0], v4);
  v26 = sub_237A867BC();
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v7, v4);
  v27(v10, v4);
  v28 = (unsigned int *)MEMORY[0x24BDF5098];
  v29 = v74;
  if ((v26 & 1) == 0)
    v28 = (unsigned int *)MEMORY[0x24BDF5080];
  v30 = v61;
  v31 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v61, *v28, v63);
  v32 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v33 = (uint64_t)v66;
  v32(v66, v30, v31);
  sub_2378D07D8(v33, (uint64_t)&v13[*(int *)(v60 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  v34 = v57;
  *(_QWORD *)v13 = v58;
  *((_QWORD *)v13 + 1) = v34;
  v13[16] = 0;
  v36 = v72;
  v35 = v73;
  *((_QWORD *)v13 + 3) = v73;
  *((_QWORD *)v13 + 4) = v36;
  v38 = v70;
  v37 = v71;
  *((_QWORD *)v13 + 5) = v71;
  *((_QWORD *)v13 + 6) = v38;
  v39 = v56;
  *((_QWORD *)v13 + 7) = v56;
  *((_QWORD *)v13 + 8) = v22;
  *((_QWORD *)v13 + 9) = v23;
  *((_QWORD *)v13 + 10) = v24;
  v40 = v55;
  *((_QWORD *)v13 + 11) = v25;
  *((_QWORD *)v13 + 12) = v40;
  sub_237A43EA0(v35, v36, v37, v38);
  sub_237A43ED0(v39, v22, v23, v24);
  sub_2378DE6A4(v33, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v30, v31);
  sub_23796F68C(v73, v72, v71, v70);
  sub_237A43F0C(v39, v22, v23, v24);
  v41 = v59;
  v42 = *(_QWORD *)(v59 + 120);
  KeyPath = swift_getKeyPath();
  v44 = v65;
  sub_2378BBFE0((uint64_t)v13, v65, &qword_256828D68);
  v45 = v44 + *(int *)(v62 + 36);
  *(_QWORD *)v45 = KeyPath;
  *(_QWORD *)(v45 + 8) = v42;
  *(_BYTE *)(v45 + 16) = 0;
  sub_2378BC024((uint64_t)v13, &qword_256828D68);
  v46 = v41;
  LOBYTE(v42) = (*(_BYTE *)(v41 + 128) & 1) == 0;
  v47 = swift_getKeyPath();
  v48 = (uint64_t)v68;
  sub_2378BBFE0(v44, (uint64_t)v68, &qword_256828D70);
  v49 = v48 + *(int *)(v64 + 36);
  *(_QWORD *)v49 = v47;
  *(_BYTE *)(v49 + 8) = v42;
  sub_2378BC024(v44, &qword_256828D70);
  if (*(_BYTE *)(v46 + 128) == 1)
    v50 = sub_237A874B8();
  else
    v50 = sub_237A874AC();
  v52 = v67;
  sub_2378E1CB0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v67, 0.0, 1, 0.0, 1, v50, v51);
  sub_2378BC024(v48, &qword_256820B78);
  return sub_237870370(v52, v69, &qword_256820B80);
}

uint64_t sub_237A3FA10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = type metadata accessor for TextContentView(0);
  v4 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 20) + 32);
  swift_bridgeObjectRetain();
  if (v4 > 1)
  {
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
  }
  else
  {
    v40 = v3;
    v41 = a1;
    __swift_project_boxed_opaque_existential_2Tm((_QWORD *)(a1 + *(int *)(v3 + 24) + 16), *(_QWORD *)(a1 + *(int *)(v3 + 24) + 40));
    sub_237879800();
    v5 = sub_237A8705C();
    v7 = v6;
    v9 = v8 & 1;
    v10 = sub_237A87038();
    v12 = v11;
    v14 = v13 & 1;
    sub_2378BBE34(v5, v7, v9);
    swift_bridgeObjectRelease();
    v15 = sub_237A87044();
    v44 = v17;
    v45 = v16;
    v43 = v18 & 1;
    sub_2378BBE34(v10, v12, v14);
    swift_bridgeObjectRelease();
    if (!v4)
    {
      v30 = 0;
      v32 = 0;
      v36 = 0;
      v34 = 0;
      KeyPath = 0;
      v37 = 0;
      goto LABEL_7;
    }
    v42 = v15;
    swift_bridgeObjectRetain();
    v3 = v40;
    a1 = v41;
  }
  v19 = (_QWORD *)(a1 + *(int *)(v3 + 24));
  __swift_project_boxed_opaque_existential_2Tm(v19 + 7, v19[10]);
  sub_237879800();
  v20 = sub_237A8705C();
  v22 = v21;
  v24 = v23 & 1;
  v25 = sub_237A87038();
  v27 = v26;
  v29 = v28 & 1;
  sub_2378BBE34(v20, v22, v24);
  swift_bridgeObjectRelease();
  v30 = sub_237A87044();
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  sub_2378BBE34(v25, v27, v29);
  swift_bridgeObjectRelease();
  v37 = v19[17];
  KeyPath = swift_getKeyPath();
  v15 = v42;
LABEL_7:
  *a2 = v15;
  a2[1] = v45;
  a2[2] = v43;
  a2[3] = v44;
  a2[4] = v30;
  a2[5] = v32;
  a2[6] = v36;
  a2[7] = v34;
  a2[8] = KeyPath;
  a2[9] = v37;
  sub_237A43EA0(v15, v45, v43, v44);
  sub_237A43ED0(v30, v32, v36, v34);
  sub_237A43F0C(v30, v32, v36, v34);
  return sub_23796F68C(v15, v45, v43, v44);
}

uint64_t sub_237A3FD0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v55 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D78);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D80);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B88);
  MEMORY[0x24BDAC7A8](v48);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B90);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D88);
  MEMORY[0x24BDAC7A8](v49);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D90);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828D98);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UserInteractiveConfiguration(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1;
  sub_23796E620((uint64_t)v17);
  v19 = *((_OWORD *)v17 + 1);
  v56 = *(_OWORD *)v17;
  v57 = v19;
  v20 = *((_OWORD *)v17 + 3);
  v58 = *((_OWORD *)v17 + 2);
  v59 = v20;
  sub_237A44090((uint64_t)&v56);
  sub_2378DE6A4((uint64_t)v17, type metadata accessor for UserInteractiveConfiguration);
  *(_QWORD *)v5 = sub_237A86BAC();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DA0);
  sub_237A401DC((uint64_t)&v56, (uint64_t)&v5[*(int *)(v21 + 44)]);
  KeyPath = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v5, (uint64_t)v7, &qword_256828D80);
  v23 = (uint64_t *)&v7[*(int *)(v48 + 36)];
  *v23 = KeyPath;
  v23[1] = 0x3FEB333333333333;
  sub_2378BC024((uint64_t)v5, &qword_256828D80);
  v24 = v57;
  v25 = sub_237A874AC();
  v26 = v47;
  sub_2378E1D14(0.0, 1, 0.0, 1, *((double *)&v24 + 1), 0, *(double *)&v24, 0, v47, 0.0, 1, *(double *)&v24, 0, v25, v27);
  sub_2378BC024((uint64_t)v7, &qword_256820B88);
  v28 = sub_237A874AC();
  v30 = v29;
  v31 = (uint64_t)&v11[*(int *)(v49 + 36)];
  sub_237A403B4((uint64_t)&v56, v18, v31);
  v32 = (uint64_t *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828DA8) + 36));
  *v32 = v28;
  v32[1] = v30;
  sub_237870370(v26, (uint64_t)v11, &qword_256820B90);
  sub_23796E620((uint64_t)v17);
  v33 = *((_QWORD *)v17 + 5);
  swift_retain();
  sub_2378DE6A4((uint64_t)v17, type metadata accessor for UserInteractiveConfiguration);
  v34 = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v11, (uint64_t)v13, &qword_256828D88);
  v35 = (uint64_t *)&v13[*(int *)(v51 + 36)];
  *v35 = v34;
  v35[1] = v33;
  sub_2378BC024((uint64_t)v11, &qword_256828D88);
  LOBYTE(v33) = sub_237A86E64();
  v36 = v53;
  sub_2378BBFE0((uint64_t)v13, v53, &qword_256828D90);
  v37 = 0.5;
  if ((v33 & 1) != 0)
  {
    v38 = 0.96;
  }
  else
  {
    v37 = 1.0;
    v38 = 1.0;
  }
  *(double *)(v36 + *(int *)(v54 + 36)) = v37;
  sub_237A8756C();
  v40 = v39;
  v42 = v41;
  v43 = v50;
  sub_2378BBFE0(v36, v50, &qword_256828D78);
  v44 = v43 + *(int *)(v52 + 36);
  *(double *)v44 = v38;
  *(double *)(v44 + 8) = v38;
  *(_QWORD *)(v44 + 16) = v40;
  *(_QWORD *)(v44 + 24) = v42;
  sub_2378BC024(v36, &qword_256828D78);
  sub_237A440CC((uint64_t)&v56);
  sub_2378BC024((uint64_t)v13, &qword_256828D90);
  return sub_237870370(v43, v55, &qword_256828D98);
}

uint64_t sub_237A401DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = sub_237A86E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = *(_QWORD *)(a1 + 8);
  sub_237A86E58();
  if (qword_25681E440 != -1)
    swift_once();
  v15 = qword_2568706E8;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v17 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v17 = KeyPath;
  v17[1] = v15;
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_retain();
  v18(v7, v4);
  sub_237870370((uint64_t)v10, (uint64_t)v13, &qword_256828DE8);
  sub_2378BBFE0((uint64_t)v13, (uint64_t)v10, &qword_256828DE8);
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DF0);
  sub_2378BBFE0((uint64_t)v10, a2 + *(int *)(v19 + 48), &qword_256828DE8);
  v20 = a2 + *(int *)(v19 + 64);
  *(_QWORD *)v20 = v14;
  *(_BYTE *)(v20 + 8) = 0;
  sub_2378BC024((uint64_t)v13, &qword_256828DE8);
  return sub_2378BC024((uint64_t)v10, &qword_256828DE8);
}

uint64_t sub_237A403B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  v6 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DB0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DB8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = (char *)v8 + *(int *)(v6 + 20);
  v17 = *MEMORY[0x24BDEEB68];
  v18 = sub_237A86C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  *v8 = v15;
  v8[1] = v15;
  v19 = a2 + *(int *)(type metadata accessor for NotificationButtonTextStyle(0) + 20);
  v20 = *(_QWORD *)v19;
  LOBYTE(v16) = *(_BYTE *)(v19 + 8);
  sub_237971568(*(_QWORD *)v19, (char)v16);
  LOBYTE(v17) = sub_23796D5A0(v20, (char)v16);
  sub_237971574(v20, (char)v16);
  if ((v17 & 1) != 0)
  {
    if (qword_25681E448 != -1)
      swift_once();
    v21 = qword_2568706F0;
    swift_retain();
  }
  else
  {
    v21 = sub_237A87200();
  }
  sub_237A867F8();
  v22 = MEMORY[0x24BDED998];
  sub_2378D07D8((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v23 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828DC0) + 36)];
  v24 = v38[1];
  *(_OWORD *)v23 = v38[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = v39;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DC8);
  *(_QWORD *)&v11[*(int *)(v25 + 52)] = v21;
  *(_WORD *)&v11[*(int *)(v25 + 56)] = 256;
  v26 = sub_237A874AC();
  v28 = v27;
  v29 = (uint64_t *)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828DD0) + 36)];
  *v29 = v26;
  v29[1] = v28;
  sub_2378DE6A4((uint64_t)v8, (uint64_t (*)(_QWORD))v22);
  v30 = *(_QWORD *)(a1 + 32);
  v40 = v30;
  sub_2378D07D8((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))v22);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820058);
  *(_QWORD *)&v14[*(int *)(v31 + 52)] = v30;
  *(_WORD *)&v14[*(int *)(v31 + 56)] = 256;
  swift_retain_n();
  v32 = sub_237A874AC();
  v34 = v33;
  v35 = (uint64_t)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828DD8) + 36)];
  sub_2378BBFE0((uint64_t)v11, v35, &qword_256828DB0);
  sub_237A440FC((uint64_t)&v40);
  v36 = (uint64_t *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828DE0) + 36));
  *v36 = v32;
  v36[1] = v34;
  sub_2378BC024((uint64_t)v11, &qword_256828DB0);
  return sub_237870370((uint64_t)v14, a3, &qword_256828DB8);
}

uint64_t sub_237A406E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828F88);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828F90);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A86C90();
  v14 = sub_237A86C9C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  KeyPath = swift_getKeyPath();
  v16 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828DF8);
  sub_2378BBFE0((uint64_t)v7, (uint64_t)v16 + *(int *)(v17 + 28), &qword_256828E00);
  *v16 = KeyPath;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828F98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, a1, v18);
  sub_2378BC024((uint64_t)v7, &qword_256828E00);
  v19 = *v2;
  v20 = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v13, &qword_256828F88);
  v21 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v21 = v20;
  v21[1] = v19;
  swift_retain();
  sub_2378BC024((uint64_t)v10, &qword_256828F88);
  v22 = (char *)v2 + *(int *)(type metadata accessor for NotificationIconStyle(0) + 20);
  v23 = swift_getKeyPath();
  v24 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828FA0) + 36));
  v25 = (char *)v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256824DD8) + 28);
  v26 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, v22, v26);
  *v24 = v23;
  return sub_237870370((uint64_t)v13, a2, &qword_256828F90);
}

uint64_t sub_237A40940@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828810);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828818);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828820);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)v18 = sub_237A86C6C();
    *((_QWORD *)v18 + 1) = 0;
    v18[16] = 1;
    v19 = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256828838) + 44)];
    v25 = a3;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v20(v14, v26, v8);
    v20(v11, (uint64_t)v14, v8);
    *(_QWORD *)v19 = 0;
    v19[8] = 0;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828840);
    v20(&v19[*(int *)(v21 + 48)], (uint64_t)v11, v8);
    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v14, v8);
    v22(v11, v8);
    sub_2378BBFE0((uint64_t)v18, (uint64_t)v7, &qword_256828820);
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_256828828, &qword_256828820, MEMORY[0x24BDF4700]);
    sub_2378B70D4(&qword_256828830, &qword_256828818, MEMORY[0x24BDEFB78]);
    sub_237A86D44();
    return sub_2378BC024((uint64_t)v18, &qword_256828820);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v24(v14, v26, v8, v16);
    ((void (*)(char *, char *, uint64_t))v24)(v7, v14, v8);
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_256828828, &qword_256828820, MEMORY[0x24BDF4700]);
    sub_2378B70D4(&qword_256828830, &qword_256828818, MEMORY[0x24BDEFB78]);
    sub_237A86D44();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_237A40C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  return sub_237A40940(a1, *v2, a2);
}

unint64_t sub_237A40C30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828878;
  if (!qword_256828878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828870);
    v2[0] = sub_2378B70D4(&qword_256828880, &qword_256828888, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828878);
  }
  return result;
}

uint64_t sub_237A40CB4()
{
  return sub_2379A2040(&qword_256828898, &qword_256828858, (uint64_t (*)(void))sub_237A40CD8, MEMORY[0x24BDECC60]);
}

unint64_t sub_237A40CD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568288A0;
  if (!qword_2568288A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568288A8);
    v2[0] = sub_23786FAA0(&qword_2568288B0, type metadata accessor for TextContentView, (uint64_t)&unk_237AA7FB0);
    v2[1] = sub_2378B70D4(&qword_2568288B8, &qword_2568288C0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568288A0);
  }
  return result;
}

uint64_t type metadata accessor for TextContentView(uint64_t a1)
{
  return sub_23790828C(a1, qword_256828C18);
}

uint64_t type metadata accessor for SymbolView(uint64_t a1)
{
  return sub_23790828C(a1, qword_256828CB0);
}

uint64_t sub_237A40DAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_237A86B58();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_237A40DDC()
{
  return sub_237A86B64();
}

uint64_t sub_237A40E08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237A86ABC();
  *a1 = v3;
  return result;
}

uint64_t sub_237A40E30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237A86ABC();
  *a1 = v3;
  return result;
}

uint64_t sub_237A40E58()
{
  return sub_237A86AC8();
}

uint64_t sub_237A40E7C()
{
  return sub_237A86AC8();
}

unint64_t sub_237A40EA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828968;
  if (!qword_256828968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828958);
    v2[0] = sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    v2[1] = v2[0];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828968);
  }
  return result;
}

unint64_t sub_237A40F1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828970;
  if (!qword_256828970)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828940);
    v2[0] = sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    v2[1] = sub_237A40FA0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828970);
  }
  return result;
}

unint64_t sub_237A40FA0()
{
  unint64_t result;

  result = qword_256828978;
  if (!qword_256828978)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_256828978);
  }
  return result;
}

uint64_t type metadata accessor for NotificationButtonTextStyle(uint64_t a1)
{
  return sub_23790828C(a1, qword_256828B80);
}

unint64_t sub_237A40FF8()
{
  unint64_t result;

  result = qword_256828A58;
  if (!qword_256828A58)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for NotificationModel.Action, &type metadata for NotificationModel.Action);
    atomic_store(result, (unint64_t *)&qword_256828A58);
  }
  return result;
}

unint64_t sub_237A41040()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828A60;
  if (!qword_256828A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828A20);
    v2[0] = sub_2378B70D4(&qword_256828A68, &qword_256828A18, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828A60);
  }
  return result;
}

uint64_t sub_237A410C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t *sub_237A410F8()
{
  uint64_t v0;

  return sub_237A3EEA0((char *)(v0 + 16));
}

uint64_t sub_237A41100(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_2378A2BF4(v2);
  return a1;
}

uint64_t *sub_237A41140(uint64_t *a1)
{
  sub_2378A2BF4(*a1);
  return a1;
}

uint64_t *sub_237A4116C(uint64_t *a1)
{
  sub_2378A2C04(*a1);
  return a1;
}

unint64_t sub_237A411A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828AF0;
  if (!qword_256828AF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828A98);
    v2[0] = sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    v2[1] = sub_23786FAA0(&qword_256828AE8, type metadata accessor for NoticeView, (uint64_t)&unk_237AA7C94);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828AF0);
  }
  return result;
}

unint64_t sub_237A4123C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828AF8;
  if (!qword_256828AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828AC0);
    v2[0] = sub_237A412C0();
    v2[1] = sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828AF8);
  }
  return result;
}

unint64_t sub_237A412C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828B00;
  if (!qword_256828B00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828AD8);
    v2[0] = sub_2379A2040(&qword_256828B08, &qword_256828AD0, (uint64_t (*)(void))sub_237A41364, MEMORY[0x24BDECC60]);
    v2[1] = sub_23786FAA0(&qword_256828B18, type metadata accessor for UserInteractiveView, (uint64_t)&unk_237AA7BF4);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828B00);
  }
  return result;
}

unint64_t sub_237A41364()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828B10;
  if (!qword_256828B10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820A90);
    v2[0] = sub_23786FAA0(&qword_256828B18, type metadata accessor for UserInteractiveView, (uint64_t)&unk_237AA7BF4);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828B10);
  }
  return result;
}

unint64_t sub_237A413E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828B20;
  if (!qword_256828B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828AA8);
    v2[0] = sub_23786FAA0(&qword_256828AE0, type metadata accessor for BannerView, (uint64_t)&unk_237AA7C44);
    v2[1] = sub_237A411A0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828B20);
  }
  return result;
}

uint64_t sub_237A4146C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v45 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      v58 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v58;
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      *(_QWORD *)(a1 + 72) = a2[9];
      v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v9 = v8[7];
      v10 = a1 + v9;
      v11 = (uint64_t)a2 + v9;
      *(_QWORD *)v10 = *(uint64_t *)((char *)a2 + v9);
      *(_BYTE *)(v10 + 24) = *((_BYTE *)a2 + v9 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
      v12 = type metadata accessor for NotificationSymbolConfiguration(0);
      v13 = *(int *)(v12 + 24);
      v56 = v11 + v13;
      v57 = v10 + v13;
      v14 = sub_237A872D8();
      v59 = v6;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v15(v57, v56, v14);
      v16 = *(int *)(v12 + 28);
      v17 = (_OWORD *)(v10 + v16);
      v18 = (_OWORD *)(v11 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      v20 = v8[8];
      v21 = a1 + v20;
      v22 = (uint64_t)a2 + v20;
      v23 = *(uint64_t *)((char *)a2 + v20 + 8);
      *(_QWORD *)v21 = *(uint64_t *)((char *)a2 + v20);
      *(_QWORD *)(v21 + 8) = v23;
      v24 = a1 + v20 + 16;
      v25 = (uint64_t)a2 + v20 + 16;
      v26 = *(_OWORD *)((char *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 40) = v26;
      v27 = v26;
      v28 = **(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8);
      swift_retain();
      swift_retain();
      v28(v24, v25, v27);
      v29 = *(_OWORD *)(v22 + 80);
      *(_OWORD *)(v21 + 80) = v29;
      (**(void (***)(uint64_t, uint64_t))(v29 - 8))(v21 + 56, v22 + 56);
      v30 = *(_OWORD *)(v22 + 112);
      *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
      *(_OWORD *)(v21 + 112) = v30;
      *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
      *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
      v31 = v8[9];
      v32 = a1 + v31;
      v33 = (uint64_t)a2 + v31;
      *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v34 = v8[10];
      v35 = a1 + v34;
      v36 = (uint64_t)a2 + v34;
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
      *(_BYTE *)(a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
      v37 = v8[12];
      v38 = a1 + v37;
      v39 = (uint64_t)a2 + v37;
      v40 = sub_237A8747C();
      v41 = v39;
      v6 = v59;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v41, v40);
      v42 = v8[13];
      v43 = a1 + v42;
      v44 = (uint64_t)a2 + v42;
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
    }
    else
    {
      *(_QWORD *)a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v46 = *(int *)(v6 + 20);
    v47 = a1 + v46;
    v48 = (uint64_t)a2 + v46;
    v49 = *(_QWORD *)v48;
    v50 = *(_BYTE *)(v48 + 8);
    sub_237971568(*(_QWORD *)v48, v50);
    *(_QWORD *)v47 = v49;
    *(_BYTE *)(v47 + 8) = v50;
    v51 = *(int *)(v6 + 24);
    v52 = (_QWORD *)(a1 + v51);
    v53 = (uint64_t *)((char *)a2 + v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v54 = sub_237A867C8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    }
    else
    {
      *v52 = *v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_237A417C0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    v4 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v5 = a1 + v4[7];
    swift_release();
    v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    v7 = sub_237A872D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v4[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
    v9 = a1 + v4[12];
    v10 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release();
  sub_237971574(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
  v11 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v12 = sub_237A867C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t sub_237A41928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v57 = a3;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v9 = v8[7];
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
    *(_BYTE *)(v10 + 24) = *(_BYTE *)(a2 + v9 + 24);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(a2 + v9 + 8);
    v12 = type metadata accessor for NotificationSymbolConfiguration(0);
    v13 = *(int *)(v12 + 24);
    v55 = v11 + v13;
    v56 = v10 + v13;
    v14 = sub_237A872D8();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v15(v56, v55, v14);
    v16 = *(int *)(v12 + 28);
    v17 = (_OWORD *)(v10 + v16);
    v18 = (_OWORD *)(v11 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v8[8];
    v21 = a1 + v20;
    v22 = a2 + v20;
    v23 = *(_QWORD *)(a2 + v20 + 8);
    *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
    *(_QWORD *)(v21 + 8) = v23;
    v24 = a1 + v20 + 16;
    v25 = a2 + v20 + 16;
    v26 = *(_OWORD *)(a2 + v20 + 40);
    *(_OWORD *)(v21 + 40) = v26;
    v27 = v26;
    v28 = **(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8);
    swift_retain();
    swift_retain();
    v29 = v25;
    a3 = v57;
    v28(v24, v29, v27);
    v30 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 80) = v30;
    (**(void (***)(uint64_t, uint64_t))(v30 - 8))(v21 + 56, v22 + 56);
    v31 = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 112) = v31;
    *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
    *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
    v32 = v8[9];
    v33 = a1 + v32;
    v34 = a2 + v32;
    *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    v35 = v8[10];
    v36 = a1 + v35;
    v37 = a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
    *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
    v38 = v8[12];
    v39 = a1 + v38;
    v40 = a2 + v38;
    v41 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    v42 = v8[13];
    v43 = a1 + v42;
    v44 = a2 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v45 = *(int *)(a3 + 20);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)v47;
  v49 = *(_BYTE *)(v47 + 8);
  sub_237971568(*(_QWORD *)v47, v49);
  *(_QWORD *)v46 = v48;
  *(_BYTE *)(v46 + 8) = v49;
  v50 = *(int *)(a3 + 24);
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v53 = sub_237A867C8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    *v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_237A41C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  if (a1 != a2)
  {
    sub_2378BC024(a1, &qword_256823798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v57 = a3;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v6 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v7 = v6[7];
      v8 = a1 + v7;
      v9 = a2 + v7;
      *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
      v10 = *(_OWORD *)(a2 + v7 + 8);
      *(_BYTE *)(v8 + 24) = *(_BYTE *)(a2 + v7 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      v12 = *(int *)(v11 + 24);
      v55 = v9 + v12;
      v56 = v8 + v12;
      v13 = sub_237A872D8();
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v14(v56, v55, v13);
      v15 = *(int *)(v11 + 28);
      v16 = (_OWORD *)(v8 + v15);
      v17 = (_OWORD *)(v9 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      v19 = v6[8];
      v20 = a1 + v19;
      v21 = a2 + v19;
      *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
      v22 = a1 + v19 + 16;
      v23 = a2 + v19 + 16;
      v24 = *(_QWORD *)(a2 + v19 + 40);
      *(_QWORD *)(v20 + 40) = v24;
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(a2 + v19 + 48);
      v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_retain();
      swift_retain();
      v26 = v23;
      a3 = v57;
      v25(v22, v26, v24);
      v27 = *(_QWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 80) = v27;
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v20 + 56, v21 + 56);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      *(_QWORD *)(v20 + 104) = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v20 + 112) = *(_QWORD *)(v21 + 112);
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
      *(_QWORD *)(v20 + 136) = *(_QWORD *)(v21 + 136);
      v28 = v6[9];
      v29 = a1 + v28;
      v30 = a2 + v28;
      v31 = *(_BYTE *)(v30 + 16);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *(_BYTE *)(v29 + 16) = v31;
      v32 = v6[10];
      v33 = a1 + v32;
      v34 = a2 + v32;
      v35 = *(_BYTE *)(v34 + 16);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *(_BYTE *)(v33 + 16) = v35;
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      v36 = v6[12];
      v37 = a1 + v36;
      v38 = a2 + v36;
      v39 = sub_237A8747C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v6[13];
      v41 = (_QWORD *)(a1 + v40);
      v42 = (_QWORD *)(a2 + v40);
      *v41 = *v42;
      v41[1] = v42[1];
      v41[2] = v42[2];
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v43 = *(int *)(a3 + 20);
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)v45;
  v47 = *(_BYTE *)(v45 + 8);
  sub_237971568(*(_QWORD *)v45, v47);
  v48 = *(_QWORD *)v44;
  v49 = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = v47;
  sub_237971574(v48, v49);
  if (a1 != a2)
  {
    v50 = *(int *)(a3 + 24);
    v51 = (_QWORD *)(a1 + v50);
    v52 = (_QWORD *)(a2 + v50);
    sub_2378BC024(a1 + v50, &qword_2568237C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_237A867C8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_237A41FF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v10 = v9[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
    v11[24] = *((_BYTE *)a2 + v10 + 24);
    *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
    v13 = type metadata accessor for NotificationSymbolConfiguration(0);
    v14 = *(int *)(v13 + 24);
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    v18 = *(int *)(v13 + 28);
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v22 = v9[8];
    v23 = (_OWORD *)((char *)a1 + v22);
    v24 = (_OWORD *)((char *)a2 + v22);
    v25 = v24[3];
    v23[2] = v24[2];
    v23[3] = v25;
    v26 = v24[1];
    *v23 = *v24;
    v23[1] = v26;
    v27 = v24[8];
    v28 = v24[6];
    v23[7] = v24[7];
    v23[8] = v27;
    v29 = v24[5];
    v23[4] = v24[4];
    v23[5] = v29;
    v23[6] = v28;
    v30 = v9[9];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    v33 = v9[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
    v36 = v9[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_237A8747C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    v40 = v9[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v43 = *(int *)(a3 + 20);
  v44 = *(int *)(a3 + 24);
  v45 = (char *)a1 + v43;
  v46 = (char *)a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = (char *)a1 + v44;
  v48 = (char *)a2 + v44;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = sub_237A867C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_237A42274(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823798);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v10 = v9[7];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
      v11[24] = *((_BYTE *)a2 + v10 + 24);
      *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
      v13 = type metadata accessor for NotificationSymbolConfiguration(0);
      v14 = *(int *)(v13 + 24);
      v15 = &v11[v14];
      v16 = &v12[v14];
      v17 = sub_237A872D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = *(int *)(v13 + 28);
      v19 = &v11[v18];
      v20 = &v12[v18];
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      v22 = v9[8];
      v23 = (_OWORD *)((char *)a1 + v22);
      v24 = (_OWORD *)((char *)a2 + v22);
      v25 = v24[3];
      v23[2] = v24[2];
      v23[3] = v25;
      v26 = v24[1];
      *v23 = *v24;
      v23[1] = v26;
      v27 = v24[8];
      v28 = v24[6];
      v23[7] = v24[7];
      v23[8] = v27;
      v29 = v24[5];
      v23[4] = v24[4];
      v23[5] = v29;
      v23[6] = v28;
      v30 = v9[9];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      v33 = v9[10];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
      v36 = v9[12];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_237A8747C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v9[13];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v43 = *(int *)(a3 + 20);
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(_QWORD *)v45;
  LOBYTE(v45) = v45[8];
  v47 = *(_QWORD *)v44;
  v48 = v44[8];
  *(_QWORD *)v44 = v46;
  v44[8] = (char)v45;
  sub_237971574(v47, v48);
  if (a1 != a2)
  {
    v49 = *(int *)(a3 + 24);
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    sub_2378BC024((uint64_t)a1 + v49, &qword_2568237C8);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_237A867C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_237A42534()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A42540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_237A425EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A425F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_237A426A4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2379A3AF4(319, &qword_256824E50, (void (*)(uint64_t))type metadata accessor for UserInteractiveConfiguration);
  if (v0 <= 0x3F)
  {
    sub_2379A3AF4(319, qword_256824E58, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_237A42750(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  __int128 v26;
  __int128 v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_237A867C8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = *((_QWORD *)v11 + 2);
    v15 = *((_QWORD *)v11 + 3);
    v16 = v11[32];
    sub_2379732BC(*(_QWORD *)v11, v13, v14, v15, v16);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    *((_QWORD *)v10 + 2) = v14;
    *((_QWORD *)v10 + 3) = v15;
    v10[32] = v16;
    v17 = *(int *)(a3 + 24);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(uint64_t *)((char *)a2 + v17);
    v21 = *(uint64_t *)((char *)a2 + v17 + 8);
    *(_QWORD *)v18 = v20;
    *((_QWORD *)v18 + 1) = v21;
    v22 = (uint64_t)a1 + v17 + 16;
    v23 = *(_OWORD *)(v19 + 40);
    *(_OWORD *)(v18 + 40) = v23;
    v24 = v23;
    v25 = **(void (***)(uint64_t, char *, uint64_t))(v23 - 8);
    swift_retain();
    swift_retain();
    v25(v22, v19 + 16, v24);
    v26 = *((_OWORD *)v19 + 5);
    *((_OWORD *)v18 + 5) = v26;
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v18 + 56), (uint64_t)(v19 + 56));
    v27 = *((_OWORD *)v19 + 7);
    *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
    *((_OWORD *)v18 + 7) = v27;
    v18[128] = v19[128];
    *((_QWORD *)v18 + 17) = *((_QWORD *)v19 + 17);
  }
  return a1;
}

uint64_t sub_237A428F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_237A867C8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_23790BCE8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
  v6 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm(v6 + 16);
  return __swift_destroy_boxed_opaque_existential_2Tm(v6 + 56);
}

_QWORD *sub_237A42998(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  __int128 v24;
  __int128 v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_237A867C8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = v9[32];
  sub_2379732BC(*(_QWORD *)v9, v11, v12, v13, v14);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  v8[32] = v14;
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a2 + v15);
  v19 = *(_QWORD *)((char *)a2 + v15 + 8);
  *(_QWORD *)v16 = v18;
  *((_QWORD *)v16 + 1) = v19;
  v20 = (uint64_t)a1 + v15 + 16;
  v21 = *(_OWORD *)(v17 + 40);
  *(_OWORD *)(v16 + 40) = v21;
  v22 = v21;
  v23 = **(void (***)(uint64_t, char *, uint64_t))(v21 - 8);
  swift_retain();
  swift_retain();
  v23(v20, v17 + 16, v22);
  v24 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 5) = v24;
  (**(void (***)(uint64_t, uint64_t))(v24 - 8))((uint64_t)(v16 + 56), (uint64_t)(v17 + 56));
  v25 = *((_OWORD *)v17 + 7);
  *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
  *((_OWORD *)v16 + 7) = v25;
  v16[128] = v17[128];
  *((_QWORD *)v16 + 17) = *((_QWORD *)v17 + 17);
  return a1;
}

_QWORD *sub_237A42B10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_2568237C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_237A867C8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = v9[32];
  sub_2379732BC(*(_QWORD *)v9, v11, v12, v13, v14);
  v15 = *(_QWORD *)v8;
  v16 = *((_QWORD *)v8 + 1);
  v17 = *((_QWORD *)v8 + 2);
  v18 = *((_QWORD *)v8 + 3);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  v19 = v8[32];
  v8[32] = v14;
  sub_23790BCE8(v15, v16, v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v21 + 2, (uint64_t *)v22 + 2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v21 + 7, (uint64_t *)v22 + 7);
  *((_QWORD *)v21 + 12) = *((_QWORD *)v22 + 12);
  *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
  *((_QWORD *)v21 + 14) = *((_QWORD *)v22 + 14);
  *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
  v21[128] = v22[128];
  *((_QWORD *)v21 + 17) = *((_QWORD *)v22 + 17);
  return a1;
}

char *sub_237A42CB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_237A867C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  v10[32] = v11[32];
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  v17 = *((_OWORD *)v14 + 8);
  v18 = *((_OWORD *)v14 + 6);
  *((_OWORD *)v13 + 7) = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 8) = v17;
  v19 = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_OWORD *)v13 + 5) = v19;
  *((_OWORD *)v13 + 6) = v18;
  return a1;
}

char *sub_237A42D98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_2568237C8);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_237A867C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[32];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  v17 = v9[32];
  v9[32] = v11;
  sub_23790BCE8(v12, v13, v14, v15, v17);
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)v20;
  swift_release();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 16));
  v21 = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
  *((_OWORD *)v19 + 2) = v21;
  *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)(v19 + 56));
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
  *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
  *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
  *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
  v19[128] = v20[128];
  *((_QWORD *)v19 + 17) = *((_QWORD *)v20 + 17);
  return a1;
}

uint64_t sub_237A42F04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A42F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_237A42F90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A42F9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_237A43018()
{
  unint64_t v0;

  sub_2379A3AF4(319, qword_256824E58, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_237A430A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_237971618();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = a2[4];
    if (v10)
    {
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = a2[5];
    }
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    *(_QWORD *)v13 = *(uint64_t *)((char *)a2 + v12);
    *(_OWORD *)(v13 + 8) = *(_OWORD *)((char *)a2 + v12 + 8);
    *(_BYTE *)(v13 + 24) = *((_BYTE *)a2 + v12 + 24);
    v15 = type metadata accessor for NotificationSymbolConfiguration(0);
    v16 = *(int *)(v15 + 24);
    v17 = v13 + v16;
    v18 = v14 + v16;
    v19 = sub_237A872D8();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_retain();
    v20(v17, v18, v19);
    v21 = *(int *)(v15 + 28);
    v22 = (_OWORD *)(v13 + v21);
    v23 = (_OWORD *)(v14 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
  }
  return a1;
}

uint64_t sub_237A431F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_237971624();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
  v6 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_237A43270(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_237971618();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = a2[4];
  if (v9)
  {
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_QWORD *)(a1 + 40) = a2[5];
  }
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
  *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
  *(_BYTE *)(v11 + 24) = *((_BYTE *)a2 + v10 + 24);
  v13 = type metadata accessor for NotificationSymbolConfiguration(0);
  v14 = *(int *)(v13 + 24);
  v15 = v11 + v14;
  v16 = v12 + v14;
  v17 = sub_237A872D8();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_retain();
  v18(v15, v16, v17);
  v19 = *(int *)(v13 + 28);
  v20 = (_OWORD *)(v11 + v19);
  v21 = (_OWORD *)(v12 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  return a1;
}

uint64_t sub_237A43394(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_237971618();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_237971624();
  v9 = (_OWORD *)(a1 + 24);
  v10 = a2 + 3;
  v11 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018(a1 + 24);
      v12 = a2[5];
      *v9 = *v10;
      *(_QWORD *)(a1 + 40) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v13 = *v10;
    *(_QWORD *)(a1 + 40) = a2[5];
    *v9 = v13;
  }
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = (uint64_t)a2 + v14;
  *(_QWORD *)(a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  swift_retain();
  swift_release();
  v17 = *(_OWORD *)(v16 + 8);
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  *(_OWORD *)(v15 + 8) = v17;
  v18 = type metadata accessor for NotificationSymbolConfiguration(0);
  v19 = *(int *)(v18 + 24);
  v20 = v15 + v19;
  v21 = v16 + v19;
  v22 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = *(int *)(v18 + 28);
  v24 = (_QWORD *)(v15 + v23);
  v25 = (_QWORD *)(v16 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  v24[2] = v25[2];
  v24[3] = v25[3];
  return a1;
}

uint64_t sub_237A43538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)(a2 + v4);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + v4 + 8);
  *(_BYTE *)(v5 + 24) = *(_BYTE *)(a2 + v4 + 24);
  v7 = type metadata accessor for NotificationSymbolConfiguration(0);
  v8 = *(int *)(v7 + 24);
  v9 = v5 + v8;
  v10 = v6 + v8;
  v11 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(v7 + 28);
  v13 = (_OWORD *)(v5 + v12);
  v14 = (_OWORD *)(v6 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_237A435F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_237971624();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 32);
  if (!v7)
  {
    sub_2379DC018(a1 + 24);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
LABEL_6:
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  v11 = type metadata accessor for NotificationSymbolConfiguration(0);
  v12 = *(int *)(v11 + 24);
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 28);
  v17 = (_OWORD *)(v9 + v16);
  v18 = (_OWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  return a1;
}

uint64_t sub_237A43718()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A43724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for NotificationSymbolConfiguration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_237A437AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A437B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = type metadata accessor for NotificationSymbolConfiguration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_237A4382C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NotificationSymbolConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_237A438AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828CF0;
  if (!qword_256828CF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828CF8);
    v2[0] = sub_2378B70D4(&qword_256828828, &qword_256828820, MEMORY[0x24BDF4700]);
    v2[1] = sub_2378B70D4(&qword_256828830, &qword_256828818, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828CF0);
  }
  return result;
}

uint64_t sub_237A43948()
{
  return sub_237A43B2C(&qword_256828D00, &qword_256828850, (uint64_t (*)(void))sub_237A43974);
}

unint64_t sub_237A43974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D08;
  if (!qword_256828D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828848);
    v2[0] = sub_2379A2040(&qword_256828D10, &qword_256820A68, (uint64_t (*)(void))sub_237A43A18, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_2378B70D4(&qword_256828D20, &qword_2568265F0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D08);
  }
  return result;
}

unint64_t sub_237A43A18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D18;
  if (!qword_256828D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820A60);
    v2[0] = sub_237A40C30();
    v2[1] = sub_2379A2040(&qword_256828890, &qword_256828860, sub_237A40CB4, MEMORY[0x24BDECC60]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D18);
  }
  return result;
}

unint64_t sub_237A43AA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D28;
  if (!qword_256828D28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820A78);
    v2[0] = sub_237A43B2C(&qword_256828D30, &qword_256820A70, (uint64_t (*)(void))sub_237A43B98);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D28);
  }
  return result;
}

uint64_t sub_237A43B2C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_237A3746C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237A43B98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D38;
  if (!qword_256828D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568288E0);
    v2[0] = sub_237A43C1C();
    v2[1] = sub_2378B70D4(&qword_256828D20, &qword_2568265F0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D38);
  }
  return result;
}

unint64_t sub_237A43C1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256828D40;
  if (!qword_256828D40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568288D8);
    v2 = MEMORY[0x24BDF4498];
    v3[0] = sub_2378B70D4(&qword_256828908, &qword_2568288F8, MEMORY[0x24BDF4498]);
    v3[1] = sub_2378B70D4(&qword_256828910, &qword_2568288E8, v2);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256828D40);
  }
  return result;
}

unint64_t sub_237A43CC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D48;
  if (!qword_256828D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820A88);
    v2[0] = sub_237A43B2C(&qword_256828D50, &qword_256820A80, (uint64_t (*)(void))sub_237A43D48);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D48);
  }
  return result;
}

unint64_t sub_237A43D48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828D58;
  if (!qword_256828D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568289B8);
    v2[0] = sub_237A43DCC();
    v2[1] = sub_2378B70D4(&qword_256828D20, &qword_2568265F0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828D58);
  }
  return result;
}

unint64_t sub_237A43DCC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256828D60;
  if (!qword_256828D60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568289B0);
    v2 = MEMORY[0x24BDF4700];
    v3[0] = sub_2378B70D4(&qword_2568289E0, &qword_2568289D0, MEMORY[0x24BDF4700]);
    v3[1] = sub_2378B70D4(&qword_2568289E8, &qword_2568289C0, v2);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256828D60);
  }
  return result;
}

uint64_t sub_237A43E70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A43E80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A43E90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237A43EA0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBD20(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_237A43ED0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBD20(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_237A43F0C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBE34(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237A43F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_237A86B58();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_237A43F78()
{
  return sub_237A86B64();
}

uint64_t sub_237A43FA4()
{
  return sub_237A86AD4();
}

uint64_t sub_237A43FC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256828E00);
  MEMORY[0x24BDAC7A8](v2);
  sub_2378BBFE0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256828E00);
  return sub_237A86AE0();
}

uint64_t sub_237A44044@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86AEC();
  *a1 = result;
  return result;
}

uint64_t sub_237A4406C()
{
  return sub_237A86AF8();
}

uint64_t sub_237A44090(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_237A440CC(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_237A440FC(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_237A4412C()
{
  return sub_237A86AD4();
}

uint64_t type metadata accessor for NotificationIconStyle(uint64_t a1)
{
  return sub_23790828C(a1, qword_256828E70);
}

uint64_t *sub_237A44164(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_237A872D8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_237A441FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_237A44244(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237A872D8();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_237A442B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_237A44328(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_237A44384(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_237A443F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237A443FC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237A872D8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_237A44478()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_237A44484(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_237A872D8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_237A444F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A872D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237A44570()
{
  return sub_2379A2040(&qword_256828EA8, &qword_256820B80, (uint64_t (*)(void))sub_237A445A4, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_237A445A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828EB0;
  if (!qword_256828EB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820B78);
    v2[0] = sub_237A44628();
    v2[1] = sub_2378B70D4(&qword_256828EE8, &qword_256828EF0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828EB0);
  }
  return result;
}

unint64_t sub_237A44628()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828EB8;
  if (!qword_256828EB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828D70);
    v2[0] = sub_237A446AC();
    v2[1] = sub_2378B70D4(&qword_256828ED8, &qword_256828EE0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828EB8);
  }
  return result;
}

unint64_t sub_237A446AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828EC0;
  if (!qword_256828EC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828D68);
    v2[0] = sub_2378B70D4(&qword_256828EC8, &qword_256828ED0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828EC0);
  }
  return result;
}

uint64_t sub_237A44730()
{
  return sub_2379A2040(&qword_256828EF8, &qword_256828D98, sub_237A44764, MEMORY[0x24BDEBF50]);
}

uint64_t sub_237A44764()
{
  return sub_2379A2040(&qword_256828F00, &qword_256828D78, (uint64_t (*)(void))sub_237A44788, MEMORY[0x24BDECC38]);
}

unint64_t sub_237A44788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828F08;
  if (!qword_256828F08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828D90);
    v2[0] = sub_237A4480C();
    v2[1] = sub_2378B70D4(&qword_256824DC0, &qword_256824DC8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828F08);
  }
  return result;
}

unint64_t sub_237A4480C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828F10;
  if (!qword_256828F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828D88);
    v2[0] = sub_2379A2040(&qword_256828F18, &qword_256820B90, (uint64_t (*)(void))sub_237A448B0, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_2378B70D4(&qword_256828F30, &qword_256828DA8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828F10);
  }
  return result;
}

unint64_t sub_237A448B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828F20;
  if (!qword_256828F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820B88);
    v2[0] = sub_2378B70D4(&qword_256828F28, &qword_256828D80, MEMORY[0x24BDF4498]);
    v2[1] = sub_2378B70D4(&qword_2568288B8, &qword_2568288C0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828F20);
  }
  return result;
}

unint64_t sub_237A44950()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256828F38;
  if (!qword_256828F38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828F40);
    v2 = sub_2379A2040(&qword_256828F48, qword_256828E10, sub_237A449D4, MEMORY[0x24BDECC60]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256828F38);
  }
  return result;
}

uint64_t sub_237A449D4()
{
  return sub_2379A2040(&qword_256828F50, &qword_256820BA0, (uint64_t (*)(void))sub_237A449F8, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_237A449F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828F58;
  if (!qword_256828F58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820B98);
    v2[0] = sub_237A44A7C();
    v2[1] = sub_23786FAA0(&qword_256828F80, type metadata accessor for NotificationIconStyle, (uint64_t)&unk_237AA8108);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828F58);
  }
  return result;
}

unint64_t sub_237A44A7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828F60;
  if (!qword_256828F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828E08);
    v2[0] = sub_237A44B00();
    v2[1] = sub_2378B70D4(&qword_256828F78, &qword_256828DF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828F60);
  }
  return result;
}

unint64_t sub_237A44B00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256828F68;
  if (!qword_256828F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828F70);
    v2 = sub_2378B70D4(&qword_2568242B0, &qword_2568242B8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256828F68);
  }
  return result;
}

uint64_t sub_237A44B84()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237A44BA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828FA8;
  if (!qword_256828FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828FA0);
    v2[0] = sub_237A44C24();
    v2[1] = sub_2378B70D4(&qword_256824DD0, &qword_256824DD8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828FA8);
  }
  return result;
}

unint64_t sub_237A44C24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828FB0;
  if (!qword_256828FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828F90);
    v2[0] = sub_237A44CA8();
    v2[1] = sub_2378B70D4(&qword_256824DC0, &qword_256824DC8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828FB0);
  }
  return result;
}

unint64_t sub_237A44CA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256828FB8;
  if (!qword_256828FB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256828F88);
    v2[0] = sub_2378B70D4((unint64_t *)&unk_256828FC0, &qword_256828F98, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2378B70D4(&qword_256828F78, &qword_256828DF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256828FB8);
  }
  return result;
}

uint64_t sub_237A44D44(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

Swift::Void __swiftcall SetNeedsFocusUpdateAction.callAsFunction()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];
  _BYTE v14[8];

  v1 = sub_237A87578();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A87590();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799DB9C();
  v9 = (void *)sub_237A87D70();
  sub_2379B15E0(v0, (uint64_t)v14);
  v10 = swift_allocObject();
  sub_237971580((uint64_t)v14, v10 + 16);
  aBlock[4] = sub_237A44FE0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_237A44D44;
  aBlock[3] = &block_descriptor_3;
  v11 = _Block_copy(aBlock);
  swift_release();
  sub_237A87584();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23799DBF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213F8);
  sub_23790C1F0();
  sub_237A87E9C();
  MEMORY[0x23B81E9DC](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SetNeedsFocusUpdateAction.init(focusEnvironment:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void *sub_237A44F7C()
{
  void *result;

  result = (void *)MEMORY[0x23B81FC48]();
  if (result)
  {
    objc_msgSend(result, sel_setNeedsFocusUpdate);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_237A44FBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void *sub_237A44FE0()
{
  return sub_237A44F7C();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_237A45000()
{
  swift_unknownObjectWeakInit();
  return swift_unknownObjectWeakAssign();
}

uint64_t static SetNeedsFocusUpdateKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_25681E4E8 != -1)
    swift_once();
  return sub_2379B15E0((uint64_t)&unk_256828FD0, a1);
}

uint64_t sub_237A45074@<X0>(uint64_t a1@<X8>)
{
  if (qword_25681E4E8 != -1)
    swift_once();
  return sub_2379B15E0((uint64_t)&unk_256828FD0, a1);
}

uint64_t EnvironmentValues.setNeedsFocusUpdate.getter()
{
  sub_2379B161C();
  return sub_237A86B88();
}

uint64_t EnvironmentValues.setNeedsFocusUpdate.setter(uint64_t a1)
{
  _BYTE v3[8];

  sub_2379B15E0(a1, (uint64_t)v3);
  sub_2379B161C();
  sub_237A86B94();
  return sub_2379B11E4(a1);
}

void (*EnvironmentValues.setNeedsFocusUpdate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v3[4] = sub_2379B161C();
  sub_237A86B88();
  return sub_237A451AC;
}

void sub_237A451AC(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)*a1;
  v3 = *a1 + 8;
  if ((a2 & 1) != 0)
  {
    sub_2379B15E0(*a1, v3);
    sub_2379B15E0(v3, (uint64_t)v2 + 16);
    sub_237A86B94();
    sub_2379B11E4(v3);
  }
  else
  {
    sub_2379B15E0(*a1, v3);
    sub_237A86B94();
  }
  sub_2379B11E4((uint64_t)v2);
  free(v2);
}

ValueMetadata *type metadata accessor for SetNeedsFocusUpdateAction()
{
  return &type metadata for SetNeedsFocusUpdateAction;
}

ValueMetadata *type metadata accessor for SetNeedsFocusUpdateKey()
{
  return &type metadata for SetNeedsFocusUpdateKey;
}

CarPlayAssetUI::LocalNotificationState __swiftcall LocalNotificationState.init(id:isDismissible:on:)(Swift::String id, Swift::Bool isDismissible, Swift::Bool on)
{
  uint64_t v3;
  CarPlayAssetUI::LocalNotificationState result;

  *(Swift::String *)v3 = id;
  *(_BYTE *)(v3 + 16) = isDismissible;
  *(_BYTE *)(v3 + 17) = on;
  result.id = id;
  result.isDismissible = isDismissible;
  return result;
}

uint64_t LocalNotificationState.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalNotificationState.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LocalNotificationState.id.modify())()
{
  return nullsub_1;
}

uint64_t LocalNotificationState.isDismissible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t LocalNotificationState.isDismissible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*LocalNotificationState.isDismissible.modify())()
{
  return nullsub_1;
}

uint64_t LocalNotificationState.on.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t LocalNotificationState.on.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*LocalNotificationState.on.modify())()
{
  return nullsub_1;
}

Swift::Double_optional __swiftcall LocalNotificationState.doubleValue()()
{
  Swift::Bool v0;
  Swift::Double_optional result;

  v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t _s14CarPlayAssetUI22LocalNotificationStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v4)
      return 0;
    return v3 ^ v5 ^ 1u;
  }
  v7 = sub_237A8840C();
  result = 0;
  if ((v7 & 1) != 0 && ((v2 ^ v4) & 1) == 0)
    return v3 ^ v5 ^ 1u;
  return result;
}

uint64_t sub_237A453F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalNotificationState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalNotificationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalNotificationState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalNotificationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalNotificationState()
{
  return &type metadata for LocalNotificationState;
}

id WidgetHostViewController.__allocating_init(widget:metrics:widgetConfigurationIdentifier:identifier:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  objc_class *v7;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  objc_super v18;

  v7 = v6;
  v13 = (char *)objc_allocWithZone(v7);
  v14 = &v13[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier];
  *(_QWORD *)v14 = a5;
  *((_QWORD *)v14 + 1) = a6;
  if (a4)
  {
    v15 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v13;
  v18.super_class = v7;
  v16 = objc_msgSendSuper2(&v18, sel_initWithWidget_metrics_widgetConfigurationIdentifier_, a1, a2, v15);

  return v16;
}

id WidgetHostViewController.init(widget:metrics:widgetConfigurationIdentifier:identifier:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v9;
  void *v10;
  id v11;
  objc_super v13;

  v9 = &v6[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier];
  *(_QWORD *)v9 = a5;
  *((_QWORD *)v9 + 1) = a6;
  if (a4)
  {
    v10 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for WidgetHostViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithWidget_metrics_widgetConfigurationIdentifier_, a1, a2, v10);

  return v11;
}

uint64_t type metadata accessor for WidgetHostViewController()
{
  return objc_opt_self();
}

id WidgetHostViewController.__allocating_init(widget:metrics:widgetConfigurationIdentifier:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  void *v8;
  id v9;

  v5 = v4;
  if (a4)
  {
    v8 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(objc_allocWithZone(v5), sel_initWithWidget_metrics_widgetConfigurationIdentifier_, a1, a2, v8);

  return v9;
}

void WidgetHostViewController.init(widget:metrics:widgetConfigurationIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WidgetHostViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetHostViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for WidgetHostViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetHostViewController.__allocating_init(widget:metrics:widgetConfigurationIdentifier:identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id WidgetManager.metrics.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 184), sel_metricsForFamily_, *(_QWORD *)(v0 + 64));
}

id WidgetManager.configuredWidgetDescriptor(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(unsigned __int8 *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v60 = *(_QWORD *)a1;
  v61 = v3;
  v59 = v3;
  v62 = v5;
  v63 = v6;
  v58 = v7;
  v64 = v7;
  v65 = v8;
  v66 = v9;
  v67 = v10;
  v57 = v11;
  v68 = v11;
  v69 = v12;
  v70 = v13;
  v14 = WidgetManager.chsWidget(for:)(&v60);
  v15 = objc_msgSend(*(id *)(v2 + 48), sel_extensions);
  sub_2378BFF5C(0, &qword_256829030);
  sub_2378BFF94(&qword_256829038, &qword_256829030);
  v16 = sub_237A87BE4();

  v17 = v14;
  sub_237A4A624(v16, v17);
  v19 = v18;
  swift_bridgeObjectRelease();

  if (!v19)
    goto LABEL_9;
  v20 = v19;
  v21 = objc_msgSend(v20, sel_orderedDescriptors);
  if (!v21)
  {

    goto LABEL_9;
  }
  v22 = v21;
  sub_2378BFF5C(0, &qword_256829040);
  v23 = sub_237A87A94();

  v24 = v17;
  v25 = sub_237A4A9BC(v23, (uint64_t)v24);

  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_9:
    if (qword_25681E2F8 != -1)
      swift_once();
    v42 = sub_237A86678();
    __swift_project_value_buffer(v42, (uint64_t)qword_256870658);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v43 = sub_237A86660();
    v44 = sub_237A87D58();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v60 = v46;
      *(_DWORD *)v45 = 136315138;
      swift_bridgeObjectRetain();
      sub_2378FD9C8(v58, v8, &v60);
      sub_237A87E24();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_237866000, v43, v44, "No descriptor found for: %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v46, -1, -1);
      MEMORY[0x23B81FB7C](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    return 0;
  }
  v26 = objc_msgSend(*(id *)(v2 + 184), sel_metricsForFamily_, *(_QWORD *)(v2 + 64));
  if (!v26)
  {
    if (qword_25681E2F8 != -1)
      swift_once();
    v48 = sub_237A86678();
    __swift_project_value_buffer(v48, (uint64_t)qword_256870658);
    swift_retain_n();
    v49 = sub_237A86660();
    v50 = sub_237A87D58();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v60 = v52;
      *(_DWORD *)v51 = 136315138;
      v53 = (id)NSStringFromWidgetFamily();
      v54 = sub_237A87818();
      v56 = v55;

      sub_2378FD9C8(v54, v56, &v60);
      sub_237A87E24();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_237866000, v49, v50, "No valid metrics found for: %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v52, -1, -1);
      MEMORY[0x23B81FB7C](v51, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  v27 = v26;
  v60 = v4;
  v61 = v59;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  v29 = v60;
  v28 = v61;
  v30 = (id)NSStringFromWidgetFamily();
  sub_237A87818();

  v60 = v29;
  v61 = v28;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = objc_allocWithZone(MEMORY[0x24BE169E0]);
  v32 = v24;
  v33 = v27;
  v34 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v31, sel_initWithUniqueIdentifier_widget_metrics_, v34, v32, v33);

  objc_msgSend(v35, sel_setSuggestion_, 0);
  objc_msgSend(v35, sel_setSystemConfigured_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829048);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_237AA82C0;
  *(_QWORD *)(v36 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16AA0]), sel_initWithRenderingMode_backgroundViewPolicy_, 1, 1);
  *(_QWORD *)(v36 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16AA0]), sel_initWithRenderingMode_backgroundViewPolicy_, 0, 1);
  v60 = v36;
  sub_237A87AAC();
  sub_2378BFF5C(0, (unint64_t *)&unk_256829050);
  v37 = (void *)sub_237A87A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setSupportedRenderSchemes_, v37);

  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16A40]), sel_initWithScale_colorGamut_, 0, 3.0);
  objc_msgSend(v35, sel_setDisplayProperties_, v38);

  if (v57)
  {
    v39 = (void *)objc_opt_self();
    v40 = (void *)sub_237A877F4();
    v41 = objc_msgSend(v39, sel_rateLimitedWithPolicyIdentifier_, v40);

    objc_msgSend(v35, sel_setRefreshStrategy_, v41);
    swift_unknownObjectRelease();
  }

  return v35;
}

id WidgetManager.chsWidget(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v3 = *a1;
  v2 = a1[1];
  v15 = *(_QWORD *)(v1 + 64);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2378D2DB8(v3, v2);
    if ((v7 & 1) != 0)
      v8 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v6);
    else
      v8 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  swift_endAccess();
  v9 = objc_allocWithZone(MEMORY[0x24BE16A18]);
  v10 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v9, sel_initWithExtensionBundleIdentifier_containerBundleIdentifier_kind_family_intent_, v10, v11, v12, v15, v8);

  return v13;
}

void WidgetManager.setWidgetHostViewController(_:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + 192), sel_addObject_, a1);
  sub_237A47918();
}

uint64_t sub_237A461F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_237A87B84();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_237A87B78();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_237A4BCA0(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_237A87B54();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t WidgetManager.__allocating_init(identifier:widgetRegistry:widgets:widgetFamily:scaleFactor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  swift_allocObject();
  v10 = sub_237A4B1C0(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

uint64_t WidgetManager.init(identifier:widgetRegistry:widgets:widgetFamily:scaleFactor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = sub_237A4B1C0(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

uint64_t WidgetManager.deinit()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(*(id *)(v0 + 48), sel_unregisterObserver_, *(_QWORD *)(v0 + 56));
  swift_beginAccess();
  *(_QWORD *)(v0 + 176) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 16);
  if (v1 && (objc_msgSend(v1, sel_deactivate), (v2 = *(void **)(v0 + 16)) != 0))
  {
    objc_msgSend(v2, sel_invalidate);
    v3 = *(void **)(v0 + 16);
  }
  else
  {
    v3 = 0;
  }

  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237A4B73C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WidgetManager.__deallocating_deinit()
{
  WidgetManager.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall WidgetManager.setActiveWidget(activeWidget:)(CarPlayAssetUI::AvocadoWidgetInfo_optional *activeWidget)
{
  os_log_t v1;
  uint64_t v3;
  uint64_t v4;
  objc_class *object;
  uint64_t isa;
  uint64_t countAndFlagsBits;
  objc_class *v8;
  uint64_t v9;
  objc_class *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_t v15;
  Class v16;
  uint64_t v17;
  uint64_t v18;
  Class v19;
  Class v20;
  Class v21;
  uint64_t v22;
  Class v23;
  uint64_t v24;
  Class v25;
  Class v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  objc_class *v37;
  uint64_t v38;
  Class v39;
  objc_class *v40;
  uint64_t v41;
  NSObject *v42;
  _BOOL4 v43;
  uint64_t v44;
  unint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  os_log_t v64;
  uint8_t *v65;
  uint8_t *v66;
  objc_class *v67;
  objc_class *v68;
  uint64_t v69;
  uint64_t v70;
  objc_class *v71;
  objc_class *v72;
  char v73;
  objc_class *v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  objc_class *v78;
  NSObject *v79;
  int v80;
  uint64_t v81;
  uint8_t *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  os_log_t v92;
  uint64_t v93;
  _OWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint8_t *v103;
  uint8_t *v104;
  os_log_t v105;
  uint64_t v106;
  char *v107;
  _OWORD *v108;
  uint64_t v109;
  os_log_t v110;
  Class v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  Class v115;
  objc_class *v116;
  objc_class *v117;
  Class v118;
  objc_class *v119;
  Class v120;
  uint64_t v121;
  uint64_t v122;
  Class v123;
  uint64_t v124;
  Class v125;
  uint64_t v126;
  Class v127;
  char v128;
  uint64_t v129;
  Class v130;
  uint64_t v131[2];
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  Class v135;
  uint64_t v136;
  Class v137;
  uint64_t v138;
  Class v139;
  uint64_t v140;
  Class v141;
  Class v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  Class v146;
  uint64_t v147;
  Class v148;
  objc_class *v149;
  Class v150;
  objc_class *v151;
  uint64_t v152;
  Class v153;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC0);
  MEMORY[0x24BDAC7A8](v3);
  v107 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  object = (objc_class *)activeWidget->value.kind._object;
  v110 = v1;
  if (object)
  {
    isa = (uint64_t)v1[5].isa;
    countAndFlagsBits = activeWidget->value.carplayIdentifier.value._countAndFlagsBits;
    v8 = (objc_class *)activeWidget->value.carplayIdentifier.value._object;
    v10 = (objc_class *)activeWidget->value.containerBundleIdentifier._object;
    v9 = *(_QWORD *)&activeWidget->value.keepAlive;
    v11 = (objc_class *)activeWidget->value.extensionBundleIdentifier._object;
    v12 = activeWidget->value.containerBundleIdentifier._countAndFlagsBits;
    v13 = activeWidget->value.extensionBundleIdentifier._countAndFlagsBits;
    v14 = activeWidget->value.kind._countAndFlagsBits;
    v122 = v14;
    v123 = object;
    v124 = v13;
    v125 = v11;
    v120 = v11;
    v121 = v13;
    v126 = v12;
    v127 = v10;
    v128 = v9 & 1;
    v129 = countAndFlagsBits;
    v130 = v8;
    v119 = (objc_class *)isa;
    swift_retain();
    sub_237A4B92C(v14, (uint64_t)object);
    sub_237870C10(&v122, (uint64_t)&v132);
    v1 = v110;
    sub_237A4B97C(v14, (uint64_t)object);
    swift_release();
    v112 = v134;
    v113 = v132;
    v119 = (objc_class *)v133;
    v120 = v135;
    v111 = v137;
    v114 = v136;
    v115 = v139;
    v116 = (objc_class *)v138;
    v117 = (objc_class *)v140;
    v121 = (uint64_t)v141;
    v118 = v142;
  }
  else
  {
    v112 = 0;
    v113 = 0;
    v119 = 0;
    v120 = 0;
    v114 = 0;
    v115 = 0;
    v111 = 0;
    v116 = 0;
    v117 = 0;
    v121 = 0;
    v118 = 0;
  }
  v17 = (uint64_t)v1[11].isa;
  v16 = v1[12].isa;
  v15 = v1 + 11;
  v18 = (uint64_t)v1[13].isa;
  v19 = v1[14].isa;
  v20 = v1[15].isa;
  v21 = v1[16].isa;
  v22 = (uint64_t)v1[17].isa;
  v23 = v1[18].isa;
  v24 = (uint64_t)v1[19].isa;
  v25 = v1[20].isa;
  v26 = v1[21].isa;
  v108 = v15;
  if (!v16)
  {
    v30 = (uint64_t)v119;
    if (!v119)
      return;
    goto LABEL_14;
  }
  if (!v119)
  {
    v109 = v24;
    v106 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v106;
    v24 = v109;
    v30 = (uint64_t)v119;
LABEL_14:
    v132 = v17;
    v133 = (unint64_t)v16;
    v134 = v18;
    v135 = v19;
    v136 = (uint64_t)v20;
    v137 = v21;
    v138 = v22;
    v139 = v23;
    v140 = v24;
    v141 = v25;
    v142 = v26;
    v143 = v113;
    v144 = v30;
    v145 = v112;
    v146 = v120;
    v147 = v114;
    v148 = v111;
    v149 = v116;
    v150 = v115;
    v151 = v117;
    v152 = v121;
    v153 = v118;
    sub_237A4B798(v113, v30);
    sub_237A4B7F4(&v132);
    goto LABEL_15;
  }
  if (v17 == v113 && v16 == v119
    || (v27 = v24, v28 = v22, v29 = sub_237A8840C(), v22 = v28, LOBYTE(v24) = v27, (v29 & 1) != 0))
  {
    v132 = v18;
    v133 = (unint64_t)v19;
    v134 = (uint64_t)v20;
    v135 = v21;
    v136 = v22;
    v137 = v23;
    LOBYTE(v138) = v24 & 1;
    v139 = v25;
    v140 = (uint64_t)v26;
    v122 = v112;
    v123 = v120;
    v124 = v114;
    v125 = v111;
    v126 = (uint64_t)v116;
    v127 = v115;
    v128 = (char)v117;
    v129 = v121;
    v130 = v118;
    if ((_s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v132, (uint64_t)&v122) & 1) != 0)
    {
      sub_237A4B73C(v113, (uint64_t)v119);
      return;
    }
  }
LABEL_15:
  if (qword_25681E2F8 != -1)
    swift_once();
  v31 = sub_237A86678();
  v109 = __swift_project_value_buffer(v31, (uint64_t)qword_256870658);
  v32 = v118;
  v33 = v121;
  v34 = v113;
  v36 = (uint64_t)v119;
  v35 = v120;
  v38 = v114;
  v37 = v115;
  v39 = v111;
  v40 = v116;
  sub_237A4B798(v113, (uint64_t)v119);
  v118 = v32;
  v121 = v33;
  v41 = v112;
  v113 = v34;
  v119 = (objc_class *)v36;
  v120 = v35;
  v111 = v39;
  v116 = v40;
  sub_237A4B798(v34, v36);
  v42 = sub_237A86660();
  LODWORD(v106) = sub_237A87D34();
  v43 = os_log_type_enabled(v42, (os_log_type_t)v106);
  v114 = v38;
  v115 = v37;
  if (v43)
  {
    v105 = v42;
    v44 = v38;
    v45 = (unint64_t)v111;
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v122 = v47;
    *(_DWORD *)v46 = 136315138;
    v104 = (uint8_t *)v47;
    if (v119)
    {
      swift_bridgeObjectRetain();
      v48 = v45;
    }
    else
    {
      v44 = 0xD00000000000001CLL;
      v132 = 0;
      v133 = 0xE000000000000000;
      sub_237A87F44();
      swift_bridgeObjectRelease();
      v48 = 0x8000000237AB2580;
    }
    v132 = sub_2378FD9C8(v44, v48, &v122);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    v103 = v46;
    v60 = v113;
    v61 = (uint64_t)v119;
    v62 = v45;
    sub_237A4B73C(v113, (uint64_t)v119);
    v58 = v112;
    v56 = (objc_class *)v114;
    sub_237A4B73C(v60, v61);
    v57 = v60;
    v63 = v61;
    v64 = v105;
    v65 = v103;
    _os_log_impl(&dword_237866000, v105, (os_log_type_t)v106, "Setting active widget: %s", v103, 0xCu);
    v66 = v104;
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v66, -1, -1);
    MEMORY[0x23B81FB7C](v65, -1, -1);

    v53 = v63;
    v52 = v110;
    v59 = v62;
    if (!v53)
    {
LABEL_30:
      swift_retain();
      sub_237A4B798(v57, v53);
      swift_retain();
      v79 = sub_237A86660();
      v80 = sub_237A87D40();
      if (os_log_type_enabled(v79, (os_log_type_t)v80))
      {
        LODWORD(v109) = v80;
        v81 = v114;
        v110 = v79;
        v82 = (uint8_t *)swift_slowAlloc();
        v106 = swift_slowAlloc();
        v131[0] = v106;
        *(_DWORD *)v82 = 136315394;
        if (v119)
        {
          swift_bridgeObjectRetain();
          v83 = v59;
        }
        else
        {
          v81 = 0xD00000000000001CLL;
          v132 = 0;
          v133 = 0xE000000000000000;
          sub_237A87F44();
          swift_bridgeObjectRelease();
          v83 = 0x8000000237AB2580;
        }
        v132 = sub_2378FD9C8(v81, v83, v131);
        v105 = (os_log_t)&v133;
        sub_237A87E24();
        swift_bridgeObjectRelease();
        v104 = v82;
        v86 = v113;
        v87 = (uint64_t)v119;
        sub_237A4B73C(v113, (uint64_t)v119);
        sub_237A4B73C(v86, v87);
        v88 = v104;
        *((_WORD *)v104 + 6) = 2080;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v89 = sub_237A87674();
        v91 = v90;
        swift_bridgeObjectRelease();
        v132 = sub_2378FD9C8(v89, v91, v131);
        sub_237A87E24();
        swift_release_n();
        swift_bridgeObjectRelease();
        v92 = v110;
        _os_log_impl(&dword_237866000, v110, (os_log_type_t)v109, "ActiveWidget (%s) was not found in current list: %s", v88, 0x16u);
        v93 = v106;
        swift_arrayDestroy();
        MEMORY[0x23B81FB7C](v93, -1, -1);
        MEMORY[0x23B81FB7C](v88, -1, -1);

      }
      else
      {
        v84 = v113;
        v85 = (uint64_t)v119;
        v112 = v58;
        sub_237A4B73C(v113, (uint64_t)v119);
        sub_237A4B73C(v84, v85);

        swift_release_n();
      }
      v75 = (uint64_t)v52[11].isa;
      v76 = (uint64_t)v52[12].isa;
      v94 = v108;
      *v108 = 0u;
      v94[1] = 0u;
      v94[2] = 0u;
      v94[3] = 0u;
      v94[4] = 0u;
      *((_QWORD *)v94 + 10) = 0;
      goto LABEL_37;
    }
  }
  else
  {
    v49 = v113;
    v50 = (uint64_t)v119;
    v51 = v111;
    sub_237A4B73C(v113, (uint64_t)v119);
    sub_237A4B73C(v49, v50);

    v52 = v110;
    v53 = v50;
    v54 = v49;
    v55 = (unint64_t)v51;
    v56 = (objc_class *)v38;
    v57 = v54;
    v58 = v41;
    v59 = v55;
    if (!v50)
      goto LABEL_30;
  }
  swift_beginAccess();
  if (!*((_QWORD *)v52[10].isa + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_29:
    swift_endAccess();
    sub_237A4B73C(v57, v53);
    goto LABEL_30;
  }
  v67 = v118;
  v68 = (objc_class *)v58;
  v69 = v57;
  v70 = v57;
  v71 = v115;
  v72 = v116;
  sub_237A4B798(v70, v53);
  swift_bridgeObjectRetain();
  sub_2378D2DB8(v69, v53);
  if ((v73 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v57 = v69;
    v59 = (unint64_t)v111;
    v58 = (uint64_t)v68;
    goto LABEL_29;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v74 = v120;
  sub_237A4B73C(v69, v53);
  v75 = (uint64_t)v52[11].isa;
  v76 = (uint64_t)v52[12].isa;
  v52[11].isa = (Class)v69;
  v52[12].isa = (Class)v53;
  v52[13].isa = v68;
  v52[14].isa = v74;
  v77 = v111;
  v52[15].isa = v56;
  v52[16].isa = v77;
  v52[17].isa = v72;
  v52[18].isa = v71;
  v78 = (objc_class *)v121;
  v52[19].isa = v117;
  v52[20].isa = v78;
  v52[21].isa = v67;
LABEL_37:
  sub_237A4B73C(v75, v76);
  sub_237A47260();
  swift_beginAccess();
  swift_retain();
  v95 = swift_bridgeObjectRetain();
  v96 = sub_237A4AE50(v95, (uint64_t)v52);
  swift_release();
  if (*(_QWORD *)(v96 + 16))
  {
    v97 = sub_237A87B84();
    v98 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v107, 1, 1, v97);
    sub_237A87B6C();
    swift_retain();
    v99 = sub_237A87B60();
    v100 = (_QWORD *)swift_allocObject();
    v101 = MEMORY[0x24BEE6930];
    v100[2] = v99;
    v100[3] = v101;
    v100[4] = v96;
    v100[5] = v52;
    sub_237A461F0(v98, (uint64_t)&unk_256829068, (uint64_t)v100);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_237A47260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[4];

  v1 = (uint64_t)v0;
  if (qword_25681E2F8 != -1)
    goto LABEL_47;
  while (2)
  {
    v2 = sub_237A86678();
    __swift_project_value_buffer(v2, (uint64_t)qword_256870658);
    swift_retain_n();
    v3 = sub_237A86660();
    v4 = sub_237A87D34();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v65[0] = v6;
      *(_DWORD *)v5 = 136315394;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v7 = sub_237A87674();
      v9 = v8;
      swift_bridgeObjectRelease();
      v54 = sub_2378FD9C8(v7, v9, v65);
      sub_237A87E24();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      if (*(_QWORD *)(v1 + 96))
      {
        v11 = *(_QWORD *)(v1 + 120);
        v10 = *(_QWORD *)(v1 + 128);
        swift_bridgeObjectRetain();
      }
      else
      {
        v54 = 0;
        v55 = 0xE000000000000000;
        sub_237A87F44();
        swift_bridgeObjectRelease();
        v10 = 0x8000000237AB2580;
        v11 = 0xD00000000000001CLL;
      }
      v54 = sub_2378FD9C8(v11, v10, v65);
      sub_237A87E24();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_237866000, v3, v4, "Setting up host with widgets: %s, active widget: %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v6, -1, -1);
      MEMORY[0x23B81FB7C](v5, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    v12 = *(_QWORD *)(v1 + 80);
    if (!*(_QWORD *)(v12 + 16))
    {
      v38 = *(void **)(v1 + 16);
      if (v38 && (objc_msgSend(v38, sel_deactivate), (v39 = *(void **)(v1 + 16)) != 0))
      {
        objc_msgSend(v39, sel_invalidate);
        v35 = *(id *)(v1 + 16);
      }
      else
      {
        v35 = 0;
      }
      *(_QWORD *)(v1 + 16) = 0;
      goto LABEL_44;
    }
    v13 = (_QWORD *)v1;
    v52 = v12 + 64;
    v14 = 1 << *(_BYTE *)(v12 + 32);
    v15 = -1;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    v16 = v15 & *(_QWORD *)(v12 + 64);
    v53 = (unint64_t)(v14 + 63) >> 6;
    swift_bridgeObjectRetain();
    v1 = 0;
    while (1)
    {
      if (v16)
      {
        v17 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v18 = v17 | (v1 << 6);
        goto LABEL_13;
      }
      v31 = v1 + 1;
      if (__OFADD__(v1, 1))
      {
        __break(1u);
        goto LABEL_46;
      }
      if (v31 >= v53)
        goto LABEL_31;
      v32 = *(_QWORD *)(v52 + 8 * v31);
      ++v1;
      if (!v32)
      {
        v1 = v31 + 1;
        if (v31 + 1 >= v53)
          goto LABEL_31;
        v32 = *(_QWORD *)(v52 + 8 * v1);
        if (!v32)
        {
          v1 = v31 + 2;
          if (v31 + 2 >= v53)
            goto LABEL_31;
          v32 = *(_QWORD *)(v52 + 8 * v1);
          if (!v32)
          {
            v1 = v31 + 3;
            if (v31 + 3 >= v53)
              goto LABEL_31;
            v32 = *(_QWORD *)(v52 + 8 * v1);
            if (!v32)
              break;
          }
        }
      }
LABEL_30:
      v16 = (v32 - 1) & v32;
      v18 = __clz(__rbit64(v32)) + (v1 << 6);
LABEL_13:
      v19 = *(_QWORD *)(v12 + 56) + 88 * v18;
      v20 = *(_QWORD *)(v19 + 8);
      v21 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      v23 = *(_QWORD *)(v19 + 32);
      v24 = *(_QWORD *)(v19 + 40);
      v25 = *(_QWORD *)(v19 + 48);
      v26 = *(_QWORD *)(v19 + 56);
      v27 = *(_BYTE *)(v19 + 64);
      v28 = *(_QWORD *)(v19 + 72);
      v29 = *(_QWORD *)(v19 + 80);
      v54 = *(_QWORD *)v19;
      v55 = v20;
      v56 = v21;
      v57 = v22;
      v58 = v23;
      v59 = v24;
      v60 = v25;
      v61 = v26;
      v62 = v27;
      v63 = v28;
      v64 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = sub_237A47DFC((uint64_t)&v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v33 = v31 + 4;
    if (v33 < v53)
    {
      v32 = *(_QWORD *)(v52 + 8 * v33);
      if (!v32)
      {
        while (1)
        {
          v1 = v33 + 1;
          if (__OFADD__(v33, 1))
            break;
          if (v1 >= v53)
            goto LABEL_31;
          v32 = *(_QWORD *)(v52 + 8 * v1);
          ++v33;
          if (v32)
            goto LABEL_30;
        }
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once();
        continue;
      }
      v1 = v33;
      goto LABEL_30;
    }
    break;
  }
LABEL_31:
  swift_release();
  v34 = v13;
  v35 = sub_237A48264(v13);
  v36 = (void *)v13[2];
  if (v36)
  {
    objc_msgSend(v36, sel_setConfiguration_, v35);
    v37 = (void *)v13[2];
    if (!v37)
      goto LABEL_44;
    goto LABEL_43;
  }
  swift_retain();
  v40 = sub_237A86660();
  v41 = sub_237A87D34();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v54 = v43;
    *(_DWORD *)v42 = 136315138;
    v34 = v13;
    v44 = v13[3];
    v45 = v13[4];
    swift_bridgeObjectRetain();
    sub_2378FD9C8(v44, v45, &v54);
    sub_237A87E24();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_237866000, v40, v41, "Creating host with identifier: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v43, -1, -1);
    MEMORY[0x23B81FB7C](v42, -1, -1);

  }
  else
  {

    swift_release();
  }
  v46 = objc_allocWithZone(MEMORY[0x24BE16A68]);
  swift_bridgeObjectRetain();
  v47 = v35;
  v48 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(v46, sel_initWithIdentifier_configuration_active_, v48, v47, 1);

  v50 = (void *)v34[2];
  v34[2] = v49;

  v37 = (void *)v34[2];
  if (v37)
  {
LABEL_43:
    v51 = v37;
    objc_msgSend(v51, sel_activate);

  }
LABEL_44:

}

void sub_237A47918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[8];
  char v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  if (qword_25681E2F8 != -1)
    swift_once();
  v2 = sub_237A86678();
  __swift_project_value_buffer(v2, (uint64_t)qword_256870658);
  swift_retain_n();
  v3 = sub_237A86660();
  v4 = sub_237A87D34();
  v37 = v1;
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v47[0] = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(id *)(v1 + 192);
    v8 = objc_msgSend(v7, sel_description);
    v9 = sub_237A87818();
    v11 = v10;

    sub_2378FD9C8(v9, v11, v47);
    sub_237A87E24();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_237866000, v3, v4, "Updating widget intents for view controllers: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v6, -1, -1);
    MEMORY[0x23B81FB7C](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v12 = objc_msgSend(*(id *)(v1 + 192), sel_allObjects);
  type metadata accessor for WidgetHostViewController();
  v13 = sub_237A87A94();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_237A880C4();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_8;
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
    goto LABEL_25;
LABEL_8:
  if (v14 >= 1)
  {
    v15 = 0;
    v16 = (uint64_t *)(v37 + 80);
    v17 = v13 & 0xC000000000000001;
    v39 = v14;
    v40 = v13;
    v38 = v13 & 0xC000000000000001;
    while (1)
    {
      if (v17)
        v18 = (char *)MEMORY[0x23B81EBEC](v15, v13);
      else
        v18 = (char *)*(id *)(v13 + 8 * v15 + 32);
      v19 = v18;
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier];
      v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier + 8];
      swift_beginAccess();
      v22 = *v16;
      if (*(_QWORD *)(*v16 + 16))
      {
        swift_bridgeObjectRetain();
        v23 = sub_2378D2DB8(v20, v21);
        if ((v24 & 1) != 0)
        {
          v25 = *(_QWORD *)(v22 + 56) + 88 * v23;
          v26 = *(_QWORD *)(v25 + 8);
          v27 = *(_QWORD *)(v25 + 24);
          v45 = *(_QWORD *)(v25 + 16);
          v46 = *(_QWORD *)v25;
          v28 = *(_QWORD *)(v25 + 40);
          v29 = *(_QWORD *)(v25 + 56);
          v43 = *(_QWORD *)(v25 + 48);
          v44 = *(_QWORD *)(v25 + 32);
          v42 = *(_BYTE *)(v25 + 64);
          v30 = *(_QWORD *)(v25 + 80);
          v41 = *(_QWORD *)(v25 + 72);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v31 = objc_msgSend(v19, sel_widget);
          v32 = objc_msgSend(v31, sel_intent);

          if (v32)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v47[0] = v46;
            v47[1] = v26;
            v47[2] = v45;
            v47[3] = v27;
            v47[4] = v44;
            v47[5] = v28;
            v47[6] = v43;
            v47[7] = v29;
            v48 = v42;
            v49 = v41;
            v50 = v30;
            v33 = sub_237A47DFC((uint64_t)v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v33)
            {
              v34 = v19;
              v35 = objc_msgSend(v34, sel_widget);
              v36 = objc_msgSend(v35, sel_widgetByReplacingIntent_, v33);

              objc_msgSend(v34, sel_setWidget_, v36);
            }
            else
            {

            }
          }
          v14 = v39;
          v13 = v40;
          v17 = v38;
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();

LABEL_12:
      if (v14 == ++v15)
        goto LABEL_25;
    }
  }
  __break(1u);
}

id sub_237A47DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v41 = *(_QWORD *)a1;
  v42 = v2;
  v38 = v2;
  v39 = v7;
  v43 = v5;
  v44 = v4;
  v36 = v4;
  v37 = v6;
  v45 = v7;
  v46 = v6;
  v47 = v9;
  v48 = v8;
  v33 = v12;
  v35 = v8;
  v49 = v10;
  v50 = v12;
  v51 = v11;
  v40 = v11;
  v13 = WidgetManager.chsWidget(for:)(&v41);
  v14 = objc_msgSend(*(id *)(v1 + 48), sel_extensions);
  sub_2378BFF5C(0, &qword_256829030);
  sub_2378BFF94(&qword_256829038, &qword_256829030);
  v15 = sub_237A87BE4();

  v16 = v13;
  sub_237A4A624(v15, v16);
  v18 = v17;
  swift_bridgeObjectRelease();

  if (!v18)
    goto LABEL_15;
  v19 = v18;
  v20 = objc_msgSend(v19, sel_orderedDescriptors);
  if (!v20)
  {

    return 0;
  }
  v21 = v20;
  sub_2378BFF5C(0, &qword_256829040);
  v22 = sub_237A87A94();

  v16 = v16;
  v23 = sub_237A4A9BC(v22, (uint64_t)v16);

  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_15;
  v24 = objc_msgSend(v23, sel_intentType);
  if (!v24
    || (v24,
        v25 = objc_msgSend(v16, sel_intent),
        v25,
        v25))
  {

LABEL_7:
    return 0;
  }
  v41 = v3;
  v42 = v38;
  v43 = v5;
  v44 = v36;
  v45 = v39;
  v46 = v37;
  v47 = v9;
  v48 = v35;
  v49 = v10;
  v50 = v33;
  v51 = v40;
  v26 = sub_237A4927C((uint64_t)&v41);
  if (!v26)
  {
    if (qword_25681E2F8 != -1)
      swift_once();
    v28 = sub_237A86678();
    __swift_project_value_buffer(v28, (uint64_t)qword_256870658);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_237A86660();
    v30 = sub_237A87D40();
    if (!os_log_type_enabled(v29, v30))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_7;
    }
    v31 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v41 = v34;
    *(_DWORD *)v31 = 136315138;
    swift_bridgeObjectRetain();
    sub_2378FD9C8(v39, v37, &v41);
    sub_237A87E24();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_237866000, v29, v30, "No default intent was returned for: %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v34, -1, -1);
    MEMORY[0x23B81FB7C](v31, -1, -1);

LABEL_15:
    return 0;
  }
  v27 = v26;

  return v27;
}

id sub_237A48264(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t inited;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37[11];

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_2378BC7CC(v2);
  v4 = a1[12];
  v5 = a1[13];
  v6 = a1[14];
  v7 = a1[15];
  v8 = a1[16];
  v9 = a1[17];
  v10 = a1[18];
  v11 = a1[19];
  v12 = a1[20];
  v13 = a1[21];
  v37[0] = a1[11];
  v37[1] = v4;
  v34 = v37[0];
  v35 = v4;
  v37[2] = v5;
  v37[3] = v6;
  v37[4] = v7;
  v37[5] = v8;
  v37[6] = v9;
  v37[7] = v10;
  v37[8] = v11;
  v37[9] = v12;
  v37[10] = v13;
  sub_237A4B798(v37[0], v4);
  v14 = sub_237A485EC(v3, (uint64_t)v37);
  swift_bridgeObjectRelease();
  v33 = v12;
  v32 = v11;
  sub_237A4B73C(v34, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829048);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237AA82D0;
  *(_QWORD *)(v15 + 32) = v14;
  v37[0] = v15;
  sub_237A87AAC();
  v16 = (void *)a1[23];
  v17 = objc_allocWithZone(MEMORY[0x24BE169F0]);
  sub_2378BFF5C(0, &qword_2568292D8);
  v36 = v14;
  v18 = v16;
  v19 = (void *)sub_237A87A7C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithContainerDescriptors_metricsSpecification_, v19, v18, v32, v33, v13);

  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16A88]), sel_initWithMaximumRefreshes_perWindow_, 5, 1.0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237AA82D0;
  v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_237AA82D0;
  *(_QWORD *)(v23 + 32) = v21;
  v37[0] = v23;
  sub_237A87AAC();
  v24 = v37[0];
  swift_bridgeObjectRetain();
  v25 = v21;
  sub_2378BFD98(v24);
  swift_bridgeObjectRelease();
  v26 = objc_allocWithZone(MEMORY[0x24BE16A90]);
  v27 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  sub_2378BFF5C(0, (unint64_t *)&unk_2568292E0);
  sub_2378BFF94(&qword_256820178, (unint64_t *)&unk_2568292E0);
  v28 = (void *)sub_237A87BD8();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v26, sel_initWithIdentifier_rateLimits_, v27, v28);

  *(_QWORD *)(inited + 32) = v29;
  v37[0] = inited;
  sub_237A87AAC();
  sub_2378BFDBC(v37[0]);
  swift_bridgeObjectRelease();
  sub_2378BFF5C(0, (unint64_t *)&unk_2568292F0);
  sub_2378BFF94(&qword_256820170, (unint64_t *)&unk_2568292F0);
  v30 = (void *)sub_237A87BD8();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setRateLimitPolicies_, v30);

  return v20;
}

id sub_237A485EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v14;
  _QWORD v15[11];

  sub_237A4BDE4(a2, (uint64_t)v15);
  v14 = 0;
  swift_retain();
  sub_237A4BE2C(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237A4B798);
  sub_237A4AAC4(MEMORY[0x24BEE4AF8], a1, v2, &v14, (uint64_t)v15);
  sub_237A4BE2C(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237A4B73C);
  swift_release();
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v14;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v5, sel_uniqueIdentifier);
    sub_237A87818();
    v8 = v7;

  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = 0;
  }
  v9 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  sub_2378BFF5C(0, &qword_256829308);
  v10 = (void *)sub_237A87A7C();
  swift_bridgeObjectRelease();
  if (v8)
  {
    v11 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16988]), sel_initWithUniqueIdentifier_location_canAppearInSecureEnvironment_page_family_widgets_activeWidget_, v9, 0, 1, 1, v4, v10, v11);

  return v12;
}

uint64_t sub_237A487A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[7] = sub_237A87B6C();
  v5[8] = sub_237A87B60();
  v5[9] = sub_237A87B54();
  v5[10] = v6;
  return swift_task_switch();
}

uint64_t sub_237A48844()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v37;
  void **v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];

  v45[1] = *MEMORY[0x24BDAC8D0];
  v1 = v0[5];
  v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE169D8]), sel_init);
  v0[11] = v39;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v38 = (void **)(v0 + 2);
    v37 = v0;
    v3 = swift_bridgeObjectRetain() + 56;
    v40 = MEMORY[0x24BEE4B00];
    do
    {
      v7 = *(_QWORD *)(v3 - 16);
      v41 = *(_QWORD *)(v3 - 24);
      v44 = *(_QWORD *)(v3 + 8);
      v8 = *(_QWORD *)(v3 + 16);
      v42 = v3;
      v9 = qword_25681E2F8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 != -1)
        swift_once();
      v10 = sub_237A86678();
      __swift_project_value_buffer(v10, (uint64_t)qword_256870658);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_237A86660();
      v12 = sub_237A87D34();
      v43 = v2;
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        v45[0] = v14;
        *(_DWORD *)v13 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v13 + 4) = sub_2378FD9C8(v44, v8, v45);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_237866000, v11, v12, "Requesting live assertion for: %s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B81FB7C](v14, -1, -1);
        MEMORY[0x23B81FB7C](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRetain();
      v15 = (void *)sub_237A877F4();
      v16 = (void *)sub_237A877F4();
      swift_bridgeObjectRelease();
      *v38 = 0;
      v17 = objc_msgSend(v39, sel_acquireKeepAliveAssertionForExtensionBundleIdentifier_reason_error_, v15, v16, v38);

      v18 = *v38;
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v19 = v18;
        v20 = sub_237A86660();
        v21 = sub_237A87D34();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = swift_slowAlloc();
          v23 = swift_slowAlloc();
          v45[0] = v23;
          *(_DWORD *)v22 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v22 + 4) = sub_2378FD9C8(v44, v8, v45);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_237866000, v20, v21, "Acquired live assertion for: %s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B81FB7C](v23, -1, -1);
          MEMORY[0x23B81FB7C](v22, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        v4 = v43;
        type metadata accessor for LiveWidgetAssertion();
        v5 = swift_allocObject();
        *(_QWORD *)(v5 + 16) = v17;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v45[0] = v40;
        sub_237871F18(v5, v41, v7, isUniquelyReferenced_nonNull_native);
        v40 = v45[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = v18;
        v25 = (void *)sub_237A864E0();

        swift_willThrow();
        v26 = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = v25;
        v28 = sub_237A86660();
        v29 = sub_237A87D40();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc();
          v31 = (_QWORD *)swift_slowAlloc();
          v32 = swift_slowAlloc();
          v45[0] = v32;
          *(_DWORD *)v30 = 136315394;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v30 + 4) = sub_2378FD9C8(v44, v8, v45);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v30 + 12) = 2112;
          v33 = v25;
          v34 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v30 + 14) = v34;
          *v31 = v34;

          _os_log_impl(&dword_237866000, v28, v29, "Failed to acquire keep-alive assertion for %s: %@", (uint8_t *)v30, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2568292D0);
          swift_arrayDestroy();
          MEMORY[0x23B81FB7C](v31, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x23B81FB7C](v32, -1, -1);
          MEMORY[0x23B81FB7C](v30, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

        }
        v4 = v43;
      }
      v3 = v42 + 88;
      v2 = v4 - 1;
    }
    while (v2);
    v0 = v37;
    swift_bridgeObjectRelease();
    v35 = v40;
  }
  else
  {
    v35 = MEMORY[0x24BEE4B00];
  }
  v0[12] = 0;
  v0[13] = v35;
  return swift_task_switch();
}

uint64_t sub_237A49050()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = sub_237A87B60();
  sub_237A87B54();
  return swift_task_switch();
}

uint64_t sub_237A490E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x24BDAC8D0];
  v1 = v0[13];
  v2 = v0[12];
  v3 = v0[6];
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[0] = *(_QWORD *)(v3 + 176);
  *(_QWORD *)(v3 + 176) = 0x8000000000000000;
  sub_237A49B38(v1, (uint64_t)sub_237A4A300, 0, isUniquelyReferenced_nonNull_native, v6);
  *(_QWORD *)(v3 + 176) = v6[0];
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_endAccess();
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_237A49200()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_237A4927C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  void *v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[8];
  char v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v19 = *(_BYTE *)(a1 + 64);
  v7 = (uint64_t *)(v1 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v10 = *(_QWORD *)(v1 + 72);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_2378D2DB8(v22, v2);
    if ((v12 & 1) != 0)
    {
      v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_endAccess();
      v14 = v13;
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v24[0] = v22;
  v24[1] = v2;
  v24[2] = v21;
  v24[3] = v3;
  v24[4] = v4;
  v24[5] = v5;
  v24[6] = v6;
  v24[7] = v20;
  v25 = v19;
  v26 = v9;
  v27 = v8;
  v13 = sub_237A49430((uint64_t)v24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  if (v13)
  {
    v15 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v7;
    *v7 = 0x8000000000000000;
    sub_237871CDC((uint64_t)v15, v22, v2, isUniquelyReferenced_nonNull_native);
    *v7 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = (void *)sub_237903E80(v22, v2);
    swift_bridgeObjectRelease();

  }
  swift_endAccess();
  return v13;
}

id sub_237A49430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[8];
  char v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  v34 = *(_QWORD *)(a1 + 48);
  v35 = *(_QWORD *)(a1 + 32);
  v33 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 16);
  v32 = *(_QWORD *)(a1 + 72);
  if (qword_25681E2F8 != -1)
    swift_once();
  v9 = sub_237A86678();
  __swift_project_value_buffer(v9, (uint64_t)qword_256870658);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_237A86660();
  v11 = sub_237A87D58();
  if (os_log_type_enabled(v10, v11))
  {
    v29 = v7;
    v12 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v36[0] = v30;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_2378FD9C8(v35, v6, v36);
    sub_237A87E24();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_237866000, v10, v11, "Retrieving intent for: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v30, -1, -1);
    MEMORY[0x23B81FB7C](v12, -1, -1);

    v13 = v29;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v7;
  }
  v14 = *(void **)(v2 + 48);
  v36[0] = v3;
  v36[1] = v4;
  v36[2] = v31;
  v36[3] = v5;
  v36[4] = v35;
  v36[5] = v6;
  v36[6] = v34;
  v36[7] = v13;
  v37 = v33;
  v38 = v32;
  v39 = v8;
  v15 = WidgetManager.chsWidget(for:)(v36);
  v16 = objc_msgSend(v14, sel_extensions);
  sub_2378BFF5C(0, &qword_256829030);
  sub_2378BFF94(&qword_256829038, &qword_256829030);
  v17 = sub_237A87BE4();

  v18 = v15;
  sub_237A4A624(v17, v18);
  v20 = v19;
  swift_bridgeObjectRelease();

  if (!v20)
  {

LABEL_11:
    v26 = 0;
    goto LABEL_12;
  }
  v21 = v20;
  v22 = objc_msgSend(v21, sel_orderedDescriptors);
  if (!v22)
  {

    goto LABEL_11;
  }
  v23 = v22;
  sub_2378BFF5C(0, &qword_256829040);
  v24 = sub_237A87A94();

  v25 = v18;
  v26 = sub_237A4A9BC(v24, (uint64_t)v25);

  swift_bridgeObjectRelease();
LABEL_12:
  v27 = objc_msgSend(v26, sel_defaultIntent, v29);

  return v27;
}

uint64_t sub_237A49818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_237A49830()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = swift_weakLoadStrong();
  sub_237A87B6C();
  *(_QWORD *)(v0 + 40) = sub_237A87B60();
  sub_237A87B54();
  return swift_task_switch();
}

uint64_t sub_237A498B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  if (v1)
  {
    sub_237A47260();
    sub_237A47918();
    swift_release();
  }
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_237A499A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t AvocadoWidget.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_237A49A18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_237A49A44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
    swift_unknownObjectRelease();
  }
  return swift_deallocClassInstance();
}

uint64_t sub_237A49A88(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_237A49AEC;
  return v6(a1);
}

uint64_t sub_237A49AEC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_237A49B38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_237A4A170();
  if (!v8)
    goto LABEL_24;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v13 = (_QWORD *)*a5;
  v15 = sub_2378D2DB8(v7, v8);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_2378C6DC8();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v24 = (uint64_t *)(v22[6] + 16 * v15);
    *v24 = v10;
    v24[1] = v11;
    *(_QWORD *)(v22[7] + 8 * v15) = v12;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v27;
LABEL_13:
    v28 = sub_237A4A170();
    if (v29)
    {
      v31 = v28;
      v32 = v29;
      v33 = v30;
      do
      {
        v37 = (_QWORD *)*a5;
        v39 = sub_2378D2DB8(v31, v32);
        v40 = v37[2];
        v41 = (v38 & 1) == 0;
        v42 = v40 + v41;
        if (__OFADD__(v40, v41))
          goto LABEL_25;
        v43 = v38;
        if (v37[3] < v42)
        {
          sub_2378CC7CC(v42, 1);
          v44 = sub_2378D2DB8(v31, v32);
          if ((v43 & 1) != (v45 & 1))
            goto LABEL_27;
          v39 = v44;
        }
        v46 = (_QWORD *)*a5;
        if ((v43 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v34 = v46[7];
          swift_release();
          *(_QWORD *)(v34 + 8 * v39) = v33;
        }
        else
        {
          v46[(v39 >> 6) + 8] |= 1 << v39;
          v47 = (uint64_t *)(v46[6] + 16 * v39);
          *v47 = v31;
          v47[1] = v32;
          *(_QWORD *)(v46[7] + 8 * v39) = v33;
          v48 = v46[2];
          v26 = __OFADD__(v48, 1);
          v49 = v48 + 1;
          if (v26)
            goto LABEL_26;
          v46[2] = v49;
        }
        v31 = sub_237A4A170();
        v32 = v35;
        v33 = v36;
      }
      while (v35);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2378707DC();
    return swift_release();
  }
  sub_2378CC7CC(v18, a4 & 1);
  v20 = sub_2378D2DB8(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = v22[7];
    swift_release();
    *(_QWORD *)(v23 + 8 * v15) = v12;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237A49E20(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_237A49EC4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_237A49FA8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(_QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  _QWORD v22[2];
  char v23;
  uint64_t v24;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(_QWORD *)(v3 + 48) + 24 * v8;
    v10 = *(_QWORD *)v9;
    v11 = *(_QWORD *)(v9 + 8);
    v12 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v8);
    v13 = *(_BYTE *)(v9 + 16);
    v1[3] = v6;
    v1[4] = v7;
    v14 = (void (*)(_QWORD *))v1[5];
    v22[0] = v10;
    v22[1] = v11;
    v23 = v13;
    v24 = v12;
    sub_23787A11C(v10, v11, v13);
    swift_bridgeObjectRetain();
    v14(v22);
    sub_23787A134(v10, v11, v13);
    return swift_bridgeObjectRelease();
  }
  v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v1[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v1[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v7 = (v19 - 1) & v19;
        v8 = __clz(__rbit64(v19)) + (v16 << 6);
        v6 = v16;
        goto LABEL_3;
      }
      v20 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v5 + 3));
          if (v19)
          {
            v16 = v5 + 3;
            goto LABEL_7;
          }
          v20 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v6 = v17 - 1;
              v21 = v5 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_237A4A170()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    v11(&v19, v20);
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_237A4A300@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_237A4A334(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_237A4A39C;
  return v5(v2 + 32);
}

uint64_t sub_237A4A39C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_237A4A3EC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  int64_t v41;
  uint64_t v42[6];
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  uint64_t v56;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v56 = MEMORY[0x24BEE4AF8];
  sub_2379D655C(0, v1, 0);
  v2 = v56;
  result = sub_237A49E20(v3);
  v6 = result;
  v8 = v7 & 1;
  v37 = v3;
  v38 = v3 + 56;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    if (((*(_QWORD *)(v38 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(v3 + 36) != (_DWORD)v5)
      goto LABEL_14;
    v39 = v8;
    v40 = v5;
    v41 = v1;
    v9 = *(_QWORD *)(v3 + 48) + 72 * v6;
    v10 = *(_QWORD *)(v9 + 8);
    v11 = *(_QWORD *)(v9 + 16);
    v12 = *(_QWORD *)(v9 + 24);
    v13 = *(_QWORD *)(v9 + 32);
    v14 = *(_QWORD *)(v9 + 40);
    v15 = *(_BYTE *)(v9 + 48);
    v16 = *(_QWORD *)(v9 + 56);
    v17 = *(_QWORD *)(v9 + 64);
    v42[0] = *(_QWORD *)v9;
    v42[1] = v10;
    v42[2] = v11;
    v42[3] = v12;
    v42[4] = v13;
    v42[5] = v14;
    v43 = v15;
    v44 = v16;
    v45 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237870C10(v42, (uint64_t)&v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v46;
    v19 = v47;
    v21 = v48;
    v20 = v49;
    v23 = v50;
    v22 = v51;
    v24 = v52;
    v25 = v53;
    v27 = *(_QWORD *)(v2 + 16);
    v26 = *(_QWORD *)(v2 + 24);
    v28 = v54;
    v29 = v55;
    v56 = v2;
    if (v27 >= v26 >> 1)
    {
      v35 = v47;
      v36 = v46;
      v33 = v53;
      v34 = v52;
      v32 = v55;
      sub_2379D655C(v26 > 1, v27 + 1, 1);
      v29 = v32;
      v25 = v33;
      v24 = v34;
      v19 = v35;
      v18 = v36;
      v2 = v56;
    }
    *(_QWORD *)(v2 + 16) = v27 + 1;
    v30 = v2 + 88 * v27;
    *(_QWORD *)(v30 + 32) = v18;
    *(_QWORD *)(v30 + 40) = v19;
    *(_QWORD *)(v30 + 48) = v21;
    *(_QWORD *)(v30 + 56) = v20;
    *(_QWORD *)(v30 + 64) = v23;
    *(_QWORD *)(v30 + 72) = v22;
    *(_QWORD *)(v30 + 80) = v24;
    *(_QWORD *)(v30 + 88) = v25;
    *(_BYTE *)(v30 + 96) = v28;
    *(_OWORD *)(v30 + 104) = v29;
    v3 = v37;
    result = sub_237A49EC4(v6, v40, v39 & 1, v37);
    v6 = result;
    v8 = v31 & 1;
    v1 = v41 - 1;
    if (v41 == 1)
    {
      sub_237A4BF30(result, v5, v8);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_237A4A624(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_237A87EC0();
    sub_2378BFF5C(0, &qword_256829030);
    sub_2378BFF94(&qword_256829038, &qword_256829030);
    sub_237A87C08();
    v2 = v29;
    v27 = v30;
    v3 = v31;
    v4 = v32;
    v5 = v33;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v26 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_237A87EE4())
    goto LABEL_36;
  sub_2378BFF5C(0, &qword_256829030);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v10 = v34;
  swift_unknownObjectRelease();
  v11 = v4;
  v12 = v5;
  if (!v34)
    goto LABEL_36;
  while (1)
  {
    v17 = objc_msgSend(v10, sel_extensionBundleIdentifier);
    v18 = sub_237A87818();
    v20 = v19;

    v21 = objc_msgSend(a2, sel_extensionBundleIdentifier);
    v22 = sub_237A87818();
    v24 = v23;

    if (v18 == v22 && v20 == v24)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    v25 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_36;

    v4 = v11;
    v5 = v12;
    if (v2 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v5)
      break;
    v12 = (v5 - 1) & v5;
    v13 = __clz(__rbit64(v5)) | (v4 << 6);
    v11 = v4;
LABEL_29:
    v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    if (!v10)
      goto LABEL_36;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  if (v14 >= v26)
    goto LABEL_36;
  v15 = *(_QWORD *)(v27 + 8 * v14);
  v11 = v4 + 1;
  if (v15)
    goto LABEL_28;
  v11 = v4 + 2;
  if (v4 + 2 >= v26)
    goto LABEL_36;
  v15 = *(_QWORD *)(v27 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 3;
  if (v4 + 3 >= v26)
    goto LABEL_36;
  v15 = *(_QWORD *)(v27 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 4;
  if (v4 + 4 >= v26)
    goto LABEL_36;
  v15 = *(_QWORD *)(v27 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 5;
  if (v4 + 5 >= v26)
    goto LABEL_36;
  v15 = *(_QWORD *)(v27 + 8 * v11);
  if (v15)
  {
LABEL_28:
    v12 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_29;
  }
  v16 = v4 + 6;
  while (v26 != v16)
  {
    v15 = *(_QWORD *)(v27 + 8 * v16++);
    if (v15)
    {
      v11 = v16 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_2378707DC();
}

void *sub_237A4A9BC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_237A880C4())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B81EBEC](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (objc_msgSend(v6, sel_matchesPersonality_, a2))
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_237A4AAC4(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  BOOL v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[8];
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[11];
  _BYTE v46[8];
  uint64_t v47;
  uint64_t v48;

  sub_237A4BDE4(a5, (uint64_t)v45);
  v32 = v45[1];
  v33 = v45[0];
  v48 = a1;
  v35 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v36 = (unint64_t)(v7 + 63) >> 6;
  v39 = a2;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v9)
  {
    v40 = (v9 - 1) & v9;
    v11 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_23:
    v15 = *(_QWORD *)(v39 + 48) + 88 * v11;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    v20 = *(_QWORD *)(v15 + 32);
    v21 = *(_QWORD *)(v15 + 40);
    v22 = *(_QWORD *)(v15 + 48);
    v23 = *(_QWORD *)(v15 + 56);
    v24 = *(_BYTE *)(v15 + 64);
    v25 = *(_QWORD *)(v15 + 72);
    v26 = *(_QWORD *)(v15 + 80);
    v41[0] = *(_QWORD *)v15;
    v41[1] = v17;
    v41[2] = v18;
    v41[3] = v19;
    v41[4] = v20;
    v41[5] = v21;
    v41[6] = v22;
    v41[7] = v23;
    v42 = v24;
    v43 = v25;
    v44 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = WidgetManager.configuredWidgetDescriptor(for:)((uint64_t)v41);
    if (v27)
    {
      v28 = v27;
      v37 = v16;
      v29 = v27;
      MEMORY[0x23B81E6D0]();
      if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_237A87AB8();
      sub_237A87AE8();
      sub_237A87AAC();
      if (*a4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v9 = v40;
      }
      else
      {
        sub_237A4BDE4(a5, (uint64_t)v46);
        if (!v47 || (v33 == v37 ? (v30 = v32 == v17) : (v30 = 0), !v30 && (sub_237A8840C() & 1) == 0))
        {

          v28 = 0;
        }
        v31 = *a4;
        *a4 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v9 = v40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v40;
    }
  }
  v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v12 >= v36)
    goto LABEL_36;
  v13 = *(_QWORD *)(v35 + 8 * v12);
  ++v10;
  if (v13)
    goto LABEL_22;
  v10 = v12 + 1;
  if (v12 + 1 >= v36)
    goto LABEL_36;
  v13 = *(_QWORD *)(v35 + 8 * v10);
  if (v13)
    goto LABEL_22;
  v10 = v12 + 2;
  if (v12 + 2 >= v36)
    goto LABEL_36;
  v13 = *(_QWORD *)(v35 + 8 * v10);
  if (v13)
    goto LABEL_22;
  v10 = v12 + 3;
  if (v12 + 3 >= v36)
    goto LABEL_36;
  v13 = *(_QWORD *)(v35 + 8 * v10);
  if (v13)
  {
LABEL_22:
    v40 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v10 << 6);
    goto LABEL_23;
  }
  v14 = v12 + 4;
  if (v14 >= v36)
  {
LABEL_36:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v35 + 8 * v14);
  if (v13)
  {
    v10 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v36)
      goto LABEL_36;
    v13 = *(_QWORD *)(v35 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_237A4AE50(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;

  v2 = 0;
  v34 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v29 = a2 + 176;
  v35 = (unint64_t)(v3 + 63) >> 6;
  v27 = MEMORY[0x24BEE4AF8];
  v30 = result;
  while (v5)
  {
    v6 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v7 = v6 | (v2 << 6);
LABEL_22:
    v11 = *(_QWORD *)(result + 56) + 88 * v7;
    if (*(_BYTE *)(v11 + 64) == 1)
    {
      v36 = v2;
      v12 = *(_QWORD *)v11;
      v13 = *(_QWORD *)(v11 + 8);
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      v16 = *(_QWORD *)(v11 + 40);
      v17 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v11 + 48);
      v32 = *(_QWORD *)(v11 + 32);
      v18 = *(_QWORD *)(v11 + 80);
      v33 = *(_QWORD *)(v11 + 72);
      swift_beginAccess();
      v19 = *(_QWORD *)(*(_QWORD *)v29 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v19)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2378D2DB8(v12, v13);
      if ((v20 & 1) != 0)
      {
        swift_retain();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        result = v30;
        v2 = v36;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_28:
        swift_endAccess();
        v21 = v27;
        v37 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2379D655C(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v21 = v27;
        }
        v23 = *(_QWORD *)(v21 + 16);
        v22 = *(_QWORD *)(v21 + 24);
        v24 = v23 + 1;
        if (v23 >= v22 >> 1)
        {
          v28 = v23 + 1;
          v26 = *(_QWORD *)(v21 + 16);
          sub_2379D655C(v22 > 1, v23 + 1, 1);
          v24 = v28;
          v23 = v26;
          v21 = v37;
        }
        *(_QWORD *)(v21 + 16) = v24;
        v27 = v21;
        v25 = v21 + 88 * v23;
        *(_QWORD *)(v25 + 32) = v12;
        *(_QWORD *)(v25 + 40) = v13;
        *(_QWORD *)(v25 + 48) = v14;
        *(_QWORD *)(v25 + 56) = v15;
        *(_QWORD *)(v25 + 64) = v32;
        *(_QWORD *)(v25 + 72) = v16;
        result = v30;
        *(_QWORD *)(v25 + 80) = v31;
        *(_QWORD *)(v25 + 88) = v17;
        *(_BYTE *)(v25 + 96) = 1;
        *(_QWORD *)(v25 + 104) = v33;
        *(_QWORD *)(v25 + 112) = v18;
        v2 = v36;
      }
    }
  }
  v8 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v8 >= v35)
    goto LABEL_33;
  v9 = *(_QWORD *)(v34 + 8 * v8);
  ++v2;
  if (v9)
    goto LABEL_21;
  v2 = v8 + 1;
  if (v8 + 1 >= v35)
    goto LABEL_33;
  v9 = *(_QWORD *)(v34 + 8 * v2);
  if (v9)
    goto LABEL_21;
  v2 = v8 + 2;
  if (v8 + 2 >= v35)
    goto LABEL_33;
  v9 = *(_QWORD *)(v34 + 8 * v2);
  if (v9)
    goto LABEL_21;
  v2 = v8 + 3;
  if (v8 + 3 >= v35)
    goto LABEL_33;
  v9 = *(_QWORD *)(v34 + 8 * v2);
  if (v9)
  {
LABEL_21:
    v5 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v2 << 6);
    goto LABEL_22;
  }
  v10 = v8 + 4;
  if (v10 >= v35)
  {
LABEL_33:
    swift_release();
    return v27;
  }
  v9 = *(_QWORD *)(v34 + 8 * v10);
  if (v9)
  {
    v2 = v10;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v2 >= v35)
      goto LABEL_33;
    v9 = *(_QWORD *)(v34 + 8 * v2);
    ++v10;
    if (v9)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_237A4B1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t result;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;

  v6 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v6 + 80) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 72) = v15;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(_OWORD *)(v6 + 136) = 0u;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_QWORD *)(v6 + 168) = 0;
  *(_QWORD *)(v6 + 176) = v15;
  *(_QWORD *)(v6 + 192) = objc_msgSend((id)objc_opt_self(), sel_hashTableWithOptions_, 5);
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  swift_retain();
  v16 = sub_237A4A3EC(a4);
  swift_bridgeObjectRelease();
  v17 = (_QWORD *)sub_2378D20A4(MEMORY[0x24BEE4AF8]);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v6 + 80) = v17;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16A58]), sel_init);
    *(_QWORD *)(v6 + 64) = a5;
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE169F8]), sel_init);
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE16A78]), sel_initWithSize_cornerRadius_scaleFactor_fontStyle_safeAreaInsets_layoutInsets_contentMargins_supportsDynamicText_, 0, 2, 170.0, 170.0, 0.0, 2.9, 0.0, 0.0, 0.0, 0.0, 0x4000000000000000, 0x4000000000000000, 0x4000000000000000, 0x4000000000000000, 0x4000000000000000, 0x4000000000000000, 0x4000000000000000,
            0x4000000000000000);
    objc_msgSend(v46, sel_setMetrics_forFamily_, v47, 1);

    *(_QWORD *)(v6 + 184) = v46;
    v48 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionProviderObserver()), sel_init);
    *(_QWORD *)(v6 + 56) = v48;
    swift_weakAssign();
    objc_msgSend(*(id *)(v6 + 48), sel_registerObserver_, v48);
    swift_retain();
    v49 = swift_bridgeObjectRetain();
    v50 = sub_237A4AE50(v49, v6);
    swift_release();
    if (*(_QWORD *)(v50 + 16))
    {
      v51 = sub_237A87B84();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v14, 1, 1, v51);
      sub_237A87B6C();
      swift_retain();
      v52 = sub_237A87B60();
      v53 = (_QWORD *)swift_allocObject();
      v54 = MEMORY[0x24BEE6930];
      v53[2] = v52;
      v53[3] = v54;
      v53[4] = v50;
      v53[5] = v6;
      sub_237A461F0((uint64_t)v14, (uint64_t)&unk_256829310, (uint64_t)v53);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return v6;
  }
  v56[2] = v6 + 80;
  v57 = a5;
  v58 = 0;
  v59 = v14;
  v60 = v6;
  swift_bridgeObjectRetain();
  v56[1] = v16;
  v19 = v16 + 56;
  while (1)
  {
    v23 = *(_QWORD *)(v19 - 24);
    v24 = *(_QWORD *)(v19 - 16);
    v25 = *(_QWORD *)(v19 - 8);
    v63 = v18;
    v64 = v25;
    v26 = *(_QWORD *)v19;
    v28 = *(_QWORD *)(v19 + 16);
    v27 = *(_QWORD *)(v19 + 24);
    v65 = *(_QWORD *)(v19 + 8);
    v66 = v27;
    v29 = *(_QWORD *)(v19 + 32);
    v67 = *(unsigned __int8 *)(v19 + 40);
    v30 = *(_QWORD *)(v19 + 56);
    v68 = *(_QWORD *)(v19 + 48);
    v69 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70 = v17;
    v33 = sub_2378D2DB8(v23, v24);
    v34 = v17[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (v17[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v17 = v70;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2378C6BA0();
        v17 = v70;
        if ((v37 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2378CC414(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_2378D2DB8(v23, v24);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_23;
      v33 = v38;
      v17 = v70;
      if ((v37 & 1) != 0)
      {
LABEL_3:
        v20 = v17[7] + 88 * v33;
        v21 = *(_QWORD *)(v20 + 8);
        v61 = *(_QWORD *)(v20 + 80);
        v62 = v21;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)v20 = v23;
        *(_QWORD *)(v20 + 8) = v24;
        *(_QWORD *)(v20 + 16) = v64;
        *(_QWORD *)(v20 + 24) = v26;
        *(_QWORD *)(v20 + 32) = v65;
        *(_QWORD *)(v20 + 40) = v28;
        *(_QWORD *)(v20 + 48) = v66;
        *(_QWORD *)(v20 + 56) = v29;
        *(_BYTE *)(v20 + 64) = v67;
        v22 = v69;
        *(_QWORD *)(v20 + 72) = v68;
        *(_QWORD *)(v20 + 80) = v22;
        goto LABEL_4;
      }
    }
    v17[(v33 >> 6) + 8] |= 1 << v33;
    v40 = (uint64_t *)(v17[6] + 16 * v33);
    *v40 = v23;
    v40[1] = v24;
    v41 = v17[7] + 88 * v33;
    *(_QWORD *)v41 = v23;
    *(_QWORD *)(v41 + 8) = v24;
    *(_QWORD *)(v41 + 16) = v64;
    *(_QWORD *)(v41 + 24) = v26;
    *(_QWORD *)(v41 + 32) = v65;
    *(_QWORD *)(v41 + 40) = v28;
    *(_QWORD *)(v41 + 48) = v66;
    *(_QWORD *)(v41 + 56) = v29;
    *(_BYTE *)(v41 + 64) = v67;
    v42 = v69;
    *(_QWORD *)(v41 + 72) = v68;
    *(_QWORD *)(v41 + 80) = v42;
    v43 = v17[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_22;
    v17[2] = v45;
    swift_bridgeObjectRetain();
LABEL_4:
    v19 += 88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v63 - 1;
    if (v63 == 1)
    {
      swift_bridgeObjectRelease();
      v14 = v59;
      v6 = v60;
      a5 = v57;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_237A4B73C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237A4B798(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_237A4B7F4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[11];
  v3 = a1[12];
  sub_237A4B73C(*a1, a1[1]);
  sub_237A4B73C(v2, v3);
  return a1;
}

uint64_t sub_237A4B8B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2379F2C78;
  return sub_237A487A0(a1, v4, v5, v7, v6);
}

uint64_t sub_237A4B92C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_237A4B97C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for WidgetManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetManager.__allocating_init(identifier:widgetRegistry:widgets:widgetFamily:scaleFactor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for WidgetExtensionProviderObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LiveWidgetAssertion()
{
  return objc_opt_self();
}

uint64_t sub_237A4BA40()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237A87B84();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_237A4BCA0((uint64_t)v3);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_237A87B78();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_237A87B54();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_2568292A0;
  *(_QWORD *)(v12 + 24) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568292B8);
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_237A4BC10()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_237A4BC3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2379F2C78;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_237A4BCA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826EC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237A4BCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2379F27F4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2568292A8 + dword_2568292A8))(a1, v4);
}

uint64_t sub_237A4BD50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237A4BD74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2379F2C78;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2568292C0 + dword_2568292C0))(a1, v4);
}

uint64_t sub_237A4BDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_237A4BE2C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  return a1;
}

uint64_t objectdestroyTm_3()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237A4BEB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2379F27F4;
  return sub_237A487A0(a1, v4, v5, v7, v6);
}

uint64_t sub_237A4BF30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_237A4BF40(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2379D62F4(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_2379D62F4(v7 > 1, v8 + 1, 1);
      v4 += 11;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_237A4C014(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  CGFloat *v4;
  void *v5;
  double v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  const __CTFont *v10;
  CGFloat v11;
  double Ascent;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unint64_t v17;
  unint64_t v18;
  CGFloat *v19;
  uint64_t v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_2379D6380(0, v1, 0);
    v2 = v21;
    v4 = (CGFloat *)(a1 + 88);
    do
    {
      v5 = (void *)*((_QWORD *)v4 - 4);
      v6 = *(v4 - 3);
      v7 = *(v4 - 2);
      v8 = *(v4 - 1);
      v9 = *v4;
      swift_bridgeObjectRetain();
      v10 = v5;
      v22.origin.x = v6;
      v22.origin.y = v7;
      v22.size.width = v8;
      v22.size.height = v9;
      v11 = ceil(CGRectGetMaxX(v22)) - floor(v6);
      Ascent = CTFontGetAscent(v10);
      v23.size.height = ceil(Ascent + CTFontGetDescent(v10));
      v23.origin.x = 1.0;
      v23.origin.y = 1.0;
      v23.size.width = v11;
      v24 = CGRectInset(v23, -1.0, -1.0);
      x = v24.origin.x;
      y = v24.origin.y;
      width = v24.size.width;
      height = v24.size.height;

      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v21 + 16);
      v17 = *(_QWORD *)(v21 + 24);
      if (v18 >= v17 >> 1)
        sub_2379D6380(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v21 + 16) = v18 + 1;
      v19 = (CGFloat *)(v21 + 32 * v18);
      v19[4] = x;
      v19[5] = y;
      v19[6] = width;
      v19[7] = height;
      v4 += 11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_237A4C178(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_2379D6540(0, v2, 0);
    result = v8;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_2379D6540(v6 > 1, v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_237A4C238(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const __CTLine *v9;
  const __CFArray *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const __CTLine *v19;
  const __CTLine *v20;
  const __CFArray *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = a1;
  v28 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_71;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v39 = *(_QWORD *)(a2 + 16);
  if (v39 >= v5)
    v6 = v5;
  else
    v6 = *(_QWORD *)(a2 + 16);
  v45 = MEMORY[0x24BEE4AF8];
  v33 = v6 & ~(v6 >> 63);
  sub_2379D6348(0, v33, 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v35 = a2;
    v36 = v4;
    if (!v6)
    {
      v7 = v4 & 0xFFFFFFFFFFFFFF8;
      v40 = v4 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_35;
    }
    v37 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v28)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v31 = sub_237A880C4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v8 = 0;
    v40 = v4 & 0xC000000000000001;
    v27 = v4 + 32;
    v30 = a2 + 32;
    v29 = v6;
    while (1)
    {
      if (v8 == v33)
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        swift_bridgeObjectRetain();
        v5 = sub_237A880C4();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if (v8 == v31)
        goto LABEL_64;
      if (v40)
      {
        v9 = (const __CTLine *)MEMORY[0x23B81EBEC](v8, v4);
      }
      else
      {
        if (v8 >= *(_QWORD *)(v37 + 16))
          goto LABEL_70;
        v9 = (const __CTLine *)*(id *)(v27 + 8 * v8);
      }
      v2 = (unint64_t)v9;
      if (v8 == v39)
        goto LABEL_73;
      v41 = *(_OWORD *)(v30 + 16 * v8);
      v10 = CTLineGetGlyphRuns(v9);
      v11 = sub_237A87A94();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_237A880C4();
        swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_22:
          v43 = MEMORY[0x24BEE4AF8];
          sub_237A8801C();
          if (v12 < 0)
            goto LABEL_68;
          v13 = 0;
          do
          {
            if ((v11 & 0xC000000000000001) != 0)
              MEMORY[0x23B81EBEC](v13, v11);
            else
              swift_unknownObjectRetain();
            ++v13;
            type metadata accessor for CTRun(0);
            swift_dynamicCastUnknownClassUnconditional();
            sub_237A87FF8();
            sub_237A88028();
            sub_237A88034();
            sub_237A88004();
          }
          while (v12 != v13);
          v14 = v43;

          swift_bridgeObjectRelease();
          a2 = v35;
          v4 = v36;
          goto LABEL_31;
        }
      }
      else
      {
        v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v12)
          goto LABEL_22;
      }

      swift_bridgeObjectRelease();
      v14 = MEMORY[0x24BEE4AF8];
LABEL_31:
      v2 = *(_QWORD *)(v45 + 16);
      v15 = *(_QWORD *)(v45 + 24);
      v6 = v29;
      if (v2 >= v15 >> 1)
        sub_2379D6348(v15 > 1, v2 + 1, 1);
      ++v8;
      *(_QWORD *)(v45 + 16) = v2 + 1;
      v16 = v45 + 24 * v2;
      *(_QWORD *)(v16 + 32) = v14;
      *(_OWORD *)(v16 + 40) = v41;
      if (v8 == v29)
      {
        v7 = v37;
LABEL_35:
        v38 = v7;
        v32 = a2 + 32;
        v34 = v4 + 32;
        while (2)
        {
          if (v28)
          {
            swift_bridgeObjectRetain();
            v18 = sub_237A880C4();
            swift_bridgeObjectRelease();
            v17 = v38;
            if (v6 == v18)
            {
LABEL_61:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
          }
          else
          {
            v17 = v38;
            if (v6 == *(_QWORD *)(v38 + 16))
              goto LABEL_61;
          }
          if (v40)
          {
            v19 = (const __CTLine *)MEMORY[0x23B81EBEC](v6, v4);
          }
          else
          {
            if ((unint64_t)v6 >= *(_QWORD *)(v17 + 16))
              goto LABEL_65;
            v19 = (const __CTLine *)*(id *)(v34 + 8 * v6);
          }
          v20 = v19;
          if (__OFADD__(v6, 1))
            goto LABEL_66;
          if (v6 == v39)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return;
          }
          if (v6 >= (unint64_t)v39)
            goto LABEL_67;
          v42 = *(_OWORD *)(v32 + 16 * v6);
          v21 = CTLineGetGlyphRuns(v19);
          v2 = sub_237A87A94();

          if (v2 >> 62)
          {
            swift_bridgeObjectRetain();
            v22 = sub_237A880C4();
            swift_bridgeObjectRelease();
            if (!v22)
              goto LABEL_57;
LABEL_48:
            v44 = MEMORY[0x24BEE4AF8];
            sub_237A8801C();
            if (v22 < 0)
              goto LABEL_69;
            v23 = 0;
            do
            {
              if ((v2 & 0xC000000000000001) != 0)
                MEMORY[0x23B81EBEC](v23, v2);
              else
                swift_unknownObjectRetain();
              ++v23;
              type metadata accessor for CTRun(0);
              swift_dynamicCastUnknownClassUnconditional();
              sub_237A87FF8();
              sub_237A88028();
              sub_237A88034();
              sub_237A88004();
            }
            while (v22 != v23);
            v24 = v44;

            swift_bridgeObjectRelease();
            a2 = v35;
            v4 = v36;
          }
          else
          {
            v22 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v22)
              goto LABEL_48;
LABEL_57:

            swift_bridgeObjectRelease();
            v24 = MEMORY[0x24BEE4AF8];
          }
          v2 = *(_QWORD *)(v45 + 16);
          v25 = *(_QWORD *)(v45 + 24);
          if (v2 >= v25 >> 1)
            sub_2379D6348(v25 > 1, v2 + 1, 1);
          *(_QWORD *)(v45 + 16) = v2 + 1;
          v26 = v45 + 24 * v2;
          *(_QWORD *)(v26 + 32) = v24;
          *(_OWORD *)(v26 + 40) = v42;
          ++v6;
          continue;
        }
      }
    }
  }
  __break(1u);
LABEL_73:

  __break(1u);
}

uint64_t sub_237A4C888()
{
  void *v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  const __CFAttributedString *v13;
  const __CTFramesetter *v14;
  CGSize v15;
  const CGPath *v16;
  const __CTFrame *Frame;
  uint64_t result;
  CFRange v19;
  CFRange v20;
  CGSize v21;
  CGRect v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256829368);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A95640;
  v2 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  v3 = sub_2378BFF5C(0, &qword_256829370);
  *(_QWORD *)(inited + 40) = v0;
  v4 = (void *)*MEMORY[0x24BEBB380];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  v5 = sub_2378BFF5C(0, &qword_256829378);
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v0;
  v8 = v4;
  v9 = sub_237A87DB8();
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 80) = v9;
  sub_2378D1300(inited);
  v10 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  v11 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_23786FAA0(&qword_25681E7B0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89B28);
  v12 = (void *)sub_237A87650();
  swift_bridgeObjectRelease();
  v13 = (const __CFAttributedString *)objc_msgSend(v10, sel_initWithString_attributes_, v11, v12);

  v14 = CTFramesetterCreateWithAttributedString(v13);
  v21.width = 1.79769313e308;
  v19.location = 0;
  v19.length = 0;
  v21.height = 1.79769313e308;
  v15 = CTFramesetterSuggestFrameSizeWithConstraints(v14, v19, 0, v21, 0);
  v22.size.width = v15.width;
  v22.size.height = v15.height;
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v16 = CGPathCreateWithRect(v22, 0);
  v20.location = 0;
  v20.length = 0;
  Frame = CTFramesetterCreateFrame(v14, v20, v16, 0);

  CTFrameGetLines(Frame);
  type metadata accessor for CTLine(0);
  sub_237A87A88();
  __break(1u);
  __break(1u);
  sub_237A880A0();
  __break(1u);
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t UIFontDescriptorSystemDesign.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v0 = 0x746C7561666544;
  v1 = sub_237A87818();
  v3 = v2;
  if (v1 == sub_237A87818() && v3 == v4)
    goto LABEL_16;
  v6 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v0;
  v0 = 0x6669726553;
  v7 = sub_237A87818();
  v9 = v8;
  if (v7 == sub_237A87818() && v9 == v10)
    goto LABEL_16;
  v12 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return v0;
  v0 = 0x6465646E756F52;
  v13 = sub_237A87818();
  v15 = v14;
  if (v13 == sub_237A87818() && v15 == v16)
    goto LABEL_16;
  v18 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return v0;
  v0 = 0x636170736F6E6F4DLL;
  v19 = sub_237A87818();
  v21 = v20;
  if (v19 == sub_237A87818() && v21 == v22)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  v23 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    return v0;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  sub_237A87818();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t UIFontWeight.name.getter(double a1)
{
  uint64_t result;

  if (*MEMORY[0x24BEBB628] == a1)
    return 0x67694C6172746C55;
  if (*MEMORY[0x24BEBB618] == a1)
    return 1852401748;
  if (*MEMORY[0x24BEBB5F8] == a1)
    return 0x746867694CLL;
  if (*MEMORY[0x24BEBB608] == a1)
    return 0x72616C75676552;
  if (*MEMORY[0x24BEBB600] == a1)
    return 0x6D756964654DLL;
  if (*MEMORY[0x24BEBB610] == a1)
    return 0x646C6F62696D6553;
  if (*MEMORY[0x24BEBB5E8] == a1)
    return 1684827970;
  if (*MEMORY[0x24BEBB5F0] == a1)
    return 0x7976616548;
  if (*MEMORY[0x24BEBB5E0] == a1)
    return 0x6B63616C42;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  sub_237A87B9C();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

void sub_237A4D2E0(uint64_t a1@<X8>)
{
  const __CFAttributedString *v2;
  const __CTFramesetter *v3;
  CGSize v4;
  const CGPath *v5;
  const __CTFrame *Frame;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  _QWORD v19[3];
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  CFRange v24;
  CFRange v25;
  CGSize v26;
  CGRect v27;

  v2 = (const __CFAttributedString *)sub_237A4D860();
  v3 = CTFramesetterCreateWithAttributedString(v2);
  v26.width = 9.22337204e18;
  v24.location = 0;
  v24.length = 0;
  v26.height = 9.22337204e18;
  v4 = CTFramesetterSuggestFrameSizeWithConstraints(v3, v24, 0, v26, 0);
  v27.size.width = v4.width;
  v27.size.height = v4.height;
  v27.origin.x = 0.0;
  v27.origin.y = 0.0;
  v5 = CGPathCreateWithRect(v27, 0);
  v25.location = 0;
  v25.length = 0;
  Frame = CTFramesetterCreateFrame(v3, v25, v5, 0);

  v7 = sub_237A4F794(Frame);
  v8 = sub_237A4FAD4(v7);
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  sub_237A4D464(v8, (uint64_t)v19, v12);
  v13 = v19[0];
  v14 = v19[1];
  v15 = v19[2];
  LOBYTE(v3) = v20;
  LOBYTE(v5) = v21;
  v16 = v22;
  v17 = v23;
  v18 = sub_237A50650(v8, v10, v12);
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v15;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  *(_BYTE *)(a1 + 25) = (_BYTE)v5;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v18;
}

uint64_t sub_237A4D464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D1>)
{
  const __CTFont *v3;
  const __CTFont *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  id v20;
  double MaxY;
  BOOL v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double Ascent;
  double Descent;
  double v31;
  uint64_t v32;
  id v33;
  unsigned __int16 v34;
  CFArrayRef v35;
  CFArrayRef v36;
  uint64_t v37;
  void *v38;
  void *v39;
  unint64_t v40;
  id v41;
  id v42;
  void *v43;
  char v44;
  uint64_t v45;
  const __CTFont *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t result;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  const __CTFont *v54;
  uint64_t v57;
  uint64_t v58;
  unsigned __int16 v59;
  uint64_t v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  v4 = v3;
  v5 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v54 = v3;
    v60 = MEMORY[0x24BEE4AF8];
    sub_2379D63B8(0, v6, 0);
    v7 = v60;
    v52 = v6;
    v53 = v5;
    v8 = v5 + 72;
    do
    {
      v9 = *(_QWORD *)(v8 - 40);
      v10 = *(_QWORD *)(v8 - 32);
      v11 = *(void **)(v8 - 16);
      v12 = *(double *)(v8 - 8);
      v13 = *(double *)v8;
      v14 = *(double *)(v8 + 8);
      v15 = *(double *)(v8 + 16);
      v57 = *(_QWORD *)(v8 + 32);
      v58 = *(_QWORD *)(v8 + 24);
      v17 = *(double *)(v8 + 48);
      v16 = *(double *)(v8 + 56);
      v18 = *(double *)(v8 + 64);
      v19 = *(double *)(v8 + 72);
      swift_bridgeObjectRetain();
      v20 = v11;
      v61.origin.x = v17;
      v61.origin.y = v16;
      v61.size.width = v18;
      v61.size.height = v19;
      MaxY = CGRectGetMaxY(v61);
      swift_bridgeObjectRetain();
      v63.origin.x = 0.0;
      v63.origin.y = 0.0;
      v63.size.width = 0.0;
      v63.size.height = 0.0;
      v62.origin.x = v12;
      v62.origin.y = v13;
      v62.size.width = v14;
      v62.size.height = v15;
      v22 = CGRectEqualToRect(v62, v63);

      swift_bridgeObjectRelease();
      v60 = v7;
      v24 = *(_QWORD *)(v7 + 16);
      v23 = *(_QWORD *)(v7 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_2379D63B8(v23 > 1, v24 + 1, 1);
        v7 = v60;
      }
      *(_QWORD *)(v7 + 16) = v24 + 1;
      v25 = v7 + 104 * v24;
      *(_QWORD *)(v25 + 32) = v9;
      *(_QWORD *)(v25 + 40) = v10;
      *(CGFloat *)(v25 + 48) = v17;
      *(double *)(v25 + 56) = a3 - MaxY;
      *(CGFloat *)(v25 + 64) = v18;
      *(CGFloat *)(v25 + 72) = v19;
      *(CGFloat *)(v25 + 80) = v12;
      *(CGFloat *)(v25 + 88) = v13;
      *(CGFloat *)(v25 + 96) = v14;
      *(CGFloat *)(v25 + 104) = v15;
      *(_QWORD *)(v25 + 112) = v58;
      *(_QWORD *)(v25 + 120) = v57;
      v8 += 120;
      *(_BYTE *)(v25 + 128) = v22;
      --v6;
    }
    while (v6);
    v5 = v53;
    v4 = v54;
    v6 = v52;
    goto LABEL_8;
  }
  if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
LABEL_8:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E0);
    v26 = sub_237A880E8();
    goto LABEL_9;
  }
  v26 = MEMORY[0x24BEE4B00];
LABEL_9:
  v60 = v26;
  v27 = swift_bridgeObjectRetain();
  sub_237A4EB84(v27, 1, &v60);
  swift_bridgeObjectRelease();
  v28 = v60;
  Ascent = CTFontGetAscent(v4);
  Descent = CTFontGetDescent(v4);
  if (v6)
  {
    v31 = Descent;
    v32 = *(_QWORD *)(v5 + 112);
    v33 = -[__CTFont fontDescriptor](v4, sel_fontDescriptor);
    v34 = (unsigned __int16)objc_msgSend(v33, sel_symbolicTraits);

    v35 = CTFontCopyFeatureSettings(v4);
    if (v35)
    {
      v36 = v35;
      v59 = v34;
      v37 = v28;
      v38 = (void *)*MEMORY[0x24BEBE1B8];
      v39 = (void *)*MEMORY[0x24BEBE1A8];
      v40 = sub_237A87A94();
      v41 = v38;
      v42 = v39;
      v43 = sub_237A4FDE8(v40);
      swift_bridgeObjectRelease();

      if (v43)
      {
        swift_unknownObjectRelease();
        v44 = 1;
      }
      else
      {
        v44 = 0;
      }
      v28 = v37;
      v34 = v59;
    }
    else
    {
      v44 = 0;
    }
    v45 = sub_2378BC57C(0x100000000000004DLL, 0x8000000237AB2780);
    v46 = v4;
    v47 = sub_237A502C0(v45, v45, v46);
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(v47 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568202E8);
      v48 = sub_237A880E8();
    }
    else
    {
      v48 = MEMORY[0x24BEE4B00];
    }
    v60 = v48;
    v49 = (_QWORD *)swift_bridgeObjectRetain();
    sub_237A4E7F4(v49, 1, &v60);
    result = swift_bridgeObjectRelease();
    v51 = v60;
    *(_QWORD *)a2 = v28;
    *(double *)(a2 + 8) = ceil(Ascent + v31);
    *(_QWORD *)(a2 + 16) = v32;
    *(_BYTE *)(a2 + 24) = (v34 & 0x400) != 0;
    *(_BYTE *)(a2 + 25) = v44;
    *(_QWORD *)(a2 + 32) = v51;
    *(_BYTE *)(a2 + 40) = 0;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

id sub_237A4D860()
{
  void *v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256829368);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A89BC0;
  v2 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  v3 = sub_2378BFF5C(0, &qword_256829370);
  *(_QWORD *)(inited + 40) = v0;
  v4 = (void *)*MEMORY[0x24BEBB380];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  v5 = sub_2378BFF5C(0, &qword_256829378);
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v0;
  v8 = v4;
  *(_QWORD *)(inited + 80) = sub_237A87DB8();
  v9 = (void *)*MEMORY[0x24BEBB378];
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 112) = v9;
  v10 = MEMORY[0x24BEE1768];
  v11 = (void **)MEMORY[0x24BEBB368];
  *(_QWORD *)(inited + 120) = 0;
  v12 = *v11;
  *(_QWORD *)(inited + 144) = v10;
  *(_QWORD *)(inited + 152) = v12;
  v13 = (void *)objc_opt_self();
  v14 = v9;
  v15 = v12;
  v16 = objc_msgSend(v13, sel_whiteColor);
  v17 = objc_msgSend(v16, sel_CGColor);

  type metadata accessor for CGColor(0);
  *(_QWORD *)(inited + 184) = v18;
  *(_QWORD *)(inited + 160) = v17;
  sub_2378D1300(inited);
  v19 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  v20 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_23786FAA0(&qword_25681E7B0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237A89B28);
  v21 = (void *)sub_237A87650();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

uint64_t sub_237A4DA78(unint64_t a1, void (*a2)(_QWORD), double a3, double a4)
{
  uint64_t result;
  double *v6;
  unint64_t v7;
  double v8;
  double v9;
  int64x2_t v10;
  int64x2_t v11;
  double *v12;
  unint64_t v13;
  double *v14;
  unint64_t v15;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_237A880A0();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  a2(0);
  result = sub_237A87ADC();
  *(_QWORD *)(result + 16) = a1;
  v6 = (double *)(result + 32);
  if (a1 < 4)
  {
    v7 = 0;
    v8 = a4;
    v9 = a3;
LABEL_9:
    v15 = a1 - v7;
    do
    {
      *v6 = v9;
      v6[1] = v8;
      v6 += 2;
      --v15;
    }
    while (v15);
    return result;
  }
  v7 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 += 2 * (a1 & 0xFFFFFFFFFFFFFFFCLL);
  v9 = a3;
  v10 = vdupq_lane_s64(*(uint64_t *)&a3, 0);
  v8 = a4;
  v11 = vdupq_lane_s64(*(uint64_t *)&a4, 0);
  v12 = (double *)(result + 64);
  v13 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v14 = v12 - 4;
    vst2q_f64(v14, *(float64x2x2_t *)v10.i8);
    vst2q_f64(v12, *(float64x2x2_t *)v10.i8);
    v12 += 8;
    v13 -= 4;
  }
  while (v13);
  if (v7 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_237A4DB84(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  _WORD *v5;
  unint64_t v6;
  int16x8_t v7;
  int16x8_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_237A880A0();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_237A87ADC();
  *(_QWORD *)(result + 16) = a2;
  v5 = (_WORD *)(result + 32);
  if (a2 < 0x10)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 += a2 & 0xFFFFFFFFFFFFFFF0;
  v7 = vdupq_n_s16(a1);
  v8 = (int16x8_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 16;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_237A4DC6C(unint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t result;
  double *v7;
  unint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int64x2_t v13;
  int64x2_t v14;
  int64x2_t v15;
  int64x2_t v16;
  double *v17;
  unint64_t v18;
  double *v19;
  unint64_t v20;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_237A880A0();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  type metadata accessor for CGRect(0);
  result = sub_237A87ADC();
  *(_QWORD *)(result + 16) = a1;
  v7 = (double *)(result + 32);
  if (a1 < 4)
  {
    v8 = 0;
    v10 = a4;
    v9 = a5;
    v12 = a2;
    v11 = a3;
LABEL_9:
    v20 = a1 - v8;
    do
    {
      *v7 = v12;
      v7[1] = v11;
      v7[2] = v10;
      v7[3] = v9;
      v7 += 4;
      --v20;
    }
    while (v20);
    return result;
  }
  v8 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v7 += 4 * (a1 & 0xFFFFFFFFFFFFFFFCLL);
  v12 = a2;
  v11 = a3;
  v13 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v14 = vdupq_lane_s64(*(uint64_t *)&a3, 0);
  v10 = a4;
  v9 = a5;
  v15 = vdupq_lane_s64(*(uint64_t *)&a4, 0);
  v16 = vdupq_lane_s64(*(uint64_t *)&a5, 0);
  v17 = (double *)(result + 96);
  v18 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v19 = v17 - 8;
    vst4q_f64(v19, *(float64x2x4_t *)v13.i8);
    vst4q_f64(v17, *(float64x2x4_t *)v13.i8);
    v17 += 16;
    v18 -= 4;
  }
  while (v18);
  if (v8 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_237A4DD88(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829398);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A521BC();
  sub_237A886B8();
  v9 = v3[1];
  v14 = *v3;
  v15 = v9;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_23786FAA0(&qword_256820580, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_237A882B0();
  if (!v2)
  {
    v10 = v3[3];
    v14 = v3[2];
    v15 = v10;
    v13 = 1;
    sub_237A882B0();
    v14 = v3[4];
    v13 = 2;
    type metadata accessor for CGSize(0);
    sub_23786FAA0(&qword_256823300, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_237A882B0();
    LOBYTE(v14) = 3;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_237A4DF70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A4DFA4 + 4 * byte_237AA83F0[*v0]))(0xD000000000000012, 0x8000000237AB2920);
}

uint64_t sub_237A4DFA4()
{
  return 0x676E69646E756F62;
}

uint64_t sub_237A4DFC4()
{
  return 0x65636E61766461;
}

uint64_t sub_237A4DFDC()
{
  return 0x7365746968577369;
}

uint64_t sub_237A4DFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A51CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A4E020()
{
  sub_237A521BC();
  return sub_237A88718();
}

uint64_t sub_237A4E048()
{
  sub_237A521BC();
  return sub_237A88724();
}

double sub_237A4E070@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  char v8;

  sub_237A50A74(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_BYTE *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_237A4E0C8(_QWORD *a1)
{
  return sub_237A4DD88(a1);
}

uint64_t sub_237A4E0DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A4E114 + 4 * byte_237AA83F4[a1]))(0x6574636172616863, 0xEA00000000007372);
}

uint64_t sub_237A4E114()
{
  return 0x746867696568;
}

uint64_t sub_237A4E128()
{
  return 0x6769724F656E696CLL;
}

unint64_t sub_237A4E148()
{
  return 0xD000000000000010;
}

unint64_t sub_237A4E164()
{
  return 0xD000000000000013;
}

uint64_t sub_237A4E184()
{
  return 0x54676E696E72656BLL;
}

uint64_t sub_237A4E1A4()
{
  return 0x656C62617473;
}

uint64_t sub_237A4E1B8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829320);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A51340();
  sub_237A886B8();
  v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829330);
  sub_237A51384();
  sub_237A882B0();
  if (!v2)
  {
    v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_23787ADF8();
    sub_237A882B0();
    v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_237A882B0();
    LOBYTE(v11) = 3;
    sub_237A88280();
    LOBYTE(v11) = 4;
    sub_237A88280();
    v11 = v3[4];
    HIBYTE(v10) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256829348);
    sub_237A51434();
    sub_237A882B0();
    LOBYTE(v11) = 6;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_237A4E40C()
{
  unsigned __int8 *v0;

  return sub_237A4E0DC(*v0);
}

uint64_t sub_237A4E414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A51EB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A4E438()
{
  sub_237A51340();
  return sub_237A88718();
}

uint64_t sub_237A4E460()
{
  sub_237A51340();
  return sub_237A88724();
}

double sub_237A4E488@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_237A50CEC(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_237A4E4C8(_QWORD *a1)
{
  return sub_237A4E1B8(a1);
}

uint64_t UIFontDescriptorSystemDesign.init(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[40];

  sub_23787076C(a1, (uint64_t)v5);
  sub_237A87884();
  if (!v1)
  {
    v2 = sub_237A877F4();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_2Tm(a1);
  return v2;
}

uint64_t UIFontDescriptorSystemDesign.encode(to:)()
{
  sub_237A87818();
  sub_237A878F0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A4E5B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[40];

  sub_23787076C(a1, (uint64_t)v7);
  sub_237A87884();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm(a1);
  v6 = sub_237A877F4();
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_2Tm(a1);
  *a2 = v6;
  return result;
}

uint64_t sub_237A4E63C()
{
  sub_237A87818();
  sub_237A878F0();
  return swift_bridgeObjectRelease();
}

double UIFontWeight.init(from:)(uint64_t a1)
{
  return sub_237A51024(a1);
}

uint64_t UIFontWeight.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886AC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_237A8846C();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

void sub_237A4E73C(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  double v4;

  v4 = sub_237A51024(a1);
  if (!v2)
    *a2 = v4;
}

uint64_t sub_237A4E764(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886AC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_237A8846C();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

void sub_237A4E7F4(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v42 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_2378D2DB8(v7, v6);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2378C40AC();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v6;
    *(_QWORD *)(v20[7] + 8 * v11) = v8;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v42 - 1;
    if (v42 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 9;
    while (1)
    {
      v28 = *(v26 - 2);
      v27 = *(v26 - 1);
      v29 = *v26;
      v30 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = sub_2378D2DB8(v28, v27);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v23 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v23)
        break;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_2378C778C(v35, 1);
        v31 = sub_2378D2DB8(v28, v27);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_25;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v38 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v28;
      v39[1] = v27;
      *(_QWORD *)(v38[7] + 8 * v31) = v29;
      v40 = v38[2];
      v23 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v23)
        goto LABEL_24;
      v38[2] = v41;
      v26 += 3;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2378C778C(v14, a2 & 1);
  v16 = sub_2378D2DB8(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_237A8858C();
  __break(1u);
LABEL_26:
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A880AC();
  __break(1u);
}

void sub_237A4EB84(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v31 = v3;
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v4 = 0;
  v5 = (uint64_t *)(a1 + 64);
  while (1)
  {
    if (v4 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_237A8858C();
      __break(1u);
      goto LABEL_24;
    }
    v7 = *(v5 - 4);
    v6 = *(v5 - 3);
    v9 = *(v5 - 2);
    v8 = *(v5 - 1);
    v11 = *v5;
    v10 = v5[1];
    v12 = v5[2];
    v13 = v5[3];
    v39 = v5[5];
    v40 = v5[4];
    v37 = v5[7];
    v38 = v5[6];
    v36 = *((_BYTE *)v5 + 64);
    swift_bridgeObjectRetain();
    if (!v6)
      goto LABEL_18;
    v33 = v13;
    v34 = v12;
    v35 = v10;
    v14 = (_QWORD *)*a3;
    v16 = sub_2378D2DB8(v7, v6);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_21;
    v20 = v15;
    if (v14[3] < v19)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_2378C4260();
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v23 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = (uint64_t *)(v23[6] + 16 * v16);
    *v24 = v7;
    v24[1] = v6;
    v25 = v23[7] + 88 * v16;
    *(_QWORD *)v25 = v9;
    *(_QWORD *)(v25 + 8) = v8;
    *(_QWORD *)(v25 + 16) = v11;
    *(_QWORD *)(v25 + 24) = v35;
    *(_QWORD *)(v25 + 32) = v34;
    *(_QWORD *)(v25 + 40) = v33;
    *(_QWORD *)(v25 + 48) = v40;
    *(_QWORD *)(v25 + 56) = v39;
    *(_QWORD *)(v25 + 64) = v38;
    *(_QWORD *)(v25 + 72) = v37;
    *(_BYTE *)(v25 + 80) = v36;
    v26 = v23[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_22;
    ++v4;
    v23[2] = v28;
    v5 += 13;
    a2 = 1;
    if (v31 == v4)
      goto LABEL_18;
  }
  sub_2378C7AA0(v19, a2 & 1);
  v21 = sub_2378D2DB8(v7, v6);
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_23;
  v16 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v29 = (void *)swift_allocError();
  swift_willThrow();
  v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A880AC();
  __break(1u);
}

void sub_237A4EECC(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v8 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  v12 = sub_2378D2DB8(v8, v7);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (v10[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2378C6F80();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v22 = (uint64_t *)(v21[6] + 16 * v12);
    *v22 = v8;
    v22[1] = v7;
    *(_QWORD *)(v21[7] + 8 * v12) = v9;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = a1 + 9;
    while (1)
    {
      v29 = *(v27 - 2);
      v28 = *(v27 - 1);
      v30 = *v27;
      v31 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      v32 = sub_2378D2DB8(v29, v28);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v24 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v24)
        break;
      v37 = v33;
      if (v31[3] < v36)
      {
        sub_2378CCAE8(v36, 1);
        v32 = sub_2378D2DB8(v29, v28);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v29;
      v40[1] = v28;
      *(_QWORD *)(v39[7] + 8 * v32) = v30;
      v41 = v39[2];
      v24 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v24)
        goto LABEL_24;
      v39[2] = v42;
      v27 += 3;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2378CCAE8(v15, a2 & 1);
  v17 = sub_2378D2DB8(v8, v7);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_237A8858C();
  __break(1u);
LABEL_26:
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A880AC();
  __break(1u);
}

__n128 sub_237A4F24C(unint64_t *a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, _QWORD *a9, uint64_t a10)
{
  uint64_t v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;
  __int16 v14;
  double v15;
  unint64_t v17;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  __n128 *v28;
  __n128 result;
  __n128 v30;
  __n128 v31;
  __n128 v32;

  v17 = *a1;
  if (__OFADD__(a5, *a1))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = a3;
  v13 = a9;
  v12 = a8;
  v10 = a6;
  v14 = -32524;
  sub_237A878C0();
  a2 = sub_237A87968();
  v11 = v19;
  v20 = a2 == 3081666804 && v19 == 0xA400000000000000;
  if (v20 || (sub_237A8840C() & 1) != 0)
  {
    v21 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v21)
    {
      v22 = *(_QWORD *)v10 + 88 * v21;
      v23 = *(_QWORD *)(v22 - 56) == 3081666804 && *(_QWORD *)(v22 - 48) == 0xA400000000000000;
      if (v23 || (sub_237A8840C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v11 = 0xA400000000000000;
        a2 = 3098444020;
      }
    }
  }
  if ((v17 & 0x8000000000000000) != 0)
    goto LABEL_23;
  if (v17 >= *(_QWORD *)(*(_QWORD *)a7 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v17 >= *(_QWORD *)(*v13 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v17 < *(_QWORD *)(*(_QWORD *)a10 + 16))
  {
    v14 = *(_WORD *)(*(_QWORD *)a7 + 2 * v17 + 32);
    v24 = *v13 + 32 * v17;
    v31 = *(__n128 *)(v24 + 48);
    v32 = *(__n128 *)(v24 + 32);
    v30 = *(__n128 *)(*(_QWORD *)a10 + 16 * v17 + 32);
    v13 = *(_QWORD **)v10;
    v12 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v10 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_19;
    goto LABEL_27;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  v13 = sub_237896C3C(0, v13[2] + 1, 1, v13);
  *(_QWORD *)v10 = v13;
LABEL_19:
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
  {
    v13 = sub_237896C3C((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
    *(_QWORD *)v10 = v13;
  }
  v13[2] = v27 + 1;
  v28 = (__n128 *)&v13[11 * v27];
  v28[2].n128_u64[0] = a2;
  v28[2].n128_u64[1] = v11;
  v28[3].n128_u16[0] = v14;
  v28[3].n128_u64[1] = (unint64_t)v12;
  v28[4] = v32;
  v28[5] = v31;
  result = v30;
  v28[6] = v30;
  v28[7].n128_f64[0] = v15;
  return result;
}

uint64_t sub_237A4F488(CTRunRef *a1)
{
  const __CTRun *v1;
  uint64_t result;
  uint64_t v3;

  v1 = *a1;
  CTRunGetGlyphCount(*a1);
  CTRunGetAttributes(v1);
  v3 = 0;
  result = sub_237A8765C();
  __break(1u);
  return result;
}

uint64_t sub_237A4F794(const __CTFrame *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = MEMORY[0x24BEE4AF8];
  CTFrameGetLines(a1);
  v2 = 0;
  type metadata accessor for CTLine(0);
  sub_237A87A88();
  __break(1u);
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t sub_237A4FAD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  CGFloat *v4;
  double v5;
  double v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double MaxX;
  double Height;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  const __CTFont *v26;
  CGFloat v27;
  double Ascent;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v2 = sub_237A4C014(a1);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (CGFloat *)(v2 + 56);
    v5 = 0.0;
    v6 = 0.0;
    do
    {
      v7 = *(v4 - 3);
      v8 = *(v4 - 2);
      v9 = *(v4 - 1);
      v10 = *v4;
      v55.origin.x = v7;
      v55.origin.y = v8;
      v55.size.width = v9;
      v55.size.height = *v4;
      MaxX = CGRectGetMaxX(v55);
      v56.origin.x = v7;
      v56.origin.y = v8;
      v56.size.width = v9;
      v56.size.height = v10;
      Height = CGRectGetHeight(v56);
      if (v5 <= Height)
        v5 = Height;
      v6 = v6 + MaxX;
      v4 += 4;
      --v3;
    }
    while (v3);
  }
  else
  {
    v6 = 0.0;
    v5 = 0.0;
  }
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v44 = ceil(sqrt(v6 * v5));
    v54 = MEMORY[0x24BEE4AF8];
    sub_2379D6364(0, v13, 0);
    v14 = v54;
    v43 = v5 + 1.0;
    v15 = a1 + 56;
    v52 = 1.0;
    v53 = 1.0;
    v16 = 1.0;
    v17 = 1.0;
    do
    {
      v19 = *(_QWORD *)(v15 - 24);
      v18 = *(_QWORD *)(v15 - 16);
      v20 = *(_WORD *)(v15 - 8);
      v21 = *(void **)v15;
      v23 = *(double *)(v15 + 8);
      v22 = *(double *)(v15 + 16);
      v24 = *(double *)(v15 + 24);
      v25 = *(double *)(v15 + 32);
      v46 = *(_QWORD *)(v15 + 48);
      v47 = *(_QWORD *)(v15 + 40);
      v45 = *(_QWORD *)(v15 + 56);
      swift_bridgeObjectRetain();
      v26 = v21;
      v57.origin.x = v23;
      v49 = v24;
      v50 = v22;
      v57.origin.y = v22;
      v57.size.width = v24;
      v48 = v25;
      v57.size.height = v25;
      v27 = ceil(CGRectGetMaxX(v57)) - floor(v23);
      Ascent = CTFontGetAscent(v26);
      v58.size.height = ceil(Ascent + CTFontGetDescent(v26));
      v58.origin.x = 1.0;
      v58.origin.y = 1.0;
      v58.size.width = v27;
      v59 = CGRectInset(v58, -1.0, -1.0);
      v60 = CGRectOffset(v59, v17, v16);
      x = v60.origin.x;
      y = v60.origin.y;
      width = v60.size.width;
      v32 = v60.size.height;
      v33 = CGRectGetMaxX(v60) + 1.0;
      if (v44 >= v33)
        v34 = -0.0;
      else
        v34 = v43;
      if (v44 < v33)
        v33 = 1.0;
      v51 = v33;
      v61.origin.x = x;
      v61.origin.y = y;
      v61.size.width = width;
      v61.size.height = v32;
      v35 = CGRectGetMaxX(v61) + 1.0;
      v36 = v52;
      if (v52 <= v35)
        v36 = v35;
      v52 = v36;
      v62.origin.x = x;
      v62.origin.y = y;
      v62.size.width = width;
      v62.size.height = v32;
      v37 = CGRectGetMaxY(v62) + 1.0;
      v38 = v53;
      if (v53 <= v37)
        v38 = v37;
      v53 = v38;
      v40 = *(_QWORD *)(v54 + 16);
      v39 = *(_QWORD *)(v54 + 24);
      if (v40 >= v39 >> 1)
        sub_2379D6364(v39 > 1, v40 + 1, 1);
      v16 = v16 + v34;
      *(_QWORD *)(v54 + 16) = v40 + 1;
      v41 = v54 + 120 * v40;
      *(_QWORD *)(v41 + 32) = v19;
      *(_QWORD *)(v41 + 40) = v18;
      *(_WORD *)(v41 + 48) = v20;
      *(_QWORD *)(v41 + 56) = v26;
      *(double *)(v41 + 64) = v23;
      *(CGFloat *)(v41 + 72) = v50;
      *(CGFloat *)(v41 + 80) = v49;
      *(CGFloat *)(v41 + 88) = v48;
      *(_QWORD *)(v41 + 96) = v47;
      *(_QWORD *)(v41 + 104) = v46;
      *(_QWORD *)(v41 + 112) = v45;
      *(CGFloat *)(v41 + 120) = x;
      *(CGFloat *)(v41 + 128) = y;
      *(CGFloat *)(v41 + 136) = width;
      v15 += 88;
      *(CGFloat *)(v41 + 144) = v32;
      --v13;
      v17 = v51;
    }
    while (v13);
  }
  return v14;
}

void *sub_237A4FDE8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  BOOL v7;
  uint64_t v8;
  char v9;
  void *v11;

  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_237A880C4();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 4;
      do
      {
        v5 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = (void *)MEMORY[0x23B81EBEC](v4 - 4, a1);
          v7 = __OFADD__(v5, 1);
          v8 = v4 - 3;
          if (v7)
            goto LABEL_16;
        }
        else
        {
          v6 = *(void **)(a1 + 8 * v4);
          swift_unknownObjectRetain();
          v7 = __OFADD__(v5, 1);
          v8 = v4 - 3;
          if (v7)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v11 = v6;
        v9 = sub_2378DFD6C(&v11);
        if (v1)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v6;
        }
        if ((v9 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        ++v4;
      }
      while (v8 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_237A4FF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t i;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v27;
  int64_t v28;

  v23 = a1 + 56;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3)
    goto LABEL_6;
LABEL_7:
  v6 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_34:
    __break(1u);
  }
  else
  {
    if (v6 >= v24)
      goto LABEL_32;
    v7 = *(_QWORD *)(v23 + 8 * v6);
    v8 = v4 + 1;
    if (v7)
      goto LABEL_22;
    v8 = v4 + 2;
    if (v4 + 2 >= v24)
      goto LABEL_32;
    v7 = *(_QWORD *)(v23 + 8 * v8);
    if (v7)
      goto LABEL_22;
    v8 = v4 + 3;
    if (v4 + 3 >= v24)
      goto LABEL_32;
    v7 = *(_QWORD *)(v23 + 8 * v8);
    if (v7)
      goto LABEL_22;
    v8 = v4 + 4;
    if (v4 + 4 >= v24)
      goto LABEL_32;
    v7 = *(_QWORD *)(v23 + 8 * v8);
    if (v7)
      goto LABEL_22;
    v9 = v4 + 5;
    if (v4 + 5 >= v24)
    {
LABEL_32:
      swift_release();
      return (uint64_t)v22;
    }
    v7 = *(_QWORD *)(v23 + 8 * v9);
    if (v7)
    {
      v8 = v4 + 5;
LABEL_22:
      v27 = (v7 - 1) & v7;
      v28 = v8;
      for (i = __clz(__rbit64(v7)) + (v8 << 6); ; i = __clz(__rbit64(v3)) | (v4 << 6))
      {
        v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
        v11 = *v10;
        v12 = v10[1];
        swift_bridgeObjectRetain();
        sub_237A8771C();
        v25 = v11;
        sub_237A8771C();
        sub_237A8771C();
        v13 = sub_237A4C888();
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v13 + 16))
          break;
        v14 = *(double *)(v13 + 32);
        swift_bridgeObjectRelease();
        v15 = sub_237A4C888();
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v15 + 16))
        {
          __break(1u);
          goto LABEL_34;
        }
        v16 = *(double *)(v15 + 32);
        swift_bridgeObjectRelease();
        v17 = v16 - v14;
        if (v17 == 0.0)
        {
          swift_bridgeObjectRelease();
          v4 = v28;
          v3 = v27;
          if (!v27)
            goto LABEL_7;
        }
        else
        {
          v4 = v28;
          v3 = v27;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_237896904(0, v22[2] + 1, 1, v22);
          v19 = v22[2];
          v18 = v22[3];
          if (v19 >= v18 >> 1)
            v22 = sub_237896904((_QWORD *)(v18 > 1), v19 + 1, 1, v22);
          v22[2] = v19 + 1;
          v20 = (double *)&v22[3 * v19];
          *((_QWORD *)v20 + 4) = v25;
          *((_QWORD *)v20 + 5) = v12;
          v20[6] = v17;
          if (!v27)
            goto LABEL_7;
        }
LABEL_6:
        v27 = (v3 - 1) & v3;
        v28 = v4;
      }
      goto LABEL_36;
    }
    while (1)
    {
      v8 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      if (v8 >= v24)
        goto LABEL_32;
      v7 = *(_QWORD *)(v23 + 8 * v8);
      ++v9;
      if (v7)
        goto LABEL_22;
    }
  }
  __break(1u);
LABEL_36:
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t sub_237A502C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v7 = a1;
  v35 = MEMORY[0x24BEE4AF8];
  sub_2379D639C(0, v5, 0);
  v6 = v35;
  v8 = sub_237A49E1C(v7);
  v10 = v9;
  v12 = v11 & 1;
  v29 = v7;
  v30 = v7 + 56;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(v7 + 32))
  {
    if (((*(_QWORD *)(v30 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_17;
    if (*(_DWORD *)(v7 + 36) != (_DWORD)v10)
      goto LABEL_18;
    v33 = v12;
    v13 = v6;
    v14 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v8);
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain_n();
    v17 = a3;
    v18 = sub_237A4FF24(a2);

    if (*(_QWORD *)(v18 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F0);
      v19 = sub_237A880E8();
    }
    else
    {
      v19 = MEMORY[0x24BEE4B00];
    }
    v6 = v13;
    v34 = v19;
    v20 = (_QWORD *)swift_bridgeObjectRetain();
    sub_237A4EECC(v20, 1, &v34);
    if (v4)
      goto LABEL_19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v34;
    v35 = v6;
    v23 = *(_QWORD *)(v6 + 16);
    v22 = *(_QWORD *)(v6 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_2379D639C(v22 > 1, v23 + 1, 1);
      v6 = v35;
    }
    *(_QWORD *)(v6 + 16) = v23 + 1;
    v24 = (_QWORD *)(v6 + 24 * v23);
    v24[4] = v16;
    v24[5] = v15;
    v24[6] = v21;
    v7 = v29;
    v25 = sub_237A49EC0(v8, v10, v33 & 1, v29);
    v8 = v25;
    v10 = v26;
    v12 = v27 & 1;
    --v5;
    v4 = 0;
    if (!v5)
    {
      sub_237A4BF30(v25, v26, v12);
      return v6;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_237A50514(double a1, double a2)
{
  double v2;
  double v3;
  CGColorSpace *v4;
  CGColorSpace *v5;
  CGContextRef v6;
  uint64_t result;

  v2 = ceil(a1);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = ceil(a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF318]);
  if (v4)
  {
    v5 = v4;
    v6 = CGBitmapContextCreate(0, (uint64_t)v2, (uint64_t)v3, 8uLL, 0, v4, 1u);

    if (v6)
      return (uint64_t)v6;
  }
LABEL_16:
  result = sub_237A880AC();
  __break(1u);
  return result;
}

id sub_237A50650(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  CGContext *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  void *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  char *v34;
  CGGlyph v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  const __CTFont *v41;
  CGPathRef PathForGlyph;
  const CGPath *v43;
  CGColor *GenericGray;
  uint64_t v45;
  CGImageRef Image;
  CGImageRef v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  CGRect v58;
  CGRect v59;

  v6 = sub_237A865C4();
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (CGContext *)sub_237A50514(a2, a3);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v11 = MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v32)
      goto LABEL_12;
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v50 = a1;
  v10 = a1 + 72;
  v11 = MEMORY[0x24BEE4AF8];
  v51 = v6;
  do
  {
    v12 = *(_QWORD *)(v10 - 40);
    v13 = *(_QWORD *)(v10 - 32);
    v14 = *(_WORD *)(v10 - 24);
    v15 = *(void **)(v10 - 16);
    v16 = *(double *)(v10 - 8);
    v17 = *(double *)v10;
    v18 = *(double *)(v10 + 8);
    v19 = *(double *)(v10 + 16);
    v20 = *(_QWORD *)(v10 + 24);
    v21 = *(_QWORD *)(v10 + 32);
    v22 = *(_QWORD *)(v10 + 40);
    v23 = *(_QWORD *)(v10 + 48);
    v24 = *(_QWORD *)(v10 + 56);
    v55 = *(_QWORD *)(v10 + 64);
    v56 = v24;
    v54 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v25 = v15;
    v59.origin.x = 0.0;
    v59.origin.y = 0.0;
    v59.size.width = 0.0;
    v59.size.height = 0.0;
    v58.origin.x = v16;
    v58.origin.y = v17;
    v58.size.width = v18;
    v58.size.height = v19;
    if (CGRectEqualToRect(v58, v59))
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v57 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2379D6364(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v57;
      }
      v28 = *(_QWORD *)(v11 + 16);
      v27 = *(_QWORD *)(v11 + 24);
      v29 = v11;
      if (v28 >= v27 >> 1)
      {
        sub_2379D6364(v27 > 1, v28 + 1, 1);
        v29 = v57;
      }
      *(_QWORD *)(v29 + 16) = v28 + 1;
      v30 = v29 + 120 * v28;
      *(_QWORD *)(v30 + 32) = v12;
      *(_QWORD *)(v30 + 40) = v13;
      *(_WORD *)(v30 + 48) = v14;
      *(_QWORD *)(v30 + 56) = v25;
      *(CGFloat *)(v30 + 64) = v16;
      *(CGFloat *)(v30 + 72) = v17;
      *(CGFloat *)(v30 + 80) = v18;
      *(CGFloat *)(v30 + 88) = v19;
      *(_QWORD *)(v30 + 96) = v20;
      *(_QWORD *)(v30 + 104) = v21;
      *(_QWORD *)(v30 + 112) = v22;
      *(_QWORD *)(v30 + 120) = v23;
      v31 = v55;
      *(_QWORD *)(v30 + 128) = v56;
      *(_QWORD *)(v30 + 136) = v31;
      *(_QWORD *)(v30 + 144) = v54;
      v6 = v51;
      v11 = v29;
    }
    v10 += 120;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v11 + 16);
  if (!v32)
    goto LABEL_17;
LABEL_12:
  LODWORD(v56) = *MEMORY[0x24BDBD730];
  swift_retain();
  v55 = v11;
  v33 = (double *)(v11 + 64);
  v34 = v52;
  do
  {
    v35 = *((_WORD *)v33 - 8);
    v36 = (void *)*((_QWORD *)v33 - 1);
    v37 = *v33;
    v38 = v33[6];
    v39 = v33[7];
    v40 = v33[8];
    swift_bridgeObjectRetain();
    v41 = v36;
    PathForGlyph = CTFontCreatePathForGlyph(v41, v35, 0);
    if (!PathForGlyph)
      goto LABEL_20;
    v43 = PathForGlyph;
    CGContextSaveGState(v8);
    CGContextTranslateCTM(v8, v39 + 1.0 - v37, v38 + v40 + 1.0);
    GenericGray = CGColorCreateGenericGray(1.0, 1.0);
    CGContextSetFillColorWithColor(v8, GenericGray);

    CGContextAddPath(v8, v43);
    v45 = v53;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v34, v56, v6);
    sub_237A87D28();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v6);
    CGContextRestoreGState(v8);

    swift_bridgeObjectRelease();
    v33 += 15;
    --v32;
  }
  while (v32);
  swift_release_n();
LABEL_18:
  Image = CGBitmapContextCreateImage(v8);
  if (!Image)
  {
    while (1)
    {
LABEL_20:
      sub_237A880AC();
      __break(1u);
    }
  }
  v47 = Image;
  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_initWithCGImage_, Image);

  return v48;
}

uint64_t sub_237A50A74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568293D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A521BC();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  type metadata accessor for CGRect(0);
  v26 = 0;
  sub_23786FAA0(&qword_2568205C8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
  sub_237A881F0();
  v9 = v22;
  v10 = v23;
  v11 = v24;
  v12 = v25;
  v26 = 1;
  sub_237A881F0();
  v13 = v22;
  v14 = v23;
  v15 = v24;
  v16 = v25;
  type metadata accessor for CGSize(0);
  v26 = 2;
  sub_23786FAA0(&qword_256823310, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
  sub_237A881F0();
  v20 = v23;
  v21 = v22;
  LOBYTE(v22) = 3;
  v17 = sub_237A881C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  *(_QWORD *)(a2 + 48) = v15;
  *(_QWORD *)(a2 + 56) = v16;
  v19 = v20;
  *(_QWORD *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v19;
  *(_BYTE *)(a2 + 80) = v17 & 1;
  return result;
}

uint64_t sub_237A50CEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568293A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A51340();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829330);
  v20 = 0;
  sub_237A52200();
  sub_237A881F0();
  v9 = v21;
  v20 = 1;
  sub_23787AE3C();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v10 = v21;
  v20 = 2;
  sub_237A881F0();
  v11 = v21;
  LOBYTE(v21) = 3;
  v12 = sub_237A881C0();
  LOBYTE(v21) = 4;
  v19 = sub_237A881C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829348);
  v20 = 5;
  sub_237A522B0();
  sub_237A881F0();
  v13 = v21;
  LOBYTE(v21) = 6;
  v18 = v13;
  swift_bridgeObjectRetain();
  v14 = sub_237A881C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v19 & 1;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v16 = v18;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 24) = v12 & 1;
  *(_BYTE *)(a2 + 25) = v15;
  *(_QWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 40) = v14 & 1;
  return result;
}

double sub_237A51024(uint64_t a1)
{
  double v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  double v12;
  _QWORD v14[3];
  uint64_t v15;
  char *v16;
  _QWORD v17[4];
  _QWORD v18[4];

  v3 = sub_237A87FA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237A87FB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_23787076C(a1, (uint64_t)v18);
  __swift_project_boxed_opaque_existential_2Tm(v18, v18[3]);
  v11 = v16;
  sub_237A8867C();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_2Tm(v15);
  }
  else
  {
    v16 = v10;
    v14[1] = v4;
    v14[2] = v8;
    v14[0] = v6;
    __swift_project_boxed_opaque_existential_2Tm(v17, v17[3]);
    sub_237A88424();
    v1 = v12;
    __swift_destroy_boxed_opaque_existential_2Tm(v15);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v17);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  return v1;
}

unint64_t sub_237A51340()
{
  unint64_t result;

  result = qword_256829328;
  if (!qword_256829328)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA864C, &type metadata for FontLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829328);
  }
  return result;
}

unint64_t sub_237A51384()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256829338;
  if (!qword_256829338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829330);
    v2 = sub_237A513F0();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256829338);
  }
  return result;
}

unint64_t sub_237A513F0()
{
  unint64_t result;

  result = qword_256829340;
  if (!qword_256829340)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8624, &type metadata for FontLayoutData.CharacterData);
    atomic_store(result, (unint64_t *)&qword_256829340);
  }
  return result;
}

unint64_t sub_237A51434()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256829350;
  if (!qword_256829350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829348);
    v2 = sub_237A514A0();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256829350);
  }
  return result;
}

unint64_t sub_237A514A0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256829358;
  if (!qword_256829358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829360);
    v2 = sub_23787ADF8();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256829358);
  }
  return result;
}

uint64_t initializeWithCopy for GlyphData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for GlyphData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for GlyphData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for GlyphData()
{
  return &type metadata for GlyphData;
}

void destroy for PositionedGlyphData(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for PositionedGlyphData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  __int128 v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for PositionedGlyphData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithTake for PositionedGlyphData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

ValueMetadata *type metadata accessor for PositionedGlyphData()
{
  return &type metadata for PositionedGlyphData;
}

uint64_t storeEnumTagSinglePayload for FontLayoutData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_237A51890 + 4 * byte_237AA8400[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_237A518C4 + 4 * byte_237AA83FB[v4]))();
}

uint64_t sub_237A518C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A518CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A518D4);
  return result;
}

uint64_t sub_237A518E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A518E8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_237A518EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A518F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FontLayoutData.CodingKeys()
{
  return &type metadata for FontLayoutData.CodingKeys;
}

uint64_t destroy for FontLayoutData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FontLayoutData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FontLayoutData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FontLayoutData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FontLayoutData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FontLayoutData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FontLayoutData()
{
  return &type metadata for FontLayoutData;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FontLayoutData.CharacterData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 80);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FontLayoutData.CharacterData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FontLayoutData.CharacterData()
{
  return &type metadata for FontLayoutData.CharacterData;
}

unint64_t sub_237A51C00()
{
  unint64_t result;

  result = qword_256829380;
  if (!qword_256829380)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA85FC, &type metadata for FontLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829380);
  }
  return result;
}

unint64_t sub_237A51C48()
{
  unint64_t result;

  result = qword_256829388;
  if (!qword_256829388)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA856C, &type metadata for FontLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829388);
  }
  return result;
}

unint64_t sub_237A51C90()
{
  unint64_t result;

  result = qword_256829390;
  if (!qword_256829390)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8594, &type metadata for FontLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829390);
  }
  return result;
}

uint64_t sub_237A51CD4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB2920 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E61766461 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365746968577369 && a2 == 0xEC00000065636170)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237A51EB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574636172616863 && a2 == 0xEA00000000007372;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6769724F656E696CLL && a2 == 0xEB00000000596E69 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB28E0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB2900 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54676E696E72656BLL && a2 == 0xEC000000656C6261 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C62617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_237A521BC()
{
  unint64_t result;

  result = qword_2568293A0;
  if (!qword_2568293A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA877C, &type metadata for FontLayoutData.CharacterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568293A0);
  }
  return result;
}

unint64_t sub_237A52200()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568293B0;
  if (!qword_2568293B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829330);
    v2 = sub_237A5226C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568293B0);
  }
  return result;
}

unint64_t sub_237A5226C()
{
  unint64_t result;

  result = qword_2568293B8;
  if (!qword_2568293B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA851C, &type metadata for FontLayoutData.CharacterData);
    atomic_store(result, (unint64_t *)&qword_2568293B8);
  }
  return result;
}

unint64_t sub_237A522B0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568293C0;
  if (!qword_2568293C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829348);
    v2 = sub_237A5231C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568293C0);
  }
  return result;
}

unint64_t sub_237A5231C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568293C8;
  if (!qword_2568293C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256829360);
    v2 = sub_23787AE3C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568293C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FontLayoutData.CharacterData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A523D4 + 4 * byte_237AA840A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A52408 + 4 * byte_237AA8405[v4]))();
}

uint64_t sub_237A52408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A52410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A52418);
  return result;
}

uint64_t sub_237A52424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A5242CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A52430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A52438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FontLayoutData.CharacterData.CodingKeys()
{
  return &type metadata for FontLayoutData.CharacterData.CodingKeys;
}

unint64_t sub_237A52458()
{
  unint64_t result;

  result = qword_2568293D8;
  if (!qword_2568293D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8754, &type metadata for FontLayoutData.CharacterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568293D8);
  }
  return result;
}

unint64_t sub_237A524A0()
{
  unint64_t result;

  result = qword_2568293E0;
  if (!qword_2568293E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA86C4, &type metadata for FontLayoutData.CharacterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568293E0);
  }
  return result;
}

unint64_t sub_237A524E8()
{
  unint64_t result;

  result = qword_2568293E8;
  if (!qword_2568293E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA86EC, &type metadata for FontLayoutData.CharacterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568293E8);
  }
  return result;
}

void Wallpaper.assets.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_237A52584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v6 + 56) = &type metadata for CAPackageAsset;
  *(_QWORD *)(v6 + 64) = &protocol witness table for CAPackageAsset;
  v7 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v6 + 32) = v7;
  v7[2] = v3;
  v7[3] = v2;
  v7[4] = v1;
  v7[5] = v4;
  v7[6] = v0;
  return v6;
}

uint64_t sub_237A52794()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237A527C8()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void Wallpaper.restoreAssets(from:)()
{
  __asm { BR              X10 }
}

void sub_237A52864()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v24 = v4;
  v22 = v3;
  v23 = v0;
  *(_QWORD *)(v14 - 144) = v7;
  *(_QWORD *)(v14 - 136) = v1;
  *(_QWORD *)(v14 - 128) = v13;
  *(_QWORD *)(v14 - 120) = v8;
  *(_BYTE *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 104) = v2;
  v25 = v1;
  v26 = v7;
  v15 = v8;
  v16 = v8;
  v17 = v2;
  sub_237870090(v7, v1, v13, v16, v11);
  v18 = *(_QWORD *)(v14 - 72);
  ImageAsset.restore(from:)(v12);
  *(_QWORD *)(v14 - 72) = v18;
  if (v18)
  {
    sub_2378702E0(*(void **)(v14 - 144), *(_QWORD *)(v14 - 136), *(void **)(v14 - 128), *(_QWORD *)(v14 - 120), *(_BYTE *)(v14 - 112));
  }
  else
  {
    sub_23793F258(v26, v25, v13, v15, v11, v17, v23, v6, v22, v24, v9);
    v19 = *(unsigned __int8 *)(v14 - 112);
    v20 = *(_QWORD *)(v14 - 104);
    v21 = *(_OWORD *)(v14 - 128);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v14 - 144);
    *(_OWORD *)(v10 + 48) = v21;
    *(_QWORD *)(v10 + 64) = v19;
    *(_QWORD *)(v10 + 72) = v20;
    *v5 = 0u;
    v5[1] = 0u;
    *(_OWORD *)(v10 + 112) = xmmword_237A971A0;
  }
}

uint64_t Wallpaper.Traits.supportsDashBoardPlatterMaterials.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Wallpaper.Traits.supportsDashBoardPlatterMaterials.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Wallpaper.Traits.supportsDashBoardPlatterMaterials.modify())()
{
  return nullsub_1;
}

uint64_t Wallpaper.Traits.iconLabelsRequireBackground.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Wallpaper.Traits.iconLabelsRequireBackground.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*Wallpaper.Traits.iconLabelsRequireBackground.modify())()
{
  return nullsub_1;
}

uint64_t Wallpaper.Traits.hideRoundedCorners.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Wallpaper.Traits.hideRoundedCorners.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*Wallpaper.Traits.hideRoundedCorners.modify())()
{
  return nullsub_1;
}

uint64_t Wallpaper.Traits.isBlack.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t Wallpaper.Traits.isBlack.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*Wallpaper.Traits.isBlack.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::Wallpaper::Traits __swiftcall Wallpaper.Traits.init(supportsDashBoardPlatterMaterials:iconLabelsRequireBackground:hideRoundedCorners:isBlack:)(Swift::Bool supportsDashBoardPlatterMaterials, Swift::Bool iconLabelsRequireBackground, Swift::Bool hideRoundedCorners, Swift::Bool isBlack)
{
  Swift::Bool *v4;
  CarPlayAssetUI::Wallpaper::Traits result;

  *v4 = supportsDashBoardPlatterMaterials;
  v4[1] = iconLabelsRequireBackground;
  v4[2] = hideRoundedCorners;
  v4[3] = isBlack;
  result.supportsDashBoardPlatterMaterials = supportsDashBoardPlatterMaterials;
  return result;
}

uint64_t Wallpaper.Traits.hash(into:)()
{
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  return sub_237A885EC();
}

uint64_t sub_237A52EE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237A52F24 + 4 * byte_237AA87E2[a1]))(0xD000000000000021, 0x8000000237AB2940);
}

uint64_t sub_237A52F24()
{
  uint64_t v0;

  return v0 + 9;
}

unint64_t sub_237A52F3C()
{
  return 0xD000000000000012;
}

uint64_t sub_237A52F58()
{
  return 0x6B63616C427369;
}

uint64_t sub_237A52F70()
{
  unsigned __int8 *v0;

  return sub_237A52EE8(*v0);
}

uint64_t sub_237A52F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A59804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A52F9C()
{
  sub_237A57BB8();
  return sub_237A88718();
}

uint64_t sub_237A52FC4()
{
  sub_237A57BB8();
  return sub_237A88724();
}

uint64_t Wallpaper.Traits.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  _DWORD v10[7];
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829450);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[6] = v1[1];
  v8 = v1[2];
  v10[2] = v1[3];
  v10[3] = v8;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A57BB8();
  sub_237A886B8();
  v14 = 0;
  sub_237A88280();
  if (!v2)
  {
    v13 = 1;
    sub_237A88280();
    v12 = 2;
    sub_237A88280();
    v11 = 3;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Wallpaper.Traits.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  return sub_237A88610();
}

uint64_t Wallpaper.Traits.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829460);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A57BB8();
  sub_237A88688();
  if (!v2)
  {
    v18 = 0;
    v9 = sub_237A881C0();
    v17 = 1;
    v10 = sub_237A881C0();
    v16 = 2;
    v14 = sub_237A881C0();
    v15 = 3;
    v12 = sub_237A881C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v10 & 1;
    a2[2] = v14 & 1;
    a2[3] = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_237A533AC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Wallpaper.Traits.init(from:)(a1, a2);
}

uint64_t sub_237A533C0(_QWORD *a1)
{
  return Wallpaper.Traits.encode(to:)(a1);
}

uint64_t sub_237A533DC()
{
  sub_237A885D4();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  return sub_237A88610();
}

CarPlayAssetUI::Wallpaper::WallpaperType::PackageType_optional __swiftcall Wallpaper.WallpaperType.PackageType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CarPlayAssetUI::Wallpaper::WallpaperType::PackageType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Wallpaper.WallpaperType.PackageType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x70616373646E616CLL;
  if (*v0 != 1)
    v1 = 0x706172676F706F74;
  if (*v0)
    return v1;
  else
    return 0x746E656964617267;
}

uint64_t sub_237A5351C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D4B9C(*a1, *a2);
}

CarPlayAssetUI::Wallpaper::WallpaperType::PackageType_optional sub_237A53528(Swift::String *a1)
{
  return Wallpaper.WallpaperType.PackageType.init(rawValue:)(*a1);
}

void sub_237A53534(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE900000000000065;
  v5 = 0x70616373646E616CLL;
  if (v2 != 1)
  {
    v5 = 0x706172676F706F74;
    v4 = 0xEA00000000007968;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746E656964617267;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_237A5359C()
{
  sub_237A5A16C();
  return sub_237A87A34();
}

uint64_t sub_237A535F8()
{
  sub_237A5A16C();
  return sub_237A879EC();
}

uint64_t sub_237A53644()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237A536EC()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A53770()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

void Wallpaper.WallpaperType.hash(into:)()
{
  __asm { BR              X10 }
}

void sub_237A53874(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  void *v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v45 = v42;
  v44 = v36;
  sub_237A885E0();
  swift_retain();
  sub_237A871E8();
  sub_23793F258(v48, v40, v43, v41, v38, v37, v45, v47, v44, v46, v39);
}

void sub_237A539D0()
{
  void *v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v9 = v0;
  v8 = v0;
  sub_237A885E0();
  sub_237870090(v12, v3, v7, v5, v1);
  sub_237870090(v6, v11, v8, v10, v2);
  ImageAsset.ImageType.hash(into:)(v4);
  sub_237A885E0();
  ImageAsset.ImageType.hash(into:)(v4);
  sub_237A885E0();
  sub_2378702E0(v12, v3, v7, v5, v1);
  sub_2378702E0(v6, v11, v9, v10, v2);
}

void sub_237A53AC4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id a19)
{
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  sub_237A885E0();
  sub_237A885EC();
  if (v23)
  {
    v19 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v19;
    sub_237A87DDC();

  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (!v22)
  {
    sub_237A885EC();
    if (v21)
      goto LABEL_6;
LABEL_8:
    sub_237A885EC();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_8;
LABEL_6:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRelease();

}

uint64_t sub_237A53DD0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701869940;
  if (*v0 != 1)
    v1 = 0x6574617473;
  if (*v0)
    return v1;
  else
    return 0x7465737361;
}

uint64_t sub_237A53E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A599A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A53E40()
{
  sub_237A57D50();
  return sub_237A88718();
}

uint64_t sub_237A53E68()
{
  sub_237A57D50();
  return sub_237A88724();
}

uint64_t sub_237A53E90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A53EBC + 4 * byte_237AA87EC[*v0]))(0x726F6C6F63, 0xE500000000000000);
}

uint64_t sub_237A53EBC()
{
  return 0x6567616D69;
}

uint64_t sub_237A53ECC()
{
  return 0x67616B6361706163;
}

uint64_t sub_237A53EE8()
{
  return 0x4363696D616E7964;
}

uint64_t sub_237A53F08()
{
  return 0x4963696D616E7964;
}

unint64_t sub_237A53F28()
{
  return 0xD000000000000010;
}

uint64_t sub_237A53F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A59ADC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A53F68()
{
  sub_237A57BFC();
  return sub_237A88718();
}

uint64_t sub_237A53F90()
{
  sub_237A57BFC();
  return sub_237A88724();
}

uint64_t sub_237A53FB8()
{
  sub_237A57DD8();
  return sub_237A88718();
}

uint64_t sub_237A53FE0()
{
  sub_237A57DD8();
  return sub_237A88724();
}

uint64_t sub_237A54008()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A54034 + 4 * byte_237AA87F2[*v0]))(0x7465737361, 0xE500000000000000);
}

uint64_t sub_237A54034()
{
  return 1701869940;
}

uint64_t sub_237A54044()
{
  return 0x646F4D746867696CLL;
}

uint64_t sub_237A54068()
{
  return 0x65646F4D6B726164;
}

uint64_t sub_237A5408C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A59D84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A540B0()
{
  sub_237A57C40();
  return sub_237A88718();
}

uint64_t sub_237A540D8()
{
  sub_237A57C40();
  return sub_237A88724();
}

uint64_t sub_237A54100()
{
  sub_237A57D0C();
  return sub_237A88718();
}

uint64_t sub_237A54128()
{
  sub_237A57D0C();
  return sub_237A88724();
}

uint64_t sub_237A54150()
{
  _BYTE *v0;

  if (*v0)
    return 0x65646F4D6B726164;
  else
    return 0x646F4D746867696CLL;
}

uint64_t sub_237A54190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379D8068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A541B4()
{
  sub_237A57CC8();
  return sub_237A88718();
}

uint64_t sub_237A541DC()
{
  sub_237A57CC8();
  return sub_237A88724();
}

uint64_t sub_237A54204()
{
  sub_237A57D94();
  return sub_237A88718();
}

uint64_t sub_237A5422C()
{
  sub_237A57D94();
  return sub_237A88724();
}

void Wallpaper.WallpaperType.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  _QWORD v17[7];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829468);
  v17[3] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v25 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829470);
  v17[2] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829478);
  v17[4] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v19 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829480);
  v17[1] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v21 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829488);
  v17[6] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829490);
  v17[5] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829498);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = v1[2];
  v38 = v1[1];
  v39 = v9;
  v37 = v1[3];
  v35 = v1[4];
  v10 = v1[5];
  v11 = v1[7];
  v32 = v1[6];
  v33 = v11;
  v12 = v1[9];
  v13 = v1[10];
  v30 = v1[8];
  v31 = v12;
  v27 = v1[11];
  v28 = v10;
  v14 = a1[3];
  v15 = a1;
  v16 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(v15, v14);
  sub_237A57BFC();
  v40 = v16;
  sub_237A886B8();
  v29 = v13;
  __asm { BR              X10 }
}

void sub_237A54528()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 136) = 0;
  sub_237A57DD8();
  v4 = v0;
  swift_retain();
  v5 = *(_QWORD *)(v3 - 176);
  v6 = *(_QWORD *)(v3 - 144);
  sub_237A88220();
  *(_QWORD *)(v3 - 136) = v4;
  sub_237879654();
  sub_237A882B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 344) + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v6, v5);
  sub_23793F258(v4, *(_QWORD *)(v3 - 160), *(void **)(v3 - 152), *(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 248), *(void **)(v3 - 216), *(_QWORD *)(v3 - 208), *(void **)(v3 - 232), *(_QWORD *)(v3 - 224), *(_QWORD *)(v3 - 240));
}

uint64_t Wallpaper.WallpaperType.hashValue.getter()
{
  sub_237A885D4();
  Wallpaper.WallpaperType.hash(into:)();
  return sub_237A88610();
}

uint64_t Wallpaper.WallpaperType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[9];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;

  v31 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568294E0);
  v24[7] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v36 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568294E8);
  v24[5] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v35 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568294F0);
  v24[8] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)&v34 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568294F8);
  v24[6] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829500);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829508);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829510);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v16);
  sub_237A57BFC();
  v17 = v38;
  sub_237A88688();
  if (!v17)
  {
    v24[3] = v11;
    v24[1] = v9;
    v24[2] = v8;
    v24[4] = 0;
    v38 = v13;
    v18 = sub_237A881FC();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = v15;
    v20 = sub_237A87FB0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v22 = &type metadata for Wallpaper.WallpaperType;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v12);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v37);
}

uint64_t sub_237A55AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Wallpaper.WallpaperType.init(from:)(a1, a2);
}

void sub_237A55B00(_QWORD *a1)
{
  Wallpaper.WallpaperType.encode(to:)(a1);
}

uint64_t sub_237A55B14()
{
  sub_237A885D4();
  Wallpaper.WallpaperType.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237A55B74()
{
  sub_237A885D4();
  Wallpaper.WallpaperType.hash(into:)();
  return sub_237A88610();
}

double sub_237A55BD0()
{
  double result;

  qword_2568293F0 = sub_237A87200();
  result = 0.0;
  *(_OWORD *)algn_2568293F8 = 0u;
  unk_256829408 = 0u;
  unk_256829418 = 0u;
  unk_256829428 = 0u;
  unk_256829438 = 0u;
  qword_256829448 = 0;
  return result;
}

void *static Wallpaper.WallpaperTypeDefault.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (qword_25681E4F0 != -1)
    swift_once();
  v2 = (void *)qword_2568293F0;
  v3 = *(_QWORD *)algn_2568293F8;
  v4 = (void *)qword_256829400;
  v5 = unk_256829408;
  v6 = qword_256829410;
  v7 = unk_256829418;
  v8 = (void *)qword_256829420;
  v9 = unk_256829428;
  v10 = (void *)qword_256829430;
  v11 = unk_256829438;
  v13 = qword_256829440;
  v12 = qword_256829448;
  *a1 = qword_2568293F0;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v13;
  a1[11] = v12;
  return sub_23793EF50(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

void *sub_237A55C9C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (qword_25681E4F0 != -1)
    swift_once();
  v2 = (void *)qword_2568293F0;
  v3 = *(_QWORD *)algn_2568293F8;
  v4 = (void *)qword_256829400;
  v5 = unk_256829408;
  v6 = qword_256829410;
  v7 = unk_256829418;
  v8 = (void *)qword_256829420;
  v9 = unk_256829428;
  v10 = (void *)qword_256829430;
  v11 = unk_256829438;
  v13 = qword_256829440;
  v12 = qword_256829448;
  *a1 = qword_2568293F0;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v13;
  a1[11] = v12;
  return sub_23793EF50(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t Wallpaper.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Wallpaper.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Wallpaper.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Wallpaper.displayName.modify())()
{
  return nullsub_1;
}

void *Wallpaper.type.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = (void *)v1[4];
  v3 = v1[5];
  v4 = (void *)v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = (void *)v1[10];
  v9 = v1[11];
  v10 = (void *)v1[12];
  v11 = v1[13];
  v12 = v1[14];
  v13 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  return sub_23793EF50(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

__n128 Wallpaper.type.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v6 = a1[3];
  v7 = a1[2];
  v5 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  v3 = *((_QWORD *)a1 + 11);
  sub_23793F258(*(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 88), *(void **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
  *(_OWORD *)(v1 + 32) = v9;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v7;
  *(_OWORD *)(v1 + 80) = v6;
  result = v5;
  *(__n128 *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v3;
  return result;
}

uint64_t (*Wallpaper.type.modify())()
{
  return nullsub_1;
}

void Wallpaper.traits.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;

  v2 = v1[129];
  v3 = v1[130];
  v4 = v1[131];
  *a1 = v1[128];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
}

_BYTE *Wallpaper.traits.setter(_BYTE *result)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;

  v2 = result[1];
  v3 = result[2];
  v4 = result[3];
  v1[128] = *result;
  v1[129] = v2;
  v1[130] = v3;
  v1[131] = v4;
  return result;
}

uint64_t (*Wallpaper.traits.modify())()
{
  return nullsub_1;
}

uint64_t Wallpaper.associatedPaletteID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 144);
  *a1 = *(_QWORD *)(v1 + 136);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Wallpaper.associatedPaletteID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v3;
  return result;
}

uint64_t (*Wallpaper.associatedPaletteID.modify())()
{
  return nullsub_1;
}

BOOL Wallpaper.supportsDynamicAppearance.getter()
{
  uint64_t v0;

  return (*(_QWORD *)(v0 + 112) >> 61) > 2;
}

__n128 Wallpaper.init(id:displayName:type:traits:associatedPaletteID:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, char *a5@<X4>, __n128 *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;

  v7 = a1[1];
  v8 = *a5;
  v9 = a5[1];
  v10 = a5[2];
  v11 = a5[3];
  *(_QWORD *)a7 = *a1;
  *(_QWORD *)(a7 + 8) = v7;
  *(_QWORD *)(a7 + 16) = a2;
  *(_QWORD *)(a7 + 24) = a3;
  v12 = a4[1];
  *(_OWORD *)(a7 + 32) = *a4;
  *(_OWORD *)(a7 + 48) = v12;
  v13 = a4[3];
  *(_OWORD *)(a7 + 64) = a4[2];
  *(_OWORD *)(a7 + 80) = v13;
  v14 = a4[5];
  *(_OWORD *)(a7 + 96) = a4[4];
  *(_OWORD *)(a7 + 112) = v14;
  *(_BYTE *)(a7 + 128) = v8;
  *(_BYTE *)(a7 + 129) = v9;
  *(_BYTE *)(a7 + 130) = v10;
  *(_BYTE *)(a7 + 131) = v11;
  result = *a6;
  *(__n128 *)(a7 + 136) = *a6;
  return result;
}

uint64_t Wallpaper.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237A87710();
  swift_bridgeObjectRelease();
  Wallpaper.WallpaperType.hash(into:)();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  sub_237A885EC();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237A56130()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237A56154 + 4 * byte_237AA880E[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_237A56154()
{
  return 0x4E79616C70736964;
}

uint64_t sub_237A56174()
{
  return 1701869940;
}

uint64_t sub_237A56184()
{
  return 0x737469617274;
}

unint64_t sub_237A56198()
{
  return 0xD000000000000013;
}

uint64_t sub_237A561B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237A59F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237A561D8()
{
  sub_237A58064();
  return sub_237A88718();
}

uint64_t sub_237A56200()
{
  sub_237A58064();
  return sub_237A88724();
}

uint64_t Wallpaper.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829520);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v36 = v1[3];
  v37 = v9;
  v10 = v1[4];
  v34 = v1[5];
  v35 = v10;
  v11 = v1[6];
  v32 = v1[7];
  v33 = v11;
  v12 = v1[8];
  v30 = v1[9];
  v31 = v12;
  v29 = v1[10];
  v28 = v1[11];
  v27 = v1[12];
  v26 = v1[13];
  v25 = v1[14];
  v24 = v1[15];
  v21 = *((unsigned __int8 *)v1 + 128);
  v22 = *((unsigned __int8 *)v1 + 129);
  v23 = *((unsigned __int8 *)v1 + 130);
  v51 = *((unsigned __int8 *)v1 + 131);
  v19 = v1[17];
  v20 = v1[18];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A58064();
  sub_237A886B8();
  v39 = v8;
  v40 = v7;
  v52 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F348);
  sub_23789E470(&qword_25681F388, &qword_25681F348, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v13 = v38;
  sub_237A882B0();
  if (!v13)
  {
    v14 = v32;
    v15 = v33;
    v17 = v34;
    v16 = v35;
    LOBYTE(v39) = 1;
    sub_237A88274();
    v39 = v16;
    v40 = v17;
    v41 = v15;
    v42 = v14;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    v49 = v25;
    v50 = v24;
    v52 = 2;
    sub_237A580A8();
    sub_237A882B0();
    LOBYTE(v39) = v21;
    BYTE1(v39) = v22;
    BYTE2(v39) = v23;
    BYTE3(v39) = v51;
    v52 = 3;
    sub_237A580EC();
    sub_237A882B0();
    v39 = v19;
    v40 = v20;
    v52 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
    sub_23789E470(&qword_25681E9D0, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Wallpaper.hashValue.getter()
{
  sub_237A885D4();
  Wallpaper.hash(into:)();
  return sub_237A88610();
}

uint64_t Wallpaper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  unint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  unint64_t v68;
  uint64_t v69;
  __int128 v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char v82;

  v51 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829540);
  v4 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A58064();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v49 = a1;
    v50 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F348);
    LOBYTE(v53) = 0;
    sub_23789E470(&qword_25681F350, &qword_25681F348, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    v7 = v52;
    v8 = v6;
    sub_237A881F0();
    v9 = v63;
    LOBYTE(v63) = 1;
    swift_bridgeObjectRetain();
    v10 = sub_237A881B4();
    v48 = v11;
    v12 = v10;
    v41 = v9;
    LOBYTE(v53) = 2;
    sub_237A58130();
    swift_bridgeObjectRetain();
    sub_237A881F0();
    v13 = *((_QWORD *)&v65 + 1);
    v14 = (void *)v66;
    v15 = v69;
    LOBYTE(v53) = 3;
    v44 = v68;
    v43 = v67;
    v46 = v63;
    v47 = v64;
    v45 = v65;
    v40 = *((_QWORD *)&v66 + 1);
    sub_23793EF50((void *)v63, *((uint64_t *)&v63 + 1), (void *)v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), (void *)v66, *((uint64_t *)&v66 + 1), (void *)v67, *((uint64_t *)&v67 + 1), v68);
    sub_237A58174();
    sub_237A881F0();
    v42 = v15;
    v38 = v14;
    v39 = v13;
    LODWORD(v13) = v63;
    v36 = BYTE1(v63);
    v81 = BYTE2(v63);
    v37 = BYTE3(v63);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8F0);
    v82 = 4;
    sub_23789E470(&qword_25681EA08, &qword_25681E8F0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
    sub_237A881A8();
    v16 = *((_QWORD *)&v41 + 1);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v7);
    v17 = v79;
    v50 = v79;
    v52 = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v53 = v41;
    *((_QWORD *)&v53 + 1) = v16;
    v35 = v13;
    *(_QWORD *)&v54 = v12;
    *((_QWORD *)&v54 + 1) = v48;
    v55 = v46;
    v56 = v47;
    v18 = v44;
    v34 = v12;
    v19 = v38;
    *(_QWORD *)&v57 = v45;
    *((_QWORD *)&v57 + 1) = v39;
    *(_QWORD *)&v58 = v38;
    *((_QWORD *)&v58 + 1) = v40;
    v20 = v43;
    v59 = v43;
    *(_QWORD *)&v60 = v44;
    *((_QWORD *)&v60 + 1) = v42;
    LOBYTE(v61) = v13;
    BYTE1(v61) = v36;
    BYTE2(v61) = v81;
    BYTE3(v61) = v37;
    *((_QWORD *)&v61 + 1) = v17;
    v62 = v52;
    sub_23793F0B0((uint64_t)&v53);
    swift_bridgeObjectRelease();
    v32 = v18;
    v21 = v45;
    v22 = v39;
    v23 = v40;
    v24 = (unint64_t)v19;
    sub_23793F258((void *)v46, *((uint64_t *)&v46 + 1), (void *)v47, *((uint64_t *)&v47 + 1), v45, v39, v19, v40, (void *)v20, *((uint64_t *)&v20 + 1), v32);
    swift_bridgeObjectRelease();
    v25 = v48;
    swift_bridgeObjectRelease();
    v26 = v60;
    v27 = v51;
    *(_OWORD *)(v51 + 96) = v59;
    *(_OWORD *)(v27 + 112) = v26;
    *(_OWORD *)(v27 + 128) = v61;
    *(_QWORD *)(v27 + 144) = v62;
    v28 = v56;
    *(_OWORD *)(v27 + 32) = v55;
    *(_OWORD *)(v27 + 48) = v28;
    v29 = v58;
    *(_OWORD *)(v27 + 64) = v57;
    *(_OWORD *)(v27 + 80) = v29;
    v30 = v54;
    *(_OWORD *)v27 = v53;
    *(_OWORD *)(v27 + 16) = v30;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v49);
    *(_QWORD *)&v63 = v41;
    *((_QWORD *)&v63 + 1) = v16;
    *(_QWORD *)&v64 = v34;
    *((_QWORD *)&v64 + 1) = v25;
    v65 = v46;
    v66 = v47;
    *(_QWORD *)&v67 = v21;
    *((_QWORD *)&v67 + 1) = v22;
    v68 = v24;
    v69 = v23;
    v70 = v43;
    v71 = v44;
    v72 = v42;
    v73 = v35;
    v74 = v36;
    v75 = v81;
    v76 = v37;
    v77 = v50;
    v78 = v52;
    return sub_23793F19C((uint64_t)&v63);
  }
}

uint64_t sub_237A56C3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Wallpaper.init(from:)(a1, a2);
}

uint64_t sub_237A56C50(_QWORD *a1)
{
  return Wallpaper.encode(to:)(a1);
}

uint64_t sub_237A56C64()
{
  sub_237A885D4();
  Wallpaper.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237A56CA4()
{
  sub_237A885D4();
  Wallpaper.hash(into:)();
  return sub_237A88610();
}

void sub_237A56CE4()
{
  Wallpaper.restoreAssets(from:)();
}

void _s14CarPlayAssetUI9WallpaperV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_237A56DA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  _BYTE v31[296];

  v25 = v11;
  if (v11 >> 61)
  {
    v23 = v15;
    v24 = v10;
    sub_23793EF50(v18, v17, a3, v19, a5, a6, a7, a8, v9, v8, v25);
    sub_23793EF50(v16, v24, v23, v12, v13, v27, v28, v26, v30, v29, v14);
    sub_237A5A1B0((uint64_t)v31);
    return 0;
  }
  else
  {
    v20 = v15;
    v21 = v10;
    sub_23793EF50(v18, v17, a3, v19, a5, a6, a7, a8, v9, v8, v25);
    sub_23793EF50(v16, v21, v20, v12, v13, v27, v28, v26, v30, v29, v14);
    LOBYTE(v20) = sub_237A871C4();
    sub_237A5A1B0((uint64_t)v31);
    return v20 & 1;
  }
}

BOOL _s14CarPlayAssetUI9WallpaperV6TraitsV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a1[2] ^ a2[2] | a2[3] ^ a1[3]) & 1) == 0;
}

unint64_t sub_237A57BB8()
{
  unint64_t result;

  result = qword_256829458;
  if (!qword_256829458)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9624, &type metadata for Wallpaper.Traits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829458);
  }
  return result;
}

unint64_t sub_237A57BFC()
{
  unint64_t result;

  result = qword_2568294A0;
  if (!qword_2568294A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA95D4, &type metadata for Wallpaper.WallpaperType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294A0);
  }
  return result;
}

unint64_t sub_237A57C40()
{
  unint64_t result;

  result = qword_2568294A8;
  if (!qword_2568294A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9584, &type metadata for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294A8);
  }
  return result;
}

unint64_t sub_237A57C84()
{
  unint64_t result;

  result = qword_2568294B0;
  if (!qword_2568294B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType.PackageType, &type metadata for Wallpaper.WallpaperType.PackageType);
    atomic_store(result, (unint64_t *)&qword_2568294B0);
  }
  return result;
}

unint64_t sub_237A57CC8()
{
  unint64_t result;

  result = qword_2568294B8;
  if (!qword_2568294B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9534, &type metadata for Wallpaper.WallpaperType.DynamicImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294B8);
  }
  return result;
}

unint64_t sub_237A57D0C()
{
  unint64_t result;

  result = qword_2568294C0;
  if (!qword_2568294C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA94E4, &type metadata for Wallpaper.WallpaperType.DynamicColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294C0);
  }
  return result;
}

unint64_t sub_237A57D50()
{
  unint64_t result;

  result = qword_2568294C8;
  if (!qword_2568294C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9494, &type metadata for Wallpaper.WallpaperType.CapackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294C8);
  }
  return result;
}

unint64_t sub_237A57D94()
{
  unint64_t result;

  result = qword_2568294D0;
  if (!qword_2568294D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9444, &type metadata for Wallpaper.WallpaperType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294D0);
  }
  return result;
}

unint64_t sub_237A57DD8()
{
  unint64_t result;

  result = qword_2568294D8;
  if (!qword_2568294D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA93F4, &type metadata for Wallpaper.WallpaperType.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568294D8);
  }
  return result;
}

unint64_t sub_237A57E1C()
{
  unint64_t result;

  result = qword_256829518;
  if (!qword_256829518)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType.PackageType, &type metadata for Wallpaper.WallpaperType.PackageType);
    atomic_store(result, (unint64_t *)&qword_256829518);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI9WallpaperV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[7];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v27 = *(_OWORD *)(a1 + 48);
  v28 = *(_OWORD *)(a1 + 32);
  v25 = *(_OWORD *)(a1 + 80);
  v26 = *(_OWORD *)(a1 + 64);
  v23 = *(_OWORD *)(a1 + 112);
  v24 = *(_OWORD *)(a1 + 96);
  v4 = *(unsigned __int8 *)(a1 + 128);
  v5 = *(unsigned __int8 *)(a1 + 129);
  v21 = *(unsigned __int8 *)(a1 + 131);
  v22 = *(unsigned __int8 *)(a1 + 130);
  v18 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a2 + 128);
  v9 = *(unsigned __int8 *)(a2 + 129);
  v10 = *(unsigned __int8 *)(a2 + 130);
  v11 = *(unsigned __int8 *)(a2 + 131);
  v17 = *(_QWORD *)(a2 + 136);
  v19 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_237A8840C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7 || (v14 = sub_237A8840C(), result = 0, (v14 & 1) != 0))
    {
      v29[0] = v28;
      v29[1] = v27;
      v29[2] = v26;
      v29[3] = v25;
      v29[4] = v24;
      v29[5] = v23;
      _s14CarPlayAssetUI9WallpaperV0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v29);
      v16 = v15;
      result = 0;
      if ((v16 & 1) != 0
        && ((v4 ^ v8) & 1) == 0
        && ((v5 ^ v9) & 1) == 0
        && ((v22 ^ v10) & 1) == 0
        && ((v21 ^ v11) & 1) == 0)
      {
        if (v20)
        {
          if (v19 && (v18 == v17 && v20 == v19 || (sub_237A8840C() & 1) != 0))
            return 1;
        }
        else if (!v19)
        {
          return 1;
        }
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_237A58064()
{
  unint64_t result;

  result = qword_256829528;
  if (!qword_256829528)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA93A4, &type metadata for Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829528);
  }
  return result;
}

unint64_t sub_237A580A8()
{
  unint64_t result;

  result = qword_256829530;
  if (!qword_256829530)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType, &type metadata for Wallpaper.WallpaperType);
    atomic_store(result, (unint64_t *)&qword_256829530);
  }
  return result;
}

unint64_t sub_237A580EC()
{
  unint64_t result;

  result = qword_256829538;
  if (!qword_256829538)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.Traits, &type metadata for Wallpaper.Traits);
    atomic_store(result, (unint64_t *)&qword_256829538);
  }
  return result;
}

unint64_t sub_237A58130()
{
  unint64_t result;

  result = qword_256829548;
  if (!qword_256829548)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType, &type metadata for Wallpaper.WallpaperType);
    atomic_store(result, (unint64_t *)&qword_256829548);
  }
  return result;
}

unint64_t sub_237A58174()
{
  unint64_t result;

  result = qword_256829550;
  if (!qword_256829550)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.Traits, &type metadata for Wallpaper.Traits);
    atomic_store(result, (unint64_t *)&qword_256829550);
  }
  return result;
}

unint64_t sub_237A581BC()
{
  unint64_t result;

  result = qword_256829558;
  if (!qword_256829558)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.Traits, &type metadata for Wallpaper.Traits);
    atomic_store(result, (unint64_t *)&qword_256829558);
  }
  return result;
}

unint64_t sub_237A58204()
{
  unint64_t result;

  result = qword_256829560;
  if (!qword_256829560)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType.PackageType, &type metadata for Wallpaper.WallpaperType.PackageType);
    atomic_store(result, (unint64_t *)&qword_256829560);
  }
  return result;
}

unint64_t sub_237A5824C()
{
  unint64_t result;

  result = qword_256829568;
  if (!qword_256829568)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType, &type metadata for Wallpaper.WallpaperType);
    atomic_store(result, (unint64_t *)&qword_256829568);
  }
  return result;
}

unint64_t sub_237A5829C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2568295A0;
  if (!qword_2568295A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25681F348);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for <> TaggedValue<A, B>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568295A0);
  }
  return result;
}

unint64_t sub_237A582FC()
{
  unint64_t result;

  result = qword_2568295A8;
  if (!qword_2568295A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper, &type metadata for Wallpaper);
    atomic_store(result, (unint64_t *)&qword_2568295A8);
  }
  return result;
}

uint64_t destroy for Wallpaper(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23793F258(*(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Wallpaper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v19 = *(void **)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  v16 = *(void **)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(void **)(a2 + 96);
  v18 = *(_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a2 + 120);
  v15 = *(void **)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23793EF50(v19, v17, v16, v6, v7, v8, v15, v18, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v14;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Wallpaper(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(void **)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v23 = *(void **)(a2 + 96);
  v24 = *(_QWORD *)(a2 + 104);
  v25 = *(_QWORD *)(a2 + 112);
  v26 = *(_QWORD *)(a2 + 120);
  sub_23793EF50(v4, v5, v6, v7, v8, v9, v10, v11, v23, v24, v25);
  v12 = *(void **)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(void **)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(void **)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = *(_OWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v23;
  *(_QWORD *)(a1 + 104) = v24;
  *(_QWORD *)(a1 + 112) = v25;
  *(_QWORD *)(a1 + 120) = v26;
  sub_23793F258(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((uint64_t *)&v20 + 1), v21);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for Wallpaper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(void **)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  sub_23793F258(v6, v7, v8, v9, v10, v11, v12, v13, (void *)v14, *((uint64_t *)&v14 + 1), v15);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Wallpaper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Wallpaper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper()
{
  return &type metadata for Wallpaper;
}

uint64_t getEnumTagSinglePayload for Wallpaper.Traits(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for Wallpaper.Traits()
{
  return &type metadata for Wallpaper.Traits;
}

void destroy for Wallpaper.WallpaperType(uint64_t a1)
{
  sub_23793F258(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
}

_QWORD *initializeWithCopy for Wallpaper.WallpaperType(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(void **)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  sub_23793EF50(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  return a1;
}

uint64_t assignWithCopy for Wallpaper.WallpaperType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(void **)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  sub_23793EF50(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(void **)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(void **)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v23;
  *(_QWORD *)(a1 + 80) = v24;
  *(_QWORD *)(a1 + 88) = v25;
  sub_23793F258(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((uint64_t *)&v20 + 1), v21);
  return a1;
}

uint64_t assignWithTake for Wallpaper.WallpaperType(uint64_t a1, _OWORD *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v3 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(void **)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v14;
  v15 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v15;
  sub_23793F258(v3, v5, v4, v6, v7, v8, v9, v10, (void *)v11, *((uint64_t *)&v11 + 1), v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Wallpaper.WallpaperType(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 80) >> 2) & 0xFFFFFFC0 | (*(_QWORD *)(a1 + 80) >> 1) & 0x3F;
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Wallpaper.WallpaperType(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 88) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 80) = (4 * -a2) & 0x3FFFFFF00 | (2 * (-a2 & 0x3FLL));
      *(_QWORD *)(a1 + 88) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_237A58B34(uint64_t a1)
{
  return *(_QWORD *)(a1 + 80) >> 61;
}

uint64_t sub_237A58B40(uint64_t result)
{
  *(_QWORD *)(result + 80) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_237A58B50(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 80) = *(_QWORD *)(result + 80) & 0x81 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType()
{
  return &type metadata for Wallpaper.WallpaperType;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.PackageType()
{
  return &type metadata for Wallpaper.WallpaperType.PackageType;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperTypeDefault()
{
  return &type metadata for Wallpaper.WallpaperTypeDefault;
}

uint64_t storeEnumTagSinglePayload for Wallpaper.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_237A58BE8 + 4 * byte_237AA8831[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_237A58C1C + 4 * byte_237AA882C[v4]))();
}

uint64_t sub_237A58C1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58C24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A58C2CLL);
  return result;
}

uint64_t sub_237A58C38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A58C40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_237A58C44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58C4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.CodingKeys()
{
  return &type metadata for Wallpaper.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Wallpaper.WallpaperType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_237A58CB4 + 4 * byte_237AA883B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_237A58CE8 + 4 * byte_237AA8836[v4]))();
}

uint64_t sub_237A58CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A58CF8);
  return result;
}

uint64_t sub_237A58D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A58D0CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_237A58D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.CodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.CodingKeys;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.ColorCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.ColorCodingKeys;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.ImageCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.ImageCodingKeys;
}

uint64_t _s14CarPlayAssetUI9WallpaperV13WallpaperTypeO11PackageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237A58DA4 + 4 * byte_237AA8845[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237A58DD8 + 4 * byte_237AA8840[v4]))();
}

uint64_t sub_237A58DD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58DE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A58DE8);
  return result;
}

uint64_t sub_237A58DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A58DFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237A58E00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58E08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.CapackageCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.CapackageCodingKeys;
}

uint64_t _s14CarPlayAssetUI9WallpaperV13WallpaperTypeO15ColorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237A58E64 + 4 * byte_237AA884A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237A58E84 + 4 * byte_237AA884F[v4]))();
}

_BYTE *sub_237A58E64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237A58E84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A58E8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A58E94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237A58E9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237A58EA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.DynamicColorCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.DynamicColorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Wallpaper.WallpaperType.DynamicImageCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237A58F0C + 4 * byte_237AA8859[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237A58F40 + 4 * byte_237AA8854[v4]))();
}

uint64_t sub_237A58F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A58F50);
  return result;
}

uint64_t sub_237A58F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A58F64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237A58F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A58F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.DynamicImageCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.DynamicImageCodingKeys;
}

ValueMetadata *type metadata accessor for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys()
{
  return &type metadata for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys;
}

uint64_t _s14CarPlayAssetUI9WallpaperV13WallpaperTypeO26DynamicCAPackageCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237A58FEC + 4 * byte_237AA8863[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237A59020 + 4 * byte_237AA885E[v4]))();
}

uint64_t sub_237A59020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A59028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237A59030);
  return result;
}

uint64_t sub_237A5903C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237A59044);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237A59048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237A59050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Wallpaper.Traits.CodingKeys()
{
  return &type metadata for Wallpaper.Traits.CodingKeys;
}

unint64_t sub_237A59070()
{
  unint64_t result;

  result = qword_2568295B0;
  if (!qword_2568295B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8DBC, &type metadata for Wallpaper.Traits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295B0);
  }
  return result;
}

unint64_t sub_237A590B8()
{
  unint64_t result;

  result = qword_2568295B8;
  if (!qword_2568295B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8E74, &type metadata for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295B8);
  }
  return result;
}

unint64_t sub_237A59100()
{
  unint64_t result;

  result = qword_2568295C0;
  if (!qword_2568295C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8F2C, &type metadata for Wallpaper.WallpaperType.DynamicImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295C0);
  }
  return result;
}

unint64_t sub_237A59148()
{
  unint64_t result;

  result = qword_2568295C8;
  if (!qword_2568295C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8FE4, &type metadata for Wallpaper.WallpaperType.DynamicColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295C8);
  }
  return result;
}

unint64_t sub_237A59190()
{
  unint64_t result;

  result = qword_2568295D0;
  if (!qword_2568295D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA909C, &type metadata for Wallpaper.WallpaperType.CapackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295D0);
  }
  return result;
}

unint64_t sub_237A591D8()
{
  unint64_t result;

  result = qword_2568295D8;
  if (!qword_2568295D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9154, &type metadata for Wallpaper.WallpaperType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295D8);
  }
  return result;
}

unint64_t sub_237A59220()
{
  unint64_t result;

  result = qword_2568295E0;
  if (!qword_2568295E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA920C, &type metadata for Wallpaper.WallpaperType.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295E0);
  }
  return result;
}

unint64_t sub_237A59268()
{
  unint64_t result;

  result = qword_2568295E8;
  if (!qword_2568295E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA92C4, &type metadata for Wallpaper.WallpaperType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295E8);
  }
  return result;
}

unint64_t sub_237A592B0()
{
  unint64_t result;

  result = qword_2568295F0;
  if (!qword_2568295F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA937C, &type metadata for Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295F0);
  }
  return result;
}

unint64_t sub_237A592F8()
{
  unint64_t result;

  result = qword_2568295F8;
  if (!qword_2568295F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA92EC, &type metadata for Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568295F8);
  }
  return result;
}

unint64_t sub_237A59340()
{
  unint64_t result;

  result = qword_256829600;
  if (!qword_256829600)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9314, &type metadata for Wallpaper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829600);
  }
  return result;
}

unint64_t sub_237A59388()
{
  unint64_t result;

  result = qword_256829608;
  if (!qword_256829608)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA917C, &type metadata for Wallpaper.WallpaperType.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829608);
  }
  return result;
}

unint64_t sub_237A593D0()
{
  unint64_t result;

  result = qword_256829610;
  if (!qword_256829610)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA91A4, &type metadata for Wallpaper.WallpaperType.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829610);
  }
  return result;
}

unint64_t sub_237A59418()
{
  unint64_t result;

  result = qword_256829618;
  if (!qword_256829618)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA90C4, &type metadata for Wallpaper.WallpaperType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829618);
  }
  return result;
}

unint64_t sub_237A59460()
{
  unint64_t result;

  result = qword_256829620;
  if (!qword_256829620)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA90EC, &type metadata for Wallpaper.WallpaperType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829620);
  }
  return result;
}

unint64_t sub_237A594A8()
{
  unint64_t result;

  result = qword_256829628;
  if (!qword_256829628)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA900C, &type metadata for Wallpaper.WallpaperType.CapackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829628);
  }
  return result;
}

unint64_t sub_237A594F0()
{
  unint64_t result;

  result = qword_256829630;
  if (!qword_256829630)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9034, &type metadata for Wallpaper.WallpaperType.CapackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829630);
  }
  return result;
}

unint64_t sub_237A59538()
{
  unint64_t result;

  result = qword_256829638;
  if (!qword_256829638)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8F54, &type metadata for Wallpaper.WallpaperType.DynamicColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829638);
  }
  return result;
}

unint64_t sub_237A59580()
{
  unint64_t result;

  result = qword_256829640;
  if (!qword_256829640)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8F7C, &type metadata for Wallpaper.WallpaperType.DynamicColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829640);
  }
  return result;
}

unint64_t sub_237A595C8()
{
  unint64_t result;

  result = qword_256829648;
  if (!qword_256829648)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8E9C, &type metadata for Wallpaper.WallpaperType.DynamicImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829648);
  }
  return result;
}

unint64_t sub_237A59610()
{
  unint64_t result;

  result = qword_256829650;
  if (!qword_256829650)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8EC4, &type metadata for Wallpaper.WallpaperType.DynamicImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829650);
  }
  return result;
}

unint64_t sub_237A59658()
{
  unint64_t result;

  result = qword_256829658;
  if (!qword_256829658)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8DE4, &type metadata for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829658);
  }
  return result;
}

unint64_t sub_237A596A0()
{
  unint64_t result;

  result = qword_256829660;
  if (!qword_256829660)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8E0C, &type metadata for Wallpaper.WallpaperType.DynamicCAPackageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829660);
  }
  return result;
}

unint64_t sub_237A596E8()
{
  unint64_t result;

  result = qword_256829668;
  if (!qword_256829668)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA9234, &type metadata for Wallpaper.WallpaperType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829668);
  }
  return result;
}

unint64_t sub_237A59730()
{
  unint64_t result;

  result = qword_256829670;
  if (!qword_256829670)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA925C, &type metadata for Wallpaper.WallpaperType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829670);
  }
  return result;
}

unint64_t sub_237A59778()
{
  unint64_t result;

  result = qword_256829678;
  if (!qword_256829678)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8D2C, &type metadata for Wallpaper.Traits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829678);
  }
  return result;
}

unint64_t sub_237A597C0()
{
  unint64_t result;

  result = qword_256829680;
  if (!qword_256829680)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA8D54, &type metadata for Wallpaper.Traits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256829680);
  }
  return result;
}

uint64_t sub_237A59804(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x8000000237AB2940 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AB2970 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB2990 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B63616C427369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237A599A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_237A59ADC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x67616B6361706163 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4363696D616E7964 && a2 == 0xEC000000726F6C6FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4963696D616E7964 && a2 == 0xEC0000006567616DLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB29B0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_237A59D84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F4D746867696CLL && a2 == 0xEE00657461745365 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F4D6B726164 && a2 == 0xED00006574617453)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237A59F6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB29D0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_237A5A16C()
{
  unint64_t result;

  result = qword_256829688;
  if (!qword_256829688)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Wallpaper.WallpaperType.PackageType, &type metadata for Wallpaper.WallpaperType.PackageType);
    atomic_store(result, (unint64_t *)&qword_256829688);
  }
  return result;
}

uint64_t sub_237A5A1B0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v11;
  void *v12;

  v2 = *(_QWORD *)(a1 + 104);
  v12 = *(void **)(a1 + 96);
  v3 = *(void **)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(void **)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v11 = *(_OWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 176);
  sub_23793F258(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  sub_23793F258(v12, v2, v3, v4, v5, v6, v7, v8, (void *)v11, *((uint64_t *)&v11 + 1), v9);
  return a1;
}

uint64_t RequestContentView.init(instrument:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
  *a2 = sub_237A86A20();
  a2[1] = v4;
  v5 = type metadata accessor for RequestContentView(0);
  v6 = (uint64_t *)((char *)a2 + *(int *)(v5 + 20));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  swift_storeEnumTagMultiPayload();
  return sub_2378D0858(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
}

uint64_t type metadata accessor for RequestContentView(uint64_t a1)
{
  return sub_23790828C(a1, qword_256829708);
}

uint64_t sub_237A5A344()
{
  sub_237A6147C();
  return sub_237A86930();
}

uint64_t sub_237A5A394()
{
  uint64_t v1;

  sub_237A613B8();
  sub_237A86B88();
  return v1;
}

uint64_t RequestContentView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;

  v2 = v1;
  v59 = a1;
  v49 = type metadata accessor for RequestContentView.ContentView(0);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829690);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829698);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C60);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for RequestContentModel();
  v10 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v55 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568296A0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v47 - v23;
  v56 = sub_237A87200();
  v48 = type metadata accessor for RequestContentView(0);
  sub_23796EC84((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2378BC024((uint64_t)v14, &qword_256820880);
    v25 = 1;
    v27 = v58;
    v26 = v59;
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v24, v25, 1, v27);
    sub_2378BBFE0((uint64_t)v24, (uint64_t)v21, &qword_2568296A0);
    *v26 = v56;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568296A8);
    sub_2378BBFE0((uint64_t)v21, (uint64_t)v26 + *(int *)(v45 + 48), &qword_2568296A0);
    swift_retain();
    sub_2378BC024((uint64_t)v24, &qword_2568296A0);
    sub_2378BC024((uint64_t)v21, &qword_2568296A0);
    return swift_release();
  }
  sub_237870370((uint64_t)v14, (uint64_t)v18, &qword_25681E8E0);
  if (*v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_237A866FC();
    swift_release();
    swift_release();
    swift_release();
    v28 = v60;
    v29 = *(_QWORD *)(v60 + 16);
    v47 = v18;
    if (v29)
    {
      v30 = sub_2378D3230((uint64_t)v18);
      v27 = v58;
      v26 = v59;
      v31 = v55;
      if ((v32 & 1) != 0)
      {
        sub_2378D07D8(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v10 + 72) * v30, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        v33 = 0;
      }
      else
      {
        v33 = 1;
      }
    }
    else
    {
      v33 = 1;
      v27 = v58;
      v26 = v59;
      v31 = v55;
    }
    v34 = v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, v33, 1, v54);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v34) == 1)
    {
      sub_2378BC024((uint64_t)v47, &qword_25681E8E0);
      sub_2378BC024((uint64_t)v9, &qword_256820C60);
      v25 = 1;
    }
    else
    {
      sub_2378D0858((uint64_t)v9, v31, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      v35 = v31;
      v36 = v51;
      sub_2378D07D8(v35, v51, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      sub_2378D07D8((uint64_t)v2 + *(int *)(v48 + 24), v36 + *(int *)(v49 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
      KeyPath = swift_getKeyPath();
      v38 = sub_237A5AA60();
      v40 = v39;
      v41 = v53;
      sub_2378D07D8(v36, v53, type metadata accessor for RequestContentView.ContentView);
      v42 = (uint64_t *)(v41 + *(int *)(v50 + 36));
      *v42 = KeyPath;
      v42[1] = v38;
      v42[2] = v40;
      sub_2378DE6A4(v36, type metadata accessor for RequestContentView.ContentView);
      if (qword_25681E4F8 != -1)
        swift_once();
      v43 = qword_256870708;
      v44 = v52;
      sub_2378BBFE0(v41, v52, &qword_256829690);
      *(_QWORD *)(v44 + *(int *)(v27 + 36)) = v43;
      swift_retain();
      sub_2378BC024(v41, &qword_256829690);
      sub_2378DE6A4(v55, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      sub_2378BC024((uint64_t)v47, &qword_25681E8E0);
      sub_237870370(v44, (uint64_t)v24, &qword_256829698);
      v25 = 0;
    }
    goto LABEL_14;
  }
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
  result = sub_237A86A14();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RequestContentView.ContentView(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568297B0);
}

double sub_237A5A9B8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237A613B8();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_237A5AA04()
{
  sub_237A613B8();
  swift_bridgeObjectRetain();
  return sub_237A86B94();
}

uint64_t sub_237A5AA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE v21[512];
  _QWORD v22[65];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v1);
  v17[3] = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v3);
  v17[2] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_237A86444();
  MEMORY[0x24BDAC7A8](v18);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RequestContentView(0);
  sub_23796EC84((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_237870370((uint64_t)v7, (uint64_t)v11, &qword_25681E8E0);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v19 = 0x3D656E6F7A3FLL;
    v20 = 0xE600000000000000;
    sub_237A86570();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    v13 = v0 + *(int *)(v12 + 24);
    v14 = type metadata accessor for Instrument();
    sub_23788F46C((const void *)(v13 + *(int *)(v14 + 20)), v21);
    sub_23788F46C(v21, v22);
    v15 = sub_2378A1BDC((uint64_t)v22);
    v17[1] = v13;
    __asm { BR              X11 }
  }
  sub_2378BC024((uint64_t)v7, &qword_256820880);
  return 0;
}

uint64_t sub_237A5AFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[176];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[2];
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[3];
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  __int128 v110;
  _OWORD v111[24];
  _BYTE v112[512];
  _BYTE v113[528];

  v88 = a1;
  *(_QWORD *)&v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568297E8);
  MEMORY[0x24BDAC7A8](v83);
  v84 = (uint64_t)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568297F0);
  MEMORY[0x24BDAC7A8](v87);
  *(_QWORD *)&v85 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821330);
  MEMORY[0x24BDAC7A8](v4);
  v80 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PopoverModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v79 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568297F8);
  MEMORY[0x24BDAC7A8](v82);
  v81 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256829800);
  MEMORY[0x24BDAC7A8](v86);
  v11 = (__int128 *)((char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v77 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v77 - v19;
  v21 = v1 + *(int *)(type metadata accessor for RequestContentView.ContentView(0) + 20);
  v22 = type metadata accessor for Instrument();
  sub_23788F46C((const void *)(v21 + *(int *)(v22 + 20)), v112);
  sub_23788F46C(v112, v113);
  v23 = sub_2378A1BDC((uint64_t)v113);
  switch(v23)
  {
    case 9:
      sub_2378D07D8(v1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v37 = *(_QWORD *)v17;
        v38 = *((_QWORD *)v17 + 1);
        v39 = *((_QWORD *)v17 + 2);
        v40 = *((_QWORD *)v17 + 3);
        v42 = *((_QWORD *)v17 + 5);
        v41 = *((_QWORD *)v17 + 6);
        v43 = 256;
        if (!v17[33])
          v43 = 0;
        v44 = v43 | v17[32];
      }
      else
      {
        sub_2378DE6A4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        v37 = 0;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        v44 = 0;
        v42 = 0;
        v41 = 0;
      }
      *(_QWORD *)&v100 = v37;
      *((_QWORD *)&v100 + 1) = v38;
      v101 = v39;
      v102 = v40;
      v103 = v44;
      v104 = v42;
      v105 = v41;
      v84 = v37;
      *(_QWORD *)&v85 = v39;
      *(_QWORD *)&v83 = v38;
      sub_237A61010((uint64_t)&v100);
      sub_237870370((uint64_t)&v100, (uint64_t)v106, &qword_256829870);
      sub_237A16500(v37, v38, v39, v40, v44, v42);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256829830);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256829858);
      sub_23796CF14(&qword_256829828, &qword_256829830, (uint64_t (*)(void))sub_237A60DE8);
      sub_23796CF14(&qword_256829850, &qword_256829858, (uint64_t (*)(void))sub_237A60E98);
      sub_237A86D44();
      v50 = v99[0];
      v111[0] = v98;
      v111[1] = v99[0];
      *(_OWORD *)((char *)&v111[1] + 10) = *(_OWORD *)((char *)v99 + 10);
      v51 = v94;
      v52 = v95;
      v108 = v94;
      v109[0] = v95;
      v54 = v96;
      v53 = v97;
      v109[1] = v96;
      v110 = v97;
      v55 = v90;
      v56 = v91;
      v106[0] = v90;
      v106[1] = v91;
      v58 = v92;
      v57 = v93;
      v106[2] = v92;
      v107 = v93;
      v11[8] = v98;
      v11[9] = v50;
      *(_OWORD *)((char *)v11 + 154) = *(_OWORD *)((char *)v99 + 10);
      v11[4] = v51;
      v11[5] = v52;
      v11[6] = v54;
      v11[7] = v53;
      *v11 = v55;
      v11[1] = v56;
      v11[2] = v58;
      v11[3] = v57;
      swift_storeEnumTagMultiPayload();
      sub_237A6118C((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_237A6101C);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256829818);
      sub_237A60D4C();
      sub_237A60EDC();
      sub_237A86D44();
      sub_237A61140(v84, v83, v85, v40, v44, v42);
      return sub_237A6118C((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_237A61200);
    case 8:
      if (!*(_QWORD *)(sub_2378A1BF8((uint64_t)v113) + 8))
      {
        sub_2378D07D8(v1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v46 = v80;
        if (EnumCaseMultiPayload == 1)
        {
          sub_2378D0858((uint64_t)v14, v80, type metadata accessor for PopoverModel);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v46, 0, 1, v6);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v80, 1, 1, v6);
          sub_2378DE6A4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v46, 1, v6) != 1)
        {
          v73 = v46;
          v74 = v79;
          sub_2378D0858(v73, v79, type metadata accessor for PopoverModel);
          v71 = v81;
          sub_2378D0858(v74, v81, type metadata accessor for PopoverModel);
          v75 = type metadata accessor for PopoverContainer(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v71, 0, 1, v75);
          goto LABEL_26;
        }
        sub_2378BC024(v46, &qword_256821330);
      }
      v70 = type metadata accessor for PopoverContainer(0);
      v71 = v81;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v81, 1, 1, v70);
      sub_23788F46C(v112, v106);
      v72 = sub_2378A1BF8((uint64_t)v106);
      sub_2378DE5FC(*(_QWORD *)v72, *(_QWORD *)(v72 + 8), *(void **)(v72 + 16), *(_QWORD *)(v72 + 24), *(void **)(v72 + 32), *(_QWORD *)(v72 + 40), *(_QWORD *)(v72 + 48), *(_QWORD *)(v72 + 56), *(void **)(v72 + 64), *(_QWORD *)(v72 + 72), *(void **)(v72 + 80), *(_QWORD *)(v72 + 88), *(_QWORD *)(v72 + 96));
LABEL_26:
      v48 = &qword_2568297F8;
      sub_2378BBFE0(v71, v84, &qword_2568297F8);
      swift_storeEnumTagMultiPayload();
      sub_237A60CD0();
      v76 = v85;
      sub_237A86D44();
      sub_2378BBFE0(v76, (uint64_t)v11, &qword_2568297F0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256829818);
      sub_237A60D4C();
      sub_237A60EDC();
      sub_237A86D44();
      sub_237A60F48((uint64_t)v112);
      sub_2378BC024(v76, &qword_2568297F0);
      v49 = v71;
      return sub_2378BC024(v49, v48);
    case 2:
      v24 = sub_2378A1BF8((uint64_t)v113);
      if ((~*(_DWORD *)(v24 + 40) & 0xFELL) == 0)
      {
        v25 = v24;
        sub_2378D07D8(v1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v26 = *(_OWORD *)v20;
          v82 = *((_OWORD *)v20 + 1);
          v83 = v26;
          v27 = *((_QWORD *)v20 + 5);
          v81 = *((_QWORD *)v20 + 4);
          v28 = v20[48];
          v29 = *((_QWORD *)v20 + 7);
          v30 = *((_QWORD *)v20 + 8);
          v31 = v20[72];
          LODWORD(v80) = v20[73];
          v79 = *((_OWORD *)v20 + 5);
          v78 = *((_QWORD *)v20 + 12);
          v32 = *(_BYTE *)(v25 + 104);
          v85 = *(_OWORD *)(v25 + 112);
          v33 = *(_QWORD *)(v25 + 128);
          v34 = *(_QWORD *)(v25 + 136);
          v84 = v33;
          v77 = *(_OWORD *)(v20 + 104);
          v35 = sub_237A86F3C();
          LOBYTE(v100) = 0;
          LOBYTE(v106[0]) = v32;
          *(_OWORD *)((char *)v106 + 8) = v83;
          *(_OWORD *)((char *)&v106[1] + 8) = v82;
          *((_QWORD *)&v106[2] + 1) = v81;
          *(_QWORD *)&v107 = v27;
          BYTE8(v107) = v28;
          *(_QWORD *)&v108 = v29;
          *((_QWORD *)&v108 + 1) = v30;
          LOBYTE(v109[0]) = v31;
          BYTE1(v109[0]) = v80;
          *(_OWORD *)((char *)v109 + 8) = v79;
          *((_QWORD *)&v109[1] + 1) = v78;
          v110 = v77;
          LOBYTE(v111[0]) = v35;
          *(_OWORD *)((char *)v111 + 8) = v85;
          *((_QWORD *)&v111[1] + 1) = v84;
          *(_QWORD *)&v111[2] = v34;
          BYTE8(v111[2]) = 0;
          nullsub_1(v106);
          v36 = v106;
LABEL_19:
          sub_237870370((uint64_t)v36, (uint64_t)v89, &qword_256829830);
          sub_237870370((uint64_t)v89, (uint64_t)&v100, &qword_256829830);
          sub_237A61344((uint64_t)&v100);
          sub_237870370((uint64_t)&v100, (uint64_t)v106, &qword_256829870);
          sub_237A6134C((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_237A61084);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256829830);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256829858);
          sub_23796CF14(&qword_256829828, &qword_256829830, (uint64_t (*)(void))sub_237A60DE8);
          sub_23796CF14(&qword_256829850, &qword_256829858, (uint64_t (*)(void))sub_237A60E98);
          sub_237A86D44();
          v60 = v99[0];
          v111[0] = v98;
          v111[1] = v99[0];
          *(_OWORD *)((char *)&v111[1] + 10) = *(_OWORD *)((char *)v99 + 10);
          v61 = v94;
          v62 = v95;
          v108 = v94;
          v109[0] = v95;
          v64 = v96;
          v63 = v97;
          v109[1] = v96;
          v110 = v97;
          v65 = v90;
          v66 = v91;
          v106[0] = v90;
          v106[1] = v91;
          v68 = v92;
          v67 = v93;
          v106[2] = v92;
          v107 = v93;
          v11[8] = v98;
          v11[9] = v60;
          *(_OWORD *)((char *)v11 + 154) = *(_OWORD *)((char *)v99 + 10);
          v11[4] = v61;
          v11[5] = v62;
          v11[6] = v64;
          v11[7] = v63;
          *v11 = v65;
          v11[1] = v66;
          v11[2] = v68;
          v11[3] = v67;
          swift_storeEnumTagMultiPayload();
          sub_237A6118C((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_237A6101C);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256829818);
          sub_237A60D4C();
          sub_237A60EDC();
          sub_237A86D44();
          sub_237A60F48((uint64_t)v112);
          sub_237A6134C((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_237A61268);
          return sub_237A6118C((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_237A61200);
        }
        sub_2378DE6A4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
      }
      sub_237A61324(&v100);
      sub_23788F46C(v112, v106);
      v59 = (uint64_t *)sub_2378A1BF8((uint64_t)v106);
      sub_23793F4C0(v59);
      v36 = &v100;
      goto LABEL_19;
  }
  swift_storeEnumTagMultiPayload();
  sub_237A60CD0();
  v47 = v85;
  sub_237A86D44();
  v48 = &qword_2568297F0;
  sub_2378BBFE0(v47, (uint64_t)v11, &qword_2568297F0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256829818);
  sub_237A60D4C();
  sub_237A60EDC();
  sub_237A86D44();
  v49 = v47;
  return sub_2378BC024(v49, v48);
}

uint64_t sub_237A5BABC()
{
  uint64_t v0;
  uint64_t result;

  sub_237A8756C();
  sub_237A868A0();
  sub_237A868AC();
  sub_237A868B8();
  swift_release();
  swift_release();
  sub_237A868AC();
  v0 = sub_237A86894();
  swift_release();
  result = swift_release();
  qword_256870708 = v0;
  return result;
}

uint64_t sub_237A5BB54()
{
  uint64_t result;

  result = sub_237A87500();
  qword_256870710 = result;
  return result;
}

double sub_237A5BB84@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237A613B8();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_237A5BBD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestContentView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void *v95;
  void *v96;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    v14 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v15 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 24);
    v17 = (char *)a1 + v16;
    v68 = (char *)a1 + v16;
    v67 = (char *)a2 + v16;
    v18 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v67, v18);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&v17[*(int *)(v19 + 52)] = *(_QWORD *)&v67[*(int *)(v19 + 52)];
    v69 = type metadata accessor for Instrument();
    v20 = *(int *)(v69 + 20);
    v21 = (uint64_t *)&v17[v20];
    v22 = (uint64_t *)&v67[v20];
    v95 = (void *)v22[10];
    v96 = (void *)v22[9];
    v93 = v22[12];
    v94 = v22[11];
    v91 = v22[14];
    v92 = v22[13];
    v89 = v22[16];
    v90 = v22[15];
    v87 = v22[18];
    v88 = v22[17];
    v85 = (void *)v22[20];
    v86 = v22[19];
    v83 = v22[22];
    v84 = v22[21];
    v81 = v22[24];
    v82 = v22[23];
    v79 = v22[26];
    v80 = v22[25];
    v77 = (void *)v22[28];
    v78 = (void *)v22[27];
    v76 = v22[29];
    v75 = v22[30];
    v66 = a1;
    v74 = v22[31];
    v73 = v22[32];
    v72 = v22[33];
    v71 = v22[34];
    v70 = v22[35];
    v38 = v22[36];
    v39 = v22[37];
    v40 = v22[38];
    v41 = v22[39];
    v42 = v22[40];
    v43 = v22[41];
    v44 = v22[42];
    v45 = v22[43];
    v46 = v22[44];
    v47 = v22[45];
    v48 = v22[46];
    v49 = v22[47];
    v50 = v22[48];
    v51 = v22[49];
    v52 = v22[50];
    v53 = v22[51];
    v54 = v22[52];
    v55 = v22[53];
    v56 = v22[54];
    v57 = v22[55];
    v58 = v22[56];
    v59 = v22[57];
    v60 = v22[58];
    v61 = v22[59];
    v62 = v22[60];
    v63 = v22[61];
    v64 = v22[62];
    v65 = v22[63];
    v23 = (void *)v22[8];
    v24 = *v22;
    v25 = v22[1];
    v26 = (void *)v22[2];
    v27 = (void *)v22[3];
    v28 = (void *)v22[4];
    v29 = (void *)v22[5];
    v30 = v22[6];
    v31 = v22[7];
    sub_2378DD44C(*v22, v25, v26, v27, v28, v29, v30, v31, v23, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64);
    *v21 = v24;
    v21[1] = v25;
    v21[2] = (uint64_t)v26;
    v21[3] = (uint64_t)v27;
    v21[4] = (uint64_t)v28;
    v21[5] = (uint64_t)v29;
    v21[6] = v30;
    v21[7] = v31;
    v21[8] = (uint64_t)v23;
    v14 = v66;
    v21[9] = (uint64_t)v96;
    v21[10] = (uint64_t)v95;
    v21[11] = v94;
    v21[12] = v93;
    v21[13] = v92;
    v21[14] = v91;
    v21[15] = v90;
    v21[16] = v89;
    v21[17] = v88;
    v21[18] = v87;
    v21[19] = v86;
    v21[20] = (uint64_t)v85;
    v21[21] = v84;
    v21[22] = v83;
    v21[23] = v82;
    v21[24] = v81;
    v21[25] = v80;
    v21[26] = v79;
    v21[27] = (uint64_t)v78;
    v21[28] = (uint64_t)v77;
    v21[29] = v76;
    v21[30] = v75;
    v21[31] = v74;
    v21[32] = v73;
    v21[33] = v72;
    v21[34] = v71;
    v21[35] = v70;
    v21[36] = v38;
    v21[37] = v39;
    v21[38] = v40;
    v21[39] = v41;
    v21[40] = v42;
    v21[41] = v43;
    v21[42] = v44;
    v21[43] = v45;
    v21[44] = v46;
    v21[45] = v47;
    v21[46] = v48;
    v21[47] = v49;
    v21[48] = v50;
    v21[49] = v51;
    v21[50] = v52;
    v21[51] = v53;
    v21[52] = v54;
    v21[53] = v55;
    v21[54] = v56;
    v21[55] = v57;
    v21[56] = v58;
    v21[57] = v59;
    v21[58] = v60;
    v21[59] = v61;
    v21[60] = v62;
    v21[61] = v63;
    v21[62] = v64;
    v21[63] = v65;
    v32 = *(int *)(v69 + 24);
    v33 = &v68[v32];
    v34 = &v67[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
    *((_WORD *)v33 + 12) = *((_WORD *)v34 + 12);
    v36 = *((_QWORD *)v34 + 5);
    *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
    *((_QWORD *)v33 + 5) = v36;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v14;
}

