uint64_t sub_237961CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237961D50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237961D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_237A86654();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_237961DE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237961DF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237A86654();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for AppearanceLogger()
{
  uint64_t result;

  result = qword_256823208;
  if (!qword_256823208)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237961EAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86654();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237961F28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237961F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237961F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237961FC4()
{
  return sub_23796206C("onAppear - %s");
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppearanceLogger() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_237A86654();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237962060()
{
  return sub_23796206C("onDisappear - %s");
}

uint64_t sub_23796206C(const char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppearanceLogger() - 8) + 80);
  return sub_237961190(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_2379620AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379620F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823248);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237962134(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237962170()
{
  return sub_2379621B8(&qword_256823260, &qword_256823258, sub_23796219C);
}

uint64_t sub_23796219C()
{
  return sub_2379621B8(&qword_256823268, &qword_256823248, (uint64_t (*)(void))sub_237962224);
}

uint64_t sub_2379621B8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237962224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256823270;
  if (!qword_256823270)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823250);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_256823270);
  }
  return result;
}

uint64_t LayoutTemplate.scaledZones(for:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  double *v17;
  double v18;
  double v19;
  double v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat *v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  double width;
  double height;
  CGFloat a;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  double v40;
  double v41;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD v50[2];
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CGAffineTransform v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;

  v62 = type metadata accessor for Component();
  v54 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Zone();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v50 - v12;
  v14 = type metadata accessor for LayoutTemplate();
  v15 = *(_QWORD *)(v2 + *(int *)(v14 + 28));
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
    return MEMORY[0x24BEE4AF8];
  v17 = (double *)(v2 + *(int *)(v14 + 24));
  v18 = v17[1];
  v19 = a1 / *v17;
  v64 = MEMORY[0x24BEE4AF8];
  v20 = a2 / v18;
  swift_bridgeObjectRetain();
  sub_2379D64EC(0, v16, 0);
  v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v50[1] = v15;
  v60 = v21;
  v59 = v15 + v21;
  v22 = 0;
  v23 = *(_QWORD *)(v8 + 72);
  v58 = v23;
  v53 = v7;
  v52 = v11;
  v51 = v13;
  v55 = v16;
  do
  {
    v61 = v22;
    sub_2378D07D8(v59 + v23 * v22, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    sub_2378D07D8((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v24 = (CGFloat *)&v13[*(int *)(v7 + 24)];
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    CGAffineTransformMakeScale(&v63, v19, v20);
    v65.origin.x = v25;
    v65.origin.y = v26;
    v65.size.width = v27;
    v65.size.height = v28;
    v66 = CGRectApplyAffineTransform(v65, &v63);
    *(CGRect *)v24 = v66;
    if (v66.size.width != v27 || v66.size.height != v28)
    {
      v30 = *(int *)(v7 + 28);
      v31 = *(_QWORD *)&v13[v30];
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        width = v66.size.width;
        height = v66.size.height;
        v57 = *(int *)(v7 + 28);
        *(_QWORD *)&v63.a = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_2379D64B4(0, v32, 0);
        a = v63.a;
        v36 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        v56 = v31;
        v37 = v31 + v36;
        v38 = *(_QWORD *)(v54 + 72);
        do
        {
          sub_2378D07D8(v37, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v39 = (double *)&v6[*(int *)(v62 + 28)];
          v40 = *v39;
          v41 = v39[1];
          *v39 = width;
          v39[1] = height;
          if (width != v40 || height != v41)
            sub_237981C70(width / v40, height / v41);
          v63.a = a;
          v44 = *(_QWORD *)(*(_QWORD *)&a + 16);
          v43 = *(_QWORD *)(*(_QWORD *)&a + 24);
          if (v44 >= v43 >> 1)
          {
            sub_2379D64B4(v43 > 1, v44 + 1, 1);
            a = v63.a;
          }
          *(_QWORD *)(*(_QWORD *)&a + 16) = v44 + 1;
          sub_2378D0858((uint64_t)v6, *(_QWORD *)&a + v36 + v44 * v38, (uint64_t (*)(_QWORD))type metadata accessor for Component);
          v37 += v38;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease_n();
        v13 = v51;
        *(CGFloat *)&v51[v57] = a;
        v7 = v53;
        v11 = v52;
        v16 = v55;
      }
      else
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v13[v30] = MEMORY[0x24BEE4AF8];
        v16 = v55;
      }
    }
    sub_2378DE6A4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v45 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2379D64EC(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v64;
    }
    v46 = v61;
    v48 = *(_QWORD *)(v45 + 16);
    v47 = *(_QWORD *)(v45 + 24);
    if (v48 >= v47 >> 1)
    {
      sub_2379D64EC(v47 > 1, v48 + 1, 1);
      v45 = v64;
    }
    v22 = v46 + 1;
    *(_QWORD *)(v45 + 16) = v48 + 1;
    v23 = v58;
    sub_2378D0858((uint64_t)v13, v45 + v60 + v48 * v58, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  }
  while (v22 != v16);
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t type metadata accessor for LayoutTemplate()
{
  uint64_t result;

  result = qword_256823370;
  if (!qword_256823370)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LayoutTemplate.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237A86594();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t LayoutTemplate.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LayoutTemplate() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

double LayoutTemplate.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for LayoutTemplate() + 24));
}

int *LayoutTemplate.init(id:name:size:zones:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v14;
  int *result;
  _QWORD *v16;
  double *v17;

  v14 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  result = (int *)type metadata accessor for LayoutTemplate();
  v16 = (_QWORD *)(a5 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  *(_QWORD *)(a5 + result[7]) = a4;
  v17 = (double *)(a5 + result[6]);
  *v17 = a6;
  v17[1] = a7;
  return result;
}

uint64_t sub_237962814()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237962838 + 4 * byte_237A99AA8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_237962838()
{
  return 1701667182;
}

uint64_t sub_237962848()
{
  return 1702521203;
}

uint64_t sub_237962858()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_23796286C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237968F00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237962890()
{
  sub_237968768();
  return sub_237A88718();
}

uint64_t sub_2379628B8()
{
  sub_237968768();
  return sub_237A88724();
}

uint64_t LayoutTemplate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568232F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237968768();
  sub_237A886B8();
  LOBYTE(v13) = 0;
  sub_237A86594();
  sub_23786FAA0(&qword_256820320, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_237A882B0();
  if (!v2)
  {
    v9 = type metadata accessor for LayoutTemplate();
    LOBYTE(v13) = 1;
    sub_237A88274();
    v13 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v12 = 2;
    type metadata accessor for CGSize(0);
    sub_23786FAA0(&qword_256823300, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_237A882B0();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568223C8);
    sub_23793EDAC(&qword_2568223D0, &qword_2568223D8, (uint64_t)&protocol conformance descriptor for Zone, MEMORY[0x24BEE12A0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LayoutTemplate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  __int128 v25;
  char v26;

  v19 = a2;
  v20 = sub_237A86594();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823308);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for LayoutTemplate();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237968768();
  v22 = v7;
  v11 = (uint64_t)v24;
  sub_237A88688();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v12 = v5;
  v24 = a1;
  LOBYTE(v25) = 0;
  sub_23786FAA0(&qword_256820318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v20;
  v14 = v21;
  sub_237A881F0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v23, v13);
  LOBYTE(v25) = 1;
  v15 = sub_237A881B4();
  v16 = (uint64_t *)&v10[v8[5]];
  *v16 = v15;
  v16[1] = v17;
  type metadata accessor for CGSize(0);
  v26 = 2;
  sub_23786FAA0(&qword_256823310, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
  sub_237A881F0();
  *(_OWORD *)&v10[v8[6]] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568223C8);
  v26 = 3;
  sub_23793EDAC(&qword_256822428, &qword_256822430, (uint64_t)&protocol conformance descriptor for Zone, MEMORY[0x24BEE12D0]);
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v14);
  *(_QWORD *)&v10[v8[7]] = v25;
  sub_2378D07D8((uint64_t)v10, v19, (uint64_t (*)(_QWORD))type metadata accessor for LayoutTemplate);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v24);
  return sub_2378DE6A4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for LayoutTemplate);
}

uint64_t sub_237962E88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LayoutTemplate.init(from:)(a1, a2);
}

uint64_t sub_237962E9C(_QWORD *a1)
{
  return LayoutTemplate.encode(to:)(a1);
}

double sub_237962EB0()
{
  double result;

  qword_256823278 = 0;
  unk_256823280 = 0;
  result = 1920.0;
  xmmword_256823288 = xmmword_237A99CC0;
  return result;
}

double static LayoutTemplate.Constants.clusterDisplayRect.getter()
{
  if (qword_25681E310 != -1)
    swift_once();
  return *(double *)&qword_256823278;
}

double sub_237962F14()
{
  double result;

  qword_256823298 = 0;
  unk_2568232A0 = 0;
  result = 1920.0;
  xmmword_2568232A8 = xmmword_237A99CD0;
  return result;
}

double static LayoutTemplate.Constants.consoleDisplayRect.getter()
{
  if (qword_25681E318 != -1)
    swift_once();
  return *(double *)&qword_256823298;
}

double sub_237962F78()
{
  double result;

  qword_2568232B8 = 0;
  unk_2568232C0 = 0;
  result = 1920.0;
  xmmword_2568232C8 = xmmword_237A99CC0;
  return result;
}

double static LayoutTemplate.Constants.passengerDisplayRect.getter()
{
  if (qword_25681E320 != -1)
    swift_once();
  return *(double *)&qword_2568232B8;
}

uint64_t sub_237962FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int *v36;
  _QWORD *v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int *v46;
  _QWORD *v47;
  unint64_t v48;
  CGSize v49;
  uint64_t v50;
  double v51;
  double v52;
  double Height;
  uint64_t v54;
  double v55;
  double v56;
  char *v57;
  uint64_t result;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  int *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  void (*v74)(unint64_t, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  v75 = sub_237A86594();
  v0 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v77 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Component();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568233C8);
  v5 = (int *)type metadata accessor for LayoutTemplate();
  v6 = *((_QWORD *)v5 - 1);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v76 = *(_QWORD *)(v6 + 72);
  v8 = swift_allocObject();
  v62 = xmmword_237A99CE0;
  *(_OWORD *)(v8 + 16) = xmmword_237A99CE0;
  if (qword_25681E310 != -1)
    swift_once();
  v9 = v8 + v7;
  v10 = xmmword_256823288;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1D0);
  v11 = *(_QWORD *)(type metadata accessor for Zone() - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = 2 * v12;
  v16 = v12;
  v67 = 2 * v12;
  v68 = v12;
  v63 = 3 * v12;
  v69 = v14 + 3 * v12;
  v72 = v13 | 7;
  v17 = swift_allocObject();
  v73 = xmmword_237A99CF0;
  *(_OWORD *)(v17 + 16) = xmmword_237A99CF0;
  v64 = (void *)v8;
  v71 = v14;
  static Component.circular.getter((uint64_t)v4);
  sub_237964480(1952867660, 0xE400000000000000, (uint64_t)v4, v17 + v14, 30.0, 30.0, 600.0, 660.0);
  static Component.content.getter((uint64_t)v4);
  sub_237964480(0x7265746E6543, 0xE600000000000000, (uint64_t)v4, v17 + v14 + v16, 660.0, 30.0, 600.0, 660.0);
  static Component.circular.getter((uint64_t)v4);
  sub_237964480(0x7468676952, 0xE500000000000000, (uint64_t)v4, v17 + v14 + v15, 1290.0, 30.0, 600.0, 660.0);
  v18 = v77;
  sub_237A86588();
  v74 = *(void (**)(unint64_t, char *, uint64_t))(v0 + 32);
  v74(v9, v18, v75);
  v19 = v5[5];
  v66 = v9;
  v20 = (_QWORD *)(v9 + v19);
  *v20 = 0x756147206C617544;
  v20[1] = 0xEA00000000006567;
  *(_QWORD *)(v9 + v5[7]) = v17;
  *(_OWORD *)(v9 + v5[6]) = v10;
  v21 = v9 + v76;
  v22 = xmmword_256823288;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v73;
  static Component.circular.getter((uint64_t)v4);
  sub_237964480(1952867660, 0xE400000000000000, (uint64_t)v4, v23 + v14, 30.0, 30.0, 600.0, 660.0);
  v24 = v5;
  v25 = v68;
  static Component.circular.getter((uint64_t)v4);
  sub_237964480(0x7265746E6543, 0xE600000000000000, (uint64_t)v4, v23 + v14 + v25, 660.0, 30.0, 600.0, 660.0);
  v26 = v67;
  static Component.circular.getter((uint64_t)v4);
  sub_237964480(0x7468676952, 0xE500000000000000, (uint64_t)v4, v23 + v14 + v26, 1290.0, 30.0, 600.0, 660.0);
  v27 = v77;
  sub_237A86588();
  v74(v21, v27, v75);
  v65 = v24;
  v28 = v21 + v24[5];
  strcpy((char *)v28, "Triple Gauge");
  *(_BYTE *)(v28 + 13) = 0;
  *(_WORD *)(v28 + 14) = -5120;
  *(_QWORD *)(v21 + v24[7]) = v23;
  *(_OWORD *)(v21 + v24[6]) = v22;
  v61 = 2 * v76;
  v29 = v66;
  v30 = v66 + 2 * v76;
  v31 = xmmword_256823288;
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v73;
  v33 = v32 + v71;
  static Component.modular.getter((uint64_t)v4);
  sub_237964480(1952867660, 0xE400000000000000, (uint64_t)v4, v33, 30.0, 30.0, 600.0, 660.0);
  static Component.modularCompact.getter((uint64_t)v4);
  sub_237964480(0x7265746E6543, 0xE600000000000000, (uint64_t)v4, v33 + v25, 660.0, 30.0, 600.0, 660.0);
  static Component.modularCompact.getter((uint64_t)v4);
  sub_237964480(0x7468676952, 0xE500000000000000, (uint64_t)v4, v33 + v26, 1290.0, 30.0, 600.0, 660.0);
  v34 = v77;
  sub_237A86588();
  v35 = v75;
  v74(v30, v34, v75);
  v36 = v65;
  v37 = (_QWORD *)(v30 + v65[5]);
  *v37 = 0x72616C75646F4DLL;
  v37[1] = 0xE700000000000000;
  *(_QWORD *)(v30 + v36[7]) = v32;
  *(_OWORD *)(v30 + v36[6]) = v31;
  v38 = v29 + v61 + v76;
  v39 = xmmword_256823288;
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v73;
  v41 = v71;
  v42 = v40 + v71;
  static Component.sportLeft.getter((uint64_t)v4);
  sub_237964480(1952867660, 0xE400000000000000, (uint64_t)v4, v42, 30.0, 30.0, 600.0, 660.0);
  v43 = v68;
  static Component.sport.getter((uint64_t)v4);
  sub_237964480(0x7265746E6543, 0xE600000000000000, (uint64_t)v4, v42 + v43, 660.0, 30.0, 600.0, 660.0);
  v44 = v67;
  static Component.sportRight.getter((uint64_t)v4);
  sub_237964480(0x7468676952, 0xE500000000000000, (uint64_t)v4, v42 + v44, 1290.0, 30.0, 600.0, 660.0);
  v45 = v77;
  sub_237A86588();
  v74(v38, v45, v35);
  v46 = v65;
  v47 = (_QWORD *)(v38 + v65[5]);
  *v47 = 0x61472069746C754DLL;
  v47[1] = 0xEB00000000656775;
  *(_QWORD *)(v38 + v46[7]) = v40;
  *(_OWORD *)(v38 + v46[6]) = v39;
  v48 = v66 + 4 * v76;
  v49 = (CGSize)xmmword_256823288;
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v62;
  v51 = *(double *)&qword_256823278;
  v52 = unk_256823280;
  static Component.mapsMediaContent.getter((uint64_t)v4);
  sub_237964480(0x616964654D70614DLL, 0xE800000000000000, (uint64_t)v4, v50 + v41, v51, v52, v49.width, v49.height);
  static Component.mapsMediaLong.getter((uint64_t)v4);
  sub_237964480(1735290700, 0xE400000000000000, (uint64_t)v4, v50 + v41 + v43, v51, v52, v49.width, v49.height);
  v78.origin.x = v51;
  v78.origin.y = v52;
  v78.size = v49;
  Height = CGRectGetHeight(v78);
  static Component.mapsMediaLeft.getter((uint64_t)v4);
  sub_237964480(1952867660, 0xE400000000000000, (uint64_t)v4, v50 + v41 + v44, 30.0, 0.0, 600.0, Height);
  v54 = v50 + v41 + v63;
  v79.origin.x = v51;
  v79.origin.y = v52;
  v79.size = v49;
  v55 = CGRectGetHeight(v79);
  static Component.mapsMediaCenter.getter((uint64_t)v4);
  sub_237964480(0x7265746E6543, 0xE600000000000000, (uint64_t)v4, v54, 660.0, 0.0, 600.0, v55);
  v80.origin.x = v51;
  v80.origin.y = v52;
  v80.size = v49;
  v56 = CGRectGetHeight(v80);
  static Component.mapsMediaRight.getter((uint64_t)v4);
  sub_237964480(0x7468676952, 0xE500000000000000, (uint64_t)v4, v50 + v41 + 4 * v43, 1290.0, 0.0, 600.0, v56);
  v57 = v77;
  sub_237A86588();
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v74)(v48, v57, v75);
  v59 = v48 + v46[5];
  strcpy((char *)v59, "Maps & Media");
  *(_BYTE *)(v59 + 13) = 0;
  *(_WORD *)(v59 + 14) = -5120;
  *(_QWORD *)(v48 + v46[7]) = v50;
  *(CGSize *)(v48 + v46[6]) = v49;
  off_2568232D8 = v64;
  return result;
}

int *static Component.circular.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  void (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  int *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void);
  uint64_t v66;
  unint64_t v67;
  __int128 v68;
  int *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int128 v81;
  void (*v82)(void);
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void (*v92)(void);
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(void);
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  int *v118;
  int64x2_t v119;
  char *v120;
  char *v121;
  unint64_t v122;
  void (*v123)(void);
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;

  v117 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v116 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v111 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v128 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A99D00;
  v115 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v19 = v16 + v12[9];
  v124 = v17;
  v20 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v19, 1, 1, v17);
  v21 = (_QWORD *)(v16 + v12[10]);
  *v21 = 0;
  v21[1] = 0;
  v118 = v12;
  v22 = v12[11];
  v122 = v16;
  v23 = v16 + v22;
  sub_237A86588();
  v121 = v8;
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v121);
  sub_237968834((uint64_t)v6, v23);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v23 + *(int *)(v127 + 52)) = v24;
  v25 = v122;
  *(_QWORD *)(v122 + 120) = 12621;
  *(_QWORD *)(v25 + 128) = 0xE200000000000000;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = xmmword_237A99D10;
  *(int64x2_t *)(v25 + 64) = vdupq_n_s64(0x4082700000000000uLL);
  v130 = 0u;
  v131 = 0u;
  v129 = 0u;
  *(double *)(v25 + 80) = sub_23795B77C((uint64_t)&v129, 5.0, 35.0, 590.0, 590.0);
  *(_QWORD *)(v25 + 88) = v26;
  *(_QWORD *)(v25 + 96) = v27;
  *(_QWORD *)(v25 + 104) = v28;
  *(_QWORD *)(v25 + 112) = 0;
  sub_23790760C((uint64_t)v11, v19);
  swift_bridgeObjectRelease();
  v29 = (uint64_t)v6;
  v30 = v11;
  v120 = v11;
  v31 = v25 + v128;
  *v21 = 0;
  v21[1] = 0;
  v32 = v124;
  v33 = v20;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v20)(v30, 1, 1, v124);
  v34 = v118;
  *(_QWORD *)&v126 = v31 + v118[9];
  v20();
  v35 = (_QWORD *)(v31 + v34[10]);
  *v35 = 0;
  v35[1] = 0;
  v36 = v31 + v34[11];
  v37 = (uint64_t)v121;
  sub_237A86588();
  sub_2379687AC(v37, v29);
  v38 = qword_256825198;
  sub_2379687F4(v37);
  v39 = v29;
  sub_237968834(v29, v36);
  *(_QWORD *)(v36 + *(int *)(v127 + 52)) = v38;
  *(_QWORD *)(v31 + 120) = 12877;
  *(_QWORD *)(v31 + 128) = 0xE200000000000000;
  *(_OWORD *)v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  *(_OWORD *)(v31 + 32) = 0u;
  *(_OWORD *)(v31 + 48) = xmmword_237A99D20;
  v119 = vdupq_n_s64(0x4060400000000000uLL);
  *(int64x2_t *)(v31 + 64) = v119;
  v130 = 0u;
  v131 = 0u;
  v129 = 0u;
  *(double *)(v31 + 80) = sub_23795B77C((uint64_t)&v129, 235.0, 120.0, 130.0, 130.0);
  *(_QWORD *)(v31 + 88) = v40;
  *(_QWORD *)(v31 + 96) = v41;
  *(_QWORD *)(v31 + 104) = v42;
  *(_QWORD *)(v31 + 112) = 1;
  v43 = (uint64_t)v120;
  sub_23790760C((uint64_t)v120, v126);
  swift_bridgeObjectRelease();
  v126 = xmmword_237A99D30;
  *(_OWORD *)v35 = xmmword_237A99D30;
  v114 = 2 * v128;
  v44 = v25 + 2 * v128;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v33)(v43, 1, 1, v32);
  v113 = v44 + v34[9];
  v33();
  v45 = (_QWORD *)(v44 + v34[10]);
  *v45 = 0;
  v45[1] = 0;
  v46 = v44 + v34[11];
  v47 = (uint64_t)v121;
  sub_237A86588();
  v48 = v39;
  v125 = v39;
  sub_2379687AC(v47, v39);
  v49 = qword_256825198;
  sub_2379687F4(v47);
  sub_237968834(v48, v46);
  *(_QWORD *)(v46 + *(int *)(v127 + 52)) = v49;
  *(_QWORD *)(v44 + 120) = 13133;
  *(_QWORD *)(v44 + 128) = 0xE200000000000000;
  *(_OWORD *)v44 = 0u;
  *(_OWORD *)(v44 + 16) = 0u;
  *(_OWORD *)(v44 + 32) = 0u;
  *(_OWORD *)(v44 + 48) = xmmword_237A99D40;
  *(int64x2_t *)(v44 + 64) = v119;
  v130 = 0u;
  v131 = 0u;
  v129 = 0u;
  *(double *)(v44 + 80) = sub_23795B77C((uint64_t)&v129, 90.0, 240.0, 130.0, 130.0);
  *(_QWORD *)(v44 + 88) = v50;
  *(_QWORD *)(v44 + 96) = v51;
  *(_QWORD *)(v44 + 104) = v52;
  *(_QWORD *)(v44 + 112) = 1;
  v53 = (uint64_t)v120;
  sub_23790760C((uint64_t)v120, v113);
  swift_bridgeObjectRelease();
  *(_OWORD *)v45 = v126;
  v54 = v25 + v114 + v128;
  v55 = v53;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v33)(v53, 1, 1, v32);
  v56 = v54 + v34[9];
  v123 = v33;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v33)(v56, 1, 1, v32);
  v57 = (_QWORD *)(v54 + v34[10]);
  *v57 = 0;
  v57[1] = 0;
  v58 = v54 + v34[11];
  sub_237A86588();
  v59 = v125;
  sub_2379687AC(v47, v125);
  v60 = qword_256825198;
  sub_2379687F4(v47);
  sub_237968834(v59, v58);
  *(_QWORD *)(v58 + *(int *)(v127 + 52)) = v60;
  *(_QWORD *)(v54 + 120) = 13389;
  *(_QWORD *)(v54 + 128) = 0xE200000000000000;
  *(_OWORD *)v54 = 0u;
  *(_OWORD *)(v54 + 16) = 0u;
  *(_OWORD *)(v54 + 32) = 0u;
  *(_OWORD *)(v54 + 48) = xmmword_237A99D50;
  *(int64x2_t *)(v54 + 64) = v119;
  v130 = 0u;
  v131 = 0u;
  v129 = 0u;
  *(double *)(v54 + 80) = sub_23795B77C((uint64_t)&v129, 380.0, 240.0, 130.0, 130.0);
  *(_QWORD *)(v54 + 88) = v61;
  *(_QWORD *)(v54 + 96) = v62;
  *(_QWORD *)(v54 + 104) = v63;
  *(_QWORD *)(v54 + 112) = 1;
  sub_23790760C(v55, v56);
  swift_bridgeObjectRelease();
  *(_OWORD *)v57 = v126;
  if (qword_25681E348 != -1)
    swift_once();
  v119.i64[0] = qword_2568706A0;
  if (qword_25681E350 != -1)
    swift_once();
  v113 = *((_QWORD *)&xmmword_2568706B0 + 1);
  v114 = xmmword_2568706B0;
  v65 = v123;
  v64 = v124;
  if (qword_25681E340 != -1)
    swift_once();
  v66 = 4 * v128;
  v67 = v122 + 4 * v128;
  v68 = xmmword_256870690;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v55, 1, 1, v64);
  v69 = v118;
  v70 = v67 + v118[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v70, 1, 1, v64);
  v71 = (_QWORD *)(v67 + v69[10]);
  *v71 = 0;
  v71[1] = 0;
  v72 = v67 + v69[11];
  v73 = (uint64_t)v121;
  sub_237A86588();
  v74 = v125;
  sub_2379687AC(v73, v125);
  v75 = qword_256825198;
  sub_2379687F4(v73);
  sub_237968834(v74, v72);
  *(_QWORD *)(v72 + *(int *)(v127 + 52)) = v75;
  *(_QWORD *)(v67 + 120) = 12611;
  *(_QWORD *)(v67 + 128) = 0xE200000000000000;
  *(_QWORD *)v67 = 1;
  v76 = v114;
  *(_QWORD *)(v67 + 8) = v119.i64[0];
  *(_QWORD *)(v67 + 16) = v76;
  *(_QWORD *)(v67 + 24) = v113;
  *(_OWORD *)(v67 + 32) = v126;
  *(_QWORD *)(v67 + 48) = 0;
  *(_QWORD *)(v67 + 56) = 0;
  *(_OWORD *)(v67 + 64) = v68;
  *(_OWORD *)(v67 + 80) = 0u;
  *(_OWORD *)(v67 + 96) = 0u;
  *(_QWORD *)(v67 + 112) = 0;
  sub_23790760C(v55, v70);
  swift_bridgeObjectRelease();
  v77 = v122;
  v78 = v122 + v66 + v128;
  *v71 = 0;
  v71[1] = 0;
  v79 = qword_2568706A0;
  v113 = qword_2568706A0;
  v81 = xmmword_2568706B0;
  v119.i64[0] = v81 >> 64;
  v80 = v81;
  v114 = xmmword_2568706B0;
  v82 = v123;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v123)(v55, 1, 1, v124);
  v112 = v78 + v69[9];
  v82();
  v83 = (_QWORD *)(v78 + v69[10]);
  *v83 = 0;
  v83[1] = 0;
  v84 = v78 + v69[11];
  sub_237A86588();
  v85 = v125;
  sub_2379687AC(v73, v125);
  v86 = qword_256825198;
  sub_2379687F4(v73);
  sub_237968834(v85, v84);
  v87 = v127;
  *(_QWORD *)(v84 + *(int *)(v127 + 52)) = v86;
  *(_QWORD *)(v78 + 120) = 12867;
  *(_QWORD *)(v78 + 128) = 0xE200000000000000;
  *(_QWORD *)v78 = 2;
  *(_QWORD *)(v78 + 8) = v79;
  v88 = v119.i64[0];
  *(_QWORD *)(v78 + 16) = v80;
  *(_QWORD *)(v78 + 24) = v88;
  *(_OWORD *)(v78 + 32) = v126;
  *(_OWORD *)(v78 + 48) = xmmword_237A99D60;
  *(_OWORD *)(v78 + 64) = v68;
  *(_OWORD *)(v78 + 80) = 0u;
  *(_OWORD *)(v78 + 96) = 0u;
  *(_QWORD *)(v78 + 112) = 0;
  v89 = (uint64_t)v120;
  sub_23790760C((uint64_t)v120, v112);
  swift_bridgeObjectRelease();
  v90 = v77 + 6 * v128;
  *v83 = 0;
  v83[1] = 0;
  v91 = v89;
  v92 = v123;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v123)(v89, 1, 1, v124);
  v112 = v90 + v69[9];
  v92();
  v93 = (_QWORD *)(v90 + v69[10]);
  *v93 = 0;
  v93[1] = 0;
  v94 = v90 + v69[11];
  sub_237A86588();
  v95 = v125;
  sub_2379687AC(v73, v125);
  v96 = qword_256825198;
  sub_2379687F4(v73);
  sub_237968834(v95, v94);
  *(_QWORD *)(v94 + *(int *)(v87 + 52)) = v96;
  *(_QWORD *)(v90 + 120) = 13123;
  *(_QWORD *)(v90 + 128) = 0xE200000000000000;
  *(_QWORD *)v90 = 4;
  v97 = v113;
  v98 = v114;
  *(_QWORD *)(v90 + 8) = v113;
  *(_QWORD *)(v90 + 16) = v98;
  *(_QWORD *)(v90 + 24) = v88;
  *(_OWORD *)(v90 + 32) = v126;
  *(_OWORD *)(v90 + 48) = xmmword_237A99D70;
  *(_OWORD *)(v90 + 64) = v68;
  *(_OWORD *)(v90 + 80) = 0u;
  *(_OWORD *)(v90 + 96) = 0u;
  *(_QWORD *)(v90 + 112) = 0;
  v99 = v91;
  sub_23790760C(v91, v112);
  swift_bridgeObjectRelease();
  v100 = v122 - v128 + 8 * v128;
  *v93 = 0;
  v93[1] = 0;
  v101 = v123;
  v102 = v124;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v123)(v91, 1, 1, v124);
  v103 = v100 + v69[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v101)(v103, 1, 1, v102);
  v104 = (_QWORD *)(v100 + v69[10]);
  *v104 = 0;
  v104[1] = 0;
  v105 = v100 + v69[11];
  sub_237A86588();
  v106 = v125;
  sub_2379687AC(v73, v125);
  v107 = qword_256825198;
  sub_2379687F4(v73);
  sub_237968834(v106, v105);
  *(_QWORD *)(v105 + *(int *)(v127 + 52)) = v107;
  *(_QWORD *)(v100 + 120) = 13379;
  *(_QWORD *)(v100 + 128) = 0xE200000000000000;
  *(_QWORD *)v100 = 8;
  *(_QWORD *)(v100 + 8) = v97;
  v108 = v119.i64[0];
  *(_QWORD *)(v100 + 16) = v98;
  *(_QWORD *)(v100 + 24) = v108;
  *(_OWORD *)(v100 + 32) = v126;
  *(_OWORD *)(v100 + 48) = xmmword_237A99D80;
  *(_OWORD *)(v100 + 64) = v68;
  *(_OWORD *)(v100 + 80) = 0u;
  *(_OWORD *)(v100 + 96) = 0u;
  *(_QWORD *)(v100 + 112) = 0;
  sub_23790760C(v99, v103);
  swift_bridgeObjectRelease();
  *v104 = 0;
  v104[1] = 0;
  v109 = (uint64_t)v116;
  sub_237A86588();
  LOBYTE(v129) = 0;
  return Component.init(id:type:name:size:slots:)(v109, (char *)&v129, 0x72616C7563726943, 0xE800000000000000, v115, v117, 600.0, 660.0);
}

uint64_t sub_237964480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  __int16 v27;
  char v28;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v24[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F180);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Component() - 8) + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_237A8A9F0;
  sub_2378D07D8(a3, v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  v28 = 2;
  v26 = 0;
  v27 = 256;
  sub_237A86588();
  v24[0] = 0;
  v24[1] = 0;
  v25 = 2;
  Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)((uint64_t)v18, a1, a2, v21, (uint64_t)v24, &v28, &v26, 0, a4, a5, a6, a7, a8);
  return sub_2378DE6A4(a3, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

int *static Component.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12620;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v17 + 56) = 0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99D90;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  v27 = 0;
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0x746E65746E6F43, 0xE700000000000000, v16, v26, 600.0, 660.0);
}

int *static Component.modular.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;

  v38 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v37 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v34 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A95640;
  v36 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  v35 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v33 = v16 + v12[9];
  v18();
  v19 = (_QWORD *)(v16 + v12[10]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v21 = v16 + v20;
  v22 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v21 + *(int *)(v23 + 52)) = v22;
  *(_QWORD *)(v16 + 120) = 12621;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_237A99DA0;
  *(_OWORD *)(v16 + 64) = xmmword_237A99DB0;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_QWORD *)(v16 + 112) = 0;
  v24 = (uint64_t)v35;
  sub_23790760C((uint64_t)v35, v33);
  swift_bridgeObjectRelease();
  v25 = v16 + v34;
  *v19 = 0;
  v19[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v24, 1, 1, v17);
  v26 = v25 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v26, 1, 1, v17);
  v27 = (_QWORD *)(v25 + v12[10]);
  *v27 = 0;
  v27[1] = 0;
  v28 = v25 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  v29 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v28);
  *(_QWORD *)(v28 + *(int *)(v23 + 52)) = v29;
  *(_QWORD *)(v25 + 120) = 12627;
  *(_QWORD *)(v25 + 128) = 0xE200000000000000;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_QWORD *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 40) = 1;
  *(_OWORD *)(v25 + 48) = xmmword_237A99DC0;
  *(_OWORD *)(v25 + 64) = xmmword_237A99DD0;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_QWORD *)(v25 + 112) = 0;
  sub_23790760C(v24, v26);
  swift_bridgeObjectRelease();
  *v27 = 0;
  v27[1] = 0;
  v30 = (uint64_t)v37;
  sub_237A86588();
  v39 = 0;
  return Component.init(id:type:name:size:slots:)(v30, &v39, 0x72616C75646F4DLL, 0xE700000000000000, v36, v38, 600.0, 660.0);
}

int *static Component.modularCompact.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;

  v39 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v35 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A95640;
  v37 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  v36 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v34 = v16 + v12[9];
  v18();
  v19 = (_QWORD *)(v16 + v12[10]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v21 = v16 + v20;
  v22 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v21 + *(int *)(v23 + 52)) = v22;
  *(_QWORD *)(v16 + 120) = 12627;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  v33 = xmmword_237A99DD0;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_237A99DE0;
  *(_OWORD *)(v16 + 64) = xmmword_237A99DD0;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_QWORD *)(v16 + 112) = 0;
  v24 = (uint64_t)v36;
  sub_23790760C((uint64_t)v36, v34);
  swift_bridgeObjectRelease();
  v25 = v16 + v35;
  *v19 = 0;
  v19[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v24, 1, 1, v17);
  v26 = v25 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v26, 1, 1, v17);
  v27 = (_QWORD *)(v25 + v12[10]);
  *v27 = 0;
  v27[1] = 0;
  v28 = v25 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  v29 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v28);
  *(_QWORD *)(v28 + *(int *)(v23 + 52)) = v29;
  *(_QWORD *)(v25 + 120) = 12883;
  *(_QWORD *)(v25 + 128) = 0xE200000000000000;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_QWORD *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 40) = 1;
  v30 = v33;
  *(_OWORD *)(v25 + 48) = xmmword_237A99DC0;
  *(_OWORD *)(v25 + 64) = v30;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_QWORD *)(v25 + 112) = 0;
  sub_23790760C(v24, v26);
  swift_bridgeObjectRelease();
  *v27 = 0;
  v27[1] = 0;
  v31 = (uint64_t)v38;
  sub_237A86588();
  v40 = 0;
  return Component.init(id:type:name:size:slots:)(v31, &v40, 0x2072616C75646F4DLL, 0xEF746361706D6F43, v37, v39, 600.0, 660.0);
}

int *static Component.sportLeft.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void);
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(void);
  uint64_t v66;
  int64x2_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v70 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v69 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v65 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v75 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A89BC0;
  v68 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v67.i64[0] = v16 + v12[9];
  v18();
  v19 = (_QWORD *)(v16 + v12[10]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v12[11];
  sub_237A86588();
  v21 = (uint64_t)v6;
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v22 = v16 + v20;
  v23 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  v74 = v21;
  sub_237968834(v21, v22);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v22 + *(int *)(v73 + 52)) = v23;
  *(_QWORD *)(v16 + 120) = 12611;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = xmmword_237A99DF0;
  *(int64x2_t *)(v16 + 64) = vdupq_n_s64(0x4077E00000000000uLL);
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v16 + 80) = sub_23795B77C((uint64_t)&v76, 197.0, 84.0, 382.0, 382.0);
  *(_QWORD *)(v16 + 88) = v24;
  *(_QWORD *)(v16 + 96) = v25;
  *(_QWORD *)(v16 + 104) = v26;
  *(_QWORD *)(v16 + 112) = 0;
  sub_23790760C((uint64_t)v11, v67.i64[0]);
  swift_bridgeObjectRelease();
  v27 = v16 + v75;
  *v19 = 0;
  v19[1] = 0;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v28 = v27 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v28, 1, 1, v17);
  v29 = v12[10];
  v71 = v11;
  v30 = (_QWORD *)(v27 + v29);
  *v30 = 0;
  v30[1] = 0;
  v31 = v27 + v12[11];
  sub_237A86588();
  v72 = v17;
  v32 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v33 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v32, v31);
  v34 = v18;
  v35 = v73;
  *(_QWORD *)(v31 + *(int *)(v73 + 52)) = v33;
  *(_QWORD *)(v27 + 120) = 12867;
  *(_QWORD *)(v27 + 128) = 0xE200000000000000;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(_OWORD *)(v27 + 48) = xmmword_237A99E00;
  v67 = vdupq_n_s64(0x4064600000000000uLL);
  *(int64x2_t *)(v27 + 64) = v67;
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v27 + 80) = sub_23795B77C((uint64_t)&v76, 21.0, 245.0, 163.0, 163.0);
  *(_QWORD *)(v27 + 88) = v36;
  *(_QWORD *)(v27 + 96) = v37;
  *(_QWORD *)(v27 + 104) = v38;
  *(_QWORD *)(v27 + 112) = 0;
  v39 = (uint64_t)v71;
  sub_23790760C((uint64_t)v71, v28);
  swift_bridgeObjectRelease();
  v65 = v34;
  v66 = 2 * v75;
  v40 = v16 + 2 * v75;
  *v30 = 0;
  v30[1] = 0;
  v41 = v39;
  v42 = v72;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v41, 1, 1, v72);
  v43 = v40 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v43, 1, 1, v42);
  v44 = (_QWORD *)(v40 + v12[10]);
  *v44 = 0;
  v44[1] = 0;
  v45 = v40 + v12[11];
  sub_237A86588();
  v46 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v47 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v46, v45);
  *(_QWORD *)(v45 + *(int *)(v35 + 52)) = v47;
  *(_QWORD *)(v40 + 120) = 13123;
  *(_QWORD *)(v40 + 128) = 0xE200000000000000;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_OWORD *)(v40 + 48) = xmmword_237A99E10;
  *(int64x2_t *)(v40 + 64) = vdupq_n_s64(0x406B600000000000uLL);
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v40 + 80) = sub_23795B77C((uint64_t)&v76, 71.0, 420.0, 219.0, 219.0);
  *(_QWORD *)(v40 + 88) = v48;
  *(_QWORD *)(v40 + 96) = v49;
  *(_QWORD *)(v40 + 104) = v50;
  *(_QWORD *)(v40 + 112) = 0;
  v51 = (uint64_t)v71;
  sub_23790760C((uint64_t)v71, v43);
  swift_bridgeObjectRelease();
  v52 = v65;
  v53 = v16 + v66 + v75;
  *v44 = 0;
  v44[1] = 0;
  v54 = v72;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v51, 1, 1, v72);
  v55 = v53 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v55, 1, 1, v54);
  v56 = (_QWORD *)(v53 + v12[10]);
  *v56 = 0;
  v56[1] = 0;
  v57 = v53 + v12[11];
  sub_237A86588();
  v58 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v59 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v58, v57);
  *(_QWORD *)(v57 + *(int *)(v73 + 52)) = v59;
  *(_QWORD *)(v53 + 120) = 13379;
  *(_QWORD *)(v53 + 128) = 0xE200000000000000;
  *(_OWORD *)v53 = 0u;
  *(_OWORD *)(v53 + 16) = 0u;
  *(_OWORD *)(v53 + 32) = 0u;
  *(_OWORD *)(v53 + 48) = xmmword_237A99E20;
  *(int64x2_t *)(v53 + 64) = v67;
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v53 + 80) = sub_23795B77C((uint64_t)&v76, 417.0, 476.0, 163.0, 163.0);
  *(_QWORD *)(v53 + 88) = v60;
  *(_QWORD *)(v53 + 96) = v61;
  *(_QWORD *)(v53 + 104) = v62;
  *(_QWORD *)(v53 + 112) = 0;
  sub_23790760C(v51, v55);
  swift_bridgeObjectRelease();
  *v56 = 0;
  v56[1] = 0;
  v63 = (uint64_t)v69;
  sub_237A86588();
  LOBYTE(v76) = 0;
  return Component.init(id:type:name:size:slots:)(v63, (char *)&v76, 0x654C2074726F7053, 0xEA00000000007466, v68, v70, 600.0, 660.0);
}

int *static Component.sport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[3];

  v55 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v54 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v49 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v57 = *(_QWORD *)(v13 + 72);
  v15 = (uint64_t)v11;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A99CF0;
  v53 = v16;
  v17 = v16 + v14;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v15, 1, 1, v18);
  v20 = v17 + v12[9];
  v52 = v19;
  v19(v20, 1, 1, v18);
  v21 = (_QWORD *)(v17 + v12[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v23);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v23 + *(int *)(v56 + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12621;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = xmmword_237A99E30;
  *(int64x2_t *)(v17 + 64) = vdupq_n_s64(0x4082200000000000uLL);
  memset(v58, 0, sizeof(v58));
  *(double *)(v17 + 80) = sub_23795B77C((uint64_t)v58, 10.0, 40.0, 580.0, 580.0);
  *(_QWORD *)(v17 + 88) = v25;
  *(_QWORD *)(v17 + 96) = v26;
  *(_QWORD *)(v17 + 104) = v27;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C(v15, v20);
  swift_bridgeObjectRelease();
  v28 = v17 + v57;
  *v21 = 0;
  v21[1] = 0;
  v29 = v18;
  v30 = v18;
  v50 = v18;
  v31 = v52;
  v52(v15, 1, 1, v29);
  v32 = v28 + v12[9];
  v31(v32, 1, 1, v30);
  v33 = (_QWORD *)(v28 + v12[10]);
  *v33 = 0;
  v33[1] = 0;
  v34 = v28 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  v49 = v15;
  v35 = (uint64_t)v6;
  v36 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v35, v34);
  *(_QWORD *)(v34 + *(int *)(v56 + 52)) = v36;
  *(_QWORD *)(v28 + 120) = 12611;
  *(_QWORD *)(v28 + 128) = 0xE200000000000000;
  *(_OWORD *)v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_QWORD *)(v28 + 32) = 0;
  *(_QWORD *)(v28 + 40) = 1;
  *(_QWORD *)(v28 + 48) = 0;
  *(_QWORD *)(v28 + 56) = 0;
  v51 = xmmword_237A99E40;
  *(_OWORD *)(v28 + 64) = xmmword_237A99E40;
  *(_OWORD *)(v28 + 80) = 0u;
  *(_OWORD *)(v28 + 96) = 0u;
  *(_QWORD *)(v28 + 112) = 0;
  v37 = v49;
  sub_23790760C(v49, v32);
  swift_bridgeObjectRelease();
  v38 = v17 + 2 * v57;
  *v33 = 0;
  v33[1] = 0;
  v39 = v37;
  v40 = v37;
  v41 = v50;
  v31(v39, 1, 1, v50);
  v42 = v38 + v12[9];
  v31(v42, 1, 1, v41);
  v43 = (_QWORD *)(v38 + v12[10]);
  *v43 = 0;
  v43[1] = 0;
  v44 = v38 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, v35);
  v45 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v35, v44);
  *(_QWORD *)(v44 + *(int *)(v56 + 52)) = v45;
  *(_QWORD *)(v38 + 120) = 12867;
  *(_QWORD *)(v38 + 128) = 0xE200000000000000;
  *(_OWORD *)v38 = 0u;
  *(_OWORD *)(v38 + 16) = 0u;
  *(_QWORD *)(v38 + 32) = 0;
  *(_QWORD *)(v38 + 40) = 1;
  v46 = v51;
  *(_OWORD *)(v38 + 48) = xmmword_237A99E50;
  *(_OWORD *)(v38 + 64) = v46;
  *(_OWORD *)(v38 + 80) = 0u;
  *(_OWORD *)(v38 + 96) = 0u;
  *(_QWORD *)(v38 + 112) = 0;
  sub_23790760C(v40, v42);
  swift_bridgeObjectRelease();
  *v43 = 0;
  v43[1] = 0;
  v47 = (uint64_t)v54;
  sub_237A86588();
  LOBYTE(v58[0]) = 0;
  return Component.init(id:type:name:size:slots:)(v47, (char *)v58, 0x74726F7053, 0xE500000000000000, v53, v55, 600.0, 660.0);
}

int *static Component.sportRight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void);
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(void);
  uint64_t v66;
  int64x2_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v70 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v69 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v65 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v75 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A89BC0;
  v68 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v67.i64[0] = v16 + v12[9];
  v18();
  v19 = (_QWORD *)(v16 + v12[10]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v12[11];
  sub_237A86588();
  v21 = (uint64_t)v6;
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v22 = v16 + v20;
  v23 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  v74 = v21;
  sub_237968834(v21, v22);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v22 + *(int *)(v73 + 52)) = v23;
  *(_QWORD *)(v16 + 120) = 12611;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = xmmword_237A99E60;
  *(int64x2_t *)(v16 + 64) = vdupq_n_s64(0x4077E00000000000uLL);
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v16 + 80) = sub_23795B77C((uint64_t)&v76, 21.0, 84.0, 382.0, 382.0);
  *(_QWORD *)(v16 + 88) = v24;
  *(_QWORD *)(v16 + 96) = v25;
  *(_QWORD *)(v16 + 104) = v26;
  *(_QWORD *)(v16 + 112) = 0;
  sub_23790760C((uint64_t)v11, v67.i64[0]);
  swift_bridgeObjectRelease();
  v27 = v16 + v75;
  *v19 = 0;
  v19[1] = 0;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v28 = v27 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v28, 1, 1, v17);
  v29 = v12[10];
  v71 = v11;
  v30 = (_QWORD *)(v27 + v29);
  *v30 = 0;
  v30[1] = 0;
  v31 = v27 + v12[11];
  sub_237A86588();
  v72 = v17;
  v32 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v33 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v32, v31);
  v34 = v18;
  v35 = v73;
  *(_QWORD *)(v31 + *(int *)(v73 + 52)) = v33;
  *(_QWORD *)(v27 + 120) = 12867;
  *(_QWORD *)(v27 + 128) = 0xE200000000000000;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(_OWORD *)(v27 + 48) = xmmword_237A99E70;
  v67 = vdupq_n_s64(0x4064600000000000uLL);
  *(int64x2_t *)(v27 + 64) = v67;
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v27 + 80) = sub_23795B77C((uint64_t)&v76, 416.0, 245.0, 163.0, 163.0);
  *(_QWORD *)(v27 + 88) = v36;
  *(_QWORD *)(v27 + 96) = v37;
  *(_QWORD *)(v27 + 104) = v38;
  *(_QWORD *)(v27 + 112) = 0;
  v39 = (uint64_t)v71;
  sub_23790760C((uint64_t)v71, v28);
  swift_bridgeObjectRelease();
  v65 = v34;
  v66 = 2 * v75;
  v40 = v16 + 2 * v75;
  *v30 = 0;
  v30[1] = 0;
  v41 = v39;
  v42 = v72;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v41, 1, 1, v72);
  v43 = v40 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v43, 1, 1, v42);
  v44 = (_QWORD *)(v40 + v12[10]);
  *v44 = 0;
  v44[1] = 0;
  v45 = v40 + v12[11];
  sub_237A86588();
  v46 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v47 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v46, v45);
  *(_QWORD *)(v45 + *(int *)(v35 + 52)) = v47;
  *(_QWORD *)(v40 + 120) = 13123;
  *(_QWORD *)(v40 + 128) = 0xE200000000000000;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_OWORD *)(v40 + 48) = xmmword_237A99E80;
  *(int64x2_t *)(v40 + 64) = vdupq_n_s64(0x406B600000000000uLL);
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v40 + 80) = sub_23795B77C((uint64_t)&v76, 310.0, 420.0, 219.0, 219.0);
  *(_QWORD *)(v40 + 88) = v48;
  *(_QWORD *)(v40 + 96) = v49;
  *(_QWORD *)(v40 + 104) = v50;
  *(_QWORD *)(v40 + 112) = 0;
  v51 = (uint64_t)v71;
  sub_23790760C((uint64_t)v71, v43);
  swift_bridgeObjectRelease();
  v52 = v65;
  v53 = v16 + v66 + v75;
  *v44 = 0;
  v44[1] = 0;
  v54 = v72;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v51, 1, 1, v72);
  v55 = v53 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v55, 1, 1, v54);
  v56 = (_QWORD *)(v53 + v12[10]);
  *v56 = 0;
  v56[1] = 0;
  v57 = v53 + v12[11];
  sub_237A86588();
  v58 = v74;
  sub_2379687AC((uint64_t)v8, v74);
  v59 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v58, v57);
  *(_QWORD *)(v57 + *(int *)(v73 + 52)) = v59;
  *(_QWORD *)(v53 + 120) = 13379;
  *(_QWORD *)(v53 + 128) = 0xE200000000000000;
  *(_OWORD *)v53 = 0u;
  *(_OWORD *)(v53 + 16) = 0u;
  *(_OWORD *)(v53 + 32) = 0u;
  *(_OWORD *)(v53 + 48) = xmmword_237A99E90;
  *(int64x2_t *)(v53 + 64) = v67;
  v77 = 0u;
  v78 = 0u;
  v76 = 0u;
  *(double *)(v53 + 80) = sub_23795B77C((uint64_t)&v76, 20.0, 476.0, 163.0, 163.0);
  *(_QWORD *)(v53 + 88) = v60;
  *(_QWORD *)(v53 + 96) = v61;
  *(_QWORD *)(v53 + 104) = v62;
  *(_QWORD *)(v53 + 112) = 0;
  sub_23790760C(v51, v55);
  swift_bridgeObjectRelease();
  *v56 = 0;
  v56[1] = 0;
  v63 = (uint64_t)v69;
  sub_237A86588();
  LOBYTE(v76) = 0;
  return Component.init(id:type:name:size:slots:)(v63, (char *)&v76, 0x69522074726F7053, 0xEB00000000746867, v68, v70, 600.0, 660.0);
}

int *static Component.mapsMediaContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12883;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v17 + 56) = 0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99CC0;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  v27 = 0;
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0xD00000000000001ELL, 0x8000000237AB1270, v16, v26, 1920.0, 720.0);
}

int *static Component.mapsMediaLong.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12627;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_OWORD *)(v17 + 48) = xmmword_237A99EA0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99EB0;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  v27 = 0;
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0xD00000000000001BLL, 0x8000000237AB1290, v16, v26, 1920.0, 720.0);
}

int *static Component.mapsMediaLeft.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;

  v38 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v37 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v34 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A95640;
  v36 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  v35 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v33 = v16 + v12[9];
  v18();
  v19 = (_QWORD *)(v16 + v12[10]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v21 = v16 + v20;
  v22 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v21 + *(int *)(v23 + 52)) = v22;
  *(_QWORD *)(v16 + 120) = 12627;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_237A99EA0;
  *(_OWORD *)(v16 + 64) = xmmword_237A99EC0;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_QWORD *)(v16 + 112) = 0;
  v24 = (uint64_t)v35;
  sub_23790760C((uint64_t)v35, v33);
  swift_bridgeObjectRelease();
  v25 = v16 + v34;
  *v19 = 0;
  v19[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v24, 1, 1, v17);
  v26 = v25 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v26, 1, 1, v17);
  v27 = (_QWORD *)(v25 + v12[10]);
  *v27 = 0;
  v27[1] = 0;
  v28 = v25 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  v29 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v28);
  *(_QWORD *)(v28 + *(int *)(v23 + 52)) = v29;
  *(_QWORD *)(v25 + 120) = 12883;
  *(_QWORD *)(v25 + 128) = 0xE200000000000000;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_QWORD *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 40) = 1;
  *(_OWORD *)(v25 + 48) = xmmword_237A99ED0;
  *(_OWORD *)(v25 + 64) = xmmword_237A99EE0;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_QWORD *)(v25 + 112) = 0;
  sub_23790760C(v24, v26);
  swift_bridgeObjectRelease();
  *v27 = 0;
  v27[1] = 0;
  v30 = (uint64_t)v37;
  sub_237A86588();
  v39 = 0;
  return Component.init(id:type:name:size:slots:)(v30, &v39, 0xD00000000000001BLL, 0x8000000237AB12B0, v36, v38, 600.0, 720.0);
}

int *static Component.mapsMediaCenter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12627;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_OWORD *)(v17 + 48) = xmmword_237A99EA0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99EF0;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  v27 = 0;
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0xD00000000000001DLL, 0x8000000237AB12D0, v16, v26, 600.0, 720.0);
}

int *static Component.mapsMediaRight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v50 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v49 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v44 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v52 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A99CF0;
  v48 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v11, 1, 1, v17);
  v19 = v16 + v12[9];
  v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18;
  v18((char *)v19, 1, 1, v17);
  v20 = (_QWORD *)(v16 + v12[10]);
  *v20 = 0;
  v20[1] = 0;
  v21 = v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v22 = v16 + v21;
  v23 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834((uint64_t)v6, v22);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v22 + *(int *)(v51 + 52)) = v23;
  *(_QWORD *)(v16 + 120) = 12627;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_237A99EA0;
  *(_OWORD *)(v16 + 64) = xmmword_237A99F00;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_QWORD *)(v16 + 112) = 0;
  sub_23790760C((uint64_t)v11, v19);
  swift_bridgeObjectRelease();
  v24 = v16 + v52;
  *v20 = 0;
  v20[1] = 0;
  v25 = v17;
  v26 = v17;
  v46 = v17;
  v27 = v47;
  v47((uint64_t)v11, 1, 1, v25);
  v28 = v24 + v12[9];
  v27(v28, 1, 1, v26);
  v29 = (_QWORD *)(v24 + v12[10]);
  *v29 = 0;
  v29[1] = 0;
  v30 = v24 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  v45 = v11;
  v31 = (uint64_t)v6;
  v32 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v31, v30);
  *(_QWORD *)(v30 + *(int *)(v51 + 52)) = v32;
  *(_QWORD *)(v24 + 120) = 12883;
  *(_QWORD *)(v24 + 128) = 0xE200000000000000;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_QWORD *)(v24 + 32) = 0;
  *(_QWORD *)(v24 + 40) = 1;
  *(_OWORD *)(v24 + 48) = xmmword_237A99F10;
  *(_OWORD *)(v24 + 64) = xmmword_237A99F20;
  *(_OWORD *)(v24 + 80) = 0u;
  *(_OWORD *)(v24 + 96) = 0u;
  *(_QWORD *)(v24 + 112) = 0;
  v33 = (uint64_t)v45;
  sub_23790760C((uint64_t)v45, v28);
  swift_bridgeObjectRelease();
  v34 = v16 + 2 * v52;
  *v29 = 0;
  v29[1] = 0;
  v35 = v33;
  v36 = v33;
  v37 = v46;
  v27(v35, 1, 1, v46);
  v38 = v34 + v12[9];
  v27(v38, 1, 1, v37);
  v39 = (_QWORD *)(v34 + v12[10]);
  *v39 = 0;
  v39[1] = 0;
  v40 = v34 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, v31);
  v41 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v31, v40);
  *(_QWORD *)(v40 + *(int *)(v51 + 52)) = v41;
  *(_QWORD *)(v34 + 120) = 13139;
  *(_QWORD *)(v34 + 128) = 0xE200000000000000;
  *(_OWORD *)v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 40) = 1;
  *(_OWORD *)(v34 + 48) = xmmword_237A99F30;
  *(_OWORD *)(v34 + 64) = xmmword_237A99F40;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 96) = 0u;
  *(_QWORD *)(v34 + 112) = 0;
  sub_23790760C(v36, v38);
  swift_bridgeObjectRelease();
  *v39 = 0;
  v39[1] = 0;
  v42 = (uint64_t)v49;
  sub_237A86588();
  v53 = 0;
  return Component.init(id:type:name:size:slots:)(v42, &v53, 0xD00000000000001CLL, 0x8000000237AB12F0, v48, v50, 600.0, 720.0);
}

uint64_t static LayoutTemplate.clusterTemplates.getter()
{
  return sub_2379675F0(&qword_25681E328);
}

uint64_t sub_237967224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  __int128 v18;

  v0 = sub_237A86594();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Component();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568233C8);
  v7 = (int *)type metadata accessor for LayoutTemplate();
  v8 = *(unsigned __int8 *)(*((_QWORD *)v7 - 1) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  v18 = xmmword_237A8A9F0;
  *(_OWORD *)(v10 + 16) = xmmword_237A8A9F0;
  if (qword_25681E318 != -1)
    swift_once();
  v11 = v10 + v9;
  v12 = xmmword_2568232A8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1D0);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Zone() - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v18;
  static Component.content.getter((uint64_t)v6);
  sub_237964480(0x6163696669746F4ELL, 0xEC0000006E6F6974, (uint64_t)v6, v15 + v14, 660.0, 150.0, 600.0, 660.0);
  sub_237A86588();
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v11, v3, v0);
  v17 = (_QWORD *)(v11 + v7[5]);
  *v17 = 0x656C6F736E6F43;
  v17[1] = 0xE700000000000000;
  *(_QWORD *)(v11 + v7[7]) = v15;
  *(_OWORD *)(v11 + v7[6]) = v12;
  qword_2568232E0 = v10;
  return result;
}

uint64_t static LayoutTemplate.centerConsoleTemplates.getter()
{
  return sub_2379675F0(&qword_25681E330);
}

uint64_t sub_23796747C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  v0 = sub_237A86594();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568233C8);
  v4 = (int *)type metadata accessor for LayoutTemplate();
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_237A8A9F0;
  if (qword_25681E320 != -1)
    swift_once();
  v8 = v7 + v6;
  v9 = xmmword_2568232C8;
  sub_237A86588();
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v8, v3, v0);
  v11 = (_QWORD *)(v8 + v4[5]);
  *v11 = 0x65676E6573736150;
  v11[1] = 0xE900000000000072;
  *(_QWORD *)(v8 + v4[7]) = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(v8 + v4[6]) = v9;
  qword_2568232E8 = v7;
  return result;
}

uint64_t static LayoutTemplate.passengerTemplates.getter()
{
  return sub_2379675F0(&qword_25681E338);
}

uint64_t sub_2379675F0(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static LayoutTemplate.primaryTemplates(for:)(_BYTE *a1)
{
  if (!*a1)
  {
    if (qword_25681E328 == -1)
      return swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (*a1 == 1)
  {
    if (qword_25681E330 == -1)
      return swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (qword_25681E338 != -1)
LABEL_9:
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static Component.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F180);
  v0 = *(_QWORD *)(type metadata accessor for Component() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_237A99F50;
  v4 = v3 + v2;
  static Component.circular.getter(v4);
  static Component.sportLeft.getter(v4 + v1);
  static Component.sport.getter(v4 + 2 * v1);
  static Component.mapsMediaLong.getter(v4 + 3 * v1);
  static Component.mapsMediaLeft.getter(v4 + 4 * v1);
  static Component.mapsMediaRight.getter(v4 + 5 * v1);
  static Component.mapsMediaCenter.getter(v4 + 6 * v1);
  static Component.sportRight.getter(v4 + 7 * v1);
  static Component.modular.getter(v4 + 8 * v1);
  static Component.modularCompact.getter(v4 + 9 * v1);
  static Component.modularMinimal.getter(v4 + 10 * v1);
  static Component.content.getter(v4 + 11 * v1);
  static Component.overlay.getter(v4 + 12 * v1);
  return v3;
}

int *static Component.modularMinimal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12627;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_OWORD *)(v17 + 48) = xmmword_237A99DC0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99DD0;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  v27 = 0;
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0x2072616C75646F4DLL, 0xEF6C616D696E694DLL, v16, v26, 600.0, 660.0);
}

int *static Component.overlay.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v13 = (int *)type metadata accessor for Slot();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  v17 = v16 + v15;
  v18 = type metadata accessor for Instrument();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  v20 = v16 + v15 + v13[9];
  v19((char *)(v17 + v13[9]), 1, 1, v18);
  v21 = (_QWORD *)(v17 + v13[10]);
  *v21 = 0;
  v21[1] = 0;
  v22 = v13[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v9, (uint64_t)v7);
  if (qword_25681E410 != -1)
    swift_once();
  v23 = v17 + v22;
  v24 = qword_256825198;
  sub_2379687F4((uint64_t)v9);
  sub_237968834((uint64_t)v7, v23);
  *(_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v24;
  *(_QWORD *)(v17 + 120) = 12623;
  *(_QWORD *)(v17 + 128) = 0xE200000000000000;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 1;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v17 + 56) = 0;
  *(_OWORD *)(v17 + 64) = xmmword_237A99D90;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_QWORD *)(v17 + 112) = 0;
  sub_23790760C((uint64_t)v12, v20);
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  sub_237A86588();
  return Component.init(id:type:name:size:slots:)((uint64_t)v3, &v27, 0x79616C7265764FLL, 0xE700000000000000, v16, v26, 600.0, 660.0);
}

double sub_237967D74()
{
  double result;

  result = 282.0;
  xmmword_256870690 = xmmword_237A99F60;
  return result;
}

void sub_237967D88()
{
  qword_2568706A0 = 0x4074A00000000000;
}

double static Component.cornerRadius(for:)(double a1)
{
  return a1 * 0.5 + 15.0 + 20.0;
}

double sub_237967DB8()
{
  double result;

  result = 300.0;
  xmmword_2568706B0 = xmmword_237A99F70;
  return result;
}

int *static Component.modularOverlapping.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char v66;

  v59 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v1);
  v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v54 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v12 = (int *)type metadata accessor for Slot();
  v13 = *((_QWORD *)v12 - 1);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v65 = *(_QWORD *)(v13 + 72);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_237A89BC0;
  v57 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for Instrument();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v17);
  v19 = v16 + v12[9];
  v63 = v17;
  v20 = v17;
  v21 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v19, 1, 1, v20);
  v22 = (_QWORD *)(v16 + v12[10]);
  *v22 = 0;
  v22[1] = 0;
  v23 = v12[11];
  sub_237A86588();
  v24 = (uint64_t)v6;
  sub_2379687AC((uint64_t)v8, (uint64_t)v6);
  if (qword_25681E410 != -1)
    swift_once();
  v25 = v16 + v23;
  v26 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v24, v25);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  *(_QWORD *)(v25 + *(int *)(v62 + 52)) = v26;
  *(_QWORD *)(v16 + 120) = 12627;
  *(_QWORD *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  v64 = xmmword_237A99F90;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_237A99F80;
  *(_OWORD *)(v16 + 64) = xmmword_237A99F90;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_QWORD *)(v16 + 112) = 0;
  sub_23790760C((uint64_t)v11, v19);
  swift_bridgeObjectRelease();
  v27 = v16 + v65;
  *v22 = 0;
  v22[1] = 0;
  v28 = v63;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v11, 1, 1, v63);
  v56 = v27 + v12[9];
  v21();
  v29 = v12[10];
  v60 = v11;
  v61 = v24;
  v30 = v24;
  v31 = (_QWORD *)(v27 + v29);
  *v31 = 0;
  v31[1] = 0;
  v32 = v27 + v12[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v8, v30);
  v33 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v30, v32);
  v34 = v62;
  *(_QWORD *)(v32 + *(int *)(v62 + 52)) = v33;
  *(_QWORD *)(v27 + 120) = 12883;
  *(_QWORD *)(v27 + 128) = 0xE200000000000000;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_QWORD *)(v27 + 32) = 0;
  *(_QWORD *)(v27 + 40) = 1;
  v35 = v64;
  *(_OWORD *)(v27 + 48) = xmmword_237A99FA0;
  *(_OWORD *)(v27 + 64) = v35;
  *(_OWORD *)(v27 + 80) = 0u;
  *(_OWORD *)(v27 + 96) = 0u;
  *(_QWORD *)(v27 + 112) = 0;
  v36 = (uint64_t)v60;
  sub_23790760C((uint64_t)v60, v56);
  swift_bridgeObjectRelease();
  v56 = 2 * v65;
  v37 = v16 + 2 * v65;
  *v31 = 0;
  v31[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v36, 1, 1, v28);
  v55 = v37 + v12[9];
  v21();
  v38 = (_QWORD *)(v37 + v12[10]);
  *v38 = 0;
  v38[1] = 0;
  v39 = v37 + v12[11];
  sub_237A86588();
  v40 = v61;
  sub_2379687AC((uint64_t)v8, v61);
  v41 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v40, v39);
  *(_QWORD *)(v39 + *(int *)(v34 + 52)) = v41;
  *(_QWORD *)(v37 + 120) = 13139;
  *(_QWORD *)(v37 + 128) = 0xE200000000000000;
  *(_OWORD *)v37 = 0u;
  *(_OWORD *)(v37 + 16) = 0u;
  *(_QWORD *)(v37 + 32) = 0;
  *(_QWORD *)(v37 + 40) = 1;
  v42 = v64;
  *(_OWORD *)(v37 + 48) = xmmword_237A99FB0;
  *(_OWORD *)(v37 + 64) = v42;
  *(_OWORD *)(v37 + 80) = 0u;
  *(_OWORD *)(v37 + 96) = 0u;
  *(_QWORD *)(v37 + 112) = 0;
  v43 = (uint64_t)v60;
  sub_23790760C((uint64_t)v60, v55);
  swift_bridgeObjectRelease();
  v44 = v16 + v56 + v65;
  *v38 = 0;
  v38[1] = 0;
  v45 = v63;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v43, 1, 1, v63);
  v46 = v44 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v46, 1, 1, v45);
  v47 = (_QWORD *)(v44 + v12[10]);
  *v47 = 0;
  v47[1] = 0;
  v48 = v44 + v12[11];
  sub_237A86588();
  v49 = v61;
  sub_2379687AC((uint64_t)v8, v61);
  v50 = qword_256825198;
  sub_2379687F4((uint64_t)v8);
  sub_237968834(v49, v48);
  *(_QWORD *)(v48 + *(int *)(v62 + 52)) = v50;
  *(_QWORD *)(v44 + 120) = 13395;
  *(_QWORD *)(v44 + 128) = 0xE200000000000000;
  *(_OWORD *)v44 = 0u;
  *(_OWORD *)(v44 + 16) = 0u;
  *(_QWORD *)(v44 + 32) = 0;
  *(_QWORD *)(v44 + 40) = 1;
  v51 = v64;
  *(_OWORD *)(v44 + 48) = xmmword_237A99FC0;
  *(_OWORD *)(v44 + 64) = v51;
  *(_OWORD *)(v44 + 80) = 0u;
  *(_OWORD *)(v44 + 96) = 0u;
  *(_QWORD *)(v44 + 112) = 0;
  sub_23790760C(v43, v46);
  swift_bridgeObjectRelease();
  *v47 = 0;
  v47[1] = 0;
  v52 = (uint64_t)v58;
  sub_237A86588();
  v66 = 0;
  return Component.init(id:type:name:size:slots:)(v52, &v66, 0xD000000000000013, 0x8000000237AB1310, v57, v59, 600.0, 660.0);
}

int *static Component.video(for:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41[536];
  unint64_t v42[17];
  _QWORD v43[65];

  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681F178);
  v18 = (int *)type metadata accessor for Slot();
  v19 = *(unsigned __int8 *)(*((_QWORD *)v18 - 1) + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject();
  v37 = xmmword_237A8A9F0;
  *(_OWORD *)(v21 + 16) = xmmword_237A8A9F0;
  v22 = v21 + v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EF60);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v37;
  swift_beginAccess();
  LOBYTE(v42[0]) = byte_25681F720;
  HIDWORD(v42[0]) = dword_25681F724;
  v42[1] = 1056964608;
  v42[2] = 0x3FB999999999999ALL;
  v42[3] = 0;
  v42[4] = 0;
  v42[5] = 0x3FF0000000000000;
  v42[6] = 1056964608;
  v42[7] = 0x3FB999999999999ALL;
  v42[8] = 0;
  v42[9] = 0;
  v42[10] = 0x3FF0000000000000;
  sub_23788F374(v42);
  sub_23787D0C8((uint64_t)v42, v23 + 32);
  v24 = (_QWORD *)v23;
  v25 = (uint64_t)v38;
  VisibilityConfiguration.init(arrayLiteral:)(v24, v43);
  v26 = v43[0];
  v43[0] = 0x6956656E6F685069;
  v43[1] = 0xEB000000006F6564;
  v43[2] = v26;
  sub_23788F404(v43);
  sub_23788F46C(v43, v41);
  sub_237A86588();
  v27 = sub_237A871F4();
  Instrument.init(id:kind:backgroundColor:shadowID:)((uint64_t)v14, v41, v27, 0, 0, (uint64_t)v17);
  v28 = type metadata accessor for Instrument();
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v17, 0, 1, v28);
  v30 = v22 + v18[9];
  v29((char *)v30, 1, 1, v28);
  v31 = (_QWORD *)(v22 + v18[10]);
  *v31 = 0;
  v31[1] = 0;
  v32 = v18[11];
  sub_237A86588();
  sub_2379687AC((uint64_t)v11, v25);
  if (qword_25681E410 != -1)
    swift_once();
  v33 = v22 + v32;
  v34 = qword_256825198;
  sub_2379687F4((uint64_t)v11);
  sub_237968834(v25, v33);
  *(_QWORD *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v34;
  *(_QWORD *)(v22 + 120) = 12397;
  *(_QWORD *)(v22 + 128) = 0xE200000000000000;
  *(_OWORD *)v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_QWORD *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 40) = 1;
  *(_QWORD *)(v22 + 48) = 0;
  *(_QWORD *)(v22 + 56) = 0;
  *(double *)(v22 + 64) = a2;
  *(double *)(v22 + 72) = a3;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_QWORD *)(v22 + 112) = 0;
  sub_23790760C((uint64_t)v17, v30);
  swift_bridgeObjectRelease();
  *v31 = 0;
  v31[1] = 0;
  v35 = (uint64_t)v39;
  sub_237A86588();
  v41[0] = 0;
  return Component.init(id:type:name:size:slots:)(v35, v41, 0x746E65746E6F43, 0xE700000000000000, v21, v40, a2, a3);
}

unint64_t sub_237968768()
{
  unint64_t result;

  result = qword_2568232F8;
  if (!qword_2568232F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99C70, &type metadata for LayoutTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568232F8);
  }
  return result;
}

uint64_t sub_2379687AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379687F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237968834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for LayoutTemplate(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LayoutTemplate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutTemplate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237968BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_237A86594();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutTemplate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237968C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237A86594();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_237968CC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutTemplate.Constants()
{
  return &type metadata for LayoutTemplate.Constants;
}

uint64_t storeEnumTagSinglePayload for LayoutTemplate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237968DA8 + 4 * byte_237A99AB1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237968DDC + 4 * byte_237A99AAC[v4]))();
}

uint64_t sub_237968DDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237968DE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237968DECLL);
  return result;
}

uint64_t sub_237968DF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237968E00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237968E04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237968E0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayoutTemplate.CodingKeys()
{
  return &type metadata for LayoutTemplate.CodingKeys;
}

unint64_t sub_237968E2C()
{
  unint64_t result;

  result = qword_2568233B0;
  if (!qword_2568233B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99C48, &type metadata for LayoutTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568233B0);
  }
  return result;
}

unint64_t sub_237968E74()
{
  unint64_t result;

  result = qword_2568233B8;
  if (!qword_2568233B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99BB8, &type metadata for LayoutTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568233B8);
  }
  return result;
}

unint64_t sub_237968EBC()
{
  unint64_t result;

  result = qword_2568233C0;
  if (!qword_2568233C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A99BE0, &type metadata for LayoutTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568233C0);
  }
  return result;
}

uint64_t sub_237968F00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

_QWORD *sub_237969078(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 32);
    v7 = (char *)a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_237A86F84();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_237969100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_237A86F84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_237969138(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_237A86F84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_237969194(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237A86F84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_237969208(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_237A86F84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_237969264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_237A86F84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_2379692D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379692DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_237A86F84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23796931C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237969328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = sub_237A86F84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ScaledSystemFont()
{
  uint64_t result;

  result = qword_256823428;
  if (!qword_256823428)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2379693A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86F84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237969424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237969434@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  void (*v40)(char *, uint64_t);
  CGFloat MidX;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  CGFloat MidY;
  uint64_t v51;
  CGFloat *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  CGRect v64;
  CGRect v65;

  v58 = a1;
  v63 = a3;
  v4 = sub_237A86D5C();
  v5 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  v62 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823480);
  MEMORY[0x24BDAC7A8](v56);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823488);
  MEMORY[0x24BDAC7A8](v55);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823490);
  MEMORY[0x24BDAC7A8](v57);
  v54 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823498);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A868C4();
  sub_237A868C4();
  v17 = (char *)a2 + *(int *)(type metadata accessor for ScaledSystemFont() + 32);
  v18 = sub_237A86F84();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v10, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
  v20 = sub_237A86FB4();
  sub_2378BC024((uint64_t)v10, &qword_256823478);
  KeyPath = swift_getKeyPath();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823470);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v12, v58, v22);
  v23 = (uint64_t *)&v12[*(int *)(v56 + 36)];
  *v23 = KeyPath;
  v23[1] = v20;
  v24 = *a2;
  v25 = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v12, (uint64_t)v14, &qword_256823480);
  v26 = &v14[*(int *)(v55 + 36)];
  *(_QWORD *)v26 = v25;
  *((_QWORD *)v26 + 1) = v24;
  v26[16] = 0;
  sub_2378BC024((uint64_t)v12, &qword_256823480);
  v27 = a2[1];
  v28 = swift_getKeyPath();
  v29 = v54;
  sub_2378BBFE0((uint64_t)v14, v54, &qword_256823488);
  v30 = (uint64_t *)(v29 + *(int *)(v57 + 36));
  *v30 = v28;
  v30[1] = v27;
  sub_2378BC024((uint64_t)v14, &qword_256823488);
  sub_237A86DB0();
  v31 = v61;
  sub_237A868D0();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = *(void (**)(char *, uint64_t))(v62 + 8);
  v40(v7, v31);
  v64.origin.x = v33;
  v64.origin.y = v35;
  v64.size.width = v37;
  v64.size.height = v39;
  MidX = CGRectGetMidX(v64);
  sub_237A86DB0();
  sub_237A868D0();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v40(v7, v31);
  v65.origin.x = v43;
  v65.origin.y = v45;
  v65.size.width = v47;
  v65.size.height = v49;
  MidY = CGRectGetMidY(v65);
  v51 = v59;
  sub_2378BBFE0(v29, v59, &qword_256823490);
  v52 = (CGFloat *)(v51 + *(int *)(v60 + 36));
  *v52 = MidX;
  v52[1] = MidY;
  sub_2378BC024(v29, &qword_256823490);
  return sub_237969B80(v51, v63);
}

uint64_t sub_237969868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823470);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_23796999C(v3, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, v8);
  result = sub_237969AA8((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *a3 = sub_237969AEC;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

uint64_t sub_23796999C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379699E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823470);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for ScaledSystemFont();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = v0 + *(int *)(v5 + 32) + v7;
  v9 = sub_237A86F84();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_237969AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237969AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256823470) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScaledSystemFont() - 8) + 80);
  return sub_237969434(v1 + v4, (uint64_t *)(v1 + ((v4 + v5 + v6) & ~v6)), a1);
}

uint64_t sub_237969B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_237969BCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568234A0;
  if (!qword_2568234A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568234A8);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEC6F8], v1);
    atomic_store(result, (unint64_t *)&qword_2568234A0);
  }
  return result;
}

uint64_t sub_237969C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_237954150();
  result = sub_237A86B88();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_237969C6C()
{
  sub_237954150();
  return sub_237A86B94();
}

uint64_t sub_237969CBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_23795453C, &qword_256822DD8, &qword_256822DD0, a1);
}

uint64_t sub_237969CE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_256822DD8, (void (*)(uint64_t *))sub_23795453C);
}

uint64_t sub_237969CFC@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_237954784, &qword_256822DF0, &qword_256822DE8, a1);
}

uint64_t sub_237969D20@<X0>(void (*a1)(void)@<X3>, uint64_t *a2@<X5>, uint64_t *a3@<X6>, uint64_t *a4@<X8>)
{
  uint64_t Strong;
  uint64_t result;
  _BYTE v9[16];

  a1();
  sub_237A86B88();
  if ((v9[8] & 1) != 0)
  {
    Strong = 0;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    a3 = a2;
  }
  result = sub_2378BC024((uint64_t)v9, a3);
  *a4 = Strong;
  return result;
}

uint64_t sub_237969DB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_256822DF0, (void (*)(uint64_t *))sub_237954784);
}

uint64_t sub_237969DCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *))
{
  uint64_t v7;
  _BYTE v10[8];
  uint64_t v11;
  BOOL v12;

  v7 = *a1;
  if (*a1)
  {
    swift_weakInit();
    swift_weakAssign();
    a1 = (uint64_t *)sub_237870370((uint64_t)v10, (uint64_t)&v11, a5);
  }
  else
  {
    v11 = 0;
  }
  v12 = v7 == 0;
  a6(a1);
  return sub_237A86B94();
}

uint64_t InstrumentView.init(instrument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  type metadata accessor for LayoutTreatment(0);
  sub_23786FAA0(&qword_2568234B0, type metadata accessor for LayoutTreatment, (uint64_t)&protocol conformance descriptor for LayoutTreatment);
  *(_QWORD *)a2 = sub_237A86A20();
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = swift_getKeyPath();
  *(_BYTE *)(a2 + 24) = 0;
  v5 = type metadata accessor for InstrumentView();
  v6 = (uint64_t *)(a2 + *(int *)(v5 + 24));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  swift_storeEnumTagMultiPayload();
  return sub_2378D0858(a1, a2 + *(int *)(v5 + 28), (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
}

void InstrumentView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[512];
  _BYTE v89[520];

  v87 = a1;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234C0);
  MEMORY[0x24BDAC7A8](v73);
  v74 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234C8);
  MEMORY[0x24BDAC7A8](v81);
  v75 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Instrument();
  MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for RequestContentView(0);
  v6 = MEMORY[0x24BDAC7A8](v72);
  MEMORY[0x24BDAC7A8](v6);
  v70 = (char *)v41 - v7;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234D0);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234D8);
  MEMORY[0x24BDAC7A8](v86);
  v82 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234E0);
  MEMORY[0x24BDAC7A8](v83);
  v84 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234E8);
  MEMORY[0x24BDAC7A8](v71);
  v77 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234F0);
  MEMORY[0x24BDAC7A8](v66);
  v67 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234F8);
  MEMORY[0x24BDAC7A8](v76);
  v68 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823500);
  MEMORY[0x24BDAC7A8](v85);
  v78 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823508);
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823510);
  MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823518);
  MEMORY[0x24BDAC7A8](v53);
  v47 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823520);
  MEMORY[0x24BDAC7A8](v64);
  v55 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823528);
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_237A8747C();
  v41[3] = *(_QWORD *)(v20 - 8);
  v41[4] = v20;
  MEMORY[0x24BDAC7A8](v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823530);
  MEMORY[0x24BDAC7A8](v21);
  v41[6] = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823538);
  v23 = MEMORY[0x24BDAC7A8](v44);
  v41[5] = (char *)v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v41[7] = (char *)v41 - v25;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823540);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823548);
  MEMORY[0x24BDAC7A8](v56);
  v58 = (char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823550);
  MEMORY[0x24BDAC7A8](v49);
  v50 = (char *)v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823558);
  MEMORY[0x24BDAC7A8](v57);
  v51 = (char *)v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823560);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)v41 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823568);
  v41[15] = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41[13] = (char *)v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823570);
  v41[14] = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41[12] = (char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823578);
  v41[1] = *(_QWORD *)(v33 - 8);
  v41[2] = v33;
  MEMORY[0x24BDAC7A8](v33);
  v41[11] = (char *)v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823580);
  v41[8] = *(_QWORD *)(v35 - 8);
  v41[9] = v35;
  MEMORY[0x24BDAC7A8](v35);
  v41[0] = (char *)v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823588);
  MEMORY[0x24BDAC7A8](v48);
  v41[10] = (char *)v41 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823590);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)v41 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for InstrumentView();
  sub_23788F46C((const void *)(v1 + *(int *)(v39 + 28) + *(int *)(v4 + 20)), v88);
  sub_23788F46C(v88, v89);
  v40 = (char *)sub_23796A768 + 4 * word_237A9A0E0[sub_2378A1BDC((uint64_t)v89)];
  __asm { BR              X10 }
}

uint64_t sub_23796A768()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2378A1BF8((uint64_t)(v0 + 377));
  v3 = v0[43];
  sub_2378D07D8(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
  *v1 = sub_237A86A20();
  v1[1] = v4;
  v5 = v0[46];
  v6 = (uint64_t *)((char *)v1 + *(int *)(v5 + 20));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  swift_storeEnumTagMultiPayload();
  sub_2378D0858(v3, (uint64_t)v1 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
  v7 = v0[44];
  sub_2378D0858((uint64_t)v1, v7, type metadata accessor for RequestContentView);
  sub_2378D07D8(v7, v0[48], type metadata accessor for RequestContentView);
  swift_storeEnumTagMultiPayload();
  sub_23786FAA0(&qword_256823598, type metadata accessor for RequestContentView, (uint64_t)&protocol conformance descriptor for RequestContentView);
  v8 = v0[49];
  sub_237A86D44();
  sub_2378BBFE0(v8, v0[54], &qword_2568234C8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568235A0);
  sub_23796C94C();
  sub_23796C9A8();
  v9 = v0[56];
  sub_237A86D44();
  sub_2378BC024(v8, &qword_2568234C8);
  sub_2378BBFE0(v9, v0[58], &qword_2568234D8);
  swift_storeEnumTagMultiPayload();
  sub_23796CA2C();
  sub_23796D1E4();
  sub_237A86D44();
  sub_2378BC024(v9, &qword_2568234D8);
  return sub_23796D250(v7);
}

uint64_t sub_23796C868@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_2379715D4, &qword_2568237B8, &qword_2568237C0, a1);
}

uint64_t sub_23796C88C@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_2379715D4, &qword_2568237B8, &qword_2568237C0, a1);
}

uint64_t sub_23796C8C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_2568237B8, (void (*)(uint64_t *))sub_2379715D4);
}

uint64_t sub_23796C8DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_2568237B8, (void (*)(uint64_t *))sub_2379715D4);
}

uint64_t type metadata accessor for InstrumentView()
{
  uint64_t result;

  result = qword_256823730;
  if (!qword_256823730)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23796C94C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235A8;
  if (!qword_2568235A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568235A0);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDF40E8];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235A8);
  }
  return result;
}

unint64_t sub_23796C9A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235B0;
  if (!qword_2568235B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568234C8);
    v2[0] = sub_23786FAA0(&qword_256823598, type metadata accessor for RequestContentView, (uint64_t)&protocol conformance descriptor for RequestContentView);
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235B0);
  }
  return result;
}

unint64_t sub_23796CA2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235B8;
  if (!qword_2568235B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823500);
    v2[0] = sub_23796CA98();
    v2[1] = sub_23796C94C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235B8);
  }
  return result;
}

unint64_t sub_23796CA98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235C0;
  if (!qword_2568235C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568234F8);
    v2[0] = sub_23796CB04();
    v2[1] = sub_23796D1A0();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235C0);
  }
  return result;
}

unint64_t sub_23796CB04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235C8;
  if (!qword_2568235C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823590);
    v2[0] = sub_23796CB88();
    v2[1] = sub_23796D028(&qword_256823670, &qword_256823520, sub_23796D094);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235C8);
  }
  return result;
}

unint64_t sub_23796CB88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235D0;
  if (!qword_2568235D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823560);
    v2[0] = sub_23796CBF4();
    v2[1] = sub_23796CE90();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235D0);
  }
  return result;
}

unint64_t sub_23796CBF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568235D8;
  if (!qword_2568235D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823558);
    v2[0] = sub_23796CF14(&qword_2568235E0, &qword_256823588, (uint64_t (*)(void))sub_23796CC90);
    v2[1] = sub_23796CF14(&qword_256823610, &qword_256823618, (uint64_t (*)(void))sub_23796CDE0);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235D8);
  }
  return result;
}

unint64_t sub_23796CC90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_2568235E8;
  if (!qword_2568235E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823580);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568235F0);
    v2[3] = &type metadata for InstrumentCircularStyle;
    v2[4] = sub_2378B70D4(&qword_2568235F8, &qword_2568235F0, (uint64_t)&unk_237A94B90);
    v2[5] = sub_23796CD58();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23796CD9C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568235E8);
  }
  return result;
}

unint64_t sub_23796CD58()
{
  unint64_t result;

  result = qword_256823600;
  if (!qword_256823600)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentCircularStyle, &type metadata for InstrumentCircularStyle);
    atomic_store(result, (unint64_t *)&qword_256823600);
  }
  return result;
}

unint64_t sub_23796CD9C()
{
  unint64_t result;

  result = qword_256823608;
  if (!qword_256823608)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA07D8, &type metadata for InputAnimationEffect);
    atomic_store(result, (unint64_t *)&qword_256823608);
  }
  return result;
}

unint64_t sub_23796CDE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256823620;
  if (!qword_256823620)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823628);
    v2[0] = sub_23796CE4C();
    v2[1] = sub_23796CD9C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256823620);
  }
  return result;
}

unint64_t sub_23796CE4C()
{
  unint64_t result;

  result = qword_256823630;
  if (!qword_256823630)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9075C, &type metadata for CompassGauge);
    atomic_store(result, (unint64_t *)&qword_256823630);
  }
  return result;
}

unint64_t sub_23796CE90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256823638;
  if (!qword_256823638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823640);
    v2[0] = sub_23796CF14(&qword_256823648, &qword_256823650, (uint64_t (*)(void))sub_23796CF78);
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256823638);
  }
  return result;
}

uint64_t sub_23796CF14(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23796CF78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256823658;
  if (!qword_256823658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823660);
    v2[0] = sub_23796CFE4();
    v2[1] = sub_23796CD9C();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256823658);
  }
  return result;
}

unint64_t sub_23796CFE4()
{
  unint64_t result;

  result = qword_256823668;
  if (!qword_256823668)
  {
    result = MEMORY[0x23B81FA98](&unk_237A92714, &type metadata for DialGauge);
    atomic_store(result, (unint64_t *)&qword_256823668);
  }
  return result;
}

uint64_t sub_23796D028(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23796D094()
{
  return sub_23796D028(&qword_256823678, &qword_256823518, (uint64_t (*)(void))sub_23796D0B0);
}

unint64_t sub_23796D0B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256823680;
  if (!qword_256823680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823538);
    v2[0] = sub_23796D11C();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256823680);
  }
  return result;
}

unint64_t sub_23796D11C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256823688;
  if (!qword_256823688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823530);
    v2 = sub_2378B70D4(&qword_256823690, &qword_256823528, MEMORY[0x24BDF06D0]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256823688);
  }
  return result;
}

unint64_t sub_23796D1A0()
{
  unint64_t result;

  result = qword_256823698;
  if (!qword_256823698)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for WidgetView, &type metadata for WidgetView);
    atomic_store(result, (unint64_t *)&qword_256823698);
  }
  return result;
}

unint64_t sub_23796D1E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568236A0;
  if (!qword_2568236A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568234D8);
    v2[0] = sub_23796C94C();
    v2[1] = sub_23796C9A8();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568236A0);
  }
  return result;
}

uint64_t sub_23796D250(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RequestContentView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23796D28C@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_23795453C, &qword_256822DD8, &qword_256822DD0, a1);
}

uint64_t sub_23796D2C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_256822DD8, (void (*)(uint64_t *))sub_23795453C);
}

uint64_t sub_23796D2EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_237969D20((void (*)(void))sub_237954784, &qword_256822DF0, &qword_256822DE8, a1);
}

uint64_t sub_23796D320(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237969DCC(a1, a2, a3, a4, &qword_256822DF0, (void (*)(uint64_t *))sub_237954784);
}

uint64_t sub_23796D34C(uint64_t a1, char a2)
{
  return sub_23796D7A0(a1, a2, 0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_23796D378(uint64_t a1, char a2)
{
  return sub_23796D7A0(a1, a2, 0xD00000000000001BLL, 0x8000000237AB14E0, (void (*)(_QWORD, _QWORD))j_j__swift_release);
}

uint64_t sub_23796D39C@<X0>(uint64_t a1@<X8>)
{
  return sub_23796DFDC(&qword_256823788, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], 0x536C6F72746E6F43, 0xEB00000000657A69, a1);
}

uint64_t sub_23796D3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    v8 = sub_237A87D4C();
    v9 = sub_237A86F0C();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14[0] = v11 + 4;
      v14[1] = sub_2378FD9C8(0xD000000000000010, 0x8000000237AB1330, &v15);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v12, -1, -1);
      MEMORY[0x23B81FB7C](v11, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    sub_2378E38C0(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_23796D5A0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_237A87D4C();
  v9 = sub_237A86F0C();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_2378FD9C8(1819242306, 0xE400000000000000, &v15);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v12, -1, -1);
    MEMORY[0x23B81FB7C](v11, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  sub_237971574(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_23796D758(uint64_t a1, char a2)
{
  return sub_23796D7A0(a1, a2, 0xD000000000000017, 0x8000000237AB14C0, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_23796D77C(uint64_t a1, char a2)
{
  return sub_23796D7A0(a1, a2, 0xD000000000000018, 0x8000000237AB14A0, (void (*)(_QWORD, _QWORD))j_j__swift_release);
}

uint64_t sub_23796D7A0(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  unint64_t v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;

  v10 = sub_237A86B7C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v14 = sub_237A87D4C();
    v15 = sub_237A86F0C();
    if (os_log_type_enabled(v15, v14))
    {
      v23 = a4;
      v16 = swift_slowAlloc();
      v24 = a5;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v19 = a3;
      v20 = v18;
      v26 = v18;
      *(_DWORD *)v17 = 136315138;
      v25 = sub_2378FD9C8(v19, v23, &v26);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v20, -1, -1);
      v21 = v17;
      a5 = v24;
      MEMORY[0x23B81FB7C](v21, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

void sub_23796D96C(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v6 = sub_237A86B7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1;
  }
  else
  {
    sub_237971568(a1, 0);
    v10 = sub_237A87D4C();
    v11 = sub_237A86F0C();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16[1] = a3;
      v15 = v14;
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[2] = sub_2378FD9C8(0x754F74756F79614CLL, 0xEC00000074757074, &v17);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v15, -1, -1);
      MEMORY[0x23B81FB7C](v13, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    sub_237971574(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_23796DB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_23796DD7C(a1, a2, a3, (uint64_t (*)(void))sub_23795547C, 0xD000000000000025, 0x8000000237AB1470, (uint64_t (*)(void))sub_237955480, a4);
}

uint64_t sub_23796DB6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = v1;
  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v2, (uint64_t)&v17, &qword_2568237A8);
  if (v18 == 1)
    return sub_237971580((uint64_t)&v17, a1);
  v9 = sub_237A87D4C();
  v10 = sub_237A86F0C();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[1] = a1;
    v14 = v13;
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15[2] = sub_2378FD9C8(0xD000000000000019, 0x8000000237AB1450, &v16);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v14, -1, -1);
    MEMORY[0x23B81FB7C](v12, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23796DD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_23796DD7C(a1, a2, a3, (uint64_t (*)(void))sub_2378A2BF4, 0xD000000000000019, 0x8000000237AB1430, (uint64_t (*)(void))sub_2378A2C04, a4);
}

uint64_t sub_23796DD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t (*a7)(void)@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a6;
  v15 = sub_237A86B7C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *a8 = a1;
    a8[1] = a2;
    return sub_2379715BC(a1, a2, 1, a4);
  }
  else
  {
    v31 = a5;
    sub_2379715BC(a1, a2, 0, a4);
    v19 = sub_237A87D4C();
    v20 = sub_237A86F0C();
    if (os_log_type_enabled(v20, v19))
    {
      v21 = swift_slowAlloc();
      v29 = v15;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v30 = a7;
      v24 = v23;
      v34 = v23;
      *(_DWORD *)v22 = 136315138;
      v28[1] = v22 + 4;
      v33 = sub_2378FD9C8(v31, v32, &v34);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      a7 = v30;
      MEMORY[0x23B81FB7C](v25, -1, -1);
      v26 = v22;
      v15 = v29;
      MEMORY[0x23B81FB7C](v26, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    sub_2379715C8(a1, a2, 0, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_23796DF80@<X0>(uint64_t a1@<X8>)
{
  return sub_23796ECB0(&qword_256820B20, &qword_256820D50, 0xD000000000000023, 0x8000000237AB1400, a1);
}

uint64_t sub_23796DFAC@<X0>(uint64_t a1@<X8>)
{
  return sub_23796DFDC(&qword_2568237C8, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_23796DFDC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_237A86B7C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_237A87D4C();
    v21 = sub_237A86F0C();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_2378FD9C8(v28, v26, &v30);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v24, -1, -1);
      MEMORY[0x23B81FB7C](v23, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_23796E214(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v6 = sub_237A86B7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v10 = sub_237A87D4C();
    v11 = sub_237A86F0C();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_2378FD9C8(0xD000000000000010, 0x8000000237AB1350, &v17);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v14, -1, -1);
      MEMORY[0x23B81FB7C](v13, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    sub_237971558(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_23796E3F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v2, (uint64_t)v10, &qword_2568237A0);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_2378D0858((uint64_t)v10, a1, type metadata accessor for BannerConfiguration);
  v12 = sub_237A87D4C();
  v13 = sub_237A86F0C();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_2378FD9C8(0xD000000000000013, 0x8000000237AB13E0, &v19);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v17, -1, -1);
    MEMORY[0x23B81FB7C](v15, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23796E620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v2, (uint64_t)v10, &qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_2378D0858((uint64_t)v10, a1, type metadata accessor for UserInteractiveConfiguration);
  v12 = sub_237A87D4C();
  v13 = sub_237A86F0C();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_2378FD9C8(0xD00000000000001CLL, 0x8000000237AB13C0, &v19);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v17, -1, -1);
    MEMORY[0x23B81FB7C](v15, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23796E850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_237A86B7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823790);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v2, (uint64_t)v10, &qword_256823790);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_2378D0858((uint64_t)v10, a1, type metadata accessor for NoticeConfiguration);
  v12 = sub_237A87D4C();
  v13 = sub_237A86F0C();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_2378FD9C8(0xD000000000000013, 0x8000000237AB1370, &v19);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v17, -1, -1);
    MEMORY[0x23B81FB7C](v15, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23796EA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_237A86B7C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_237971618();
  }
  else
  {
    sub_237971618();
    v12 = sub_237A87D4C();
    v13 = sub_237A86F0C();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v15 = 136315138;
      v18 = v15 + 4;
      v20 = sub_2378FD9C8(0xD000000000000013, 0x8000000237AB1500, &v21);
      sub_237A87E24();
      _os_log_impl(&dword_237866000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x23B81FB7C](v16, -1, -1);
      MEMORY[0x23B81FB7C](v15, -1, -1);
    }

    sub_237A86B70();
    swift_getAtKeyPath();
    sub_237971624();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_23796EC84@<X0>(uint64_t a1@<X8>)
{
  return sub_23796ECB0(&qword_2568234B8, &qword_256820880, 0xD000000000000021, 0x8000000237AB1390, a1);
}

uint64_t sub_23796ECB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_237A86B7C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378BBFE0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_237870370((uint64_t)v17, a5, a2);
  v19 = sub_237A87D4C();
  v20 = sub_237A86F0C();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_2378FD9C8(v27, v25, &v29);
    sub_237A87E24();
    _os_log_impl(&dword_237866000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B81FB7C](v23, -1, -1);
    MEMORY[0x23B81FB7C](v22, -1, -1);
  }

  sub_237A86B70();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_23796EED8@<X0>(uint64_t a1@<X8>)
{
  return sub_23796DFDC(&qword_2568237D0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEE810], 0xD000000000000011, 0x8000000237AB1520, a1);
}

double sub_23796EF04@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23796EF84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_23796F000(uint64_t result)
{
  *(_BYTE *)(result + 322) = 1;
  return result;
}

double sub_23796F00C(uint64_t a1)
{
  double result;

  *(_WORD *)(a1 + 320) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_23796F040(uint64_t result)
{
  *(_BYTE *)(result + 322) = 0;
  return result;
}

uint64_t sub_23796F048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int16 a41)
{
  id v41;
  id v42;
  uint64_t result;

  if (a7)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_2378884CC(a14, a15, a16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2378BB6E8(a25);
    swift_retain();
    swift_retain();
    v41 = a35;
    v42 = a36;
    swift_retain();
    return sub_2378E38B4(a40, a41, HIBYTE(a41) & 1);
  }
  return result;
}

uint64_t sub_23796F1A8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int16 v9;

  v9 = *(_WORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    *(_QWORD *)(a1 + 304),
    *(_QWORD *)(a1 + 312),
    v9);
  return a1;
}

uint64_t sub_23796F23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int16 a41)
{
  uint64_t result;

  if (a7)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2378886C4(a14, a15, a16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237910058(a25);
    swift_release();

    swift_release();
    swift_release();
    return sub_2378E38C0(a40, a41, HIBYTE(a41) & 1);
  }
  return result;
}

uint64_t sub_23796F3A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_237954150();
  result = sub_237A86B88();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_23796F3F8()
{
  sub_237954150();
  return sub_237A86B94();
}

double sub_23796F448(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 138) = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23796F468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int16 a20)
{
  uint64_t result;

  if (a5)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2378BB6E8(a8);
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_2378E38B4(a19, a20, HIBYTE(a20) & 1);
  }
  return result;
}

uint64_t sub_23796F548(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 152);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    v4);
  return a1;
}

uint64_t sub_23796F5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int16 a20)
{
  uint64_t result;

  if (a5)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_237910058(a8);
    swift_release();
    swift_release();
    swift_release();
    return sub_2378E38C0(a19, a20, HIBYTE(a20) & 1);
  }
  return result;
}

uint64_t sub_23796F68C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2378BBE34(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23796F6BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for InstrumentView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  void *v97;
  void *v98;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    v16 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain();
    j__swift_retain();
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v17 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = *(int *)(a3 + 28);
    v19 = a1 + v18;
    v70 = a1 + v18;
    v69 = (uint64_t)a2 + v18;
    v20 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v69, v20);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)(v19 + *(int *)(v21 + 52)) = *(_QWORD *)(v69 + *(int *)(v21 + 52));
    v71 = type metadata accessor for Instrument();
    v22 = *(int *)(v71 + 20);
    v23 = (uint64_t *)(v19 + v22);
    v24 = (uint64_t *)(v69 + v22);
    v97 = (void *)v24[10];
    v98 = (void *)v24[9];
    v95 = v24[12];
    v96 = v24[11];
    v93 = v24[14];
    v94 = v24[13];
    v91 = v24[16];
    v92 = v24[15];
    v89 = v24[18];
    v90 = v24[17];
    v87 = (void *)v24[20];
    v88 = v24[19];
    v85 = v24[22];
    v86 = v24[21];
    v83 = v24[24];
    v84 = v24[23];
    v81 = v24[26];
    v82 = v24[25];
    v79 = (void *)v24[28];
    v80 = (void *)v24[27];
    v78 = v24[29];
    v77 = v24[30];
    v76 = v24[31];
    v75 = v24[32];
    v74 = v24[33];
    v73 = v24[34];
    v72 = v24[35];
    v68 = a1;
    v40 = v24[36];
    v41 = v24[37];
    v42 = v24[38];
    v43 = v24[39];
    v44 = v24[40];
    v45 = v24[41];
    v46 = v24[42];
    v47 = v24[43];
    v48 = v24[44];
    v49 = v24[45];
    v50 = v24[46];
    v51 = v24[47];
    v52 = v24[48];
    v53 = v24[49];
    v54 = v24[50];
    v55 = v24[51];
    v56 = v24[52];
    v57 = v24[53];
    v58 = v24[54];
    v59 = v24[55];
    v60 = v24[56];
    v61 = v24[57];
    v62 = v24[58];
    v63 = v24[59];
    v64 = v24[60];
    v65 = v24[61];
    v66 = v24[62];
    v67 = v24[63];
    v25 = (void *)v24[8];
    v26 = *v24;
    v27 = v24[1];
    v28 = (void *)v24[2];
    v29 = (void *)v24[3];
    v30 = (void *)v24[4];
    v31 = (void *)v24[5];
    v32 = v24[6];
    v33 = v24[7];
    sub_2378DD44C(*v24, v27, v28, v29, v30, v31, v32, v33, v25, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66);
    *v23 = v26;
    v23[1] = v27;
    v23[2] = (uint64_t)v28;
    v23[3] = (uint64_t)v29;
    v23[4] = (uint64_t)v30;
    v23[5] = (uint64_t)v31;
    v23[6] = v32;
    v23[7] = v33;
    v23[8] = (uint64_t)v25;
    v16 = v68;
    v23[9] = (uint64_t)v98;
    v23[10] = (uint64_t)v97;
    v23[11] = v96;
    v23[12] = v95;
    v23[13] = v94;
    v23[14] = v93;
    v23[15] = v92;
    v23[16] = v91;
    v23[17] = v90;
    v23[18] = v89;
    v23[19] = v88;
    v23[20] = (uint64_t)v87;
    v23[21] = v86;
    v23[22] = v85;
    v23[23] = v84;
    v23[24] = v83;
    v23[25] = v82;
    v23[26] = v81;
    v23[27] = (uint64_t)v80;
    v23[28] = (uint64_t)v79;
    v23[29] = v78;
    v23[30] = v77;
    v23[31] = v76;
    v23[32] = v75;
    v23[33] = v74;
    v23[34] = v73;
    v23[35] = v72;
    v23[36] = v40;
    v23[37] = v41;
    v23[38] = v42;
    v23[39] = v43;
    v23[40] = v44;
    v23[41] = v45;
    v23[42] = v46;
    v23[43] = v47;
    v23[44] = v48;
    v23[45] = v49;
    v23[46] = v50;
    v23[47] = v51;
    v23[48] = v52;
    v23[49] = v53;
    v23[50] = v54;
    v23[51] = v55;
    v23[52] = v56;
    v23[53] = v57;
    v23[54] = v58;
    v23[55] = v59;
    v23[56] = v60;
    v23[57] = v61;
    v23[58] = v62;
    v23[59] = v63;
    v23[60] = v64;
    v23[61] = v65;
    v23[62] = v66;
    v23[63] = v67;
    v34 = *(int *)(v71 + 24);
    v35 = v70 + v34;
    v36 = v69 + v34;
    v37 = *(_QWORD *)(v36 + 8);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *(_QWORD *)(v35 + 8) = v37;
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    *(_WORD *)(v35 + 24) = *(_WORD *)(v36 + 24);
    v38 = *(_QWORD *)(v36 + 40);
    *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
    *(_QWORD *)(v35 + 40) = v38;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v16;
}

uint64_t destroy for InstrumentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  swift_release();
  j__swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = sub_237A86594();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + *(int *)(type metadata accessor for Instrument() + 20);
  v25 = *(_OWORD *)(v9 + 464);
  v26 = *(_OWORD *)(v9 + 480);
  v23 = *(_OWORD *)(v9 + 432);
  v24 = *(_OWORD *)(v9 + 448);
  v21 = *(_OWORD *)(v9 + 400);
  v22 = *(_OWORD *)(v9 + 416);
  v19 = *(_OWORD *)(v9 + 368);
  v20 = *(_OWORD *)(v9 + 384);
  v17 = *(_OWORD *)(v9 + 336);
  v18 = *(_OWORD *)(v9 + 352);
  v15 = *(_OWORD *)(v9 + 304);
  v16 = *(_OWORD *)(v9 + 320);
  v13 = *(_OWORD *)(v9 + 272);
  v14 = *(_OWORD *)(v9 + 288);
  v11 = *(_OWORD *)(v9 + 240);
  v12 = *(_OWORD *)(v9 + 256);
  sub_2378DE7AC(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(void **)(v9 + 16), *(void **)(v9 + 24), *(void **)(v9 + 32), *(void **)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(void **)(v9 + 64), *(void **)(v9 + 72), *(void **)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), *(_QWORD *)(v9 + 104), *(_QWORD *)(v9 + 112), *(_QWORD *)(v9 + 120), *(_QWORD *)(v9 + 128), *(_QWORD *)(v9 + 136), *(_QWORD *)(v9 + 144),
    *(_QWORD *)(v9 + 152),
    *(void **)(v9 + 160),
    *(_QWORD *)(v9 + 168),
    *(_QWORD *)(v9 + 176),
    *(_QWORD *)(v9 + 184),
    *(_QWORD *)(v9 + 192),
    *(_QWORD *)(v9 + 200),
    *(_QWORD *)(v9 + 208),
    *(void **)(v9 + 216),
    *(void **)(v9 + 224),
    *(_QWORD *)(v9 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(_QWORD *)(v9 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_retain();
  j__swift_retain();
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = a1;
  v11 = (_QWORD *)(a1 + v9);
  v12 = (_QWORD *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_237A86594();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 28);
  v64 = v10;
  v18 = v10 + v17;
  v66 = v10 + v17;
  v65 = a2 + v17;
  v19 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v65, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v18 + *(int *)(v20 + 52)) = *(_QWORD *)(v65 + *(int *)(v20 + 52));
  v67 = type metadata accessor for Instrument();
  v21 = *(int *)(v67 + 20);
  v22 = (uint64_t *)(v18 + v21);
  v23 = (uint64_t *)(v65 + v21);
  v96 = *v23;
  v97 = v23[6];
  v94 = (void *)v23[9];
  v95 = (void *)v23[8];
  v92 = v23[11];
  v93 = (void *)v23[10];
  v90 = v23[13];
  v91 = v23[12];
  v88 = v23[15];
  v89 = v23[14];
  v86 = v23[17];
  v87 = v23[16];
  v84 = v23[19];
  v85 = v23[18];
  v82 = v23[21];
  v83 = (void *)v23[20];
  v80 = v23[23];
  v81 = v23[22];
  v78 = v23[25];
  v79 = v23[24];
  v77 = v23[26];
  v76 = (void *)v23[27];
  v75 = (void *)v23[28];
  v74 = v23[29];
  v73 = v23[30];
  v72 = v23[31];
  v71 = v23[32];
  v70 = v23[33];
  v69 = v23[34];
  v68 = v23[35];
  v39 = v23[36];
  v40 = v23[37];
  v41 = v23[38];
  v42 = v23[39];
  v25 = v23[41];
  v24 = v23[42];
  v43 = v23[40];
  v44 = v23[43];
  v26 = v23[45];
  v45 = v23[44];
  v46 = v23[46];
  v47 = v23[47];
  v48 = v23[48];
  v49 = v23[49];
  v50 = v23[50];
  v51 = v23[51];
  v52 = v23[52];
  v53 = v23[53];
  v54 = v23[54];
  v55 = v23[55];
  v56 = v23[56];
  v57 = v23[57];
  v58 = v23[58];
  v59 = v23[59];
  v60 = v23[60];
  v61 = v23[61];
  v62 = v23[62];
  v63 = v23[63];
  v27 = v23[1];
  v28 = (void *)v23[2];
  v29 = (void *)v23[3];
  v30 = (void *)v23[4];
  v31 = (void *)v23[5];
  v32 = v23[7];
  sub_2378DD44C(*v23, v27, v28, v29, v30, v31, v97, v32, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v39,
    v40,
    v41,
    v42,
    v43,
    v25,
    v24,
    v44,
    v45,
    v26,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62);
  *v22 = v96;
  v22[1] = v27;
  v22[2] = (uint64_t)v28;
  v22[3] = (uint64_t)v29;
  v22[4] = (uint64_t)v30;
  v22[5] = (uint64_t)v31;
  v22[6] = v97;
  v22[7] = v32;
  v22[8] = (uint64_t)v95;
  v22[9] = (uint64_t)v94;
  v22[10] = (uint64_t)v93;
  v22[11] = v92;
  v22[12] = v91;
  v22[13] = v90;
  v22[14] = v89;
  v22[15] = v88;
  v22[16] = v87;
  v22[17] = v86;
  v22[18] = v85;
  v22[19] = v84;
  v22[20] = (uint64_t)v83;
  v22[21] = v82;
  v22[22] = v81;
  v22[23] = v80;
  v22[24] = v79;
  v22[25] = v78;
  v22[26] = v77;
  v22[27] = (uint64_t)v76;
  v22[28] = (uint64_t)v75;
  v22[29] = v74;
  v22[30] = v73;
  v22[31] = v72;
  v22[32] = v71;
  v22[33] = v70;
  v22[34] = v69;
  v22[35] = v68;
  v22[36] = v39;
  v22[37] = v40;
  v22[38] = v41;
  v22[39] = v42;
  v22[40] = v43;
  v22[41] = v25;
  v22[42] = v24;
  v22[43] = v44;
  v22[44] = v45;
  v22[45] = v26;
  v22[46] = v46;
  v22[47] = v47;
  v22[48] = v48;
  v22[49] = v49;
  v22[50] = v50;
  v22[51] = v51;
  v22[52] = v52;
  v22[53] = v53;
  v22[54] = v54;
  v22[55] = v55;
  v22[56] = v56;
  v22[57] = v57;
  v22[58] = v58;
  v22[59] = v59;
  v22[60] = v60;
  v22[61] = v61;
  v22[62] = v62;
  v22[63] = v63;
  v33 = *(int *)(v67 + 24);
  v34 = v66 + v33;
  v35 = v65 + v33;
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_WORD *)(v34 + 24) = *(_WORD *)(v35 + 24);
  v37 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v37;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v64;
}

uint64_t assignWithCopy for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  j__swift_retain();
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  j__swift_release();
  v8 = a1;
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_2378BC024(a1 + v9, &qword_2568234B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v16 = *(int *)(a3 + 28);
  v91 = v8;
  v17 = v8 + v16;
  v94 = v8 + v16;
  v93 = a2 + v16;
  v18 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v17, v93, v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v17 + *(int *)(v19 + 52)) = *(_QWORD *)(v93 + *(int *)(v19 + 52));
  v92 = type metadata accessor for Instrument();
  v20 = *(int *)(v92 + 20);
  v21 = v17 + v20;
  v22 = (uint64_t *)(v93 + v20);
  v129 = v22[1];
  v130 = *v22;
  v127 = (void *)v22[3];
  v128 = (void *)v22[2];
  v125 = (void *)v22[5];
  v126 = (void *)v22[4];
  v123 = v22[7];
  v124 = v22[6];
  v121 = (void *)v22[9];
  v122 = (void *)v22[8];
  v119 = v22[11];
  v120 = (void *)v22[10];
  v117 = v22[13];
  v118 = v22[12];
  v115 = v22[15];
  v116 = v22[14];
  v114 = v22[16];
  v113 = v22[17];
  v112 = v22[18];
  v111 = v22[19];
  v110 = (void *)v22[20];
  v109 = v22[21];
  v108 = v22[22];
  v107 = v22[23];
  v106 = v22[24];
  v105 = v22[25];
  v104 = v22[26];
  v103 = (void *)v22[27];
  v102 = (void *)v22[28];
  v101 = v22[29];
  v100 = v22[30];
  v99 = v22[31];
  v98 = v22[32];
  v97 = v22[33];
  v96 = v22[34];
  v95 = v22[35];
  v23 = v22[37];
  v24 = v22[38];
  v25 = v22[39];
  v26 = v22[40];
  v28 = v22[41];
  v27 = v22[42];
  v30 = v22[43];
  v29 = v22[44];
  v31 = v22[45];
  v72 = v22[36];
  v73 = v22[46];
  v74 = v22[47];
  v75 = v22[48];
  v76 = v22[49];
  v77 = v22[50];
  v78 = v22[51];
  v79 = v22[52];
  v80 = v22[53];
  v81 = v22[54];
  v82 = v22[55];
  v83 = v22[56];
  v84 = v22[57];
  v85 = v22[58];
  v86 = v22[59];
  v87 = v22[60];
  v88 = v22[61];
  v89 = v22[62];
  v90 = v22[63];
  sub_2378DD44C(*v22, v129, v128, v127, v126, v125, v124, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v72,
    v23,
    v24,
    v25,
    v26,
    v28,
    v27,
    v30,
    v29,
    v31,
    v73,
    v74,
    *((_OWORD *)v22 + 24),
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  v32 = *(_QWORD *)v21;
  v33 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v21 = v130;
  *(_QWORD *)(v21 + 8) = v129;
  v34 = *(void **)(v21 + 16);
  v35 = *(void **)(v21 + 24);
  *(_QWORD *)(v21 + 16) = v128;
  *(_QWORD *)(v21 + 24) = v127;
  v36 = *(void **)(v21 + 32);
  v37 = *(void **)(v21 + 40);
  *(_QWORD *)(v21 + 32) = v126;
  *(_QWORD *)(v21 + 40) = v125;
  v38 = *(_QWORD *)(v21 + 48);
  v39 = *(_QWORD *)(v21 + 56);
  *(_QWORD *)(v21 + 48) = v124;
  *(_QWORD *)(v21 + 56) = v123;
  v40 = *(_OWORD *)(v21 + 64);
  v41 = *(_OWORD *)(v21 + 80);
  *(_QWORD *)(v21 + 64) = v122;
  *(_QWORD *)(v21 + 72) = v121;
  *(_QWORD *)(v21 + 80) = v120;
  *(_QWORD *)(v21 + 88) = v119;
  v42 = *(_OWORD *)(v21 + 96);
  v43 = *(_OWORD *)(v21 + 112);
  *(_QWORD *)(v21 + 96) = v118;
  *(_QWORD *)(v21 + 104) = v117;
  *(_QWORD *)(v21 + 112) = v116;
  *(_QWORD *)(v21 + 120) = v115;
  v44 = *(_OWORD *)(v21 + 128);
  v45 = *(_OWORD *)(v21 + 144);
  *(_QWORD *)(v21 + 128) = v114;
  *(_QWORD *)(v21 + 136) = v113;
  *(_QWORD *)(v21 + 144) = v112;
  *(_QWORD *)(v21 + 152) = v111;
  v46 = *(_OWORD *)(v21 + 160);
  v47 = *(_OWORD *)(v21 + 176);
  *(_QWORD *)(v21 + 160) = v110;
  *(_QWORD *)(v21 + 168) = v109;
  *(_QWORD *)(v21 + 176) = v108;
  *(_QWORD *)(v21 + 184) = v107;
  v48 = *(_OWORD *)(v21 + 192);
  v49 = *(_OWORD *)(v21 + 208);
  *(_QWORD *)(v21 + 192) = v106;
  *(_QWORD *)(v21 + 200) = v105;
  *(_QWORD *)(v21 + 208) = v104;
  *(_QWORD *)(v21 + 216) = v103;
  v50 = *(_OWORD *)(v21 + 224);
  v51 = *(_OWORD *)(v21 + 240);
  *(_QWORD *)(v21 + 224) = v102;
  *(_QWORD *)(v21 + 232) = v101;
  *(_QWORD *)(v21 + 240) = v100;
  *(_QWORD *)(v21 + 248) = v99;
  v52 = *(_OWORD *)(v21 + 256);
  v53 = *(_OWORD *)(v21 + 272);
  *(_QWORD *)(v21 + 256) = v98;
  *(_QWORD *)(v21 + 264) = v97;
  *(_QWORD *)(v21 + 272) = v96;
  *(_QWORD *)(v21 + 280) = v95;
  v54 = *(_OWORD *)(v21 + 288);
  v55 = *(_OWORD *)(v21 + 304);
  *(_QWORD *)(v21 + 288) = v72;
  *(_QWORD *)(v21 + 296) = v23;
  *(_QWORD *)(v21 + 304) = v24;
  *(_QWORD *)(v21 + 312) = v25;
  v56 = *(_OWORD *)(v21 + 320);
  v57 = *(_OWORD *)(v21 + 336);
  *(_QWORD *)(v21 + 320) = v26;
  *(_QWORD *)(v21 + 328) = v28;
  *(_QWORD *)(v21 + 336) = v27;
  *(_QWORD *)(v21 + 344) = v30;
  v58 = *(_OWORD *)(v21 + 352);
  v59 = *(_OWORD *)(v21 + 368);
  *(_QWORD *)(v21 + 352) = v29;
  *(_QWORD *)(v21 + 360) = v31;
  *(_QWORD *)(v21 + 368) = v73;
  *(_QWORD *)(v21 + 376) = v74;
  v60 = *(_OWORD *)(v21 + 384);
  v61 = *(_OWORD *)(v21 + 400);
  *(_QWORD *)(v21 + 384) = v75;
  *(_QWORD *)(v21 + 392) = v76;
  *(_QWORD *)(v21 + 400) = v77;
  *(_QWORD *)(v21 + 408) = v78;
  v62 = *(_OWORD *)(v21 + 416);
  v63 = *(_OWORD *)(v21 + 432);
  *(_QWORD *)(v21 + 416) = v79;
  *(_QWORD *)(v21 + 424) = v80;
  *(_QWORD *)(v21 + 432) = v81;
  *(_QWORD *)(v21 + 440) = v82;
  v64 = *(_OWORD *)(v21 + 448);
  v65 = *(_OWORD *)(v21 + 464);
  *(_QWORD *)(v21 + 448) = v83;
  *(_QWORD *)(v21 + 456) = v84;
  *(_QWORD *)(v21 + 464) = v85;
  *(_QWORD *)(v21 + 472) = v86;
  v66 = *(_OWORD *)(v21 + 480);
  *(_QWORD *)(v21 + 480) = v87;
  *(_QWORD *)(v21 + 488) = v88;
  v67 = *(_QWORD *)(v21 + 496);
  *(_QWORD *)(v21 + 496) = v89;
  *(_QWORD *)(v21 + 504) = v90;
  sub_2378DE7AC(v32, v33, v34, v35, v36, v37, v38, v39, (void *)v40, *((void **)&v40 + 1), (void *)v41, *((unint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45,
    *((uint64_t *)&v45 + 1),
    (void *)v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((void **)&v49 + 1),
    (void *)v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    SBYTE8(v55),
    v56,
    *((uint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    SBYTE8(v58),
    v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    SBYTE8(v61),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    SBYTE8(v64),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67);
  v68 = *(int *)(v92 + 24);
  v69 = v94 + v68;
  v70 = v93 + v68;
  *(_QWORD *)(v94 + v68) = *(_QWORD *)(v93 + v68);
  swift_retain();
  swift_release();
  *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
  *(_QWORD *)(v69 + 16) = *(_QWORD *)(v70 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v69 + 24) = *(_BYTE *)(v70 + 24);
  *(_BYTE *)(v69 + 25) = *(_BYTE *)(v70 + 25);
  *(_QWORD *)(v69 + 32) = *(_QWORD *)(v70 + 32);
  *(_QWORD *)(v69 + 40) = *(_QWORD *)(v70 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v91;
}

uint64_t initializeWithTake for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = sub_237A86594();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v15 + *(int *)(v18 + 52)) = *(_QWORD *)(v16 + *(int *)(v18 + 52));
  v19 = type metadata accessor for Instrument();
  memcpy((void *)(v15 + *(int *)(v19 + 20)), (const void *)(v16 + *(int *)(v19 + 20)), 0x200uLL);
  v20 = *(int *)(v19 + 24);
  v21 = (_OWORD *)(v15 + v20);
  v22 = (_OWORD *)(v16 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  return a1;
}

uint64_t assignWithTake for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  unint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v6;
  j__swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_2378BC024(a1 + v7, &qword_2568234B8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568234B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v14 = sub_237A86594();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v16 + *(int *)(v19 + 52)) = *(_QWORD *)(v17 + *(int *)(v19 + 52));
  v20 = type metadata accessor for Instrument();
  v21 = *(int *)(v20 + 20);
  v22 = v16 + v21;
  v23 = (_OWORD *)(v17 + v21);
  v24 = *(_QWORD *)v22;
  v25 = *(_QWORD *)(v22 + 8);
  v26 = *(void **)(v22 + 16);
  v27 = *(void **)(v22 + 24);
  v28 = *(void **)(v22 + 32);
  v29 = *(void **)(v22 + 40);
  v30 = *(_QWORD *)(v22 + 48);
  v31 = *(_QWORD *)(v22 + 56);
  v32 = *(_OWORD *)(v22 + 64);
  v33 = *(_OWORD *)(v22 + 80);
  v34 = *(_OWORD *)(v22 + 96);
  v35 = *(_OWORD *)(v22 + 112);
  v36 = *(_OWORD *)(v22 + 128);
  v37 = *(_OWORD *)(v22 + 144);
  v38 = *(_OWORD *)(v22 + 160);
  v39 = *(_OWORD *)(v22 + 176);
  v40 = *(_OWORD *)(v22 + 192);
  v41 = *(_OWORD *)(v22 + 208);
  v42 = *(_OWORD *)(v22 + 224);
  v43 = *(_OWORD *)(v22 + 240);
  v44 = *(_OWORD *)(v22 + 256);
  v45 = *(_OWORD *)(v22 + 272);
  v46 = *(_OWORD *)(v22 + 288);
  v47 = *(_OWORD *)(v22 + 304);
  v48 = *(_OWORD *)(v22 + 320);
  v49 = *(_OWORD *)(v22 + 336);
  v50 = *(_OWORD *)(v22 + 352);
  v51 = *(_OWORD *)(v22 + 368);
  v52 = *(_OWORD *)(v22 + 384);
  v53 = *(_OWORD *)(v22 + 400);
  v54 = *(_OWORD *)(v22 + 416);
  v55 = *(_OWORD *)(v22 + 432);
  v56 = *(_OWORD *)(v22 + 448);
  v57 = *(_OWORD *)(v22 + 464);
  v58 = *(_OWORD *)(v22 + 480);
  v59 = *(_QWORD *)(v22 + 496);
  v60 = v23[1];
  *(_OWORD *)v22 = *v23;
  *(_OWORD *)(v22 + 16) = v60;
  v61 = v23[3];
  *(_OWORD *)(v22 + 32) = v23[2];
  *(_OWORD *)(v22 + 48) = v61;
  v62 = v23[5];
  *(_OWORD *)(v22 + 64) = v23[4];
  *(_OWORD *)(v22 + 80) = v62;
  v63 = v23[7];
  *(_OWORD *)(v22 + 96) = v23[6];
  *(_OWORD *)(v22 + 112) = v63;
  v64 = v23[9];
  *(_OWORD *)(v22 + 128) = v23[8];
  *(_OWORD *)(v22 + 144) = v64;
  v65 = v23[11];
  *(_OWORD *)(v22 + 160) = v23[10];
  *(_OWORD *)(v22 + 176) = v65;
  v66 = v23[13];
  *(_OWORD *)(v22 + 192) = v23[12];
  *(_OWORD *)(v22 + 208) = v66;
  v67 = v23[15];
  *(_OWORD *)(v22 + 224) = v23[14];
  *(_OWORD *)(v22 + 240) = v67;
  v68 = v23[17];
  *(_OWORD *)(v22 + 256) = v23[16];
  *(_OWORD *)(v22 + 272) = v68;
  v69 = v23[19];
  *(_OWORD *)(v22 + 288) = v23[18];
  *(_OWORD *)(v22 + 304) = v69;
  v70 = v23[21];
  *(_OWORD *)(v22 + 320) = v23[20];
  *(_OWORD *)(v22 + 336) = v70;
  v71 = v23[23];
  *(_OWORD *)(v22 + 352) = v23[22];
  *(_OWORD *)(v22 + 368) = v71;
  v72 = v23[25];
  *(_OWORD *)(v22 + 384) = v23[24];
  *(_OWORD *)(v22 + 400) = v72;
  v73 = v23[27];
  *(_OWORD *)(v22 + 416) = v23[26];
  *(_OWORD *)(v22 + 432) = v73;
  v74 = v23[29];
  *(_OWORD *)(v22 + 448) = v23[28];
  *(_OWORD *)(v22 + 464) = v74;
  v75 = v23[31];
  *(_OWORD *)(v22 + 480) = v23[30];
  *(_OWORD *)(v22 + 496) = v75;
  sub_2378DE7AC(v24, v25, v26, v27, v28, v29, v30, v31, (void *)v32, *((void **)&v32 + 1), (void *)v33, *((unint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37,
    *((uint64_t *)&v37 + 1),
    (void *)v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((void **)&v41 + 1),
    (void *)v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    SBYTE8(v47),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    SBYTE8(v56),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59);
  v76 = *(int *)(v20 + 24);
  v77 = v16 + v76;
  v78 = v17 + v76;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  swift_release();
  v79 = *(_QWORD *)(v78 + 16);
  *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
  *(_QWORD *)(v77 + 16) = v79;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v77 + 24) = *(_BYTE *)(v78 + 24);
  *(_BYTE *)(v77 + 25) = *(_BYTE *)(v78 + 25);
  v80 = *(_QWORD *)(v78 + 40);
  *(_QWORD *)(v77 + 32) = *(_QWORD *)(v78 + 32);
  *(_QWORD *)(v77 + 40) = v80;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23797129C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236D0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = type metadata accessor for Instrument();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for InstrumentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_237971358(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for Instrument();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2379713F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_237971490();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Instrument();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_237971490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256823740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820880);
    v0 = sub_237A867E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256823740);
  }
}

unint64_t sub_2379714EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256823778;
  if (!qword_256823778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823780);
    v2[0] = sub_23796CA2C();
    v2[1] = sub_23796D1E4();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256823778);
  }
  return result;
}

uint64_t sub_237971558(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_237971568(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_237971574(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_237971580(uint64_t a1, uint64_t a2)
{
  initializeWithTake for SetNeedsFocusUpdateAction(a2, a1);
  return a2;
}

uint64_t sub_2379715BC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_retain();
}

uint64_t sub_2379715C8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_release();
}

unint64_t sub_2379715D4()
{
  unint64_t result;

  result = qword_2568237B0;
  if (!qword_2568237B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA17A8, &type metadata for DataSourceManagerKey);
    atomic_store(result, (unint64_t *)&qword_2568237B0);
  }
  return result;
}

uint64_t sub_237971618()
{
  return swift_retain();
}

uint64_t sub_237971624()
{
  return swift_release();
}

void RequestContentModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for PopoverModel(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v2);
  sub_237971B14(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_237971714 + 4 * byte_237A9A2C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237971714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = v11;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v0 + 32) = v4;
  LODWORD(v11) = *(unsigned __int8 *)(v1 + 112);
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v10;
  if ((_DWORD)v11 != 1)
  {
    *(_QWORD *)(v0 + 8) = v3;
    *(_QWORD *)(v0 + 16) = v7;
    *(_QWORD *)(v0 + 600) = 0;
    *(_QWORD *)(v0 + 608) = 0xE000000000000000;
    sub_237A87F44();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 600) = v2 - 1;
    *(_QWORD *)(v0 + 608) = 0x8000000237AB1580;
    v13 = v9;
    if (v12 >> 62)
    {
      if (v12 >> 62 != 1)
        goto LABEL_9;
      v13 = *(_QWORD *)(v0 + 24);
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
LABEL_10:
      sub_237A878E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378A2C04(*(_QWORD *)(v0 + 40));
      v14 = *(_QWORD *)(v0 + 16);
      v15 = v6;
      v16 = v8;
      v17 = v9;
      goto LABEL_12;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  *(_QWORD *)(v0 + 8) = v9;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 600) = 0;
  *(_QWORD *)(v0 + 608) = 0xE000000000000000;
  sub_237A87F44();
  swift_bridgeObjectRelease();
  strcpy((char *)(v0 + 600), "Local Widget: ");
  *(_BYTE *)(v0 + 615) = -18;
  if (v12 >> 62 == 2)
    swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378A2C04(*(_QWORD *)(v0 + 40));
  v14 = v7;
  v15 = v6;
  v17 = *(_QWORD *)(v0 + 8);
  v16 = *(_QWORD *)(v0 + 16);
LABEL_12:
  sub_2378902DC(v14, v15, v16, v17, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48), v12);
  return *(_QWORD *)(v0 + 600);
}

uint64_t type metadata accessor for RequestContentModel()
{
  uint64_t result;

  result = qword_256823848;
  if (!qword_256823848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237971B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RequestContentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237971B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PopoverModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237971B9C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_23790BD3C(a1, a2, a3);
  return a1;
}

uint64_t sub_237971BB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t RequestContentModel.isRemoteFloatingContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  unsigned int v5;
  uint64_t (*v6)();
  unsigned int v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237971B14(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = EnumCaseMultiPayload - 2;
  v6 = type metadata accessor for RequestContentModel;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = (uint64_t (*)())type metadata accessor for PopoverModel;
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  if (v5 >= 2)
    v8 = v6;
  else
    v8 = type metadata accessor for RequestContentModel;
  if (v5 >= 2)
    v9 = v7;
  else
    v9 = 1;
  sub_2378DE6A4((uint64_t)v3, (uint64_t (*)(_QWORD))v8);
  return v9;
}

void RequestContentModel.isFocusable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for PopoverModel(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v2);
  sub_237971B14(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_237971D68 + 4 * byte_237A9A2C5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237971D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[7];
  v6 = v0[8];
  v7 = v0[9];
  v8 = v0[10];
  v9 = v0[11];
  *(_QWORD *)(v1 - 88) = v0[12];
  swift_bridgeObjectRelease();
  sub_2378A2C04(v2);
  sub_2378902DC(v3, v4, v5, v6, v7, v8, v9);
  return 0;
}

void RequestContentModel.isFloatingContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v1);
  sub_237971B14(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_237971F40 + 4 * byte_237A9A2CA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237971F40()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_2378DE6A4(v1, v0);
  return 0;
}

void RequestContentModel.isLocal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x24BDAC7A8](v1);
  sub_237971B14(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_237972004 + 4 * byte_237A9A2CF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237972004()
{
  uint64_t v0;

  sub_2378DE6A4(v0, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  return 0;
}

void _s14CarPlayAssetUI19RequestContentModelO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  _BYTE v14[400];

  v4 = type metadata accessor for PopoverModel(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for RequestContentModel();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823880);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v14[*(int *)(v10 + 48) - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237971B14(a1, (uint64_t)&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_237971B14(a2, (uint64_t)v12);
  v13 = (char *)sub_237972220 + 4 * word_237A9A2D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237972220()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_237971B14(v0, v2);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 - 368) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v3 - 360) = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v3 - 352) = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v3 - 344) = *(_QWORD *)(v2 + 64);
  v7 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v3 - 336) = *(_QWORD *)(v2 + 72);
  v9 = *(_QWORD *)(v2 + 88);
  v8 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v3 - 376) = *(_QWORD *)(v2 + 104);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_2378A2C04(v5);
    sub_2378902DC(*(_QWORD *)(v3 - 368), *(_QWORD *)(v3 - 360), *(_QWORD *)(v3 - 352), *(_QWORD *)(v3 - 344), *(_QWORD *)(v3 - 336), v7, v9);
    sub_23797490C(v0);
    v10 = 0;
  }
  else
  {
    v11 = *(_BYTE *)(v2 + 112);
    v12 = *(_BYTE *)(v2 + 17);
    v13 = *(_BYTE *)(v2 + 16);
    v14 = *(_QWORD *)v2;
    v15 = *v1;
    v16 = v1[1];
    v17 = *((_BYTE *)v1 + 16);
    v18 = *((_BYTE *)v1 + 17);
    v20 = v1[3];
    v19 = v1[4];
    *(_QWORD *)(v3 - 208) = v14;
    v21 = v1[5];
    *(_QWORD *)(v3 - 424) = v21;
    *(_BYTE *)(v3 - 192) = v13;
    *(_BYTE *)(v3 - 191) = v12;
    v23 = v1[6];
    v22 = v1[7];
    *(_QWORD *)(v3 - 440) = v22;
    v25 = v1[8];
    v24 = v1[9];
    *(_QWORD *)(v3 - 432) = v25;
    *(_BYTE *)(v3 - 96) = v11;
    *(_QWORD *)(v3 - 328) = v15;
    *(_QWORD *)(v3 - 456) = v24;
    v26 = v1[10];
    *(_QWORD *)(v3 - 448) = v26;
    *(_BYTE *)(v3 - 312) = v17;
    v27 = *((_BYTE *)v1 + 112);
    *(_BYTE *)(v3 - 311) = v18;
    *(_BYTE *)(v3 - 216) = v27;
    v28 = v9;
    *(_QWORD *)(v3 - 392) = v9;
    v29 = v7;
    *(_QWORD *)(v3 - 400) = v7;
    v30 = v1[11];
    v31 = v1[12];
    v32 = v8;
    *(_QWORD *)(v3 - 384) = v8;
    v33 = v1[13];
    *(_QWORD *)(v3 - 200) = v4;
    *(_QWORD *)(v3 - 416) = v5;
    *(_QWORD *)(v3 - 184) = v5;
    *(_QWORD *)(v3 - 176) = v6;
    *(_QWORD *)(v3 - 408) = v6;
    *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 368);
    *(_QWORD *)(v3 - 160) = *(_QWORD *)(v3 - 360);
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 352);
    *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 344);
    *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 336);
    *(_QWORD *)(v3 - 128) = v29;
    *(_QWORD *)(v3 - 120) = v28;
    *(_QWORD *)(v3 - 112) = v32;
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 376);
    *(_QWORD *)(v3 - 320) = v16;
    *(_QWORD *)(v3 - 304) = v20;
    *(_QWORD *)(v3 - 296) = v19;
    *(_QWORD *)(v3 - 288) = v21;
    *(_QWORD *)(v3 - 280) = v23;
    v34 = v23;
    *(_QWORD *)(v3 - 272) = v22;
    *(_QWORD *)(v3 - 264) = v25;
    *(_QWORD *)(v3 - 256) = v24;
    *(_QWORD *)(v3 - 248) = v26;
    *(_QWORD *)(v3 - 240) = v30;
    *(_QWORD *)(v3 - 232) = v31;
    *(_QWORD *)(v3 - 224) = v33;
    v10 = _s14CarPlayAssetUI11WidgetModelV2eeoiySbAC_ACtFZ_0(v3 - 208, v3 - 328);
    swift_bridgeObjectRelease();
    sub_2378A2C04(v20);
    sub_2378902DC(*(_QWORD *)(v3 - 424), v34, *(_QWORD *)(v3 - 440), *(_QWORD *)(v3 - 432), *(_QWORD *)(v3 - 456), *(_QWORD *)(v3 - 448), v30);
    swift_bridgeObjectRelease();
    sub_2378A2C04(*(_QWORD *)(v3 - 416));
    sub_2378902DC(*(_QWORD *)(v3 - 368), *(_QWORD *)(v3 - 360), *(_QWORD *)(v3 - 352), *(_QWORD *)(v3 - 344), *(_QWORD *)(v3 - 336), *(_QWORD *)(v3 - 400), *(_QWORD *)(v3 - 392));
    sub_2378DE6A4(v0, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
  }
  return v10 & 1;
}

char *initializeBufferWithCopyOfBuffer for RequestContentModel(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v7;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v8 = a2[3];
        swift_bridgeObjectRetain();
        if (v8)
        {
          v9 = a2[4];
          *((_QWORD *)a1 + 3) = v8;
          *((_QWORD *)a1 + 4) = v9;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        }
        v51 = a2[5];
        v52 = a2[6];
        v53 = a2[7];
        v54 = a2[8];
        v55 = a2[9];
        v56 = a2[10];
        v58 = a2[11];
        v57 = a2[12];
        v119 = a2[13];
        sub_23788F390(v51, v52, v53, v54, v55, v56, v58);
        *((_QWORD *)a1 + 5) = v51;
        *((_QWORD *)a1 + 6) = v52;
        *((_QWORD *)a1 + 7) = v53;
        *((_QWORD *)a1 + 8) = v54;
        *((_QWORD *)a1 + 9) = v55;
        *((_QWORD *)a1 + 10) = v56;
        *((_QWORD *)a1 + 11) = v58;
        *((_QWORD *)a1 + 12) = v57;
        *((_QWORD *)a1 + 13) = v119;
        a1[112] = *((_BYTE *)a2 + 112);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v12 = sub_237A86594();
        (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
        *(_QWORD *)&a1[*(int *)(v13 + 52)] = *(_QWORD *)((char *)a2 + *(int *)(v13 + 52));
        v85 = type metadata accessor for Instrument();
        v14 = *(int *)(v85 + 20);
        v15 = (uint64_t *)&a1[v14];
        v16 = (_QWORD *)((char *)a2 + v14);
        v116 = (void *)v16[3];
        v117 = v16[7];
        v118 = v16[6];
        v114 = (void *)v16[9];
        v115 = (void *)v16[8];
        v112 = v16[11];
        v113 = (void *)v16[10];
        v110 = v16[13];
        v111 = v16[12];
        v108 = v16[15];
        v109 = v16[14];
        v106 = v16[17];
        v107 = v16[16];
        v104 = v16[19];
        v105 = v16[18];
        v102 = v16[21];
        v103 = (void *)v16[20];
        v100 = v16[23];
        v101 = v16[22];
        v99 = v16[24];
        v98 = v16[25];
        v97 = v16[26];
        v96 = (void *)v16[27];
        v95 = (void *)v16[28];
        v94 = v16[29];
        v93 = v16[30];
        v92 = v16[31];
        v91 = v16[32];
        v90 = v16[33];
        v89 = v16[34];
        v88 = v16[35];
        v87 = v16[36];
        v86 = v16[37];
        v17 = v16[40];
        v61 = v16[38];
        v62 = v16[39];
        v63 = v16[41];
        v64 = v16[42];
        v18 = v16[44];
        v65 = v16[43];
        v66 = v16[45];
        v67 = v16[46];
        v68 = v16[47];
        v69 = v16[48];
        v70 = v16[49];
        v71 = v16[50];
        v72 = v16[51];
        v73 = v16[52];
        v74 = v16[53];
        v75 = v16[54];
        v76 = v16[55];
        v77 = v16[56];
        v78 = v16[57];
        v79 = v16[58];
        v80 = v16[59];
        v81 = v16[60];
        v82 = v16[61];
        v83 = v16[62];
        v84 = v16[63];
        v19 = *v16;
        v20 = v16[1];
        v21 = (void *)v16[2];
        v22 = (void *)v16[4];
        v23 = (void *)v16[5];
        sub_2378DD44C(*v16, v20, v21, v116, v22, v23, v118, v117, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105,
          v104,
          v103,
          v102,
          v101,
          v100,
          v99,
          v98,
          v97,
          v96,
          v95,
          v94,
          v93,
          v92,
          v91,
          v90,
          v89,
          v88,
          v87,
          v86,
          v61,
          v62,
          v17,
          v63,
          v64,
          v65,
          v18,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83);
        *v15 = v19;
        v15[1] = v20;
        v15[2] = (uint64_t)v21;
        v15[3] = (uint64_t)v116;
        v15[4] = (uint64_t)v22;
        v15[5] = (uint64_t)v23;
        v15[6] = v118;
        v15[7] = v117;
        v15[8] = (uint64_t)v115;
        v15[9] = (uint64_t)v114;
        v15[10] = (uint64_t)v113;
        v15[11] = v112;
        v15[12] = v111;
        v15[13] = v110;
        v15[14] = v109;
        v15[15] = v108;
        v15[16] = v107;
        v15[17] = v106;
        v15[18] = v105;
        v15[19] = v104;
        v15[20] = (uint64_t)v103;
        v15[21] = v102;
        v15[22] = v101;
        v15[23] = v100;
        v15[24] = v99;
        v15[25] = v98;
        v15[26] = v97;
        v15[27] = (uint64_t)v96;
        v15[28] = (uint64_t)v95;
        v15[29] = v94;
        v15[30] = v93;
        v15[31] = v92;
        v15[32] = v91;
        v15[33] = v90;
        v15[34] = v89;
        v15[35] = v88;
        v15[36] = v87;
        v15[37] = v86;
        v15[38] = v61;
        v15[39] = v62;
        v15[40] = v17;
        v15[41] = v63;
        v15[42] = v64;
        v15[43] = v65;
        v15[44] = v18;
        v15[45] = v66;
        v15[46] = v67;
        v15[47] = v68;
        v15[48] = v69;
        v15[49] = v70;
        v15[50] = v71;
        v15[51] = v72;
        v15[52] = v73;
        v15[53] = v74;
        v15[54] = v75;
        v15[55] = v76;
        v15[56] = v77;
        v15[57] = v78;
        v15[58] = v79;
        v15[59] = v80;
        v15[60] = v81;
        v15[61] = v82;
        v15[62] = v83;
        v15[63] = v84;
        v24 = *(int *)(v85 + 24);
        v25 = &a1[v24];
        v26 = (char *)a2 + v24;
        v27 = *((_QWORD *)v26 + 1);
        *(_QWORD *)v25 = *(_QWORD *)v26;
        *((_QWORD *)v25 + 1) = v27;
        *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
        *((_WORD *)v25 + 12) = *((_WORD *)v26 + 12);
        v28 = *((_QWORD *)v26 + 5);
        *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
        *((_QWORD *)v25 + 5) = v28;
        v29 = (int *)type metadata accessor for PopoverModel(0);
        a1[v29[5]] = *((_BYTE *)a2 + v29[5]);
        v30 = v29[6];
        v31 = &a1[v30];
        v32 = (_QWORD *)((char *)a2 + v30);
        v33 = v32[1];
        *(_QWORD *)v31 = *v32;
        *((_QWORD *)v31 + 1) = v33;
        v34 = v29[7];
        v35 = &a1[v34];
        v36 = (_QWORD *)((char *)a2 + v34);
        v37 = v36[1];
        *(_QWORD *)v35 = *v36;
        *((_QWORD *)v35 + 1) = v37;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v38 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v38;
        v39 = a2[2];
        v40 = a2[3];
        v41 = a2[4];
        v42 = a2[5];
        v43 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        sub_2379732BC(v39, v40, v41, v42, v43);
        *((_QWORD *)a1 + 2) = v39;
        *((_QWORD *)a1 + 3) = v40;
        *((_QWORD *)a1 + 4) = v41;
        *((_QWORD *)a1 + 5) = v42;
        a1[48] = v43;
        v44 = *((unsigned __int8 *)a2 + 72);
        if (v44 == 255)
        {
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          a1[72] = *((_BYTE *)a2 + 72);
        }
        else
        {
          v45 = a2[7];
          v46 = a2[8];
          sub_237973310(v45, v46, *((_BYTE *)a2 + 72));
          *((_QWORD *)a1 + 7) = v45;
          *((_QWORD *)a1 + 8) = v46;
          a1[72] = v44;
        }
        a1[73] = *((_BYTE *)a2 + 73);
        v59 = a2[11];
        if (v59)
        {
          *((_QWORD *)a1 + 10) = a2[10];
          *((_QWORD *)a1 + 11) = v59;
          *((_QWORD *)a1 + 12) = a2[12];
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((_QWORD *)a1 + 12) = a2[12];
        }
        v60 = a2[14];
        *((_QWORD *)a1 + 13) = a2[13];
        *((_QWORD *)a1 + 14) = v60;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v47 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v47;
        v48 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v48;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        v49 = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49)
        {
          v50 = a2[6];
          *((_QWORD *)a1 + 5) = v49;
          *((_QWORD *)a1 + 6) = v50;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2379732BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 && a5 != 2)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_237973310(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_retain();
  if (a3 != 1)
  {
    if (a3)
      return result;
    return swift_retain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RequestContentModel(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 24))
        swift_release();
      return sub_2378902DC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
    case 1:
      v3 = sub_237A86594();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
      v20 = *(_OWORD *)(v4 + 464);
      v21 = *(_OWORD *)(v4 + 480);
      v18 = *(_OWORD *)(v4 + 432);
      v19 = *(_OWORD *)(v4 + 448);
      v16 = *(_OWORD *)(v4 + 400);
      v17 = *(_OWORD *)(v4 + 416);
      v14 = *(_OWORD *)(v4 + 368);
      v15 = *(_OWORD *)(v4 + 384);
      v12 = *(_OWORD *)(v4 + 336);
      v13 = *(_OWORD *)(v4 + 352);
      v10 = *(_OWORD *)(v4 + 304);
      v11 = *(_OWORD *)(v4 + 320);
      v8 = *(_OWORD *)(v4 + 272);
      v9 = *(_OWORD *)(v4 + 288);
      v6 = *(_OWORD *)(v4 + 240);
      v7 = *(_OWORD *)(v4 + 256);
      sub_2378DE7AC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(void **)(v4 + 64), *(void **)(v4 + 72), *(void **)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), *(_QWORD *)(v4 + 144),
        *(_QWORD *)(v4 + 152),
        *(void **)(v4 + 160),
        *(_QWORD *)(v4 + 168),
        *(_QWORD *)(v4 + 176),
        *(_QWORD *)(v4 + 184),
        *(_QWORD *)(v4 + 192),
        *(_QWORD *)(v4 + 200),
        *(_QWORD *)(v4 + 208),
        *(void **)(v4 + 216),
        *(void **)(v4 + 224),
        *(_QWORD *)(v4 + 232),
        v6,
        *((uint64_t *)&v6 + 1),
        v7,
        *((uint64_t *)&v7 + 1),
        v8,
        *((uint64_t *)&v8 + 1),
        v9,
        *((uint64_t *)&v9 + 1),
        v10,
        SBYTE8(v10),
        v11,
        *((uint64_t *)&v11 + 1),
        v12,
        *((uint64_t *)&v12 + 1),
        v13,
        SBYTE8(v13),
        v14,
        *((uint64_t *)&v14 + 1),
        v15,
        *((uint64_t *)&v15 + 1),
        v16,
        SBYTE8(v16),
        v17,
        *((uint64_t *)&v17 + 1),
        v18,
        *((uint64_t *)&v18 + 1),
        v19,
        SBYTE8(v19),
        v20,
        *((uint64_t *)&v20 + 1),
        v21,
        *((uint64_t *)&v21 + 1),
        *(_QWORD *)(v4 + 496));
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for PopoverModel(0);
      swift_release();
      goto LABEL_12;
    case 2:
      swift_bridgeObjectRelease();
      sub_23790BCE8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
      v5 = *(unsigned __int8 *)(a1 + 72);
      if (v5 != 255)
        sub_23790BD3C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v5);
      if (*(_QWORD *)(a1 + 88))
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      goto LABEL_12;
    case 3:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
LABEL_12:
        result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for RequestContentModel(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v6;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v7 = a2[3];
      swift_bridgeObjectRetain();
      if (v7)
      {
        v8 = a2[4];
        *((_QWORD *)a1 + 3) = v7;
        *((_QWORD *)a1 + 4) = v8;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      }
      v48 = a2[5];
      v49 = a2[6];
      v50 = a2[7];
      v51 = a2[8];
      v52 = a2[9];
      v53 = a2[10];
      v55 = a2[11];
      v54 = a2[12];
      v117 = a2[13];
      sub_23788F390(v48, v49, v50, v51, v52, v53, v55);
      *((_QWORD *)a1 + 5) = v48;
      *((_QWORD *)a1 + 6) = v49;
      *((_QWORD *)a1 + 7) = v50;
      *((_QWORD *)a1 + 8) = v51;
      *((_QWORD *)a1 + 9) = v52;
      *((_QWORD *)a1 + 10) = v53;
      *((_QWORD *)a1 + 11) = v55;
      *((_QWORD *)a1 + 12) = v54;
      *((_QWORD *)a1 + 13) = v117;
      a1[112] = *((_BYTE *)a2 + 112);
      goto LABEL_19;
    case 1u:
      v9 = sub_237A86594();
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&a1[*(int *)(v10 + 52)] = *(_QWORD *)((char *)a2 + *(int *)(v10 + 52));
      v83 = type metadata accessor for Instrument();
      v11 = *(int *)(v83 + 20);
      v12 = (uint64_t *)&a1[v11];
      v13 = (_QWORD *)((char *)a2 + v11);
      v114 = (void *)v13[3];
      v115 = v13[7];
      v116 = v13[6];
      v112 = (void *)v13[9];
      v113 = (void *)v13[8];
      v110 = v13[11];
      v111 = (void *)v13[10];
      v108 = v13[13];
      v109 = v13[12];
      v106 = v13[15];
      v107 = v13[14];
      v104 = v13[17];
      v105 = v13[16];
      v102 = v13[19];
      v103 = v13[18];
      v100 = v13[21];
      v101 = (void *)v13[20];
      v98 = v13[23];
      v99 = v13[22];
      v97 = v13[24];
      v96 = v13[25];
      v95 = v13[26];
      v94 = (void *)v13[27];
      v93 = (void *)v13[28];
      v92 = v13[29];
      v91 = v13[30];
      v90 = v13[31];
      v89 = v13[32];
      v88 = v13[33];
      v87 = v13[34];
      v86 = v13[35];
      v85 = v13[36];
      v84 = v13[37];
      v14 = v13[40];
      v59 = v13[38];
      v60 = v13[39];
      v61 = v13[41];
      v62 = v13[42];
      v15 = v13[44];
      v63 = v13[43];
      v64 = v13[45];
      v65 = v13[46];
      v66 = v13[47];
      v67 = v13[48];
      v68 = v13[49];
      v69 = v13[50];
      v70 = v13[51];
      v71 = v13[52];
      v72 = v13[53];
      v73 = v13[54];
      v74 = v13[55];
      v75 = v13[56];
      v76 = v13[57];
      v77 = v13[58];
      v78 = v13[59];
      v79 = v13[60];
      v80 = v13[61];
      v81 = v13[62];
      v82 = v13[63];
      v16 = *v13;
      v17 = v13[1];
      v18 = (void *)v13[2];
      v19 = (void *)v13[4];
      v20 = (void *)v13[5];
      sub_2378DD44C(*v13, v17, v18, v114, v19, v20, v116, v115, v113, v112, v111, v110, v109, v108, v107, v106, v105, v104, v103,
        v102,
        v101,
        v100,
        v99,
        v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v92,
        v91,
        v90,
        v89,
        v88,
        v87,
        v86,
        v85,
        v84,
        v59,
        v60,
        v14,
        v61,
        v62,
        v63,
        v15,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81);
      *v12 = v16;
      v12[1] = v17;
      v12[2] = (uint64_t)v18;
      v12[3] = (uint64_t)v114;
      v12[4] = (uint64_t)v19;
      v12[5] = (uint64_t)v20;
      v12[6] = v116;
      v12[7] = v115;
      v12[8] = (uint64_t)v113;
      v12[9] = (uint64_t)v112;
      v12[10] = (uint64_t)v111;
      v12[11] = v110;
      v12[12] = v109;
      v12[13] = v108;
      v12[14] = v107;
      v12[15] = v106;
      v12[16] = v105;
      v12[17] = v104;
      v12[18] = v103;
      v12[19] = v102;
      v12[20] = (uint64_t)v101;
      v12[21] = v100;
      v12[22] = v99;
      v12[23] = v98;
      v12[24] = v97;
      v12[25] = v96;
      v12[26] = v95;
      v12[27] = (uint64_t)v94;
      v12[28] = (uint64_t)v93;
      v12[29] = v92;
      v12[30] = v91;
      v12[31] = v90;
      v12[32] = v89;
      v12[33] = v88;
      v12[34] = v87;
      v12[35] = v86;
      v12[36] = v85;
      v12[37] = v84;
      v12[38] = v59;
      v12[39] = v60;
      v12[40] = v14;
      v12[41] = v61;
      v12[42] = v62;
      v12[43] = v63;
      v12[44] = v15;
      v12[45] = v64;
      v12[46] = v65;
      v12[47] = v66;
      v12[48] = v67;
      v12[49] = v68;
      v12[50] = v69;
      v12[51] = v70;
      v12[52] = v71;
      v12[53] = v72;
      v12[54] = v73;
      v12[55] = v74;
      v12[56] = v75;
      v12[57] = v76;
      v12[58] = v77;
      v12[59] = v78;
      v12[60] = v79;
      v12[61] = v80;
      v12[62] = v81;
      v12[63] = v82;
      v21 = *(int *)(v83 + 24);
      v22 = &a1[v21];
      v23 = (char *)a2 + v21;
      v24 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
      v25 = *((_QWORD *)v23 + 5);
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 5) = v25;
      v26 = (int *)type metadata accessor for PopoverModel(0);
      a1[v26[5]] = *((_BYTE *)a2 + v26[5]);
      v27 = v26[6];
      v28 = &a1[v27];
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = v29[1];
      *(_QWORD *)v28 = *v29;
      *((_QWORD *)v28 + 1) = v30;
      v31 = v26[7];
      v32 = &a1[v31];
      v33 = (_QWORD *)((char *)a2 + v31);
      v34 = v33[1];
      *(_QWORD *)v32 = *v33;
      *((_QWORD *)v32 + 1) = v34;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      goto LABEL_19;
    case 2u:
      v35 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v35;
      v36 = a2[2];
      v37 = a2[3];
      v38 = a2[4];
      v39 = a2[5];
      v40 = *((_BYTE *)a2 + 48);
      swift_bridgeObjectRetain();
      sub_2379732BC(v36, v37, v38, v39, v40);
      *((_QWORD *)a1 + 2) = v36;
      *((_QWORD *)a1 + 3) = v37;
      *((_QWORD *)a1 + 4) = v38;
      *((_QWORD *)a1 + 5) = v39;
      a1[48] = v40;
      v41 = *((unsigned __int8 *)a2 + 72);
      if (v41 == 255)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        a1[72] = *((_BYTE *)a2 + 72);
      }
      else
      {
        v42 = a2[7];
        v43 = a2[8];
        sub_237973310(v42, v43, *((_BYTE *)a2 + 72));
        *((_QWORD *)a1 + 7) = v42;
        *((_QWORD *)a1 + 8) = v43;
        a1[72] = v41;
      }
      a1[73] = *((_BYTE *)a2 + 73);
      v56 = a2[11];
      if (v56)
      {
        *((_QWORD *)a1 + 10) = a2[10];
        *((_QWORD *)a1 + 11) = v56;
        *((_QWORD *)a1 + 12) = a2[12];
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_QWORD *)a1 + 12) = a2[12];
      }
      v57 = a2[14];
      *((_QWORD *)a1 + 13) = a2[13];
      *((_QWORD *)a1 + 14) = v57;
      swift_retain();
      goto LABEL_19;
    case 3u:
      v44 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v44;
      v45 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v45;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      v46 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46)
      {
        v47 = a2[6];
        *((_QWORD *)a1 + 5) = v46;
        *((_QWORD *)a1 + 6) = v47;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      }
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for RequestContentModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  if (a1 != a2)
  {
    sub_2378DE6A4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        a1[17] = a2[17];
        v6 = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        if (v6)
        {
          v7 = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 3) = v6;
          *((_QWORD *)a1 + 4) = v7;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        v46 = *((_QWORD *)a2 + 5);
        v47 = *((_QWORD *)a2 + 6);
        v48 = *((_QWORD *)a2 + 7);
        v49 = *((_QWORD *)a2 + 8);
        v50 = *((_QWORD *)a2 + 9);
        v51 = *((_QWORD *)a2 + 10);
        v53 = *((_QWORD *)a2 + 11);
        v52 = *((_QWORD *)a2 + 12);
        v113 = *((_QWORD *)a2 + 13);
        sub_23788F390(v46, v47, v48, v49, v50, v51, v53);
        *((_QWORD *)a1 + 5) = v46;
        *((_QWORD *)a1 + 6) = v47;
        *((_QWORD *)a1 + 7) = v48;
        *((_QWORD *)a1 + 8) = v49;
        *((_QWORD *)a1 + 9) = v50;
        *((_QWORD *)a1 + 10) = v51;
        *((_QWORD *)a1 + 11) = v53;
        *((_QWORD *)a1 + 12) = v52;
        *((_QWORD *)a1 + 13) = v113;
        a1[112] = a2[112];
        goto LABEL_20;
      case 1u:
        v8 = sub_237A86594();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
        *(_QWORD *)&a1[*(int *)(v9 + 52)] = *(_QWORD *)&a2[*(int *)(v9 + 52)];
        v79 = type metadata accessor for Instrument();
        v10 = *(int *)(v79 + 20);
        v11 = (uint64_t *)&a1[v10];
        v12 = (uint64_t *)&a2[v10];
        v110 = (void *)v12[3];
        v111 = v12[7];
        v112 = v12[6];
        v108 = (void *)v12[9];
        v109 = (void *)v12[8];
        v106 = v12[11];
        v107 = (void *)v12[10];
        v104 = v12[13];
        v105 = v12[12];
        v102 = v12[15];
        v103 = v12[14];
        v100 = v12[17];
        v101 = v12[16];
        v98 = v12[19];
        v99 = v12[18];
        v96 = v12[21];
        v97 = (void *)v12[20];
        v94 = v12[23];
        v95 = v12[22];
        v93 = v12[24];
        v92 = v12[25];
        v91 = v12[26];
        v90 = (void *)v12[27];
        v89 = (void *)v12[28];
        v88 = v12[29];
        v87 = v12[30];
        v86 = v12[31];
        v85 = v12[32];
        v84 = v12[33];
        v83 = v12[34];
        v82 = v12[35];
        v81 = v12[36];
        v80 = v12[37];
        v13 = v12[40];
        v55 = v12[38];
        v56 = v12[39];
        v57 = v12[41];
        v58 = v12[42];
        v14 = v12[44];
        v59 = v12[43];
        v60 = v12[45];
        v61 = v12[46];
        v62 = v12[47];
        v63 = v12[48];
        v64 = v12[49];
        v65 = v12[50];
        v66 = v12[51];
        v67 = v12[52];
        v68 = v12[53];
        v69 = v12[54];
        v70 = v12[55];
        v71 = v12[56];
        v72 = v12[57];
        v73 = v12[58];
        v74 = v12[59];
        v75 = v12[60];
        v76 = v12[61];
        v77 = v12[62];
        v78 = v12[63];
        v15 = *v12;
        v16 = v12[1];
        v17 = (void *)v12[2];
        v18 = (void *)v12[4];
        v19 = (void *)v12[5];
        sub_2378DD44C(*v12, v16, v17, v110, v18, v19, v112, v111, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99,
          v98,
          v97,
          v96,
          v95,
          v94,
          v93,
          v92,
          v91,
          v90,
          v89,
          v88,
          v87,
          v86,
          v85,
          v84,
          v83,
          v82,
          v81,
          v80,
          v55,
          v56,
          v13,
          v57,
          v58,
          v59,
          v14,
          v60,
          v61,
          v62,
          v63,
          v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77);
        *v11 = v15;
        v11[1] = v16;
        v11[2] = (uint64_t)v17;
        v11[3] = (uint64_t)v110;
        v11[4] = (uint64_t)v18;
        v11[5] = (uint64_t)v19;
        v11[6] = v112;
        v11[7] = v111;
        v11[8] = (uint64_t)v109;
        v11[9] = (uint64_t)v108;
        v11[10] = (uint64_t)v107;
        v11[11] = v106;
        v11[12] = v105;
        v11[13] = v104;
        v11[14] = v103;
        v11[15] = v102;
        v11[16] = v101;
        v11[17] = v100;
        v11[18] = v99;
        v11[19] = v98;
        v11[20] = (uint64_t)v97;
        v11[21] = v96;
        v11[22] = v95;
        v11[23] = v94;
        v11[24] = v93;
        v11[25] = v92;
        v11[26] = v91;
        v11[27] = (uint64_t)v90;
        v11[28] = (uint64_t)v89;
        v11[29] = v88;
        v11[30] = v87;
        v11[31] = v86;
        v11[32] = v85;
        v11[33] = v84;
        v11[34] = v83;
        v11[35] = v82;
        v11[36] = v81;
        v11[37] = v80;
        v11[38] = v55;
        v11[39] = v56;
        v11[40] = v13;
        v11[41] = v57;
        v11[42] = v58;
        v11[43] = v59;
        v11[44] = v14;
        v11[45] = v60;
        v11[46] = v61;
        v11[47] = v62;
        v11[48] = v63;
        v11[49] = v64;
        v11[50] = v65;
        v11[51] = v66;
        v11[52] = v67;
        v11[53] = v68;
        v11[54] = v69;
        v11[55] = v70;
        v11[56] = v71;
        v11[57] = v72;
        v11[58] = v73;
        v11[59] = v74;
        v11[60] = v75;
        v11[61] = v76;
        v11[62] = v77;
        v11[63] = v78;
        v20 = *(int *)(v79 + 24);
        v21 = &a1[v20];
        v22 = &a2[v20];
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        v21[24] = v22[24];
        v21[25] = v22[25];
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
        v23 = (int *)type metadata accessor for PopoverModel(0);
        a1[v23[5]] = a2[v23[5]];
        v24 = v23[6];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = *((_QWORD *)v26 + 1);
        *(_QWORD *)v25 = *(_QWORD *)v26;
        *((_QWORD *)v25 + 1) = v27;
        v28 = v23[7];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = *((_QWORD *)v30 + 1);
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *((_QWORD *)v29 + 1) = v31;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        goto LABEL_20;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v32 = *((_QWORD *)a2 + 2);
        v33 = *((_QWORD *)a2 + 3);
        v34 = *((_QWORD *)a2 + 4);
        v35 = *((_QWORD *)a2 + 5);
        v36 = a2[48];
        swift_bridgeObjectRetain();
        sub_2379732BC(v32, v33, v34, v35, v36);
        *((_QWORD *)a1 + 2) = v32;
        *((_QWORD *)a1 + 3) = v33;
        *((_QWORD *)a1 + 4) = v34;
        *((_QWORD *)a1 + 5) = v35;
        a1[48] = v36;
        v37 = a2[72];
        if (v37 == 255)
        {
          v43 = *(_OWORD *)(a2 + 56);
          a1[72] = a2[72];
          *(_OWORD *)(a1 + 56) = v43;
        }
        else
        {
          v38 = *((_QWORD *)a2 + 7);
          v39 = *((_QWORD *)a2 + 8);
          sub_237973310(v38, v39, a2[72]);
          *((_QWORD *)a1 + 7) = v38;
          *((_QWORD *)a1 + 8) = v39;
          a1[72] = v37;
        }
        a1[73] = a2[73];
        if (*((_QWORD *)a2 + 11))
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v44 = *((_OWORD *)a2 + 5);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          *((_OWORD *)a1 + 5) = v44;
        }
        v45 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 14) = v45;
        swift_retain();
        goto LABEL_20;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v40 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v40;
        a1[33] = a2[33];
        v41 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41)
        {
          v42 = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 5) = v41;
          *((_QWORD *)a1 + 6) = v42;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for RequestContentModel(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  int *v13;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_237A86594();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)&a1[*(int *)(v7 + 52)] = *(_QWORD *)&a2[*(int *)(v7 + 52)];
    v8 = type metadata accessor for Instrument();
    memcpy(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], 0x200uLL);
    v9 = *(int *)(v8 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v10[2] = v11[2];
    v13 = (int *)type metadata accessor for PopoverModel(0);
    a1[v13[5]] = a2[v13[5]];
    *(_OWORD *)&a1[v13[6]] = *(_OWORD *)&a2[v13[6]];
    *(_OWORD *)&a1[v13[7]] = *(_OWORD *)&a2[v13[7]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for RequestContentModel(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  int *v13;

  if (a1 != a2)
  {
    sub_2378DE6A4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RequestContentModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_237A86594();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
      *(_QWORD *)&a1[*(int *)(v7 + 52)] = *(_QWORD *)&a2[*(int *)(v7 + 52)];
      v8 = type metadata accessor for Instrument();
      memcpy(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], 0x200uLL);
      v9 = *(int *)(v8 + 24);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = v11[1];
      *v10 = *v11;
      v10[1] = v12;
      v10[2] = v11[2];
      v13 = (int *)type metadata accessor for PopoverModel(0);
      a1[v13[5]] = a2[v13[5]];
      *(_OWORD *)&a1[v13[6]] = *(_OWORD *)&a2[v13[6]];
      *(_OWORD *)&a1[v13[7]] = *(_OWORD *)&a2[v13[7]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestContentModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RequestContentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_237974878()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_237974888()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PopoverModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23797490C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MetadataExporter.init(ASCPathsByIdURL:destinationURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);

  v6 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  sub_23786A1FC();
  v7 = (void *)sub_237A87650();
  v8 = objc_msgSend(v6, sel_initDirectoryWithFileWrappers_, v7);

  *a3 = v8;
  v9 = type metadata accessor for MetadataExporter();
  v10 = (char *)a3 + *(int *)(v9 + 20);
  v11 = sub_237A8651C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v10, a1, v11);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v12)((char *)a3 + *(int *)(v9 + 24), a2, v11);
}

uint64_t type metadata accessor for MetadataExporter()
{
  uint64_t result;

  result = qword_256823900;
  if (!qword_256823900)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MetadataExporter.write(_:)(uint64_t a1)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  void *v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  unsigned __int8 v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  void (*v114)(char *, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void **v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  ValueMetadata *v154;
  _BYTE v155[512];
  _OWORD v156[32];
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  _OWORD v160[30];
  uint64_t v161;

  v2 = v1;
  v161 = *MEMORY[0x24BDAC8D0];
  v4 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v4);
  v143 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237A8633C();
  v144 = *(_QWORD *)(v6 - 8);
  v145 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v142 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A88658();
  v148 = *(_QWORD *)(v8 - 8);
  v149 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v147 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v111 - v14;
  v121 = sub_237A87848();
  v146 = *(_QWORD *)(v121 - 8);
  v16 = MEMORY[0x24BDAC7A8](v121);
  v18 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v120 = *(_QWORD *)(a1 + 112);
  v19 = type metadata accessor for MetadataExporter();
  v20 = (char *)v2 + *(int *)(v19 + 20);
  sub_237A8783C();
  v21 = v151;
  result = sub_237A877E8();
  v139 = (uint64_t)v21;
  if (!v21)
  {
    v141 = v20;
    v150 = v13;
    v151 = v15;
    v130 = v19;
    sub_237A8783C();
    v23 = sub_237A87824();
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = *(void (**)(char *, uint64_t))(v146 + 8);
    v26(v18, v121);
    if (v25 >> 60 == 15)
    {
      sub_237A862DC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256820410);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_237A8A9F0;
      *(_QWORD *)(v27 + 32) = sub_237A87818();
      *(_QWORD *)(v27 + 40) = v28;
      *(_QWORD *)&v157 = 0;
      *((_QWORD *)&v157 + 1) = 0xE000000000000000;
      sub_237A87F44();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v157 = 0x2064696C61766E49;
      *((_QWORD *)&v157 + 1) = 0xE800000000000000;
      sub_237A8651C();
      sub_23786FAA0(&qword_256823888, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      sub_237A882E0();
      sub_237A878E4();
      swift_bridgeObjectRelease();
      sub_237A878E4();
      v29 = v157;
      *(_QWORD *)(v27 + 72) = MEMORY[0x24BEE0D00];
      *(_OWORD *)(v27 + 48) = v29;
      sub_2378D0F4C(v27);
      sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
      v30 = v142;
      v31 = v145;
      sub_237A864D4();
      v32 = sub_237A862D0();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v30, v31);
      v139 = v32;
      return swift_willThrow();
    }
    else
    {
      v114 = v26;
      v115 = v18;
      sub_237A86360();
      swift_allocObject();
      sub_237A86354();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256823890);
      sub_237975AF0();
      v33 = v139;
      sub_237A86348();
      v34 = v33;
      if (v33)
      {
        v139 = v33;
        sub_2378709D8(v23, v25);
        return swift_release();
      }
      else
      {
        v113 = v25;
        swift_release();
        v129 = v157;
        v35 = sub_23789635C(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v37 = v35[2];
        v36 = v35[3];
        if (v37 >= v36 >> 1)
          v35 = sub_23789635C((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
        v38 = v120;
        v35[2] = v37 + 1;
        v135 = v35;
        v39 = &v35[2 * v37];
        v39[4] = 0xD000000000000030;
        v39[5] = 0x8000000237AB15C0;
        v40 = *(_QWORD *)(v38 + 16);
        v112 = v23;
        v116 = v40;
        if (v40)
        {
          v117 = v38 + 32;
          swift_bridgeObjectRetain();
          v41 = 0;
          v140 = v2;
          v42 = (uint64_t)v151;
          while (1)
          {
            memcpy(v160, (const void *)(v117 + 480 * v41), sizeof(v160));
            v43 = *((_QWORD *)&v160[1] + 1);
            v124 = *(_QWORD *)(*((_QWORD *)&v160[1] + 1) + 16);
            if (v124)
            {
              v119 = v41;
              v128 = type metadata accessor for Layout();
              v44 = *(_QWORD *)(v128 - 8);
              v123 = v43 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
              sub_23786FE8C((uint64_t)v160);
              v122 = *(_QWORD *)(v44 + 72);
              v118 = v43;
              swift_bridgeObjectRetain();
              v45 = 0;
              do
              {
                v46 = *(int *)(v128 + 24);
                v127 = v123 + v122 * v45;
                v47 = *(_QWORD *)(v127 + v46);
                v133 = *(_QWORD *)(v47 + 16);
                if (v133)
                {
                  v126 = v45;
                  v137 = type metadata accessor for Zone();
                  v48 = *(_QWORD *)(v137 - 8);
                  v49 = v47
                      + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
                  v131 = *(_QWORD *)(v48 + 72);
                  v132 = v49;
                  v125 = v47;
                  swift_bridgeObjectRetain();
                  v50 = 0;
                  v51 = MEMORY[0x24BEE4B08];
                  do
                  {
                    v138 = v50;
                    v152 = v51;
                    v52 = *(int *)(v137 + 28);
                    v136 = v132 + v131 * v50;
                    v53 = *(_QWORD *)(v136 + v52);
                    v144 = *(_QWORD *)(v53 + 16);
                    if (v144)
                    {
                      v139 = v34;
                      v54 = type metadata accessor for Component();
                      v55 = *(_QWORD *)(v54 - 8);
                      v142 = (char *)(v53
                                    + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80)));
                      v143 = (char *)v54;
                      v141 = *(char **)(v55 + 72);
                      v134 = v53;
                      swift_bridgeObjectRetain();
                      v56 = 0;
                      do
                      {
                        v57 = *(_QWORD *)&v142[(_QWORD)v141 * v56 + *((int *)v143 + 8)];
                        v58 = *(_QWORD *)(v57 + 16);
                        if (v58)
                        {
                          v146 = v56;
                          v59 = type metadata accessor for Slot();
                          v60 = *(_QWORD *)(v59 - 8);
                          v61 = v57
                              + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
                          v62 = *(_QWORD *)(v60 + 72);
                          v145 = v57;
                          swift_bridgeObjectRetain();
                          do
                          {
                            v63 = v61 + *(int *)(v59 + 36);
                            sub_2378A1A90(v63, v42);
                            v64 = type metadata accessor for Instrument();
                            v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48);
                            if (v65(v42, 1, v64) == 1)
                            {
                              sub_2378A1AD8(v42);
                            }
                            else
                            {
                              sub_23788F46C((const void *)(v42 + *(int *)(v64 + 20)), v156);
                              sub_23788F46C(v156, &v157);
                              switch(sub_2378A1BDC((uint64_t)&v157))
                              {
                                case 1u:
                                  v70 = sub_2378A1BF8((uint64_t)&v157);
                                  v71 = v42;
                                  v72 = *(_BYTE *)(v70 + 496);
                                  sub_2378A1BA0(v71);
                                  if ((v72 & 1) != 0)
                                    goto LABEL_37;
                                  goto LABEL_40;
                                case 2u:
                                  v73 = ~*(_DWORD *)(sub_2378A1BF8((uint64_t)&v157) + 40);
                                  v69 = v42;
                                  v68 = v73 & 0xFE;
                                  goto LABEL_36;
                                case 3u:
                                case 4u:
                                case 5u:
                                  sub_2378A1BF8((uint64_t)&v157);
                                  sub_2378A1BA0(v42);
                                  goto LABEL_37;
                                case 8u:
                                  v66 = sub_2378A1BF8((uint64_t)&v157);
                                  v67 = v42;
                                  v68 = *(_QWORD *)(v66 + 8);
                                  v69 = v67;
LABEL_36:
                                  sub_2378A1BA0(v69);
                                  if (v68)
                                  {
LABEL_37:
                                    v74 = v63;
                                    v75 = (uint64_t)v150;
                                    sub_2378A1A90(v74, (uint64_t)v150);
                                    if (v65(v75, 1, v64) == 1)
                                    {
                                      sub_2378A1AD8(v75);
                                    }
                                    else
                                    {
                                      sub_23788F46C((const void *)(v75 + *(int *)(v64 + 20)), v155);
                                      v154 = &type metadata for Instrument.Kind;
                                      v153 = swift_allocObject();
                                      sub_23788F46C(v155, (void *)(v153 + 16));
                                      sub_237977688((uint64_t)v155);
                                      v76 = v147;
                                      sub_237A8861C();
                                      v77 = v75;
                                      v78 = sub_237944308();
                                      (*(void (**)(char *, uint64_t))(v148 + 8))(v76, v149);
                                      sub_2378A1BA0(v77);
                                      sub_237975908(v78);
                                    }
                                  }
LABEL_40:
                                  v42 = (uint64_t)v151;
                                  break;
                                default:
                                  sub_2378A1BA0(v42);
                                  break;
                              }
                            }
                            v61 += v62;
                            --v58;
                          }
                          while (v58);
                          swift_bridgeObjectRelease();
                          v2 = v140;
                          v56 = v146;
                        }
                        ++v56;
                      }
                      while (v56 != v144);
                      swift_bridgeObjectRelease();
                      v79 = v152;
                      v34 = v139;
                    }
                    else
                    {
                      v79 = v51;
                    }
                    v80 = v129;
                    swift_bridgeObjectRetain();
                    v81 = swift_bridgeObjectRetain();
                    v82 = sub_2379773E0(v81, v80);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*(_QWORD *)(v82 + 16))
                    {
                      v146 = v79;
                      v139 = v34;
                      *(_QWORD *)&v157 = 0;
                      *((_QWORD *)&v157 + 1) = 0xE000000000000000;
                      sub_237A87F44();
                      v156[0] = v157;
                      v157 = v160[0];
                      swift_bridgeObjectRetain_n();
                      sub_237A87854();
                      sub_237A878E4();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_237A878E4();
                      v84 = v127;
                      v83 = v128;
                      swift_bridgeObjectRetain();
                      sub_237A878E4();
                      swift_bridgeObjectRelease();
                      sub_237A878E4();
                      LOBYTE(v157) = *(_BYTE *)(v84 + *(int *)(v83 + 36));
                      sub_237A88070();
                      sub_237A878E4();
                      v85 = v136;
                      v86 = v137;
                      swift_bridgeObjectRetain();
                      sub_237A878E4();
                      swift_bridgeObjectRelease();
                      sub_237A878E4();
                      v87 = (__int128 *)(v85 + *(int *)(v86 + 24));
                      v88 = v87[1];
                      v157 = *v87;
                      v158 = v88;
                      type metadata accessor for CGRect(0);
                      sub_237A88070();
                      sub_237A878E4();
                      v89 = sub_2378BF3D8(v82);
                      swift_bridgeObjectRelease();
                      v34 = *(_QWORD *)(v89 + 16);
                      if (v34)
                      {
                        __swift_instantiateConcreteTypeFromMangledName(&qword_25681F1C0);
                        v90 = (_QWORD *)swift_allocObject();
                        v91 = _swift_stdlib_malloc_size(v90);
                        v92 = v91 - 32;
                        if (v91 < 32)
                          v92 = v91 - 17;
                        v90[2] = v34;
                        v90[3] = 2 * (v92 >> 4);
                        v93 = sub_237976FB4((uint64_t)&v157, v90 + 4, v34, v89);
                        v2 = (void **)v158;
                        v144 = v159;
                        v145 = *((_QWORD *)&v158 + 1);
                        swift_bridgeObjectRetain_n();
                        sub_2378707DC();
                        if (v93 != v34)
                        {
                          __break(1u);
                          goto LABEL_57;
                        }
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        v90 = (_QWORD *)MEMORY[0x24BEE4AF8];
                      }
                      *(_QWORD *)&v157 = v90;
                      v94 = v139;
                      sub_237975A88((uint64_t *)&v157);
                      if (v94)
                      {
                        swift_release();
                        __break(1u);
                        goto LABEL_67;
                      }
                      swift_bridgeObjectRelease();
                      __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
                      sub_237926878();
                      sub_237A87764();
                      swift_release();
                      sub_237A878E4();
                      swift_bridgeObjectRelease();
                      sub_237A878E4();
                      v95 = v156[0];
                      v96 = v135;
                      v98 = v135[2];
                      v97 = v135[3];
                      if (v98 >= v97 >> 1)
                        v96 = sub_23789635C((_QWORD *)(v97 > 1), v98 + 1, 1, v135);
                      v96[2] = v98 + 1;
                      v135 = v96;
                      *(_OWORD *)&v96[2 * v98 + 4] = v95;
                      swift_bridgeObjectRelease();
                      v34 = 0;
                      v2 = v140;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    v50 = v138 + 1;
                    v51 = MEMORY[0x24BEE4B08];
                  }
                  while (v138 + 1 != v133);
                  swift_bridgeObjectRelease();
                  v45 = v126;
                }
                ++v45;
              }
              while (v45 != v124);
              swift_bridgeObjectRelease();
              sub_2378700DC((uint64_t)v160);
              v41 = v119;
            }
            if (++v41 == v116)
            {
              swift_bridgeObjectRelease();
              break;
            }
          }
        }
LABEL_57:
        swift_bridgeObjectRelease();
        *(_QWORD *)&v157 = v135;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256821E98);
        sub_237926878();
        sub_237A87764();
        swift_bridgeObjectRelease();
        v99 = v115;
        sub_237A8783C();
        v100 = sub_237A87824();
        v102 = v101;
        swift_bridgeObjectRelease();
        v114(v99, v121);
        if (v102 >> 60 == 15)
        {
LABEL_67:
          __break(1u);
          JUMPOUT(0x2379758E8);
        }
        v103 = *v2;
        NSFileWrapper.addRegularFile(withContents:fileName:)(v100, v102, 0x7368746150435341, 0xEC0000007673632ELL);
        v139 = v34;
        if (v34)
        {
          sub_2378709D8(v112, v113);
          v104 = v100;
          v105 = v102;
        }
        else
        {
          swift_bridgeObjectRelease();
          v106 = (void *)sub_237A864F8();
          *(_QWORD *)&v157 = 0;
          v107 = objc_msgSend(v103, sel_writeToURL_options_originalContentsURL_error_, v106, 1, 0, &v157);

          if ((v107 & 1) != 0)
          {
            v108 = (id)v157;
          }
          else
          {
            v109 = (id)v157;
            v110 = sub_237A864E0();

            v139 = v110;
            swift_willThrow();
          }
          sub_2378709D8(v100, v102);
          v104 = v112;
          v105 = v113;
        }
        sub_2378709D8(v104, v105);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_237975908(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2378FE1F0(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_237975A74(uint64_t a1)
{
  return MetadataExporter.write(_:)(a1);
}

uint64_t sub_237975A88(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237959E5C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_237975BB8(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_237975AF0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256823898;
  if (!qword_256823898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823890);
    v2 = sub_237975B5C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256823898);
  }
  return result;
}

unint64_t sub_237975B5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2568238A0;
  if (!qword_2568238A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256821E98);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568238A0);
  }
  return result;
}

uint64_t sub_237975BB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_237A882D4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_2379762A0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_23797636C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_237959E0C((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_237A87ADC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_237A8840C();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_237A8840C()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_237959A4C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_237959A4C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_23797636C((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_237A8840C() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_237A880A0();
  __break(1u);
  return result;
}

uint64_t sub_2379762A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_237A8840C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23797636C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_237A8840C() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_237A8840C() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_237959D64((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

_QWORD *sub_237976604(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v26 = result;
  v11 = 0;
  v12 = 0;
  v27 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 56 * v14);
    v19 = v18[1];
    v21 = v18[2];
    v20 = v18[3];
    v23 = v18[4];
    v22 = v18[5];
    v24 = v18[6];
    *v10 = *v18;
    v10[1] = v19;
    v10[2] = v21;
    v10[3] = v20;
    v10[4] = v23;
    v10[5] = v22;
    v10[6] = v24;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v27)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v27)
      {
        v8 = 0;
        v11 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (v16)
          goto LABEL_14;
        v17 = v15 + 2;
        if (v15 + 2 >= v27)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          v15 = v17;
          goto LABEL_18;
        }
        v11 = v15 + 3;
        if (v15 + 3 < v27)
        {
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            v15 = v11;
            goto LABEL_18;
          }
          v17 = v15 + 4;
          if (v15 + 4 >= v27)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v16 = *(_QWORD *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v15 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v15 >= v27)
              {
                v8 = 0;
                v11 = v27 - 1;
                goto LABEL_37;
              }
              v16 = *(_QWORD *)(v5 + 8 * v15);
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v15 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v25;
      result = v26;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23797686C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  v33 = a4 + 64;
  v30 = (_QWORD *)result;
  v31 = -1 << *(_BYTE *)(a4 + 32);
  if (-v31 < 64)
    v4 = ~(-1 << -(char)v31);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v7 = 0;
    a3 = 0;
    goto LABEL_35;
  }
  if (!a3)
  {
    v7 = 0;
LABEL_35:
    v29 = v30;
LABEL_36:
    *v29 = a4;
    v29[1] = v33;
    v29[2] = ~v31;
    v29[3] = v7;
    v29[4] = v5;
    return a3;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v6 = a2;
  v34 = a3;
  v7 = 0;
  a3 = 0;
  v32 = (unint64_t)(63 - v31) >> 6;
  if (!v5)
    goto LABEL_9;
LABEL_8:
  v37 = (v5 - 1) & v5;
  v38 = v7;
  for (i = __clz(__rbit64(v5)) | (v7 << 6); ; i = __clz(__rbit64(v10)) + (v9 << 6))
  {
    v12 = a3 + 1;
    v13 = *(_QWORD *)(a4 + 48) + 112 * i;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v17 = *(_QWORD *)(v13 + 16);
    v16 = *(_QWORD *)(v13 + 24);
    v18 = *(_QWORD *)(v13 + 32);
    v19 = *(_QWORD *)(v13 + 40);
    v20 = *(_QWORD *)(v13 + 48);
    v21 = *(_QWORD *)(v13 + 56);
    v22 = *(_BYTE *)(v13 + 64);
    v23 = *(_QWORD *)(v13 + 72);
    v24 = *(_QWORD *)(v13 + 80);
    v25 = *(_QWORD *)(v13 + 88);
    v26 = *(_BYTE *)(v13 + 96);
    v27 = *(_QWORD *)(v13 + 104);
    v28 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    *(_QWORD *)v6 = v15;
    *(_QWORD *)(v6 + 8) = v14;
    *(_QWORD *)(v6 + 16) = v17;
    *(_QWORD *)(v6 + 24) = v16;
    *(_QWORD *)(v6 + 32) = v18;
    *(_QWORD *)(v6 + 40) = v19;
    *(_QWORD *)(v6 + 48) = v20;
    *(_QWORD *)(v6 + 56) = v21;
    *(_BYTE *)(v6 + 64) = v22;
    *(_QWORD *)(v6 + 72) = v23;
    *(_QWORD *)(v6 + 80) = v24;
    *(_QWORD *)(v6 + 88) = v25;
    *(_BYTE *)(v6 + 96) = v26;
    *(_QWORD *)(v6 + 104) = v27;
    *(_QWORD *)(v6 + 112) = v28;
    if (v12 == v34)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23787978C(v16, v18, v19, v20, v21, v22);
      sub_2378797D4(v24);
      swift_retain();
      swift_bridgeObjectRetain();
      v29 = v30;
      a3 = v34;
      v5 = v37;
      v7 = v38;
      goto LABEL_36;
    }
    v6 += 120;
    v36 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v16, v18, v19, v20, v21, v22);
    sub_2378797D4(v24);
    swift_retain();
    result = swift_bridgeObjectRetain();
    a3 = v36;
    v5 = v37;
    v7 = v38;
    if (v37)
      goto LABEL_8;
LABEL_9:
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v9 >= v32)
      goto LABEL_33;
    v10 = *(_QWORD *)(v33 + 8 * v9);
    if (!v10)
      break;
LABEL_18:
    v37 = (v10 - 1) & v10;
    v38 = v9;
  }
  v7 += 2;
  if (v9 + 1 >= v32)
  {
    v5 = 0;
    v7 = v9;
    goto LABEL_35;
  }
  v10 = *(_QWORD *)(v33 + 8 * v7);
  if (v10)
    goto LABEL_14;
  v11 = v9 + 2;
  if (v9 + 2 >= v32)
    goto LABEL_33;
  v10 = *(_QWORD *)(v33 + 8 * v11);
  if (v10)
    goto LABEL_17;
  v7 = v9 + 3;
  if (v9 + 3 >= v32)
  {
    v5 = 0;
    v7 = v9 + 2;
    goto LABEL_35;
  }
  v10 = *(_QWORD *)(v33 + 8 * v7);
  if (v10)
  {
LABEL_14:
    v9 = v7;
    goto LABEL_18;
  }
  v11 = v9 + 4;
  if (v9 + 4 >= v32)
  {
LABEL_33:
    v5 = 0;
    goto LABEL_35;
  }
  v10 = *(_QWORD *)(v33 + 8 * v11);
  if (v10)
  {
LABEL_17:
    v9 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v9 >= v32)
    {
      v5 = 0;
      v7 = v32 - 1;
      v29 = v30;
      goto LABEL_36;
    }
    v10 = *(_QWORD *)(v33 + 8 * v9);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_237976B9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 32 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    LOBYTE(v20) = *(_BYTE *)(v20 + 24);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_QWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 24) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 32;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_237976DA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_23787076C(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_237870734(v21, (uint64_t)v22);
    result = sub_237870734(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_237976FB4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_2379771B0(_QWORD *result, char *__dst, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[6];
  _BYTE v28[25];

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!__dst)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = __dst;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (__int128 *)(*(_QWORD *)(a4 + 56) + (v16 << 7));
    v21 = v20[3];
    v23 = *v20;
    v22 = v20[1];
    v27[2] = v20[2];
    v27[3] = v21;
    v27[0] = v23;
    v27[1] = v22;
    v25 = v20[5];
    v24 = v20[6];
    v26 = v20[4];
    *(_OWORD *)&v28[9] = *(__int128 *)((char *)v20 + 105);
    v27[5] = v25;
    *(_OWORD *)v28 = v24;
    v27[4] = v26;
    memmove(v11, v20, 0x79uLL);
    if (v13 == v10)
    {
      sub_23787AC58((uint64_t)v27);
      goto LABEL_38;
    }
    v11 += 128;
    result = (_QWORD *)sub_23787AC58((uint64_t)v27);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2379773E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4AF8];
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_26;
      goto LABEL_8;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v8)
      goto LABEL_27;
    v20 = *(_QWORD *)(v4 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v8)
        goto LABEL_27;
      v20 = *(_QWORD *)(v4 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v8)
          goto LABEL_27;
        v20 = *(_QWORD *)(v4 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 3;
          if (v19 + 3 >= v8)
            goto LABEL_27;
          v20 = *(_QWORD *)(v4 + 8 * v10);
          if (!v20)
            break;
        }
      }
    }
LABEL_25:
    v7 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
    if (!*(_QWORD *)(a2 + 16))
    {
LABEL_26:
      v17 = MEMORY[0x24BEE4AF8];
      goto LABEL_5;
    }
LABEL_8:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain_n();
    v16 = sub_2378D2DB8(v14, v15);
    v17 = MEMORY[0x24BEE4AF8];
    if ((v18 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
LABEL_5:
    result = sub_237880CCC(v17);
  }
  v21 = v19 + 4;
  if (v21 >= v8)
  {
LABEL_27:
    swift_release();
    return v22;
  }
  v20 = *(_QWORD *)(v4 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v8)
      goto LABEL_27;
    v20 = *(_QWORD *)(v4 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379775BC()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(v0 + 480);
  v18 = *(_OWORD *)(v0 + 496);
  v15 = *(_OWORD *)(v0 + 448);
  v16 = *(_OWORD *)(v0 + 464);
  v13 = *(_OWORD *)(v0 + 416);
  v14 = *(_OWORD *)(v0 + 432);
  v11 = *(_OWORD *)(v0 + 384);
  v12 = *(_OWORD *)(v0 + 400);
  v9 = *(_OWORD *)(v0 + 352);
  v10 = *(_OWORD *)(v0 + 368);
  v7 = *(_OWORD *)(v0 + 320);
  v8 = *(_OWORD *)(v0 + 336);
  v5 = *(_OWORD *)(v0 + 288);
  v6 = *(_OWORD *)(v0 + 304);
  v3 = *(_OWORD *)(v0 + 256);
  v4 = *(_OWORD *)(v0 + 272);
  v2 = *(_OWORD *)(v0 + 224);
  sub_2378DE7AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(void **)(v0 + 176),
    *(_QWORD *)(v0 + 184),
    *(_QWORD *)(v0 + 192),
    *(_QWORD *)(v0 + 200),
    *(_QWORD *)(v0 + 208),
    *(_QWORD *)(v0 + 216),
    v2,
    *((void **)&v2 + 1),
    *(void **)(v0 + 240),
    *(_QWORD *)(v0 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(_QWORD *)(v0 + 512));
  return swift_deallocObject();
}

uint64_t sub_237977688(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(a1 + 464);
  v18 = *(_OWORD *)(a1 + 480);
  v15 = *(_OWORD *)(a1 + 432);
  v16 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 416);
  v11 = *(_OWORD *)(a1 + 368);
  v12 = *(_OWORD *)(a1 + 384);
  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 240);
  v4 = *(_OWORD *)(a1 + 256);
  sub_2378DD44C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(void **)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

void **initializeBufferWithCopyOfBuffer for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_237A8651C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v12((char *)v7 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return v7;
}

uint64_t destroy for MetadataExporter(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  void (*v7)(char *, uint64_t);

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_237A8651C();
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(char *, uint64_t))v7)((char *)a1 + *(int *)(a2 + 24), v5);
}

void **initializeWithCopy for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A8651C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v11((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v10);
  return a1;
}

void **assignWithCopy for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_237A8651C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  v13((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v12);
  return a1;
}

char *initializeWithTake for MetadataExporter(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_237A8651C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

void **assignWithTake for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A8651C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataExporter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237977AD4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237A8651C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataExporter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_237977B5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_237A8651C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_237977BD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A8651C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237977C48(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = a1;
  v5 = sub_237A87848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A86384();
  MEMORY[0x24BDAC7A8](v9);
  if (v4 != 2)
  {
    v29 = &type metadata for ArcPackage;
    v30 = sub_23797CB70();
    v15 = swift_allocObject();
    v28[0] = v15;
    v16 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v15 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v15 + 96) = v16;
    *(_OWORD *)(v15 + 112) = *(_OWORD *)(v2 + 96);
    *(_QWORD *)(v15 + 128) = *(_QWORD *)(v2 + 112);
    v17 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v15 + 32) = v17;
    v18 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v15 + 64) = v18;
    sub_237A863B4();
    swift_allocObject();
    sub_23797CBF8(v2);
    sub_237A863A8();
    byte_2568219B8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D60);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_237A95640;
    sub_237A8636C();
    sub_237A86378();
    v31 = v19;
    sub_23786FAA0(&qword_256823D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D70);
    sub_23797CA40();
    sub_237A87E9C();
    sub_237A86390();
    __swift_project_boxed_opaque_existential_2Tm(v28, (uint64_t)v29);
    v11 = sub_237A8639C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  inited = swift_initStackObject();
  sub_23797CBF8(v2);
  *(_QWORD *)(inited + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  byte_2568219B8 = 2;
  v11 = inited;
  v12 = v27;
  v13 = sub_23797B740((__int128 *)v2);
  if (v12)
  {
    swift_bridgeObjectRelease();
    sub_23797CC60(v2);
    return v11;
  }
  v20 = v13;
  v21 = v14;
  Data.utf8.getter(v13, v14);
  v27 = v22;
  sub_23786FD64(v20, v21);
  v28[0] = 0x206E7275746572;
  v28[1] = 0xE700000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A8783C();
  v11 = sub_237A87824();
  v24 = v23;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v24 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    sub_23797CC60(v2);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_237977FC0(unsigned __int8 a1)
{
  _OWORD *v1;
  _OWORD *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = a1;
  v5 = sub_237A87848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A86384();
  MEMORY[0x24BDAC7A8](v9);
  if (v4 != 2)
  {
    v27 = &type metadata for FontLayoutData;
    v28 = sub_23797C99C();
    v15 = (_OWORD *)swift_allocObject();
    v26[0] = v15;
    v16 = v2[1];
    v15[1] = *v2;
    v15[2] = v16;
    *(_OWORD *)((char *)v15 + 41) = *(_OWORD *)((char *)v2 + 25);
    sub_237A863B4();
    swift_allocObject();
    sub_23797CA0C((uint64_t)v2);
    sub_237A863A8();
    byte_2568219B8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D60);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_237A95640;
    sub_237A8636C();
    sub_237A86378();
    v29 = v17;
    sub_23786FAA0(&qword_256823D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D70);
    sub_23797CA40();
    sub_237A87E9C();
    sub_237A86390();
    __swift_project_boxed_opaque_existential_2Tm(v26, (uint64_t)v27);
    v11 = sub_237A8639C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  inited = swift_initStackObject();
  sub_23797CA0C((uint64_t)v2);
  *(_QWORD *)(inited + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  byte_2568219B8 = 2;
  v11 = inited;
  v12 = v25;
  v13 = sub_23797B958((uint64_t)v2);
  if (v12)
  {
    swift_bridgeObjectRelease();
    sub_23797CA8C((uint64_t)v2);
    return v11;
  }
  v18 = v13;
  v19 = v14;
  Data.utf8.getter(v13, v14);
  v25 = v20;
  sub_23786FD64(v18, v19);
  v26[0] = 0x206E7275746572;
  v26[1] = 0xE700000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A8783C();
  v11 = sub_237A87824();
  v22 = v21;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v22 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    sub_23797CA8C((uint64_t)v2);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_237978320(unsigned __int8 a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = sub_237A87848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A86384();
  MEMORY[0x24BDAC7A8](v9);
  if (v4 != 2)
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823D80);
    v26 = sub_23797CAC0();
    v24[0] = a2;
    sub_237A863B4();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_237A863A8();
    byte_2568219B8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D60);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_237A95640;
    sub_237A8636C();
    sub_237A86378();
    v27 = v15;
    sub_23786FAA0(&qword_256823D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D70);
    sub_23797CA40();
    sub_237A87E9C();
    sub_237A86390();
    __swift_project_boxed_opaque_existential_2Tm(v24, v25);
    v11 = sub_237A8639C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v24);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  inited = swift_initStackObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  byte_2568219B8 = 2;
  v11 = inited;
  v12 = v23;
  v13 = sub_23797BB40();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  v16 = v13;
  v17 = v14;
  Data.utf8.getter(v13, v14);
  v23 = v18;
  sub_23786FD64(v16, v17);
  v24[0] = 0x206E7275746572;
  v24[1] = 0xE700000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A8783C();
  v11 = sub_237A87824();
  v20 = v19;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v20 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

id InstrumentFont.cpFont.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 32);
  v3 = InstrumentFont.Face.font(ofSize:weight:)((double)*(uint64_t *)(v0 + 8), *(double *)(v0 + 24));
  v4 = objc_msgSend(v3, sel_fontDescriptor);
  v5 = objc_msgSend(v4, sel_fontDescriptorWithDesign_, v1);

  if (!v5)
  {
    v7 = v3;
    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  objc_msgSend(v3, sel_pointSize);
  v7 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v5, v6);

  if (v2)
  {
LABEL_3:
    v8 = sub_2378DFF08();

    v3 = v7;
    v7 = v8;
  }
LABEL_4:

  return v7;
}

uint64_t InstrumentFont.init(face:pointSize:design:weight:italic:stable:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v7;

  v7 = *a1;
  *(_QWORD *)(a6 + 40) = 0x322D6D6574737953;
  *(_QWORD *)(a6 + 48) = 0xE900000000000034;
  *(_BYTE *)a6 = v7;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(double *)(a6 + 24) = a7;
  *(_BYTE *)(a6 + 32) = a4;
  *(_BYTE *)(a6 + 33) = a5;
  return sub_237978E54();
}

uint64_t InstrumentFont.Face.name.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1869508429;
  if (*v0 != 1)
    v1 = 0x656D754E74666F53;
  if (*v0)
    return v1;
  else
    return 0x6D6574737953;
}

id InstrumentFont.Face.font(ofSize:weight:)(double a1, double a2)
{
  _BYTE *v2;
  id v4;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;

  if (!*v2)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, a1, a2);
    return v4;
  }
  if (*v2 == 1)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_monospacedDigitSystemFontOfSize_weight_, a1, a2);
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823CC0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A95640;
  v7 = (void *)*MEMORY[0x24BEBB540];
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB540];
  *(_QWORD *)(inited + 40) = 0x2074666F53204653;
  *(_QWORD *)(inited + 48) = 0xEF636972656D754ELL;
  v9 = (void *)*MEMORY[0x24BEBB590];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823CC8);
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_237A8A9F0;
  v11 = (void *)*MEMORY[0x24BEBB620];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x24BEBB620];
  v12 = v7;
  v13 = v9;
  v14 = v11;
  *(_QWORD *)(v10 + 40) = sub_237A865D0();
  v15 = sub_2378D11DC(v10);
  *(_QWORD *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_256823CD0);
  *(_QWORD *)(inited + 80) = v15;
  sub_2378D12E4(inited);
  v16 = objc_allocWithZone(MEMORY[0x24BEBB528]);
  type metadata accessor for AttributeName(0);
  sub_23786FAA0(&qword_25681E720, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237A89920);
  v17 = (void *)sub_237A87650();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_initWithFontAttributes_, v17);

  v19 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v18, a1);
  return v19;
}

CarPlayAssetUI::InstrumentFont::Face_optional __swiftcall InstrumentFont.Face.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CarPlayAssetUI::InstrumentFont::Face_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t InstrumentFont.Face.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636170736F6E6F6DLL;
  if (*v0 != 1)
    v1 = 0x656D754E74666F73;
  if (*v0)
    return v1;
  else
    return 0x6D6574737973;
}

uint64_t sub_237978B3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5514(*a1, *a2);
}

uint64_t sub_237978B48()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_237978BF8()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237978C84()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::InstrumentFont::Face_optional sub_237978D30(Swift::String *a1)
{
  return InstrumentFont.Face.init(rawValue:)(*a1);
}

void sub_237978D3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xEF74696769446465;
  v5 = 0x636170736F6E6F6DLL;
  if (v2 != 1)
  {
    v5 = 0x656D754E74666F73;
    v4 = 0xEB00000000636972;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6D6574737973;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_237978DAC()
{
  sub_23797C914();
  return sub_237A87A34();
}

uint64_t sub_237978E08()
{
  sub_23797C914();
  return sub_237A879EC();
}

uint64_t sub_237978E54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  double v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;

  v1 = 0x2D656C62617453;
  if (!*(_BYTE *)(v0 + 33))
    v1 = 0;
  v2 = 0xE000000000000000;
  if (*(_BYTE *)(v0 + 33))
    v2 = 0xE700000000000000;
  v11 = v1;
  v12 = v2;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  v3 = sub_237A87818();
  v5 = v4;
  if (v3 == sub_237A87818() && v5 == v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_13;
    UIFontDescriptorSystemDesign.name.getter();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
  }
  swift_bridgeObjectRelease();
LABEL_13:
  v9 = *(double *)(v0 + 24);
  if (v9 != *MEMORY[0x24BEBB608])
  {
    UIFontWeight.name.getter(v9);
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v0 + 32) == 1)
    sub_237A878E4();
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = v11;
  *(_QWORD *)(v0 + 48) = v12;
  return result;
}

void InstrumentFont.face.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t InstrumentFont.face.setter(_BYTE *a1)
{
  _BYTE *v1;

  *v1 = *a1;
  return sub_237978E54();
}

uint64_t (*InstrumentFont.face.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  return sub_2379790E0;
}

uint64_t sub_2379790E0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return sub_237978E54();
  return result;
}

uint64_t InstrumentFont.pointSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t InstrumentFont.pointSize.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return sub_237978E54();
}

uint64_t (*InstrumentFont.pointSize.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_23797CCC8;
}

id InstrumentFont.design.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void sub_237979130(id *a1, uint64_t a2)
{
  id v2;
  id *v3;
  id v4;

  v2 = *a1;
  v3 = (id *)(a2 + 16);
  v4 = *a1;
  objc_storeStrong(v3, v2);
  sub_237978E54();

}

void InstrumentFont.design.setter(id obj)
{
  uint64_t v1;

  objc_storeStrong((id *)(v1 + 16), obj);
  sub_237978E54();

}

uint64_t (*InstrumentFont.design.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_23797CCC8;
}

double InstrumentFont.weight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t InstrumentFont.weight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
  return sub_237978E54();
}

uint64_t (*InstrumentFont.weight.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_23797CCC8;
}

uint64_t InstrumentFont.italic.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t InstrumentFont.italic.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = a1;
  return sub_237978E54();
}

uint64_t (*InstrumentFont.italic.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_23797CCC8;
}

double InstrumentFont.ascent.getter()
{
  const __CTFont *v0;
  double Ascent;

  v0 = (const __CTFont *)InstrumentFont.cpFont.getter();
  Ascent = CTFontGetAscent(v0);

  return Ascent;
}

double InstrumentFont.height.getter()
{
  const __CTFont *v0;
  double Ascent;
  double Descent;

  v0 = (const __CTFont *)InstrumentFont.cpFont.getter();
  Ascent = CTFontGetAscent(v0);
  Descent = CTFontGetDescent(v0);

  return ceil(Ascent + Descent);
}

uint64_t InstrumentFont.stable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t InstrumentFont.stable.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = a1;
  return sub_237978E54();
}

uint64_t (*InstrumentFont.stable.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_23797CCC8;
}

uint64_t InstrumentFont.advance(for:)()
{
  id v0;
  uint64_t v1;
  uint64_t result;

  v0 = InstrumentFont.cpFont.getter();
  v1 = sub_237A4C888();

  if (*(_QWORD *)(v1 + 16))
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t InstrumentFont.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*InstrumentFont.name.modify())()
{
  return nullsub_1;
}

uint64_t InstrumentFont.makeStable()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  id v8;

  v3 = *v1;
  v4 = *((_QWORD *)v1 + 1);
  v5 = (void *)*((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v7 = v1[32];
  *(_QWORD *)(a1 + 40) = 0x322D6D6574737953;
  *(_QWORD *)(a1 + 48) = 0xE900000000000034;
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 33) = 1;
  v8 = v5;
  return sub_237978E54();
}

uint64_t InstrumentFont.softNumeric()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  char v7;
  id v8;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 33);
  *(_QWORD *)(a1 + 40) = 0x322D6D6574737953;
  *(_QWORD *)(a1 + 48) = 0xE900000000000034;
  *(_BYTE *)a1 = 2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 33) = v7;
  v8 = v4;
  return sub_237978E54();
}

uint64_t InstrumentFont.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  sub_237A87818();
  v2 = v1;
  sub_237A87710();

  swift_bridgeObjectRelease();
  sub_237A88604();
  sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237979678()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379796A0 + 4 * byte_237A9A3E4[*v0]))(1701011814, 0xE400000000000000);
}

uint64_t sub_2379796A0()
{
  return 0x7A6953746E696F70;
}

uint64_t sub_2379796BC()
{
  return 0x6E6769736564;
}

uint64_t sub_2379796D0()
{
  return 0x746867696577;
}

uint64_t sub_2379796E4()
{
  return 0x63696C617469;
}

uint64_t sub_2379796F8()
{
  return 0x656C62617473;
}

uint64_t sub_23797970C()
{
  return 1701667182;
}

uint64_t sub_237979718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23797C664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23797973C()
{
  sub_23797C00C();
  return sub_237A88718();
}

uint64_t sub_237979764()
{
  sub_23797C00C();
  return sub_237A88724();
}

uint64_t InstrumentFont.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823CD8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v18 = *((_QWORD *)v1 + 2);
  v19 = v9;
  v10 = *((_QWORD *)v1 + 3);
  LODWORD(v9) = v1[32];
  v16 = v1[33];
  v17 = v9;
  v11 = *((_QWORD *)v1 + 5);
  v15[1] = *((_QWORD *)v1 + 6);
  v15[2] = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23797C00C();
  v12 = v4;
  sub_237A886B8();
  LOBYTE(v20) = v8;
  v21 = 0;
  sub_23797C050();
  sub_237A882B0();
  if (!v2)
  {
    v13 = v18;
    LOBYTE(v20) = 1;
    sub_237A88298();
    v20 = v13;
    v21 = 2;
    type metadata accessor for SystemDesign(0);
    sub_23786FAA0(&qword_256823CF0, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&protocol conformance descriptor for UIFontDescriptorSystemDesign);
    sub_237A882B0();
    v20 = v10;
    v21 = 3;
    type metadata accessor for Weight(0);
    sub_23786FAA0(&qword_256823CF8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&protocol conformance descriptor for UIFontWeight);
    sub_237A882B0();
    LOBYTE(v20) = 4;
    sub_237A88280();
    LOBYTE(v20) = 5;
    sub_237A88280();
    LOBYTE(v20) = 6;
    sub_237A88274();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t InstrumentFont.hashValue.getter()
{
  sub_237A885D4();
  InstrumentFont.hash(into:)();
  return sub_237A88610();
}

void InstrumentFont.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  void *v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823D00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23797C00C();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    sub_23797C094();
    sub_237A881F0();
    v9 = v24;
    LOBYTE(v24) = 1;
    v10 = sub_237A881D8();
    type metadata accessor for SystemDesign(0);
    v25 = 2;
    sub_23786FAA0(&qword_256823D10, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&protocol conformance descriptor for UIFontDescriptorSystemDesign);
    sub_237A881F0();
    v22 = v10;
    v23 = v9;
    v11 = v24;
    type metadata accessor for Weight(0);
    v25 = 3;
    sub_23786FAA0(&qword_256823D18, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&protocol conformance descriptor for UIFontWeight);
    v12 = v11;
    sub_237A881F0();
    v13 = v24;
    LOBYTE(v24) = 4;
    LOBYTE(v9) = sub_237A881C0();
    LOBYTE(v24) = 5;
    v21 = sub_237A881C0();
    LOBYTE(v24) = 6;
    v14 = sub_237A881B4();
    v16 = v15;
    v20 = v9 & 1;
    LOBYTE(v9) = v21 & 1;
    v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v18 = v14;
    v17(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v22;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v13;
    *(_BYTE *)(a2 + 32) = v20;
    *(_BYTE *)(a2 + 33) = v9;
    *(_QWORD *)(a2 + 40) = v18;
    *(_QWORD *)(a2 + 48) = v16;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

void sub_237979DE0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  InstrumentFont.init(from:)(a1, a2);
}

uint64_t sub_237979DF4(_QWORD *a1)
{
  return InstrumentFont.encode(to:)(a1);
}

uint64_t sub_237979E0C()
{
  sub_237A885D4();
  InstrumentFont.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_237979E80()
{
  sub_237A885D4();
  InstrumentFont.hash(into:)();
  return sub_237A88610();
}

uint64_t InstrumentFont.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void InstrumentFont.assetType.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void InstrumentFont.destination.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

NSFileWrapper_optional __swiftcall InstrumentFont.generateAsset(destination:)(CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  UIImage *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  UIImage *v20;
  id v21;
  Swift::Bool v22;
  objc_class *v23;
  __int128 v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  UIImage *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  UIImage *v45;
  NSFileWrapper_optional result;

  v29 = *(_BYTE *)destination;
  v2 = *v1;
  v4 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = v1[32];
  v7 = v1[33];
  v9 = *((_QWORD *)v1 + 5);
  v8 = (UIImage *)*((_QWORD *)v1 + 6);
  v10 = objc_allocWithZone(MEMORY[0x24BDD1598]);
  sub_23786A1FC();
  v11 = (void *)sub_237A87650();
  v12 = objc_msgSend(v10, sel_initDirectoryWithFileWrappers_, v11);

  swift_bridgeObjectRetain();
  v13 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPreferredFilename_, v13);

  v25 = v7;
  v26 = v6;
  v30 = v3;
  v31 = v9;
  v28 = v2;
  v27 = v4;
  LOBYTE(v40) = v2;
  *(_QWORD *)&v41 = v4;
  *((_QWORD *)&v41 + 1) = v3;
  v42 = v5;
  if (v7 == 1)
  {
    LOBYTE(v43) = v6;
    BYTE1(v43) = 1;
    v44 = v9;
    v45 = v8;
    sub_23797A254((uint64_t)&v32);
    v14 = v32;
    v15 = v33;
    v16 = v34;
    v17 = v35;
    v18 = v36;
    v19 = v37;
    v20 = v38;
  }
  else
  {
    LOWORD(v43) = v6;
    v44 = v9;
    v45 = v8;
    v21 = InstrumentFont.cpFont.getter();
    sub_237A4D2E0((uint64_t)&v40);
    v14 = v40;
    v24 = v41;
    v16 = v42;
    v17 = BYTE1(v42);
    v18 = v43;
    v19 = v44;
    v20 = v45;

    v15 = v24;
  }
  v32 = v14;
  v33 = v15;
  v34 = v16;
  v35 = v17;
  v36 = v18;
  v37 = v19;
  LOBYTE(v40) = v28;
  *(_QWORD *)&v41 = v27;
  *((_QWORD *)&v41 + 1) = v30;
  v42 = v5;
  LOBYTE(v43) = v26;
  BYTE1(v43) = v25;
  v44 = v31;
  v45 = v8;
  LOBYTE(v39) = v29;
  sub_23797A5FC((uint64_t)v12, (unsigned __int8 *)&v39, (uint64_t)&v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v23 = (objc_class *)v12;
  result.value.super.isa = v23;
  result.is_nil = v22;
  return result;
}

void sub_23797A254(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  const __CTFontDescriptor *v12;
  const __CFNumber *v13;
  const __CFNumber *v14;
  CTFontDescriptorRef CopyWithFeature;
  const __CTFontDescriptor *v16;
  double v17;
  id v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  __int128 v41;
  id v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  double v61;

  v4 = *(double *)(v1 + 8);
  v5 = *(double *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 33);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(void **)(v1 + 48);
  LOBYTE(v44) = *(_BYTE *)v1;
  v45 = v4;
  v46 = v5;
  v47 = v6;
  LOBYTE(v48) = v7;
  BYTE1(v48) = v8;
  v49 = v9;
  v50 = v10;
  v11 = InstrumentFont.cpFont.getter();
  v12 = (const __CTFontDescriptor *)objc_msgSend(v11, sel_fontDescriptor);
  v13 = (const __CFNumber *)sub_237A87C20();
  v14 = (const __CFNumber *)sub_237A87C20();
  CopyWithFeature = CTFontDescriptorCreateCopyWithFeature(v12, v13, v14);

  v16 = CopyWithFeature;
  objc_msgSend(v11, sel_pointSize);
  v18 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v16, v17);

  if (!v18)
    goto LABEL_11;
  sub_237A4D2E0((uint64_t)&v44);
  if (v2)
  {

    return;
  }
  v19 = v44;
  v20 = v45;
  v21 = v46;
  v22 = v48;

  sub_237A4D2E0((uint64_t)&v44);
  if (v20 != v45)
    goto LABEL_11;
  if (v21 != v46)
    goto LABEL_11;
  v43 = v21;
  v61 = v20;
  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_11;
  v23 = v44;
  v42 = v50;
  v24 = sub_2378D2DB8(49, 0xE100000000000000);
  if ((v25 & 1) == 0)
    goto LABEL_11;
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_11;
  v26 = *(_QWORD *)(v19 + 56) + 88 * v24;
  v27 = *(_QWORD *)(v26 + 32);
  v28 = *(_QWORD *)(v26 + 40);
  v29 = *(_QWORD *)(v26 + 48);
  v30 = *(_QWORD *)(v26 + 56);
  v31 = *(_QWORD *)(v26 + 64);
  v32 = *(_QWORD *)(v26 + 72);
  v33 = *(_BYTE *)(v26 + 80);
  v34 = sub_2378D2DB8(49, 0xE100000000000000);
  if ((v35 & 1) == 0)
  {
LABEL_11:
    while (1)
    {
      sub_237A880AC();
      __break(1u);
    }
  }
  v36 = *(_QWORD *)(v23 + 56) + 88 * v34;
  v41 = *(_OWORD *)v36;
  v37 = *(_QWORD *)(v36 + 16);
  v38 = *(_QWORD *)(v36 + 24);
  swift_bridgeObjectRelease();
  v51 = v41;
  v52 = v37;
  v53 = v38;
  v54 = v27;
  v55 = v28;
  v56 = v29;
  v57 = v30;
  v58 = v31;
  v59 = v32;
  v60 = v33;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = v23;
  sub_237871118((uint64_t)&v51, 49, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  v40 = v44;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v40;
  *(double *)(a1 + 8) = v61;
  *(double *)(a1 + 16) = v43;
  *(_WORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v42;
}

uint64_t sub_23797A5FC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, UIImage *a4)
{
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSData *v16;
  NSData *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;

  v7 = *a2;
  v9 = *(_QWORD *)(v4 + 40);
  v8 = *(_QWORD *)(v4 + 48);
  result = sub_237977FC0(*a2);
  if (!v5)
  {
    v12 = result;
    v13 = v11;
    if (v7 == 2)
      v14 = 0x614474756F79614CLL;
    else
      v14 = 0x6A2E74756F79616CLL;
    if (v7 == 2)
      v15 = 0xEE0061756C2E6174;
    else
      v15 = 0xEB000000006E6F73;
    NSFileWrapper.addRegularFile(withContents:fileName:)(result, v11, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23786FD64(v12, v13);
    v16 = UIImagePNGRepresentation(a4);
    if (v16)
    {
      v17 = v16;
      v18 = sub_237A86540();
      v20 = v19;

      swift_bridgeObjectRetain();
      sub_237A878E4();
      NSFileWrapper.addRegularFile(withContents:fileName:)(v18, v20, v9, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_23786FD64(v18, v20);
    }
    else
    {
      sub_23797C958();
      swift_allocError();
      *v21 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_23797A7B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23797A7E0(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23797A7F0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823968 = 0x322D6D6574737953;
  unk_256823970 = 0xE900000000000034;
  byte_256823940 = 2;
  qword_256823948 = 170;
  unk_256823950 = v1;
  qword_256823958 = v0;
  word_256823960 = 256;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.title1.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E358 != -1)
    swift_once();
  v2 = qword_256823948;
  v3 = (void *)unk_256823950;
  v4 = qword_256823958;
  v5 = word_256823960;
  v6 = HIBYTE(word_256823960);
  v7 = qword_256823968;
  v8 = unk_256823970;
  *(_BYTE *)a1 = byte_256823940;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797A8EC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_2568239A0 = 0x322D6D6574737953;
  unk_2568239A8 = 0xE900000000000034;
  byte_256823978 = 0;
  qword_256823980 = 90;
  unk_256823988 = v1;
  qword_256823990 = v0;
  word_256823998 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.title3.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E360 != -1)
    swift_once();
  v2 = qword_256823980;
  v3 = (void *)unk_256823988;
  v4 = qword_256823990;
  v5 = word_256823998;
  v6 = HIBYTE(word_256823998);
  v7 = qword_2568239A0;
  v8 = unk_2568239A8;
  *(_BYTE *)a1 = byte_256823978;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797A9E0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_2568239D8 = 0x322D6D6574737953;
  unk_2568239E0 = 0xE900000000000034;
  byte_2568239B0 = 2;
  qword_2568239B8 = 200;
  unk_2568239C0 = v1;
  qword_2568239C8 = v0;
  word_2568239D0 = 256;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.largeModularTitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E368 != -1)
    swift_once();
  v2 = qword_2568239B8;
  v3 = (void *)unk_2568239C0;
  v4 = qword_2568239C8;
  v5 = word_2568239D0;
  v6 = HIBYTE(word_2568239D0);
  v7 = qword_2568239D8;
  v8 = unk_2568239E0;
  *(_BYTE *)a1 = byte_2568239B0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797AADC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823A10 = 0x322D6D6574737953;
  unk_256823A18 = 0xE900000000000034;
  byte_2568239E8 = 0;
  qword_2568239F0 = 36;
  unk_2568239F8 = v1;
  qword_256823A00 = v0;
  word_256823A08 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E370 != -1)
    swift_once();
  v2 = qword_2568239F0;
  v3 = (void *)unk_2568239F8;
  v4 = qword_256823A00;
  v5 = word_256823A08;
  v6 = HIBYTE(word_256823A08);
  v7 = qword_256823A10;
  v8 = unk_256823A18;
  *(_BYTE *)a1 = byte_2568239E8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797ABD0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823A48 = 0x322D6D6574737953;
  unk_256823A50 = 0xE900000000000034;
  byte_256823A20 = 0;
  qword_256823A28 = 30;
  unk_256823A30 = v1;
  qword_256823A38 = v0;
  word_256823A40 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.subheadline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E378 != -1)
    swift_once();
  v2 = qword_256823A28;
  v3 = (void *)unk_256823A30;
  v4 = qword_256823A38;
  v5 = word_256823A40;
  v6 = HIBYTE(word_256823A40);
  v7 = qword_256823A48;
  v8 = unk_256823A50;
  *(_BYTE *)a1 = byte_256823A20;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797ACC4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823A80 = 0x322D6D6574737953;
  unk_256823A88 = 0xE900000000000034;
  byte_256823A58 = 0;
  qword_256823A60 = 32;
  unk_256823A68 = v1;
  qword_256823A70 = v0;
  word_256823A78 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.system32.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E380 != -1)
    swift_once();
  v2 = qword_256823A60;
  v3 = (void *)unk_256823A68;
  v4 = qword_256823A70;
  v5 = word_256823A78;
  v6 = HIBYTE(word_256823A78);
  v7 = qword_256823A80;
  v8 = unk_256823A88;
  *(_BYTE *)a1 = byte_256823A58;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797ADB8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823AB8 = 0x322D6D6574737953;
  unk_256823AC0 = 0xE900000000000034;
  byte_256823A90 = 0;
  qword_256823A98 = 170;
  unk_256823AA0 = v1;
  qword_256823AA8 = v0;
  word_256823AB0 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.largeRadialGaugeHeadlineFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E388 != -1)
    swift_once();
  v2 = qword_256823A98;
  v3 = (void *)unk_256823AA0;
  v4 = qword_256823AA8;
  v5 = word_256823AB0;
  v6 = HIBYTE(word_256823AB0);
  v7 = qword_256823AB8;
  v8 = unk_256823AC0;
  *(_BYTE *)a1 = byte_256823A90;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797AEAC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823AF0 = 0x322D6D6574737953;
  unk_256823AF8 = 0xE900000000000034;
  byte_256823AC8 = 0;
  qword_256823AD0 = 36;
  unk_256823AD8 = v1;
  qword_256823AE0 = v0;
  word_256823AE8 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.largeRadialGaugeSubheadlineFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E390 != -1)
    swift_once();
  v2 = qword_256823AD0;
  v3 = (void *)unk_256823AD8;
  v4 = qword_256823AE0;
  v5 = word_256823AE8;
  v6 = HIBYTE(word_256823AE8);
  v7 = qword_256823AF0;
  v8 = unk_256823AF8;
  *(_BYTE *)a1 = byte_256823AC8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797AFA0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823B28 = 0x322D6D6574737953;
  unk_256823B30 = 0xE900000000000034;
  byte_256823B00 = 0;
  qword_256823B08 = 36;
  unk_256823B10 = v1;
  qword_256823B18 = v0;
  word_256823B20 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.largeRadialGaugeFooterFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E398 != -1)
    swift_once();
  v2 = qword_256823B08;
  v3 = (void *)unk_256823B10;
  v4 = qword_256823B18;
  v5 = word_256823B20;
  v6 = HIBYTE(word_256823B20);
  v7 = qword_256823B28;
  v8 = unk_256823B30;
  *(_BYTE *)a1 = byte_256823B00;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B094()
{
  void *v0;
  uint64_t v1;
  id v2;

  v0 = (void *)*MEMORY[0x24BEBB568];
  v1 = *MEMORY[0x24BEBB608];
  qword_256823B60 = 0x322D6D6574737953;
  unk_256823B68 = 0xE900000000000034;
  byte_256823B38 = 0;
  qword_256823B40 = 30;
  unk_256823B48 = v0;
  qword_256823B50 = v1;
  word_256823B58 = 0;
  v2 = v0;
  return sub_237978E54();
}

uint64_t static InstrumentFont.largeRadialTextFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3A0 != -1)
    swift_once();
  v2 = qword_256823B40;
  v3 = (void *)unk_256823B48;
  v4 = qword_256823B50;
  v5 = word_256823B58;
  v6 = HIBYTE(word_256823B58);
  v7 = qword_256823B60;
  v8 = unk_256823B68;
  *(_BYTE *)a1 = byte_256823B38;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B188()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823B98 = 0x322D6D6574737953;
  unk_256823BA0 = 0xE900000000000034;
  byte_256823B70 = 0;
  qword_256823B78 = 36;
  unk_256823B80 = v1;
  qword_256823B88 = v0;
  word_256823B90 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.horizontalGaugeRegularFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3A8 != -1)
    swift_once();
  v2 = qword_256823B78;
  v3 = (void *)unk_256823B80;
  v4 = qword_256823B88;
  v5 = word_256823B90;
  v6 = HIBYTE(word_256823B90);
  v7 = qword_256823B98;
  v8 = unk_256823BA0;
  *(_BYTE *)a1 = byte_256823B70;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B27C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823BD0 = 0x322D6D6574737953;
  unk_256823BD8 = 0xE900000000000034;
  byte_256823BA8 = 0;
  qword_256823BB0 = 90;
  unk_256823BB8 = v1;
  qword_256823BC0 = v0;
  word_256823BC8 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.horizontalGaugeLargeFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3B0 != -1)
    swift_once();
  v2 = qword_256823BB0;
  v3 = (void *)unk_256823BB8;
  v4 = qword_256823BC0;
  v5 = word_256823BC8;
  v6 = HIBYTE(word_256823BC8);
  v7 = qword_256823BD0;
  v8 = unk_256823BD8;
  *(_BYTE *)a1 = byte_256823BA8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B370()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823C08 = 0x322D6D6574737953;
  unk_256823C10 = 0xE900000000000034;
  byte_256823BE0 = 0;
  qword_256823BE8 = 30;
  unk_256823BF0 = v1;
  qword_256823BF8 = v0;
  word_256823C00 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.horizontalGaugeCruiseControlFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3B8 != -1)
    swift_once();
  v2 = qword_256823BE8;
  v3 = (void *)unk_256823BF0;
  v4 = qword_256823BF8;
  v5 = word_256823C00;
  v6 = HIBYTE(word_256823C00);
  v7 = qword_256823C08;
  v8 = unk_256823C10;
  *(_BYTE *)a1 = byte_256823BE0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B464()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823C40 = 0x322D6D6574737953;
  unk_256823C48 = 0xE900000000000034;
  byte_256823C18 = 0;
  qword_256823C20 = 36;
  unk_256823C28 = v1;
  qword_256823C30 = v0;
  word_256823C38 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.modularGaugeFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3C0 != -1)
    swift_once();
  v2 = qword_256823C20;
  v3 = (void *)unk_256823C28;
  v4 = qword_256823C30;
  v5 = word_256823C38;
  v6 = HIBYTE(word_256823C38);
  v7 = qword_256823C40;
  v8 = unk_256823C48;
  *(_BYTE *)a1 = byte_256823C18;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B558()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823C78 = 0x322D6D6574737953;
  unk_256823C80 = 0xE900000000000034;
  byte_256823C50 = 0;
  qword_256823C58 = 220;
  unk_256823C60 = v1;
  qword_256823C68 = v0;
  word_256823C70 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.modularGaugeSpeedFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3C8 != -1)
    swift_once();
  v2 = qword_256823C58;
  v3 = (void *)unk_256823C60;
  v4 = qword_256823C68;
  v5 = word_256823C70;
  v6 = HIBYTE(word_256823C70);
  v7 = qword_256823C78;
  v8 = unk_256823C80;
  *(_BYTE *)a1 = byte_256823C50;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B64C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = *MEMORY[0x24BEBB600];
  v1 = (void *)*MEMORY[0x24BEBB568];
  qword_256823CB0 = 0x322D6D6574737953;
  unk_256823CB8 = 0xE900000000000034;
  byte_256823C88 = 0;
  qword_256823C90 = 46;
  unk_256823C98 = v1;
  qword_256823CA0 = v0;
  word_256823CA8 = 0;
  v2 = v1;
  return sub_237978E54();
}

uint64_t static InstrumentFont.digiLinearGearIndicatorFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (qword_25681E3D0 != -1)
    swift_once();
  v2 = qword_256823C90;
  v3 = (void *)unk_256823C98;
  v4 = qword_256823CA0;
  v5 = word_256823CA8;
  v6 = HIBYTE(word_256823CA8);
  v7 = qword_256823CB0;
  v8 = unk_256823CB8;
  *(_BYTE *)a1 = byte_256823C88;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797B740(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t);
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = sub_237A87848();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[5];
  v25 = a1[4];
  v26 = v8;
  v27 = a1[6];
  v28 = *((_QWORD *)a1 + 14);
  v9 = a1[1];
  v21 = *a1;
  v22 = v9;
  v10 = a1[3];
  v23 = a1[2];
  v24 = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v12 = type metadata accessor for _LuaEncoder();
  v13 = (_QWORD *)swift_allocObject();
  v13[4] = 0;
  v13[2] = MEMORY[0x24BEE4AF8];
  v13[3] = v11;
  v13[5] = 0;
  swift_bridgeObjectRetain();
  v20[3] = v12;
  v20[4] = sub_23786FAA0((unint64_t *)&qword_256822EE0, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  v20[0] = v13;
  swift_retain();
  ArcPackage.encode(to:)(v20);
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
    return v12;
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  if (v13[4])
  {
    v14 = v13[5];
    ObjectType = swift_getObjectType();
    v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    swift_unknownObjectRetain();
    v16(ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_237A8783C();
  v12 = sub_237A87824();
  v18 = v17;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v18 >> 60 != 15)
  {
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23797B958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  _QWORD v17[5];

  v4 = sub_237A87848();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 16);
  v9 = type metadata accessor for _LuaEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v10[4] = 0;
  v10[2] = MEMORY[0x24BEE4AF8];
  v10[3] = v8;
  v10[5] = 0;
  swift_bridgeObjectRetain();
  v17[3] = v9;
  v17[4] = sub_23786FAA0((unint64_t *)&qword_256822EE0, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  v17[0] = v10;
  swift_retain();
  sub_237A4E1B8(v17);
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v17);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v17);
  if (v10[4])
  {
    v11 = v10[5];
    ObjectType = swift_getObjectType();
    v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    swift_unknownObjectRelease();
  }
  sub_237A8783C();
  a1 = sub_237A87824();
  v15 = v14;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v15 >> 60 != 15)
  {
    swift_release();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23797BB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  _QWORD v16[10];

  v1 = sub_237A87848();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 16);
  v6 = type metadata accessor for _LuaEncoder();
  v7 = (_QWORD *)swift_allocObject();
  v7[4] = 0;
  v7[2] = MEMORY[0x24BEE4AF8];
  v7[3] = v5;
  v7[5] = 0;
  swift_bridgeObjectRetain();
  v16[3] = v6;
  v16[4] = sub_23786FAA0((unint64_t *)&qword_256822EE0, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  v16[0] = v7;
  sub_23797CB2C();
  swift_retain();
  v8 = v16[9];
  sub_237A876B0();
  if (v8)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
    return (uint64_t)v4;
  }
  v9 = v4;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
  if (v7[4])
  {
    v10 = v7[5];
    ObjectType = swift_getObjectType();
    v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain();
    v12(ObjectType, v10);
    swift_unknownObjectRelease();
  }
  sub_237A8783C();
  v4 = (char *)sub_237A87824();
  v14 = v13;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  if (v14 >> 60 != 15)
  {
    swift_release();
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  double v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((double *)a1 + 3);
  v33 = a1[32];
  v5 = a1[33];
  v7 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(double *)(a2 + 24);
  v31 = *(unsigned __int8 *)(a2 + 33);
  v32 = *(unsigned __int8 *)(a2 + 32);
  v10 = 0x636170736F6E6F6DLL;
  v11 = 0xEF74696769446465;
  v12 = *(_QWORD *)(a2 + 48);
  v30 = *(_QWORD *)(a2 + 40);
  if (v2 != 1)
  {
    v10 = 0x656D754E74666F73;
    v11 = 0xEB00000000636972;
  }
  if (*a1)
    v13 = v10;
  else
    v13 = 0x6D6574737973;
  if (v2)
    v14 = v11;
  else
    v14 = 0xE600000000000000;
  v15 = 0x636170736F6E6F6DLL;
  v16 = 0xEF74696769446465;
  if (*(_BYTE *)a2 != 1)
  {
    v15 = 0x656D754E74666F73;
    v16 = 0xEB00000000636972;
  }
  if (*(_BYTE *)a2)
    v17 = v15;
  else
    v17 = 0x6D6574737973;
  if (*(_BYTE *)a2)
    v18 = v16;
  else
    v18 = 0xE600000000000000;
  if (v13 == v17 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    if (v3 != v8)
      return 0;
  }
  else
  {
    v20 = *(_QWORD *)(a2 + 48);
    v21 = v5;
    v22 = v6;
    v23 = v7;
    v24 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v24 & 1) == 0)
      return result;
    v7 = v23;
    v6 = v22;
    v5 = v21;
    v12 = v20;
    if (v3 != v8)
      return result;
  }
  v25 = sub_237A87818();
  v27 = v26;
  if (v25 == sub_237A87818() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
    result = 0;
  }
  else
  {
    v29 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v29 & 1) == 0)
      return result;
  }
  if (v4 == v9 && ((v33 ^ v32) & 1) == 0 && ((v5 ^ v31) & 1) == 0)
  {
    if (v7 == v30 && v6 == v12)
      return 1;
    else
      return sub_237A8840C();
  }
  return result;
}

unint64_t sub_23797C00C()
{
  unint64_t result;

  result = qword_256823CE0;
  if (!qword_256823CE0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9A6B4, &type metadata for InstrumentFont.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823CE0);
  }
  return result;
}

unint64_t sub_23797C050()
{
  unint64_t result;

  result = qword_256823CE8;
  if (!qword_256823CE8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont.Face, &type metadata for InstrumentFont.Face);
    atomic_store(result, (unint64_t *)&qword_256823CE8);
  }
  return result;
}

unint64_t sub_23797C094()
{
  unint64_t result;

  result = qword_256823D08;
  if (!qword_256823D08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont.Face, &type metadata for InstrumentFont.Face);
    atomic_store(result, (unint64_t *)&qword_256823D08);
  }
  return result;
}

unint64_t sub_23797C0DC()
{
  unint64_t result;

  result = qword_256823D20;
  if (!qword_256823D20)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont.Face, &type metadata for InstrumentFont.Face);
    atomic_store(result, (unint64_t *)&qword_256823D20);
  }
  return result;
}

unint64_t sub_23797C124()
{
  unint64_t result;

  result = qword_256823D28;
  if (!qword_256823D28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont, &type metadata for InstrumentFont);
    atomic_store(result, (unint64_t *)&qword_256823D28);
  }
  return result;
}

_BYTE *sub_23797C168@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23797C174(_BYTE *a1, _BYTE *a2)
{
  *a2 = *a1;
  return sub_237978E54();
}

uint64_t sub_23797C19C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  return result;
}

uint64_t sub_23797C1A8(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(a2 + 8) = *a1;
  return sub_237978E54();
}

id sub_23797C1D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  *a2 = v2;
  return v2;
}

double sub_23797C1E0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_23797C1EC(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(a2 + 24) = *a1;
  return sub_237978E54();
}

uint64_t sub_23797C214@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32);
  return result;
}

uint64_t sub_23797C220(_BYTE *a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *a1;
  return sub_237978E54();
}

uint64_t sub_23797C248@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 33);
  return result;
}

uint64_t sub_23797C254(_BYTE *a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *a1;
  return sub_237978E54();
}

uint64_t destroy for InstrumentFont(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstrumentFont(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstrumentFont(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InstrumentFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InstrumentFont()
{
  return &type metadata for InstrumentFont;
}

uint64_t storeEnumTagSinglePayload for InstrumentFont.Face(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23797C440 + 4 * byte_237A9A3F0[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23797C474 + 4 * byte_237A9A3EB[v4]))();
}

uint64_t sub_23797C474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23797C47C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23797C484);
  return result;
}

uint64_t sub_23797C490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23797C498);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23797C49C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23797C4A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstrumentFont.Face()
{
  return &type metadata for InstrumentFont.Face;
}

uint64_t storeEnumTagSinglePayload for InstrumentFont.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23797C50C + 4 * byte_237A9A3FA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23797C540 + 4 * byte_237A9A3F5[v4]))();
}

uint64_t sub_23797C540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23797C548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23797C550);
  return result;
}

uint64_t sub_23797C55C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23797C564);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23797C568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23797C570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstrumentFont.CodingKeys()
{
  return &type metadata for InstrumentFont.CodingKeys;
}

unint64_t sub_23797C590()
{
  unint64_t result;

  result = qword_256823D30;
  if (!qword_256823D30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9A68C, &type metadata for InstrumentFont.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823D30);
  }
  return result;
}

unint64_t sub_23797C5D8()
{
  unint64_t result;

  result = qword_256823D38;
  if (!qword_256823D38)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9A5FC, &type metadata for InstrumentFont.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823D38);
  }
  return result;
}

unint64_t sub_23797C620()
{
  unint64_t result;

  result = qword_256823D40;
  if (!qword_256823D40)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9A624, &type metadata for InstrumentFont.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823D40);
  }
  return result;
}

uint64_t sub_23797C664(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701011814 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A6953746E696F70 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x63696C617469 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C62617473 && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_23797C914()
{
  unint64_t result;

  result = qword_256823D48;
  if (!qword_256823D48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentFont.Face, &type metadata for InstrumentFont.Face);
    atomic_store(result, (unint64_t *)&qword_256823D48);
  }
  return result;
}

unint64_t sub_23797C958()
{
  unint64_t result;

  result = qword_256823D50;
  if (!qword_256823D50)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for CPFontError, &type metadata for CPFontError);
    atomic_store(result, (unint64_t *)&qword_256823D50);
  }
  return result;
}

unint64_t sub_23797C99C()
{
  unint64_t result;

  result = qword_256823D58;
  if (!qword_256823D58)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA869C, &type metadata for FontLayoutData);
    atomic_store(result, (unint64_t *)&qword_256823D58);
  }
  return result;
}

uint64_t sub_23797C9E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23797CA0C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23797CA40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256823D78;
  if (!qword_256823D78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823D70);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256823D78);
  }
  return result;
}

uint64_t sub_23797CA8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23797CAC0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256823D88;
  if (!qword_256823D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823D80);
    v2 = sub_23797CB2C();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256823D88);
  }
  return result;
}

unint64_t sub_23797CB2C()
{
  unint64_t result;

  result = qword_256823D90;
  if (!qword_256823D90)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetManifestEntry, &type metadata for AssetManifestEntry);
    atomic_store(result, (unint64_t *)&qword_256823D90);
  }
  return result;
}

unint64_t sub_23797CB70()
{
  unint64_t result;

  result = qword_256823D98;
  if (!qword_256823D98)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage, &type metadata for ArcPackage);
    atomic_store(result, (unint64_t *)&qword_256823D98);
  }
  return result;
}

uint64_t sub_23797CBB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23797CBF8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23797CC60(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t InstrumentCircularStyle.init(tint:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void InstrumentCircularStyle.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t InstrumentCircularStyle.init(tint:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823DA0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v4 + 32) = a1;
  v6 = v4;
  sub_237A87AAC();
  result = MEMORY[0x23B81E0AC](v6);
  *a2 = result;
  return result;
}

uint64_t InstrumentCircularStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_237A86E40();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  (*(void (**)(char *, uint64_t, __n128))(v10 + 16))(v8, a1, v6);
  swift_bridgeObjectRetain();
  return sub_23797CDE8((uint64_t)v8, v9, a2);
}

uint64_t sub_23797CDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v50 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823E58);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823E60);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v40 - v17;
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
  swift_storeEnumTagMultiPayload();
  v19 = type metadata accessor for CircularInstrument();
  v20 = (char *)a3 + *(int *)(v19 + 20);
  v21 = sub_237A86E40();
  v51 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v47 = v20;
  v22(v20, a1, v21);
  *(uint64_t *)((char *)a3 + *(int *)(v19 + 24)) = v50;
  sub_23797DBD4(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(a1, v21);
    return sub_2378BC024((uint64_t)v11, &qword_256823E58);
  }
  else
  {
    v24 = *(int *)(v12 + 48);
    v25 = &v18[v24];
    v26 = &v11[v24];
    v27 = sub_237A86DD4();
    v28 = *(_QWORD *)(v27 - 8);
    v41 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v45 = v21;
    v29 = v18;
    v43 = v18;
    v41(v18, v11, v27);
    v30 = sub_237A86DC8();
    v50 = a1;
    v31 = *(_QWORD *)(v30 - 8);
    v44 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v42 = v25;
    v44(v25, v26, v30);
    v32 = &v15[*(int *)(v12 + 48)];
    v33 = v28;
    v46 = v28;
    v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v34(v15, v29, v27);
    v35 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v35(v32, v25, v30);
    v36 = v48;
    v41(v48, v15, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v27);
    sub_237A86E10();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    v37 = &v15[*(int *)(v12 + 48)];
    v38 = (uint64_t)v43;
    v34(v15, v43, v27);
    v35(v37, v42, v30);
    v39 = v49;
    v44(v49, v37, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v30);
    sub_237A86DF8();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v45);
    sub_2378BC024(v38, &qword_256823E60);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v15, v27);
  }
}

uint64_t sub_23797D198()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23797D1A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_237A86E40();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  (*(void (**)(char *, uint64_t, __n128))(v10 + 16))(v8, a1, v6);
  swift_bridgeObjectRetain();
  return sub_23797CDE8((uint64_t)v8, v9, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for InstrumentCircularStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InstrumentCircularStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for InstrumentCircularStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentCircularStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentCircularStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstrumentCircularStyle()
{
  return &type metadata for InstrumentCircularStyle;
}

uint64_t sub_23797D394()
{
  return sub_23786FAA0(&qword_256823DA8, (uint64_t (*)(uint64_t))type metadata accessor for CircularInstrument, (uint64_t)&unk_237A9A7A0);
}

uint64_t type metadata accessor for CircularInstrument()
{
  uint64_t result;

  result = qword_256823E10;
  if (!qword_256823E10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23797D3FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_237A867D4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_237A86E40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23797D50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_237A867D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_237A86E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23797D5A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_237A867D4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A86E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23797D68C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_237A867D4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A86E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_23797D794(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_237A867D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_237A86E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23797D870(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823788);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_237A867D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_237A86E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23797D96C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23797D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823DB0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_237A86E40();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_23797DA30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23797DA3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823DB0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_237A86E40();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_23797DAE4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23797DB70();
  if (v0 <= 0x3F)
  {
    sub_237A86E40();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23797DB70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256823E20)
  {
    sub_237A867D4();
    v0 = sub_237A867E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256823E20);
  }
}

uint64_t sub_23797DBC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23797DBD4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  int v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v34 = a1;
  v1 = sub_237A867D4();
  v32 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v31 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (uint64_t)&v27 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237A86DC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821AE0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237A86DD4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CircularInstrument();
  sub_237A86E04();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2378BC024((uint64_t)v13, &qword_256821AE0);
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v29(v17, v13, v14);
    sub_237A86DEC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      sub_2378BC024((uint64_t)v7, &qword_256821AE8);
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v27(v33, v7, v8);
      v18 = v30;
      sub_23796D39C(v30);
      v19 = v31;
      v20 = v32;
      (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x24BDEB480], v1);
      sub_23786FAA0(&qword_256823E68, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB4A0], MEMORY[0x24BDEB4B0]);
      v28 = sub_237A877DC();
      v21 = *(void (**)(char *, uint64_t))(v20 + 8);
      v21(v19, v1);
      v21((char *)v18, v1);
      if ((v28 & 1) == 0)
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823E60);
        v25 = v34;
        v26 = &v34[*(int *)(v24 + 48)];
        v29(v34, v17, v14);
        v27(v26, v33, v8);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v25, 0, 1, v24);
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823E60);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v34, 1, 1, v22);
}

uint64_t sub_23797DF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t (*v21)(char *);
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v29 = sub_237A867D4();
  v2 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HalfOpenCircularInstrument();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v30 = (uint64_t)&v29 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - v15;
  v17 = type metadata accessor for CircularInstrument();
  v18 = v1 + *(int *)(v17 + 20);
  v31 = v8;
  v32 = v6;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v33 = v5;
  v19(v8, v18, v5);
  sub_23796D39C((uint64_t)v4);
  v20 = v2;
  v21 = *(uint64_t (**)(char *))(v2 + 88);
  v22 = v29;
  v23 = v21(v4);
  v24 = *MEMORY[0x24BDEB480];
  if (v23 != *MEMORY[0x24BDEB480])
    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v22);
  v25 = *(_QWORD *)(v1 + *(int *)(v17 + 24));
  v26 = &v11[v9[7]];
  *(_QWORD *)v26 = swift_getKeyPath();
  v26[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v11, v31, v33);
  v11[v9[5]] = v23 != v24;
  *(_QWORD *)&v11[v9[6]] = v25;
  v27 = v30;
  sub_237921F28((uint64_t)v11, v30);
  sub_237921F28(v27, (uint64_t)v16);
  sub_237921F28((uint64_t)v16, v34);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23797E174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86A2C();
  *a1 = result;
  return result;
}

uint64_t sub_23797E19C()
{
  swift_retain();
  return sub_237A86A38();
}

uint64_t sub_23797E1C4()
{
  return sub_237A86A74();
}

uint64_t sub_23797E1E4(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_237A867D4();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return MEMORY[0x23B81D6E0](v5);
}

uint64_t sub_23797E264()
{
  return sub_23786FAA0(&qword_256823E70, (uint64_t (*)(uint64_t))type metadata accessor for HalfOpenCircularInstrument, (uint64_t)&unk_237A945E8);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.modify())()
{
  return nullsub_1;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t result;
  char v7;
  char v8;

  if (*(_QWORD *)(a1 + 16)
    && (result = sub_2378D2ED4(0), (v7 & 1) != 0)
    && (!a2 || *(_QWORD *)(a2 + 16) && (result = sub_2378D2ED4(0), (v8 & 1) != 0)))
  {
    *a3 = a1;
    a3[1] = a2;
  }
  else
  {
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t result;
  uint64_t v15;
  _QWORD v16[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_BYTE *)a1 + 16);
  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821698);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v5;
  *(_BYTE *)(inited + 56) = v6;
  v11 = sub_2378D49A0(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A0);
  swift_arrayDestroy();
  if (v9 == 255)
  {
    v13 = 0;
  }
  else
  {
    v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = v7;
    *(_QWORD *)(v12 + 48) = v8;
    *(_BYTE *)(v12 + 56) = v9;
    v13 = sub_2378D49A0(v12);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  result = Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)(v11, v13, v16);
  v15 = v16[1];
  *a3 = v16[0];
  a3[1] = v15;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23797E5C4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x734449726F6C6F63;
}

uint64_t sub_23797E604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237980B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23797E628()
{
  sub_2379802C4();
  return sub_237A88718();
}

uint64_t sub_23797E650()
{
  sub_2379802C4();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823EA8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379802C4();
  sub_237A886B8();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *v0;
  v1 = v0[1];
  sub_237A885D4();
  sub_237876E24((uint64_t)v4, v2);
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823EB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379802C4();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v14 = 0;
    sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    v10 = v15;
    v14 = 1;
    swift_bridgeObjectRetain();
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12 = v13;
    *v13 = v10;
    v12[1] = v11;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23797EA6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(from:)(a1, a2);
}

uint64_t sub_23797EA80(_QWORD *a1)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.encode(to:)(a1);
}

uint64_t sub_23797EA94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *v0;
  v1 = v0[1];
  sub_237A885D4();
  sub_237876E24((uint64_t)v4, v2);
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23797EB18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = v1[1];
  sub_237876E24(a1, *v1);
  if (!v3)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23797EB88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *v0;
  v1 = v0[1];
  sub_237A885D4();
  sub_237876E24((uint64_t)v4, v2);
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.defaultProgressState.getter()
{
  return 0;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_2378DE3E0(v2);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_2378706C8(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.modify())()
{
  return nullsub_1;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorIDs:trackColorIDs:)@<X0>(unint64_t result@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  __int128 v5;
  char v6;
  __int128 v7;

  v3 = result;
  v5 = *a2;
  if (!result || *(_QWORD *)(result + 16) && (v7 = *a2, result = sub_2378D2ED4(0), v5 = v7, (v6 & 1) != 0))
  {
    *(_QWORD *)a3 = v3;
    *(_OWORD *)(a3 + 8) = v5;
  }
  else
  {
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorID:trackColorID:trackOverlimitColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  v5 = *((unsigned __int8 *)a1 + 16);
  v21 = *(_QWORD *)(a2 + 8);
  v22 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v20 = *(unsigned __int8 *)(a3 + 16);
  if (v5 == 255)
  {
    v12 = 0;
    if (v6 != 255)
      goto LABEL_3;
LABEL_6:
    result = sub_23787D0B4(v8, v7, v20);
    v17 = 0;
    v18 = 0;
    goto LABEL_9;
  }
  v9 = *a1;
  v10 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821698);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 48) = v10;
  *(_BYTE *)(inited + 56) = v5;
  v12 = sub_2378D49A0(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A0);
  swift_arrayDestroy();
  if (v6 == 255)
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821698);
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = v22;
  *(_QWORD *)(v13 + 48) = v21;
  *(_BYTE *)(v13 + 56) = v6;
  v19 = sub_2378D49A0(v13);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_23787D0A0(v22, v21, v6);
  sub_23787D0A0(v8, v7, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A0);
  swift_arrayDestroy();
  if (v20 == 255)
  {
    v15 = 0;
  }
  else
  {
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = v8;
    *(_QWORD *)(v14 + 48) = v7;
    *(_BYTE *)(v14 + 56) = v20;
    v15 = sub_2378D49A0(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)(v19, v15, v23);
  sub_23787D0B4(v8, v7, v20);
  sub_23787D0B4(v22, v21, v6);
  result = swift_bridgeObjectRelease();
  v17 = v23[0];
  v18 = v23[1];
LABEL_9:
  *a4 = v12;
  a4[1] = v17;
  a4[2] = v18;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  if (!*v1)
  {
    sub_237A885EC();
    if (v3)
      goto LABEL_3;
    return sub_237A885EC();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3)
    return sub_237A885EC();
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  sub_237A885EC();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v5);
    swift_bridgeObjectRelease();
  }
  return sub_2378706C8(v3);
}

uint64_t sub_23797F09C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6F436B63617274;
  else
    return 0x6F43657669746361;
}

uint64_t sub_23797F0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237980C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23797F114()
{
  sub_237980308();
  return sub_237A88718();
}

uint64_t sub_23797F13C()
{
  sub_237980308();
  return sub_237A88724();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823EC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v11 = v1[2];
  v12 = v8;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237980308();
  sub_237A886B8();
  v13 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A88268();
  if (!v2)
  {
    v13 = v12;
    v14 = v11;
    v15 = 1;
    sub_23798034C();
    sub_237A88268();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_237A885D4();
  if (!v2)
  {
    sub_237A885EC();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v1);
  sub_237A885EC();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v5, v3);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(v1);
  return sub_237A88610();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823ED8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237980308();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    v13 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v15 = 0;
    sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881A8();
    v9 = v14[0];
    v15 = 1;
    sub_237980390();
    swift_bridgeObjectRetain();
    sub_237A881A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14[0];
    v12 = v14[1];
    sub_2378DE3E0(v14[0]);
    sub_2378706C8(0);
    swift_bridgeObjectRetain();
    sub_2378DE3E0(v11);
    sub_2378706C8(v11);
    swift_bridgeObjectRelease();
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    v13 = v11;
  }
  return sub_2378706C8(v13);
}

uint64_t sub_23797F624@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23797F638(_QWORD *a1)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.encode(to:)(a1);
}

uint64_t sub_23797F650(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  if (!*v1)
  {
    sub_237A885EC();
    if (v3)
      goto LABEL_3;
    return sub_237A885EC();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3)
    return sub_237A885EC();
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  sub_237A885EC();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_237876E24(a1, v5);
    swift_bridgeObjectRelease();
  }
  return sub_2378706C8(v3);
}

uint64_t sub_23797F758()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_237A885D4();
  if (!v2)
  {
    sub_237A885EC();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    return sub_237A88610();
  }
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_237876E24((uint64_t)v5, v1);
  sub_237A885EC();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_237876E24((uint64_t)v5, v3);
    swift_bridgeObjectRelease();
  }
  sub_2378706C8(v1);
  return sub_237A88610();
}

void static DefaultColorID.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void sub_23797F868(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t sub_23797F874()
{
  _QWORD v1[2];
  char v2;
  __int128 v3;
  char v4;
  uint64_t v5[2];
  char v6;

  v5[0] = 0;
  v5[1] = 0;
  v6 = 0;
  v3 = xmmword_237A9A850;
  v4 = 0;
  v1[0] = 0;
  v1[1] = 0;
  v2 = -1;
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorID:trackColorID:trackOverlimitColorID:)(v5, (uint64_t)&v3, (uint64_t)v1, (unint64_t *)&qword_256823E78);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25681E3D8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = unk_256823E80;
  v3 = qword_256823E88;
  *a1 = qword_256823E78;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return sub_2378DE3E0(v2);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  if (qword_25681E3D8 != -1)
    swift_once();
  swift_beginAccess();
  v4 = unk_256823E80;
  qword_256823E78 = v1;
  unk_256823E80 = v2;
  qword_256823E88 = v3;
  swift_bridgeObjectRelease();
  return sub_2378706C8(v4);
}

uint64_t (*static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.modify())()
{
  if (qword_25681E3D8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_23797FA60()
{
  uint64_t v0;

  if (qword_25681E3D8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = unk_256823E80;
  qword_256823E90 = qword_256823E78;
  *(_QWORD *)algn_256823E98 = unk_256823E80;
  qword_256823EA0 = qword_256823E88;
  swift_bridgeObjectRetain();
  return sub_2378DE3E0(v0);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.default.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25681E3E0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256823E98;
  v3 = qword_256823EA0;
  *a1 = qword_256823E90;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return sub_2378DE3E0(v2);
}

uint64_t sub_23797FB5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25681E3E0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256823E98;
  v3 = qword_256823EA0;
  *a1 = qword_256823E90;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return sub_2378DE3E0(v2);
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D8);
    v3 = sub_237A880E8();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v8 = v3;
  v4 = swift_bridgeObjectRetain();
  sub_23797FCDC(v4, 1, &v8);
  swift_bridgeObjectRelease();
  v5 = v8;
  if (*(_QWORD *)(v8 + 16) && (result = sub_2378D2ED4(0), (v7 & 1) != 0))
  {
    *a2 = v5;
    a2[1] = 0;
  }
  else
  {
    sub_237A880AC();
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_23797FCDC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  char v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_23;
  v6 = *(unsigned __int8 *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 32);
  sub_23787A11C(v8, v7, *(_BYTE *)(a1 + 56));
  if (v6 == 255)
    goto LABEL_23;
  v10 = (_QWORD *)*a3;
  v11 = sub_2378D2ED4(v9);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  LOBYTE(v17) = v12;
  if (v10[3] < v16)
  {
    sub_2378CBB2C(v16, a2 & 1);
    v11 = sub_2378D2ED4(v9);
    if ((v17 & 1) == (v18 & 1))
      goto LABEL_8;
LABEL_6:
    v11 = sub_237A8858C();
    __break(1u);
  }
  if ((a2 & 1) != 0)
  {
LABEL_8:
    if ((v17 & 1) != 0)
      goto LABEL_9;
    goto LABEL_12;
  }
  v21 = v11;
  sub_2378C666C();
  v11 = v21;
  if ((v17 & 1) != 0)
  {
LABEL_9:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_23787A134(v8, v7, v6);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  v22 = (_QWORD *)*a3;
  *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  *(_QWORD *)(v22[6] + 8 * v11) = v9;
  v23 = v22[7] + 24 * v11;
  *(_QWORD *)v23 = v8;
  *(_QWORD *)(v23 + 8) = v7;
  *(_BYTE *)(v23 + 16) = v6;
  v24 = v22[2];
  v15 = __OFADD__(v24, 1);
  v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_237A87F44();
    sub_237A878E4();
    sub_237A88070();
    sub_237A878E4();
    sub_237A880AC();
    __break(1u);
    return;
  }
  v22[2] = v25;
  if (v5 != 1)
  {
    v17 = (char *)(a1 + 88);
    v26 = 1;
    while (v26 < *(_QWORD *)(a1 + 16))
    {
      v6 = *v17;
      v8 = *((_QWORD *)v17 - 2);
      v7 = *((_QWORD *)v17 - 1);
      v9 = *((_QWORD *)v17 - 3);
      sub_23787A11C(v8, v7, *v17);
      if (v6 == 255)
        goto LABEL_23;
      v27 = (_QWORD *)*a3;
      v28 = sub_2378D2ED4(v9);
      v30 = v27[2];
      v31 = (v29 & 1) == 0;
      v15 = __OFADD__(v30, v31);
      v32 = v30 + v31;
      if (v15)
        goto LABEL_25;
      a2 = v29;
      if (v27[3] < v32)
      {
        sub_2378CBB2C(v32, 1);
        v28 = sub_2378D2ED4(v9);
        if ((a2 & 1) != (v33 & 1))
          goto LABEL_6;
      }
      if ((a2 & 1) != 0)
        goto LABEL_9;
      v34 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      *(_QWORD *)(v34[6] + 8 * v28) = v9;
      v35 = v34[7] + 24 * v28;
      *(_QWORD *)v35 = v8;
      *(_QWORD *)(v35 + 8) = v7;
      *(_BYTE *)(v35 + 16) = v6;
      v36 = v34[2];
      v15 = __OFADD__(v36, 1);
      v37 = v36 + 1;
      if (v15)
        goto LABEL_26;
      ++v26;
      v34[2] = v37;
      v17 += 32;
      if (v5 == v26)
        goto LABEL_23;
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV2eeoiySbAG_AGtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v2 = a1[1];
  v3 = a1[2];
  v5 = *a2;
  v4 = a2[1];
  v6 = a2[2];
  if (*a1)
  {
    if (!v5)
      return 0;
    swift_bridgeObjectRetain();
    v7 = swift_bridgeObjectRetain();
    v8 = sub_2379B7304(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  if (!v2)
  {
    if (!v4)
      return 1;
    goto LABEL_16;
  }
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_16:
    sub_2378DE3E0(v4);
    sub_2378706C8(v2);
    v12 = v4;
LABEL_20:
    sub_2378706C8(v12);
    return 0;
  }
  sub_2378DE3E0(v2);
  sub_2378DE3E0(v2);
  sub_2378DE3E0(v4);
  if ((sub_2379B7304(v2, v4) & 1) == 0)
    goto LABEL_18;
  if (v3)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v9 = swift_bridgeObjectRetain();
      v10 = sub_2379B7304(v9, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2378706C8(v4);
      if ((v10 & 1) != 0)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_18:
    sub_2378706C8(v4);
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v2;
    goto LABEL_20;
  }
  if (v6)
    goto LABEL_18;
  sub_2378706C8(v4);
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378706C8(v2);
  return 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV13TrackColorIDsV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_2379B7304(*a1, *a2) & 1) != 0)
  {
    if (v2)
    {
      if (v3)
      {
        swift_bridgeObjectRetain();
        v4 = swift_bridgeObjectRetain();
        v5 = sub_2379B7304(v4, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_2379802C4()
{
  unint64_t result;

  result = qword_256823EB0;
  if (!qword_256823EB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AC74, &_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823EB0);
  }
  return result;
}

unint64_t sub_237980308()
{
  unint64_t result;

  result = qword_256823EC8;
  if (!qword_256823EC8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AC24, &_s26DigiBarColorsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823EC8);
  }
  return result;
}

unint64_t sub_23798034C()
{
  unint64_t result;

  result = qword_256823ED0;
  if (!qword_256823ED0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs);
    atomic_store(result, (unint64_t *)&qword_256823ED0);
  }
  return result;
}

unint64_t sub_237980390()
{
  unint64_t result;

  result = qword_256823EE0;
  if (!qword_256823EE0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs);
    atomic_store(result, (unint64_t *)&qword_256823EE0);
  }
  return result;
}

unint64_t sub_2379803D8()
{
  unint64_t result;

  result = qword_256823EE8;
  if (!qword_256823EE8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs);
    atomic_store(result, (unint64_t *)&qword_256823EE8);
  }
  return result;
}

unint64_t sub_237980420()
{
  unint64_t result;

  result = qword_256823EF0;
  if (!qword_256823EF0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration);
    atomic_store(result, (unint64_t *)&qword_256823EF0);
  }
  return result;
}

unint64_t sub_237980468()
{
  unint64_t result;

  result = qword_256823F28;
  if (!qword_256823F28)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration);
    atomic_store(result, (unint64_t *)&qword_256823F28);
  }
  return result;
}

unint64_t sub_2379804B0()
{
  unint64_t result;

  result = qword_256823F30;
  if (!qword_256823F30)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarColorsConfiguration, &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration);
    atomic_store(result, (unint64_t *)&qword_256823F30);
  }
  return result;
}

uint64_t _s26DigiBarColorsConfigurationVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *_s26DigiBarColorsConfigurationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *_s26DigiBarColorsConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      a1[1] = v4;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    sub_23798066C((uint64_t)(a1 + 1));
    goto LABEL_7;
  }
  a1[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23798066C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s26DigiBarColorsConfigurationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[1];
  if (!a1[1])
    goto LABEL_5;
  if (!v4)
  {
    sub_23798066C((uint64_t)(a1 + 1));
LABEL_5:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s26DigiBarColorsConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s26DigiBarColorsConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarColorsConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration;
}

uint64_t _s26DigiBarColorsConfigurationV13TrackColorIDsVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s26DigiBarColorsConfigurationV13TrackColorIDsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s26DigiBarColorsConfigurationV13TrackColorIDsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s26DigiBarColorsConfigurationV13TrackColorIDsVwta(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs;
}

ValueMetadata *type metadata accessor for DefaultColorID()
{
  return &type metadata for DefaultColorID;
}

ValueMetadata *_s26DigiBarColorsConfigurationV10CodingKeysOMa()
{
  return &_s26DigiBarColorsConfigurationV10CodingKeysON;
}

uint64_t _s26DigiBarColorsConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237980954 + 4 * byte_237A9A865[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237980988 + 4 * byte_237A9A860[v4]))();
}

uint64_t sub_237980988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237980990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237980998);
  return result;
}

uint64_t sub_2379809A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379809ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379809B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379809B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysOMa()
{
  return &_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON;
}

unint64_t sub_2379809D8()
{
  unint64_t result;

  result = qword_256823F68;
  if (!qword_256823F68)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AB44, &_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F68);
  }
  return result;
}

unint64_t sub_237980A20()
{
  unint64_t result;

  result = qword_256823F70;
  if (!qword_256823F70)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9ABFC, &_s26DigiBarColorsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F70);
  }
  return result;
}

unint64_t sub_237980A68()
{
  unint64_t result;

  result = qword_256823F78;
  if (!qword_256823F78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AB6C, &_s26DigiBarColorsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F78);
  }
  return result;
}

unint64_t sub_237980AB0()
{
  unint64_t result;

  result = qword_256823F80;
  if (!qword_256823F80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AB94, &_s26DigiBarColorsConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F80);
  }
  return result;
}

unint64_t sub_237980AF8()
{
  unint64_t result;

  result = qword_256823F88;
  if (!qword_256823F88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AAB4, &_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F88);
  }
  return result;
}

unint64_t sub_237980B40()
{
  unint64_t result;

  result = qword_256823F90;
  if (!qword_256823F90)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AADC, &_s26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256823F90);
  }
  return result;
}

uint64_t sub_237980B84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB1790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237980C70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F43657669746361 && a2 == 0xEE00734449726F6CLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xED0000734449726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237980DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double Width;
  double Height;
  double v37;
  CGFloat MidX;
  CGFloat MidY;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  char *v44;
  int64_t v45;
  double *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v48 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Slot();
  v49 = *(_QWORD *)(v47 - 8);
  v7 = MEMORY[0x24BDAC7A8](v47);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v46 = (double *)((char *)&v43 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (!v14)
    return v15;
  v43 = v2;
  v58 = MEMORY[0x24BEE4AF8];
  sub_2379D64D0(0, v14, 0);
  v16 = 0;
  v57 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v55 = a1 + v57;
  v17 = *(_QWORD *)(v49 + 72);
  v56 = v17;
  v44 = v6;
  v45 = v14;
  while (1)
  {
    sub_2378D07D8(v55 + v17 * v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    v18 = *((_QWORD *)v13 + 5);
    if (v18 >= 2)
      break;
LABEL_19:
    v15 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2379D64D0(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v58;
    }
    v41 = *(_QWORD *)(v15 + 16);
    v40 = *(_QWORD *)(v15 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_2379D64D0(v40 > 1, v41 + 1, 1);
      v15 = v58;
    }
    ++v16;
    *(_QWORD *)(v15 + 16) = v41 + 1;
    v17 = v56;
    sub_2378D0858((uint64_t)v13, v15 + v57 + v41 * v56, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    if (v16 == v14)
      return v15;
  }
  v19 = *(_QWORD *)v13;
  v20 = *((_QWORD *)v13 + 2);
  v50 = *((_QWORD *)v13 + 1);
  v51 = v20;
  v21 = *((_QWORD *)v13 + 4);
  v52 = *((_QWORD *)v13 + 3);
  v22 = *(_QWORD *)(v48 + *(int *)(type metadata accessor for Component() + 32));
  v23 = *(_QWORD *)(v22 + 16);
  v53 = v22;
  v54 = v19;
  if (v23)
  {
    v24 = v22 + v57;
    sub_23795CD9C(v19, v50, v51, v52, v21, v18);
    swift_bridgeObjectRetain();
    v25 = v56;
    while (1)
    {
      sub_2378D07D8(v24, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v26 = *((_QWORD *)v9 + 15) == v21 && v18 == *((_QWORD *)v9 + 16);
      if (v26 || (sub_237A8840C() & 1) != 0)
        break;
      sub_2378DE6A4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v24 += v25;
      if (!--v23)
      {
        v27 = 1;
        v6 = v44;
        goto LABEL_15;
      }
    }
    v6 = v44;
    sub_2378D0858((uint64_t)v9, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    v27 = 0;
  }
  else
  {
    sub_23795CD9C(v19, v50, v51, v52, v21, v18);
    swift_bridgeObjectRetain();
    v27 = 1;
  }
LABEL_15:
  v28 = v49;
  v29 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v6, v27, 1, v47);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v6, 1, v29) != 1)
  {
    v30 = v46;
    sub_2378D0858((uint64_t)v6, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    v31 = v30[6];
    v32 = v30[7];
    v33 = v30[8];
    v34 = v30[9];
    v59.origin.x = v31;
    v59.origin.y = v32;
    v59.size.width = v33;
    v59.size.height = v34;
    Width = CGRectGetWidth(v59);
    v60.origin.x = v31;
    v60.origin.y = v32;
    v60.size.width = v33;
    v60.size.height = v34;
    Height = CGRectGetHeight(v60);
    if (Height >= Width)
      Height = Width;
    v37 = Height * 0.5 + 15.0 + 20.0;
    v61.origin.x = v31;
    v61.origin.y = v32;
    v61.size.width = v33;
    v61.size.height = v34;
    MidX = CGRectGetMidX(v61);
    v62.origin.x = v31;
    v62.origin.y = v32;
    v62.size.width = v33;
    v62.size.height = v34;
    MidY = CGRectGetMidY(v62);
    sub_2378DE6A4((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    sub_23795CDB0(*(_QWORD *)v13, *((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5));
    *(_QWORD *)v13 = v54;
    *((double *)v13 + 1) = v37;
    *((CGFloat *)v13 + 2) = MidX;
    *((CGFloat *)v13 + 3) = MidY;
    *((_QWORD *)v13 + 4) = v21;
    *((_QWORD *)v13 + 5) = v18;
    v14 = v45;
    goto LABEL_19;
  }
  sub_2378BC024((uint64_t)v6, &qword_256820CE0);
  result = sub_237A880AC();
  __break(1u);
  return result;
}

int *Component.updatingWithTemplate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  double v16;
  double v17;
  _BYTE v19[16];
  uint64_t v20;
  char v21;
  _BYTE v22[16];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (int *)type metadata accessor for Component();
  v10 = *(_QWORD *)(a1 + v9[8]);
  v20 = v3;
  swift_bridgeObjectRetain();
  v11 = sub_2378D6814((void (*)(uint64_t))sub_2378DFA50, (uint64_t)v19, v10, (uint64_t)v22);
  swift_bridgeObjectRelease();
  sub_2378BBFE0(v3, (uint64_t)v8, qword_2568207C8);
  v12 = v9[6];
  v21 = *(_BYTE *)(a1 + v9[5]);
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (double *)(a1 + v9[7]);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain();
  return Component.init(id:type:name:size:slots:)((uint64_t)v8, &v21, v13, v14, v11, a2, v16, v17);
}

uint64_t type metadata accessor for Component()
{
  uint64_t result;

  result = qword_256824048;
  if (!qword_256824048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Component.size.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;
  double v7;
  double v8;

  result = type metadata accessor for Component();
  v6 = (double *)(v2 + *(int *)(result + 28));
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  if (v7 != a1 || v8 != a2)
    return sub_237981C70(a1 / v7, a2 / v8);
  return result;
}

uint64_t sub_23798143C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE v26[512];
  _BYTE v27[520];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Instrument();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Slot();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Component() + 32));
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
    return 0;
  v25 = &v10[*(int *)(v7 + 36)];
  v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v24 = *(_QWORD *)(v8 + 72);
  v22[1] = v11;
  swift_bridgeObjectRetain();
  v14 = v23;
  while (1)
  {
    sub_2378D07D8(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    sub_2378BBFE0((uint64_t)v25, (uint64_t)v3, &qword_25681F430);
    sub_2378DE6A4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v4) == 1)
    {
      sub_2378BC024((uint64_t)v3, &qword_25681F430);
      goto LABEL_4;
    }
    sub_2378D0858((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    sub_23788F46C(&v6[*(int *)(v4 + 20)], v26);
    sub_23788F46C(v26, v27);
    v15 = sub_2378A1BDC((uint64_t)v27);
    if (v15 == 4)
    {
      v19 = sub_2378A1BF8((uint64_t)v27);
      v17 = *(_QWORD *)(v19 + 8);
      v18 = *(_QWORD *)(v19 + 16);
    }
    else
    {
      if (v15 != 3)
      {
        sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
        goto LABEL_4;
      }
      v16 = (uint64_t *)sub_2378A1BF8((uint64_t)v27);
      v17 = *v16;
      v18 = v16[1];
    }
    if (v17 == 0x7765695673616461 && v18 == 0xE800000000000000)
      break;
    v20 = sub_237A8840C();
    sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    if ((v20 & 1) != 0)
      goto LABEL_18;
    v14 = v23;
LABEL_4:
    v13 += v24;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  sub_2378DE6A4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
LABEL_18:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t Component.stableIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[512];
  _BYTE v12[512];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  v5 = type metadata accessor for Slot();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  sub_2378BBFE0(v4 + *(int *)(v5 + 36) + ((v6 + 32) & ~v6), (uint64_t)v3, &qword_25681F430);
  v7 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7) == 1)
  {
    sub_2378BC024((uint64_t)v3, &qword_25681F430);
    return 0x6469577974706D45;
  }
  else
  {
    sub_23788F46C(&v3[*(int *)(v7 + 20)], v12);
    sub_2378DE6E0(v12, sub_2378DD44C);
    sub_2378DE6A4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
    sub_23788F46C(v12, v11);
    Instrument.Kind.name.getter();
    v8 = v9;
    sub_2378DE6E0(v12, sub_2378DE7AC);
  }
  return v8;
}

int *Component.init(id:type:name:size:slots:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *result;
  _QWORD *v22;
  double *v23;

  v15 = *a2;
  v16 = sub_2378E40E8(a5);
  v17 = swift_bridgeObjectRetain();
  v18 = sub_2378BF3D8(v17);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v19 == v20)
  {
    sub_237870370(a1, a6, qword_2568207C8);
    result = (int *)type metadata accessor for Component();
    *(_BYTE *)(a6 + result[5]) = v15;
    v22 = (_QWORD *)(a6 + result[6]);
    *v22 = a3;
    v22[1] = a4;
    v23 = (double *)(a6 + result[7]);
    *v23 = a7;
    v23[1] = a8;
    *(_QWORD *)(a6 + result[8]) = a5;
  }
  else
  {
    sub_237A87F44();
    swift_bridgeObjectRelease();
    sub_2378E40E8(a5);
    MEMORY[0x23B81E700]();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (int *)sub_237A880AC();
    __break(1u);
  }
  return result;
}

CarPlayAssetUI::ComponentType_optional __swiftcall ComponentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::ComponentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ComponentType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x79616C7265766FLL;
  else
    return 0x7972616D697270;
}

CarPlayAssetUI::ComponentType_optional sub_237981AB0(Swift::String *a1)
{
  return ComponentType.init(rawValue:)(*a1);
}

uint64_t sub_237981ABC()
{
  sub_23798410C();
  return sub_237A87A34();
}

uint64_t sub_237981B18()
{
  sub_23798410C();
  return sub_237A879EC();
}

uint64_t Component.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, qword_2568207C8);
}

uint64_t Component.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Component();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t Component.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Component() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

double Component.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Component() + 28));
}

uint64_t sub_237981C18(double *a1, uint64_t a2)
{
  double v3;
  double v4;
  uint64_t result;
  double *v6;
  double v7;
  double v8;

  v3 = *a1;
  v4 = a1[1];
  result = type metadata accessor for Component();
  v6 = (double *)(a2 + *(int *)(result + 28));
  v7 = *v6;
  v8 = v6[1];
  *v6 = v3;
  v6[1] = v4;
  if (v3 != v7 || v4 != v8)
    return sub_237981C70(v3 / v7, v4 / v8);
  return result;
}

uint64_t sub_237981C70(CGFloat a1, CGFloat a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  double MinY;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  double MinX;
  double MaxY;
  CGFloat v39;
  double MaxX;
  CGFloat v41;
  CGFloat v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat width;
  CGFloat height;
  CGFloat y;
  CGFloat x;
  CGFloat v62;
  CGAffineTransform v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;

  v3 = v2;
  v51 = a2;
  v62 = a1;
  v4 = type metadata accessor for Slot();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (double *)((char *)v48 - v9);
  v11 = *(int *)(type metadata accessor for Component() + 32);
  v12 = *(_QWORD *)(v2 + v11);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v49 = v11;
    v50 = v3;
    v64 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2379D64D0(0, v13, 0);
    v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v48[1] = v12;
    v16 = v12 + v15;
    v17 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_2378D07D8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      sub_2378D07D8((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v18 = v10[6];
      v19 = v10[7];
      v20 = v10[8];
      v21 = v10[9];
      v22 = v51;
      CGAffineTransformMakeScale(&v63, v62, v51);
      v65.origin.x = v18;
      v65.origin.y = v19;
      v65.size.width = v20;
      v65.size.height = v21;
      v66 = CGRectApplyAffineTransform(v65, &v63);
      y = v66.origin.y;
      x = v66.origin.x;
      width = v66.size.width;
      height = v66.size.height;
      v24 = v10[10];
      v23 = v10[11];
      v25 = v10[13];
      v55 = v10[12];
      v66.origin.x = v18;
      v66.origin.y = v19;
      v66.size.width = v20;
      v66.size.height = v21;
      v57 = v23 + CGRectGetMinX(v66);
      v67.origin.x = v18;
      v67.origin.y = v19;
      v67.size.width = v20;
      v67.size.height = v21;
      v56 = v24 + CGRectGetMinY(v67);
      v68.origin.x = v18;
      v68.origin.y = v19;
      v68.size.width = v20;
      v68.size.height = v21;
      v26 = CGRectGetWidth(v68) - v25 - v23;
      v69.origin.x = v18;
      v69.origin.y = v19;
      v69.size.width = v20;
      v69.size.height = v21;
      v27 = CGRectGetHeight(v69) - v55 - v24;
      CGAffineTransformMakeScale(&v63, v62, v22);
      v70.origin.x = v57;
      v70.origin.y = v56;
      v70.size.width = v26;
      v70.size.height = v27;
      v71 = CGRectApplyAffineTransform(v70, &v63);
      v52 = v71.size.width;
      v28 = v71.size.height;
      v29 = v71.origin.x;
      v30 = v71.origin.y;
      v55 = v71.origin.y;
      MinY = CGRectGetMinY(v71);
      v33 = y;
      v32 = x;
      v72.origin.x = x;
      v72.origin.y = y;
      v34 = width;
      v72.size.width = width;
      v35 = height;
      v72.size.height = height;
      v57 = MinY - CGRectGetMinY(v72);
      v53 = v29;
      v73.origin.x = v29;
      v73.origin.y = v30;
      v36 = v52;
      v73.size.width = v52;
      v73.size.height = v28;
      MinX = CGRectGetMinX(v73);
      v74.origin.x = v32;
      v74.origin.y = v33;
      v74.size.width = v34;
      v74.size.height = v35;
      v56 = MinX - CGRectGetMinX(v74);
      v75.origin.x = v32;
      v75.origin.y = v33;
      v75.size.width = v34;
      v75.size.height = v35;
      MaxY = CGRectGetMaxY(v75);
      v76.origin.x = v29;
      v39 = v55;
      v76.origin.y = v55;
      v76.size.width = v36;
      v76.size.height = v28;
      v54 = MaxY - CGRectGetMaxY(v76);
      v77.origin.x = v32;
      v77.origin.y = v33;
      v77.size.width = v34;
      v77.size.height = v35;
      MaxX = CGRectGetMaxX(v77);
      v78.origin.x = v53;
      v78.origin.y = v39;
      v78.size.width = v36;
      v78.size.height = v28;
      v41 = CGRectGetMaxX(v78);
      v10[6] = v32;
      v10[7] = v33;
      v10[8] = v34;
      v10[9] = v35;
      v42 = v56;
      v10[10] = v57;
      v10[11] = v42;
      v10[12] = v54;
      v10[13] = MaxX - v41;
      sub_2378DE6A4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v14 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2379D64D0(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v64;
      }
      v44 = *(_QWORD *)(v14 + 16);
      v43 = *(_QWORD *)(v14 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_2379D64D0(v43 > 1, v44 + 1, 1);
        v14 = v64;
      }
      *(_QWORD *)(v14 + 16) = v44 + 1;
      sub_2378D0858((uint64_t)v10, v14 + v15 + v44 * v17, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v3 = v50;
    v11 = v49;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + v11) = v14;
  v45 = swift_bridgeObjectRetain();
  v46 = sub_237980DA8(v45, v3);
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)(v3 + v11) = v46;
  return result;
}

uint64_t (*Component.size.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Component() + 28);
  v4 = *(_OWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 24) = v3;
  *(_OWORD *)a1 = v4;
  return sub_237982150;
}

uint64_t sub_237982150(uint64_t result)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = (double *)(*(_QWORD *)(result + 16) + *(int *)(result + 24));
  v2 = *(double *)result;
  v3 = *(double *)(result + 8);
  v4 = *v1;
  v5 = v1[1];
  *v1 = *(double *)result;
  v1[1] = v3;
  if (v2 != v4 || v3 != v5)
    return sub_237981C70(v2 / v4, v3 / v5);
  return result;
}

uint64_t Component.slots.getter()
{
  type metadata accessor for Component();
  return swift_bridgeObjectRetain();
}

uint64_t Component.slots.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Component() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Component.slots.modify())(_QWORD)
{
  type metadata accessor for Component();
  return nullsub_1;
}

uint64_t sub_23798221C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v9);
  v79 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822A10);
  MEMORY[0x24BDAC7A8](v11);
  v72 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v15);
  v73 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568229F8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  v74 = *(_QWORD *)(v20 - 8);
  v75 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v76 = (uint64_t)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CE0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v68 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v65 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v78 = (uint64_t)&v65 - v28;
  v77 = type metadata accessor for Slot();
  v29 = *(_QWORD *)(v77 - 8);
  v30 = MEMORY[0x24BDAC7A8](v77);
  v32 = (char *)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v65 - v33;
  sub_2378D07D8(a1, (uint64_t)&v65 - v33, v35);
  v36 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for Component() + 32));
  v37 = *(_QWORD *)(v36 + 16);
  v81 = v3;
  v80 = a3;
  if (v37)
  {
    v67 = v19;
    v38 = v36 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v39 = *(_QWORD *)(v29 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2378D07D8(v38, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v40 = *((_QWORD *)v32 + 15) == *((_QWORD *)v34 + 15) && *((_QWORD *)v32 + 16) == *((_QWORD *)v34 + 16);
      if (v40 || (sub_237A8840C() & 1) != 0)
        break;
      sub_2378DE6A4((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v38 += v39;
      if (!--v37)
      {
        v41 = 1;
        v42 = v78;
        v19 = v67;
        goto LABEL_12;
      }
    }
    v43 = (uint64_t)v32;
    v42 = v78;
    sub_2378D0858(v43, v78, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
    v41 = 0;
    v19 = v67;
  }
  else
  {
    swift_bridgeObjectRetain();
    v41 = 1;
    v42 = v78;
  }
LABEL_12:
  v44 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v42, v41, 1, v77);
  v45 = v44;
  swift_bridgeObjectRelease();
  sub_2378BBFE0(v42, (uint64_t)v27, &qword_256820CE0);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v47 = v46(v27, 1, v45);
  v48 = (uint64_t)v79;
  if (v47 == 1)
  {
    sub_2378BC024((uint64_t)v27, &qword_256820CE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v19, 1, 1, v75);
LABEL_15:
    v52 = v76;
    sub_237A86588();
    sub_2378BC024((uint64_t)v19, &qword_2568229F8);
    goto LABEL_17;
  }
  v49 = v73;
  sub_2378BBFE0((uint64_t)&v27[*(int *)(v45 + 44)], v73, &qword_256820300);
  sub_237870370(v49, (uint64_t)v19, &qword_2568202F8);
  sub_2378DE6A4((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
  v51 = v74;
  v50 = v75;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v19, 0, 1, v75);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v19, 1, v50) == 1)
    goto LABEL_15;
  v52 = v76;
  sub_237870370((uint64_t)v19, v76, &qword_2568202F8);
LABEL_17:
  sub_23794B8CC(v52, (uint64_t)&v34[*(int *)(v45 + 44)], &qword_2568202F8);
  v53 = (uint64_t)&v34[*(int *)(v45 + 36)];
  v54 = type metadata accessor for Instrument();
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48);
  if (!v55(v53, 1, v54))
  {
    v56 = v68;
    sub_2378BBFE0(v42, v68, &qword_256820CE0);
    if (v46((char *)v56, 1, v45) == 1)
    {
      sub_2378BC024(v56, &qword_256820CE0);
      v58 = (uint64_t)v71;
      v57 = v72;
    }
    else
    {
      sub_2378BBFE0(v56 + *(int *)(v45 + 36), v48, &qword_25681F430);
      sub_2378DE6A4(v56, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
      v59 = v55(v48, 1, v54);
      v58 = (uint64_t)v71;
      if (v59 != 1)
      {
        v61 = v66;
        sub_2378BBFE0(v48, v66, &qword_256820330);
        v62 = v61;
        v57 = v72;
        sub_237870370(v62, v72, &qword_256820328);
        sub_2378DE6A4(v48, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
        v64 = v69;
        v63 = v70;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v57, 0, 1, v70);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63) != 1)
        {
          sub_237870370(v57, v58, &qword_256820328);
          goto LABEL_24;
        }
LABEL_23:
        sub_237A86588();
        sub_2378BC024(v57, &qword_256822A10);
LABEL_24:
        sub_23794B8CC(v58, v53, &qword_256820328);
        goto LABEL_25;
      }
      sub_2378BC024(v48, &qword_25681F430);
      v57 = v72;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v57, 1, 1, v70);
    goto LABEL_23;
  }
LABEL_25:
  sub_2378BC024(v42, &qword_256820CE0);
  sub_2378D07D8((uint64_t)v34, v80, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
  return sub_2378DE6A4((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

uint64_t Component.updatingSize(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  double *v9;
  double v10;
  double v11;

  v4 = v3;
  sub_2378D07D8(v4, a1, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  result = type metadata accessor for Component();
  v9 = (double *)(a1 + *(int *)(result + 28));
  v10 = *v9;
  v11 = v9[1];
  *v9 = a2;
  v9[1] = a3;
  if (v10 != a2 || v11 != a3)
    return sub_237981C70(a2 / v10, a3 / v11);
  return result;
}

uint64_t sub_237982970()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237982994 + 4 * byte_237A9ACCA[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_237982994()
{
  return 1701869940;
}

uint64_t sub_2379829A4()
{
  return 1701667182;
}

uint64_t sub_2379829B4()
{
  return 1702521203;
}

uint64_t sub_2379829C4()
{
  return 0x73746F6C73;
}

uint64_t sub_2379829D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237983F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379829FC()
{
  sub_237983550();
  return sub_237A88718();
}

uint64_t sub_237982A24()
{
  sub_237983550();
  return sub_237A88724();
}

uint64_t Component.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  char v28;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823F98);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for Component();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v11);
  sub_237983550();
  v12 = v26;
  sub_237A88688();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
  v13 = v5;
  v14 = (uint64_t)v10;
  LOBYTE(v27) = 0;
  sub_237983654(&qword_256823FA8, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v16 = (uint64_t)v23;
  v15 = v24;
  sub_237A881F0();
  sub_237870370(v16, v14, qword_2568207C8);
  v28 = 1;
  sub_237983594();
  sub_237A881F0();
  *(_BYTE *)(v14 + v8[5]) = v27;
  LOBYTE(v27) = 2;
  v17 = sub_237A881B4();
  v18 = (uint64_t *)(v14 + v8[6]);
  *v18 = v17;
  v18[1] = v19;
  type metadata accessor for CGSize(0);
  v28 = 3;
  sub_23786FAA0(&qword_256823310, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
  sub_237A881F0();
  *(_OWORD *)(v14 + v8[7]) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820AB0);
  v28 = 4;
  sub_2379835D8();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v15);
  *(_QWORD *)(v14 + v8[8]) = v27;
  sub_2378D07D8(v14, v22, (uint64_t (*)(_QWORD))type metadata accessor for Component);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
  return sub_2378DE6A4(v14, (uint64_t (*)(_QWORD))type metadata accessor for Component);
}

uint64_t sub_237982DD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Component.init(from:)(a1, a2);
}

uint64_t sub_237982DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2378BBFE0(v1, a1, qword_2568207C8);
}

uint64_t Component.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _BYTE v55[512];
  _BYTE v56[512];
  _BYTE v57[512];
  _OWORD v58[32];
  _BYTE v59[24];
  uint64_t v60;
  char *v61;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Instrument();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v51 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v45 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823FC8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237983550();
  sub_237A886B8();
  LOBYTE(v58[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  sub_237983654(&qword_256823FD0, (uint64_t)&protocol conformance descriptor for <> TaggedValue<A, B>);
  v14 = (uint64_t)v61;
  sub_237A882B0();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v61 = v9;
  v16 = (int *)type metadata accessor for Component();
  LOBYTE(v58[0]) = *(_BYTE *)(v2 + v16[5]);
  v57[0] = 1;
  sub_2379836F8();
  sub_237A882B0();
  v17 = v10;
  LOBYTE(v58[0]) = 2;
  sub_237A88274();
  v58[0] = *(_OWORD *)(v2 + v16[7]);
  v57[0] = 3;
  type metadata accessor for CGSize(0);
  sub_23786FAA0(&qword_256823300, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
  sub_237A882B0();
  LOBYTE(v58[0]) = 4;
  sub_237A88214();
  v18 = *(_QWORD *)(v2 + v16[8]);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v45 = v13;
    v46 = v17;
    v48 = v11;
    v20 = type metadata accessor for Slot();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v49 = *(_QWORD *)(v21 + 72);
    v50 = v20;
    v47 = v18;
    swift_bridgeObjectRetain();
    v23 = v52;
    v24 = (uint64_t)v53;
    v25 = v54;
    do
    {
      sub_2378BBFE0(v22 + *(int *)(v50 + 36), v24, &qword_25681F430);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, v23) == 1)
      {
        sub_2378BC024(v24, &qword_25681F430);
      }
      else
      {
        v26 = (uint64_t)v61;
        sub_2378D0858(v24, (uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
        if (byte_2568219B8)
        {
          if (byte_2568219B8 != 1)
          {
            sub_23788F46C(&v61[*(int *)(v23 + 20)], v57);
            sub_23788F46C(v57, v58);
            switch(sub_2378A1BDC((uint64_t)v58))
            {
              case 1u:
                v43 = *(_BYTE *)(sub_2378A1BF8((uint64_t)v58) + 496);
LABEL_36:
                sub_2378DE6A4((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                if ((v43 & 1) == 0)
                  goto LABEL_30;
                goto LABEL_29;
              case 2u:
                v44 = ~*(_DWORD *)(sub_2378A1BF8((uint64_t)v58) + 40) & 0xFELL;
                goto LABEL_41;
              case 3u:
              case 4u:
              case 5u:
                sub_2378A1BF8((uint64_t)v58);
                v29 = (uint64_t)v61;
                goto LABEL_28;
              case 8u:
                v44 = *(_QWORD *)(sub_2378A1BF8((uint64_t)v58) + 8);
LABEL_41:
                sub_2378DE6A4((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                if (!v44)
                  goto LABEL_30;
                goto LABEL_29;
              default:
                sub_2378DE6A4((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                goto LABEL_31;
            }
          }
          v27 = (uint64_t)v61;
          sub_23788F46C(&v61[*(int *)(v23 + 20)], v57);
          sub_23788F46C(v57, v58);
          switch(sub_2378A1BDC((uint64_t)v58))
          {
            case 1u:
              v30 = sub_2378A1BF8((uint64_t)v58);
              v31 = v27;
              v32 = *(_BYTE *)(v30 + 496);
              v28 = v51;
              sub_2378D07D8(v31, v51, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              if ((v32 & 1) != 0)
                goto LABEL_20;
              goto LABEL_27;
            case 2u:
              v33 = ~*(_DWORD *)(sub_2378A1BF8((uint64_t)v58) + 40);
              v34 = v27;
              v35 = v33 & 0xFE;
              goto LABEL_19;
            case 3u:
            case 4u:
            case 5u:
              sub_2378A1BF8((uint64_t)v58);
              v28 = v51;
              sub_2378D07D8(v27, v51, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              goto LABEL_20;
            case 8u:
              v36 = sub_2378A1BF8((uint64_t)v58);
              v37 = v27;
              v35 = *(_QWORD *)(v36 + 8);
              v34 = v37;
LABEL_19:
              v28 = v51;
              sub_2378D07D8(v34, v51, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              if (!v35)
                goto LABEL_27;
LABEL_20:
              sub_23788F46C((const void *)(v28 + *(int *)(v23 + 20)), v55);
              sub_23788F46C(v55, v56);
              v38 = sub_2378A1BDC((uint64_t)v56);
              if (v38 == 3)
              {
                v42 = (uint64_t *)sub_2378A1BF8((uint64_t)v56);
                v40 = *v42;
                v41 = v42[1];
              }
              else
              {
                if (v38 != 4)
                {
                  sub_2378DE6A4(v28, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                  sub_2378DE6A4((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                  goto LABEL_30;
                }
                v39 = sub_2378A1BF8((uint64_t)v56);
                v40 = *(_QWORD *)(v39 + 8);
                v41 = *(_QWORD *)(v39 + 16);
              }
              if (v40 != 0x7765695673616461 || v41 != 0xE800000000000000)
              {
                v43 = sub_237A8840C();
                sub_2378DE6A4(v51, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
                goto LABEL_36;
              }
              v28 = v51;
LABEL_27:
              sub_2378DE6A4(v28, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              v29 = (uint64_t)v61;
              break;
            default:
              v28 = v51;
              sub_2378D07D8(v27, v51, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
              goto LABEL_27;
          }
        }
        else
        {
          v29 = v26;
        }
LABEL_28:
        sub_2378DE6A4(v29, (uint64_t (*)(_QWORD))type metadata accessor for Instrument);
      }
LABEL_29:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, v60);
      sub_23786FAA0(&qword_256823FE0, (uint64_t (*)(uint64_t))type metadata accessor for Slot, (uint64_t)&protocol conformance descriptor for Slot);
      sub_237A88304();
      v23 = v52;
      v24 = (uint64_t)v53;
LABEL_30:
      v25 = v54;
LABEL_31:
      v22 += v49;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    v11 = v48;
    v13 = v45;
    v17 = v46;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v59);
}

uint64_t sub_23798353C(_QWORD *a1)
{
  return Component.encode(to:)(a1);
}

unint64_t sub_237983550()
{
  unint64_t result;

  result = qword_256823FA0;
  if (!qword_256823FA0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AFD4, &type metadata for Component.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256823FA0);
  }
  return result;
}

unint64_t sub_237983594()
{
  unint64_t result;

  result = qword_256823FB0;
  if (!qword_256823FB0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ComponentType, &type metadata for ComponentType);
    atomic_store(result, (unint64_t *)&qword_256823FB0);
  }
  return result;
}

unint64_t sub_2379835D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256823FB8;
  if (!qword_256823FB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820AB0);
    v2 = sub_23786FAA0(&qword_256823FC0, (uint64_t (*)(uint64_t))type metadata accessor for Slot, (uint64_t)&protocol conformance descriptor for Slot);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256823FB8);
  }
  return result;
}

uint64_t sub_237983654(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2568207C8);
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    v7[0] = sub_23786FAA0(&qword_256820318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v7[1] = sub_23786FAA0(&qword_256820320, v6, MEMORY[0x24BDCEA70]);
    result = MEMORY[0x23B81FA98](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379836F8()
{
  unint64_t result;

  result = qword_256823FD8;
  if (!qword_256823FD8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ComponentType, &type metadata for ComponentType);
    atomic_store(result, (unint64_t *)&qword_256823FD8);
  }
  return result;
}

unint64_t sub_237983740()
{
  unint64_t result;

  result = qword_256823FE8;
  if (!qword_256823FE8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ComponentType, &type metadata for ComponentType);
    atomic_store(result, (unint64_t *)&qword_256823FE8);
  }
  return result;
}

__n128 sub_237983788@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *(__n128 *)(a1 + *(int *)(type metadata accessor for Component() + 28));
  *a2 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for ComponentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23798380C + 4 * byte_237A9ACE4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237983840 + 4 * byte_237A9ACDF[v4]))();
}

uint64_t sub_237983840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237983848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237983850);
  return result;
}

uint64_t sub_23798385C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237983864);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237983868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237983870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComponentType()
{
  return &type metadata for ComponentType;
}

_QWORD *initializeBufferWithCopyOfBuffer for Component(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Component(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Component()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237983BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Component()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237983C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_2568207C8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_237983D08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A86594();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Component.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_237983DE8 + 4 * byte_237A9ACEE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_237983E1C + 4 * byte_237A9ACE9[v4]))();
}

uint64_t sub_237983E1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237983E24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237983E2CLL);
  return result;
}

uint64_t sub_237983E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237983E40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_237983E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237983E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Component.CodingKeys()
{
  return &type metadata for Component.CodingKeys;
}

unint64_t sub_237983E6C()
{
  unint64_t result;

  result = qword_256824090;
  if (!qword_256824090)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AFAC, &type metadata for Component.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824090);
  }
  return result;
}

unint64_t sub_237983EB4()
{
  unint64_t result;

  result = qword_256824098;
  if (!qword_256824098)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AF1C, &type metadata for Component.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824098);
  }
  return result;
}

unint64_t sub_237983EFC()
{
  unint64_t result;

  result = qword_2568240A0;
  if (!qword_2568240A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9AF44, &type metadata for Component.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568240A0);
  }
  return result;
}

uint64_t sub_237983F40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746F6C73 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_23798410C()
{
  unint64_t result;

  result = qword_2568240A8;
  if (!qword_2568240A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ComponentType, &type metadata for ComponentType);
    atomic_store(result, (unint64_t *)&qword_2568240A8);
  }
  return result;
}

uint64_t sub_237984150(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379841AC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379841E0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_237984224())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t LuaEncoder.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t LuaEncoder.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t sub_2379842C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, uint64_t);
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _QWORD v21[2];
  _QWORD v22[10];

  v22[9] = a3;
  v4 = sub_237A87848();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 16);
  v9 = type metadata accessor for _LuaEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v10[4] = 0;
  v10[2] = MEMORY[0x24BEE4AF8];
  v10[3] = v8;
  v10[5] = 0;
  swift_bridgeObjectRetain();
  v22[3] = v9;
  v22[4] = sub_2379849D4((unint64_t *)&qword_256822EE0, v11, (uint64_t (*)(uint64_t))type metadata accessor for _LuaEncoder, (uint64_t)&unk_237A9B0DC);
  v22[0] = v10;
  swift_retain();
  v12 = v21[1];
  sub_237A876BC();
  if (v12)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v22);
    return v5;
  }
  v13 = v7;
  v14 = v5;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v22);
  if (v10[4])
  {
    v15 = v10[5];
    ObjectType = swift_getObjectType();
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    swift_unknownObjectRetain();
    v17(ObjectType, v15);
    swift_unknownObjectRelease();
  }
  sub_237A8783C();
  v5 = sub_237A87824();
  v19 = v18;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v13, v4);
  if (v19 >> 60 != 15)
  {
    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _LuaEncoder()
{
  return objc_opt_self();
}

uint64_t LuaEncoder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LuaEncoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_237984528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = sub_2379842C4(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_237984554@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LuaEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for LuaEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LuaEncoder.userInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of LuaEncoder.userInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of LuaEncoder.userInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LuaEncoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of LuaEncoder.encode<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_237984614()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_237984648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (v4[4])
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v5 = v4;
    v6 = _s14KeyedContainerCMa(0, a2, a3, a4);
    v7 = v5[2];
    v8 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5[4] = sub_237955578(v7, v8);
    v5[5] = &off_250976360;
    swift_retain();
    swift_unknownObjectRelease();
    MEMORY[0x23B81FA98](&unk_237A98F20, v6);
    return sub_237A882C8();
  }
  return result;
}

uint64_t sub_23798474C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  if (v1[4])
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v3 = v1[2];
    v4 = v1[3];
    v5 = _s16UnkeyedContainerCMa();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = MEMORY[0x24BEE4AF8];
    v6[3] = v3;
    v6[4] = v4;
    v1[4] = v6;
    v1[5] = &off_25097DC18;
    a1[3] = v5;
    a1[4] = sub_2379849D4(&qword_256822EE8, 255, (uint64_t (*)(uint64_t))_s16UnkeyedContainerCMa, (uint64_t)&unk_237AA3564);
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_237984858@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (v1[4])
  {
    result = sub_237A880AC();
    __break(1u);
  }
  else
  {
    v3 = v1[2];
    v4 = v1[3];
    v5 = _s20SingleValueContainerCMa();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0xE000000000000000;
    *(_BYTE *)(v6 + 32) = 1;
    *(_QWORD *)(v6 + 40) = v3;
    *(_QWORD *)(v6 + 48) = v4;
    v1[4] = v6;
    v1[5] = &off_25097A0B8;
    a1[3] = v5;
    a1[4] = sub_2379849D4(&qword_256822EF0, 255, (uint64_t (*)(uint64_t))_s20SingleValueContainerCMa, (uint64_t)&unk_237A9E958);
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_237984968()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_237984974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237984648(a1, a2, a3, a4);
}

uint64_t sub_237984994@<X0>(_QWORD *a1@<X8>)
{
  return sub_23798474C(a1);
}

uint64_t sub_2379849B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_237984858(a1);
}

uint64_t sub_2379849D4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B81FA98](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

double OutsideTemperature.ViewModel.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double OutsideTemperature.ViewModel.bounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t OutsideTemperature.ViewModel.gradient.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OutsideTemperature.ViewModel.init(value:bounds:gradient:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(_QWORD *)(a2 + 24) = result;
  return result;
}

uint64_t OutsideTemperature.ViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A88604();
  sub_237896D64();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87440();
  return swift_bridgeObjectRelease();
}

uint64_t OutsideTemperature.ViewModel.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A88604();
  sub_237896D64();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87440();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_237984B8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A88604();
  sub_237896D64();
  if (!v1)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87440();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237984C2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_237A885D4();
  sub_237A88604();
  sub_237896D64();
  sub_237A885EC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_237A87440();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t OutsideTemperature.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OutsideTemperature.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;

  v29 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824238);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824248);
  MEMORY[0x24BDAC7A8](v27);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824250);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(double *)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v15 = *(double *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  v43 = v15;
  v44 = v14;
  v42 = v13;
  v38 = v14;
  v39 = v13;
  v40 = v15;
  v41 = v16;
  v34 = v14;
  v35 = v13;
  v36 = v15;
  v37 = v16;
  v30 = v14;
  v31 = v13;
  v32 = v15;
  v33 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256824258);
  sub_2378B70D4(&qword_256824260, &qword_256824258, MEMORY[0x24BDF41A8]);
  sub_237928A74();
  sub_237A87290();
  v42 = v16;
  sub_2378B70D4(&qword_256824268, &qword_256824238, MEMORY[0x24BDF3EE8]);
  sub_23796CD58();
  sub_237A8708C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  if (v15 * 0.75 >= v14)
    v17 = sub_237A8720C();
  else
    v17 = sub_237A871D0();
  v18 = v17;
  KeyPath = swift_getKeyPath();
  v42 = v18;
  swift_retain();
  v20 = sub_237A86888();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
  swift_release();
  v21 = (uint64_t *)&v10[*(int *)(v27 + 36)];
  *v21 = KeyPath;
  v21[1] = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = sub_237A87218();
  v23 = swift_getKeyPath();
  sub_2378BBFE0((uint64_t)v10, (uint64_t)v12, &qword_256824248);
  v24 = (uint64_t *)&v12[*(int *)(v28 + 36)];
  *v24 = v23;
  v24[1] = v22;
  sub_2378BC024((uint64_t)v10, &qword_256824248);
  return sub_237870370((uint64_t)v12, v29, &qword_256824250);
}

uint64_t sub_237985084()
{
  sub_237A86C3C();
  return sub_237A872F0();
}

uint64_t sub_2379850E4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v4);
  sub_237A86C24();
  result = sub_237A86C18();
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_237A86C00();
    sub_237A86C18();
    sub_237A86C48();
    result = sub_237A87050();
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v7 & 1;
    *(_QWORD *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_237985220@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v4);
  sub_237A86C24();
  result = sub_237A86C18();
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_237A86C00();
    sub_237A86C18();
    sub_237A86C48();
    result = sub_237A87050();
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v7 & 1;
    *(_QWORD *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_23798535C@<X0>(uint64_t a1@<X8>, double a2@<D2>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v4);
  sub_237A86C24();
  result = sub_237A86C18();
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_237A86C00();
    sub_237A86C18();
    sub_237A86C48();
    result = sub_237A87050();
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v7 & 1;
    *(_QWORD *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_23798549C()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  char v5;
  id v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;
  __int128 v13;

  v1 = v0;
  v13 = *(_OWORD *)v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  sub_2378BBC40((uint64_t)&v13);
  if (!v12)
  {
    sub_2378BC024((uint64_t)v11, &qword_256820020);
    goto LABEL_9;
  }
  sub_23787076C((uint64_t)v11, (uint64_t)v8);
  sub_2378BC024((uint64_t)v11, &qword_256820020);
  v2 = v9;
  v3 = v10;
  __swift_project_boxed_opaque_existential_2Tm(v8, v9);
  v4 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3));
  LOBYTE(v2) = v5;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v8);
  if ((v2 & 1) != 0)
  {
LABEL_9:
    if (v1[2] <= 0.0 && v1[3] >= 0.0)
      return;
    goto LABEL_11;
  }
  if (v1[2] > v4 || v1[3] < v4)
  {
LABEL_11:
    sub_237A87D4C();
    if (qword_25681E308 != -1)
      swift_once();
    swift_beginAccess();
    v7 = (id)qword_2568231A0;
    sub_237A86600();

  }
}

uint64_t sub_237985688@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  double *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  unsigned __int8 v55;
  uint64_t v56;
  __int128 v57;

  v2 = v1;
  v53 = a1;
  v3 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v3);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2568242E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568242E8);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568242F0);
  MEMORY[0x24BDAC7A8](v47);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568242F8);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(_OWORD *)v1;
  v13 = v1[2];
  v12 = v1[3];
  v14 = v4[20];
  v15 = &v6[v4[19]];
  v46 = v4[21];
  type metadata accessor for InstrumentDataSource();
  sub_23790FEE4();
  swift_retain_n();
  *(_QWORD *)v6 = sub_237A86984();
  *((_QWORD *)v6 + 1) = v16;
  *((double *)v6 + 2) = v13;
  *((double *)v6 + 3) = v12;
  sub_237A86C3C();
  sub_237A872F0();
  sub_237985BF8((uint64_t)&v54);
  v17 = v55;
  v18 = v56;
  *(_OWORD *)v15 = v54;
  *((_QWORD *)v15 + 2) = v17;
  *((_QWORD *)v15 + 3) = v18;
  sub_237A86C24();
  result = sub_237A86C18();
  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v20 = (uint64_t *)&v6[v14];
  *(_QWORD *)&v54 = (uint64_t)v13;
  sub_237A86C00();
  sub_237A86C18();
  sub_237A86C48();
  *v20 = sub_237A87050();
  v20[1] = v21;
  v20[2] = v22 & 1;
  v20[3] = v23;
  sub_237A86C24();
  result = sub_237A86C18();
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v24 = (uint64_t *)&v6[v46];
  *(_QWORD *)&v54 = (uint64_t)v12;
  sub_237A86C00();
  sub_237A86C18();
  sub_237A86C48();
  v25 = sub_237A87050();
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  sub_2378BBC40((uint64_t)&v57);
  *v24 = v25;
  v24[1] = v27;
  v24[2] = v31;
  v24[3] = v29;
  *(double *)&v54 = v2[4];
  sub_2378B70D4(&qword_256824300, &qword_2568242E0, (uint64_t)&unk_237A94B90);
  sub_23796CD58();
  v32 = v50;
  sub_237A8708C();
  sub_2378BC024((uint64_t)v6, &qword_2568242E0);
  sub_23798549C();
  if (v12 * 0.75 >= v33)
    v34 = sub_237A8720C();
  else
    v34 = sub_237A871D0();
  v35 = v34;
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v54 = v35;
  swift_retain();
  v37 = sub_237A86888();
  v39 = v51;
  v38 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v10, v32, v52);
  swift_release();
  v40 = (uint64_t *)&v10[*(int *)(v47 + 36)];
  *v40 = KeyPath;
  v40[1] = v37;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v38);
  v41 = sub_237A87218();
  v42 = swift_getKeyPath();
  v43 = v49;
  sub_2378BBFE0((uint64_t)v10, v49, &qword_2568242F0);
  v44 = (uint64_t *)(v43 + *(int *)(v48 + 36));
  *v44 = v42;
  v44[1] = v41;
  sub_2378BC024((uint64_t)v10, &qword_2568242F0);
  return sub_237870370(v43, v53, &qword_2568242F8);
}

void sub_237985BF8(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = sub_237A86C30();
  MEMORY[0x24BDAC7A8](v2);
  sub_237A86C24();
  sub_237A86C18();
  sub_23798549C();
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    sub_237A86C00();
    sub_237A86C18();
    sub_237A86C48();
    *(_QWORD *)a1 = sub_237A87050();
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = v5 & 1;
    *(_QWORD *)(a1 + 24) = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_237985D44@<X0>(uint64_t a1@<X8>)
{
  return sub_237985688(a1);
}

uint64_t sub_237985D7C()
{
  if (qword_25681E190 != -1)
    swift_once();
  return sub_237A10D28(off_256822AB0, (uint64_t)off_256822AB0 + *(_QWORD *)(*(_QWORD *)off_256822AB0 + 152), (uint64_t)off_256822AB0 + *(_QWORD *)(*(_QWORD *)off_256822AB0 + 112));
}

uint64_t static OutsideTemperatureDataSource_Previews.previews.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[10];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824270);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86900();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_237A86C6C();
  sub_237985FA4((uint64_t)v23);
  v10 = v23[0];
  v9 = v23[1];
  v11 = v23[2];
  v12 = v23[3];
  v13 = v23[4];
  v21 = v23[5];
  v14 = v23[6];
  v15 = v23[7];
  v16 = v23[8];
  v17 = v23[9];
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDC6F88], v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824278);
  sub_2378BBFE0((uint64_t)v4, a1 + *(int *)(v18 + 36), &qword_256824270);
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  v19 = v21;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v19;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2378BC024((uint64_t)v4, &qword_256824270);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237985FA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822D10);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237986CE4();
  v5 = type metadata accessor for InstrumentDataSource();
  sub_23790FEE4();
  v25 = v5;
  sub_237A867EC();
  sub_237986CEC();
  if (qword_25681E190 != -1)
    swift_once();
  sub_2378BBFE0((uint64_t)off_256822AB0 + *(_QWORD *)(*(_QWORD *)off_256822AB0 + 152), (uint64_t)v4, &qword_256822D10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568214E8);
  sub_237A863FC();
  v7 = v6;
  result = sub_237A863FC();
  if (v7 > v9)
  {
    __break(1u);
  }
  else
  {
    v10 = v9;
    sub_2378BC024((uint64_t)v4, &qword_256822D10);
    v11 = sub_237A86984();
    v23 = v12;
    v24 = v11;
    sub_237986CE4();
    v22[1] = sub_237A867EC();
    sub_237986CEC();
    sub_2378BBFE0((uint64_t)off_256822AB0 + *(_QWORD *)(*(_QWORD *)off_256822AB0 + 152), (uint64_t)v4, &qword_256822D10);
    sub_237A863FC();
    v14 = v13;
    result = sub_237A863FC();
    if (v14 <= v15)
    {
      v16 = v15;
      sub_2378BC024((uint64_t)v4, &qword_256822D10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256823DA0);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_237A99CE0;
      *(_QWORD *)(v17 + 32) = sub_237A871DC();
      *(_QWORD *)(v17 + 40) = sub_237A8720C();
      *(_QWORD *)(v17 + 48) = sub_237A8720C();
      *(_QWORD *)(v17 + 56) = sub_237A87224();
      *(_QWORD *)(v17 + 64) = sub_237A871D0();
      v26 = v17;
      sub_237A87AAC();
      v18 = MEMORY[0x23B81E0AC](v26);
      v19 = sub_237A86984();
      v20 = v23;
      *(_QWORD *)a1 = v24;
      *(_QWORD *)(a1 + 8) = v20;
      *(double *)(a1 + 16) = v7;
      *(double *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = v19;
      *(_QWORD *)(a1 + 48) = v21;
      *(double *)(a1 + 56) = v14;
      *(double *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v18;
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2379862A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[10];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824270);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86900();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_237A86C6C();
  sub_237985FA4((uint64_t)v23);
  v10 = v23[0];
  v9 = v23[1];
  v11 = v23[2];
  v12 = v23[3];
  v13 = v23[4];
  v21 = v23[5];
  v14 = v23[6];
  v15 = v23[7];
  v16 = v23[8];
  v17 = v23[9];
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDC6F88], v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824278);
  sub_2378BBFE0((uint64_t)v4, a1 + *(int *)(v18 + 36), &qword_256824270);
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  v19 = v21;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v19;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2378BC024((uint64_t)v4, &qword_256824270);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237986474()
{
  sub_237986CA0();
  return sub_237A869D8();
}

uint64_t sub_2379864AC()
{
  sub_237986CA0();
  return sub_237A869CC();
}

uint64_t sub_2379864E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86A8C();
  *a1 = result;
  return result;
}

uint64_t sub_23798650C()
{
  swift_retain();
  return sub_237A86A98();
}

BOOL _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = swift_bridgeObjectRetain();
      v7 = MEMORY[0x23B81E094](v6, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return !v5;
}

uint64_t sub_2379865C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2379850E4(a1, *(double *)(v1 + 16));
}

uint64_t sub_2379865D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237985220(a1, *(double *)(v1 + 24));
}

uint64_t sub_2379865E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23798535C(a1, *(double *)(v1 + 32));
}

uint64_t sub_2379865F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B1C();
  *a1 = result;
  return result;
}

uint64_t sub_237986620()
{
  swift_retain();
  return sub_237A86B28();
}

uint64_t sub_237986648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86A8C();
  *a1 = result;
  return result;
}

uint64_t sub_237986670()
{
  swift_retain();
  return sub_237A86A98();
}

unint64_t sub_23798669C()
{
  unint64_t result;

  result = qword_256824280;
  if (!qword_256824280)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for OutsideTemperature.ViewModel, &type metadata for OutsideTemperature.ViewModel);
    atomic_store(result, (unint64_t *)&qword_256824280);
  }
  return result;
}

uint64_t sub_2379866E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2379866F4()
{
  unint64_t result;

  result = qword_256824288;
  if (!qword_256824288)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for OutsideTemperatureDataSource_Previews, &type metadata for OutsideTemperatureDataSource_Previews);
    atomic_store(result, (unint64_t *)&qword_256824288);
  }
  return result;
}

uint64_t sub_237986738()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OutsideTemperature()
{
  return &type metadata for OutsideTemperature;
}

uint64_t destroy for OutsideTemperature.ViewModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperature.ViewModel()
{
  return &type metadata for OutsideTemperature.ViewModel;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataSource_Previews()
{
  return &type metadata for OutsideTemperatureDataSource_Previews;
}

uint64_t sub_237986910()
{
  return sub_237986D20(&qword_256824290, &qword_256824250, (uint64_t (*)(void))sub_23798693C);
}

unint64_t sub_23798693C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256824298;
  if (!qword_256824298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824248);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824238);
    v2[3] = &type metadata for InstrumentCircularStyle;
    v2[4] = sub_2378B70D4(&qword_256824268, &qword_256824238, MEMORY[0x24BDF3EE8]);
    v2[5] = sub_23796CD58();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2378B70D4(&qword_2568242A0, &qword_2568242A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824298);
  }
  return result;
}

unint64_t sub_237986A20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568242C0;
  if (!qword_2568242C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824278);
    v2[0] = sub_2378B70D4(&qword_2568242C8, &qword_2568242D0, MEMORY[0x24BDF4700]);
    v2[1] = sub_2378B70D4(&qword_2568242D8, &qword_256824270, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568242C0);
  }
  return result;
}

uint64_t destroy for OutsideTemperatureDataSource()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OutsideTemperatureDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OutsideTemperatureDataSource(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OutsideTemperatureDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OutsideTemperatureDataSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OutsideTemperatureDataSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataSource()
{
  return &type metadata for OutsideTemperatureDataSource;
}

uint64_t sub_237986C88()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237986CA0()
{
  unint64_t result;

  result = qword_256824308;
  if (!qword_256824308)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for OutsideTemperatureDataSource_Previews, &type metadata for OutsideTemperatureDataSource_Previews);
    atomic_store(result, (unint64_t *)&qword_256824308);
  }
  return result;
}

uint64_t sub_237986CE4()
{
  return swift_retain();
}

uint64_t sub_237986CEC()
{
  return swift_release();
}

uint64_t sub_237986CF4()
{
  return sub_237986D20(&qword_256824310, &qword_2568242F8, (uint64_t (*)(void))sub_237986DA4);
}

uint64_t sub_237986D20(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_2378B70D4(&qword_2568242B0, &qword_2568242B8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237986DA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256824318;
  if (!qword_256824318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568242F0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568242E0);
    v2[3] = &type metadata for InstrumentCircularStyle;
    v2[4] = sub_2378B70D4(&qword_256824300, &qword_2568242E0, (uint64_t)&unk_237A94B90);
    v2[5] = sub_23796CD58();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2378B70D4(&qword_2568242A0, &qword_2568242A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824318);
  }
  return result;
}

CarPlayAssetUI::Texture::ContentMode_optional __swiftcall Texture.ContentMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (CarPlayAssetUI::Texture::ContentMode_optional)rawValue;
}

uint64_t Texture.ContentMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_237986EAC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_237986ECC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_237986ED8()
{
  sub_2379887F4();
  return sub_237A87A40();
}

uint64_t sub_237986F34()
{
  sub_2379887F4();
  return sub_237A879F8();
}

void *Texture.imageAsset.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_23787007C(v2, v3, v4, v5, v6);
}

__n128 Texture.imageAsset.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  sub_2378702CC(*(void **)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Texture.imageAsset.modify())()
{
  return nullsub_1;
}

void Texture.contentMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *Texture.contentMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*Texture.contentMode.modify())()
{
  return nullsub_1;
}

uint64_t Texture.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Texture.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*Texture.name.modify())()
{
  return nullsub_1;
}

__n128 Texture.init(imageAsset:contentMode:name:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  __int128 v6;
  __n128 result;

  v5 = *a2;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v6;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a5 + 32) = result;
  *(_BYTE *)(a5 + 48) = v5;
  *(_QWORD *)(a5 + 56) = a3;
  *(_QWORD *)(a5 + 64) = a4;
  return result;
}

uint64_t Texture.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if ((~*((_DWORD *)v0 + 8) & 0xFELL) == 0)
    return 0x546E776F6E6B6E55;
  if ((v0[4] & 0x80) != 0)
    v1 = v0[1];
  else
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Texture.assetType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void Texture.destination.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t Texture.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(v7 + 56) = &type metadata for ImageAsset;
    *(_QWORD *)(v7 + 64) = &protocol witness table for ImageAsset;
    v8 = swift_allocObject();
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v1;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v4;
    *(_BYTE *)(v8 + 48) = v5;
    *(_QWORD *)(v8 + 56) = v6;
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  sub_23787007C(v2, v1, v3, v4, v5);
  return v7;
}

uint64_t sub_237987218()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void Texture.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;

  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
    ImageAsset.restore(from:)(a1);
}

uint64_t sub_237987268()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4D746E65746E6F63;
  if (*v0 != 1)
    v1 = 1701667182;
  if (*v0)
    return v1;
  else
    return 0x7373416567616D69;
}

uint64_t sub_2379872C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23798868C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379872EC()
{
  sub_2379874E0();
  return sub_237A88718();
}

uint64_t sub_237987314()
{
  sub_2379874E0();
  return sub_237A88724();
}

uint64_t Texture.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824320);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v14 = v1[1];
  v15 = v7;
  v8 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v21 = *((unsigned __int8 *)v1 + 48);
  v10 = *((_QWORD *)v1 + 7);
  v13[0] = *((_QWORD *)v1 + 8);
  v13[1] = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379874E0();
  sub_237A886B8();
  v17 = v15;
  v18 = v14;
  v19 = v8;
  v20 = v9;
  v22 = 0;
  sub_2378888DC();
  v11 = v16;
  sub_237A88268();
  if (!v11)
  {
    LOBYTE(v17) = v21;
    v22 = 1;
    sub_237987524();
    sub_237A882B0();
    LOBYTE(v17) = 2;
    sub_237A8822C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2379874E0()
{
  unint64_t result;

  result = qword_256824328;
  if (!qword_256824328)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9B6A8, &type metadata for Texture.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824328);
  }
  return result;
}

unint64_t sub_237987524()
{
  unint64_t result;

  result = qword_256824330;
  if (!qword_256824330)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture.ContentMode, &type metadata for Texture.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256824330);
  }
  return result;
}

uint64_t Texture.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824338);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379874E0();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702CC(0, 0, 0, 0, 254);
  }
  else
  {
    v34 = 0;
    sub_237888A0C();
    sub_237A881A8();
    v23 = a2;
    v10 = v27;
    v11 = v28;
    v12 = v31;
    v34 = 1;
    v24 = v29;
    v25 = v30;
    v26 = v32;
    sub_23787007C(v27, v28, v29, v30, v31);
    sub_237987840();
    sub_237A881F0();
    v33 = v27;
    LOBYTE(v27) = 2;
    v13 = sub_237A8816C();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = v24;
    v17 = v25;
    v19 = v26;
    sub_23787007C(v10, v11, v24, v25, v12);
    sub_2378702CC(v10, v11, v18, v17, v12);
    v20 = v23;
    *v23 = v10;
    v20[1] = v11;
    v20[2] = v18;
    v20[3] = v17;
    v20[4] = v12;
    v20[5] = v19;
    *((_BYTE *)v20 + 48) = v33;
    v20[7] = v22;
    v20[8] = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2378702CC(v10, v11, v18, v17, v12);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_237987840()
{
  unint64_t result;

  result = qword_256824340;
  if (!qword_256824340)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture.ContentMode, &type metadata for Texture.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256824340);
  }
  return result;
}

uint64_t sub_237987884()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681F208);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(v7 + 56) = &type metadata for ImageAsset;
    *(_QWORD *)(v7 + 64) = &protocol witness table for ImageAsset;
    v8 = swift_allocObject();
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v1;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v4;
    *(_BYTE *)(v8 + 48) = v5;
    *(_QWORD *)(v8 + 56) = v6;
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  sub_23787007C(v2, v1, v3, v4, v5);
  return v7;
}

void sub_23798795C(_QWORD *a1)
{
  uint64_t v1;

  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
    ImageAsset.restore(from:)(a1);
}

uint64_t sub_237987980@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Texture.init(from:)(a1, a2);
}

uint64_t sub_237987994(_QWORD *a1)
{
  return Texture.encode(to:)(a1);
}

uint64_t Texture.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 64);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
  {
    v6 = *(void **)(v1 + 16);
    v5 = *(_QWORD *)(v1 + 24);
    v7 = *(void **)v1;
    v8 = *(_QWORD *)(v1 + 8);
    sub_237A885EC();
    sub_237870090(v7, v8, v6, v5, v3);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_237A885E0();
    sub_2378702CC(v7, v8, v6, v5, v3);
  }
  else
  {
    sub_237A885EC();
  }
  sub_237A885E0();
  if (!v4)
    return sub_237A885EC();
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t Texture.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE v9[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = ~*(_DWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 64);
  sub_237A885D4();
  sub_237A885EC();
  if ((v6 & 0xFE) != 0)
  {
    sub_237870090(v1, v2, v3, v4, v5);
    ImageAsset.ImageType.hash(into:)((uint64_t)v9);
    sub_237A885E0();
    sub_2378702CC(v1, v2, v3, v4, v5);
  }
  sub_237A885E0();
  sub_237A885EC();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_237987C30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE v9[72];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = ~*(_DWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 64);
  sub_237A885D4();
  sub_237A885EC();
  if ((v6 & 0xFE) != 0)
  {
    sub_237870090(v1, v2, v3, v4, v5);
    ImageAsset.ImageType.hash(into:)((uint64_t)v9);
    sub_237A885E0();
    sub_2378702CC(v1, v2, v3, v4, v5);
  }
  sub_237A885E0();
  sub_237A885EC();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

BOOL _s14CarPlayAssetUI7TextureV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char v29;
  _BOOL8 result;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];
  char v41;
  _QWORD v42[4];
  char v43;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v39 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v10 = *(void **)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v12 = *(void **)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(unsigned __int8 *)(a2 + 48);
  v15 = v13 & 0xFE;
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a2 + 64);
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) == 0)
  {
    v18 = *(void **)a1;
    v19 = *(_QWORD *)(a1 + 8);
    v20 = *(void **)(a1 + 16);
    v21 = *(_QWORD *)(a1 + 24);
    if (v15 == 254)
    {
      if (*(unsigned __int8 *)(a1 + 48) != v14)
        return 0;
LABEL_11:
      if (v8)
        return v17 && (v7 == v16 && v8 == v17 || (sub_237A8840C() & 1) != 0);
      return !v17;
    }
LABEL_7:
    v38 = v11;
    v27 = v12;
    sub_23787007C(v10, v9, v12, v11, v13);
    sub_2378702CC(v18, v19, v20, v21, v6);
    sub_2378702CC(v10, v9, v27, v38, v13);
    return 0;
  }
  v36 = *(_QWORD *)(a2 + 40);
  if (v15 == 254)
  {
    v37 = *(_QWORD *)(a2 + 24);
    v22 = *(void **)(a2 + 16);
    v23 = *(_QWORD *)(a1 + 24);
    sub_237870090(v3, v2, v5, v4, v6);
    sub_237870090(v3, v2, v5, v23, v6);
    v18 = v3;
    v24 = v3;
    v19 = v2;
    v25 = v2;
    v20 = v5;
    v26 = v5;
    v21 = v23;
    sub_2378702E0(v24, v25, v26, v23, v6);
    v12 = v22;
    v11 = v37;
    goto LABEL_7;
  }
  v31 = *(unsigned __int8 *)(a1 + 48);
  v32 = *(_QWORD *)(a2 + 56);
  v33 = *(_QWORD *)(a2 + 64);
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_QWORD *)(a1 + 64);
  v42[0] = *(_QWORD *)a1;
  v42[1] = v2;
  v42[2] = v5;
  v42[3] = v4;
  v43 = v6;
  v40[0] = v10;
  v40[1] = v9;
  v40[2] = v12;
  v40[3] = v11;
  v41 = v13;
  v28 = v4;
  sub_23787007C(v3, v2, v5, v4, v6);
  sub_237870090(v3, v2, v5, v28, v6);
  v29 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v42, (uint64_t)v40);
  sub_2378702E0(v3, v2, v5, v28, v6);
  sub_2378702CC(v3, v2, v5, v28, v6);
  if ((v29 & 1) == 0)
    return 0;
  result = 0;
  v8 = v35;
  if (v39 == v36)
  {
    v17 = v33;
    v7 = v34;
    v16 = v32;
    if (((v31 ^ v14) & 1) == 0)
      goto LABEL_11;
  }
  return result;
}

unint64_t sub_237987FE0()
{
  unint64_t result;

  result = qword_256824348;
  if (!qword_256824348)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture.ContentMode, &type metadata for Texture.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256824348);
  }
  return result;
}

unint64_t sub_237988028()
{
  unint64_t result;

  result = qword_256824350;
  if (!qword_256824350)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture, &type metadata for Texture);
    atomic_store(result, (unint64_t *)&qword_256824350);
  }
  return result;
}

uint64_t destroy for Texture(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) != 0)
    sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Texture(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 32);
  if ((~*(_DWORD *)(a2 + 32) & 0xFELL) != 0)
  {
    v6 = *(void **)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(void **)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    sub_237870090(*(void **)a2, v7, v8, v9, v4);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Texture(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22;

  v4 = a2[4];
  v5 = v4 & 0xFE;
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) != 0)
  {
    if (v5 == 254)
    {
      sub_237988280(a1);
      v9 = *((_OWORD *)a2 + 1);
      v8 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      goto LABEL_9;
    }
    v14 = *a2;
    v15 = a2[1];
    v16 = (void *)a2[2];
    v17 = a2[3];
    sub_237870090((void *)*a2, v15, v16, v17, v4);
    v18 = *(void **)a1;
    v19 = *(_QWORD *)(a1 + 8);
    v20 = *(void **)(a1 + 16);
    v21 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v17;
    v22 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v4;
    sub_2378702E0(v18, v19, v20, v21, v22);
LABEL_8:
    *(_QWORD *)(a1 + 40) = a2[5];
    goto LABEL_9;
  }
  if (v5 != 254)
  {
    v10 = (void *)*a2;
    v11 = a2[1];
    v12 = (void *)a2[2];
    v13 = a2[3];
    sub_237870090((void *)*a2, v11, v12, v13, v4);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v13;
    *(_BYTE *)(a1 + 32) = v4;
    goto LABEL_8;
  }
  v6 = *(_OWORD *)a2;
  v7 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)a1 = v6;
LABEL_9:
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237988280(uint64_t a1)
{
  destroy for ImageAsset.ImageType();
  return a1;
}

uint64_t assignWithTake for Texture(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_DWORD *)(a1 + 32);
  if ((~(_BYTE)v4 & 0xFE) != 0)
  {
    v5 = *(_QWORD *)(a2 + 32);
    if ((~*(_DWORD *)(a2 + 32) & 0xFELL) != 0)
    {
      v7 = *(void **)a1;
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a1 + 24);
      v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_BYTE *)(a1 + 32) = v5;
      sub_2378702E0(v7, v8, v9, v10, v4);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      goto LABEL_6;
    }
    sub_237988280(a1);
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Texture(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Texture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Texture()
{
  return &type metadata for Texture;
}

uint64_t storeEnumTagSinglePayload for Texture.ContentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237988468 + 4 * byte_237A9B3ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23798849C + 4 * byte_237A9B3E8[v4]))();
}

uint64_t sub_23798849C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379884A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379884ACLL);
  return result;
}

uint64_t sub_2379884B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379884C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379884C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379884CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Texture.ContentMode()
{
  return &type metadata for Texture.ContentMode;
}

uint64_t storeEnumTagSinglePayload for Texture.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237988534 + 4 * byte_237A9B3F7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237988568 + 4 * byte_237A9B3F2[v4]))();
}

uint64_t sub_237988568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237988570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237988578);
  return result;
}

uint64_t sub_237988584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23798858CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237988590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237988598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Texture.CodingKeys()
{
  return &type metadata for Texture.CodingKeys;
}

unint64_t sub_2379885B8()
{
  unint64_t result;

  result = qword_256824358;
  if (!qword_256824358)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9B680, &type metadata for Texture.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824358);
  }
  return result;
}

unint64_t sub_237988600()
{
  unint64_t result;

  result = qword_256824360;
  if (!qword_256824360)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9B5F0, &type metadata for Texture.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824360);
  }
  return result;
}

unint64_t sub_237988648()
{
  unint64_t result;

  result = qword_256824368;
  if (!qword_256824368)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9B618, &type metadata for Texture.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824368);
  }
  return result;
}

uint64_t sub_23798868C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7373416567616D69 && a2 == 0xEA00000000007465;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_2379887F4()
{
  unint64_t result;

  result = qword_256824370;
  if (!qword_256824370)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture.ContentMode, &type metadata for Texture.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256824370);
  }
  return result;
}

uint64_t DigiBarMarkerType.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *v1;
  v4 = (unint64_t)v1[4] >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 == 1)
    {
      sub_237A885E0();
      return TickMarkerConfiguration.hash(into:)(a1);
    }
    else
    {
      sub_237A885E0();
      return LabelMarkerConfiguration.hash(into:)(a1);
    }
  }
  else
  {
    sub_237A885E0();
    sub_237877014(a1, v3);
    return sub_237A885F8();
  }
}

uint64_t static DotMarkerConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;

  v2 = *(float *)(a1 + 8);
  v3 = *(float *)(a2 + 8);
  return sub_2379B75E0(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t sub_2379889A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1801677172;
  if (*v0 != 1)
    v1 = 0x6C6562616CLL;
  if (*v0)
    return v1;
  else
    return 7630692;
}

uint64_t sub_2379889EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379910B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237988A10()
{
  sub_23798E38C();
  return sub_237A88718();
}

uint64_t sub_237988A38()
{
  sub_23798E38C();
  return sub_237A88724();
}

uint64_t sub_237988A60()
{
  sub_23798E4E0();
  return sub_237A88718();
}

uint64_t sub_237988A88()
{
  sub_23798E4E0();
  return sub_237A88724();
}

uint64_t sub_237988AB0()
{
  sub_23798E3D0();
  return sub_237A88718();
}

uint64_t sub_237988AD8()
{
  sub_23798E3D0();
  return sub_237A88724();
}

uint64_t sub_237988B00()
{
  sub_23798E458();
  return sub_237A88718();
}

uint64_t sub_237988B28()
{
  sub_23798E458();
  return sub_237A88724();
}

uint64_t DigiBarMarkerType.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  __int16 v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t v62;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824378);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824380);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824388);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824390);
  v47 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1[1];
  v48 = *v1;
  v49 = v11;
  v12 = (void *)v1[2];
  v13 = v1[4];
  v45 = v1[3];
  v46 = v12;
  v39 = v1[5];
  v44 = v1[6];
  v38 = v1[7];
  v36 = v1[8];
  v14 = v1[10];
  v35 = v1[9];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E38C();
  v15 = v10;
  sub_237A886B8();
  if (v13 >> 62)
  {
    if (v13 >> 62 == 1)
    {
      v16 = v48;
      v17 = HIDWORD(v48);
      LOBYTE(v50) = 1;
      sub_23798E458();
      v18 = v62;
      sub_237A88220();
      v50 = __PAIR64__(v17, v16);
      LOBYTE(v51) = v49;
      v52 = v46;
      sub_23798E49C();
      v19 = v40;
      sub_237A882B0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v15, v18);
    }
    else
    {
      v23 = v13;
      v32 = v14;
      v40 = HIDWORD(v14);
      LOBYTE(v50) = 2;
      sub_23798E3D0();
      v24 = v46;
      v25 = v44;
      swift_bridgeObjectRetain();
      v26 = v38;
      swift_bridgeObjectRetain();
      v27 = v36;
      swift_bridgeObjectRetain();
      v28 = v35;
      swift_bridgeObjectRetain();
      v29 = v41;
      v31 = v15;
      sub_237A88220();
      LOBYTE(v50) = v48;
      v51 = v49;
      v52 = v24;
      v53 = v45;
      v54 = v23 & 0x101;
      v55 = v39;
      v56 = v25;
      v57 = v26;
      v58 = v27;
      v59 = v28;
      v60 = v32;
      v61 = v40;
      sub_23798E414();
      v30 = v43;
      sub_237A882B0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v62);
      return sub_2378DF748(v48, v49, v46, v45, v23);
    }
  }
  else
  {
    LOBYTE(v50) = 0;
    sub_23798E4E0();
    v21 = v62;
    sub_237A88220();
    v50 = v48;
    LODWORD(v51) = v49;
    sub_23798E524();
    v22 = v34;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v10, v21);
  }
}

uint64_t DigiBarMarkerType.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = *((_QWORD *)v0 + 10);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  v10 = v0[4];
  v11 = v1;
  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

uint64_t DigiBarMarkerType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  char v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v47 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568243D0);
  v45 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568243D8);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568243E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568243E8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_23798E38C();
  v14 = v61;
  sub_237A88688();
  if (v14)
    goto LABEL_7;
  v42 = v6;
  v15 = v5;
  v17 = v48;
  v16 = v49;
  v61 = v10;
  v18 = sub_237A881FC();
  v19 = v9;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v20 = sub_237A87FB0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v22 = &type metadata for DigiBarMarkerType;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v9);
LABEL_7:
    v23 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_2Tm(v23);
  }
  if (*(_BYTE *)(v18 + 32))
  {
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      LOBYTE(v51) = 1;
      sub_23798E458();
      sub_237A88154();
      sub_23798E5AC();
      v27 = v44;
      sub_237A881F0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v9);
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v31 = v51;
      v32 = v52;
      v33 = 0uLL;
      v34 = 0x4000000000000000;
      v35 = v53;
      v36 = 0uLL;
    }
    else
    {
      LOBYTE(v51) = 2;
      sub_23798E3D0();
      v25 = v16;
      v26 = v19;
      sub_237A88154();
      sub_23798E568();
      v37 = v43;
      sub_237A881F0();
      v38 = v61;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v26);
      v31 = v51;
      v32 = v52;
      v35 = v53;
      v28 = v54;
      v29 = v57;
      v33 = v58;
      v36 = v59;
      v30 = v60;
      v39 = 256;
      if (!v56)
        v39 = 0;
      v34 = v39 | v55 | 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v51) = 0;
    sub_23798E4E0();
    sub_237A88154();
    sub_23798E5F0();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v9);
    v35 = 0;
    v28 = 0;
    v34 = 0;
    v29 = 0;
    v30 = 0;
    v31 = v51;
    v32 = v52;
    v33 = 0uLL;
    v36 = 0uLL;
  }
  v23 = (uint64_t)v50;
  v40 = v47;
  *v47 = v31;
  v40[1] = v32;
  v40[2] = v35;
  v40[3] = v28;
  v40[4] = v34;
  v40[5] = v29;
  *((_OWORD *)v40 + 3) = v33;
  *((_OWORD *)v40 + 4) = v36;
  v40[10] = v30;
  return __swift_destroy_boxed_opaque_existential_2Tm(v23);
}

uint64_t sub_23798960C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DigiBarMarkerType.init(from:)(a1, a2);
}

uint64_t sub_237989620(_QWORD *a1)
{
  return DigiBarMarkerType.encode(to:)(a1);
}

uint64_t sub_237989634()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = *((_QWORD *)v0 + 10);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  v10 = v0[4];
  v11 = v1;
  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

uint64_t sub_237989698()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = *((_QWORD *)v0 + 10);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  v10 = v0[4];
  v11 = v1;
  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_237A88610();
}

uint64_t static DotMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t static DotMarkerConfiguration.Style.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23798E178(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0B4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0A0) & 1;
}

uint64_t sub_23798972C()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F6C6F63;
  else
    return 1802723693;
}

uint64_t sub_23798975C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379912BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237989780()
{
  sub_23798E634();
  return sub_237A88718();
}

uint64_t sub_2379897A8()
{
  sub_23798E634();
  return sub_237A88724();
}

uint64_t sub_2379897D0()
{
  return 17481;
}

uint64_t sub_2379897E0()
{
  sub_23798E678();
  return sub_237A88718();
}

uint64_t sub_237989808()
{
  sub_23798E678();
  return sub_237A88724();
}

uint64_t sub_237989830()
{
  sub_23798E6BC();
  return sub_237A88718();
}

uint64_t sub_237989858()
{
  sub_23798E6BC();
  return sub_237A88724();
}

uint64_t DotMarkerConfiguration.Style.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824408);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824410);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824418);
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v18 = v1[1];
  v19 = v12;
  v13 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E634();
  sub_237A886B8();
  if (v13 == 255)
  {
    LOBYTE(v23) = 0;
    sub_23798E6BC();
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  else
  {
    LOBYTE(v23) = 1;
    sub_23798E678();
    sub_237A88220();
    v23 = v19;
    v24 = v18;
    v25 = v13;
    sub_23787AA5C();
    v14 = v21;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v9);
}

uint64_t DotMarkerConfiguration.Style.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  _QWORD *v35;
  __int128 v36;
  char v37;
  uint64_t v38;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824438);
  v4 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v32 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824440);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824448);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_23798E634();
  v15 = v38;
  sub_237A88688();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v30 = v6;
  v17 = v34;
  v38 = v11;
  v18 = sub_237A881FC();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v24 = sub_237A87FB0();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v26 = &type metadata for DotMarkerConfiguration.Style;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v10);
LABEL_7:
    v27 = (uint64_t)v35;
    return __swift_destroy_boxed_opaque_existential_2Tm(v27);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v36) = 1;
    sub_23798E678();
    v20 = v17;
    sub_237A88154();
    sub_23787AB8C();
    v21 = v31;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v10);
    v22 = v36;
    v23 = v37;
  }
  else
  {
    LOBYTE(v36) = 0;
    sub_23798E6BC();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v10);
    v22 = 0uLL;
    v23 = -1;
  }
  v27 = (uint64_t)v35;
  v29 = v33;
  *v33 = v22;
  *((_BYTE *)v29 + 16) = v23;
  return __swift_destroy_boxed_opaque_existential_2Tm(v27);
}

uint64_t sub_237989E5C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DotMarkerConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_237989E70(_QWORD *a1)
{
  return DotMarkerConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_237989E90(uint64_t *a1, uint64_t *a2)
{
  return sub_23798E178(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0B4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0A0) & 1;
}

uint64_t DotMarkerConfiguration.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DotMarkerConfiguration.styles.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DotMarkerConfiguration.styles.modify())()
{
  return nullsub_1;
}

float DotMarkerConfiguration.radius.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void DotMarkerConfiguration.radius.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*DotMarkerConfiguration.radius.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::DotMarkerConfiguration __swiftcall DotMarkerConfiguration.init(styles:radius:)(Swift::OpaquePointer styles, Swift::Float radius)
{
  uint64_t v2;
  CarPlayAssetUI::DotMarkerConfiguration result;

  *(Swift::OpaquePointer *)v2 = styles;
  *(Swift::Float *)(v2 + 8) = radius;
  result.styles = styles;
  result.radius = radius;
  return result;
}

uint64_t DotMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_237877014(a1, v3);
  swift_bridgeObjectRelease();
  return sub_237A885F8();
}

uint64_t sub_237989F7C()
{
  _BYTE *v0;

  if (*v0)
    return 0x737569646172;
  else
    return 0x73656C797473;
}

uint64_t sub_237989FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379911DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237989FCC()
{
  sub_23798E700();
  return sub_237A88718();
}

uint64_t sub_237989FF4()
{
  sub_23798E700();
  return sub_237A88724();
}

uint64_t DotMarkerConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[8];
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824450);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E700();
  sub_237A886B8();
  v11 = v8;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256824460);
  sub_23798E744();
  sub_237A882B0();
  if (!v2)
  {
    v10[6] = 1;
    sub_237A8828C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DotMarkerConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237877014((uint64_t)v3, v1);
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t DotMarkerConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  _BYTE v13[8];
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824478);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E700();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256824460);
  v13[7] = 0;
  sub_23798E7F4();
  sub_237A881F0();
  v9 = v14;
  v13[6] = 1;
  swift_bridgeObjectRetain();
  sub_237A881CC();
  v11 = v10;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_DWORD *)(a2 + 8) = v11;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23798A35C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DotMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23798A370(_QWORD *a1)
{
  return DotMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_23798A388(uint64_t a1)
{
  uint64_t *v1;

  sub_237877014(a1, *v1);
  return sub_237A885F8();
}

uint64_t sub_23798A3C0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237877014((uint64_t)v3, v1);
  sub_237A885F8();
  return sub_237A88610();
}

uint64_t sub_23798A414(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;

  v2 = *(float *)(a1 + 8);
  v3 = *(float *)(a2 + 8);
  return sub_2379B75E0(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t static TickMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleO4hash4intoys6HasherVz_tF_0()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 16) == 255)
    return sub_237A885E0();
  sub_237A885E0();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t static TickMarkerConfiguration.Style.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23798E178(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D138, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D134) & 1;
}

uint64_t sub_23798A528()
{
  sub_23798E8A4();
  return sub_237A88718();
}

uint64_t sub_23798A550()
{
  sub_23798E8A4();
  return sub_237A88724();
}

uint64_t sub_23798A578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 17481 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23798A5F4()
{
  sub_23798E8E8();
  return sub_237A88718();
}

uint64_t sub_23798A61C()
{
  sub_23798E8E8();
  return sub_237A88724();
}

uint64_t sub_23798A644()
{
  sub_23798E92C();
  return sub_237A88718();
}

uint64_t sub_23798A66C()
{
  sub_23798E92C();
  return sub_237A88724();
}

uint64_t TickMarkerConfiguration.Style.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824490);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824498);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568244A0);
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v18 = v1[1];
  v19 = v12;
  v13 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E8A4();
  sub_237A886B8();
  if (v13 == 255)
  {
    LOBYTE(v23) = 0;
    sub_23798E92C();
    sub_237A88220();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  else
  {
    LOBYTE(v23) = 1;
    sub_23798E8E8();
    sub_237A88220();
    v23 = v19;
    v24 = v18;
    v25 = v13;
    sub_23787AA5C();
    v14 = v21;
    sub_237A882B0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v9);
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleO9hashValueSivg_0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_237A885D4();
  sub_237A885E0();
  if (v1 != 255)
  {
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t TickMarkerConfiguration.Style.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  _QWORD *v35;
  __int128 v36;
  char v37;
  uint64_t v38;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568244C0);
  v4 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v32 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568244C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568244D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_23798E8A4();
  v15 = v38;
  sub_237A88688();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v30 = v6;
  v17 = v34;
  v38 = v11;
  v18 = sub_237A881FC();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v24 = sub_237A87FB0();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E9A0);
    *v26 = &type metadata for TickMarkerConfiguration.Style;
    sub_237A88160();
    sub_237A87F98();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v10);
LABEL_7:
    v27 = (uint64_t)v35;
    return __swift_destroy_boxed_opaque_existential_2Tm(v27);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v36) = 1;
    sub_23798E8E8();
    v20 = v17;
    sub_237A88154();
    sub_23787AB8C();
    v21 = v31;
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v10);
    v22 = v36;
    v23 = v37;
  }
  else
  {
    LOBYTE(v36) = 0;
    sub_23798E92C();
    sub_237A88154();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v10);
    v22 = 0uLL;
    v23 = -1;
  }
  v27 = (uint64_t)v35;
  v29 = v33;
  *v33 = v22;
  *((_BYTE *)v29 + 16) = v23;
  return __swift_destroy_boxed_opaque_existential_2Tm(v27);
}

uint64_t sub_23798AD04@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return TickMarkerConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_23798AD18(_QWORD *a1)
{
  return TickMarkerConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_23798AD2C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_237A885D4();
  sub_237A885E0();
  if (v1 != 255)
  {
    Theme.ColorID.rawValue.getter();
    sub_237A87710();
    swift_bridgeObjectRelease();
  }
  return sub_237A88610();
}

uint64_t sub_23798ADBC(uint64_t *a1, uint64_t *a2)
{
  return sub_23798E178(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D138, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D134) & 1;
}

float TickMarkerConfiguration.width.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void TickMarkerConfiguration.width.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*TickMarkerConfiguration.width.modify())()
{
  return nullsub_1;
}

float TickMarkerConfiguration.length.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void TickMarkerConfiguration.length.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*TickMarkerConfiguration.length.modify())()
{
  return nullsub_1;
}

void TickMarkerConfiguration.lineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *TickMarkerConfiguration.lineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*TickMarkerConfiguration.lineCap.modify())()
{
  return nullsub_1;
}

uint64_t TickMarkerConfiguration.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TickMarkerConfiguration.styles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TickMarkerConfiguration.styles.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::TickMarkerConfiguration __swiftcall TickMarkerConfiguration.init(width:length:lineCap:styles:)(Swift::Float width, Swift::Float length, CarPlayAssetUI::DigiBarRadialStyle::LineCap lineCap, Swift::OpaquePointer styles)
{
  uint64_t v4;
  char v5;
  CarPlayAssetUI::TickMarkerConfiguration result;

  v5 = *(_BYTE *)lineCap;
  *(Swift::Float *)v4 = width;
  *(Swift::Float *)(v4 + 4) = length;
  *(_BYTE *)(v4 + 8) = v5;
  *(Swift::OpaquePointer *)(v4 + 16) = styles;
  result.styles = styles;
  result.length = length;
  result.width = width;
  result.lineCap = lineCap;
  return result;
}

uint64_t TickMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  swift_bridgeObjectRetain();
  sub_237877000(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23798AF14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23798AF40 + 4 * byte_237A9B700[*v0]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_23798AF40()
{
  return 0x6874676E656CLL;
}

uint64_t sub_23798AF54()
{
  return 0x706143656E696CLL;
}

uint64_t sub_23798AF6C()
{
  return 0x73656C797473;
}

uint64_t sub_23798AF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237991394(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23798AFA4()
{
  sub_23798E970();
  return sub_237A88718();
}

uint64_t sub_23798AFCC()
{
  sub_23798E970();
  return sub_237A88724();
}

uint64_t TickMarkerConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568244D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v11) = *(unsigned __int8 *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E970();
  sub_237A886B8();
  v17 = 0;
  sub_237A8828C();
  if (!v2)
  {
    v9 = BYTE4(v11);
    v16 = 1;
    sub_237A8828C();
    v15 = v9;
    v14 = 2;
    sub_2378B6A7C();
    sub_237A882B0();
    v12 = v8;
    v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568244E8);
    sub_23798E9B4();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TickMarkerConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  swift_bridgeObjectRetain();
  sub_237877000((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t TickMarkerConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798E970();
  sub_237A88688();
  if (!v2)
  {
    v21 = 0;
    sub_237A881CC();
    v10 = v9;
    v20 = 1;
    sub_237A881CC();
    v12 = v11;
    v18 = 2;
    sub_2378B6AC0();
    sub_237A881F0();
    v14 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568244E8);
    v17 = 3;
    sub_23798EA64();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v16[1];
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
    *(_BYTE *)(a2 + 8) = v14;
    *(_QWORD *)(a2 + 16) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23798B42C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TickMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23798B440(_QWORD *a1)
{
  return TickMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_23798B45C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_237A885D4();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885E0();
  swift_bridgeObjectRetain();
  sub_237877000((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t static LabelMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t LabelMarkerConfiguration.font.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 33);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

void LabelMarkerConfiguration.font.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[32];
  v7 = a1[33];
  v8 = *((_QWORD *)a1 + 5);
  v9 = *((_QWORD *)a1 + 6);
  v10 = *(void **)(v1 + 16);
  swift_bridgeObjectRelease();

  *(_BYTE *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 32) = v6;
  *(_BYTE *)(v1 + 33) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
}

uint64_t (*LabelMarkerConfiguration.font.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.textColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.textColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.textColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.backgroundColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.backgroundColorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.backgroundColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.desiredLabelWidths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.desiredLabelWidths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.desiredLabelWidths.modify())()
{
  return nullsub_1;
}

float LabelMarkerConfiguration.desiredLabelHeight.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 80);
}

void LabelMarkerConfiguration.desiredLabelHeight.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 80) = a1;
}

uint64_t (*LabelMarkerConfiguration.desiredLabelHeight.modify())()
{
  return nullsub_1;
}

float LabelMarkerConfiguration.cornerRadius.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 84);
}

void LabelMarkerConfiguration.cornerRadius.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 84) = a1;
}

uint64_t (*LabelMarkerConfiguration.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.init(font:textColorIDs:backgroundColorIDs:desiredLabelWidths:desiredLabelHeight:cornerRadius:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(result + 8);
  v8 = *(_QWORD *)(result + 16);
  v9 = *(_QWORD *)(result + 24);
  v10 = *(_BYTE *)(result + 32);
  v11 = *(_BYTE *)(result + 33);
  v12 = *(_QWORD *)(result + 40);
  v13 = *(_QWORD *)(result + 48);
  *(_BYTE *)a5 = *(_BYTE *)result;
  *(_QWORD *)(a5 + 8) = v7;
  *(_QWORD *)(a5 + 16) = v8;
  *(_QWORD *)(a5 + 24) = v9;
  *(_BYTE *)(a5 + 32) = v10;
  *(_BYTE *)(a5 + 33) = v11;
  *(_QWORD *)(a5 + 40) = v12;
  *(_QWORD *)(a5 + 48) = v13;
  *(_QWORD *)(a5 + 56) = a2;
  *(_QWORD *)(a5 + 64) = a3;
  *(_QWORD *)(a5 + 72) = a4;
  *(float *)(a5 + 80) = a6;
  *(float *)(a5 + 84) = a7;
  return result;
}

uint64_t LabelMarkerConfiguration.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  InstrumentFont.hash(into:)();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  sub_237876BCC(a1, v5);
  sub_237A885F8();
  return sub_237A885F8();
}

uint64_t sub_23798B7FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23798B828 + 4 * byte_237A9B704[a1]))(1953394534, 0xE400000000000000);
}

uint64_t sub_23798B828()
{
  return 0x6F6C6F4374786574;
}

unint64_t sub_23798B848()
{
  return 0xD000000000000012;
}

uint64_t sub_23798B87C()
{
  return 0x615272656E726F63;
}

uint64_t sub_23798B89C()
{
  unsigned __int8 *v0;

  return sub_23798B7FC(*v0);
}

uint64_t sub_23798B8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237991534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23798B8C8()
{
  sub_23798EB14();
  return sub_237A88718();
}

uint64_t sub_23798B8F0()
{
  sub_23798EB14();
  return sub_237A88724();
}

uint64_t LabelMarkerConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824518);
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_QWORD *)v1 + 1);
  v25 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v9 = v1[32];
  v24 = v1[33];
  v10 = *((_QWORD *)v1 + 5);
  v22 = *((_QWORD *)v1 + 6);
  v23 = v10;
  v11 = *((_QWORD *)v1 + 7);
  v20 = *((_QWORD *)v1 + 8);
  v21 = v11;
  v19 = *((_QWORD *)v1 + 9);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798EB14();
  sub_237A886B8();
  LOBYTE(v29) = v6;
  v30 = v7;
  v31 = v25;
  v32 = v8;
  v33 = v9;
  v34 = v24;
  v12 = v5;
  v35 = v23;
  v36 = v22;
  v28 = 0;
  sub_237898A48();
  v13 = v27;
  sub_237A882B0();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  v15 = v19;
  v16 = v20;
  v17 = v26;
  v29 = v21;
  v28 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_23798EB58();
  sub_237A882B0();
  v29 = v16;
  v28 = 2;
  sub_237A882B0();
  v29 = v15;
  v28 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256824528);
  sub_23798EC30(&qword_256824530, MEMORY[0x24BEE14F8], MEMORY[0x24BEE12A0]);
  sub_237A882B0();
  LOBYTE(v29) = 4;
  sub_237A8828C();
  LOBYTE(v29) = 5;
  sub_237A8828C();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v12, v3);
}

uint64_t LabelMarkerConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  _BYTE v9[80];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 33);
  v6 = *(_QWORD *)(v0 + 40);
  v9[72] = *(_BYTE *)v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v7 = *(_OWORD *)(v0 + 64);
  v16 = *(_OWORD *)(v0 + 48);
  v17 = v7;
  v18 = *(_QWORD *)(v0 + 80);
  sub_237A885D4();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_237A88610();
}

void LabelMarkerConfiguration.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  id v22;
  _BYTE *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  _BYTE *v36;
  unint64_t v37;
  id v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824538);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798EB14();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    v39 = 0;
    sub_237898B2C();
    sub_237A881F0();
    v36 = a2;
    v35 = v40;
    v9 = v42;
    v34 = v41;
    v10 = v43;
    v32 = v45;
    v33 = v44;
    v11 = v47;
    v31 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
    v39 = 1;
    v12 = sub_23798EBC4();
    v38 = v9;
    swift_bridgeObjectRetain();
    v37 = v12;
    sub_237A881F0();
    v30 = v11;
    v13 = v38;
    v14 = v40;
    v39 = 2;
    swift_bridgeObjectRetain();
    sub_237A881F0();
    v37 = v14;
    v15 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256824528);
    v39 = 3;
    sub_23798EC30(&qword_256824540, MEMORY[0x24BEE1520], MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    v29 = 0;
    sub_237A881F0();
    v27 = v15;
    v16 = v40;
    LOBYTE(v40) = 4;
    swift_bridgeObjectRetain();
    sub_237A881CC();
    v28 = v16;
    v18 = v17;
    LOBYTE(v40) = 5;
    sub_237A881CC();
    v19 = v30;
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v22 = v13;

    v23 = v36;
    v24 = v37;
    *v36 = v35;
    *((_QWORD *)v23 + 1) = v34;
    *((_QWORD *)v23 + 2) = v22;
    *((_QWORD *)v23 + 3) = v10;
    v23[32] = v33;
    v23[33] = v32;
    *((_QWORD *)v23 + 5) = v31;
    *((_QWORD *)v23 + 6) = v19;
    v25 = v27;
    v26 = v28;
    *((_QWORD *)v23 + 7) = v24;
    *((_QWORD *)v23 + 8) = v25;
    *((_QWORD *)v23 + 9) = v26;
    *((_DWORD *)v23 + 20) = v18;
    *((_DWORD *)v23 + 21) = v21;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

void sub_23798C128(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  LabelMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23798C13C(_QWORD *a1)
{
  return LabelMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_23798C150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  _BYTE v9[80];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 33);
  v6 = *(_QWORD *)(v0 + 40);
  v9[72] = *(_BYTE *)v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v7 = *(_OWORD *)(v0 + 64);
  v16 = *(_OWORD *)(v0 + 48);
  v17 = v7;
  v18 = *(_QWORD *)(v0 + 80);
  sub_237A885D4();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_237A88610();
}

uint64_t sub_23798C1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  _BYTE v9[80];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 33);
  v6 = *(_QWORD *)(v0 + 40);
  v9[72] = *(_BYTE *)v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v7 = *(_OWORD *)(v0 + 64);
  v16 = *(_OWORD *)(v0 + 48);
  v17 = v7;
  v18 = *(_QWORD *)(v0 + 80);
  sub_237A885D4();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_237A88610();
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *v1;
  v3 = v1[1];
  v4 = (void *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v12 = v1[10];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_2378DE410(v2, v3, v4, v5, v6);
}

__n128 DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v5 = a1[3];
  v6 = a1[2];
  v4 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  sub_2378DF748(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  *(_OWORD *)v1 = v8;
  *(_OWORD *)(v1 + 16) = v7;
  *(_OWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = v5;
  result = v4;
  *(__n128 *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 80) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.modify())()
{
  return nullsub_1;
}

__n128 DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(type:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 80) = v2;
  return result;
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.hash(into:)(uint64_t a1)
{
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t static DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[5];
  uint64_t v10;
  _OWORD v11[5];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a1 + 64);
  v12 = v2;
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v7;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = v3;
  return _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v11, (uint64_t *)v9) & 1;
}

uint64_t sub_23798C420()
{
  sub_23798EC90();
  return sub_237A88718();
}

uint64_t sub_23798C448()
{
  sub_23798EC90();
  return sub_237A88724();
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824548);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v14 = v1[1];
  v15 = v7;
  v8 = v1[2];
  v12 = v1[3];
  v13 = v8;
  v11 = v1[4];
  v9 = *((_QWORD *)v1 + 10);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798EC90();
  sub_237A886B8();
  v16 = v15;
  v17 = v14;
  v18 = v13;
  v19 = v12;
  v20 = v11;
  v21 = v9;
  sub_23798ECD4();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[5];
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824560);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798EC90();
  sub_237A88688();
  if (!v2)
  {
    sub_23798ED18();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v16;
    v10 = v15[1];
    v11 = v15[2];
    v12 = v15[3];
    v13 = v15[4];
    *(_OWORD *)a2 = v15[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v12;
    *(_OWORD *)(a2 + 64) = v13;
    *(_QWORD *)(a2 + 80) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23798C778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23798C78C(_QWORD *a1)
{
  return DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_23798C7A0()
{
  _BYTE v1[72];

  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t sub_23798C830(uint64_t a1)
{
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_23798C878()
{
  _BYTE v1[72];

  sub_237A885D4();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t sub_23798C904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[5];
  uint64_t v10;
  _OWORD v11[5];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a1 + 64);
  v12 = v2;
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v7;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = v3;
  return _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v11, (uint64_t *)v9) & 1;
}

__n128 DigiBarSingleMarkerConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 52);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarSingleMarkerConfiguration.style.setter(uint64_t a1)
{
  uint64_t v1;
  int v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 52);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 52) = v3;
  *(_DWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarSingleMarkerConfiguration.type.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1[7];
  v3 = v1[8];
  v4 = (void *)v1[9];
  v5 = v1[10];
  v6 = v1[11];
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = v1[15];
  v11 = v1[16];
  v12 = v1[17];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_2378DE410(v2, v3, v4, v5, v6);
}

__n128 DigiBarSingleMarkerConfiguration.type.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v5 = a1[3];
  v6 = a1[2];
  v4 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  sub_2378DF748(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  *(_OWORD *)(v1 + 56) = v8;
  *(_OWORD *)(v1 + 72) = v7;
  *(_OWORD *)(v1 + 88) = v6;
  *(_OWORD *)(v1 + 104) = v5;
  result = v4;
  *(__n128 *)(v1 + 120) = v4;
  *(_QWORD *)(v1 + 136) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.type.modify())()
{
  return nullsub_1;
}

__n128 DigiBarSingleMarkerConfiguration.init(style:type:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  int v6;
  uint64_t v7;
  __n128 result;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 72) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a3 + 52) = *(_BYTE *)(a1 + 52);
  *(_DWORD *)(a3 + 48) = v6;
  *(_OWORD *)(a3 + 104) = v5;
  result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a3 + 120) = result;
  *(_QWORD *)(a3 + 136) = v7;
  return result;
}

uint64_t DigiBarSingleMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;

  if (((*(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_23798CCBC()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x656C797473;
}

uint64_t sub_23798CCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379917B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23798CD10()
{
  sub_23798ED5C();
  return sub_237A88718();
}

uint64_t sub_23798CD38()
{
  sub_23798ED5C();
  return sub_237A88724();
}

uint64_t DigiBarSingleMarkerConfiguration.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824570);
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v25 = v1[1];
  v26 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v27 = *((unsigned int *)v1 + 12);
  v9 = *((_BYTE *)v1 + 52);
  v10 = *((_QWORD *)v1 + 7);
  v23 = *((_QWORD *)v1 + 8);
  v24 = v10;
  v22 = *((_QWORD *)v1 + 9);
  v21 = *((_QWORD *)v1 + 10);
  v20 = *((_QWORD *)v1 + 11);
  v19 = *((_QWORD *)v1 + 12);
  v18 = *((_QWORD *)v1 + 13);
  v17 = *((_QWORD *)v1 + 14);
  v16 = *((_QWORD *)v1 + 15);
  v15 = *((_QWORD *)v1 + 16);
  v14 = *((_QWORD *)v1 + 17);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798ED5C();
  sub_237A886B8();
  v30 = v26;
  v31 = v25;
  v32 = v8;
  v33 = v7;
  BYTE4(v34) = v9;
  LODWORD(v34) = v27;
  v39 = 0;
  sub_23798EDA0();
  v11 = v28;
  sub_237A882B0();
  if (!v11)
  {
    *(_QWORD *)&v30 = v24;
    *((_QWORD *)&v30 + 1) = v23;
    *(_QWORD *)&v31 = v22;
    *((_QWORD *)&v31 + 1) = v21;
    v32 = v20;
    v33 = v19;
    v34 = v18;
    v35 = v17;
    v36 = v16;
    v37 = v15;
    v38 = v14;
    v39 = 1;
    sub_23798EDE4();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v3);
}

uint64_t DigiBarSingleMarkerConfiguration.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[80];

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  DigiBarMarkerType.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

uint64_t DigiBarSingleMarkerConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824590);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_23798ED5C();
  sub_237A88688();
  if (!v2)
  {
    v30 = 0;
    sub_23798EE28();
    sub_237A881F0();
    v22 = *((_QWORD *)&v24 + 1);
    v23 = v24;
    v20 = *((_QWORD *)&v25 + 1);
    v21 = v25;
    v18 = *((_QWORD *)&v26 + 1);
    v19 = v26;
    v9 = BYTE4(v27);
    v10 = v27;
    v30 = 1;
    sub_23798EE6C();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v25;
    *(_OWORD *)(a2 + 56) = v24;
    *(_OWORD *)(a2 + 72) = v11;
    v12 = v27;
    *(_OWORD *)(a2 + 88) = v26;
    v13 = v29;
    v14 = v22;
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v14;
    v15 = v20;
    *(_QWORD *)(a2 + 16) = v21;
    *(_QWORD *)(a2 + 24) = v15;
    v16 = v18;
    *(_QWORD *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v16;
    *(_DWORD *)(a2 + 48) = v10;
    *(_BYTE *)(a2 + 52) = (v10 | (unint64_t)(v9 << 32)) >> 32;
    *(_OWORD *)(a2 + 104) = v12;
    *(_OWORD *)(a2 + 120) = v28;
    *(_QWORD *)(a2 + 136) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_23798D3E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarSingleMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23798D3F4(_QWORD *a1)
{
  return DigiBarSingleMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_23798D40C(uint64_t a1)
{
  uint64_t v1;

  if (((*(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_237A885E0();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_23798D5BC()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[80];

  v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_237A885D4();
  sub_237A885E0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885EC();
  }
  else
  {
    sub_237A88604();
    sub_237A88604();
    sub_237A885EC();
    sub_237896D64();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885F8();
    sub_237A885E0();
  }
  DigiBarMarkerType.hash(into:)((uint64_t)v3);
  return sub_237A88610();
}

BOOL _s14CarPlayAssetUI24LabelMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  _BOOL4 v28;
  _BYTE v30[8];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38[8];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 33);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v14 = *(float *)(a1 + 80);
  v13 = *(float *)(a1 + 84);
  v15 = *a2;
  v16 = *((_QWORD *)a2 + 1);
  v17 = *((_QWORD *)a2 + 2);
  v18 = *((_QWORD *)a2 + 3);
  v19 = a2[32];
  v20 = a2[33];
  v21 = *((_QWORD *)a2 + 5);
  v22 = *((_QWORD *)a2 + 6);
  v24 = *((_QWORD *)a2 + 7);
  v23 = *((_QWORD *)a2 + 8);
  v25 = *((_QWORD *)a2 + 9);
  v27 = *((float *)a2 + 20);
  v26 = *((float *)a2 + 21);
  v38[0] = v2;
  v39 = v3;
  v40 = v4;
  v41 = v5;
  v42 = v6;
  v43 = v7;
  v44 = v8;
  v45 = v9;
  v30[0] = v15;
  v31 = v16;
  v32 = v17;
  v33 = v18;
  v34 = v19;
  v35 = v20;
  v36 = v21;
  v37 = v22;
  if ((_s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0(v38, (uint64_t)v30) & 1) == 0
    || (sub_2379B7304(v11, v24) & 1) == 0
    || (sub_2379B7304(v10, v23) & 1) == 0)
  {
    return 0;
  }
  v28 = sub_237875D88(v12, v25) && v14 == v27;
  return v13 == v26 && v28;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[8];
  uint64_t v59;
  void *v60;
  uint64_t v61;
  __int16 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[8];
  uint64_t v70;
  void *v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[23];

  v3 = *a1;
  v2 = a1[1];
  v4 = (void *)a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  v11 = a1[9];
  v12 = a1[10];
  v13 = *a2;
  v14 = a2[1];
  v16 = (void *)a2[2];
  v15 = a2[3];
  v18 = a2[4];
  v17 = a2[5];
  v20 = a2[6];
  v19 = a2[7];
  v21 = a2[8];
  v22 = a2[9];
  v23 = a2[10];
  v24 = v3;
  v80[0] = v3;
  v80[1] = v2;
  v80[2] = v4;
  v80[3] = v5;
  v80[4] = v7;
  v80[5] = v6;
  v80[6] = v8;
  v80[7] = v9;
  v80[8] = v10;
  v80[9] = v11;
  v25 = v12;
  v80[10] = v12;
  v80[11] = v13;
  v26 = v13;
  v27 = v14;
  v80[12] = v14;
  v80[13] = v16;
  v80[14] = v15;
  v80[15] = v18;
  v28 = v18;
  v80[16] = v17;
  v80[17] = v20;
  v80[18] = v19;
  v80[19] = v21;
  v29 = v7;
  v80[20] = v22;
  v80[21] = v23;
  if (!(v7 >> 62))
  {
    if (!(v18 >> 62))
    {
      v33 = *(float *)&v2;
      v44 = v13;
      v51 = v4;
      v34 = v5;
      v56 = v5;
      v35 = v2;
      v48 = v15;
      v53 = v16;
      sub_2378DE410(v13, v14, v16, v15, v28);
      sub_2378DE410(v24, v35, v51, v34, v29);
      sub_2378DE410(v24, v35, v51, v56, v29);
      sub_2378DE410(v44, v27, v53, v48, v28);
      v42 = sub_2379B75E0(v24, v44);
      sub_23799188C((uint64_t)v80);
      sub_2378DF748(v44, v27, v53, v48, v28);
      sub_2378DF748(v24, v35, v51, v56, v29);
      v32 = v42 & (v33 == *(float *)&v27);
      return v32 & 1;
    }
    goto LABEL_13;
  }
  if (v7 >> 62 != 1)
  {
    if (v18 >> 62 == 2)
    {
      v69[0] = v24;
      v70 = v2;
      v71 = v4;
      v72 = v5;
      v45 = v13;
      v46 = v2;
      v73 = v7 & 0x101;
      v74 = v6;
      v75 = v8;
      v76 = v9;
      v77 = v10;
      v78 = v11;
      v79 = v25;
      v58[0] = v13;
      v59 = v14;
      v60 = v16;
      v61 = v15;
      v62 = v18 & 0x101;
      v63 = v17;
      v64 = v20;
      v65 = v19;
      v66 = v21;
      v67 = v22;
      v68 = v23;
      v36 = v4;
      v37 = v5;
      v57 = v5;
      v49 = v15;
      v54 = v16;
      sub_2378DE410(v13, v14, v16, v15, v18);
      sub_2378DE410(v24, v46, v36, v37, v29);
      sub_2378DE410(v24, v46, v36, v57, v29);
      sub_2378DE410(v45, v27, v54, v49, v18);
      v32 = _s14CarPlayAssetUI24LabelMarkerConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v69, v58);
      sub_23799188C((uint64_t)v80);
      sub_2378DF748(v45, v27, v54, v49, v18);
      sub_2378DF748(v24, v46, v36, v57, v29);
      return v32 & 1;
    }
    goto LABEL_13;
  }
  if (v18 >> 62 != 1
    || *(float *)&v24 != *(float *)&v13
    || *((float *)&v24 + 1) != *((float *)&v13 + 1)
    || v14 != v2)
  {
LABEL_13:
    v38 = v15;
    v39 = v16;
    sub_2378DE410(v24, v2, v4, v5, v7);
    sub_2378DE410(v26, v27, v39, v38, v18);
    sub_23799188C((uint64_t)v80);
    goto LABEL_14;
  }
  v43 = v13;
  v50 = v4;
  v30 = v5;
  v55 = v5;
  v31 = v2;
  v47 = v15;
  v52 = v16;
  sub_2378DE410(v13, v14, v16, v15, v28);
  sub_2378DE410(v24, v31, v50, v30, v29);
  sub_2378DE410(v24, v31, v50, v55, v29);
  sub_2378DE410(v43, v27, v52, v47, v28);
  v41 = sub_2379B7E64((uint64_t)v50, (uint64_t)v52);
  sub_23799188C((uint64_t)v80);
  sub_2378DF748(v43, v27, v52, v47, v28);
  sub_2378DF748(v24, v31, v50, v55, v29);
  if ((v41 & 1) == 0)
  {
LABEL_14:
    v32 = 0;
    return v32 & 1;
  }
  v32 = 1;
  return v32 & 1;
}

uint64_t _s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  float32x4_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  float32x4_t v25;
  float32x4_t v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  float32x4_t v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned int *)(a1 + 48) | (unint64_t)((uint64_t)*(char *)(a1 + 52) << 32);
  v5 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned int *)(a2 + 48) | (unint64_t)((uint64_t)*(char *)(a2 + 52) << 32);
  v10 = *(_QWORD *)(a2 + 136);
  if ((v4 & 0x8000000000000000) != 0)
  {
    if ((v9 & 0x8000000000000000) == 0)
      goto LABEL_8;
    v16 = *(_OWORD *)(a2 + 120);
    v17 = *(_OWORD *)(a2 + 104);
    v18 = *(_OWORD *)(a2 + 88);
    v19 = *(_OWORD *)(a2 + 72);
    v20 = *(float32x4_t *)(a2 + 56);
    v21 = *(_OWORD *)(a1 + 120);
    v22 = *(_OWORD *)(a1 + 104);
    v23 = *(_OWORD *)(a1 + 88);
    v24 = *(_OWORD *)(a1 + 72);
    v25 = *(float32x4_t *)(a1 + 56);
    v31.i64[0] = *(_QWORD *)a1;
    v31.i64[1] = v2;
    v32[0] = v3 & 1;
    v26.i64[0] = v7;
    v26.i64[1] = v6;
    v27[0] = v8 & 1;
    if ((_s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v31, &v26) & 1) == 0)
      goto LABEL_8;
  }
  else
  {
    if ((v9 & 0x8000000000000000) != 0)
      goto LABEL_8;
    v16 = *(_OWORD *)(a2 + 120);
    v17 = *(_OWORD *)(a2 + 104);
    v18 = *(_OWORD *)(a2 + 88);
    v19 = *(_OWORD *)(a2 + 72);
    v20 = *(float32x4_t *)(a2 + 56);
    v21 = *(_OWORD *)(a1 + 120);
    v22 = *(_OWORD *)(a1 + 104);
    v23 = *(_OWORD *)(a1 + 88);
    v24 = *(_OWORD *)(a1 + 72);
    v25 = *(float32x4_t *)(a1 + 56);
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a1 + 40);
    v31.i64[0] = *(_QWORD *)a1;
    v31.i64[1] = v2;
    v32[0] = v3 & 1;
    *(_OWORD *)&v32[8] = *(_OWORD *)(a1 + 24);
    *(_QWORD *)&v32[24] = v13;
    LODWORD(v33) = v4;
    BYTE4(v33) = BYTE4(v4);
    v26.i64[0] = v7;
    v26.i64[1] = v6;
    v27[0] = v8 & 1;
    *(_OWORD *)&v27[8] = v11;
    *(_QWORD *)&v27[24] = v12;
    LODWORD(v28) = v9;
    BYTE4(v28) = BYTE4(v9);
    if (!_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v31, (uint64_t)&v26))
    {
LABEL_8:
      v14 = 0;
      return v14 & 1;
    }
  }
  v31 = v25;
  *(_OWORD *)v32 = v24;
  *(_OWORD *)&v32[16] = v23;
  v33 = v22;
  v34 = v21;
  v35 = v5;
  v26 = v20;
  *(_OWORD *)v27 = v19;
  *(_OWORD *)&v27[16] = v18;
  v28 = v17;
  v29 = v16;
  v30 = v10;
  v14 = _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v31, (uint64_t *)&v26);
  return v14 & 1;
}

uint64_t sub_23798E178(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v7 = *a1;
  v6 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  v10 = *a2;
  v9 = a2[1];
  v11 = *((unsigned __int8 *)a2 + 16);
  if ((_DWORD)v8 == 255)
  {
    if ((_DWORD)v11 == 255)
    {
      a3(*a1, v6, 255);
      a3(v10, v9, 255);
      v18 = 1;
      return v18 & 1;
    }
    goto LABEL_7;
  }
  if ((_DWORD)v11 == 255)
  {
LABEL_7:
    a4(*a2, a2[1], v11);
    a4(v7, v6, v8);
    a3(v7, v6, v8);
    a3(v10, v9, v11);
    v18 = 0;
    return v18 & 1;
  }
  a4(v10, v9, v11);
  a4(v7, v6, v8);
  a4(v10, v9, v11);
  a4(v7, v6, v8);
  Theme.ColorID.rawValue.getter();
  v13 = v12;
  v15 = v14;
  Theme.ColorID.rawValue.getter();
  if (v13 == v17 && v15 == v16)
    v18 = 1;
  else
    v18 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3(v7, v6, v8);
  a3(v10, v9, v11);
  a3(v10, v9, v11);
  a3(v7, v6, v8);
  return v18 & 1;
}

uint64_t _s14CarPlayAssetUI23TickMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    return sub_2379B7E64(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_23798E38C()
{
  unint64_t result;

  result = qword_256824398;
  if (!qword_256824398)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CCCC, &type metadata for DigiBarMarkerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824398);
  }
  return result;
}

unint64_t sub_23798E3D0()
{
  unint64_t result;

  result = qword_2568243A0;
  if (!qword_2568243A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CC7C, &type metadata for DigiBarMarkerType.LabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568243A0);
  }
  return result;
}

unint64_t sub_23798E414()
{
  unint64_t result;

  result = qword_2568243A8;
  if (!qword_2568243A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LabelMarkerConfiguration, &type metadata for LabelMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568243A8);
  }
  return result;
}

unint64_t sub_23798E458()
{
  unint64_t result;

  result = qword_2568243B0;
  if (!qword_2568243B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CC2C, &type metadata for DigiBarMarkerType.TickCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568243B0);
  }
  return result;
}

unint64_t sub_23798E49C()
{
  unint64_t result;

  result = qword_2568243B8;
  if (!qword_2568243B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration, &type metadata for TickMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568243B8);
  }
  return result;
}

unint64_t sub_23798E4E0()
{
  unint64_t result;

  result = qword_2568243C0;
  if (!qword_2568243C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CBDC, &type metadata for DigiBarMarkerType.DotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568243C0);
  }
  return result;
}

unint64_t sub_23798E524()
{
  unint64_t result;

  result = qword_2568243C8;
  if (!qword_2568243C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration, &type metadata for DotMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568243C8);
  }
  return result;
}

unint64_t sub_23798E568()
{
  unint64_t result;

  result = qword_2568243F0;
  if (!qword_2568243F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LabelMarkerConfiguration, &type metadata for LabelMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568243F0);
  }
  return result;
}

unint64_t sub_23798E5AC()
{
  unint64_t result;

  result = qword_2568243F8;
  if (!qword_2568243F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration, &type metadata for TickMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568243F8);
  }
  return result;
}

unint64_t sub_23798E5F0()
{
  unint64_t result;

  result = qword_256824400;
  if (!qword_256824400)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration, &type metadata for DotMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_256824400);
  }
  return result;
}

unint64_t sub_23798E634()
{
  unint64_t result;

  result = qword_256824420;
  if (!qword_256824420)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CB8C, &type metadata for DotMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824420);
  }
  return result;
}

unint64_t sub_23798E678()
{
  unint64_t result;

  result = qword_256824428;
  if (!qword_256824428)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CB3C, &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824428);
  }
  return result;
}

unint64_t sub_23798E6BC()
{
  unint64_t result;

  result = qword_256824430;
  if (!qword_256824430)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CAEC, &type metadata for DotMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824430);
  }
  return result;
}

unint64_t sub_23798E700()
{
  unint64_t result;

  result = qword_256824458;
  if (!qword_256824458)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CA9C, &type metadata for DotMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824458);
  }
  return result;
}

unint64_t sub_23798E744()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256824468;
  if (!qword_256824468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824460);
    v2 = sub_23798E7B0();
    v3[0] = MEMORY[0x24BEE1770];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256824468);
  }
  return result;
}

unint64_t sub_23798E7B0()
{
  unint64_t result;

  result = qword_256824470;
  if (!qword_256824470)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration.Style, &type metadata for DotMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256824470);
  }
  return result;
}

unint64_t sub_23798E7F4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256824480;
  if (!qword_256824480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824460);
    v2 = sub_23798E860();
    v3[0] = MEMORY[0x24BEE1798];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256824480);
  }
  return result;
}

unint64_t sub_23798E860()
{
  unint64_t result;

  result = qword_256824488;
  if (!qword_256824488)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration.Style, &type metadata for DotMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256824488);
  }
  return result;
}

unint64_t sub_23798E8A4()
{
  unint64_t result;

  result = qword_2568244A8;
  if (!qword_2568244A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9CA4C, &type metadata for TickMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568244A8);
  }
  return result;
}

unint64_t sub_23798E8E8()
{
  unint64_t result;

  result = qword_2568244B0;
  if (!qword_2568244B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C9FC, &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568244B0);
  }
  return result;
}

unint64_t sub_23798E92C()
{
  unint64_t result;

  result = qword_2568244B8;
  if (!qword_2568244B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C9AC, &type metadata for TickMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568244B8);
  }
  return result;
}

unint64_t sub_23798E970()
{
  unint64_t result;

  result = qword_2568244E0;
  if (!qword_2568244E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C95C, &type metadata for TickMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568244E0);
  }
  return result;
}

unint64_t sub_23798E9B4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568244F0;
  if (!qword_2568244F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568244E8);
    v2 = sub_23798EA20();
    v3[0] = MEMORY[0x24BEE1770];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568244F0);
  }
  return result;
}

unint64_t sub_23798EA20()
{
  unint64_t result;

  result = qword_2568244F8;
  if (!qword_2568244F8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration.Style, &type metadata for TickMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_2568244F8);
  }
  return result;
}

unint64_t sub_23798EA64()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256824508;
  if (!qword_256824508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568244E8);
    v2 = sub_23798EAD0();
    v3[0] = MEMORY[0x24BEE1798];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256824508);
  }
  return result;
}

unint64_t sub_23798EAD0()
{
  unint64_t result;

  result = qword_256824510;
  if (!qword_256824510)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration.Style, &type metadata for TickMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256824510);
  }
  return result;
}

unint64_t sub_23798EB14()
{
  unint64_t result;

  result = qword_256824520;
  if (!qword_256824520)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C90C, &type metadata for LabelMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824520);
  }
  return result;
}

unint64_t sub_23798EB58()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568216C0;
  if (!qword_2568216C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568216B8);
    v2 = sub_23787AA5C();
    v3[0] = MEMORY[0x24BEE1770];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568216C0);
  }
  return result;
}

unint64_t sub_23798EBC4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2568216D8;
  if (!qword_2568216D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568216B8);
    v2 = sub_23787AB8C();
    v3[0] = MEMORY[0x24BEE1798];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568216D8);
  }
  return result;
}

uint64_t sub_23798EC30(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824528);
    v8 = a2;
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23798EC90()
{
  unint64_t result;

  result = qword_256824550;
  if (!qword_256824550)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C8BC, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824550);
  }
  return result;
}

unint64_t sub_23798ECD4()
{
  unint64_t result;

  result = qword_256824558;
  if (!qword_256824558)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarMarkerType, &type metadata for DigiBarMarkerType);
    atomic_store(result, (unint64_t *)&qword_256824558);
  }
  return result;
}

unint64_t sub_23798ED18()
{
  unint64_t result;

  result = qword_256824568;
  if (!qword_256824568)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarMarkerType, &type metadata for DigiBarMarkerType);
    atomic_store(result, (unint64_t *)&qword_256824568);
  }
  return result;
}

unint64_t sub_23798ED5C()
{
  unint64_t result;

  result = qword_256824578;
  if (!qword_256824578)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C86C, &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824578);
  }
  return result;
}

unint64_t sub_23798EDA0()
{
  unint64_t result;

  result = qword_256824580;
  if (!qword_256824580)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256824580);
  }
  return result;
}

unint64_t sub_23798EDE4()
{
  unint64_t result;

  result = qword_256824588;
  if (!qword_256824588)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_256824588);
  }
  return result;
}

unint64_t sub_23798EE28()
{
  unint64_t result;

  result = qword_256824598;
  if (!qword_256824598)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Instrument.GaugeStyle.DigiBarConfiguration.Style, &type metadata for Instrument.GaugeStyle.DigiBarConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_256824598);
  }
  return result;
}

unint64_t sub_23798EE6C()
{
  unint64_t result;

  result = qword_2568245A0;
  if (!qword_2568245A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245A0);
  }
  return result;
}

unint64_t sub_23798EEB4()
{
  unint64_t result;

  result = qword_2568245A8;
  if (!qword_2568245A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarMarkerType, &type metadata for DigiBarMarkerType);
    atomic_store(result, (unint64_t *)&qword_2568245A8);
  }
  return result;
}

unint64_t sub_23798EEFC()
{
  unint64_t result;

  result = qword_2568245B0;
  if (!qword_2568245B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration.Style, &type metadata for DotMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_2568245B0);
  }
  return result;
}

unint64_t sub_23798EF44()
{
  unint64_t result;

  result = qword_2568245B8;
  if (!qword_2568245B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DotMarkerConfiguration, &type metadata for DotMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245B8);
  }
  return result;
}

unint64_t sub_23798EF8C()
{
  unint64_t result;

  result = qword_2568245C0;
  if (!qword_2568245C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration.Style, &type metadata for TickMarkerConfiguration.Style);
    atomic_store(result, (unint64_t *)&qword_2568245C0);
  }
  return result;
}

unint64_t sub_23798EFD4()
{
  unint64_t result;

  result = qword_2568245C8;
  if (!qword_2568245C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for TickMarkerConfiguration, &type metadata for TickMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245C8);
  }
  return result;
}

unint64_t sub_23798F01C()
{
  unint64_t result;

  result = qword_2568245D0;
  if (!qword_2568245D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for LabelMarkerConfiguration, &type metadata for LabelMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245D0);
  }
  return result;
}

unint64_t sub_23798F064()
{
  unint64_t result;

  result = qword_2568245D8;
  if (!qword_2568245D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245D8);
  }
  return result;
}

unint64_t sub_23798F0AC()
{
  unint64_t result;

  result = qword_2568245E0;
  if (!qword_2568245E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DigiBarSingleMarkerConfiguration, &type metadata for DigiBarSingleMarkerConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568245E0);
  }
  return result;
}

uint64_t sub_23798F108(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32) >> 62;
}

uint64_t sub_23798F114(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_23798F124(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(result + 32) & 0x101 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType()
{
  return &type metadata for DigiBarMarkerType;
}

uint64_t initializeBufferWithCopyOfBuffer for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotMarkerConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 12))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration()
{
  return &type metadata for DotMarkerConfiguration;
}

uint64_t destroy for DotMarkerConfiguration.Style(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 4)
    return sub_23787A134(*(_QWORD *)result, *(_QWORD *)(result + 8), v1);
  return result;
}

uint64_t sub_23798F2E4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 4)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23798F2F8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style()
{
  return &type metadata for DotMarkerConfiguration.Style;
}

uint64_t destroy for TickMarkerConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14CarPlayAssetUI23TickMarkerConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TickMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TickMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TickMarkerConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TickMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration()
{
  return &type metadata for TickMarkerConfiguration;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *((unsigned __int8 *)a2 + 16);
  if (v3 > 4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  else
  {
    v4 = *a2;
    v5 = a2[1];
    sub_23787A11C(*a2, v5, v3);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = v3;
  }
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwca_0(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 4)
  {
    if (v5 <= 4)
    {
      v12 = *(_QWORD *)a2;
      v11 = *((_QWORD *)a2 + 1);
      sub_23787A11C(*(_QWORD *)a2, v11, v5);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v11;
      *(_BYTE *)(a1 + 16) = v5;
      return a1;
    }
LABEL_7:
    v13 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 > 4)
  {
    sub_23787A134(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v4);
    goto LABEL_7;
  }
  v7 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  sub_23787A11C(*(_QWORD *)a2, v6, v5);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v6;
  v10 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23787A134(v8, v9, v10);
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwta_0(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 4)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  if (v5 > 4)
  {
    sub_23787A134(v6, v7, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23787A134(v6, v7, v4);
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  if (v4 + 1 >= 2)
    return v4;
  else
    return 0;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style()
{
  return &type metadata for TickMarkerConfiguration.Style;
}

uint64_t destroy for LabelMarkerConfiguration(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  return a1;
}

uint64_t assignWithTake for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelMarkerConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LabelMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelMarkerConfiguration()
{
  return &type metadata for LabelMarkerConfiguration;
}

uint64_t destroy for DigiBarSingleMarkerConfiguration(uint64_t a1)
{
  return sub_2378DF748(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

uint64_t initializeWithCopy for DigiBarSingleMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(void **)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 136);
  sub_2378DE410(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v12;
  *(_QWORD *)(a1 + 128) = v14;
  *(_QWORD *)(a1 + 136) = v15;
  return a1;
}

uint64_t assignWithCopy for DigiBarSingleMarkerConfiguration(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  *(_QWORD *)(a1 + 45) = *(_QWORD *)((char *)a2 + 45);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  v6 = *((_QWORD *)a2 + 7);
  v7 = *((_QWORD *)a2 + 8);
  v8 = (void *)*((_QWORD *)a2 + 9);
  v9 = *((_QWORD *)a2 + 10);
  v10 = *((_QWORD *)a2 + 11);
  v11 = *((_QWORD *)a2 + 12);
  v12 = *((_QWORD *)a2 + 13);
  v13 = *((_QWORD *)a2 + 14);
  v14 = *((_QWORD *)a2 + 15);
  v21 = *((_QWORD *)a2 + 16);
  v22 = *((_QWORD *)a2 + 17);
  sub_2378DE410(v6, v7, v8, v9, v10);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  v17 = *(void **)(a1 + 72);
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v14;
  *(_QWORD *)(a1 + 128) = v21;
  *(_QWORD *)(a1 + 136) = v22;
  sub_2378DF748(v15, v16, v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for DigiBarSingleMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  v4 = *(_QWORD *)(a2 + 136);
  v5 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v6 = *(void **)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = v4;
  sub_2378DF748(v5, v7, v6, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarSingleMarkerConfiguration(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarSingleMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 45) = 0;
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration()
{
  return &type metadata for DigiBarSingleMarkerConfiguration;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwxx_0(uint64_t a1)
{
  return sub_2378DF748(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t *_s14CarPlayAssetUI17DigiBarMarkerTypeOwcp_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = (void *)a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  sub_2378DE410(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s14CarPlayAssetUI17DigiBarMarkerTypeOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = *a2;
  v4 = a2[1];
  v5 = (void *)a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v18 = a2[9];
  v19 = a2[10];
  sub_2378DE410(*a2, v4, v5, v6, v7);
  v12 = *a1;
  v13 = a1[1];
  v14 = (void *)a1[2];
  v15 = a1[3];
  v16 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v18;
  a1[10] = v19;
  sub_2378DF748(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v3;
  sub_2378DF748(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwet_0(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 32) >> 2) & 0xFFFFFF80 | (*(_QWORD *)(a1 + 32) >> 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double sub_23798FFA0(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.CodingKeys()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LabelMarkerConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_237990098 + 4 * byte_237A9B70F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2379900CC + 4 * byte_237A9B70A[v4]))();
}

uint64_t sub_2379900CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379900D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379900DCLL);
  return result;
}

uint64_t sub_2379900E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379900F0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2379900F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379900FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabelMarkerConfiguration.CodingKeys()
{
  return &type metadata for LabelMarkerConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TickMarkerConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237990164 + 4 * byte_237A9B719[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237990198 + 4 * byte_237A9B714[v4]))();
}

uint64_t sub_237990198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379901A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379901A8);
  return result;
}

uint64_t sub_2379901B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379901BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2379901C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379901C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.CodingKeys()
{
  return &type metadata for TickMarkerConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.CodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.MaskCodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.MaskCodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.ColorCodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.CodingKeys()
{
  return &type metadata for DotMarkerConfiguration.CodingKeys;
}

uint64_t _s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237990270 + 4 * byte_237A9B723[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379902A4 + 4 * byte_237A9B71E[v4]))();
}

uint64_t sub_2379902A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379902AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379902B4);
  return result;
}

uint64_t sub_2379902C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379902C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379902CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379902D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.CodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.MaskCodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.MaskCodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.ColorCodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DigiBarMarkerType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23799035C + 4 * byte_237A9B72D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237990390 + 4 * byte_237A9B728[v4]))();
}

uint64_t sub_237990390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237990398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379903A0);
  return result;
}

uint64_t sub_2379903AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379903B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2379903B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379903C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.CodingKeys()
{
  return &type metadata for DigiBarMarkerType.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.DotCodingKeys()
{
  return &type metadata for DigiBarMarkerType.DotCodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.TickCodingKeys()
{
  return &type metadata for DigiBarMarkerType.TickCodingKeys;
}

uint64_t _s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV26DigiBarMarkerConfigurationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23799043C + 4 * byte_237A9B732[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23799045C + 4 * byte_237A9B737[v4]))();
}

_BYTE *sub_23799043C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23799045C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237990464(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23799046C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237990474(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23799047C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.LabelCodingKeys()
{
  return &type metadata for DigiBarMarkerType.LabelCodingKeys;
}

unint64_t sub_23799049C()
{
  unint64_t result;

  result = qword_2568245E8;
  if (!qword_2568245E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BF04, &type metadata for DigiBarMarkerType.LabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568245E8);
  }
  return result;
}

unint64_t sub_2379904E4()
{
  unint64_t result;

  result = qword_2568245F0;
  if (!qword_2568245F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BFBC, &type metadata for DigiBarMarkerType.TickCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568245F0);
  }
  return result;
}

unint64_t sub_23799052C()
{
  unint64_t result;

  result = qword_2568245F8;
  if (!qword_2568245F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C074, &type metadata for DigiBarMarkerType.DotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568245F8);
  }
  return result;
}

unint64_t sub_237990574()
{
  unint64_t result;

  result = qword_256824600;
  if (!qword_256824600)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C12C, &type metadata for DigiBarMarkerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824600);
  }
  return result;
}

unint64_t sub_2379905BC()
{
  unint64_t result;

  result = qword_256824608;
  if (!qword_256824608)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C1E4, &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824608);
  }
  return result;
}

unint64_t sub_237990604()
{
  unint64_t result;

  result = qword_256824610;
  if (!qword_256824610)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C2EC, &type metadata for DotMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824610);
  }
  return result;
}

unint64_t sub_23799064C()
{
  unint64_t result;

  result = qword_256824618;
  if (!qword_256824618)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C3A4, &type metadata for DotMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824618);
  }
  return result;
}

unint64_t sub_237990694()
{
  unint64_t result;

  result = qword_256824620;
  if (!qword_256824620)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C45C, &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824620);
  }
  return result;
}

unint64_t sub_2379906DC()
{
  unint64_t result;

  result = qword_256824628;
  if (!qword_256824628)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C564, &type metadata for TickMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824628);
  }
  return result;
}

unint64_t sub_237990724()
{
  unint64_t result;

  result = qword_256824630;
  if (!qword_256824630)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C61C, &type metadata for TickMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824630);
  }
  return result;
}

unint64_t sub_23799076C()
{
  unint64_t result;

  result = qword_256824638;
  if (!qword_256824638)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C6D4, &type metadata for LabelMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824638);
  }
  return result;
}

unint64_t sub_2379907B4()
{
  unint64_t result;

  result = qword_256824640;
  if (!qword_256824640)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C78C, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824640);
  }
  return result;
}

unint64_t sub_2379907FC()
{
  unint64_t result;

  result = qword_256824648;
  if (!qword_256824648)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C844, &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824648);
  }
  return result;
}

unint64_t sub_237990844()
{
  unint64_t result;

  result = qword_256824650;
  if (!qword_256824650)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C7B4, &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824650);
  }
  return result;
}

unint64_t sub_23799088C()
{
  unint64_t result;

  result = qword_256824658;
  if (!qword_256824658)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C7DC, &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824658);
  }
  return result;
}

unint64_t sub_2379908D4()
{
  unint64_t result;

  result = qword_256824660;
  if (!qword_256824660)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C6FC, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824660);
  }
  return result;
}

unint64_t sub_23799091C()
{
  unint64_t result;

  result = qword_256824668;
  if (!qword_256824668)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C724, &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824668);
  }
  return result;
}

unint64_t sub_237990964()
{
  unint64_t result;

  result = qword_256824670;
  if (!qword_256824670)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C644, &type metadata for LabelMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824670);
  }
  return result;
}

unint64_t sub_2379909AC()
{
  unint64_t result;

  result = qword_256824678;
  if (!qword_256824678)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C66C, &type metadata for LabelMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824678);
  }
  return result;
}

unint64_t sub_2379909F4()
{
  unint64_t result;

  result = qword_256824680;
  if (!qword_256824680)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C58C, &type metadata for TickMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824680);
  }
  return result;
}

unint64_t sub_237990A3C()
{
  unint64_t result;

  result = qword_256824688;
  if (!qword_256824688)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C5B4, &type metadata for TickMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824688);
  }
  return result;
}

unint64_t sub_237990A84()
{
  unint64_t result;

  result = qword_256824690;
  if (!qword_256824690)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C484, &type metadata for TickMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824690);
  }
  return result;
}

unint64_t sub_237990ACC()
{
  unint64_t result;

  result = qword_256824698;
  if (!qword_256824698)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C4AC, &type metadata for TickMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824698);
  }
  return result;
}

unint64_t sub_237990B14()
{
  unint64_t result;

  result = qword_2568246A0;
  if (!qword_2568246A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C3CC, &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246A0);
  }
  return result;
}

unint64_t sub_237990B5C()
{
  unint64_t result;

  result = qword_2568246A8;
  if (!qword_2568246A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C3F4, &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246A8);
  }
  return result;
}

unint64_t sub_237990BA4()
{
  unint64_t result;

  result = qword_2568246B0;
  if (!qword_2568246B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C4D4, &type metadata for TickMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246B0);
  }
  return result;
}

unint64_t sub_237990BEC()
{
  unint64_t result;

  result = qword_2568246B8;
  if (!qword_2568246B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C4FC, &type metadata for TickMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246B8);
  }
  return result;
}

unint64_t sub_237990C34()
{
  unint64_t result;

  result = qword_2568246C0;
  if (!qword_2568246C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C314, &type metadata for DotMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246C0);
  }
  return result;
}

unint64_t sub_237990C7C()
{
  unint64_t result;

  result = qword_2568246C8;
  if (!qword_2568246C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C33C, &type metadata for DotMarkerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246C8);
  }
  return result;
}

unint64_t sub_237990CC4()
{
  unint64_t result;

  result = qword_2568246D0;
  if (!qword_2568246D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C20C, &type metadata for DotMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246D0);
  }
  return result;
}

unint64_t sub_237990D0C()
{
  unint64_t result;

  result = qword_2568246D8;
  if (!qword_2568246D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C234, &type metadata for DotMarkerConfiguration.Style.MaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246D8);
  }
  return result;
}

unint64_t sub_237990D54()
{
  unint64_t result;

  result = qword_2568246E0;
  if (!qword_2568246E0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C154, &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246E0);
  }
  return result;
}

unint64_t sub_237990D9C()
{
  unint64_t result;

  result = qword_2568246E8;
  if (!qword_2568246E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C17C, &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246E8);
  }
  return result;
}

unint64_t sub_237990DE4()
{
  unint64_t result;

  result = qword_2568246F0;
  if (!qword_2568246F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C25C, &type metadata for DotMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246F0);
  }
  return result;
}

unint64_t sub_237990E2C()
{
  unint64_t result;

  result = qword_2568246F8;
  if (!qword_2568246F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C284, &type metadata for DotMarkerConfiguration.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568246F8);
  }
  return result;
}

unint64_t sub_237990E74()
{
  unint64_t result;

  result = qword_256824700;
  if (!qword_256824700)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BFE4, &type metadata for DigiBarMarkerType.DotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824700);
  }
  return result;
}

unint64_t sub_237990EBC()
{
  unint64_t result;

  result = qword_256824708;
  if (!qword_256824708)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C00C, &type metadata for DigiBarMarkerType.DotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824708);
  }
  return result;
}

unint64_t sub_237990F04()
{
  unint64_t result;

  result = qword_256824710;
  if (!qword_256824710)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BF2C, &type metadata for DigiBarMarkerType.TickCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824710);
  }
  return result;
}

unint64_t sub_237990F4C()
{
  unint64_t result;

  result = qword_256824718;
  if (!qword_256824718)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BF54, &type metadata for DigiBarMarkerType.TickCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824718);
  }
  return result;
}

unint64_t sub_237990F94()
{
  unint64_t result;

  result = qword_256824720;
  if (!qword_256824720)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BE74, &type metadata for DigiBarMarkerType.LabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824720);
  }
  return result;
}

unint64_t sub_237990FDC()
{
  unint64_t result;

  result = qword_256824728;
  if (!qword_256824728)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9BE9C, &type metadata for DigiBarMarkerType.LabelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824728);
  }
  return result;
}

unint64_t sub_237991024()
{
  unint64_t result;

  result = qword_256824730;
  if (!qword_256824730)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C09C, &type metadata for DigiBarMarkerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824730);
  }
  return result;
}

unint64_t sub_23799106C()
{
  unint64_t result;

  result = qword_256824738;
  if (!qword_256824738)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9C0C4, &type metadata for DigiBarMarkerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824738);
  }
  return result;
}

uint64_t sub_2379910B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7630692 && a2 == 0xE300000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1801677172 && a2 == 0xE400000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2379911DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656C797473 && a2 == 0xE600000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2379912BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237991394(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_237991534(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953394534 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEC00000073444972 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB18E0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB1900 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB1920 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2379917B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23799188C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(void **)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  sub_2378DF748(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  sub_2378DF748(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t (*LayoutBackgroundViewBuilder.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(uint64_t a1)@<X8>))(uint64_t a1)
{
  uint64_t (*result)(uint64_t);

  result = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)result + 2) = a3;
  *((_QWORD *)result + 3) = a4;
  *((_QWORD *)result + 4) = a1;
  *((_QWORD *)result + 5) = a2;
  *a5 = sub_237991A6C;
  a5[1] = result;
  return result;
}

uint64_t sub_2379919C4(uint64_t a1)
{
  __n128 v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(_QWORD *, __n128);
  _QWORD v6[2];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = v2[1];
  v6[0] = *v2;
  v6[1] = v3;
  v4(v6, v1);
  return sub_237A873C8();
}

uint64_t sub_237991A48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237991A6C(uint64_t a1)
{
  return sub_2379919C4(a1);
}

ValueMetadata *type metadata accessor for LayoutBackgroundViewBuilder()
{
  return &type metadata for LayoutBackgroundViewBuilder;
}

unint64_t sub_237991A8C()
{
  unint64_t result;

  result = qword_256824740;
  if (!qword_256824740)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DocumentConfigurationError, &type metadata for DocumentConfigurationError);
    atomic_store(result, (unint64_t *)&qword_256824740);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentConfigurationError()
{
  return &type metadata for DocumentConfigurationError;
}

uint64_t sub_237991B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_237991B18(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_237A87530();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_237A87530();
}

uint64_t Carousel.init(model:style:content:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_BYTE *)a2 + 16);
  KeyPath = swift_getKeyPath();
  result = sub_237996890(a1, v13, v14, v15);
  *(_QWORD *)a5 = KeyPath;
  *(_WORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = result;
  *(_QWORD *)(a5 + 24) = v17;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  *(_QWORD *)(a5 + 48) = v9;
  *(_QWORD *)(a5 + 56) = v10;
  *(_BYTE *)(a5 + 64) = v11;
  *(_QWORD *)(a5 + 72) = 0x4024000000000000;
  return result;
}

uint64_t CarouselModel.__allocating_init(items:activeItem:alwaysHidesPlatter:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;

  swift_allocObject();
  v6 = sub_23799A250(a1, a2, a3);
  v7 = sub_237A87E0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
  return v6;
}

uint64_t sub_237991DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_237954A90();
  result = sub_237A86B88();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_237991E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_237954A90();
  result = sub_237A86B88();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_237991E74()
{
  sub_237954A90();
  return sub_237A86B94();
}

uint64_t sub_237991EC4()
{
  sub_237954A90();
  return sub_237A86B94();
}

BOOL static PageControlPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PageControlPosition.hash(into:)()
{
  return sub_237A885E0();
}

uint64_t PageControlPosition.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t static CarouselModel.Direction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v34 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v30 = (char *)&v29 - v9;
  v11 = type metadata accessor for CarouselModel.Direction(0, a3, a4, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v33 = (char *)&v29 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v32 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v15 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v17 = (char *)&v29 - v16;
  v19 = (char *)&v29 + *(int *)(v18 + 48) - v16;
  v31 = v12;
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v20((char *)&v29 - v16, a1, v11, v15);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v19, v34, v11);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v22 = v21(v17, 2, AssociatedTypeWitness);
  if (v22)
  {
    if (v22 == 1)
    {
      if (v21(v19, 2, AssociatedTypeWitness) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v21(v19, 2, AssociatedTypeWitness) == 2)
    {
LABEL_8:
      v23 = 1;
LABEL_11:
      v24 = v31;
      goto LABEL_12;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v20)(v33, v17, v11);
    if (!v21(v19, 2, AssociatedTypeWitness))
    {
      v25 = v30;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v30, v19, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      v26 = v33;
      v23 = sub_237A877DC();
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v27(v25, AssociatedTypeWitness);
      v27(v26, AssociatedTypeWitness);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v33, AssociatedTypeWitness);
  }
LABEL_9:
  v23 = 0;
  v24 = v32;
  v11 = TupleTypeMetadata2;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v11);
  return v23 & 1;
}

uint64_t sub_237992218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, a2, v5);
  sub_23799A080((uint64_t)v7, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_2379922B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CarouselModel.Direction.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2379922BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237992424();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_237992398();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_237992EC0();
}

uint64_t sub_237992398()
{
  uint64_t v0;
  uint64_t v2;
  char v3;

  v0 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v0);
  sub_237A87C68();
  if (v3)
    return 0;
  else
    return v2;
}

uint64_t sub_237992424()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  return swift_release();
}

uint64_t sub_2379924B4()
{
  swift_beginAccess();
  sub_237A86720();
  sub_237A866D8();
  return swift_endAccess();
}

uint64_t CarouselModel.alwaysHidesPlatter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
}

uint64_t sub_23799252C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  __int128 v10;

  v10 = *(_OWORD *)(a2 + a1 - 16);
  v4 = sub_23799AAC0();
  v5 = v4;
  v7 = v6;
  if (v4)
  {
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;
  return sub_2378A2BF4(v5);
}

uint64_t sub_2379925B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_2378A2BF4(v4);
  return sub_237992670((uint64_t)v8, v7);
}

uint64_t sub_237992640()
{
  uint64_t v0;

  v0 = sub_23799AAC0();
  sub_2378A2BF4(v0);
  return v0;
}

uint64_t sub_237992670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_2378A2C04(v4);
}

uint64_t (*sub_237992690(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  sub_2378A2BF4(v4);
  return sub_2379926D4;
}

uint64_t sub_2379926D4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    sub_2378A2BF4(*a1);
    v5 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
    v6 = *v5;
    *v5 = v3;
    v5[1] = v2;
    sub_2378A2C04(v6);
    v7 = v3;
  }
  else
  {
    v8 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
    v7 = *v8;
    *v8 = v3;
    v8[1] = v2;
  }
  return sub_2378A2C04(v7);
}

uint64_t sub_237992744@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  __int128 v10;

  v10 = *(_OWORD *)(a2 + a1 - 16);
  v4 = sub_23799AAD4();
  v5 = v4;
  v7 = v6;
  if (v4)
  {
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;
  return sub_2378A2BF4(v5);
}

uint64_t sub_2379927CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_2378A2BF4(v4);
  return sub_237992888((uint64_t)v8, v7);
}

uint64_t sub_237992858()
{
  uint64_t v0;

  v0 = sub_23799AAD4();
  sub_2378A2BF4(v0);
  return v0;
}

uint64_t sub_237992888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_2378A2C04(v4);
}

uint64_t (*sub_2379928A8(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  sub_2378A2BF4(v4);
  return sub_2379928EC;
}

uint64_t sub_2379928EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    sub_2378A2BF4(*a1);
    v5 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
    v6 = *v5;
    *v5 = v3;
    v5[1] = v2;
    sub_2378A2C04(v6);
    v7 = v3;
  }
  else
  {
    v8 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
    v7 = *v8;
    *v8 = v3;
    v8[1] = v2;
  }
  return sub_2378A2C04(v7);
}

uint64_t sub_23799295C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  __int128 v10;

  v10 = *(_OWORD *)(a2 + a1 - 16);
  v4 = sub_23799AAE8();
  v5 = v4;
  v7 = v6;
  if (v4)
  {
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;
  return sub_2378A2BF4(v5);
}

uint64_t sub_2379929E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_23799E438;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_2378A2BF4(v4);
  return sub_237992AA0((uint64_t)v8, v7);
}

uint64_t sub_237992A70()
{
  uint64_t v0;

  v0 = sub_23799AAE8();
  sub_2378A2BF4(v0);
  return v0;
}

uint64_t sub_237992AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_2378A2C04(v6);
}

uint64_t (*sub_237992AFC())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_237992B40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  __int128 v10;

  v10 = *(_OWORD *)(a2 + a1 - 16);
  v4 = sub_23799AB2C();
  v5 = v4;
  v7 = v6;
  if (v4)
  {
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_23799DE3C;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;
  return sub_2378A2BF4(v5);
}

uint64_t sub_237992BC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_23799DE3C;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_2378A2BF4(v4);
  return sub_237992C84((uint64_t)v8, v7);
}

uint64_t sub_237992C54()
{
  uint64_t v0;

  v0 = sub_23799AB2C();
  sub_2378A2BF4(v0);
  return v0;
}

uint64_t sub_237992C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_2378A2C04(v6);
}

uint64_t (*sub_237992CE0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_237992D24()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_237992DAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_237992E38()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_237992EC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_237992F4C()
{
  return sub_237992F88();
}

uint64_t sub_237992F60()
{
  return sub_237993024();
}

uint64_t sub_237992F74()
{
  return sub_237992F88();
}

uint64_t sub_237992F88()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_237993010()
{
  return sub_237993024();
}

uint64_t sub_237993024()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t CarouselModel.init(items:activeItem:alwaysHidesPlatter:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23799A250(a1, a2, a3);
  v5 = sub_237A87E0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  return v4;
}

uint64_t sub_237993104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v4 = sub_237A87E0C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - v12;
  sub_237A87F68();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
  v14 = *(_QWORD *)(a3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, a3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_237A87F68();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, a3);
    swift_getAssociatedConformanceWitness();
    v16 = sub_237A877DC();
    v17 = *(void (**)(char *, uint64_t))(v18 + 8);
    v17(v10, AssociatedTypeWitness);
    v17(v13, AssociatedTypeWitness);
    return v16 & 1;
  }
  return result;
}

uint64_t sub_2379932D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a1;
  v33 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v30 = v3;
  v31 = (char *)&v30 - v6;
  v8 = type metadata accessor for CarouselModel.Direction(0, v4, v3, v7);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - v10;
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237992424();
  v32 = v2;
  sub_237992D24();
  v16 = sub_237992398();
  v17 = v4;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v4);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v19 = v34;
  v18(v11, v35, v8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, AssociatedTypeWitness);
  if (!(_DWORD)result)
  {
    v23 = v31;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v31, v11, AssociatedTypeWitness);
    v36 = sub_237992D24();
    MEMORY[0x24BDAC7A8](v36);
    v24 = v30;
    *(&v30 - 4) = v17;
    *(&v30 - 3) = v24;
    *(&v30 - 2) = (uint64_t)v23;
    v25 = sub_237A87B30();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v25);
    sub_237A879A4();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v23, AssociatedTypeWitness);
  }
  if ((_DWORD)result != 1)
  {
    if (!__OFADD__(v16, 1))
    {
      sub_237992D24();
      v26 = MEMORY[0x23B81E754]();
      swift_bridgeObjectRelease();
      v27 = sub_237992D24();
      if (v16 + 1 >= v26)
      {
        v36 = v27;
        v29 = sub_237A87B30();
        MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v29);
        sub_237A87C8C();
        return swift_bridgeObjectRelease();
      }
LABEL_9:
      v28 = v33;
      sub_237A87B48();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v4);
    }
LABEL_14:
    __break(1u);
    return result;
  }
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = sub_237992D24();
  if (((v16 - 1) & 0x8000000000000000) == 0)
    goto LABEL_9;
  v36 = v21;
  v22 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12B0], v22);
  sub_237A87740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23799361C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD);
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  void (*v52)(uint64_t *, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  v3 = v2;
  v58 = a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = sub_237A87E0C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a2, v7, v15);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6);
  v57 = v11;
  if (v18 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = v5;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v10, v6);
    v20 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 144));
    v21 = swift_beginAccess();
    v62 = *v20;
    MEMORY[0x24BDAC7A8](v21);
    v22 = *(_QWORD *)(v5 + 88);
    *(&v53 - 4) = v6;
    *(&v53 - 3) = v22;
    v54 = v22;
    v55 = v5;
    *(&v53 - 2) = (uint64_t)v17;
    v23 = sub_237A87B30();
    swift_bridgeObjectRetain();
    MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v23);
    sub_237A87C68();
    swift_bridgeObjectRelease();
    if (v61 == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v6);
      v19 = v55;
    }
    else
    {
      v59 = sub_237992D24();
      MEMORY[0x24BDAC7A8](v59);
      v24 = v54;
      *(&v53 - 4) = v6;
      *(&v53 - 3) = v24;
      *(&v53 - 2) = (uint64_t)v17;
      sub_237A87C68();
      swift_bridgeObjectRelease();
      if (v64 != 1)
      {
        v53 = v63;
        v45 = v56;
        v44 = v57;
        v46 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
        v47 = v58;
        v46(v56, v58, v6);
        swift_beginAccess();
        sub_237A87B18();
        v48 = swift_endAccess();
        sub_2379922BC(v48);
        v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v45, v47, v6);
        MEMORY[0x24BDAC7A8](v49);
        v50 = v54;
        *(&v53 - 2) = v6;
        *(&v53 - 1) = v50;
        KeyPath = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](KeyPath);
        *(&v53 - 2) = v6;
        *(&v53 - 1) = v50;
        swift_getKeyPath();
        v52 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
        v27 = v45;
        sub_237A87B18();
        v52(&v60, 0);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v6);
        goto LABEL_13;
      }
      v11 = v57;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v6);
      v19 = v55;
    }
  }
  v25 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 144));
  swift_beginAccess();
  v63 = *v25;
  v26 = sub_237A87B30();
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v26);
  sub_237A87C68();
  swift_bridgeObjectRelease();
  v27 = v56;
  if ((v61 & 1) != 0 || (v63 = sub_237992D24(), sub_237A87C68(), swift_bridgeObjectRelease(), v61 == 1))
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v29 = v58;
    v28(v27, v58, v6);
    swift_beginAccess();
    sub_237A87B0C();
    v30 = swift_endAccess();
    sub_2379922BC(v30);
    v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v27, v29, v6);
    MEMORY[0x24BDAC7A8](v31);
    v32 = *(_QWORD *)(v19 + 88);
    *(&v53 - 2) = v6;
    *(&v53 - 1) = v32;
    v33 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v33);
    *(&v53 - 2) = v6;
    *(&v53 - 1) = v32;
    swift_getKeyPath();
    v34 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
    sub_237A87B0C();
  }
  else
  {
    v35 = v60;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v37 = v58;
    v36(v27, v58, v6);
    swift_beginAccess();
    sub_237A87B0C();
    v38 = swift_endAccess();
    sub_2379922BC(v38);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v27, v37, v6);
    if (__OFADD__(v35, 1))
    {
      __break(1u);
      return result;
    }
    MEMORY[0x24BDAC7A8](result);
    v40 = *(_QWORD *)(v19 + 88);
    *(&v53 - 2) = v6;
    *(&v53 - 1) = v40;
    v41 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v41);
    *(&v53 - 2) = v6;
    *(&v53 - 1) = v40;
    swift_getKeyPath();
    v34 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
    sub_237A87B18();
  }
  v34(&v60, 0);
  swift_release();
  swift_release();
LABEL_13:
  swift_beginAccess();
  v42 = swift_bridgeObjectRetain();
  v43 = MEMORY[0x23B81E754](v42, v6);
  swift_bridgeObjectRelease();
  if (v43 == 1)
    sub_23799A92C(v58);
  sub_237992424();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_237992398();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v6);
  return sub_237992EC0();
}

uint64_t sub_237993DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, uint64_t);
  char v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t TupleTypeMetadata2;
  uint64_t v59;
  uint64_t v60;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v48 = (char *)v47 - v7;
  v8 = sub_237A87E0C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v52 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v55 = (char *)v47 - v9;
  v10 = sub_237A87E0C();
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v47 - v11;
  v54 = v8;
  v57 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v47 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v47 - v19;
  v56 = (char *)v47 - v19;
  v53 = v3;
  sub_237A87F68();
  v59 = v6;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v22 = 1;
  v21(v20, 0, 1, AssociatedTypeWitness);
  v23 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 144));
  swift_beginAccess();
  v60 = *v23;
  v24 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12B0], v24);
  sub_237A87740();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v4);
  v47[1] = v4;
  if (v26 == 1)
  {
    v25 = v49;
    v27 = v50;
  }
  else
  {
    sub_237A87F68();
    v22 = 0;
    v27 = v4;
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
  v21(v17, v22, 1, AssociatedTypeWitness);
  v28 = v57;
  v29 = v55;
  v30 = &v55[*(int *)(TupleTypeMetadata2 + 48)];
  v31 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v32 = AssociatedTypeWitness;
  v33 = v56;
  v34 = v17;
  v35 = v54;
  v31(v55, v56, v54);
  v31(v30, v34, v35);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
  if (v36(v29, 1, v32) != 1)
  {
    v39 = v51;
    v31(v51, v29, v35);
    v40 = v32;
    if (v36(v30, 1, v32) != 1)
    {
      v42 = v59;
      v43 = v48;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v48, v30, v40);
      swift_getAssociatedConformanceWitness();
      v38 = sub_237A877DC();
      v44 = *(void (**)(char *, uint64_t))(v42 + 8);
      v44(v43, v40);
      v45 = *(void (**)(char *, uint64_t))(v57 + 8);
      v45(v34, v35);
      v45(v56, v35);
      v44(v39, v40);
      v45(v29, v35);
      return v38 & 1;
    }
    v41 = *(void (**)(char *, uint64_t))(v57 + 8);
    v41(v34, v35);
    v41(v56, v35);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v32);
    goto LABEL_9;
  }
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v34, v35);
  v37(v33, v35);
  if (v36(v30, 1, v32) != 1)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v52 + 8))(v29, TupleTypeMetadata2);
    v38 = 0;
    return v38 & 1;
  }
  v37(v29, v35);
  v38 = 1;
  return v38 & 1;
}

uint64_t sub_23799424C(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  void (*v34)(char *, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[40];
  uint64_t v67;

  v51 = a3;
  v60 = a2;
  v5 = (_QWORD *)*v3;
  v54 = sub_237A86E94();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v5[10];
  v50 = sub_237A87E0C();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v55 = (uint64_t *)((char *)&v47 - v8);
  v58 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v5[11];
  v13 = type metadata accessor for CarouselModel.Direction(0, v7, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v47 - v15;
  v16 = sub_237A87E0C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v61 = v3;
  v62 = (uint64_t)&v47 - v21;
  v22 = (_QWORD *)((char *)v3 + v5[18]);
  swift_beginAccess();
  v67 = *v22;
  v63 = v7;
  v64 = v11;
  v59 = v11;
  v23 = a1;
  v65 = a1;
  v24 = sub_237A87B30();
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v24);
  LOBYTE(v22) = sub_237A879D4();
  result = swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
    v26 = v62;
    sub_237994910(v60, (uint64_t)v61, v23, v62);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v26, v16);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
    v48 = v16;
    if (v27 == 1)
    {
      v60 = *(_QWORD *)(v17 + 8);
      v28 = ((uint64_t (*)(char *, uint64_t))v60)(v19, v16);
      v57 = (char *)&v47;
      MEMORY[0x24BDAC7A8](v28);
      v29 = v59;
      *(&v47 - 4) = v7;
      *(&v47 - 3) = v29;
      *(&v47 - 2) = v23;
      swift_beginAccess();
      v58 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12B8], v24);
      MEMORY[0x23B81FA98](MEMORY[0x24BEE12E8], v24);
      sub_237A87CF8();
      v30 = swift_endAccess();
      v31 = sub_2379922BC(v30);
      v57 = (char *)&v47;
      MEMORY[0x24BDAC7A8](v31);
      *(&v47 - 4) = v7;
      *(&v47 - 3) = v29;
      *(&v47 - 2) = v23;
      MEMORY[0x24BDAC7A8](v32);
      *(&v47 - 2) = v7;
      *(&v47 - 1) = v29;
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(&v47 - 2) = v7;
      *(&v47 - 1) = v29;
      swift_getKeyPath();
      v34 = (void (*)(char *, _QWORD))sub_237A866F0();
      sub_237A87CF8();
      v34(v66, 0);
      swift_release();
      swift_release();
      return ((uint64_t (*)(uint64_t, uint64_t))v60)(v62, v48);
    }
    else
    {
      v60 = v17;
      v35 = v23;
      v36 = (uint64_t)v57;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v57, v19, v13);
      v37 = (uint64_t)v55;
      v38 = (uint64_t)v61;
      sub_23799504C(v36, (uint64_t)v55);
      v39 = v58;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v37, 1, v7) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v48);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v37, v50);
      }
      else
      {
        v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 32))(v56, v37, v7);
        v41 = v51;
        v47 = v14;
        if ((v51 & 1) != 0)
          v40 = swift_retain();
        v55 = &v47;
        MEMORY[0x24BDAC7A8](v40);
        *(&v47 - 4) = v35;
        *((_BYTE *)&v47 - 24) = v41 & 1;
        v42 = v56;
        *(&v47 - 2) = v38;
        *(&v47 - 1) = (uint64_t)v42;
        v43 = swift_allocObject();
        swift_weakInit();
        v44 = (_QWORD *)swift_allocObject();
        v45 = v59;
        v44[2] = v7;
        v44[3] = v45;
        v44[4] = v43;
        swift_retain();
        v46 = v52;
        sub_237A86E7C();
        sub_237A8690C();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v54);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v13);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v48);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v7);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_237994910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (**v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void (**v25)(char *, uint64_t);
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v58 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v63 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v60 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v53 - v11;
  v12 = sub_237A87E0C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v53 - v17;
  v19 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v56 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v62 = (char *)&v53 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v18, a1, v12, v23);
  v25 = (void (**)(char *, uint64_t))v19[6];
  v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v18, 1, v7);
  v57 = a2;
  if (v26 == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
LABEL_5:
    v33 = v63;
    v35 = v60;
    v34 = v61;
    v36 = v59;
    goto LABEL_6;
  }
  v55 = a4;
  v27 = v62;
  ((void (*)(char *, char *, uint64_t))v19[4])(v62, v18, v7);
  v28 = *(_QWORD *)(*(_QWORD *)a2 + 144);
  v54 = v25;
  v29 = (uint64_t *)(a2 + v28);
  v30 = swift_beginAccess();
  v53 = (uint64_t)&v53;
  v64 = *v29;
  MEMORY[0x24BDAC7A8](v30);
  v31 = v63;
  *(&v53 - 4) = v7;
  *(&v53 - 3) = v31;
  *(&v53 - 2) = (uint64_t)v27;
  v32 = sub_237A87B30();
  swift_bridgeObjectRetain();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v32);
  sub_237A879A4();
  swift_bridgeObjectRelease();
  LODWORD(v29) = ((uint64_t (*)(char *, uint64_t, uint64_t))v54)(v15, 1, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((_DWORD)v29 == 1)
  {
    v19[1](v62, v7);
    a4 = v55;
    goto LABEL_5;
  }
  v54 = v19;
  v36 = v59;
  v47 = v63;
  sub_237A87F68();
  v35 = v60;
  sub_237A87F68();
  swift_getAssociatedConformanceWitness();
  v48 = sub_237A877DC();
  v34 = v61;
  v49 = *(void (**)(char *, uint64_t))(v61 + 8);
  v49(v35, AssociatedTypeWitness);
  v49(v36, AssociatedTypeWitness);
  v33 = v47;
  if ((v48 & 1) == 0)
  {
    v50 = v55;
    v51 = v62;
    sub_237A87F68();
    v54[1](v51, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v50, 0, 2, AssociatedTypeWitness);
    v42 = type metadata accessor for CarouselModel.Direction(0, v7, v47, v52);
    v43 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
    v44 = v50;
    return v43(v44, 0, 1, v42);
  }
  v19 = v54;
  v54[1](v62, v7);
  a4 = v55;
LABEL_6:
  sub_237A87F68();
  v37 = v56;
  sub_237992424();
  sub_237A87F68();
  v19[1](v37, v7);
  swift_getAssociatedConformanceWitness();
  v38 = sub_237A877DC();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v35, AssociatedTypeWitness);
  v39(v36, AssociatedTypeWitness);
  if ((v38 & 1) == 0)
  {
    v45 = type metadata accessor for CarouselModel.Direction(0, v7, v33, v40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(a4, 1, 1, v45);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(a4, 2, 2, AssociatedTypeWitness);
  v42 = type metadata accessor for CarouselModel.Direction(0, v7, v33, v41);
  v43 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v44 = a4;
  return v43(v44, 0, 1, v42);
}

uint64_t sub_237994E20(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;

  v17 = a2;
  v5 = *a3;
  v6 = *(_QWORD *)(*a3 + 80);
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799A92C(v8);
  v9 = *(_QWORD *)(v5 + 88);
  v26 = v6;
  v27 = v9;
  v28 = a1;
  swift_beginAccess();
  v10 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12B8], v10);
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E8], v10);
  sub_237A87CF8();
  v16 = v3;
  v11 = swift_endAccess();
  sub_2379922BC(v11);
  v23 = v6;
  v24 = v9;
  v25 = a1;
  v21 = v6;
  v22 = v9;
  swift_getKeyPath();
  v19 = v6;
  v20 = v9;
  swift_getKeyPath();
  v12 = (void (*)(_BYTE *, _QWORD))sub_237A866F0();
  sub_237A87CF8();
  v12(v29, 0);
  swift_release();
  swift_release();
  sub_237992F60();
  sub_237993010();
  v13 = (uint64_t)v18;
  sub_237992424();
  sub_237996350(v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v13, v6);
}

uint64_t sub_23799504C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t *, _QWORD);
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  void (*v53)(uint64_t *, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *, _QWORD);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t AssociatedTypeWitness;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;

  v62 = a1;
  v63 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v64 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v60 = (char *)&v59 - v5;
  v61 = type metadata accessor for CarouselModel.Direction(0, v3, v4, v6);
  v7 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v9 = (char *)&v59 - v8;
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v67 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v59 - v14;
  sub_237992D24();
  v16 = MEMORY[0x23B81E754]();
  swift_bridgeObjectRelease();
  if (v16 < 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v63, 1, 1, v3);
  sub_237992424();
  v68 = v2;
  sub_237992D24();
  v17 = sub_237992398();
  swift_bridgeObjectRelease();
  v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v70 = v3;
  v65 = v18;
  v18(v15, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v62, v61);
  v19 = v64;
  v20 = AssociatedTypeWitness;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v9, 2, AssociatedTypeWitness);
  v66 = v10;
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
      v22 = -1;
    else
      v22 = 1;
    v23 = v70;
    goto LABEL_28;
  }
  v24 = v20;
  v25 = v60;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v60, v9, v24);
  v73 = sub_237992D24();
  MEMORY[0x24BDAC7A8](v73);
  v23 = v70;
  *(&v59 - 4) = v70;
  *(&v59 - 3) = v4;
  *(&v59 - 2) = (uint64_t)v25;
  v26 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v26);
  sub_237A87C68();
  result = swift_bridgeObjectRelease();
  if ((v72 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v25, AssociatedTypeWitness);
    v22 = 0;
    goto LABEL_28;
  }
  v27 = AssociatedTypeWitness;
  v28 = v71;
  v29 = v71 - v17;
  v30 = __OFSUB__(v71, v17);
  if (v71 >= v17)
  {
    if (v30)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    sub_237992D24();
    v35 = MEMORY[0x23B81E754]();
    result = swift_bridgeObjectRelease();
    v36 = v29 - v35;
    if (__OFSUB__(v29, v35))
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    v33 = v28 - v17;
    v29 -= v35;
    result = (uint64_t)v60;
    v34 = v36;
    if ((v36 & 0x8000000000000000) == 0)
      goto LABEL_23;
  }
  else
  {
    if (v30)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    sub_237992D24();
    v31 = MEMORY[0x23B81E754]();
    result = swift_bridgeObjectRelease();
    v32 = v28 + v31;
    if (__OFADD__(v28, v31))
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v33 = v32 - v17;
    result = (uint64_t)v60;
    if (__OFSUB__(v32, v17))
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v34 = v28 - v17;
    if ((v29 & 0x8000000000000000) == 0)
      goto LABEL_23;
  }
  v34 = -v29;
  if (!__OFSUB__(0, v29))
  {
LABEL_23:
    v37 = v33;
    if (v33 < 0)
    {
      v37 = -v33;
      if (__OFSUB__(0, v33))
        goto LABEL_61;
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(result, v27);
    if (v34 >= v37)
      v22 = v33;
    else
      v22 = v29;
LABEL_28:
    v38 = v17 + v22;
    v39 = __OFADD__(v17, v22);
    if (__OFADD__(v17, v22))
    {
LABEL_51:
      __break(1u);
    }
    else
    {
      v62 = v22;
      v40 = v17 + v22;
      if (v38 < 0)
        goto LABEL_37;
      sub_237992D24();
      v41 = MEMORY[0x23B81E754]();
      result = swift_bridgeObjectRelease();
      if (v38 >= v41)
      {
        v42 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        sub_237992D24();
        v43 = MEMORY[0x23B81E754]();
        result = swift_bridgeObjectRelease();
        v44 = __OFSUB__(v42, v43);
        v40 = v42 - v43;
        if (v44)
        {
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v40)
        {
LABEL_37:
          v64 = v4;
          do
          {
            AssociatedTypeWitness = v17;
            MEMORY[0x24BDAC7A8](result);
            *(&v59 - 2) = v23;
            *(&v59 - 1) = v4;
            KeyPath = swift_getKeyPath();
            MEMORY[0x24BDAC7A8](KeyPath);
            *(&v59 - 2) = v23;
            *(&v59 - 1) = v4;
            swift_getKeyPath();
            v52 = v4;
            if (v40 < 0)
            {
              v53 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
              v54 = sub_237A87B30();
              MEMORY[0x23B81FA98](MEMORY[0x24BEE12B0], v54);
              MEMORY[0x23B81FA98](MEMORY[0x24BEE12E8], v54);
              sub_237A87CEC();
              v53(&v71, 0);
              swift_release();
              swift_release();
              v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v66 + 16))(v67, v15, v70);
              MEMORY[0x24BDAC7A8](v55);
              *(&v59 - 2) = v70;
              *(&v59 - 1) = v52;
              v56 = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](v56);
              *(&v59 - 2) = v70;
              *(&v59 - 1) = v52;
              swift_getKeyPath();
              v57 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
              v23 = v70;
              sub_237A87B18();
              v57(&v71, 0);
              swift_release();
              swift_release();
              result = v65(v15, v23);
              v17 = AssociatedTypeWitness + 1;
              if (__OFADD__(AssociatedTypeWitness, 1))
                goto LABEL_50;
              v50 = 1;
            }
            else
            {
              v45 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
              v46 = sub_237A87B30();
              MEMORY[0x23B81FA98](MEMORY[0x24BEE12E8], v46);
              sub_237A87CD4();
              v45(&v71, 0);
              swift_release();
              swift_release();
              v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v66 + 16))(v67, v15, v70);
              MEMORY[0x24BDAC7A8](v47);
              *(&v59 - 2) = v70;
              *(&v59 - 1) = v4;
              v48 = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](v48);
              *(&v59 - 2) = v70;
              *(&v59 - 1) = v4;
              swift_getKeyPath();
              v49 = (void (*)(uint64_t *, _QWORD))sub_237A866F0();
              v23 = v70;
              sub_237A87B0C();
              v49(&v71, 0);
              swift_release();
              swift_release();
              result = v65(v15, v23);
              v17 = AssociatedTypeWitness - 1;
              if (__OFSUB__(AssociatedTypeWitness, 1))
              {
                __break(1u);
LABEL_50:
                __break(1u);
                goto LABEL_51;
              }
              v50 = -1;
            }
            v40 += v50;
            v4 = v64;
          }
          while (v40);
          v39 = __OFADD__(v17, v62);
        }
      }
      if (!v39)
      {
        sub_237992D24();
        v58 = v63;
        sub_237A87B48();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v58, 0, 1, v23);
      }
    }
    __break(1u);
    goto LABEL_53;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_237995880(void (*a1)(char *, uint64_t), int a2)
{
  void (*v2)(char *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (**v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(char *, uint64_t);
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (**v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);

  v38 = a2;
  v45 = a1;
  v3 = *(_QWORD *)v2;
  v4 = sub_237A86E94();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 80);
  v44 = *(void (***)(char *, uint64_t))(v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - v10;
  v12 = sub_237A87E0C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - v14;
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v37 - v21;
  v23 = (uint64_t)v45;
  v45 = v2;
  sub_23799504C(v23, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v6) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v15, v6);
  v25 = v44;
  sub_237A87F68();
  v26 = v45;
  sub_237992424();
  v27 = v42;
  sub_237A87F68();
  v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28(v19, v6);
  swift_getAssociatedConformanceWitness();
  v29 = sub_237A877DC();
  v30 = *(void (**)(char *, uint64_t))(v43 + 8);
  v30(v27, AssociatedTypeWitness);
  v30(v11, AssociatedTypeWitness);
  if ((v29 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v28)(v22, v6);
  v31 = v26;
  v32 = v38;
  v37 = v28;
  if ((v38 & 1) != 0)
    swift_retain();
  v33 = v39;
  v34 = sub_237A86E88();
  v44 = &v37;
  MEMORY[0x24BDAC7A8](v34);
  *((_BYTE *)&v37 - 32) = v32 & 1;
  *(&v37 - 3) = v31;
  *(&v37 - 2) = (void (*)(char *, uint64_t))v22;
  v35 = swift_allocObject();
  swift_weakInit();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v6;
  v36[3] = v25;
  v36[4] = v35;
  swift_retain();
  sub_237A8690C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
  v37(v22, v6);
  return swift_release();
}

uint64_t sub_237995C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799A92C(v6);
  sub_237992F60();
  sub_237993010();
  sub_237992424();
  sub_237996350((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_237995D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_237992424();
    sub_2379963B8((uint64_t)v5);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  }
  return result;
}

uint64_t sub_237995DB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *v0;
  v2 = sub_237A86E94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_237992F4C();
  if ((result & 1) == 0)
  {
    result = sub_237992F74();
    if ((result & 1) == 0)
    {
      v7 = swift_allocObject();
      swift_weakInit();
      v8 = (_QWORD *)swift_allocObject();
      v8[2] = *(_QWORD *)(v1 + 80);
      v8[3] = *(_QWORD *)(v1 + 88);
      v8[4] = v7;
      swift_retain();
      swift_retain();
      sub_237A86E7C();
      sub_237A8690C();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_237995F00()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_237995F5C();
    return swift_release();
  }
  return result;
}

uint64_t sub_237995F5C()
{
  swift_retain();
  sub_237A874D0();
  swift_release();
  sub_237A86918();
  return swift_release();
}

uint64_t sub_237995FE0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  sub_237A87F68();
  sub_237A87F68();
  swift_getAssociatedConformanceWitness();
  v7 = sub_237A877DC();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

double sub_23799611C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237992424();
  sub_237992D24();
  v6 = sub_237992398();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return -(double)v6;
}

double sub_2379961C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  double result;
  uint64_t v16;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237992424();
  sub_237A87F68();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v1);
  sub_237A87F68();
  swift_getAssociatedConformanceWitness();
  v13 = sub_237A877DC();
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, AssociatedTypeWitness);
  v14(v8, AssociatedTypeWitness);
  result = 0.8;
  if ((v13 & 1) != 0)
    return 1.0;
  return result;
}

uint64_t sub_237996350(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v2 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v3 = (void (*)(uint64_t))*v2;
  if (*v2)
  {
    v4 = result;
    sub_2378A2BF4(*v2);
    v3(v4);
    return sub_2378A2C04((uint64_t)v3);
  }
  return result;
}

uint64_t sub_2379963B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(uint64_t);
  uint64_t v5;

  v2 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v3 = (void (*)(uint64_t))*v2;
  if (*v2)
  {
    sub_2378A2BF4(*v2);
    v3(a1);
    sub_2378A2C04((uint64_t)v3);
  }
  swift_beginAccess();
  v5 = sub_237A87B30();
  MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v5);
  sub_237A87C98();
  return sub_237995F5C();
}

uint64_t CarouselModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_237A86720();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2378A2C04(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)));
  sub_2378A2C04(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)));
  sub_2378A2C04(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)));
  sub_2378A2C04(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136)));
  swift_bridgeObjectRelease();
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  sub_237A87B30();
  v4 = sub_237A86720();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821408);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 176);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C70);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184), v8);
  swift_release();
  return v0;
}

uint64_t CarouselModel.__deallocating_deinit()
{
  CarouselModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_237996634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;

  type metadata accessor for CarouselModel(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = sub_237A866A8();
  *a3 = result;
  return result;
}

double sub_237996674()
{
  double result;

  result = 0.0;
  xmmword_2568706C0 = 0u;
  *(_OWORD *)algn_2568706D0 = 0u;
  return result;
}

double sub_237996688@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_25681E3E8 != -1)
    swift_once();
  result = *(double *)&xmmword_2568706C0;
  v3 = *(_OWORD *)algn_2568706D0;
  *a1 = xmmword_2568706C0;
  a1[1] = v3;
  return result;
}

double sub_2379966DC(_OWORD *a1, void (*a2)(_OWORD *__return_ptr))
{
  double result;
  __int128 v4;
  _OWORD v5[2];

  a2(v5);
  result = *(double *)v5;
  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t CarouselStyle.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) != 2)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
  }
  return sub_237A885E0();
}

uint64_t CarouselStyle.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_237A885D4();
  if (v1 != 2)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
  }
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_237996818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 9);
  sub_2378E38B4(v1, v2, v3);
  v4 = sub_23796D3CC(v1, v2 | (v3 << 8));
  sub_2378E38C0(v1, v2, v3);
  return v4;
}

uint64_t sub_237996890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for CarouselModel(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  MEMORY[0x23B81FA98](&protocol conformance descriptor for CarouselModel<A>, v4);
  return sub_237A86984();
}

uint64_t sub_2379968E4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_237A885D4();
  if (v1 != 2)
  {
    sub_237A885E0();
    sub_237A88604();
    sub_237A88604();
  }
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t Carousel.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  void (*v40)(char *, uint64_t);
  _QWORD v42[2];
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  _QWORD v65[2];
  _QWORD v66[2];
  __int128 v67;
  char v68;
  _QWORD v69[2];
  uint64_t v70;
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;

  v53 = a2;
  v54 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824748);
  v3 = a1[3];
  v4 = sub_237A87B30();
  v5 = a1[5];
  v49 = v3;
  v50 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v51 = a1[2];
  v7 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v8 = sub_237A869B4();
  v45 = (char *)sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  v46 = sub_237A869B4();
  v47 = sub_237A869B4();
  v9 = sub_237A869B4();
  *(_QWORD *)&v77 = v4;
  *((_QWORD *)&v77 + 1) = AssociatedTypeWitness;
  *(_QWORD *)&v78 = v9;
  *((_QWORD *)&v78 + 1) = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D8], v4);
  *(_QWORD *)&v79 = swift_getAssociatedConformanceWitness();
  v10 = sub_237A8741C();
  v48 = a1[4];
  v76[0] = v48;
  v76[1] = MEMORY[0x24BDEBEE0];
  v11 = MEMORY[0x24BDED308];
  v75[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v7, v76);
  v75[1] = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  v74[0] = MEMORY[0x23B81FA98](v11, v8, v75);
  v74[1] = MEMORY[0x24BDEBF50];
  v73[0] = MEMORY[0x23B81FA98](v11, v45, v74);
  v73[1] = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  v72[0] = MEMORY[0x23B81FA98](v11, v46, v73);
  v72[1] = sub_23799ACBC();
  v71[0] = MEMORY[0x23B81FA98](v11, v47, v72);
  v71[1] = sub_23799AD00();
  v70 = MEMORY[0x23B81FA98](v11, v9, v71);
  MEMORY[0x23B81FA98](MEMORY[0x24BDF4A08], v10, &v70);
  v12 = sub_237A873A4();
  v13 = sub_237A869B4();
  v69[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDF4700], v12);
  v69[1] = MEMORY[0x24BDEC438];
  MEMORY[0x23B81FA98](v11, v13, v69);
  sub_237A86978();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824780);
  sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824788);
  sub_237A869B4();
  swift_getTupleTypeMetadata2();
  v14 = sub_237A87524();
  v42[1] = MEMORY[0x23B81FA98](MEMORY[0x24BDF5428], v14);
  v15 = sub_237A873BC();
  v43 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v42 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824790);
  v18 = sub_237A869B4();
  v47 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v54 = (char *)v42 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824798);
  v20 = sub_237A869B4();
  v46 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v44 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v45 = (char *)v42 - v23;
  v24 = v51;
  v25 = v52[3];
  v79 = v52[2];
  v80 = v25;
  v81 = v52[4];
  v26 = v52[1];
  v77 = *v52;
  v78 = v26;
  v27 = v48;
  v28 = v49;
  v60 = v51;
  v61 = v49;
  v29 = v50;
  v62 = v48;
  v63 = v50;
  v64 = &v77;
  sub_237A874AC();
  sub_237A873B0();
  v67 = v80;
  v68 = v81;
  v30 = MEMORY[0x23B81FA98](MEMORY[0x24BDF4750], v15);
  sub_23799AD54();
  sub_237A870F8();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v15);
  v55 = v24;
  v56 = v28;
  v57 = v27;
  v58 = v29;
  v59 = &v77;
  sub_237A874AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568247A8);
  v31 = sub_2378B70D4(&qword_2568247B0, &qword_256824790, MEMORY[0x24BDF03D8]);
  v66[0] = v30;
  v66[1] = v31;
  v32 = MEMORY[0x24BDED308];
  v33 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v18, v66);
  sub_2378B70D4(&qword_2568247B8, &qword_2568247A8, MEMORY[0x24BDEC6F8]);
  v34 = v44;
  v35 = v54;
  sub_237A87140();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v18);
  v36 = sub_2378B70D4(&qword_2568247C0, &qword_256824798, MEMORY[0x24BDEDC10]);
  v65[0] = v33;
  v65[1] = v36;
  MEMORY[0x23B81FA98](v32, v20, v65);
  v38 = v45;
  v37 = v46;
  v39 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v39(v45, v34, v20);
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v34, v20);
  v39(v53, v38, v20);
  return ((uint64_t (*)(char *, uint64_t))v40)(v38, v20);
}

void sub_237996FE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v27 = a6;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568249F0);
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_237A8747C();
  v17[1] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568249F8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824748);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)v17 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v30 = (char *)v17 - v16;
  sub_237A87200();
  sub_237A87458();
  v31 = a1;
  v23 = a2;
  v24 = a3;
  v32 = a2;
  v33 = a3;
  v28 = a4;
  v34 = a4;
  v35 = a5;
  v25 = a5;
  type metadata accessor for Carousel();
}

uint64_t sub_2379971A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  char v77;

  swift_retain();
  v5 = sub_237992F4C();
  swift_release();
  v6 = 0.0;
  v7 = 0.0;
  if ((v5 & 1) != 0)
    v7 = -*(double *)(*(_QWORD *)(v0 + 144) + 72);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v8 + 48);
  v10 = *(_QWORD *)(v8 + 56);
  v11 = *(unsigned __int8 *)(v8 + 64);
  v12 = *(_QWORD *)(v0 + 8);
  v13 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v2, v13);
  v14 = *(_QWORD *)(v0 + 40);
  v15 = v1 + *(int *)(v14 + 52);
  *(_QWORD *)(v0 + 88) = v10;
  *(_QWORD *)(v0 + 96) = v9;
  *(_QWORD *)v15 = v9;
  *(_QWORD *)(v15 + 8) = v10;
  *(_DWORD *)(v0 + 84) = v11;
  *(_BYTE *)(v15 + 16) = v11;
  *(double *)(v15 + 24) = v7;
  *(_WORD *)(v1 + *(int *)(v14 + 56)) = 256;
  v16 = *(_QWORD **)(v0 + 32);
  sub_2378BBFE0(v1, (uint64_t)v16 + *(int *)(*(_QWORD *)(v0 + 16) + 36), &qword_2568249F0);
  *v16 = v3;
  swift_retain();
  sub_2378BC024(v1, &qword_2568249F0);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_retain();
  LOBYTE(v13) = sub_237992F4C();
  swift_release();
  if ((v13 & 1) != 0)
    v17 = 1.0;
  else
    v17 = 0.0;
  v18 = *(_QWORD *)(v0 + 24);
  sub_2378BBFE0((uint64_t)v16, v18, &qword_2568249F8);
  *(double *)(v18 + *(int *)(*(_QWORD *)(v0 + 128) + 36)) = v17;
  sub_2378BC024((uint64_t)v16, &qword_2568249F8);
  sub_23799DEE4(v18, *(_QWORD *)(v0 + 136));
  v19 = swift_allocObject();
  v20 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v19 + 24) = v20;
  v21 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v19 + 40) = v21;
  v22 = *(_OWORD *)(v8 + 48);
  *(_OWORD *)(v19 + 80) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v19 + 96) = v22;
  *(_OWORD *)(v19 + 112) = *(_OWORD *)(v8 + 64);
  v23 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)v8;
  *(_OWORD *)(v19 + 64) = v23;
  sub_23799DE94(v8);
  v24 = sub_237A87B30();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v27 = sub_237A869B4();
  *(_QWORD *)(v0 + 40) = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  *(_QWORD *)(v0 + 48) = sub_237A869B4();
  *(_QWORD *)(v0 + 56) = sub_237A869B4();
  v28 = sub_237A869B4();
  v29 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D8], v24);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 - 176) = v24;
  *(_QWORD *)(v4 - 168) = AssociatedTypeWitness;
  *(_QWORD *)(v4 - 160) = v28;
  *(_QWORD *)(v4 - 152) = v29;
  *(_QWORD *)(v4 - 144) = AssociatedConformanceWitness;
  v31 = sub_237A8741C();
  v32 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 416) = v32;
  v33 = MEMORY[0x24BDED308];
  v34 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v26, v0 + 408);
  v35 = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v0 + 392) = v34;
  *(_QWORD *)(v0 + 400) = v35;
  v36 = MEMORY[0x23B81FA98](v33, v27, v0 + 392);
  v37 = MEMORY[0x24BDEBF50];
  *(_QWORD *)(v0 + 376) = v36;
  *(_QWORD *)(v0 + 384) = v37;
  v38 = MEMORY[0x23B81FA98](v33, *(_QWORD *)(v0 + 40), v0 + 376);
  v39 = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v0 + 360) = v38;
  *(_QWORD *)(v0 + 368) = v39;
  v40 = MEMORY[0x23B81FA98](v33, *(_QWORD *)(v0 + 48), v0 + 360);
  v41 = sub_23799ACBC();
  *(_QWORD *)(v0 + 344) = v40;
  *(_QWORD *)(v0 + 352) = v41;
  v42 = MEMORY[0x23B81FA98](v33, *(_QWORD *)(v0 + 56), v0 + 344);
  v43 = sub_23799AD00();
  *(_QWORD *)(v0 + 328) = v42;
  *(_QWORD *)(v0 + 336) = v43;
  *(_QWORD *)(v0 + 320) = MEMORY[0x23B81FA98](v33, v28, v0 + 328);
  MEMORY[0x23B81FA98](MEMORY[0x24BDF4A08], v31, v0 + 320);
  v44 = sub_237A873A4();
  v45 = sub_237A869B4();
  v46 = MEMORY[0x23B81FA98](MEMORY[0x24BDF4700], v44);
  v47 = MEMORY[0x24BDEC438];
  *(_QWORD *)(v0 + 304) = v46;
  *(_QWORD *)(v0 + 312) = v47;
  MEMORY[0x23B81FA98](v33, v45, v0 + 304);
  *(_QWORD *)(v4 - 248) = sub_237A8696C();
  *(_QWORD *)(v4 - 240) = v48;
  *(_QWORD *)(v0 + 184) = 0x6B63617473;
  *(_QWORD *)(v0 + 192) = 0xE500000000000000;
  v49 = sub_237A86978();
  v50 = MEMORY[0x23B81FA98](MEMORY[0x24BDEC6F8], v49);
  sub_237A87104();
  swift_release();
  v51 = *(_QWORD *)(v4 - 168);
  v52 = *(_QWORD *)(v4 - 160);
  v53 = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v0 + 192) = v51;
  *(_QWORD *)(v0 + 200) = v52;
  *(_QWORD *)(v0 + 208) = v53;
  swift_retain();
  LOBYTE(v27) = sub_237992F4C();
  swift_release();
  if ((v27 & 1) != 0)
    v6 = -*(double *)(*(_QWORD *)(v0 + 144) + 72);
  v54 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 280) = v54;
  *(_BYTE *)(v0 + 288) = *(_DWORD *)(v0 + 84);
  *(double *)(v0 + 296) = v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824780);
  v55 = sub_237A869B4();
  v56 = sub_2378B70D4(&qword_256824A00, &qword_256824780, MEMORY[0x24BDF06F0]);
  *(_QWORD *)(v0 + 256) = v50;
  *(_QWORD *)(v0 + 264) = v56;
  v57 = MEMORY[0x24BDED308];
  v58 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v55, v0 + 256);
  sub_23799D9A4();
  sub_237A8717C();
  swift_bridgeObjectRelease();
  swift_release();
  v59 = *(_QWORD *)(v4 - 240);
  v60 = *(_QWORD *)(v4 - 232);
  v61 = *(_QWORD *)(v4 - 224);
  v62 = *(_BYTE *)(v4 - 200);
  v63 = *(_QWORD *)(v4 - 192);
  v64 = *(_BYTE *)(v4 - 184);
  v65 = *(_BYTE *)(v4 - 183);
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v4 - 248);
  *(_QWORD *)(v0 + 192) = v59;
  *(_QWORD *)(v0 + 200) = v60;
  *(_QWORD *)(v0 + 208) = v61;
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v4 - 216);
  *(_BYTE *)(v0 + 232) = v62;
  *(_QWORD *)(v0 + 240) = v63;
  *(_BYTE *)(v0 + 248) = v64;
  *(_BYTE *)(v0 + 249) = v65;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824788);
  v66 = sub_237A869B4();
  v67 = sub_2378B70D4(&qword_256824A08, &qword_256824788, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v0 + 168) = v58;
  *(_QWORD *)(v0 + 176) = v67;
  v68 = MEMORY[0x23B81FA98](v57, v66, v0 + 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v4 - 176, v0 + 184, v66);
  swift_bridgeObjectRelease();
  swift_release();
  v69 = *(_QWORD *)(v0 + 136);
  v70 = *(_QWORD *)(v0 + 104);
  sub_2378BBFE0(v69, v70, &qword_256824748);
  v71 = *(_QWORD *)(v4 - 168);
  v72 = *(_QWORD *)(v4 - 160);
  v73 = *(_QWORD *)(v4 - 152);
  v74 = *(_BYTE *)(v4 - 128);
  v75 = *(_QWORD *)(v4 - 120);
  v76 = *(_BYTE *)(v4 - 112);
  v77 = *(_BYTE *)(v4 - 111);
  *(_QWORD *)(v4 - 248) = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v4 - 240) = v71;
  *(_QWORD *)(v4 - 232) = v72;
  *(_QWORD *)(v4 - 224) = v73;
  *(_OWORD *)(v4 - 216) = *(_OWORD *)(v4 - 144);
  *(_BYTE *)(v4 - 200) = v74;
  *(_QWORD *)(v4 - 192) = v75;
  *(_BYTE *)(v4 - 184) = v76;
  *(_BYTE *)(v4 - 183) = v77;
  *(_QWORD *)(v0 + 184) = v70;
  *(_QWORD *)(v0 + 192) = v4 - 248;
  swift_retain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 280) = v66;
  *(_QWORD *)(v0 + 152) = sub_23799DF7C();
  *(_QWORD *)(v0 + 160) = v68;
  sub_237991B18((uint64_t *)(v0 + 184), 2uLL, v0 + 272);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2378BC024(v69, &qword_256824748);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2378BC024(v70, &qword_256824748);
}

uint64_t sub_2379978D8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_237A867C8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x24BDEB400], v0, v2);
  sub_237A867BC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return 0x7372657474616C70;
}

void sub_23799799C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t AssociatedConformanceWitness;

  v28 = a5;
  v31 = a3;
  v32 = a2;
  v33 = a1;
  v34 = a7;
  v9 = sub_237A87B30();
  v30 = a6;
  v29 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v12 = sub_237A869B4();
  v13 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  v14 = sub_237A869B4();
  v27 = sub_237A869B4();
  v15 = sub_237A869B4();
  v48 = v9;
  v49 = AssociatedTypeWitness;
  v50 = v15;
  v51 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D8], v9);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = sub_237A8741C();
  v17 = v28;
  v47[0] = v28;
  v47[1] = MEMORY[0x24BDEBEE0];
  v18 = MEMORY[0x24BDED308];
  v46[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v11, v47);
  v46[1] = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  v45[0] = MEMORY[0x23B81FA98](v18, v12, v46);
  v45[1] = MEMORY[0x24BDEBF50];
  v44[0] = MEMORY[0x23B81FA98](v18, v13, v45);
  v44[1] = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  v43[0] = MEMORY[0x23B81FA98](v18, v14, v44);
  v43[1] = sub_23799ACBC();
  v42[0] = MEMORY[0x23B81FA98](v18, v27, v43);
  v42[1] = sub_23799AD00();
  v41 = MEMORY[0x23B81FA98](v18, v15, v42);
  v26[1] = v16;
  v26[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDF4A08], v16, &v41);
  v19 = sub_237A873A4();
  v27 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_237A869B4();
  v26[3] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v26[2] = (char *)v26 - v22;
  v23 = v31;
  v35 = v31;
  v24 = v29;
  v36 = v29;
  v37 = v28;
  v25 = v30;
  v38 = v30;
  v39 = v32;
  v40 = v33;
  sub_237A86C6C();
  sub_237A87398();
  v48 = v23;
  v49 = v24;
  v50 = v17;
  v51 = v25;
  type metadata accessor for Carousel();
}

uint64_t sub_237997D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v5 = swift_retain();
  sub_23799611C(v5);
  swift_release();
  sub_237A868C4();
  v6 = MEMORY[0x23B81FA98](MEMORY[0x24BDF4700], v0);
  sub_237A87134();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 400) + 8))(v1, v0);
  v7 = MEMORY[0x24BDEC438];
  *(_QWORD *)(v4 - 264) = v6;
  *(_QWORD *)(v4 - 256) = v7;
  MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v3, v4 - 264);
  v8 = *(_QWORD *)(v4 - 408);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10 = *(_QWORD *)(v4 - 416);
  v9(v10, v2, v3);
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v2, v3);
  v9(*(_QWORD *)(v4 - 344), v10, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v3);
}

void sub_237997EA4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v20 = a4;
  v24 = a1;
  v36 = a6;
  v21 = sub_237A868DC();
  v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
  MEMORY[0x24BDAC7A8](v21);
  v18 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A87B30();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v27 = sub_237A869B4();
  v26 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  v29 = sub_237A869B4();
  v31 = sub_237A869B4();
  v12 = sub_237A869B4();
  v28 = v12;
  v34 = v10;
  v13 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D8], v10);
  v32 = v13;
  v33 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v37 = v10;
  v38 = AssociatedTypeWitness;
  v39 = v12;
  v40 = v13;
  v41 = AssociatedConformanceWitness;
  v19 = sub_237A8741C();
  v35 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v25 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v30 = (char *)&v18 - v17;
  v37 = a2;
  v38 = a3;
  v39 = v20;
  v40 = a5;
  type metadata accessor for Carousel();
}

uint64_t sub_237998114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);

  swift_retain();
  v7 = sub_237992D24();
  swift_release();
  *(_QWORD *)(v6 - 128) = v7;
  v8 = v4;
  v9 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16);
  v10 = *(_QWORD *)(v6 - 384);
  v11 = *(_QWORD *)(v6 - 360);
  v9(v10, *(_QWORD *)(v6 - 336), v11);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v0;
  *(_QWORD *)(v13 + 32) = v3;
  *(_QWORD *)(v13 + 40) = v1;
  v14 = v5[3];
  *(_OWORD *)(v13 + 80) = v5[2];
  *(_OWORD *)(v13 + 96) = v14;
  *(_OWORD *)(v13 + 112) = v5[4];
  v15 = v5[1];
  *(_OWORD *)(v13 + 48) = *v5;
  *(_OWORD *)(v13 + 64) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v13 + v12, v10, v11);
  sub_23799DE94((uint64_t)v5);
  v16 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v6 - 144) = v3;
  *(_QWORD *)(v6 - 136) = v16;
  v17 = MEMORY[0x24BDED308];
  v18 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], *(_QWORD *)(v6 - 344), v6 - 144);
  v19 = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v6 - 160) = v18;
  *(_QWORD *)(v6 - 152) = v19;
  v20 = MEMORY[0x23B81FA98](v17, *(_QWORD *)(v6 - 312), v6 - 160);
  v21 = MEMORY[0x24BDEBF50];
  *(_QWORD *)(v6 - 176) = v20;
  *(_QWORD *)(v6 - 168) = v21;
  v22 = MEMORY[0x23B81FA98](v17, *(_QWORD *)(v6 - 320), v6 - 176);
  v23 = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v6 - 192) = v22;
  *(_QWORD *)(v6 - 184) = v23;
  v24 = MEMORY[0x23B81FA98](v17, *(_QWORD *)(v6 - 296), v6 - 192);
  v25 = sub_23799ACBC();
  *(_QWORD *)(v6 - 208) = v24;
  *(_QWORD *)(v6 - 200) = v25;
  v26 = MEMORY[0x23B81FA98](v17, *(_QWORD *)(v6 - 280), v6 - 208);
  v27 = sub_23799AD00();
  *(_QWORD *)(v6 - 224) = v26;
  *(_QWORD *)(v6 - 216) = v27;
  v28 = MEMORY[0x23B81FA98](v17, *(_QWORD *)(v6 - 304), v6 - 224);
  v29 = *(_QWORD *)(v6 - 328);
  sub_237A87410();
  *(_QWORD *)(v6 - 232) = v28;
  v30 = *(_QWORD *)(v6 - 376);
  MEMORY[0x23B81FA98](MEMORY[0x24BDF4A08], v30, v6 - 232);
  v31 = *(_QWORD *)(v6 - 248);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v33 = *(_QWORD *)(v6 - 288);
  v32(v33, v29, v30);
  v34 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v34(v29, v30);
  v32(*(_QWORD *)(v6 - 240), v33, v30);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v30);
}

void sub_237998394(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];

  v55 = a7;
  v54 = a6;
  v52 = a5;
  v32[1] = a3;
  v51 = a1;
  v50 = a8;
  v43 = *(_QWORD *)(a5 - 8);
  v45 = *(_QWORD *)(v43 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v41 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_237A869B4();
  v34 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v32 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v19 = sub_237A869B4();
  v36 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_237A869B4();
  v37 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v35 = (char *)v32 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  v22 = sub_237A869B4();
  v40 = *(_QWORD *)(v22 - 8);
  v39 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v53 = (char *)v32 - v23;
  v24 = sub_237A869B4();
  v49 = *(_QWORD *)(v24 - 8);
  v44 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v38 = (char *)v32 - v25;
  v47 = sub_237A869B4();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v42 = (char *)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v46 = (char *)v32 - v29;
  (*(void (**)(uint64_t, __n128))(a2 + 32))(a1, v28);
  sub_237A868C4();
  sub_237A868C4();
  sub_237A874AC();
  v30 = v54;
  sub_237A87128();
  v31 = *(void (**)(char *, uint64_t))(v33 + 8);
  v32[0] = a4;
  v31(v15, a4);
  v60[0] = v30;
  v60[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v16, v60);
  sub_23799E180();
  sub_237A8717C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
  v56 = a4;
  v57 = v52;
  v58 = v30;
  v59 = v55;
  type metadata accessor for Carousel();
}

uint64_t sub_237998788()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);

  swift_retain();
  v7 = *(_QWORD *)(v6 - 288);
  sub_2379961C0();
  swift_release();
  sub_237A8756C();
  v8 = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v6 - 184) = v4;
  *(_QWORD *)(v6 - 176) = v8;
  v9 = MEMORY[0x24BDED308];
  v10 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v0, v6 - 184);
  v11 = *(_QWORD *)(v6 - 416);
  sub_237A870D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 408) + 8))(v2, v0);
  sub_237A8756C();
  sub_237A868A0();
  sub_237A868AC();
  sub_237A868B8();
  swift_release();
  swift_release();
  v12 = MEMORY[0x24BDEBF50];
  *(_QWORD *)(v6 - 200) = v10;
  *(_QWORD *)(v6 - 192) = v12;
  v13 = MEMORY[0x23B81FA98](v9, v3, v6 - 200);
  sub_237A870A4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 400) + 8))(v11, v3);
  v14 = *(_QWORD *)(v6 - 352);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(_QWORD *)(v6 - 400) = v15;
  v16 = *(_QWORD *)(v6 - 368);
  v17 = v7;
  v18 = v5;
  v15(v16, v17, v5);
  v19 = *(unsigned __int8 *)(v14 + 80);
  v20 = (v19 + 128) & ~v19;
  *(_QWORD *)(v6 - 336) = v19 | 7;
  v21 = swift_allocObject();
  v22 = *(_QWORD *)(v6 - 448);
  *(_QWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v21 + 24) = v18;
  v23 = *(_QWORD *)(v6 - 256);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v21 + 40) = v23;
  v24 = v1[3];
  *(_OWORD *)(v21 + 80) = v1[2];
  *(_OWORD *)(v21 + 96) = v24;
  *(_OWORD *)(v21 + 112) = v1[4];
  v25 = v1[1];
  *(_OWORD *)(v21 + 48) = *v1;
  *(_OWORD *)(v21 + 64) = v25;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  *(_QWORD *)(v6 - 352) = v26;
  v26(v21 + v20, v16, v18);
  sub_23799DE94((uint64_t)v1);
  v27 = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v6 - 216) = v13;
  *(_QWORD *)(v6 - 208) = v27;
  v28 = *(_QWORD *)(v6 - 384);
  v29 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v28, v6 - 216);
  v30 = *(_QWORD *)(v6 - 392);
  v31 = *(_QWORD *)(v6 - 272);
  sub_237998CFC((uint64_t)sub_23799E1C8, v21, v28, v29, (uint64_t)&type metadata for OnScrollIn);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 376) + 8))(v31, v28);
  v32 = *(_QWORD *)(v6 - 280);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 - 400))(v16, *(_QWORD *)(v6 - 288), v32);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v22;
  *(_QWORD *)(v33 + 24) = v32;
  v34 = *(_QWORD *)(v6 - 256);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v33 + 40) = v34;
  v35 = v1[3];
  *(_OWORD *)(v33 + 80) = v1[2];
  *(_OWORD *)(v33 + 96) = v35;
  *(_OWORD *)(v33 + 112) = v1[4];
  v36 = v1[1];
  *(_OWORD *)(v33 + 48) = *v1;
  *(_OWORD *)(v33 + 64) = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 352))(v33 + v20, v16, v32);
  sub_23799DE94((uint64_t)v1);
  v37 = sub_23799ACBC();
  *(_QWORD *)(v6 - 232) = v29;
  *(_QWORD *)(v6 - 224) = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = *(_QWORD *)(v6 - 344);
  v40 = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v39, v6 - 232);
  v41 = *(_QWORD *)(v6 - 360);
  sub_237998CFC((uint64_t)sub_23799E25C, v33, v39, v40, (uint64_t)&type metadata for OnScrollOut);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 304) + 8))(v30, v39);
  v42 = sub_23799AD00();
  *(_QWORD *)(v6 - 248) = v40;
  *(_QWORD *)(v6 - 240) = v42;
  v43 = *(_QWORD *)(v6 - 320);
  MEMORY[0x23B81FA98](v38, v43, v6 - 248);
  v44 = *(_QWORD *)(v6 - 312);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  v46 = *(_QWORD *)(v6 - 328);
  v45(v46, v41, v43);
  v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v47(v41, v43);
  v45(*(_QWORD *)(v6 - 296), v46, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v47)(v46, v43);
}

void sub_237998BDC()
{
  type metadata accessor for Carousel();
}

uint64_t sub_237998C0C()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(uint64_t);
  uint64_t result;
  void (*v4)(uint64_t);

  v2 = (void (**)(uint64_t))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  result = swift_beginAccess();
  v4 = *v2;
  if (*v2)
  {
    sub_2378A2BF4((uint64_t)v4);
    v4(v0);
    return sub_2378A2C04((uint64_t)v4);
  }
  return result;
}

void sub_237998C6C()
{
  type metadata accessor for Carousel();
}

uint64_t sub_237998C9C()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(uint64_t);
  uint64_t result;
  void (*v4)(uint64_t);

  v2 = (void (**)(uint64_t))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  result = swift_beginAccess();
  v4 = *v2;
  if (*v2)
  {
    sub_2378A2BF4((uint64_t)v4);
    v4(v0);
    return sub_2378A2C04((uint64_t)v4);
  }
  return result;
}

uint64_t sub_237998CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v17 = 0;
  swift_retain();
  sub_237A87344();
  v10 = v13;
  v11 = v14;
  v13 = a1;
  v14 = a2;
  v15 = v10;
  v16 = v11;
  MEMORY[0x23B81DDB8](&v13, a3, a5, a4);
  swift_release();
  return swift_release();
}

void sub_237998DA8()
{
  sub_237A87200();
  type metadata accessor for Carousel();
}

uint64_t sub_237998E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  double v19;

  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  v5 = MEMORY[0x23B81E754](v4, v3);
  swift_bridgeObjectRelease();
  swift_retain();
  v6 = sub_237992E38();
  swift_release();
  if ((*(_BYTE *)(v2 + 64) & 1) != 0)
    v7 = 1.8;
  else
    v7 = 1.2;
  v8 = sub_237A874AC();
  v10 = v9;
  sub_237A868C4();
  v12 = v11;
  sub_237998F6C();
  v14 = v13;
  sub_237998FDC();
  v16 = v15;
  swift_retain();
  v17 = sub_237992F74();
  result = swift_release();
  v19 = 0.0;
  if ((v17 & 1) != 0)
    v19 = 1.0;
  *(_QWORD *)v0 = v1;
  *(_QWORD *)(v0 + 8) = v5;
  *(_QWORD *)(v0 + 16) = v6;
  *(double *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 32) = v8;
  *(_QWORD *)(v0 + 40) = v10;
  *(double *)(v0 + 48) = v12 * 0.5 + v14;
  *(_QWORD *)(v0 + 56) = v16;
  *(double *)(v0 + 64) = v19;
  return result;
}

uint64_t sub_237998F6C()
{
  swift_retain();
  sub_237992F74();
  return swift_release();
}

void sub_237998FDC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 64) != 2)
    sub_237996818();
}

double sub_23799907C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  double result;

  v2 = *(_BYTE *)(v1 + 16);
  result = *(double *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_BYTE *)(a1 + 16) = v2;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_237999098@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

double sub_2379990A4(double *a1)
{
  uint64_t v1;
  double result;

  result = *a1;
  *(double *)(v1 + 24) = *a1;
  return result;
}

double (*sub_2379990B0(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 24);
  return sub_2379990CC;
}

double sub_2379990CC(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 24) = *(_QWORD *)a1;
  return result;
}

uint64_t sub_2379990DC@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  int v15;
  double v16;
  uint64_t result;
  __int128 v18;
  __int128 v19;
  char v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  CGRect v30;

  v11 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (double *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(double *)v5;
  v15 = *(unsigned __int8 *)(v5 + 16);
  v16 = *(double *)(v5 + 24);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  CGRectInset(v30, v16, v16);
  if (v15 == 2)
  {
    result = sub_237A8738C();
    v18 = v27;
    v19 = v28;
    v20 = v29;
  }
  else
  {
    v21 = v14 - v16;
    v22 = (char *)v13 + *(int *)(v11 + 20);
    v23 = *MEMORY[0x24BDEEB68];
    v24 = sub_237A86C54();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
    *v13 = v21;
    v13[1] = v21;
    sub_237A869E4();
    v25 = v28;
    v26 = v27;
    v20 = v29;
    result = sub_2378BBFA4((uint64_t)v13);
    v19 = v25;
    v18 = v26;
  }
  *(_OWORD *)a1 = v18;
  *(_OWORD *)(a1 + 16) = v19;
  *(_BYTE *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_237999250()
{
  sub_23799D9A4();
  return sub_237A87338();
}

uint64_t sub_2379992A0()
{
  sub_23799D9A4();
  return sub_237A87308();
}

uint64_t sub_2379992F0()
{
  sub_23799D9A4();
  return sub_237A87320();
}

void sub_237999328(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = a2;
}

uint64_t sub_237999340@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v3 = sub_237A869F0();
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((_BYTE *)v1 + 16) == 2)
  {
    result = sub_237A8738C();
    v8 = v17;
    v9 = v18;
    v10 = v19;
  }
  else
  {
    v11 = *v1;
    v12 = (char *)v6 + *(int *)(v4 + 20);
    v13 = *MEMORY[0x24BDEEB68];
    v14 = sub_237A86C54();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
    *v6 = v11;
    v6[1] = v11;
    sub_237A869E4();
    v15 = v18;
    v16 = v17;
    v10 = v19;
    result = sub_2378BBFA4((uint64_t)v6);
    v9 = v15;
    v8 = v16;
  }
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_237999478()
{
  sub_23799DB00();
  return sub_237A87338();
}

uint64_t sub_2379994C8()
{
  sub_23799DB00();
  return sub_237A87308();
}

uint64_t sub_237999518()
{
  sub_23799DB00();
  return sub_237A87320();
}

uint64_t sub_237999550@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v10 = sub_237A86D68();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237A87200();
  v25[0] = 0x6B63617473;
  v25[1] = 0xE500000000000000;
  sub_237A86DBC();
  sub_237A868D0();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  *(_BYTE *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  *a5 = v14;
  a5[1] = v16;
  a5[2] = v18;
  a5[3] = v20;
  a5[4] = v22;
  a5[5] = (uint64_t)sub_23799DB8C;
  a5[6] = v23;
  swift_retain();
  return swift_retain();
}

uint64_t sub_2379996A4(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;
  char v34;

  v27 = a2;
  v9 = sub_237A87578();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_237A87590();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(double *)(a1 + 8);
  v18 = *(double *)(a1 + 24);
  if (v17 > -v18 && v17 < v18)
  {
    v26 = a3;
    LOBYTE(aBlock) = a4 & 1;
    v29 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568249D0);
    result = sub_237A87350();
    if ((v34 & 1) == 0)
    {
      LOBYTE(aBlock) = a4 & 1;
      v29 = a5;
      v34 = 1;
      sub_237A8735C();
      sub_23799DB9C();
      v25 = sub_237A87D70();
      v21 = swift_allocObject();
      v22 = v26;
      *(_QWORD *)(v21 + 16) = v27;
      *(_QWORD *)(v21 + 24) = v22;
      *(_BYTE *)(v21 + 32) = a4 & 1;
      *(_QWORD *)(v21 + 40) = a5;
      v32 = sub_2378A3110;
      v33 = v21;
      aBlock = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_237A44D44;
      v31 = &block_descriptor_1;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      sub_237A87584();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_23799DBF4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568213F8);
      sub_2378B70D4((unint64_t *)&qword_256828FF0, &qword_2568213F8, MEMORY[0x24BEE12C8]);
      sub_237A87E9C();
      v23 = v27;
      v24 = (void *)v25;
      MEMORY[0x23B81E9DC](0, v16, v12, v27);
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  else
  {
    LOBYTE(aBlock) = a4 & 1;
    v29 = a5;
    v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568249D0);
    return sub_237A8735C();
  }
  return result;
}

uint64_t sub_237999948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237999D8C(a1, &qword_2568249C0, &qword_2568249C8, (uint64_t)sub_23799DB78, a2);
}

uint64_t sub_23799996C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v10 = sub_237A86D68();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237A87200();
  v25[0] = 0x6B63617473;
  v25[1] = 0xE500000000000000;
  sub_237A86DBC();
  sub_237A868D0();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  *(_BYTE *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  *a5 = v14;
  a5[1] = v16;
  a5[2] = v18;
  a5[3] = v20;
  a5[4] = v22;
  a5[5] = (uint64_t)sub_23799DC54;
  a5[6] = v23;
  swift_retain();
  return swift_retain();
}

uint64_t sub_237999AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  uint64_t result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;
  char v36;

  v10 = sub_237A87578();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237A87590();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(double *)(a1 + 8);
  v20 = *(double *)(a1 + 24);
  if (v19 > -v20 && v19 < v20)
  {
    LOBYTE(aBlock) = a4 & 1;
    v31 = a5;
    v36 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568249D0);
    return sub_237A8735C();
  }
  else
  {
    v27 = v16;
    v28 = v11;
    v29 = a3;
    LOBYTE(aBlock) = a4 & 1;
    v31 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568249D0);
    result = sub_237A87350();
    if (v36 == 1)
    {
      LOBYTE(aBlock) = a4 & 1;
      v31 = a5;
      v36 = 0;
      sub_237A8735C();
      sub_23799DB9C();
      v23 = (void *)sub_237A87D70();
      v24 = swift_allocObject();
      v25 = v29;
      *(_QWORD *)(v24 + 16) = a2;
      *(_QWORD *)(v24 + 24) = v25;
      *(_BYTE *)(v24 + 32) = a4 & 1;
      *(_QWORD *)(v24 + 40) = a5;
      v34 = sub_23790C304;
      v35 = v24;
      aBlock = MEMORY[0x24BDAC760];
      v31 = 1107296256;
      v32 = sub_237A44D44;
      v33 = &block_descriptor_67;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      sub_237A87584();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_23799DBF4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568213F8);
      sub_2378B70D4((unint64_t *)&qword_256828FF0, &qword_2568213F8, MEMORY[0x24BEE12C8]);
      sub_237A87E9C();
      MEMORY[0x23B81E9DC](0, v18, v13, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v27);
    }
  }
  return result;
}

uint64_t sub_237999D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237999D8C(a1, &qword_2568249D8, &qword_2568249E0, (uint64_t)sub_23799DC40, a2);
}

uint64_t sub_237999D8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;

  v12 = *v5;
  v11 = v5[1];
  v13 = *((_BYTE *)v5 + 16);
  v14 = v5[3];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v11;
  *(_BYTE *)(v15 + 32) = v13;
  *(_QWORD *)(v15 + 40) = v14;
  swift_retain();
  swift_retain();
  v16 = sub_237A874AC();
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a5, a1, v19);
  result = __swift_instantiateConcreteTypeFromMangledName(a3);
  v21 = (_QWORD *)(a5 + *(int *)(result + 36));
  *v21 = a4;
  v21[1] = v15;
  v21[2] = v16;
  v21[3] = v18;
  return result;
}

id sub_237999E58()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7D0]), sel_init);
  objc_msgSend(v2, sel_setNumberOfPages_, v1);
  objc_msgSend(v2, sel_setHidesForSinglePage_, 1);
  objc_msgSend(v2, sel_setDirection_, 3);
  objc_msgSend(v2, sel_setAllowsContinuousInteraction_, 0);
  return v2;
}

id sub_237999EE0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  CGAffineTransform v6;

  v3 = *v1;
  v4 = v1[1];
  CGAffineTransformMakeScale(&v6, *((CGFloat *)v1 + 2), *((CGFloat *)v1 + 2));
  objc_msgSend(a1, sel_setTransform_, &v6);
  objc_msgSend(a1, sel_setNumberOfPages_, v3);
  return objc_msgSend(a1, sel_setCurrentPage_, v4);
}

uint64_t sub_237999F7C()
{
  return sub_237A86CC0();
}

uint64_t sub_237999FBC()
{
  sub_23799DC94();
  return sub_237A86D20();
}

uint64_t sub_23799A00C()
{
  sub_23799DC94();
  return sub_237A86CCC();
}

void sub_23799A05C()
{
  sub_23799DC94();
  sub_237A86D14();
  __break(1u);
}

uint64_t sub_23799A080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  sub_237A866CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_23799A118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237992E38();
  *a1 = result;
  return result;
}

uint64_t sub_23799A140()
{
  return sub_237992EC0();
}

uint64_t sub_23799A164@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237992F4C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23799A190()
{
  return sub_237992F60();
}

uint64_t sub_23799A1B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237992F74();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23799A1E0()
{
  return sub_237993010();
}

BOOL _s14CarPlayAssetUI13CarouselStyleO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  _BOOL8 v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return *(double *)a1 == *(double *)a2
        && *(double *)(a1 + 8) == *(double *)(a2 + 8)
        && ((v3 ^ v2) & 1) == 0;
  return v4;
}

uint64_t sub_23799A250(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  char v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t result;
  char *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = v3;
  v63 = a3;
  v73 = a2;
  v66 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v70 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v64 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v58 - v9;
  v69 = sub_237A87E0C();
  v72 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v61 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v58 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v58 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v58 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820C70);
  v67 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256821408);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t *)((char *)v4 + *(_QWORD *)(v5 + 112));
  *v25 = 0;
  v25[1] = 0;
  v26 = (uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 120));
  *v26 = 0;
  v26[1] = 0;
  v27 = (uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 128));
  *v27 = 0;
  v27[1] = 0;
  v28 = (uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 136));
  *v28 = 0;
  v28[1] = 0;
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 152)) = 0x3FE999999999999ALL;
  v29 = (uint64_t)v4 + *(_QWORD *)(*v4 + 168);
  v65 = v5;
  v59 = *(_QWORD *)(v5 + 88);
  v30 = v6;
  v31 = v66;
  v74 = 0;
  sub_237A866CC();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v29, v24, v21);
  v32 = (uint64_t)v4 + *(_QWORD *)(*v4 + 176);
  LOBYTE(v74) = 0;
  sub_237A866CC();
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
  v33(v32, v20, v18);
  v34 = (uint64_t)v4 + *(_QWORD *)(*v4 + 184);
  LOBYTE(v74) = 0;
  sub_237A866CC();
  v33(v34, v20, v18);
  v35 = *(_QWORD *)(*v4 + 192);
  *(uint64_t *)((char *)v4 + v35) = sub_237A874C4();
  v74 = v31;
  v36 = sub_237A87B30();
  v37 = MEMORY[0x23B81FA98](MEMORY[0x24BEE12E0], v36);
  if ((sub_237A87C98() & 1) == 0)
  {
    v60 = v37;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
    v39 = v69;
    v38(v17, v73, v69);
    v67 = *(_QWORD *)(v70 + 48);
    v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v67)(v17, 1, v30);
    v41 = v17;
    v42 = ((uint64_t (*)(char *, char *, uint64_t))v38)(v71, v17, v39);
    if (v40 == 1)
    {
      v43 = v39;
      v44 = *(void (**)(char *, uint64_t))(v72 + 8);
      v44(v71, v43);
      v45 = v68;
    }
    else
    {
      v74 = v31;
      v46 = MEMORY[0x24BDAC7A8](v42);
      v47 = v59;
      *(&v58 - 4) = v30;
      *(&v58 - 3) = v47;
      v48 = v71;
      v56 = v71;
      MEMORY[0x23B81FA98](MEMORY[0x24BEE12C8], v36, v46);
      v49 = sub_237A879D4();
      v43 = v69;
      v44 = *(void (**)(char *, uint64_t))(v72 + 8);
      v44(v48, v69);
      v45 = v68;
      if ((v49 & 1) == 0)
      {
        v57 = 0;
        v56 = 0;
        goto LABEL_13;
      }
    }
    v44(v41, v43);
    *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 144)) = v31;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    v75 = v31;
    sub_23799A080((uint64_t)&v75, v36);
    swift_endAccess();
    v38(v45, v73, v43);
    v50 = (unsigned int (*)(char *, uint64_t, uint64_t))v67;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v67)(v45, 1, v30) != 1)
    {
      swift_bridgeObjectRelease();
      v52 = v70;
      v53 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v62, v45, v30);
      goto LABEL_9;
    }
    v74 = v31;
    v51 = v61;
    sub_237A87C8C();
    swift_bridgeObjectRelease();
    if (v50(v51, 1, v30) != 1)
    {
      v52 = v70;
      v53 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v62, v51, v30);
      v44(v45, v43);
LABEL_9:
      swift_beginAccess();
      sub_237992218(v53, v30);
      swift_endAccess();
      *((_BYTE *)v4 + *(_QWORD *)(*v4 + 104)) = v63 & 1;
      v54 = v64;
      sub_237992424();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_237992398();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v30);
      sub_237992EC0();
      return (uint64_t)v4;
    }
    __break(1u);
  }
  v57 = 0;
  v56 = 0;
LABEL_13:
  result = sub_237A880AC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CarouselModel.Direction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CarouselModel.Direction);
}

uint64_t sub_23799A914()
{
  return 16;
}

__n128 sub_23799A920(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799A92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 88);
  v11[2] = v3;
  v11[3] = v8;
  swift_getKeyPath();
  v11[0] = v3;
  v11[1] = v8;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  v9 = sub_237A86708();
  return sub_2379922BC(v9);
}

uint64_t sub_23799AA04(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_237A86714();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v7 - v5, a1, v3);
  swift_beginAccess();
  sub_237A86720();
  sub_237A866E4();
  return swift_endAccess();
}

uint64_t sub_23799AAC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_23799AAD4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_23799AAE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23799AB2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23799AB70(uint64_t a1)
{
  uint64_t v1;

  return sub_237993DD4(a1, v1) & 1;
}

uint64_t sub_23799AB94()
{
  return 16;
}

__n128 sub_23799ABA0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799ABAC()
{
  return sub_237995FE0() & 1;
}

uint64_t sub_23799ABCC()
{
  uint64_t v0;

  return sub_237994E20(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_23799ABEC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23799AC10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23799AC34()
{
  uint64_t v0;

  return sub_237995D08(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 16));
}

uint64_t sub_23799AC50()
{
  uint64_t v0;

  return sub_237995C40(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23799AC6C()
{
  sub_237992F60();
  return sub_237993010();
}

uint64_t sub_23799ACB0()
{
  return sub_237995F00();
}

unint64_t sub_23799ACBC()
{
  unint64_t result;

  result = qword_256824770;
  if (!qword_256824770)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D5A4, &type metadata for OnScrollIn);
    atomic_store(result, (unint64_t *)&qword_256824770);
  }
  return result;
}

unint64_t sub_23799AD00()
{
  unint64_t result;

  result = qword_256824778;
  if (!qword_256824778)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D554, &type metadata for OnScrollOut);
    atomic_store(result, (unint64_t *)&qword_256824778);
  }
  return result;
}

void sub_23799AD44(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_237996FE0(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_23799AD54()
{
  unint64_t result;

  result = qword_2568247A0;
  if (!qword_2568247A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D514, &type metadata for ContentShape);
    atomic_store(result, (unint64_t *)&qword_2568247A0);
  }
  return result;
}

uint64_t sub_23799AD98@<X0>(void (**a1)()@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  void (*v4)();
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = *(_OWORD **)(v1 + 48);
  v4 = (void (*)())swift_allocObject();
  v5 = *(_OWORD *)(v1 + 32);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v1 + 16);
  *((_OWORD *)v4 + 2) = v5;
  *((_OWORD *)v4 + 3) = *v3;
  v7 = v3[3];
  v6 = v3[4];
  v8 = v3[2];
  *((_OWORD *)v4 + 4) = v3[1];
  *((_OWORD *)v4 + 5) = v8;
  *((_OWORD *)v4 + 6) = v7;
  *((_OWORD *)v4 + 7) = v6;
  *a1 = sub_23799DE84;
  a1[1] = v4;
  return sub_23799DE94((uint64_t)v3);
}

unint64_t sub_23799AE08()
{
  unint64_t result;

  result = qword_2568247C8;
  if (!qword_2568247C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for PageControlPosition, &type metadata for PageControlPosition);
    atomic_store(result, (unint64_t *)&qword_2568247C8);
  }
  return result;
}

unint64_t sub_23799AE50()
{
  unint64_t result;

  result = qword_2568247D0[0];
  if (!qword_2568247D0[0])
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for CarouselStyle, &type metadata for CarouselStyle);
    atomic_store(result, qword_2568247D0);
  }
  return result;
}

uint64_t sub_23799AE94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23799AED0()
{
  return 16;
}

__n128 sub_23799AEDC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799AEE8()
{
  return sub_2379924B4();
}

uint64_t sub_23799AF08(uint64_t a1)
{
  return sub_23799AA04(a1);
}

uint64_t sub_23799AF28()
{
  return 16;
}

__n128 sub_23799AF34(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799AF48()
{
  return 16;
}

__n128 sub_23799AF54(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799AF68()
{
  return 16;
}

__n128 sub_23799AF74(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799AF88()
{
  return 16;
}

__n128 sub_23799AF94(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799AFA8()
{
  return 16;
}

__n128 sub_23799AFB4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t storeEnumTagSinglePayload for PageControlPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23799B00C + 4 * byte_237A9CE05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23799B040 + 4 * byte_237A9CE00[v4]))();
}

uint64_t sub_23799B040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23799B048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23799B050);
  return result;
}

uint64_t sub_23799B05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23799B064);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23799B068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23799B070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageControlPosition()
{
  return &type metadata for PageControlPosition;
}

void sub_23799B08C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_237A86720();
  if (v0 <= 0x3F)
  {
    sub_237A87B30();
    sub_237A86720();
    if (v1 <= 0x3F)
    {
      sub_23799B2C8(319, qword_256824858);
      if (v2 <= 0x3F)
      {
        sub_23799B2C8(319, (unint64_t *)&qword_256820DB0);
        if (v3 <= 0x3F)
          swift_initClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for CarouselModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CarouselModel);
}

uint64_t method lookup function for CarouselModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CarouselModel.activeItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CarouselModel.$activeItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of CarouselModel.__allocating_init(items:activeItem:alwaysHidesPlatter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 632))();
}

uint64_t dispatch thunk of CarouselModel.getTargetItem(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of CarouselModel.insert(_:before:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of CarouselModel.remove(_:moveTo:animated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of CarouselModel.rotate(_:animated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of CarouselModel.showDecorations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

void sub_23799B2C8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_237A86720();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23799B30C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23799B374(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  _BOOL8 v23;
  unsigned int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        v9 = 4;
      }
      else
      {
        v11 = v10 != 0;
        v12 = v10 >= 0xFF;
        v9 = 2;
        if (!v12)
          v9 = v11;
      }
    }
    else
    {
      v9 = 1;
    }
    v8 = v9 + v7;
  }
  v13 = *(_DWORD *)(v5 + 80);
  if (v13 > 7 || v8 > 0x18 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
    return a1;
  }
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v18 > 0xFFFE)
      {
        v17 = *(_DWORD *)((char *)a2 + v7);
        if (!v17)
          goto LABEL_36;
        goto LABEL_27;
      }
      if (v18 > 0xFE)
      {
        v17 = *(unsigned __int16 *)((char *)a2 + v7);
        if (!*(_WORD *)((char *)a2 + v7))
          goto LABEL_36;
        goto LABEL_27;
      }
      if (!v18)
      {
LABEL_36:
        if (v6)
          goto LABEL_37;
LABEL_50:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        if (v7 > 3)
          goto LABEL_54;
        goto LABEL_51;
      }
    }
    v17 = *((unsigned __int8 *)a2 + v7);
    if (!*((_BYTE *)a2 + v7))
      goto LABEL_36;
LABEL_27:
    v19 = (v17 - 1) << (8 * v7);
    if (v7 > 3)
      v19 = 0;
    if ((_DWORD)v7)
    {
      if (v7 <= 3)
        v20 = v7;
      else
        v20 = 4;
      __asm { BR              X11 }
    }
    if (v19 + v6 != -1)
      goto LABEL_44;
    goto LABEL_50;
  }
LABEL_37:
  if ((*(unsigned int (**)(_QWORD *, _QWORD, uint64_t))(v5 + 48))(a2, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
  {
    if (v6 > 1)
    {
LABEL_57:
      memcpy(a1, a2, v7);
      return a1;
    }
LABEL_44:
    if (v7 <= 3)
    {
      v22 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v22 > 0xFFFE)
      {
        v21 = 4;
      }
      else
      {
        v23 = v22 != 0;
        v12 = v22 >= 0xFF;
        v21 = 2;
        if (!v12)
          v21 = v23;
      }
    }
    else
    {
      v21 = 1;
    }
    v7 += v21;
    goto LABEL_57;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  if (v6 > 1)
    return a1;
  if (v7 > 3)
  {
LABEL_54:
    *((_BYTE *)a1 + v7) = 0;
    return a1;
  }
LABEL_51:
  v24 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v24 > 0xFFFE)
  {
    *(_DWORD *)((char *)a1 + v7) = 0;
    return a1;
  }
  if (v24 > 0xFE)
  {
    *(_WORD *)((char *)a1 + v7) = 0;
    return a1;
  }
  if (v24)
    goto LABEL_54;
  return a1;
}

uint64_t sub_23799B670(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 84);
  if (v4 > 1)
  {
LABEL_18:
    result = (*(uint64_t (**)(uint64_t))(v3 + 48))(a1);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  }
  v5 = *(_QWORD *)(v3 + 64);
  v6 = 8 * v5;
  if (v5 <= 3)
  {
    v8 = (~(-1 << v6) - v4 + 2) >> v6;
    if (v8 > 0xFFFE)
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_17;
      goto LABEL_10;
    }
    if (v8 > 0xFE)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_17;
      goto LABEL_10;
    }
    if (!v8)
    {
LABEL_17:
      if (!v4)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_18;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_17;
LABEL_10:
  v9 = (v7 - 1) << v6;
  if (v5 > 3)
    v9 = 0;
  if ((_DWORD)v5)
  {
    if (v5 > 3)
      LODWORD(v5) = 4;
    __asm { BR              X11 }
  }
  result = v4 + v9 + 1;
  if (v4 + v9 == -1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

_BYTE *sub_23799B7CC(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;
  unsigned int v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 1)
    goto LABEL_20;
  if (v7 > 3)
    goto LABEL_3;
  v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v9 > 0xFFFE)
  {
    v8 = *(_DWORD *)&a2[v7];
    if (!v8)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v9 > 0xFE)
  {
    v8 = *(unsigned __int16 *)&a2[v7];
    if (!*(_WORD *)&a2[v7])
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_3:
    v8 = a2[v7];
    if (!a2[v7])
      goto LABEL_19;
LABEL_10:
    v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3)
      v10 = 0;
    if ((_DWORD)v7)
    {
      if (v7 <= 3)
        v11 = *(_QWORD *)(v5 + 64);
      else
        v11 = 4;
      __asm { BR              X11 }
    }
    if (v10 + v6 != -1)
      goto LABEL_27;
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    if (v7 > 3)
    {
LABEL_37:
      a1[v7] = 0;
      return a1;
    }
    goto LABEL_34;
  }
LABEL_19:
  if (!v6)
    goto LABEL_33;
LABEL_20:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v5 + 48))(a2, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
  {
    if (v6 > 1)
    {
LABEL_40:
      memcpy(a1, a2, v7);
      return a1;
    }
LABEL_27:
    if (v7 <= 3)
    {
      v13 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v13 > 0xFFFE)
      {
        v12 = 4;
      }
      else
      {
        v14 = v13 != 0;
        v15 = v13 >= 0xFF;
        v12 = 2;
        if (!v15)
          v12 = v14;
      }
    }
    else
    {
      v12 = 1;
    }
    v7 += v12;
    goto LABEL_40;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  if (v6 > 1)
    return a1;
  if (v7 > 3)
    goto LABEL_37;
LABEL_34:
  v16 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v16 > 0xFFFE)
  {
    *(_DWORD *)&a1[v7] = 0;
    return a1;
  }
  if (v16 > 0xFE)
  {
    *(_WORD *)&a1[v7] = 0;
    return a1;
  }
  if (v16)
    goto LABEL_37;
  return a1;
}

_BYTE *sub_23799BA2C(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  int v8;
  unsigned int (*v9)(_BYTE *, uint64_t, uint64_t);
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  _BOOL8 v23;
  BOOL v24;
  unsigned int v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 <= 1)
  {
    if (v7 > 3)
      goto LABEL_3;
    v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
    if (v10 > 0xFFFE)
    {
      v8 = *(_DWORD *)&a1[v7];
      if (v8)
        goto LABEL_13;
    }
    else
    {
      if (v10 <= 0xFE)
      {
        if (!v10)
          goto LABEL_22;
LABEL_3:
        v8 = a1[v7];
        if (!a1[v7])
          goto LABEL_22;
LABEL_13:
        v11 = (v8 - 1) << (8 * v7);
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v12 = *(_QWORD *)(v5 + 64);
          else
            v12 = 4;
          __asm { BR              X11 }
        }
        if (v11 + (_DWORD)v6 == -1)
        {
LABEL_24:
          if (v7 > 3)
            goto LABEL_25;
          v14 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v14 > 0xFFFE)
          {
            v13 = *(_DWORD *)&a2[v7];
            if (v13)
              goto LABEL_32;
          }
          else
          {
            if (v14 <= 0xFE)
            {
              if (!v14)
                goto LABEL_62;
LABEL_25:
              v13 = a2[v7];
              if (!a2[v7])
                goto LABEL_62;
LABEL_32:
              v15 = (v13 - 1) << (8 * v7);
              if (v7 > 3)
                v15 = 0;
              if ((_DWORD)v7)
              {
                if (v7 <= 3)
                  v16 = v7;
                else
                  v16 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v6 + v15 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
                if (v6 <= 1)
                {
LABEL_68:
                  if (v7 <= 3)
                  {
                    v22 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
                    if (v22 > 0xFFFE)
                    {
                      v21 = 4;
                    }
                    else
                    {
                      v23 = v22 != 0;
                      v24 = v22 >= 0xFF;
                      v21 = 2;
                      if (!v24)
                        v21 = v23;
                    }
                  }
                  else
                  {
                    v21 = 1;
                  }
                  v7 += v21;
                }
LABEL_78:
                memcpy(a1, a2, v7);
                return a1;
              }
LABEL_85:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
              return a1;
            }
            v13 = *(unsigned __int16 *)&a2[v7];
            if (*(_WORD *)&a2[v7])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v6)
            goto LABEL_85;
          v9 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v7 > 3)
          goto LABEL_42;
        v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v18 > 0xFFFE)
        {
          v17 = *(_DWORD *)&a2[v7];
          if (v17)
            goto LABEL_49;
        }
        else
        {
          if (v18 <= 0xFE)
          {
            if (!v18)
              goto LABEL_58;
LABEL_42:
            v17 = a2[v7];
            if (!a2[v7])
              goto LABEL_58;
LABEL_49:
            v19 = (v17 - 1) << (8 * v7);
            if (v7 > 3)
              v19 = 0;
            if ((_DWORD)v7)
            {
              if (v7 <= 3)
                v20 = v7;
              else
                v20 = 4;
              __asm { BR              X11 }
            }
            if (v19 + (_DWORD)v6 != -1)
              goto LABEL_68;
LABEL_74:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
            if (v7 <= 3)
            {
              v25 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
              if (v25 > 0xFFFE)
              {
                *(_DWORD *)&a1[v7] = 0;
                return a1;
              }
              if (v25 > 0xFE)
              {
                *(_WORD *)&a1[v7] = 0;
                return a1;
              }
              if (!v25)
                return a1;
            }
            a1[v7] = 0;
            return a1;
          }
          v17 = *(unsigned __int16 *)&a2[v7];
          if (*(_WORD *)&a2[v7])
            goto LABEL_49;
        }
LABEL_58:
        if ((_DWORD)v6
          && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(a2, v6, AssociatedTypeWitness))
        {
          goto LABEL_68;
        }
        goto LABEL_74;
      }
      v8 = *(unsigned __int16 *)&a1[v7];
      if (*(_WORD *)&a1[v7])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v6
      || !(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v9 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
  if (!v9(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
  {
LABEL_64:
    if (v9(a2, v6, AssociatedTypeWitness))
      goto LABEL_65;
    goto LABEL_85;
  }
  if (v9(a2, v6, AssociatedTypeWitness))
    goto LABEL_78;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

_BYTE *sub_23799BEB8(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;
  unsigned int v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 1)
    goto LABEL_20;
  if (v7 > 3)
    goto LABEL_3;
  v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v9 > 0xFFFE)
  {
    v8 = *(_DWORD *)&a2[v7];
    if (!v8)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v9 > 0xFE)
  {
    v8 = *(unsigned __int16 *)&a2[v7];
    if (!*(_WORD *)&a2[v7])
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_3:
    v8 = a2[v7];
    if (!a2[v7])
      goto LABEL_19;
LABEL_10:
    v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3)
      v10 = 0;
    if ((_DWORD)v7)
    {
      if (v7 <= 3)
        v11 = *(_QWORD *)(v5 + 64);
      else
        v11 = 4;
      __asm { BR              X11 }
    }
    if (v10 + v6 != -1)
      goto LABEL_27;
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    if (v7 > 3)
    {
LABEL_37:
      a1[v7] = 0;
      return a1;
    }
    goto LABEL_34;
  }
LABEL_19:
  if (!v6)
    goto LABEL_33;
LABEL_20:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v5 + 48))(a2, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
  {
    if (v6 > 1)
    {
LABEL_40:
      memcpy(a1, a2, v7);
      return a1;
    }
LABEL_27:
    if (v7 <= 3)
    {
      v13 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v13 > 0xFFFE)
      {
        v12 = 4;
      }
      else
      {
        v14 = v13 != 0;
        v15 = v13 >= 0xFF;
        v12 = 2;
        if (!v15)
          v12 = v14;
      }
    }
    else
    {
      v12 = 1;
    }
    v7 += v12;
    goto LABEL_40;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  if (v6 > 1)
    return a1;
  if (v7 > 3)
    goto LABEL_37;
LABEL_34:
  v16 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v16 > 0xFFFE)
  {
    *(_DWORD *)&a1[v7] = 0;
    return a1;
  }
  if (v16 > 0xFE)
  {
    *(_WORD *)&a1[v7] = 0;
    return a1;
  }
  if (v16)
    goto LABEL_37;
  return a1;
}

_BYTE *sub_23799C118(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  int v8;
  unsigned int (*v9)(_BYTE *, uint64_t, uint64_t);
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  _BOOL8 v23;
  BOOL v24;
  unsigned int v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 <= 1)
  {
    if (v7 > 3)
      goto LABEL_3;
    v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
    if (v10 > 0xFFFE)
    {
      v8 = *(_DWORD *)&a1[v7];
      if (v8)
        goto LABEL_13;
    }
    else
    {
      if (v10 <= 0xFE)
      {
        if (!v10)
          goto LABEL_22;
LABEL_3:
        v8 = a1[v7];
        if (!a1[v7])
          goto LABEL_22;
LABEL_13:
        v11 = (v8 - 1) << (8 * v7);
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v12 = *(_QWORD *)(v5 + 64);
          else
            v12 = 4;
          __asm { BR              X11 }
        }
        if (v11 + (_DWORD)v6 == -1)
        {
LABEL_24:
          if (v7 > 3)
            goto LABEL_25;
          v14 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v14 > 0xFFFE)
          {
            v13 = *(_DWORD *)&a2[v7];
            if (v13)
              goto LABEL_32;
          }
          else
          {
            if (v14 <= 0xFE)
            {
              if (!v14)
                goto LABEL_62;
LABEL_25:
              v13 = a2[v7];
              if (!a2[v7])
                goto LABEL_62;
LABEL_32:
              v15 = (v13 - 1) << (8 * v7);
              if (v7 > 3)
                v15 = 0;
              if ((_DWORD)v7)
              {
                if (v7 <= 3)
                  v16 = v7;
                else
                  v16 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v6 + v15 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
                if (v6 <= 1)
                {
LABEL_68:
                  if (v7 <= 3)
                  {
                    v22 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
                    if (v22 > 0xFFFE)
                    {
                      v21 = 4;
                    }
                    else
                    {
                      v23 = v22 != 0;
                      v24 = v22 >= 0xFF;
                      v21 = 2;
                      if (!v24)
                        v21 = v23;
                    }
                  }
                  else
                  {
                    v21 = 1;
                  }
                  v7 += v21;
                }
LABEL_78:
                memcpy(a1, a2, v7);
                return a1;
              }
LABEL_85:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
              return a1;
            }
            v13 = *(unsigned __int16 *)&a2[v7];
            if (*(_WORD *)&a2[v7])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v6)
            goto LABEL_85;
          v9 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v7 > 3)
          goto LABEL_42;
        v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v18 > 0xFFFE)
        {
          v17 = *(_DWORD *)&a2[v7];
          if (v17)
            goto LABEL_49;
        }
        else
        {
          if (v18 <= 0xFE)
          {
            if (!v18)
              goto LABEL_58;
LABEL_42:
            v17 = a2[v7];
            if (!a2[v7])
              goto LABEL_58;
LABEL_49:
            v19 = (v17 - 1) << (8 * v7);
            if (v7 > 3)
              v19 = 0;
            if ((_DWORD)v7)
            {
              if (v7 <= 3)
                v20 = v7;
              else
                v20 = 4;
              __asm { BR              X11 }
            }
            if (v19 + (_DWORD)v6 != -1)
              goto LABEL_68;
LABEL_74:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
            if (v7 <= 3)
            {
              v25 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
              if (v25 > 0xFFFE)
              {
                *(_DWORD *)&a1[v7] = 0;
                return a1;
              }
              if (v25 > 0xFE)
              {
                *(_WORD *)&a1[v7] = 0;
                return a1;
              }
              if (!v25)
                return a1;
            }
            a1[v7] = 0;
            return a1;
          }
          v17 = *(unsigned __int16 *)&a2[v7];
          if (*(_WORD *)&a2[v7])
            goto LABEL_49;
        }
LABEL_58:
        if ((_DWORD)v6
          && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(a2, v6, AssociatedTypeWitness))
        {
          goto LABEL_68;
        }
        goto LABEL_74;
      }
      v8 = *(unsigned __int16 *)&a1[v7];
      if (*(_WORD *)&a1[v7])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v6
      || !(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v9 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
  if (!v9(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness))
  {
LABEL_64:
    if (v9(a2, v6, AssociatedTypeWitness))
      goto LABEL_65;
    goto LABEL_85;
  }
  if (v9(a2, v6, AssociatedTypeWitness))
    goto LABEL_78;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23799C5A4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 2;
  v8 = *(_QWORD *)(v5 + 64);
  if (v6 <= 1)
  {
    v7 = 0;
    if (v8 <= 3)
    {
      v10 = (~(-1 << (8 * v8)) - v6 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        v9 = 4;
      }
      else
      {
        v11 = v10 != 0;
        v12 = v10 >= 0xFF;
        v9 = 2;
        if (!v12)
          v9 = v11;
      }
    }
    else
    {
      v9 = 1;
    }
    v8 += v9;
  }
  if (!a2)
    return 0;
  if (a2 <= v7)
    goto LABEL_27;
  v13 = 8 * v8;
  if (v8 > 3)
    goto LABEL_13;
  v15 = ((a2 - v7 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    v14 = *(_DWORD *)(a1 + v8);
    if (v14)
      goto LABEL_20;
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2)
        goto LABEL_27;
LABEL_13:
      v14 = *(unsigned __int8 *)(a1 + v8);
      if (!*(_BYTE *)(a1 + v8))
        goto LABEL_27;
LABEL_20:
      v16 = (v14 - 1) << v13;
      if (v8 > 3)
        v16 = 0;
      if ((_DWORD)v8)
      {
        if (v8 > 3)
          LODWORD(v8) = 4;
        __asm { BR              X12 }
      }
      return v7 + v16 + 1;
    }
    v14 = *(unsigned __int16 *)(a1 + v8);
    if (*(_WORD *)(a1 + v8))
      goto LABEL_20;
  }
LABEL_27:
  if (!v7)
    return 0;
  if (!(_DWORD)v6)
    return 0;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
  v12 = v17 >= 2;
  result = v17 - 2;
  if ((_DWORD)result == 0 || !v12)
    return 0;
  return result;
}

void sub_23799C750(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v9;
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v12 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v12 > 0xFFFE)
      {
        v11 = 4;
      }
      else
      {
        v13 = v12 != 0;
        v14 = v12 >= 0xFF;
        v11 = 2;
        if (!v14)
          v11 = v13;
      }
    }
    else
    {
      v11 = 1;
    }
    v10 = v11 + v9;
  }
  if (a3 <= v8)
  {
    v15 = 0;
  }
  else if (v10 <= 3)
  {
    v17 = ((a3 - v8 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v8 < a2)
  {
    v16 = ~v8 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v18 = v16 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v10 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_23799C9F8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x23799C9E4);
}

void sub_23799CA08()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x23799C9E4);
}

void sub_23799CA10()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x23799C9E4);
}

uint64_t sub_23799CA1C(uint64_t a1)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v7;
  int v8;

  v2 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v3 = *(_DWORD *)(v2 + 84);
  if (v3 > 1)
    return (*(uint64_t (**)(uint64_t))(v2 + 48))(a1);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = 8 * v4;
  if (v4 > 3)
    goto LABEL_3;
  v7 = (~(-1 << v5) - v3 + 2) >> v5;
  if (v7 > 0xFFFE)
  {
    v6 = *(_DWORD *)(a1 + v4);
    if (v6)
      goto LABEL_10;
  }
  else
  {
    if (v7 <= 0xFE)
    {
      if (!v7)
        goto LABEL_17;
LABEL_3:
      v6 = *(unsigned __int8 *)(a1 + v4);
      if (!*(_BYTE *)(a1 + v4))
        goto LABEL_17;
LABEL_10:
      v8 = (v6 - 1) << v5;
      if (v4 > 3)
        v8 = 0;
      if ((_DWORD)v4)
      {
        if (v4 > 3)
          LODWORD(v4) = 4;
        __asm { BR              X11 }
      }
      return v3 + v8 + 1;
    }
    v6 = *(unsigned __int16 *)(a1 + v4);
    if (*(_WORD *)(a1 + v4))
      goto LABEL_10;
  }
LABEL_17:
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v2 + 48))(a1);
  return 0;
}

void sub_23799CB58(_BYTE *a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  size_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5 > 1)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (~(-1 << (8 * v6)) - v5 + 2) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = 4u;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (v5 < a2)
  {
    v8 = ~v5 + a2;
    if (v6 < 4)
    {
      if ((_DWORD)v6)
      {
        v10 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if ((_DWORD)v6 == 3)
        {
          *(_WORD *)a1 = v10;
          a1[2] = BYTE2(v10);
        }
        else if ((_DWORD)v6 == 2)
        {
          *(_WORD *)a1 = v10;
        }
        else
        {
          *a1 = v10;
        }
      }
    }
    else
    {
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t getEnumTagSinglePayload for CarouselStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CarouselStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 2;
  }
  return result;
}

uint64_t sub_23799CDB8(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

uint64_t sub_23799CDCC(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CarouselStyle()
{
  return &type metadata for CarouselStyle;
}

uint64_t sub_23799CE04()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23799CE0C(uint64_t a1)
{
  sub_2378E38C0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  swift_release();
  return swift_release();
}

uint64_t sub_23799CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_BYTE *)(a2 + 8);
  sub_2378E38B4(*(_QWORD *)a2, v6, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23799CEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_BYTE *)(a2 + 8);
  sub_2378E38B4(*(_QWORD *)a2, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v4;
  v9 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v5;
  sub_2378E38C0(v7, v9, v8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain();
  swift_release();
  v11 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_23799CFB8(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 9) = v5;
  sub_2378E38C0(v6, v8, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v9 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v9;
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_23799D044(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23799D08C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Carousel()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t sub_23799D0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[8];

  v18 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824748);
  v1 = sub_237A87B30();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824750);
  v4 = sub_237A869B4();
  v5 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824758);
  v6 = sub_237A869B4();
  v17 = sub_237A869B4();
  v7 = sub_237A869B4();
  v28[2] = v1;
  v28[3] = AssociatedTypeWitness;
  v28[4] = v7;
  v28[5] = MEMORY[0x23B81FA98](MEMORY[0x24BEE12D8], v1);
  v28[6] = swift_getAssociatedConformanceWitness();
  v8 = sub_237A8741C();
  v28[0] = v18;
  v28[1] = MEMORY[0x24BDEBEE0];
  v9 = MEMORY[0x24BDED308];
  v27[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v3, v28);
  v27[1] = sub_2378B70D4(&qword_256824760, &qword_256824750, MEMORY[0x24BDEB950]);
  v26[0] = MEMORY[0x23B81FA98](v9, v4, v27);
  v26[1] = MEMORY[0x24BDEBF50];
  v25[0] = MEMORY[0x23B81FA98](v9, v5, v26);
  v25[1] = sub_2378B70D4(&qword_256824768, &qword_256824758, MEMORY[0x24BDEFB48]);
  v24[0] = MEMORY[0x23B81FA98](v9, v6, v25);
  v24[1] = sub_23799ACBC();
  v23[0] = MEMORY[0x23B81FA98](v9, v17, v24);
  v23[1] = sub_23799AD00();
  v22 = MEMORY[0x23B81FA98](v9, v7, v23);
  MEMORY[0x23B81FA98](MEMORY[0x24BDF4A08], v8, &v22);
  v10 = sub_237A873A4();
  v11 = sub_237A869B4();
  v21[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDF4700], v10);
  v21[1] = MEMORY[0x24BDEC438];
  MEMORY[0x23B81FA98](v9, v11, v21);
  sub_237A86978();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824780);
  sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824788);
  sub_237A869B4();
  swift_getTupleTypeMetadata2();
  v12 = sub_237A87524();
  MEMORY[0x23B81FA98](MEMORY[0x24BDF5428], v12);
  v13 = sub_237A873BC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824790);
  v14 = sub_237A869B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824798);
  v15 = sub_237A869B4();
  v20[0] = MEMORY[0x23B81FA98](MEMORY[0x24BDF4750], v13);
  v20[1] = sub_2378B70D4(&qword_2568247B0, &qword_256824790, MEMORY[0x24BDF03D8]);
  v19[0] = MEMORY[0x23B81FA98](v9, v14, v20);
  v19[1] = sub_2378B70D4(&qword_2568247C0, &qword_256824798, MEMORY[0x24BDEDC10]);
  return MEMORY[0x23B81FA98](v9, v15, v19);
}

uint64_t getEnumTagSinglePayload for PageControl(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PageControl(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PageControl()
{
  return &type metadata for PageControl;
}

ValueMetadata *type metadata accessor for OnScrollOut()
{
  return &type metadata for OnScrollOut;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwxx_0()
{
  swift_release();
  return swift_release();
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23799D6FC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnScrollIn()
{
  return &type metadata for OnScrollIn;
}

uint64_t getEnumTagSinglePayload for ContentShape(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 16) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentShape()
{
  return &type metadata for ContentShape;
}

uint64_t getEnumTagSinglePayload for ContentShape.ContentShapeInset(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 16) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentShape.ContentShapeInset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentShape.ContentShapeInset()
{
  return &type metadata for ContentShape.ContentShapeInset;
}

uint64_t sub_23799D89C()
{
  return sub_2378B70D4(&qword_256824960, &qword_256824968, MEMORY[0x24BDEB358]);
}

unint64_t sub_23799D8CC()
{
  unint64_t result;

  result = qword_256824970;
  if (!qword_256824970)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D2B4, &type metadata for ContentShape.ContentShapeInset);
    atomic_store(result, (unint64_t *)&qword_256824970);
  }
  return result;
}

unint64_t sub_23799D914()
{
  unint64_t result;

  result = qword_256824978;
  if (!qword_256824978)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D214, &type metadata for ContentShape.ContentShapeInset);
    atomic_store(result, (unint64_t *)&qword_256824978);
  }
  return result;
}

unint64_t sub_23799D95C()
{
  unint64_t result;

  result = qword_256824980;
  if (!qword_256824980)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEADB0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256824980);
  }
  return result;
}

unint64_t sub_23799D9A4()
{
  unint64_t result;

  result = qword_256824988;
  if (!qword_256824988)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D264, &type metadata for ContentShape.ContentShapeInset);
    atomic_store(result, (unint64_t *)&qword_256824988);
  }
  return result;
}

uint64_t sub_23799D9E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23799D9F8()
{
  return sub_2378B70D4(&qword_256824990, &qword_256824998, MEMORY[0x24BDEB358]);
}

unint64_t sub_23799DA28()
{
  unint64_t result;

  result = qword_2568249A0;
  if (!qword_2568249A0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D394, &type metadata for ContentShape);
    atomic_store(result, (unint64_t *)&qword_2568249A0);
  }
  return result;
}

unint64_t sub_23799DA70()
{
  unint64_t result;

  result = qword_2568249A8;
  if (!qword_2568249A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D344, &type metadata for ContentShape);
    atomic_store(result, (unint64_t *)&qword_2568249A8);
  }
  return result;
}

unint64_t sub_23799DAB8()
{
  unint64_t result;

  result = qword_2568249B0;
  if (!qword_2568249B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D434, &type metadata for PageControl);
    atomic_store(result, (unint64_t *)&qword_2568249B0);
  }
  return result;
}

unint64_t sub_23799DB00()
{
  unint64_t result;

  result = qword_2568249B8;
  if (!qword_2568249B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D3E4, &type metadata for ContentShape);
    atomic_store(result, (unint64_t *)&qword_2568249B8);
  }
  return result;
}

uint64_t sub_23799DB44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23799DB54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23799DB64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23799DB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_237999550(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23799DB8C(uint64_t a1)
{
  uint64_t v1;

  return sub_2379996A4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_23799DB9C()
{
  unint64_t result;

  result = qword_2568213F0;
  if (!qword_2568213F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568213F0);
  }
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_23799DBF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256828FE0;
  if (!qword_256828FE0)
  {
    v1 = sub_237A87578();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_256828FE0);
  }
  return result;
}

uint64_t sub_23799DC40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23799996C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23799DC54(uint64_t a1)
{
  uint64_t v1;

  return sub_237999AC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_48Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23799DC94()
{
  unint64_t result;

  result = qword_2568249E8;
  if (!qword_2568249E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D484, &type metadata for PageControl);
    atomic_store(result, (unint64_t *)&qword_2568249E8);
  }
  return result;
}

uint64_t sub_23799DCD8()
{
  sub_237992F60();
  return sub_237993010();
}

uint64_t sub_23799DD08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237992F74();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23799DD34()
{
  return sub_237993010();
}

uint64_t sub_23799DD58()
{
  return 16;
}

__n128 sub_23799DD64(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799DD70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237992F4C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23799DD9C()
{
  return sub_237992F60();
}

uint64_t sub_23799DDC0()
{
  return 16;
}

__n128 sub_23799DDCC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799DDD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237992E38();
  *a1 = result;
  return result;
}

uint64_t sub_23799DE00()
{
  return sub_237992EC0();
}

uint64_t sub_23799DE24()
{
  return 16;
}

__n128 sub_23799DE30(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23799DE3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_23799DE5C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23799DE84()
{
  sub_237998DA8();
}

uint64_t sub_23799DE94(uint64_t a1)
{
  sub_2378E38B4(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23799DEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_117Tm()
{
  uint64_t v0;

  sub_2378E38C0(*(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_BYTE *)(v0 + 57));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23799DF6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_23799799C(a1, (uint64_t)(v2 + 6), v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_23799DF7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824A10;
  if (!qword_256824A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824748);
    v2[0] = sub_23799DFE8();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824A10);
  }
  return result;
}

unint64_t sub_23799DFE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256824A18;
  if (!qword_256824A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568249F8);
    v2 = sub_2378B70D4(&qword_256824A20, &qword_2568249F0, MEMORY[0x24BDF1330]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256824A18);
  }
  return result;
}

void sub_23799E06C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_237997EA4(v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_23799E07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_237A868DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_2378E38C0(*(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_BYTE *)(v0 + 57));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23799E108(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_237A868DC() - 8) + 80);
  sub_237998394(a1, (uint64_t)(v2 + 6), (uint64_t)v2 + ((v9 + 128) & ~v9), v5, v6, v7, v8, a2);
}

unint64_t sub_23799E180()
{
  unint64_t result;

  result = qword_256824A28;
  if (!qword_256824A28)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEFBB8], MEMORY[0x24BDEFBC8]);
    atomic_store(result, (unint64_t *)&qword_256824A28);
  }
  return result;
}

uint64_t sub_23799E1C8()
{
  return sub_23799E268((uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_237998BDC);
}

uint64_t objectdestroy_126Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_2378E38C0(*(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_BYTE *)(v0 + 57));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23799E25C()
{
  return sub_23799E268((uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_237998C6C);
}

uint64_t sub_23799E268(uint64_t (*a1)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  return a1(v1 + 48, v1 + ((v2 + 128) & ~v2), *(_QWORD *)(v1 + 16));
}

uint64_t sub_23799E290(uint64_t a1)
{
  uint64_t v1;

  return sub_237993104(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16)) & 1;
}

ValueMetadata *type metadata accessor for FrameKey()
{
  return &type metadata for FrameKey;
}

uint64_t sub_23799E2C0()
{
  return sub_23799E328(&qword_256824A30, &qword_2568249C8, &qword_256824A38, &qword_2568249C0);
}

uint64_t sub_23799E2F4()
{
  return sub_23799E328(&qword_256824A50, &qword_2568249E0, &qword_256824A58, &qword_2568249D8);
}

uint64_t sub_23799E328(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_2378B70D4(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = sub_2378B70D4(&qword_256824A40, &qword_256824A48, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23799E3C4()
{
  unint64_t result;

  result = qword_256824A60;
  if (!qword_256824A60)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D304, &type metadata for ContentShape.ContentShapeInset);
    atomic_store(result, (unint64_t *)&qword_256824A60);
  }
  return result;
}

uint64_t sub_23799E440()
{
  return sub_23799ABAC() & 1;
}

ValueMetadata *type metadata accessor for RotationOffsetEffect()
{
  return &type metadata for RotationOffsetEffect;
}

CGAffineTransform *sub_23799E470@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>)
{
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat ty;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  CGFloat v23;
  CGFloat v24;
  __double2 v25;
  CGFloat v26;
  CGFloat v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  CGAffineTransform *result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  double tx;
  CGAffineTransform v41;
  CGAffineTransform t2;
  CGAffineTransform t1;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  sub_237A8756C();
  v13 = v12;
  v15 = v14;
  tx = v12 * a2;
  v16 = v14 * a3;
  CGAffineTransformMakeTranslation(&t1, a5, a6);
  v34 = *(_OWORD *)&t1.c;
  v37 = *(_OWORD *)&t1.a;
  v17 = -(v15 * a3);
  v18 = t1.tx;
  ty = t1.ty;
  CGAffineTransformMakeTranslation(&t1, -(v13 * a2), v17);
  v20 = *(_OWORD *)&t1.a;
  v21 = *(_OWORD *)&t1.c;
  v22 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v37;
  *(_OWORD *)&t1.c = v34;
  t1.tx = v18;
  t1.ty = ty;
  *(_OWORD *)&t2.a = v20;
  *(_OWORD *)&t2.c = v21;
  *(_OWORD *)&t2.tx = v22;
  CGAffineTransformConcat(&v41, &t1, &t2);
  v35 = *(_OWORD *)&v41.c;
  v38 = *(_OWORD *)&v41.a;
  v23 = v41.tx;
  v24 = v41.ty;
  v25 = __sincos_stret(a4);
  *(_OWORD *)&t1.a = v38;
  *(_OWORD *)&t1.c = v35;
  t1.tx = v23;
  t1.ty = v24;
  t2.a = v25.__cosval;
  t2.b = v25.__sinval;
  t2.c = -v25.__sinval;
  t2.d = v25.__cosval;
  t2.tx = 0.0;
  t2.ty = 0.0;
  CGAffineTransformConcat(&v41, &t1, &t2);
  v36 = *(_OWORD *)&v41.c;
  v39 = *(_OWORD *)&v41.a;
  v26 = v41.tx;
  v27 = v41.ty;
  CGAffineTransformMakeTranslation(&t1, tx, v16);
  v28 = *(_OWORD *)&t1.a;
  v29 = *(_OWORD *)&t1.c;
  v30 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v39;
  *(_OWORD *)&t1.c = v36;
  t1.tx = v26;
  t1.ty = v27;
  *(_OWORD *)&t2.a = v28;
  *(_OWORD *)&t2.c = v29;
  *(_OWORD *)&t2.tx = v30;
  result = CGAffineTransformConcat(&v41, &t1, &t2);
  v32 = *(_OWORD *)&v41.c;
  v33 = *(_OWORD *)&v41.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v41.a;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v32;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

__n128 sub_23799E628@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double *v3;
  __int128 v5;
  __n128 result;
  _OWORD v7[4];
  uint64_t v8;

  sub_23799E470((uint64_t)v7, a2, a3, *v3, v3[1], v3[2]);
  v5 = v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = v8;
  result = (__n128)v7[1];
  *(_OWORD *)a1 = v7[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23799E680@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  result = sub_237A87188();
  *a1 = v6;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_23799E6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  result = sub_237A87194();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*sub_23799E6E0(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[3] = v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  sub_237A87188();
  *a1 = v5;
  a1[1] = v3;
  a1[2] = v4;
  return sub_23799E728;
}

uint64_t sub_23799E728(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = a1[3];
  v2 = a1[1];
  v3 = a1[2];
  result = sub_237A87194();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t sub_23799E75C()
{
  sub_23799E974();
  return sub_237A86960();
}

uint64_t sub_23799E7C4()
{
  sub_23799E974();
  return sub_237A8693C();
}

uint64_t sub_23799E82C()
{
  sub_23799E974();
  return sub_237A86954();
}

void sub_23799E884()
{
  sub_237A8684C();
  __break(1u);
}

unint64_t sub_23799E898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256824A68;
  if (!qword_256824A68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824A70);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEC5B8], v1);
    atomic_store(result, (unint64_t *)&qword_256824A68);
  }
  return result;
}

unint64_t sub_23799E8E8()
{
  unint64_t result;

  result = qword_256824A78;
  if (!qword_256824A78)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D7C8, &type metadata for RotationOffsetEffect);
    atomic_store(result, (unint64_t *)&qword_256824A78);
  }
  return result;
}

unint64_t sub_23799E930()
{
  unint64_t result;

  result = qword_256824A80;
  if (!qword_256824A80)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D778, &type metadata for RotationOffsetEffect);
    atomic_store(result, (unint64_t *)&qword_256824A80);
  }
  return result;
}

unint64_t sub_23799E974()
{
  unint64_t result;

  result = qword_256824A88;
  if (!qword_256824A88)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9D818, &type metadata for RotationOffsetEffect);
    atomic_store(result, (unint64_t *)&qword_256824A88);
  }
  return result;
}

uint64_t sub_23799E9B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_237954C38();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_23799EA04()
{
  sub_237954C38();
  return sub_237A86B94();
}

uint64_t static IconNotificationButtonConfiguration.close.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2379A06A8(&qword_25681E3F0, (uint64_t)qword_256824A90, a1);
}

uint64_t IconNotificationButton.init(action:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for IconNotificationButton(0);
  return sub_2378D0858(a3, (uint64_t)a4 + *(int *)(v6 + 20), type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t IconNotificationButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for IconNotificationButtonStyle(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC8);
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AD0);
  v16 = *(_QWORD *)(v15 - 8);
  v27 = v15;
  v28 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_237A87374();
  v19 = type metadata accessor for IconNotificationButton(0);
  sub_2378D07D8(v2 + *(int *)(v19 + 20), (uint64_t)v8, type metadata accessor for IconNotificationButtonConfiguration);
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  swift_storeEnumTagMultiPayload();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v11[v9[6]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  swift_storeEnumTagMultiPayload();
  sub_237870370((uint64_t)v5, (uint64_t)v11, &qword_256824AC0);
  v21 = &v11[v9[5]];
  *(_QWORD *)v21 = KeyPath;
  v21[8] = 0;
  sub_2378D0858((uint64_t)v8, (uint64_t)&v11[v9[7]], type metadata accessor for IconNotificationButtonConfiguration);
  v22 = sub_2378B70D4(&qword_256824AD8, &qword_256824AC8, MEMORY[0x24BDF43B0]);
  v23 = sub_23786FAA0(&qword_256824AE0, type metadata accessor for IconNotificationButtonStyle, (uint64_t)&unk_237A9DB0C);
  sub_237A870BC();
  sub_2378DE6A4((uint64_t)v11, type metadata accessor for IconNotificationButtonStyle);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  v30 = v12;
  v31 = v9;
  v32 = v22;
  v33 = v23;
  swift_getOpaqueTypeConformance2();
  v24 = v27;
  sub_237A870E0();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v18, v24);
}

uint64_t IconNotificationButtonContent.init(forceFocusedState:configuration:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  *(_BYTE *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 25) = a1;
  v6 = type metadata accessor for IconNotificationButtonContent(0);
  return sub_2378D0858(a2, a3 + *(int *)(v6 + 28), type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t IconNotificationButtonContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799EF5C(v1, (uint64_t)v5);
  v6 = v1 + *(int *)(type metadata accessor for IconNotificationButtonContent(0) + 28);
  v7 = v6 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32);
  v12 = *(_OWORD *)v7;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  LOBYTE(v6) = sub_237A86F3C();
  sub_2378BBFE0((uint64_t)v5, a1, &qword_256824AE8);
  v10 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256824AF0) + 36);
  *(_BYTE *)v10 = v6;
  *(_OWORD *)(v10 + 8) = v12;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v10 + 32) = v9;
  *(_BYTE *)(v10 + 40) = 0;
  return sub_2378BC024((uint64_t)v5, &qword_256824AE8);
}

uint64_t sub_23799EF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  char v124;
  char v125;
  __int128 v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE v133[7];
  char v134;
  _BYTE v135[7];
  char v136;
  int v137;
  __int16 v138;

  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D88);
  MEMORY[0x24BDAC7A8](v115);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D78);
  MEMORY[0x24BDAC7A8](v119);
  v106 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v109 = (uint64_t)&v98 - v8;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824EA0);
  MEMORY[0x24BDAC7A8](v117);
  v118 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824DD8);
  MEMORY[0x24BDAC7A8](v114);
  v11 = (uint64_t *)((char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823478);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D48);
  MEMORY[0x24BDAC7A8](v112);
  v16 = (uint64_t *)((char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824EA8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D28);
  MEMORY[0x24BDAC7A8](v20);
  v102 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D18);
  MEMORY[0x24BDAC7A8](v101);
  v113 = (uint64_t)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824D08);
  MEMORY[0x24BDAC7A8](v103);
  v107 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824CF8);
  MEMORY[0x24BDAC7A8](v104);
  v105 = (uint64_t)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824CE8);
  MEMORY[0x24BDAC7A8](v116);
  v108 = (uint64_t)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v110 = (uint64_t)&v98 - v27;
  v28 = *(int *)(type metadata accessor for IconNotificationButtonContent(0) + 28);
  v111 = a1;
  v29 = (uint64_t *)(a1 + v28);
  v30 = type metadata accessor for IconNotificationButtonConfiguration(0);
  v31 = (uint64_t)v29 + *(int *)(v30 + 28);
  v32 = *(_BYTE *)(v31 + 32);
  v120 = a2;
  if ((v32 & 1) != 0)
  {
    v33 = *v29;
    swift_retain();
    v34 = sub_237A86DA4();
    sub_237A86FA8();
    v35 = sub_237A86F84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 1, 1, v35);
    v36 = sub_237A86FB4();
    sub_2378BC024((uint64_t)v14, &qword_256823478);
    KeyPath = swift_getKeyPath();
    v38 = (char *)v29 + *(int *)(v30 + 24);
    v39 = swift_getKeyPath();
    v40 = v11;
    v41 = (char *)v11 + *(int *)(v114 + 28);
    v42 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v41, v38, v42);
    *v40 = v39;
    sub_2378BBFE0((uint64_t)v40, (uint64_t)&v5[*(int *)(v115 + 36)], &qword_256824DD8);
    *(_QWORD *)v5 = v33;
    *((_DWORD *)v5 + 2) = v34;
    *((_QWORD *)v5 + 2) = KeyPath;
    *((_QWORD *)v5 + 3) = v36;
    sub_2378BC024((uint64_t)v40, &qword_256824DD8);
    v43 = swift_getKeyPath();
    sub_237A87470();
    v44 = sub_237A8747C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v19, 0, 1, v44);
    v45 = (uint64_t)v106;
    v46 = (uint64_t *)&v106[*(int *)(v119 + 36)];
    sub_2378BBFE0((uint64_t)v19, (uint64_t)v46 + *(int *)(v112 + 28), &qword_256824EA8);
    *v46 = v43;
    sub_2378BBFE0((uint64_t)v5, v45, &qword_256824D88);
    sub_2378BC024((uint64_t)v19, &qword_256824EA8);
    sub_2378BC024((uint64_t)v5, &qword_256824D88);
    v47 = &qword_256824D78;
    v48 = v109;
    sub_237870370(v45, v109, &qword_256824D78);
    sub_2378BBFE0(v48, v118, &qword_256824D78);
    swift_storeEnumTagMultiPayload();
    sub_2379A2040(&qword_256824CE0, &qword_256824CE8, sub_2379A20A8, MEMORY[0x24BDECC60]);
    sub_2379A2270();
    sub_237A86D44();
    v49 = v48;
  }
  else
  {
    v106 = *(char **)(v31 + 8);
    v100 = *(_QWORD *)v31;
    v109 = v31;
    v50 = sub_237A86D98();
    v51 = swift_getKeyPath();
    sub_237A87470();
    v52 = sub_237A8747C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v19, 0, 1, v52);
    v53 = v11;
    sub_2378BBFE0((uint64_t)v19, (uint64_t)v16 + *(int *)(v112 + 28), &qword_256824EA8);
    *v16 = v51;
    v54 = *(int *)(v20 + 36);
    v55 = (uint64_t)v102;
    sub_2378BBFE0((uint64_t)v16, (uint64_t)&v102[v54], &qword_256824D48);
    *(_DWORD *)v55 = v50;
    *(_WORD *)(v55 + 4) = 256;
    sub_2378BC024((uint64_t)v16, &qword_256824D48);
    sub_2378BC024((uint64_t)v19, &qword_256824EA8);
    *(_QWORD *)&v112 = sub_237A874AC();
    v99 = v56;
    v57 = v113 + *(int *)(v101 + 36);
    v58 = *v29;
    swift_retain();
    LODWORD(v101) = sub_237A86DA4();
    sub_237A86FA8();
    v59 = sub_237A86F84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v14, 1, 1, v59);
    v60 = sub_237A86FB4();
    sub_2378BC024((uint64_t)v14, &qword_256823478);
    v61 = swift_getKeyPath();
    v62 = (char *)v29 + *(int *)(v30 + 24);
    v63 = swift_getKeyPath();
    v64 = (char *)v53 + *(int *)(v114 + 28);
    v65 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v64, v62, v65);
    *v53 = v63;
    sub_2378BBFE0((uint64_t)v53, v57 + *(int *)(v115 + 36), &qword_256824DD8);
    *(_QWORD *)v57 = v58;
    *(_DWORD *)(v57 + 8) = v101;
    *(_QWORD *)(v57 + 16) = v61;
    *(_QWORD *)(v57 + 24) = v60;
    sub_2378BC024((uint64_t)v53, &qword_256824DD8);
    v66 = (_QWORD *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256824D58) + 36));
    v67 = v99;
    *v66 = v112;
    v66[1] = v67;
    v68 = v113;
    sub_237870370(v55, v113, &qword_256824D28);
    v115 = sub_237A874AC();
    v114 = v69;
    sub_23799FC10((uint64_t)&v121);
    v70 = v122;
    v71 = v123;
    LOBYTE(v62) = v124;
    v72 = v125;
    v112 = v126;
    v73 = v127;
    v74 = v129;
    v75 = v131;
    v76 = v132;
    v77 = v121;
    v136 = v128;
    v134 = v130;
    v78 = v107;
    sub_2378BBFE0(v68, v107, &qword_256824D18);
    v79 = v78 + *(int *)(v103 + 36);
    *(_OWORD *)v79 = v77;
    *(_OWORD *)(v79 + 16) = v70;
    *(_OWORD *)(v79 + 32) = v71;
    *(_BYTE *)(v79 + 48) = (_BYTE)v62;
    *(_BYTE *)(v79 + 49) = v72;
    *(_DWORD *)(v79 + 50) = v137;
    *(_WORD *)(v79 + 54) = v138;
    *(_OWORD *)(v79 + 56) = v112;
    *(_QWORD *)(v79 + 72) = v73;
    *(_BYTE *)(v79 + 80) = v136;
    *(_DWORD *)(v79 + 81) = *(_DWORD *)v135;
    *(_DWORD *)(v79 + 84) = *(_DWORD *)&v135[3];
    *(_QWORD *)(v79 + 88) = v74;
    *(_BYTE *)(v79 + 96) = v134;
    *(_DWORD *)(v79 + 100) = *(_DWORD *)&v133[3];
    *(_DWORD *)(v79 + 97) = *(_DWORD *)v133;
    *(_QWORD *)(v79 + 104) = v75;
    *(_QWORD *)(v79 + 112) = v76;
    v80 = v114;
    *(_QWORD *)(v79 + 120) = v115;
    *(_QWORD *)(v79 + 128) = v80;
    sub_2378BC024(v68, &qword_256824D18);
    sub_237A874AC();
    sub_237A8687C();
    v81 = v105;
    sub_2378BBFE0(v78, v105, &qword_256824D08);
    v82 = (_OWORD *)(v81 + *(int *)(v104 + 36));
    v83 = v122;
    *v82 = v121;
    v82[1] = v83;
    v82[2] = v123;
    sub_2378BC024(v78, &qword_256824D08);
    v84 = v118;
    v85 = v116;
    LOBYTE(v75) = sub_237A86F3C();
    sub_237A86798();
    v87 = v86;
    v89 = v88;
    v91 = v90;
    v93 = v92;
    v94 = v108;
    sub_2378BBFE0(v81, v108, &qword_256824CF8);
    v95 = v94 + *(int *)(v85 + 36);
    *(_BYTE *)v95 = v75;
    *(_QWORD *)(v95 + 8) = v87;
    *(_QWORD *)(v95 + 16) = v89;
    *(_QWORD *)(v95 + 24) = v91;
    *(_QWORD *)(v95 + 32) = v93;
    *(_BYTE *)(v95 + 40) = 0;
    sub_2378BC024(v81, &qword_256824CF8);
    v47 = &qword_256824CE8;
    v96 = v110;
    sub_237870370(v94, v110, &qword_256824CE8);
    sub_2378BBFE0(v96, v84, &qword_256824CE8);
    swift_storeEnumTagMultiPayload();
    sub_2379A2040(&qword_256824CE0, &qword_256824CE8, sub_2379A20A8, MEMORY[0x24BDECC60]);
    sub_2379A2270();
    sub_237A86D44();
    v49 = v96;
  }
  return sub_2378BC024(v49, v47);
}

uint64_t sub_23799FB70()
{
  return sub_237A86AA4();
}

uint64_t sub_23799FB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824EA8);
  MEMORY[0x24BDAC7A8](v2);
  sub_2378BBFE0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256824EA8);
  return sub_237A86AB0();
}

double sub_23799FC10@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  double result;
  _QWORD v20[7];
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v2 = sub_237A871B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_23799FDF4() & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    MEMORY[0x23B81DEC0](v5, 0.949019608, 0.949019608, 0.968627451, 1.0);
    v6 = sub_237A8723C();
    swift_release();
  }
  else
  {
    v6 = sub_237A87200();
  }
  sub_237A867F8();
  v7 = v20[1];
  v8 = v20[3];
  v9 = v20[4];
  v10 = v20[5];
  v11 = sub_237A874AC();
  v13 = v12;
  sub_237A874AC();
  sub_237A8687C();
  v14 = v20[6];
  v15 = v21;
  v16 = v22;
  v17 = v23;
  v18 = v20[2];
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = 256;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_BYTE *)(a1 + 96) = v17;
  result = *(double *)&v24;
  *(_OWORD *)(a1 + 104) = v24;
  return result;
}

uint64_t sub_23799FDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for IconNotificationButtonContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - v9;
  v11 = *(_BYTE *)(v1 + 25);
  sub_2378D07D8(v1, (uint64_t)&v21 - v9, v12);
  if ((v11 & 1) != 0)
  {
    sub_2378DE6A4((uint64_t)v10, type metadata accessor for IconNotificationButtonContent);
    sub_2378D07D8(v1, (uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
  }
  else
  {
    v13 = *(_QWORD *)v10;
    v14 = v10[8];
    sub_237971568(*(_QWORD *)v10, v14);
    v15 = sub_23796D5A0(v13, v14);
    sub_237971574(v13, v14);
    sub_2378DE6A4((uint64_t)v10, type metadata accessor for IconNotificationButtonContent);
    sub_2378D07D8(v1, (uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
    if ((v15 & 1) == 0)
    {
      v19 = 0;
      goto LABEL_9;
    }
  }
  v16 = *((_QWORD *)v7 + 2);
  v17 = v7[24];
  sub_237971568(v16, v17);
  v18 = sub_23796D5A0(v16, v17);
  sub_237971574(v16, v17);
  sub_2378D0858((uint64_t)v7, (uint64_t)v4, type metadata accessor for IconNotificationButtonContent);
  if ((v18 & 1) != 0)
    v19 = 1;
  else
    v19 = v4[25];
  v7 = v4;
LABEL_9:
  sub_2378DE6A4((uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
  return v19;
}

uint64_t sub_23799FFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799EF5C(v2, (uint64_t)v7);
  v8 = v2 + *(int *)(a1 + 28);
  v9 = v8 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32);
  v14 = *(_OWORD *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  LOBYTE(v8) = sub_237A86F3C();
  sub_2378BBFE0((uint64_t)v7, a2, &qword_256824AE8);
  v12 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256824AF0) + 36);
  *(_BYTE *)v12 = v8;
  *(_OWORD *)(v12 + 8) = v14;
  *(_QWORD *)(v12 + 24) = v10;
  *(_QWORD *)(v12 + 32) = v11;
  *(_BYTE *)(v12 + 40) = 0;
  return sub_2378BC024((uint64_t)v7, &qword_256824AE8);
}

uint64_t sub_2379A0098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824E90);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IconNotificationButtonContent(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824E98);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IconNotificationButtonStyle(0);
  sub_2378D07D8(v1 + *(int *)(v17 + 28), (uint64_t)v7, type metadata accessor for IconNotificationButtonConfiguration);
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[8] = 0;
  *((_QWORD *)v10 + 2) = swift_getKeyPath();
  *((_WORD *)v10 + 12) = 0;
  sub_2378D0858((uint64_t)v7, (uint64_t)&v10[*(int *)(v8 + 28)], type metadata accessor for IconNotificationButtonConfiguration);
  sub_2378D0858((uint64_t)v10, (uint64_t)v13, type metadata accessor for IconNotificationButtonContent);
  v18 = sub_237A86E64();
  sub_2378D07D8((uint64_t)v13, (uint64_t)v4, type metadata accessor for IconNotificationButtonContent);
  v19 = 0.5;
  if ((v18 & 1) != 0)
  {
    v20 = 0.96;
  }
  else
  {
    v19 = 1.0;
    v20 = 1.0;
  }
  *(double *)&v4[*(int *)(v2 + 36)] = v19;
  sub_237A8756C();
  v22 = v21;
  v24 = v23;
  sub_2378BBFE0((uint64_t)v4, (uint64_t)v16, &qword_256824E90);
  v25 = &v16[*(int *)(v14 + 36)];
  *(double *)v25 = v20;
  *((double *)v25 + 1) = v20;
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = v24;
  sub_2378BC024((uint64_t)v4, &qword_256824E90);
  sub_2378DE6A4((uint64_t)v13, type metadata accessor for IconNotificationButtonContent);
  return sub_237870370((uint64_t)v16, v28, &qword_256824E98);
}

uint64_t IconNotificationButtonConfiguration.image.getter()
{
  return swift_retain();
}

double IconNotificationButtonConfiguration.imageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t IconNotificationButtonConfiguration.imageScale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v4 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

__n128 IconNotificationButtonConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 28);
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

double IconNotificationButtonConfiguration.buttonPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32));
}

uint64_t IconNotificationButtonConfiguration.verticalAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 36));
}

__n128 IconNotificationButtonConfiguration.init(image:imageSize:imageScale:style:buttonPadding:verticalAlignment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>)
{
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  __n128 result;
  double *v26;
  __n128 v27;

  v27 = *a3;
  v18 = a3[1].n128_u64[0];
  v19 = a3[1].n128_u64[1];
  v20 = a3[2].n128_u8[0];
  *(_QWORD *)a5 = a1;
  v21 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v22 = a5 + v21[6];
  v23 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  *(double *)(a5 + 8) = a6;
  v24 = (__n128 *)(a5 + v21[7]);
  result = v27;
  *v24 = v27;
  v24[1].n128_u64[0] = v18;
  v24[1].n128_u64[1] = v19;
  v24[2].n128_u8[0] = v20;
  v26 = (double *)(a5 + v21[8]);
  *v26 = a7;
  v26[1] = a8;
  v26[2] = a9;
  v26[3] = a10;
  *(_QWORD *)(a5 + v21[9]) = a4;
  return result;
}

double sub_2379A04D4(uint64_t a1)
{
  return sub_2379A0558(a1, qword_256824A90);
}

uint64_t type metadata accessor for IconNotificationButtonConfiguration(uint64_t a1)
{
  return sub_23790828C(a1, qword_256824C78);
}

uint64_t type metadata accessor for IconNotificationButton(uint64_t a1)
{
  return sub_23790828C(a1, qword_256824B50);
}

uint64_t type metadata accessor for IconNotificationButtonStyle(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256824E40);
}

double sub_2379A052C(uint64_t a1)
{
  return sub_2379A0558(a1, qword_256824AA8);
}

double sub_2379A0558(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v17;
  double result;
  uint64_t v19;

  v3 = sub_237A872D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v7, a2);
  v8 = (char *)__swift_project_value_buffer((uint64_t)v7, (uint64_t)a2);
  v9 = sub_237A872B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF40B8], v3);
  v10 = sub_237A86BA0();
  *(_QWORD *)v8 = v9;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v8[v7[6]], v6, v3);
  *((_QWORD *)v8 + 1) = 0x4036000000000000;
  v11 = &v8[v7[7]];
  __asm { FMOV            V1.2D, #4.0 }
  *(int64x2_t *)v11 = vdupq_n_s64(0x4046000000000000uLL);
  *((_OWORD *)v11 + 1) = _Q1;
  v11[32] = 0;
  v17 = &v8[v7[8]];
  result = 20.0;
  *(_OWORD *)v17 = xmmword_237A9D870;
  *((_OWORD *)v17 + 1) = xmmword_237A9D880;
  *(_QWORD *)&v8[v7[9]] = v10;
  return result;
}

uint64_t static IconNotificationButtonConfiguration.chevron.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2379A06A8(&qword_25681E3F8, (uint64_t)qword_256824AA8, a1);
}

uint64_t sub_2379A06A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for IconNotificationButtonConfiguration(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_2378D07D8(v6, a3, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t sub_2379A070C()
{
  sub_2379A3C70();
  return sub_237A86B88();
}

uint64_t sub_2379A0748()
{
  sub_2379A3C70();
  return sub_237A86B88();
}

uint64_t sub_2379A0784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for UserInteractiveConfiguration(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_2378D07D8(a1, (uint64_t)&v9 - v6, type metadata accessor for UserInteractiveConfiguration);
  sub_2378D07D8((uint64_t)v7, (uint64_t)v4, type metadata accessor for UserInteractiveConfiguration);
  sub_2379A3C70();
  sub_237A86B94();
  return sub_2378DE6A4((uint64_t)v7, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_2379A085C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B4C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379A0888@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B4C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379A08B4()
{
  return sub_237A86A5C();
}

uint64_t sub_2379A08D4()
{
  return sub_237A86A5C();
}

uint64_t sub_2379A08F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379A3BAC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], (uint64_t (*)(char *))MEMORY[0x24BDEDEF8]);
}

uint64_t sub_2379A0908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379A3BAC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], (uint64_t (*)(char *))MEMORY[0x24BDEDEF8]);
}

uint64_t sub_2379A092C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_237954C38();
  result = sub_237A86B88();
  *a1 = v3;
  return result;
}

uint64_t sub_2379A0978()
{
  sub_237954C38();
  return sub_237A86B94();
}

uint64_t type metadata accessor for IconNotificationButtonContent(uint64_t a1)
{
  return sub_23790828C(a1, qword_256824BE0);
}

uint64_t sub_2379A09D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379A09E4()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for IconNotificationButton(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  char *v24;
  __int128 v25;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v11 = *(uint64_t *)((char *)a2 + v7);
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = v11;
    v8[1] = v10;
    v12 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v13 = v12[6];
    v14 = (char *)v8 + v13;
    v15 = &v9[v13];
    v16 = sub_237A872D8();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    v17(v14, v15, v16);
    v18 = v12[7];
    v19 = (char *)v8 + v18;
    v20 = &v9[v18];
    v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v19[32] = v20[32];
    v22 = v12[8];
    v23 = (_OWORD *)((char *)v8 + v22);
    v24 = &v9[v22];
    v25 = *((_OWORD *)v24 + 1);
    *v23 = *(_OWORD *)v24;
    v23[1] = v25;
    *(_QWORD *)((char *)v8 + v12[9]) = *(_QWORD *)&v9[v12[9]];
  }
  return a1;
}

uint64_t destroy for IconNotificationButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v6 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *initializeWithCopy for IconNotificationButton(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  __int128 v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v9 = *(_QWORD *)((char *)a2 + v5);
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = v9;
  v6[1] = v8;
  v10 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v11 = v10[6];
  v12 = (char *)v6 + v11;
  v13 = &v7[v11];
  v14 = sub_237A872D8();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  v15(v12, v13, v14);
  v16 = v10[7];
  v17 = (char *)v6 + v16;
  v18 = &v7[v16];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  v17[32] = v18[32];
  v20 = v10[8];
  v21 = (_OWORD *)((char *)v6 + v20);
  v22 = &v7[v20];
  v23 = *((_OWORD *)v22 + 1);
  *v21 = *(_OWORD *)v22;
  v21[1] = v23;
  *(_QWORD *)((char *)v6 + v10[9]) = *(_QWORD *)&v7[v10[9]];
  return a1;
}

_QWORD *assignWithCopy for IconNotificationButton(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  v10 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v11 = v10[6];
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[7];
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = v17[32];
  v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  v16[32] = v18;
  v20 = v10[8];
  v21 = &v8[v20];
  v22 = &v9[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
  *(_QWORD *)&v8[v10[9]] = *(_QWORD *)&v9[v10[9]];
  return a1;
}

_OWORD *initializeWithTake for IconNotificationButton(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v8 = v7[6];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = &v5[v12];
  v14 = &v6[v12];
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  v16 = v7[8];
  v17 = &v5[v16];
  v18 = &v6[v16];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_QWORD *)&v5[v7[9]] = *(_QWORD *)&v6[v7[9]];
  return a1;
}

_OWORD *assignWithTake for IconNotificationButton(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  v9 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v9[7];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  v18 = v9[8];
  v19 = &v7[v18];
  v20 = &v8[v18];
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *(_QWORD *)&v7[v9[9]] = *(_QWORD *)&v8[v9[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A0EFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2379A0F84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for IconNotificationButtonConfiguration(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2379A0FF8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for IconNotificationButtonContent(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v30 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_237971568(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_237971568(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
    v11 = *(int *)(a3 + 28);
    v12 = (_QWORD *)(a1 + v11);
    v13 = a2 + v11;
    v15 = *(_QWORD *)(a2 + v11);
    v14 = *(_QWORD *)(v13 + 8);
    *v12 = v15;
    v12[1] = v14;
    v16 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v17 = v16[6];
    v18 = (char *)v12 + v17;
    v19 = v13 + v17;
    v20 = sub_237A872D8();
    v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_retain();
    v21(v18, v19, v20);
    v22 = v16[7];
    v23 = (char *)v12 + v22;
    v24 = v13 + v22;
    v25 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    v23[32] = *(_BYTE *)(v24 + 32);
    v26 = v16[8];
    v27 = (_OWORD *)((char *)v12 + v26);
    v28 = (_OWORD *)(v13 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    *(_QWORD *)((char *)v12 + v16[9]) = *(_QWORD *)(v13 + v16[9]);
  }
  return a1;
}

uint64_t destroy for IconNotificationButtonContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_237971574(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_237971574(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v6 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_237971568(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_237971568(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v14 = *(_QWORD *)(a2 + v10);
  v13 = *(_QWORD *)(a2 + v10 + 8);
  *v11 = v14;
  v11[1] = v13;
  v15 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v16 = v15[6];
  v17 = (char *)v11 + v16;
  v18 = v12 + v16;
  v19 = sub_237A872D8();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_retain();
  v20(v17, v18, v19);
  v21 = v15[7];
  v22 = (char *)v11 + v21;
  v23 = v12 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  v22[32] = *(_BYTE *)(v23 + 32);
  v25 = v15[8];
  v26 = (_OWORD *)((char *)v11 + v25);
  v27 = (_OWORD *)(v12 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_QWORD *)((char *)v11 + v15[9]) = *(_QWORD *)(v12 + v15[9]);
  return a1;
}

uint64_t assignWithCopy for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_237971568(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_237971574(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_237971568(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_237971574(v12, v13);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_retain();
  swift_release();
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  v17 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v18 = v17[6];
  v19 = v15 + v18;
  v20 = v16 + v18;
  v21 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = v17[7];
  v23 = v15 + v22;
  v24 = (__int128 *)(v16 + v22);
  v25 = *v24;
  v26 = v24[1];
  *(_BYTE *)(v23 + 32) = *((_BYTE *)v24 + 32);
  *(_OWORD *)v23 = v25;
  *(_OWORD *)(v23 + 16) = v26;
  v27 = v17[8];
  v28 = (_QWORD *)(v15 + v27);
  v29 = (_QWORD *)(v16 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  *(_QWORD *)(v15 + v17[9]) = *(_QWORD *)(v16 + v17[9]);
  return a1;
}

uint64_t initializeWithTake for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)(a1 + v4) = *(_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v8 = v7[6];
  v9 = v5 + v8;
  v10 = v6 + v8;
  v11 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = v5 + v12;
  v14 = v6 + v12;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = v7[8];
  v17 = (_OWORD *)(v5 + v16);
  v18 = (_OWORD *)(v6 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(v5 + v7[9]) = *(_QWORD *)(v6 + v7[9]);
  return a1;
}

uint64_t assignWithTake for IconNotificationButtonContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_237971574(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_237971574(v11, v12);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  *(_QWORD *)(a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  swift_release();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  v16 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v17 = v16[6];
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = v16[7];
  v22 = v14 + v21;
  v23 = v15 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  v25 = v16[8];
  v26 = (_OWORD *)(v14 + v25);
  v27 = (_OWORD *)(v15 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_QWORD *)(v14 + v16[9]) = *(_QWORD *)(v15 + v16[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A1680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A1700(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for IconNotificationButtonConfiguration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2379A1770()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IconNotificationButtonConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_237A872D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    v17 = *(_OWORD *)v16;
    v18 = *((_OWORD *)v16 + 1);
    v15[32] = v16[32];
    *(_OWORD *)v15 = v17;
    *((_OWORD *)v15 + 1) = v18;
    v19 = (_OWORD *)((char *)v7 + v14);
    v20 = (_OWORD *)((char *)a2 + v14);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for IconNotificationButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for IconNotificationButtonConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_237A872D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  v16 = *(_OWORD *)v15;
  v17 = *((_OWORD *)v15 + 1);
  v14[32] = v15[32];
  *(_OWORD *)v14 = v16;
  *((_OWORD *)v14 + 1) = v17;
  v18 = (_OWORD *)((char *)a1 + v13);
  v19 = (_OWORD *)((char *)a2 + v13);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithCopy for IconNotificationButtonConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[32];
  v14 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v14;
  v11[32] = v13;
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  v16[3] = v17[3];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for IconNotificationButtonConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v14 = *(_OWORD *)v13;
  v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  v16 = (_OWORD *)((char *)a1 + v11);
  v17 = (_OWORD *)((char *)a2 + v11);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for IconNotificationButtonConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v14 = *(_OWORD *)v13;
  v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  v16 = (_OWORD *)((char *)a1 + v11);
  v17 = (_OWORD *)((char *)a2 + v11);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A1C14(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237A872D8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2379A1C9C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_237A872D8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2379A1D10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A872D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonConfiguration.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonConfiguration.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_2379A1DFC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2379A1E18(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconNotificationButtonConfiguration.Style()
{
  return &type metadata for IconNotificationButtonConfiguration.Style;
}

uint64_t sub_2379A1E4C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824AD0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824AC8);
  type metadata accessor for IconNotificationButtonStyle(255);
  sub_2378B70D4(&qword_256824AD8, &qword_256824AC8, MEMORY[0x24BDF43B0]);
  sub_23786FAA0(&qword_256824AE0, type metadata accessor for IconNotificationButtonStyle, (uint64_t)&unk_237A9DB0C);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379A1F1C()
{
  return sub_2379A2040(&qword_256824CC0, &qword_256824AF0, (uint64_t (*)(void))sub_2379A1F50, MEMORY[0x24BDECC60]);
}

unint64_t sub_2379A1F50()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256824CC8;
  if (!qword_256824CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824AE8);
    v2 = sub_2379A1FB4();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256824CC8);
  }
  return result;
}

unint64_t sub_2379A1FB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824CD0;
  if (!qword_256824CD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824CD8);
    v2[0] = sub_2379A2040(&qword_256824CE0, &qword_256824CE8, sub_2379A20A8, MEMORY[0x24BDECC60]);
    v2[1] = sub_2379A2270();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824CD0);
  }
  return result;
}

uint64_t sub_2379A2040(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2379A20A8()
{
  return sub_2379A2040(&qword_256824CF0, &qword_256824CF8, (uint64_t (*)(void))sub_2379A20CC, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_2379A20CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D00;
  if (!qword_256824D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D08);
    v2[0] = sub_2379A2150();
    v2[1] = sub_2378B70D4(&qword_256824D60, &qword_256824D68, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D00);
  }
  return result;
}

unint64_t sub_2379A2150()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D10;
  if (!qword_256824D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D18);
    v2[0] = sub_2379A21D4();
    v2[1] = sub_2378B70D4(&qword_256824D50, &qword_256824D58, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D10);
  }
  return result;
}

unint64_t sub_2379A21D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D20;
  if (!qword_256824D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D28);
    v2[0] = sub_2378B70D4(&qword_256824D30, &qword_256824D38, MEMORY[0x24BDEB358]);
    v2[1] = sub_2378B70D4(&qword_256824D40, &qword_256824D48, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D20);
  }
  return result;
}

unint64_t sub_2379A2270()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D70;
  if (!qword_256824D70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D78);
    v2[0] = sub_2379A22F4();
    v2[1] = sub_2378B70D4(&qword_256824D40, &qword_256824D48, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D70);
  }
  return result;
}

unint64_t sub_2379A22F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D80;
  if (!qword_256824D80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D88);
    v2[0] = sub_2379A2378();
    v2[1] = sub_2378B70D4(&qword_256824DD0, &qword_256824DD8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D80);
  }
  return result;
}

unint64_t sub_2379A2378()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824D90;
  if (!qword_256824D90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824D98);
    v2[0] = sub_2379A23FC();
    v2[1] = sub_2378B70D4(&qword_256824DC0, &qword_256824DC8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824D90);
  }
  return result;
}

unint64_t sub_2379A23FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256824DA0;
  if (!qword_256824DA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824DA8);
    v2 = sub_2378B70D4(&qword_256824DB0, &qword_256824DB8, MEMORY[0x24BDF0710]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256824DA0);
  }
  return result;
}

uint64_t sub_2379A2480(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  __int128 v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  uint64_t v76;
  uint64_t v77;
  int *v78;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v46 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      v8 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      *(_QWORD *)(a1 + 72) = a2[9];
      v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v10 = v9[7];
      v11 = a1 + v10;
      v12 = (uint64_t)a2 + v10;
      *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
      *(_BYTE *)(v11 + 24) = *((_BYTE *)a2 + v10 + 24);
      *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
      v13 = type metadata accessor for NotificationSymbolConfiguration(0);
      v14 = *(int *)(v13 + 24);
      v76 = v12 + v14;
      v77 = v11 + v14;
      v15 = sub_237A872D8();
      v78 = v6;
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v16(v77, v76, v15);
      v17 = *(int *)(v13 + 28);
      v18 = (_OWORD *)(v11 + v17);
      v19 = (_OWORD *)(v12 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v9[8];
      v22 = a1 + v21;
      v23 = (uint64_t)a2 + v21;
      v24 = *(uint64_t *)((char *)a2 + v21 + 8);
      *(_QWORD *)v22 = *(uint64_t *)((char *)a2 + v21);
      *(_QWORD *)(v22 + 8) = v24;
      v25 = a1 + v21 + 16;
      v26 = (uint64_t)a2 + v21 + 16;
      v27 = *(_OWORD *)((char *)a2 + v21 + 40);
      *(_OWORD *)(v22 + 40) = v27;
      v28 = v27;
      v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
      swift_retain();
      swift_retain();
      v30 = v26;
      v6 = v78;
      v29(v25, v30, v28);
      v31 = *(_OWORD *)(v23 + 80);
      *(_OWORD *)(v22 + 80) = v31;
      (**(void (***)(uint64_t, uint64_t))(v31 - 8))(v22 + 56, v23 + 56);
      v32 = *(_OWORD *)(v23 + 112);
      *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
      *(_OWORD *)(v22 + 112) = v32;
      *(_BYTE *)(v22 + 128) = *(_BYTE *)(v23 + 128);
      *(_QWORD *)(v22 + 136) = *(_QWORD *)(v23 + 136);
      v33 = v9[9];
      v34 = a1 + v33;
      v35 = (uint64_t)a2 + v33;
      *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v36 = v9[10];
      v37 = a1 + v36;
      v38 = (uint64_t)a2 + v36;
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
      *(_BYTE *)(a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
      v39 = v9[12];
      v40 = a1 + v39;
      v41 = (uint64_t)a2 + v39;
      v42 = sub_237A8747C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v9[13];
      v44 = a1 + v43;
      v45 = (uint64_t)a2 + v43;
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
    }
    else
    {
      *(_QWORD *)a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    v47 = v6[5];
    v48 = a1 + v47;
    v49 = (uint64_t)a2 + v47;
    v50 = *(_QWORD *)v49;
    v51 = *(_BYTE *)(v49 + 8);
    sub_237971568(*(_QWORD *)v49, v51);
    *(_QWORD *)v48 = v50;
    *(_BYTE *)(v48 + 8) = v51;
    v52 = v6[6];
    v53 = (_QWORD *)(a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v55 = sub_237A867C8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    }
    else
    {
      *v53 = *v54;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v56 = v6[7];
    v57 = (_QWORD *)(a1 + v56);
    v58 = (uint64_t)a2 + v56;
    v60 = *(uint64_t *)((char *)a2 + v56);
    v59 = *(_QWORD *)(v58 + 8);
    *v57 = v60;
    v57[1] = v59;
    v61 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    v62 = v61[6];
    v63 = (char *)v57 + v62;
    v64 = v58 + v62;
    v65 = sub_237A872D8();
    v66 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
    swift_retain();
    v66(v63, v64, v65);
    v67 = v61[7];
    v68 = (char *)v57 + v67;
    v69 = v58 + v67;
    v70 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v70;
    v68[32] = *(_BYTE *)(v69 + 32);
    v71 = v61[8];
    v72 = (_OWORD *)((char *)v57 + v71);
    v73 = (_OWORD *)(v58 + v71);
    v74 = v73[1];
    *v72 = *v73;
    v72[1] = v74;
    *(_QWORD *)((char *)v57 + v61[9]) = *(_QWORD *)(v58 + v61[9]);
  }
  return a1;
}

uint64_t sub_2379A2860(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    v4 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v5 = a1 + v4[7];
    swift_release();
    v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    v7 = sub_237A872D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v4[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
    v9 = a1 + v4[12];
    v10 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release();
  sub_237971574(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  v11 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_237A867C8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v13 = a1 + a2[7];
  swift_release();
  v14 = v13 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  v15 = sub_237A872D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

uint64_t sub_2379A29FC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  uint64_t v74;
  uint64_t v75;
  int *v76;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v9 = v8[7];
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
    *(_BYTE *)(v10 + 24) = *(_BYTE *)(a2 + v9 + 24);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(a2 + v9 + 8);
    v12 = type metadata accessor for NotificationSymbolConfiguration(0);
    v13 = *(int *)(v12 + 24);
    v74 = v11 + v13;
    v75 = v10 + v13;
    v14 = sub_237A872D8();
    v76 = a3;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v15(v75, v74, v14);
    v16 = *(int *)(v12 + 28);
    v17 = (_OWORD *)(v10 + v16);
    v18 = (_OWORD *)(v11 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v8[8];
    v21 = a1 + v20;
    v22 = a2 + v20;
    v23 = *(_QWORD *)(a2 + v20 + 8);
    *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
    *(_QWORD *)(v21 + 8) = v23;
    v24 = a1 + v20 + 16;
    v25 = a2 + v20 + 16;
    v26 = *(_OWORD *)(a2 + v20 + 40);
    *(_OWORD *)(v21 + 40) = v26;
    v27 = v26;
    v28 = **(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8);
    swift_retain();
    swift_retain();
    v29 = v27;
    a3 = v76;
    v28(v24, v25, v29);
    v30 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 80) = v30;
    (**(void (***)(uint64_t, uint64_t))(v30 - 8))(v21 + 56, v22 + 56);
    v31 = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 112) = v31;
    *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
    *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
    v32 = v8[9];
    v33 = a1 + v32;
    v34 = a2 + v32;
    *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    v35 = v8[10];
    v36 = a1 + v35;
    v37 = a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
    *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
    v38 = v8[12];
    v39 = a1 + v38;
    v40 = a2 + v38;
    v41 = sub_237A8747C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    v42 = v8[13];
    v43 = a1 + v42;
    v44 = a2 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v45 = a3[5];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)v47;
  v49 = *(_BYTE *)(v47 + 8);
  sub_237971568(*(_QWORD *)v47, v49);
  *(_QWORD *)v46 = v48;
  *(_BYTE *)(v46 + 8) = v49;
  v50 = a3[6];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v53 = sub_237A867C8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    *v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v54 = a3[7];
  v55 = (_QWORD *)(a1 + v54);
  v56 = a2 + v54;
  v58 = *(_QWORD *)(a2 + v54);
  v57 = *(_QWORD *)(v56 + 8);
  *v55 = v58;
  v55[1] = v57;
  v59 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v60 = v59[6];
  v61 = (char *)v55 + v60;
  v62 = v56 + v60;
  v63 = sub_237A872D8();
  v64 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
  swift_retain();
  v64(v61, v62, v63);
  v65 = v59[7];
  v66 = (char *)v55 + v65;
  v67 = v56 + v65;
  v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *((_OWORD *)v66 + 1) = v68;
  v66[32] = *(_BYTE *)(v67 + 32);
  v69 = v59[8];
  v70 = (_OWORD *)((char *)v55 + v69);
  v71 = (_OWORD *)(v56 + v69);
  v72 = v71[1];
  *v70 = *v71;
  v70[1] = v72;
  *(_QWORD *)((char *)v55 + v59[9]) = *(_QWORD *)(v56 + v59[9]);
  return a1;
}

uint64_t sub_2379A2DB0(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v71;
  uint64_t v72;
  int *v73;

  if (a1 != a2)
  {
    sub_2378BC024(a1, &qword_256823798);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v6 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v7 = v6[7];
      v8 = a1 + v7;
      v9 = a2 + v7;
      *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
      v10 = *(_OWORD *)(a2 + v7 + 8);
      *(_BYTE *)(v8 + 24) = *(_BYTE *)(a2 + v7 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      v12 = *(int *)(v11 + 24);
      v71 = v9 + v12;
      v72 = v8 + v12;
      v73 = a3;
      v13 = sub_237A872D8();
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v14(v72, v71, v13);
      v15 = *(int *)(v11 + 28);
      v16 = (_OWORD *)(v8 + v15);
      v17 = (_OWORD *)(v9 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      v19 = v6[8];
      v20 = a1 + v19;
      v21 = a2 + v19;
      *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
      v22 = a1 + v19 + 16;
      v23 = a2 + v19 + 16;
      v24 = *(_QWORD *)(a2 + v19 + 40);
      *(_QWORD *)(v20 + 40) = v24;
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(a2 + v19 + 48);
      v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      swift_retain();
      swift_retain();
      v26 = v24;
      a3 = v73;
      v25(v22, v23, v26);
      v27 = *(_QWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 80) = v27;
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v20 + 56, v21 + 56);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      *(_QWORD *)(v20 + 104) = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v20 + 112) = *(_QWORD *)(v21 + 112);
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      *(_BYTE *)(v20 + 128) = *(_BYTE *)(v21 + 128);
      *(_QWORD *)(v20 + 136) = *(_QWORD *)(v21 + 136);
      v28 = v6[9];
      v29 = a1 + v28;
      v30 = a2 + v28;
      v31 = *(_BYTE *)(v30 + 16);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *(_BYTE *)(v29 + 16) = v31;
      v32 = v6[10];
      v33 = a1 + v32;
      v34 = a2 + v32;
      v35 = *(_BYTE *)(v34 + 16);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *(_BYTE *)(v33 + 16) = v35;
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      v36 = v6[12];
      v37 = a1 + v36;
      v38 = a2 + v36;
      v39 = sub_237A8747C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v6[13];
      v41 = (_QWORD *)(a1 + v40);
      v42 = (_QWORD *)(a2 + v40);
      *v41 = *v42;
      v41[1] = v42[1];
      v41[2] = v42[2];
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  v43 = a3[5];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)v45;
  v47 = *(_BYTE *)(v45 + 8);
  sub_237971568(*(_QWORD *)v45, v47);
  v48 = *(_QWORD *)v44;
  v49 = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = v47;
  sub_237971574(v48, v49);
  if (a1 != a2)
  {
    v50 = a3[6];
    v51 = (_QWORD *)(a1 + v50);
    v52 = (_QWORD *)(a2 + v50);
    sub_2378BC024(a1 + v50, &qword_2568237C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_237A867C8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v54 = a3[7];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  swift_retain();
  swift_release();
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(v56 + 8);
  v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v58 = v57[6];
  v59 = v55 + v58;
  v60 = v56 + v58;
  v61 = sub_237A872D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
  v62 = v57[7];
  v63 = v55 + v62;
  v64 = v56 + v62;
  v65 = *(_BYTE *)(v64 + 32);
  v66 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v66;
  *(_BYTE *)(v63 + 32) = v65;
  v67 = v57[8];
  v68 = (_QWORD *)(v55 + v67);
  v69 = (_QWORD *)(v56 + v67);
  *v68 = *v69;
  v68[1] = v69[1];
  v68[2] = v69[2];
  v68[3] = v69[3];
  *(_QWORD *)(v55 + v57[9]) = *(_QWORD *)(v56 + v57[9]);
  return a1;
}

_OWORD *sub_2379A3214(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    v10 = v9[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
    v11[24] = *((_BYTE *)a2 + v10 + 24);
    *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
    v13 = type metadata accessor for NotificationSymbolConfiguration(0);
    v14 = *(int *)(v13 + 24);
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = sub_237A872D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    v18 = *(int *)(v13 + 28);
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v22 = v9[8];
    v23 = (_OWORD *)((char *)a1 + v22);
    v24 = (_OWORD *)((char *)a2 + v22);
    v25 = v24[3];
    v23[2] = v24[2];
    v23[3] = v25;
    v26 = v24[1];
    *v23 = *v24;
    v23[1] = v26;
    v27 = v24[8];
    v28 = v24[6];
    v23[7] = v24[7];
    v23[8] = v27;
    v29 = v24[5];
    v23[4] = v24[4];
    v23[5] = v29;
    v23[6] = v28;
    v30 = v9[9];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    v33 = v9[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
    v36 = v9[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_237A8747C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    v40 = v9[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v43 = a3[5];
  v44 = a3[6];
  v45 = (char *)a1 + v43;
  v46 = (char *)a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = (char *)a1 + v44;
  v48 = (char *)a2 + v44;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = sub_237A867C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  v51 = a3[7];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *(_OWORD *)((char *)a1 + v51) = *(_OWORD *)((char *)a2 + v51);
  v54 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v55 = v54[6];
  v56 = &v52[v55];
  v57 = &v53[v55];
  v58 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = v54[7];
  v60 = &v52[v59];
  v61 = &v53[v59];
  v62 = *((_OWORD *)v61 + 1);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v62;
  v60[32] = v61[32];
  v63 = v54[8];
  v64 = &v52[v63];
  v65 = &v53[v63];
  v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  *(_QWORD *)&v52[v54[9]] = *(_QWORD *)&v53[v54[9]];
  return a1;
}

_OWORD *sub_2379A351C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;

  if (a1 != a2)
  {
    sub_2378BC024((uint64_t)a1, &qword_256823798);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823798);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      v10 = v9[7];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
      v11[24] = *((_BYTE *)a2 + v10 + 24);
      *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
      v13 = type metadata accessor for NotificationSymbolConfiguration(0);
      v14 = *(int *)(v13 + 24);
      v15 = &v11[v14];
      v16 = &v12[v14];
      v17 = sub_237A872D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = *(int *)(v13 + 28);
      v19 = &v11[v18];
      v20 = &v12[v18];
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      v22 = v9[8];
      v23 = (_OWORD *)((char *)a1 + v22);
      v24 = (_OWORD *)((char *)a2 + v22);
      v25 = v24[3];
      v23[2] = v24[2];
      v23[3] = v25;
      v26 = v24[1];
      *v23 = *v24;
      v23[1] = v26;
      v27 = v24[8];
      v28 = v24[6];
      v23[7] = v24[7];
      v23[8] = v27;
      v29 = v24[5];
      v23[4] = v24[4];
      v23[5] = v29;
      v23[6] = v28;
      v30 = v9[9];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      v33 = v9[10];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
      v36 = v9[12];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_237A8747C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v9[13];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v43 = a3[5];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(_QWORD *)v45;
  LOBYTE(v45) = v45[8];
  v47 = *(_QWORD *)v44;
  v48 = v44[8];
  *(_QWORD *)v44 = v46;
  v44[8] = (char)v45;
  sub_237971574(v47, v48);
  if (a1 != a2)
  {
    v49 = a3[6];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    sub_2378BC024((uint64_t)a1 + v49, &qword_2568237C8);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_237A867C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
  }
  v54 = a3[7];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  swift_release();
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  v58 = v57[6];
  v59 = &v55[v58];
  v60 = &v56[v58];
  v61 = sub_237A872D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
  v62 = v57[7];
  v63 = &v55[v62];
  v64 = &v56[v62];
  v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  v63[32] = v64[32];
  v66 = v57[8];
  v67 = &v55[v66];
  v68 = &v56[v66];
  v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *(_QWORD *)&v55[v57[9]] = *(_QWORD *)&v56[v57[9]];
  return a1;
}

uint64_t sub_2379A3874()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A3880(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for IconNotificationButtonConfiguration(0);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = a3[7];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_2379A3950()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379A395C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5] + 8) = -(char)a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256824DE0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = type metadata accessor for IconNotificationButtonConfiguration(0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2379A3A2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2379A3AF4(319, &qword_256824E50, (void (*)(uint64_t))type metadata accessor for UserInteractiveConfiguration);
  if (v0 <= 0x3F)
  {
    sub_2379A3AF4(319, qword_256824E58, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for IconNotificationButtonConfiguration(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2379A3AF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_237A867E0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2379A3B40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379A3B58()
{
  return sub_237A86A44();
}

uint64_t sub_2379A3B78()
{
  return sub_237A86A44();
}

uint64_t sub_2379A3B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379A3BAC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_2379A3BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_2379A3C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2379A3BAC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_2379A3C4C()
{
  return sub_237A86AA4();
}

unint64_t sub_2379A3C70()
{
  unint64_t result;

  result = qword_256824EB0;
  if (!qword_256824EB0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA34E0, &type metadata for UserInteractiveNotificationKey);
    atomic_store(result, (unint64_t *)&qword_256824EB0);
  }
  return result;
}

uint64_t sub_2379A3CB4()
{
  return sub_2379A2040(&qword_256824EB8, &qword_256824E98, (uint64_t (*)(void))sub_2379A3CE8, MEMORY[0x24BDEBF50]);
}

unint64_t sub_2379A3CE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824EC0;
  if (!qword_256824EC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824E90);
    v2[0] = sub_23786FAA0(&qword_256824EC8, type metadata accessor for IconNotificationButtonContent, (uint64_t)&protocol conformance descriptor for IconNotificationButtonContent);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824EC0);
  }
  return result;
}

__n128 WidgetView.init(widget:)@<Q0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  __int128 v12;

  v11 = (__n128)a1[1];
  v12 = *a1;
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 5);
  v5 = *((_BYTE *)a1 + 48);
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  KeyPath = swift_getKeyPath();
  v9 = swift_getKeyPath();
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v9;
  *(_BYTE *)(a2 + 24) = 0;
  result = v11;
  *(_OWORD *)(a2 + 32) = v12;
  *(__n128 *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 64) = v3;
  *(_QWORD *)(a2 + 72) = v4;
  *(_BYTE *)(a2 + 80) = v5;
  *(_QWORD *)(a2 + 88) = v6;
  *(_QWORD *)(a2 + 96) = v7;
  return result;
}

uint64_t WidgetView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  id v38;
  id v39;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t (*v65)(void *);
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v52 = *(void **)(v1 + 48);
  v54 = *(_QWORD *)(v1 + 32);
  v9 = *(void **)(v1 + 72);
  v49 = *(_QWORD *)(v1 + 64);
  v47 = *(_BYTE *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 96);
  v45 = *(_QWORD *)(v1 + 88);
  j__swift_retain();
  j__swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  j__swift_retain();
  v11 = sub_23796D758(v3, v4);
  j__swift_release();
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_10;
  v12 = objc_msgSend(*(id *)(v11 + 184), sel_metricsForFamily_, *(_QWORD *)(v11 + 64));
  if (!v12)
  {
    swift_release();
LABEL_10:
    sub_2379A4550(&v56);
    sub_2379A456C((uint64_t)&v56, (uint64_t)&v79);
    return sub_2379A456C((uint64_t)&v79, a1);
  }
  v42 = v12;
  v44 = a1;
  j__swift_retain();
  j__swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  j__swift_retain();
  v13 = sub_23796D77C(v5, v6);
  j__swift_release();
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    swift_release();

LABEL_9:
    a1 = v44;
    goto LABEL_10;
  }
  *(_QWORD *)&v56 = v54;
  *((_QWORD *)&v56 + 1) = v7;
  v57 = v52;
  v58 = v8;
  v59 = v49;
  v60 = v9;
  v61 = v47;
  v62 = v45;
  v63 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v11;
  sub_237870C10((uint64_t *)&v56, (uint64_t)&v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v15 = v81;
  v16 = v82;
  v17 = v83;
  v18 = v84;
  v19 = v85;
  v20 = v86;
  v21 = v87;
  v22 = v88;
  v53 = v80;
  v55 = v79;
  v50 = v89;
  v23 = WidgetManager.configuredWidgetDescriptor(for:)((uint64_t)&v79);
  if (!v23)
  {
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v24 = v23;
  v41 = v14;
  v25 = objc_msgSend(v23, sel_uniqueIdentifier);

  v26 = sub_237A87818();
  v46 = v27;
  v48 = v26;

  v79 = v55;
  v80 = v53;
  v81 = v15;
  v82 = v16;
  v83 = v17;
  v84 = v18;
  v85 = v19;
  v86 = v20;
  v87 = v21;
  v88 = v22;
  v89 = v50;
  swift_bridgeObjectRetain();
  v28 = WidgetManager.chsWidget(for:)(&v79);
  v29 = v42;
  objc_msgSend(v29, sel_size);
  v31 = v30;
  v33 = v32;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_size);
  objc_msgSend(v29, sel_scaleFactor);
  objc_msgSend(v29, sel_size);
  objc_msgSend(v29, sel_scaleFactor);
  sub_237A874AC();
  sub_237A8687C();
  v34 = v73;
  v35 = v74;
  v36 = v75;
  v37 = v76;
  v51 = v77;
  v43 = v78;
  swift_bridgeObjectRetain();
  v38 = v28;
  swift_bridgeObjectRetain();
  v39 = v29;
  sub_2378A2BF4((uint64_t)sub_2379A45B4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_2378A2C04((uint64_t)sub_2379A45B4);
  *(_QWORD *)&v56 = v55;
  *((_QWORD *)&v56 + 1) = v53;
  v57 = v38;
  v58 = v48;
  v59 = v46;
  v60 = v39;
  v61 = 1;
  v62 = v31;
  v63 = v33;
  v64 = 1;
  v65 = sub_2379A45B4;
  v66 = v41;
  v67 = v34;
  v68 = v35;
  v69 = v36;
  v70 = v37;
  v71 = v51;
  v72 = v43;
  nullsub_1(&v56);
  sub_2379A456C((uint64_t)&v56, (uint64_t)&v79);
  a1 = v44;
  return sub_2379A456C((uint64_t)&v79, a1);
}

uint64_t sub_2379A4370(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_237A87578();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237A87590();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23799DB9C();
  v11 = (void *)sub_237A87D70();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_2379A4A1C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_237A44D44;
  aBlock[3] = &block_descriptor_2;
  v13 = _Block_copy(aBlock);
  swift_retain();
  v14 = a1;
  swift_release();
  sub_237A87584();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23799DBF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568213F8);
  sub_23790C1F0();
  sub_237A87E9C();
  MEMORY[0x23B81E9DC](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_2379A4550(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_2379A456C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379A45B4(void *a1)
{
  uint64_t v1;

  return sub_2379A4370(a1, v1);
}

uint64_t sub_2379A45BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WidgetView()
{
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain();
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = a2[2];
  v7 = *((_BYTE *)a2 + 24);
  j__swift_retain();
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v9;
  v10 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v11 = a2[11];
  v12 = a2[12];
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain();
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  j__swift_release();
  v6 = a2[2];
  v7 = *((_BYTE *)a2 + 24);
  j__swift_retain();
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  j__swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  j__swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  j__swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetView()
{
  return &type metadata for WidgetView;
}

unint64_t sub_2379A4920()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256824ED8;
  if (!qword_256824ED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824ED0);
    v2 = sub_2379A4984();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256824ED8);
  }
  return result;
}

unint64_t sub_2379A4984()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256824EE0;
  if (!qword_256824EE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256824EE8);
    v2[0] = sub_2378E0738();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256824EE0);
  }
  return result;
}

uint64_t sub_2379A49F0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_2379A4A1C()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 192), sel_addObject_, *(_QWORD *)(v0 + 24));
  sub_237A47918();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void ConcentricRingsConfiguration.dataIdentifiers.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 4);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_BYTE *)(a1 + 4) = v2;
}

uint64_t ConcentricRingsConfiguration.dataIdentifiers.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 4);
  *(_DWORD *)v1 = *(_DWORD *)result;
  *(_BYTE *)(v1 + 4) = v2;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.dataIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t ConcentricRingsConfiguration.ringsNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ConcentricRingsConfiguration.ringsNumber.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.ringsNumber.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.ringWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void ConcentricRingsConfiguration.ringWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*ConcentricRingsConfiguration.ringWidth.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.ringsGap.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

void ConcentricRingsConfiguration.ringsGap.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 20) = a1;
}

uint64_t (*ConcentricRingsConfiguration.ringsGap.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.targetDigiBarWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

void ConcentricRingsConfiguration.targetDigiBarWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 24) = a1;
}

uint64_t (*ConcentricRingsConfiguration.targetDigiBarWidth.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.targetDigiBarInset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 28);
}

void ConcentricRingsConfiguration.targetDigiBarInset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 28) = a1;
}

uint64_t (*ConcentricRingsConfiguration.targetDigiBarInset.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.spacing.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void ConcentricRingsConfiguration.spacing.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*ConcentricRingsConfiguration.spacing.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.inset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void ConcentricRingsConfiguration.inset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 36) = a1;
}

uint64_t (*ConcentricRingsConfiguration.inset.modify())()
{
  return nullsub_1;
}

uint64_t ConcentricRingsConfiguration.colorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t ConcentricRingsConfiguration.colorID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_23787A134(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_BYTE *)(v1 + 56) = v4;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.colorID.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.primaryAngleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 ConcentricRingsConfiguration.primaryAngleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 80) = v2;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 88) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.primaryAngleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.secondaryAngleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(_BYTE *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 ConcentricRingsConfiguration.secondaryAngleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 120) = v2;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.secondaryAngleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.init(dataIdentifiers:ringsNumber:ringWidth:ringsGap:targetDigiBarWidth:targetDigiBarInset:spacing:inset:colorID:primaryAngleConfiguration:secondaryAngleConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, float a7@<S0>, float a8@<S1>, float a9@<S2>, float a10@<S3>, float a11@<S4>, float a12@<S5>)
{
  char v12;
  char v13;
  char v14;
  char v15;
  __n128 result;

  v12 = *(_BYTE *)(a1 + 4);
  v13 = *(_BYTE *)(a3 + 16);
  v14 = *(_BYTE *)(a4 + 16);
  v15 = *(_BYTE *)(a5 + 16);
  *(_DWORD *)a6 = *(_DWORD *)a1;
  *(_BYTE *)(a6 + 4) = v12;
  *(_QWORD *)(a6 + 8) = a2;
  *(float *)(a6 + 16) = a7;
  *(float *)(a6 + 20) = a8;
  *(float *)(a6 + 24) = a9;
  *(float *)(a6 + 28) = a10;
  *(float *)(a6 + 32) = a11;
  *(float *)(a6 + 36) = a12;
  *(_OWORD *)(a6 + 40) = *(_OWORD *)a3;
  *(_BYTE *)(a6 + 56) = v13;
  *(_OWORD *)(a6 + 64) = *(_OWORD *)a4;
  *(_BYTE *)(a6 + 80) = v14;
  *(_OWORD *)(a6 + 88) = *(_OWORD *)(a4 + 24);
  *(_OWORD *)(a6 + 104) = *(_OWORD *)a5;
  *(_BYTE *)(a6 + 120) = v15;
  result = *(__n128 *)(a5 + 24);
  *(__n128 *)(a6 + 128) = result;
  return result;
}

uint64_t ConcentricRingsConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 56);
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_237A885E0();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_23787A11C(v1, v2, v3);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v1, v2, v3);
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  sub_237896D64();
  sub_237A88604();
  sub_237A88604();
  sub_237A885EC();
  return sub_237896D64();
}

uint64_t sub_2379A4FA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379A4FE4 + 4 * a8[a1]))(0x6E65644961746164, 0xEF73726569666974);
}

uint64_t sub_2379A4FE4()
{
  return 0x6D754E73676E6972;
}

uint64_t sub_2379A5004()
{
  return 0x74646957676E6972;
}

uint64_t sub_2379A5020()
{
  return 0x70614773676E6972;
}

unint64_t sub_2379A5038()
{
  return 0xD000000000000012;
}

uint64_t sub_2379A5060()
{
  return 0x676E6963617073;
}

uint64_t sub_2379A5078()
{
  return 0x7465736E69;
}

unint64_t sub_2379A508C()
{
  return 0xD000000000000019;
}

uint64_t sub_2379A50C8()
{
  return 0x4449726F6C6F63;
}

uint64_t sub_2379A50E0()
{
  unsigned __int8 *v0;

  return sub_2379A4FA4(*v0);
}

uint64_t sub_2379A50E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379A6684(a1, a2);
  *a3 = result;
  return result;
}

void sub_2379A510C(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2379A5118()
{
  sub_2379A5FE0();
  return sub_237A88718();
}

uint64_t sub_2379A5140()
{
  sub_2379A5FE0();
  return sub_237A88724();
}

uint64_t ConcentricRingsConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824EF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_BYTE *)(v3 + 4);
  v10 = *(_QWORD *)(v3 + 8);
  v11 = *(_DWORD *)(v3 + 16);
  v43 = *(_DWORD *)(v3 + 20);
  v44 = v11;
  v12 = *(_DWORD *)(v3 + 24);
  v41 = *(_DWORD *)(v3 + 28);
  v42 = v12;
  v13 = *(_DWORD *)(v3 + 32);
  v39 = *(_DWORD *)(v3 + 36);
  v40 = v13;
  v48 = *(_QWORD *)(v3 + 40);
  v49 = v10;
  v47 = *(_QWORD *)(v3 + 48);
  v55 = *(unsigned __int8 *)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 64);
  v15 = *(_QWORD *)(v3 + 72);
  LODWORD(v10) = *(unsigned __int8 *)(v3 + 80);
  v16 = *(_QWORD *)(v3 + 88);
  v17 = *(_QWORD *)(v3 + 96);
  v18 = *(_QWORD *)(v3 + 104);
  v19 = *(_QWORD *)(v3 + 112);
  v45 = *(unsigned __int8 *)(v3 + 120);
  v46 = v10;
  v20 = *(_QWORD *)(v3 + 128);
  v21 = *(_QWORD *)(v3 + 136);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379A5FE0();
  v22 = v5;
  sub_237A886B8();
  LODWORD(v50) = *(_DWORD *)v3;
  BYTE4(v50) = v9;
  v23 = v8;
  v56 = 0;
  sub_2379A6024();
  sub_237A882B0();
  if (!v2)
  {
    v24 = v55;
    v26 = v47;
    v25 = v48;
    v27 = v46;
    v35 = v17;
    v36 = v16;
    v37 = v15;
    v38 = v14;
    v28 = v45;
    v31 = v21;
    v32 = v20;
    v33 = v19;
    v34 = v18;
    LOBYTE(v50) = 1;
    sub_237A88298();
    LOBYTE(v50) = 2;
    sub_237A8828C();
    LOBYTE(v50) = 3;
    sub_237A8828C();
    LOBYTE(v50) = 4;
    sub_237A8828C();
    LOBYTE(v50) = 5;
    sub_237A8828C();
    LOBYTE(v50) = 6;
    sub_237A8828C();
    LOBYTE(v50) = 7;
    sub_237A8828C();
    v50 = v25;
    v51 = v26;
    v52 = v24;
    v56 = 8;
    sub_23787AA5C();
    sub_237A882B0();
    v50 = v38;
    v51 = v37;
    v52 = v27;
    v53 = v36;
    v54 = v35;
    v56 = 9;
    sub_2378B6D7C();
    sub_237A882B0();
    v50 = v34;
    v51 = v33;
    v52 = v28;
    v53 = v32;
    v54 = v31;
    v56 = 10;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v23, v22);
}

uint64_t ConcentricRingsConfiguration.hashValue.getter()
{
  sub_237A885D4();
  ConcentricRingsConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t ConcentricRingsConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _BYTE v67[7];
  uint64_t v68;
  uint64_t v69;
  char v70;
  _BYTE v71[7];
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[7];
  _BYTE v87[7];
  _BYTE v88[7];
  int v89;
  int v90;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379A5FE0();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  LOBYTE(v81) = 0;
  sub_2379A6068();
  sub_237A881F0();
  v57 = a2;
  v89 = BYTE1(v58);
  v90 = v58;
  v9 = BYTE2(v58);
  v10 = BYTE3(v58);
  v11 = BYTE4(v58);
  LOBYTE(v58) = 1;
  v53 = sub_237A881D8();
  v54 = v11;
  v56 = v10;
  v55 = v9;
  LOBYTE(v58) = 2;
  sub_237A881CC();
  v13 = v12;
  LOBYTE(v58) = 3;
  sub_237A881CC();
  v15 = v14;
  LOBYTE(v58) = 4;
  sub_237A881CC();
  v17 = v16;
  LOBYTE(v58) = 5;
  sub_237A881CC();
  v19 = v18;
  LOBYTE(v58) = 6;
  sub_237A881CC();
  v21 = v20;
  LOBYTE(v58) = 7;
  sub_237A881CC();
  v51 = v22;
  LOBYTE(v81) = 8;
  sub_23787AB8C();
  sub_237A881F0();
  LOBYTE(v81) = 9;
  v23 = v58;
  v24 = v59;
  v52 = v60;
  sub_23787A11C(v58, v59, v60);
  sub_2378B6EBC();
  sub_237A881F0();
  v47 = v58;
  v46 = v59;
  v48 = v60;
  v50 = v62;
  v49 = v63;
  v80 = 10;
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v25 = v81;
  v26 = v82;
  v43 = v81;
  v42 = v82;
  v27 = v83;
  v41 = v83;
  v28 = v84;
  v29 = v85;
  v45 = v84;
  v44 = v85;
  v30 = v57;
  v31 = v89;
  *v57 = v90;
  v30[1] = v31;
  v32 = v55;
  v30[2] = v55;
  v30[3] = v56;
  v33 = v54;
  v30[4] = v54;
  v34 = v53;
  *((_QWORD *)v30 + 1) = v53;
  *((_DWORD *)v30 + 4) = v13;
  *((_DWORD *)v30 + 5) = v15;
  *((_DWORD *)v30 + 6) = v17;
  *((_DWORD *)v30 + 7) = v19;
  v35 = v51;
  *((_DWORD *)v30 + 8) = v21;
  *((_DWORD *)v30 + 9) = v35;
  *((_QWORD *)v30 + 5) = v23;
  *((_QWORD *)v30 + 6) = v24;
  LOBYTE(v11) = v52;
  v30[56] = v52;
  v36 = v47;
  v37 = v46;
  *((_QWORD *)v30 + 8) = v47;
  *((_QWORD *)v30 + 9) = v37;
  v30[80] = v48;
  v38 = v49;
  *((_QWORD *)v30 + 11) = v50;
  *((_QWORD *)v30 + 12) = v38;
  *((_QWORD *)v30 + 13) = v25;
  *((_QWORD *)v30 + 14) = v26;
  v30[120] = v27;
  *((_QWORD *)v30 + 16) = v28;
  *((_QWORD *)v30 + 17) = v29;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  LOBYTE(v58) = v90;
  BYTE1(v58) = v31;
  BYTE2(v58) = v32;
  BYTE3(v58) = v56;
  BYTE4(v58) = v33;
  v59 = v34;
  v60 = v13;
  v61 = v15;
  v62 = __PAIR64__(v19, v17);
  v63 = __PAIR64__(v35, v21);
  v64 = v23;
  v65 = v24;
  v66 = v11;
  *(_DWORD *)v67 = *(_DWORD *)v88;
  *(_DWORD *)&v67[3] = *(_DWORD *)&v88[3];
  v68 = v36;
  v69 = v37;
  v70 = v48;
  *(_DWORD *)&v71[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)v71 = *(_DWORD *)v87;
  v72 = v50;
  v73 = v49;
  v74 = v43;
  v75 = v42;
  v76 = v41;
  *(_DWORD *)v77 = *(_DWORD *)v86;
  *(_DWORD *)&v77[3] = *(_DWORD *)&v86[3];
  v78 = v45;
  v79 = v44;
  return sub_2379A60AC((uint64_t)&v58);
}

uint64_t sub_2379A5BF8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ConcentricRingsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379A5C0C(_QWORD *a1)
{
  return ConcentricRingsConfiguration.encode(to:)(a1);
}

uint64_t sub_2379A5C20()
{
  sub_237A885D4();
  ConcentricRingsConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379A5C60()
{
  sub_237A885D4();
  ConcentricRingsConfiguration.hash(into:)();
  return sub_237A88610();
}

uint64_t _s14CarPlayAssetUI28ConcentricRingsConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  char v22;
  float64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  uint16x4_t v27;
  float64x2_t v28;
  int8x16_t v29;
  int v30;
  float64x2_t v31;
  int8x16_t v32;
  int v33;
  int v34;
  int v35;
  float64_t v36;
  float64_t v37;
  float64_t v38;
  float64_t v39;
  float64_t v40;
  float64_t v41;
  float64_t v42;
  float64_t v43;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v42 = *(double *)(a1 + 64);
  v41 = *(double *)(a1 + 72);
  v35 = *(unsigned __int8 *)(a1 + 80);
  v43 = *(double *)(a1 + 88);
  v36 = *(double *)(a1 + 96);
  v31 = *(float64x2_t *)(a1 + 128);
  v32 = *(int8x16_t *)(a1 + 104);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  v39 = *(double *)(a2 + 64);
  v38 = *(double *)(a2 + 72);
  v33 = *(unsigned __int8 *)(a1 + 120);
  v34 = *(unsigned __int8 *)(a2 + 80);
  v40 = *(double *)(a2 + 88);
  v37 = *(double *)(a2 + 96);
  v30 = *(unsigned __int8 *)(a2 + 120);
  v28 = *(float64x2_t *)(a2 + 128);
  v29 = *(int8x16_t *)(a2 + 104);
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + 16), *(float32x4_t *)(a2 + 16))), 0xFuLL))) & (*(float *)(a1 + 32) == *(float *)(a2 + 32)) & _s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0() & (*(float *)(a1 + 36) == *(float *)(a2 + 36))) != 1|| v2 != v6)
  {
    return 0;
  }
  sub_23787A11C(v4, v3, v5);
  sub_23787A11C(v8, v7, v9);
  Theme.ColorID.rawValue.getter();
  v13 = v12;
  v15 = v14;
  Theme.ColorID.rawValue.getter();
  if (v13 == v17 && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    sub_23787A134(v8, v7, v9);
    sub_23787A134(v4, v3, v5);
    result = 0;
    v18.f64[0] = v41;
    v18.f64[1] = v42;
    v19.f64[0] = v43;
    v19.f64[1] = v36;
    v20.f64[0] = v38;
    v20.f64[1] = v39;
    v21.f64[0] = v40;
    v21.f64[1] = v37;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v18, v20), (int32x4_t)vceqq_f64(v19, v21))), 0xFuLL))) & 1) == 0)return result;
    goto LABEL_12;
  }
  v22 = sub_237A8840C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(v8, v7, v9);
  sub_23787A134(v4, v3, v5);
  result = 0;
  if ((v22 & 1) != 0)
  {
    v23.f64[0] = v42;
    v23.f64[1] = v41;
    v24.f64[0] = v43;
    v24.f64[1] = v36;
    v25.f64[0] = v39;
    v25.f64[1] = v38;
    v26.f64[0] = v40;
    v26.f64[1] = v37;
    if ((~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v23, v25), (int32x4_t)vceqq_f64(v24, v26))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
    {
LABEL_12:
      if (((v35 ^ v34) & 1) == 0)
      {
        v27 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v32, v32, 8uLL), (float64x2_t)vextq_s8(v29, v29, 8uLL)), (int32x4_t)vceqq_f64(v31, v28))), 0xFuLL));
        v27.i16[0] = vminv_u16(v27);
        return v27.i32[0] & (v33 ^ v30 ^ 1u);
      }
    }
  }
  return result;
}

unint64_t sub_2379A5FE0()
{
  unint64_t result;

  result = qword_256824EF8;
  if (!qword_256824EF8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9DE70, &type metadata for ConcentricRingsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824EF8);
  }
  return result;
}

unint64_t sub_2379A6024()
{
  unint64_t result;

  result = qword_256824F00;
  if (!qword_256824F00)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for PowermeterDataIdentifiers, &type metadata for PowermeterDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256824F00);
  }
  return result;
}

unint64_t sub_2379A6068()
{
  unint64_t result;

  result = qword_256824F10;
  if (!qword_256824F10)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for PowermeterDataIdentifiers, &type metadata for PowermeterDataIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256824F10);
  }
  return result;
}

uint64_t sub_2379A60AC(uint64_t a1)
{
  sub_23787A134(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return a1;
}

unint64_t sub_2379A60E0()
{
  unint64_t result;

  result = qword_256824F18;
  if (!qword_256824F18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ConcentricRingsConfiguration, &type metadata for ConcentricRingsConfiguration);
    atomic_store(result, (unint64_t *)&qword_256824F18);
  }
  return result;
}

uint64_t destroy for ConcentricRingsConfiguration(uint64_t a1)
{
  return sub_23787A134(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  sub_23787A11C(v4, v5, v6);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  sub_23787A11C(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  v9 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v6;
  sub_23787A134(v7, v8, v9);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_23787A134(v5, v6, v7);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcentricRingsConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 80);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcentricRingsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcentricRingsConfiguration()
{
  return &type metadata for ConcentricRingsConfiguration;
}

uint64_t getEnumTagSinglePayload for ConcentricRingsConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcentricRingsConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2379A652C + 4 * byte_237A9DCA0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2379A6560 + 4 * byte_237A9DC9B[v4]))();
}

uint64_t sub_2379A6560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379A6568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379A6570);
  return result;
}

uint64_t sub_2379A657C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379A6584);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2379A6588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379A6590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConcentricRingsConfiguration.CodingKeys()
{
  return &type metadata for ConcentricRingsConfiguration.CodingKeys;
}

unint64_t sub_2379A65B0()
{
  unint64_t result;

  result = qword_256824F20;
  if (!qword_256824F20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9DE48, &type metadata for ConcentricRingsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824F20);
  }
  return result;
}

unint64_t sub_2379A65F8()
{
  unint64_t result;

  result = qword_256824F28;
  if (!qword_256824F28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9DDB8, &type metadata for ConcentricRingsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824F28);
  }
  return result;
}

unint64_t sub_2379A6640()
{
  unint64_t result;

  result = qword_256824F30;
  if (!qword_256824F30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9DDE0, &type metadata for ConcentricRingsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256824F30);
  }
  return result;
}

uint64_t sub_2379A6684(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644961746164 && a2 == 0xEF73726569666974;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D754E73676E6972 && a2 == 0xEB00000000726562 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74646957676E6972 && a2 == 0xE900000000000068 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70614773676E6972 && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB1A60 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000237AB1A80 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7465736E69 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4449726F6C6F63 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000237AB1AA0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AB1AC0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_2379A6B10(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v35 = sub_237A86384();
  MEMORY[0x24BDAC7A8](v35);
  v8 = sub_237A87848();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  if (v18 != 2)
  {
    v38 = a2;
    v39 = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v4, a2);
    sub_237A863B4();
    swift_allocObject();
    sub_237A863A8();
    byte_2568219B8 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D60);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_237A95640;
    sub_237A8636C();
    sub_237A86378();
    v40 = v26;
    sub_23786FAA0(&qword_256823D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256823D70);
    sub_23797CA40();
    sub_237A87E9C();
    sub_237A86390();
    __swift_project_boxed_opaque_existential_2Tm(v37, v38);
    v21 = sub_237A8639C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v37);
    return v21;
  }
  v34 = v14;
  v35 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v17, v4, a2, v15);
  type metadata accessor for LuaEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  byte_2568219B8 = 2;
  v20 = a3;
  v21 = inited;
  v22 = v36;
  v23 = sub_2379842C4((uint64_t)v17, a2, v20);
  if (v22)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, a2);
    return v21;
  }
  v27 = v23;
  v28 = v24;
  Data.utf8.getter(v23, v24);
  v36 = v29;
  sub_23786FD64(v27, v28);
  v37[0] = 0x206E7275746572;
  v37[1] = 0xE700000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A8783C();
  v21 = sub_237A87824();
  v31 = v30;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  if (v31 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, a2);
    return v21;
  }
  __break(1u);
  return result;
}

id sub_2379A6EA0(_QWORD *a1)
{
  void *v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[8];

  v2 = v1;
  v4 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_237A8633C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v25[4] = *a1;
  v25[5] = v9;
  v25[2] = 47;
  v25[3] = 0xE100000000000000;
  v25[0] = 95;
  v25[1] = 0xE100000000000000;
  sub_237879800();
  v10 = sub_237A87E60();
  v12 = v11;
  v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    sub_237A86324();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
    return v2;
  }
  v14 = v10;
  v25[7] = v2;
  v15 = objc_msgSend(v2, sel_fileWrappers);
  if (!v15)
  {
LABEL_12:
    v20 = objc_allocWithZone(MEMORY[0x24BDD1598]);
    sub_23786A1FC();
    v21 = (void *)sub_237A87650();
    v2 = objc_msgSend(v20, sel_initDirectoryWithFileWrappers_, v21);

    v22 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPreferredFilename_, v22);

    NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v2);
    if (!v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
    goto LABEL_13;
  }
  v16 = v15;
  sub_23786A1FC();
  v17 = sub_237A87668();

  if (!*(_QWORD *)(v17 + 16))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v18 = sub_2378D2DB8(v14, v12);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v2 = *(id *)(*(_QWORD *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v2, sel_isDirectory) & 1) == 0)
  {
    sub_237A86318();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
LABEL_13:

  }
  return v2;
}

uint64_t asLua(codable:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;
  _QWORD v19[3];

  v3 = sub_237A87848();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LuaEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = sub_2378D0C6C(MEMORY[0x24BEE4AF8]);
  byte_2568219B8 = 2;
  v8 = a1[3];
  v9 = a1[4];
  v10 = __swift_project_boxed_opaque_existential_2Tm(a1, v8);
  v11 = inited;
  v12 = sub_2379842C4((uint64_t)v10, v8, v9);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return v11;
  }
  v14 = v12;
  v15 = v13;
  Data.utf8.getter(v12, v13);
  sub_23786FD64(v14, v15);
  v19[1] = 0x206E7275746572;
  v19[2] = 0xE700000000000000;
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A8783C();
  v11 = sub_237A87824();
  v17 = v16;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v17 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t DocumentReader.DocumentType.hash(into:)()
{
  return sub_237A885E0();
}

BOOL static DocumentReader.DocumentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DocumentReader.DocumentType.hashValue.getter()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

CarPlayAssetUI::DocumentReader __swiftcall DocumentReader.init(fileWrapper:source:)(NSFileWrapper fileWrapper, CarPlayAssetUI::DocumentReader::DocumentType source)
{
  uint64_t v2;
  char v3;
  CarPlayAssetUI::DocumentReader result;

  v3 = *(_BYTE *)source;
  *(NSFileWrapper *)v2 = fileWrapper;
  *(_BYTE *)(v2 + 8) = v3;
  result.fileWrapper = fileWrapper;
  result.source = source;
  return result;
}

void DocumentReader.document()(_QWORD *a1@<X8>)
{
  DocumentReader.document(_:)(0, a1);
}

void DocumentReader.document(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _QWORD *v60;

  v6 = *(void **)v2;
  v7 = *(_BYTE *)(v2 + 8);
  NSFileWrapper.data(contentsOf:)(0x2E6567616B636170, 0xEC0000006E6F736ALL);
  if (!v3)
  {
    v10 = v8;
    v11 = v9;
    v60 = a2;
    sub_237A86360();
    swift_allocObject();
    sub_237A86354();
    sub_2379A7A0C();
    sub_237A86348();
    swift_release();
    v12 = v6;
    v13 = swift_bridgeObjectRetain();
    v14 = sub_2379A9050(v13, v12, v7);
    swift_bridgeObjectRelease_n();

    NSFileWrapper.data(contentsOf:)(0x736A2E656D656874, 0xEA00000000006E6FLL);
    v38 = v14;
    v16 = v15;
    v18 = v17;
    swift_allocObject();
    sub_237A86354();
    sub_23786FDA8();
    v40 = v18;
    sub_237A86348();
    swift_release();
    v33 = v42;
    v34 = v44;
    v35 = v45;
    v36 = v46;
    v37 = v47;
    if (v43)
    {
      v32 = v16;
      v31 = v43;
      *(_QWORD *)&v42 = MEMORY[0x24BEE4B08];
      *((_QWORD *)&v42 + 1) = MEMORY[0x24BEE4B00];
    }
    else
    {
      swift_allocObject();
      if (a1)
      {
        swift_retain();
        sub_237A86354();
        sub_23786FCDC();
        v32 = v16;
        sub_237A86348();
        swift_release();
        sub_2378A2C04(a1);
        v31 = 0;
        v42 = v41;
      }
      else
      {
        sub_237A86354();
        sub_23786FCDC();
        sub_237A86348();
        v32 = v16;
        swift_release();
        v31 = 0;
      }
    }
    v39 = v42;
    v19._countAndFlagsBits = 0x736172747845;
    v19._object = (void *)0xE600000000000000;
    v20 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v19, 0);
    v21 = v49;
    v22 = v50;
    v23 = v51;
    v24 = v53;
    v25 = v54;
    v26 = v55;
    v27 = v57;
    v28 = v58;
    v29 = v59;
    v30 = v60;
    *v60 = v48;
    v30[1] = v21;
    v30[2] = v22;
    v30[3] = v23;
    *((_OWORD *)v30 + 2) = v52;
    *((_BYTE *)v30 + 48) = v24;
    v30[7] = v25;
    v30[8] = v26;
    *(_OWORD *)(v30 + 9) = v56;
    v30[11] = v27;
    v30[12] = v28;
    *((_BYTE *)v30 + 104) = v29;
    v30[14] = v38;
    *(_OWORD *)(v30 + 15) = v39;
    v30[24] = v20;
    v30[25] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23786FD64(v40, v32);
    sub_23786FD64(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v30 + 17) = v33;
    v30[19] = v31;
    v30[20] = v34;
    v30[21] = v35;
    v30[22] = v36;
    v30[23] = v37;
  }
}

unint64_t sub_2379A7A0C()
{
  unint64_t result;

  result = qword_256824F68;
  if (!qword_256824F68)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage, &type metadata for ArcPackage);
    atomic_store(result, (unint64_t *)&qword_256824F68);
  }
  return result;
}

uint64_t sub_2379A7A50(const void *a1, void *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[2];
  _QWORD v36[61];
  uint64_t v37;

  v4 = v3;
  v8 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_237A8633C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v36, a1, 0x1E0uLL);
  LOBYTE(a3) = *a3;
  v13 = v36[1];
  *(_QWORD *)(v4 + 16) = v36[0];
  *(_QWORD *)(v4 + 24) = v13;
  swift_bridgeObjectRetain();
  sub_2378700DC((uint64_t)v36);
  *(_QWORD *)(v4 + 32) = a2;
  *(_BYTE *)(v4 + 48) = (_BYTE)a3;
  v14 = *(_QWORD *)(v4 + 24);
  v35[0] = *(_QWORD *)(v4 + 16);
  v35[1] = v14;
  v15 = a2;
  swift_bridgeObjectRetain();
  v16 = v37;
  v17 = sub_2379A6EA0(v35);
  v37 = v16;
  if (v16)
  {
    swift_bridgeObjectRelease();

    goto LABEL_11;
  }
  v18 = v17;
  v33 = v10;
  swift_bridgeObjectRelease();
  v34 = v18;
  v19 = objc_msgSend(v18, sel_fileWrappers);
  if (!v19)
  {
LABEL_10:
    sub_237A86300();
    sub_2378D4298(MEMORY[0x24BEE4AF8]);
    sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_237A864D4();
    sub_237A862D0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
    swift_willThrow();

    goto LABEL_11;
  }
  v20 = v19;
  sub_23786A1FC();
  v21 = sub_237A87668();

  if (!*(_QWORD *)(v21 + 16) || (v22 = sub_2378D2DB8(0xD000000000000013, 0x8000000237AAF250), (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v24 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v24, sel_regularFileContents);
  if (!v25)
  {

    goto LABEL_10;
  }
  v26 = v25;
  v27 = sub_237A86540();
  v29 = v28;

  sub_237A86360();
  swift_allocObject();
  sub_237A86354();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256823D80);
  sub_2379AADE0();
  v30 = v37;
  sub_237A86348();
  if (!v30)
  {

    sub_23786FD64(v27, v29);
    swift_release();

    *(_QWORD *)(v4 + 40) = v35[0];
    return v4;
  }

  sub_23786FD64(v27, v29);
  swift_release();

LABEL_11:
  swift_bridgeObjectRelease();

  type metadata accessor for DocumentReader.DisplayReader();
  swift_deallocPartialClassInstance();
  return v4;
}

id sub_2379A7DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  void *v22;
  uint64_t inited;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  v4 = v2;
  v29 = a2;
  v27 = a1;
  v5 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_237A8633C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 24);
  v28[0] = *(_QWORD *)(v2 + 16);
  v28[1] = v10;
  swift_bridgeObjectRetain();
  v11 = sub_2379A6EA0(v28);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v26 = v11;
    v12 = v27;
    v13 = *(_QWORD *)(v4 + 40);
    v14 = v7;
    v15 = v29;
    if (*(_QWORD *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      v16 = sub_2378D2DB8(v12, v15);
      if ((v17 & 1) != 0)
      {
        v27 = v7;
        v18 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 32 * v16);
        v19 = *v18;
        v20 = (void *)v18[1];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        v21._countAndFlagsBits = v19;
        v21._object = v20;
        v22 = v26;
        v11 = (id)NSFileWrapper.child(at:)(v21);
        swift_bridgeObjectRelease();
        if (v11)
        {

          swift_bridgeObjectRelease();
          return v11;
        }
        sub_237A862DC();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256820410);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
        strcpy((char *)(inited + 32), "resource path");
        *(_WORD *)(inited + 46) = -4864;
        *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(inited + 48) = v19;
        *(_QWORD *)(inited + 56) = v20;
        v14 = v27;
LABEL_8:
        sub_2378D0F4C(inited);
        sub_23786FAA0((unint64_t *)&qword_25681E730, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
        sub_237A864D4();
        v11 = v9;
        sub_237A862D0();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
        swift_willThrow();

        return v11;
      }
      swift_bridgeObjectRelease();
    }
    sub_237A862DC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820410);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
    *(_QWORD *)(inited + 32) = 0xD000000000000013;
    *(_QWORD *)(inited + 40) = 0x8000000237AB1B70;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v12;
    *(_QWORD *)(inited + 56) = v15;
    swift_bridgeObjectRetain();
    v22 = v26;
    goto LABEL_8;
  }
  return v11;
}

uint64_t sub_2379A80C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_2379A80F4(uint64_t a1, uint64_t a2)
{
  return sub_2379A7DDC(a1, a2);
}

uint64_t sub_2379A8114()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379A8120(_BYTE *a1)
{
  uint64_t v1;

  return *a1 & 1 | ((*(_BYTE *)(*(_QWORD *)v1 + 48) & 1) == 0);
}

void sub_2379A8138(_QWORD *a1@<X8>)
{
  DocumentReader.document(_:)(0, a1);
}

void sub_2379A8178(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  DocumentReader.document(_:)(a1, a2);
}

uint64_t sub_2379A818C(uint64_t a1)
{
  return sub_2379A81EC(a1, qword_256824F38);
}

uint64_t static DocumentWriter.builtinScriptsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2379A830C(&qword_25681E400, (uint64_t)qword_256824F38, a1);
}

uint64_t sub_2379A81C8(uint64_t a1)
{
  return sub_2379A81EC(a1, qword_256824F50);
}

uint64_t sub_2379A81EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v11;

  v3 = sub_237A8651C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v8 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v9 = objc_msgSend(v8, sel_bundleURL);

  sub_237A86510();
  sub_237A86504();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static DocumentWriter.builtinASCPathsByIdURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2379A830C(&qword_25681E408, (uint64_t)qword_256824F50, a1);
}

uint64_t sub_2379A830C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_237A8651C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

id DocumentWriter.fileWrapper.getter()
{
  id *v0;

  return *v0;
}

uint64_t DocumentWriter.init(fileWrapper:destination:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for DocumentWriter(0) + 20);
  return sub_2379A9270(a2, v4);
}

void DocumentWriter.write(_:)(__int128 *a1)
{
  _BYTE v2[208];
  _OWORD v3[13];

  sub_2379A92C8(v3);
  sub_237870370((uint64_t)v3, (uint64_t)v2, &qword_25681E560);
  DocumentWriter.write(_:oldDocument:)(a1, (uint64_t)v2);
}

void DocumentWriter.write(_:oldDocument:)(__int128 *a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  id v45;
  char *v46;
  id v47;
  Swift::String v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  objc_class *v56;
  id v57;
  NSFileWrapper v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void *v85;
  unsigned int v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  id v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  id v96;
  void *v97;
  id v98;
  void (*v99)(char *, uint64_t);
  uint64_t (*v100)(_QWORD);
  uint64_t v101;
  id v102;
  void (*v103)(char *, uint64_t);
  id v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  id v113;
  int v114;
  char *v115;
  void (*v116)(char *, uint64_t);
  objc_class *isa;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  id v125;
  id v126;
  char v127;
  id v128;
  _BYTE v129[208];
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  _QWORD v156[29];

  v4 = v3;
  v156[26] = *MEMORY[0x24BDAC8D0];
  v107 = type metadata accessor for MetadataExporter();
  MEMORY[0x24BDAC7A8](v107);
  v108 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
  MEMORY[0x24BDAC7A8](v8);
  v111 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237A8651C();
  v11 = *(_QWORD *)(v10 - 8);
  v120 = v10;
  v121 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v124 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v119 = (char *)&v105 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v112 = (char *)&v105 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v115 = (char *)&v105 - v18;
  v19 = type metadata accessor for DocumentWriter.Destination(0);
  MEMORY[0x24BDAC7A8](v19);
  v109 = (uint64_t)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v110 = (uint64_t)&v105 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v105 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v105 - v27;
  v29 = a1[11];
  v153 = a1[10];
  v154 = v29;
  v155 = a1[12];
  v30 = a1[7];
  v149 = a1[6];
  v150 = v30;
  v31 = a1[9];
  v151 = a1[8];
  v152 = v31;
  v32 = a1[3];
  v145 = a1[2];
  v146 = v32;
  v33 = a1[5];
  v147 = a1[4];
  v148 = v33;
  v34 = a1[1];
  v143 = *a1;
  v144 = v34;
  sub_237870370(a2, (uint64_t)v156, &qword_25681E560);
  v125 = *v2;
  v122 = (uint64_t)v2 + *(int *)(type metadata accessor for DocumentWriter(0) + 20);
  sub_2379A92EC(v122, (uint64_t)v28);
  v123 = v19;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v114 = 0;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v114 = 1;
LABEL_5:
    v37 = v119;
    v36 = v120;
    v38 = v124;
    v39 = v125;
    sub_2379348F0((uint64_t)v28);
    v40 = v39;
    goto LABEL_8;
  }
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
  v42 = &v28[*(int *)(v41 + 48)];
  v43 = &v28[*(int *)(v41 + 64)];
  v44 = *(void (**)(char *, uint64_t))(v121 + 8);
  v45 = v125;
  v46 = v43;
  v36 = v120;
  v44(v46, v120);
  v44(v42, v36);
  sub_2379348F0((uint64_t)v28);
  v47 = v45;
  v48._countAndFlagsBits = 114;
  v48._object = (void *)0xE100000000000000;
  v49 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v48, 1);
  v38 = v124;
  if (!v49)
  {
    sub_237A880AC();
    __break(1u);
    return;
  }
  v50 = (void *)v49;

  v114 = 2;
  v37 = v119;
  v40 = v50;
LABEL_8:
  sub_2379A92EC(v122, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v113 = v40;
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v52 = &v25[*(int *)(v51 + 64)];
    v53 = v121;
    v54 = (uint64_t)v115;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v115, &v25[*(int *)(v51 + 48)], v36);
    v55 = *(void (**)(char *, uint64_t))(v53 + 8);
    v55(v52, v36);
    sub_2379348F0((uint64_t)v25);
    LOBYTE(v130) = 1;
    v56 = (objc_class *)sub_23786EE88(v54, (unsigned __int8 *)&v130);
    if (v3)
    {
      v55((char *)v54, v36);

      return;
    }
    v58.super.isa = v56;
    v57 = v125;
    if ((unint64_t)v56 >> 62)
      goto LABEL_49;
    v59 = *(_QWORD *)(((unint64_t)v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    v106 = v55;
    if (v59)
    {
LABEL_14:
      isa = v58.super.isa;
      v118 = (unint64_t)v58.super.isa & 0xC000000000000001;
      v60 = 4;
      v116 = (void (*)(char *, uint64_t))v59;
      do
      {
        if (v118)
          v61 = (objc_class *)MEMORY[0x23B81EBEC](v60 - 4, v58.super.isa);
        else
          v61 = (objc_class *)*((id *)v58.super.isa + v60);
        v58.super.isa = v61;
        v55 = (void (*)(char *, uint64_t))(v60 - 3);
        if (__OFADD__(v60 - 4, 1))
        {
          __break(1u);
LABEL_49:
          swift_bridgeObjectRetain();
          v59 = sub_237A880C4();
          swift_bridgeObjectRelease();
          v106 = v55;
          if (!v59)
            break;
          goto LABEL_14;
        }
        v62 = -[objc_class filename](v61, sel_filename);
        if (!v62)
          __break(1u);
        v63 = v62;
        v124 = (char *)sub_237A87818();
        v65 = v64;

        v66 = objc_msgSend(v57, sel_fileWrappers);
        if (v66)
        {
          v67 = v66;
          sub_23786A1FC();
          v68 = sub_237A87668();

          if (*(_QWORD *)(v68 + 16))
          {
            swift_bridgeObjectRetain();
            v69 = sub_2378D2DB8((uint64_t)v124, v65);
            if ((v70 & 1) != 0)
            {
              v71 = *(id *)(*(_QWORD *)(v68 + 56) + 8 * v69);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v72 = v125;
              objc_msgSend(v125, sel_removeFileWrapper_, v71);
              swift_bridgeObjectRelease();

              v57 = v72;
              goto LABEL_28;
            }
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        v57 = v125;
LABEL_28:
        NSFileWrapper.checkedAddFileWrapper(_:)(v58);
        v4 = v73;
        if (v73)
        {
          swift_bridgeObjectRelease();

          v106(v115, v120);
          return;
        }

        swift_bridgeObjectRelease();
        ++v60;
        v58.super.isa = isa;
      }
      while (v55 != v116);
    }
    swift_bridgeObjectRelease();
    v36 = v120;
    v106(v115, v120);
    v37 = v119;
    v40 = v113;
  }
  else
  {
    sub_2378DE6A4((uint64_t)v25, type metadata accessor for DocumentWriter.Destination);
    v57 = v125;
  }
  v126 = v57;
  v127 = v114;
  v128 = v40;
  v140 = v153;
  v141 = v154;
  v142 = v155;
  v136 = v149;
  v137 = v150;
  v138 = v151;
  v139 = v152;
  v132 = v145;
  v133 = v146;
  v134 = v147;
  v135 = v148;
  v130 = v143;
  v131 = v144;
  sub_237870370((uint64_t)v156, (uint64_t)v129, &qword_25681E560);
  ArcPackageExporter.update(document:oldDocument:)((uint64_t)&v130, (uint64_t)v129);
  if (v4)
  {

    return;
  }
  v113 = v40;
  v74 = v110;
  sub_2379A92EC(v122, v110);
  v75 = swift_getEnumCaseMultiPayload();
  if (!v75)
  {
    v77 = v74;
    v76 = (uint64_t)v111;
    goto LABEL_37;
  }
  v76 = (uint64_t)v111;
  if (v75 == 1)
  {
    v77 = v74;
LABEL_37:
    sub_237870370(v77, v76, &qword_256822198);
    goto LABEL_39;
  }
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
  v79 = v74 + *(int *)(v78 + 48);
  v80 = v74 + *(int *)(v78 + 64);
  sub_237870370(v74, v76, &qword_256822198);
  v81 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
  v82 = v80;
  v57 = v125;
  v81(v82, v36);
  v81(v79, v36);
LABEL_39:
  v83 = v112;
  v84 = v121;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v76, 1, v36) == 1)
  {

    sub_2379348F0(v76);
  }
  else
  {
    v124 = *(char **)(v84 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v124)(v83, v76, v36);
    v85 = (void *)sub_237A864F8();
    *(_QWORD *)&v130 = 0;
    v86 = objc_msgSend(v57, sel_writeToURL_options_originalContentsURL_error_, v85, 1, 0, &v130);

    v87 = (void *)v130;
    if (v86)
    {
      v88 = v109;
      sub_2379A92EC(v122, v109);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
        v90 = v88 + *(int *)(v89 + 48);
        ((void (*)(char *, uint64_t, uint64_t))v124)(v37, v88 + *(int *)(v89 + 64), v36);
        v91 = *(_QWORD **)(v121 + 8);
        v92 = v87;
        v124 = (char *)v91;
        ((void (*)(uint64_t, uint64_t))v91)(v90, v36);
        sub_2379348F0(v88);
        sub_237A86504();
        v93 = v107;
        v94 = v108;
        v95 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
        v95(&v108[*(int *)(v107 + 20)], v37, v36);
        v95(&v94[*(int *)(v93 + 24)], v38, v36);
        v96 = objc_allocWithZone(MEMORY[0x24BDD1598]);
        sub_23786A1FC();
        v97 = (void *)sub_237A87650();
        v98 = objc_msgSend(v96, sel_initDirectoryWithFileWrappers_, v97);

        *(_QWORD *)v94 = v98;
        v140 = v153;
        v141 = v154;
        v142 = v155;
        v136 = v149;
        v137 = v150;
        v138 = v151;
        v139 = v152;
        v132 = v145;
        v133 = v146;
        v134 = v147;
        v135 = v148;
        v130 = v143;
        v131 = v144;
        MetadataExporter.write(_:)((uint64_t)&v130);

        v99 = (void (*)(char *, uint64_t))v124;
        ((void (*)(char *, uint64_t))v124)(v38, v36);
        v99(v37, v36);
        v99(v112, v36);
        v100 = (uint64_t (*)(_QWORD))type metadata accessor for MetadataExporter;
        v101 = (uint64_t)v94;
      }
      else
      {
        v103 = *(void (**)(char *, uint64_t))(v121 + 8);
        v104 = v87;
        v103(v112, v36);

        v100 = type metadata accessor for DocumentWriter.Destination;
        v101 = v88;
      }
      sub_2378DE6A4(v101, v100);
    }
    else
    {
      v102 = (id)v130;
      sub_237A864E0();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v36);
    }
  }
}

uint64_t DocumentWriter.Destination.outputURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for DocumentWriter.Destination(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2379A92EC(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() <= 1)
    return sub_237870370((uint64_t)v6, a1, &qword_256822198);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
  v9 = &v6[*(int *)(v8 + 48)];
  v10 = &v6[*(int *)(v8 + 64)];
  sub_237870370((uint64_t)v6, a1, &qword_256822198);
  v11 = sub_237A8651C();
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v11);
}

void sub_2379A8FF4(__int128 *a1)
{
  _BYTE v2[208];
  _OWORD v3[13];

  sub_2379A92C8(v3);
  sub_237870370((uint64_t)v3, (uint64_t)v2, &qword_25681E560);
  DocumentWriter.write(_:oldDocument:)(a1, (uint64_t)v2);
}

uint64_t sub_2379A9050(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  char *v8;
  uint64_t v9;
  int64_t i;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v15;
  char v16;
  _BYTE v17[480];
  _QWORD v18[5];
  _BYTE __src[480];
  _BYTE __dst[480];
  uint64_t v21;
  id v22;

  v4 = v3;
  v22 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v15 = a3 & 1;
    v21 = MEMORY[0x24BEE4AF8];
    sub_2379D6290(0, v5, 0);
    v6 = v21;
    v8 = (char *)(a1 + 32);
    v9 = type metadata accessor for DocumentReader.DisplayReader();
    for (i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, sizeof(__dst));
      memcpy(__src, v8, sizeof(__src));
      memcpy(v17, v8, sizeof(v17));
      v16 = v15;
      swift_allocObject();
      sub_23786FE8C((uint64_t)__dst);
      sub_23786FE8C((uint64_t)__dst);
      sub_23786FE8C((uint64_t)__dst);
      v11 = sub_2379A7A50(v17, v22, &v16);
      if (v4)
        break;
      v18[3] = v9;
      v18[4] = &off_250979CA0;
      v18[0] = v11;
      Display.restoreAssets(from:)((int *)v18);
      v4 = 0;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
      sub_2378700DC((uint64_t)__dst);
      memcpy(v17, __src, sizeof(v17));
      v21 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_2379D6290(v12 > 1, v13 + 1, 1);
        v6 = v21;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      memcpy((void *)(v6 + 480 * v13 + 32), v17, 0x1E0uLL);
      if (!i)
        return v6;
      v8 += 480;
    }
    sub_2378700DC((uint64_t)__dst);
    sub_2378700DC((uint64_t)__dst);
    swift_release();
  }
  return v6;
}

uint64_t type metadata accessor for DocumentWriter(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568250A0);
}

uint64_t sub_2379A9270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DocumentWriter.Destination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DocumentWriter.Destination(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256825148);
}

double sub_2379A92C8(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_2379A92EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DocumentWriter.Destination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2379A9334()
{
  unint64_t result;

  result = qword_256824F78;
  if (!qword_256824F78)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DocumentReader.DocumentType, &type metadata for DocumentReader.DocumentType);
    atomic_store(result, (unint64_t *)&qword_256824F78);
  }
  return result;
}

uint64_t dispatch thunk of AssetReading.asset(identifier:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of AssetReading.manifestEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetReading.canRestoreAssets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DocumentReading.document()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DocumentReading.document(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of DocumentWriting.write(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for DocumentReader(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for DocumentReader(id *a1)
{

}

uint64_t assignWithCopy for DocumentReader(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for DocumentReader(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentReader(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DocumentReader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentReader()
{
  return &type metadata for DocumentReader;
}

uint64_t storeEnumTagSinglePayload for DocumentReader.DocumentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379A958C + 4 * byte_237A9DECD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379A95C0 + 4 * byte_237A9DEC8[v4]))();
}

uint64_t sub_2379A95C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379A95C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379A95D0);
  return result;
}

uint64_t sub_2379A95DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379A95E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379A95E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379A95F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DocumentReader.DocumentType()
{
  return &type metadata for DocumentReader.DocumentType;
}

uint64_t type metadata accessor for DocumentReader.DisplayReader()
{
  return objc_opt_self();
}

void **initializeBufferWithCopyOfBuffer for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  int *v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    type metadata accessor for DocumentWriter.Destination(0);
    v9 = v4;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = sub_237A8651C();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v16(v7, v8, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v16(&v7[v18[12]], &v8[v18[12]], v13);
      v16(&v7[v18[16]], &v8[v18[16]], v13);
      v7[v18[20]] = v8[v18[20]];
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_237A8651C();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
        goto LABEL_10;
    }
    else
    {
      v11 = sub_237A8651C();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
LABEL_10:
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return v5;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v8, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    goto LABEL_15;
  }
  v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  swift_retain();
  return v5;
}

uint64_t destroy for DocumentWriter(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t);
  void (*v15)(char *, uint64_t);

  v4 = (char *)a1 + *(int *)(a2 + 20);
  type metadata accessor for DocumentWriter.Destination(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v8 = sub_237A8651C();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8);
    v15 = *(void (**)(char *, uint64_t))(v9 + 8);
    if (!v10)
      v15(v4, v8);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v15(&v4[*(int *)(v11 + 48)], v8);
    v12 = &v4[*(int *)(v11 + 64)];
    v13 = v8;
    v14 = (uint64_t (*)(char *, uint64_t))v15;
    return v14(v12, v13);
  }
  if (result <= 1)
  {
    v6 = sub_237A8651C();
    v7 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
    if (!(_DWORD)result)
    {
      v14 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
      v12 = v4;
      v13 = v6;
      return v14(v12, v13);
    }
  }
  return result;
}

void **initializeWithCopy for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  int *v16;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  type metadata accessor for DocumentWriter.Destination(0);
  v8 = v4;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v12 = sub_237A8651C();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      v15 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    }
    else
    {
      v15 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v15(v6, v7, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    }
    v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v15(&v6[v16[12]], &v7[v16[12]], v12);
    v15(&v6[v16[16]], &v7[v16[16]], v12);
    v6[v16[20]] = v7[v16[20]];
  }
  else
  {
    v9 = sub_237A8651C();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_2378DE6A4((uint64_t)a1 + v9, type metadata accessor for DocumentWriter.Destination);
    type metadata accessor for DocumentWriter.Destination(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v15 = sub_237A8651C();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        v18 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      }
      else
      {
        v18 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        v18(v10, v11, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      }
      v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v18(&v10[v19[12]], &v11[v19[12]], v15);
      v18(&v10[v19[16]], &v11[v19[16]], v15);
      v10[v19[20]] = v11[v19[20]];
    }
    else
    {
      v12 = sub_237A8651C();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for DocumentWriter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  type metadata accessor for DocumentWriter.Destination(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v10 = sub_237A8651C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    }
    else
    {
      v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v13(v5, v6, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
    }
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v13(&v5[v14[12]], &v6[v14[12]], v10);
    v13(&v5[v14[16]], &v6[v14[16]], v10);
    v5[v14[20]] = v6[v14[20]];
  }
  else
  {
    v7 = sub_237A8651C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithTake for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;

  v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_2378DE6A4((uint64_t)a1 + v7, type metadata accessor for DocumentWriter.Destination);
    type metadata accessor for DocumentWriter.Destination(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v13 = sub_237A8651C();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v16(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v16(&v8[v17[12]], &v9[v17[12]], v13);
      v16(&v8[v17[16]], &v9[v17[16]], v13);
      v8[v17[20]] = v9[v17[20]];
    }
    else
    {
      v10 = sub_237A8651C();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentWriter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379AA138(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DocumentWriter.Destination(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentWriter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2379AA1C0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DocumentWriter.Destination(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2379AA234()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DocumentWriter.Destination(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentWriter.Destination(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v14;
  int *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_237A8651C();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16);
      }
      else
      {
        v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16);
        v13(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v13((uint64_t *)((char *)a1 + v15[12]), (uint64_t *)((char *)a2 + v15[12]), v10);
      v13((uint64_t *)((char *)a1 + v15[16]), (uint64_t *)((char *)a2 + v15[16]), v10);
      *((_BYTE *)a1 + v15[20]) = *((_BYTE *)a2 + v15[20]);
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_237A8651C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        goto LABEL_10;
    }
    else
    {
      v7 = sub_237A8651C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
LABEL_10:
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_15;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for DocumentWriter.Destination(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v5 = sub_237A8651C();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
    v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    if (!v7)
      v12(a1, v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v12(a1 + *(int *)(v8 + 48), v5);
    v9 = a1 + *(int *)(v8 + 64);
    v10 = v5;
    v11 = (uint64_t (*)(uint64_t, uint64_t))v12;
    return v11(v9, v10);
  }
  if (result <= 1)
  {
    v3 = sub_237A8651C();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
    {
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      v9 = a1;
      v10 = v3;
      return v11(v9, v10);
    }
  }
  return result;
}

char *initializeWithCopy for DocumentWriter.Destination(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_237A8651C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    }
    else
    {
      v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v10(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v10(&a1[v11[12]], &a2[v11[12]], v7);
    v10(&a1[v11[16]], &a2[v11[16]], v7);
    a1[v11[20]] = a2[v11[20]];
  }
  else
  {
    v4 = sub_237A8651C();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for DocumentWriter.Destination(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (a1 != a2)
  {
    sub_2378DE6A4((uint64_t)a1, type metadata accessor for DocumentWriter.Destination);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_237A8651C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      }
      else
      {
        v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v10(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v10(&a1[v11[12]], &a2[v11[12]], v7);
      v10(&a1[v11[16]], &a2[v11[16]], v7);
      a1[v11[20]] = a2[v11[20]];
    }
    else
    {
      v4 = sub_237A8651C();
      v5 = *(_QWORD *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for DocumentWriter.Destination(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_237A8651C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    }
    else
    {
      v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v10(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
    v10(&a1[v11[12]], &a2[v11[12]], v7);
    v10(&a1[v11[16]], &a2[v11[16]], v7);
    a1[v11[20]] = a2[v11[20]];
  }
  else
  {
    v4 = sub_237A8651C();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for DocumentWriter.Destination(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;

  if (a1 != a2)
  {
    sub_2378DE6A4((uint64_t)a1, type metadata accessor for DocumentWriter.Destination);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_237A8651C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      }
      else
      {
        v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v10(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256824F70);
      v10(&a1[v11[12]], &a2[v11[12]], v7);
      v10(&a1[v11[16]], &a2[v11[16]], v7);
      a1[v11[20]] = a2[v11[20]];
    }
    else
    {
      v4 = sub_237A8651C();
      v5 = *(_QWORD *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256822198);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_2379AACE0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  sub_2379AAD8C();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(v0 - 8) + 64;
    v5 = v4;
    sub_237A8651C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      v6 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_2379AAD8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256825158[0])
  {
    sub_237A8651C();
    v0 = sub_237A87E0C();
    if (!v1)
      atomic_store(v0, qword_256825158);
  }
}

unint64_t sub_2379AADE0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256825188;
  if (!qword_256825188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256823D80);
    v2 = sub_2379AAE4C();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256825188);
  }
  return result;
}

unint64_t sub_2379AAE4C()
{
  unint64_t result;

  result = qword_256825190;
  if (!qword_256825190)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetManifestEntry, &type metadata for AssetManifestEntry);
    atomic_store(result, (unint64_t *)&qword_256825190);
  }
  return result;
}

uint64_t sub_2379AAE98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

CarPlayAssetUI::AssetType_optional __swiftcall AssetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::AssetType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t AssetType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1953394534;
  else
    return 0x6567616D69;
}

uint64_t sub_2379AAF7C()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379AAFF0()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379AB040()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::AssetType_optional sub_2379AB0B0(Swift::String *a1)
{
  return AssetType.init(rawValue:)(*a1);
}

void sub_2379AB0BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1953394534;
  if (!*v1)
    v2 = 0x6567616D69;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379AB0F0()
{
  sub_2379AB668();
  return sub_237A87A34();
}

uint64_t sub_2379AB14C()
{
  sub_2379AB668();
  return sub_237A879EC();
}

uint64_t sub_2379AB198(char *a1, char *a2)
{
  return sub_2378D61A4(*a1, *a2);
}

uint64_t AssetDestination.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

CarPlayAssetUI::AssetDestination __swiftcall AssetDestination.init(rawValue:)(CarPlayAssetUI::AssetDestination rawValue)
{
  CarPlayAssetUI::AssetDestination *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static AssetDestination.phoneAsset.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static AssetDestination.accessoryAsset.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static AssetDestination.arc.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_2379AB1D8()
{
  qword_256825198 = 7;
}

uint64_t static AssetDestination.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25681E410 != -1)
    result = swift_once();
  *a1 = qword_256825198;
  return result;
}

unint64_t sub_2379AB260()
{
  unint64_t result;

  result = qword_2568251A0;
  if (!qword_2568251A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetType, &type metadata for AssetType);
    atomic_store(result, (unint64_t *)&qword_2568251A0);
  }
  return result;
}

unint64_t sub_2379AB2A8()
{
  unint64_t result;

  result = qword_2568251A8;
  if (!qword_2568251A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_2568251A8);
  }
  return result;
}

unint64_t sub_2379AB2F0()
{
  unint64_t result;

  result = qword_2568251B0;
  if (!qword_2568251B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_2568251B0);
  }
  return result;
}

uint64_t sub_2379AB334()
{
  sub_2379AB2A8();
  return sub_237A87A40();
}

uint64_t sub_2379AB390()
{
  sub_2379AB2A8();
  return sub_237A879F8();
}

unint64_t sub_2379AB3E0()
{
  unint64_t result;

  result = qword_2568251B8;
  if (!qword_2568251B8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_2568251B8);
  }
  return result;
}

uint64_t sub_2379AB424()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2379AB468()
{
  return sub_237A885E0();
}

uint64_t sub_2379AB490()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

unint64_t sub_2379AB4D4()
{
  unint64_t result;

  result = qword_2568251C0;
  if (!qword_2568251C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetDestination, &type metadata for AssetDestination);
    atomic_store(result, (unint64_t *)&qword_2568251C0);
  }
  return result;
}

uint64_t sub_2379AB518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2379AAE98(a1, a2);
}

uint64_t storeEnumTagSinglePayload for AssetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379AB578 + 4 * byte_237A9E055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379AB5AC + 4 * byte_237A9E050[v4]))();
}

uint64_t sub_2379AB5AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379AB5B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379AB5BCLL);
  return result;
}

uint64_t sub_2379AB5C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379AB5D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379AB5D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379AB5DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetType()
{
  return &type metadata for AssetType;
}

ValueMetadata *type metadata accessor for AssetDestination()
{
  return &type metadata for AssetDestination;
}

uint64_t dispatch thunk of Asset.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Asset.assetType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Asset.destination.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Asset.preferredFilename.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Asset.generateAsset(destination:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Asset.restore(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AssetContainer.assets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetContainer.restoreAssets(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

unint64_t sub_2379AB668()
{
  unint64_t result;

  result = qword_2568251C8;
  if (!qword_2568251C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetType, &type metadata for AssetType);
    atomic_store(result, (unint64_t *)&qword_2568251C8);
  }
  return result;
}

double sub_2379AB6AC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237953F34();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2379AB6F8(uint64_t *a1)
{
  sub_23795547C(*a1);
  sub_237953F34();
  return sub_237A86B94();
}

double sub_2379AB748()
{
  return sub_2379AB798();
}

double sub_2379AB75C()
{
  return sub_2379AB798();
}

double sub_2379AB770()
{
  return sub_2379AB798();
}

double sub_2379AB784()
{
  return sub_2379AB798();
}

double sub_2379AB798()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  return v1;
}

_OWORD *sub_2379AB800()
{
  _OWORD *v0;

  v0[1] = xmmword_237A9E3D0;
  v0[2] = xmmword_237A99960;
  v0[3] = xmmword_237A9E3E0;
  v0[4] = xmmword_237A9E3F0;
  swift_beginAccess();
  sub_237A866CC();
  swift_endAccess();
  swift_beginAccess();
  sub_237A866CC();
  swift_endAccess();
  swift_beginAccess();
  sub_237A866CC();
  swift_endAccess();
  swift_beginAccess();
  sub_237A866CC();
  swift_endAccess();
  return v0;
}

uint64_t sub_2379AB950()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A86708();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2379ABA28()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A86708();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t LayoutTreatment.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__saturation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568251D8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blur, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__scale, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blackOpacity, v2);
  return v0;
}

uint64_t LayoutTreatment.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__saturation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568251D8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blur, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__scale, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blackOpacity, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2379ABC2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for LayoutTreatment(0);
  result = sub_237A866A8();
  *a1 = result;
  return result;
}

uint64_t sub_2379ABC68()
{
  uint64_t v0;

  type metadata accessor for LayoutTreatment(0);
  v0 = swift_allocObject();
  sub_2379AB800();
  return v0;
}

uint64_t LayoutView.init(layout:displaySize:displayID:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  double *v25;
  _QWORD *v26;
  uint64_t v27;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - v14;
  v16 = *a2;
  v17 = a2[1];
  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
  *(_QWORD *)(a3 + 40) = sub_237A86A20();
  *(_QWORD *)(a3 + 48) = v18;
  *(_QWORD *)(a3 + 56) = swift_getKeyPath();
  *(_BYTE *)(a3 + 64) = 0;
  v19 = (int *)type metadata accessor for LayoutView(0);
  v20 = (uint64_t *)(a3 + v19[8]);
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  swift_storeEnumTagMultiPayload();
  v21 = a3 + v19[9];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
  sub_2378BBFE0((uint64_t)v15, (uint64_t)v12, &qword_256820880);
  sub_237A87344();
  sub_2378BC024((uint64_t)v15, &qword_256820880);
  v23 = a3 + v19[11];
  *(_QWORD *)v23 = sub_2379ABC68;
  *(_QWORD *)(v23 + 8) = 0;
  *(_BYTE *)(v23 + 16) = 0;
  result = sub_2378D0858(a1, a3 + v19[12], (uint64_t (*)(_QWORD))type metadata accessor for Layout);
  v25 = (double *)(a3 + v19[13]);
  *v25 = a4;
  v25[1] = a5;
  v26 = (_QWORD *)(a3 + v19[14]);
  *v26 = v16;
  v26[1] = v17;
  return result;
}

double sub_2379ABED4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_237953F34();
  sub_237A86B88();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for LayoutView(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256825558);
}

uint64_t LayoutView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v2 = v1;
  v72 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568251F8);
  MEMORY[0x24BDAC7A8](v3);
  v66 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237A86594();
  v56 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LayoutView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825200);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825208);
  MEMORY[0x24BDAC7A8](v57);
  v60 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825210);
  MEMORY[0x24BDAC7A8](v58);
  v62 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825218);
  MEMORY[0x24BDAC7A8](v59);
  v61 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825220);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825228);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v63 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = sub_237A874AC();
  v12[1] = v18;
  v54 = (char *)v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825230) + 44);
  v19 = *(_QWORD *)(v1 + 56);
  v20 = *(unsigned __int8 *)(v1 + 64);
  j__swift_retain();
  v21 = sub_23796D378(v19, v20);
  j_j__swift_release(v19, v20);
  v70 = v9;
  v71 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v8;
  if (v21)
  {
    v22 = *(int *)(v7 + 48);
    v53 = v7;
    *(_QWORD *)&v73 = *(_QWORD *)(v2 + v22 + *(int *)(type metadata accessor for Layout() + 24));
    v52 = v5;
    sub_2378D07D8(v2, (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LayoutView);
    v23 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v24 = swift_allocObject();
    sub_2378D0858((uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for LayoutView);
    *(_QWORD *)(v24 + ((v9 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568223C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568252A8);
    sub_2378B70D4(&qword_2568252B0, &qword_2568223C8, MEMORY[0x24BEE12D8]);
    sub_2379AF158();
    sub_23786FAA0(&qword_256825338, (uint64_t (*)(uint64_t))type metadata accessor for Zone, (uint64_t)&protocol conformance descriptor for Zone);
    v25 = v54;
    v5 = v52;
    v7 = v53;
    sub_237A87410();
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825238);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825238);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v54, 1, 1, v27);
  }
  *(_QWORD *)&v73 = 0x3A74756F79616CLL;
  *((_QWORD *)&v73 + 1) = 0xE700000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v2 + *(int *)(v7 + 48), v5);
  sub_237A87854();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5650]), sel_init);
  v29 = (void *)sub_237A877F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setIdentifier_, v29);

  objc_msgSend(v28, sel_setCornerRadius_, 0.0);
  v30 = sub_237A874AC();
  v32 = v31;
  v33 = v60;
  sub_2378BBFE0((uint64_t)v12, v60, &qword_256825200);
  v34 = (_QWORD *)(v33 + *(int *)(v57 + 36));
  *v34 = v28;
  v34[1] = v30;
  v34[2] = v32;
  sub_2378BC024((uint64_t)v12, &qword_256825200);
  sub_237A874AC();
  sub_237A8687C();
  v35 = v62;
  sub_2378BBFE0(v33, v62, &qword_256825208);
  v36 = (_OWORD *)(v35 + *(int *)(v58 + 36));
  v37 = v74;
  *v36 = v73;
  v36[1] = v37;
  v36[2] = v75;
  sub_2378BC024(v33, &qword_256825208);
  v38 = (uint64_t)v66;
  sub_2379AD184();
  v39 = sub_237A874AC();
  v41 = v40;
  v42 = (uint64_t)v61;
  v43 = (uint64_t)&v61[*(int *)(v59 + 36)];
  sub_2378BBFE0(v38, v43, &qword_2568251F8);
  v44 = (uint64_t *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825240) + 36));
  *v44 = v39;
  v44[1] = v41;
  sub_2378BBFE0(v35, v42, &qword_256825210);
  sub_2378BC024(v38, &qword_2568251F8);
  sub_2378BC024(v35, &qword_256825210);
  v45 = v68;
  sub_2378BBFE0(v42, v68, &qword_256825218);
  *(_WORD *)(v45 + *(int *)(v64 + 36)) = 0;
  sub_2378BC024(v42, &qword_256825218);
  if (*(_QWORD *)(v2 + 40))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_237A866FC();
    swift_release();
    swift_release();
    swift_release();
    v46 = v71;
    sub_2378D07D8(v2, v71, type metadata accessor for LayoutView);
    v47 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    v48 = swift_allocObject();
    sub_2378D0858(v46, v48 + v47, type metadata accessor for LayoutView);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820D00);
    sub_2379AEC88();
    sub_2379AEE44();
    v49 = v63;
    sub_237A87164();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2378BC024(v45, &qword_256825220);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v65 + 32))(v72, v49, v67);
  }
  else
  {
    type metadata accessor for ClusterTransitionCoordinator(0);
    sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
    result = sub_237A86A14();
    __break(1u);
  }
  return result;
}

uint64_t sub_2379AC79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  CGFloat *v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  char *v41;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat MidX;
  CGFloat MidY;
  uint64_t v49;
  CGFloat *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  int v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;

  v94 = a3;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v90 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v74 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255C8);
  MEMORY[0x24BDAC7A8](v88);
  v89 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v7);
  v75 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v74 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v86 = (uint64_t)&v74 - v12;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825310);
  MEMORY[0x24BDAC7A8](v79);
  v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568252F8);
  MEMORY[0x24BDAC7A8](v78);
  v19 = (uint64_t *)((char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568252E8);
  MEMORY[0x24BDAC7A8](v80);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568252D8);
  MEMORY[0x24BDAC7A8](v81);
  v83 = (uint64_t)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568252C8);
  MEMORY[0x24BDAC7A8](v82);
  v85 = (uint64_t)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568252A8);
  MEMORY[0x24BDAC7A8](v91);
  v92 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Zone();
  MEMORY[0x24BDAC7A8](v77);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = a1;
  sub_2378D07D8(a1, (uint64_t)v26, v27);
  v28 = a2;
  v29 = *(_QWORD *)(a2 + 40);
  if (v29)
  {
    type metadata accessor for ZoneModel();
    swift_allocObject();
    swift_retain();
    swift_retain();
    v30 = sub_2378E34F8((uint64_t)v26, v29);
    swift_release();
    swift_release();
    sub_23786FAA0(&qword_2568255D0, (uint64_t (*)(uint64_t))type metadata accessor for ZoneModel, (uint64_t)&protocol conformance descriptor for ZoneModel);
    swift_retain();
    v31 = sub_237A86984();
    v33 = v32;
    KeyPath = swift_getKeyPath();
    v76 = type metadata accessor for LayoutView(0);
    sub_2378BBFE0(v28 + *(int *)(v76 + 48), (uint64_t)v17, &qword_256820D58);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 0, 1, v35);
    sub_2378BBFE0((uint64_t)v17, (uint64_t)v14 + *(int *)(v79 + 28), &qword_256820D50);
    *v14 = KeyPath;
    sub_2378BBFE0((uint64_t)v14, (uint64_t)v19 + *(int *)(v78 + 36), &qword_256825310);
    *v19 = v31;
    v19[1] = v33;
    swift_retain();
    sub_2378BC024((uint64_t)v14, &qword_256825310);
    sub_2378BC024((uint64_t)v17, &qword_256820D50);
    swift_release();
    v36 = (CGFloat *)(v84 + *(int *)(v77 + 24));
    v37 = *v36;
    v38 = v36[1];
    v39 = v36[2];
    v40 = v36[3];
    v98.origin.x = *v36;
    v98.origin.y = v38;
    v98.size.width = v39;
    v98.size.height = v40;
    CGRectGetWidth(v98);
    v99.origin.x = v37;
    v99.origin.y = v38;
    v99.size.width = v39;
    v99.size.height = v40;
    CGRectGetHeight(v99);
    sub_237A874AC();
    sub_237A8687C();
    sub_2378BBFE0((uint64_t)v19, (uint64_t)v21, &qword_2568252F8);
    v41 = &v21[*(int *)(v80 + 36)];
    v42 = v96;
    *(_OWORD *)v41 = v95;
    *((_OWORD *)v41 + 1) = v42;
    *((_OWORD *)v41 + 2) = v97;
    sub_2378BC024((uint64_t)v19, &qword_2568252F8);
    v43 = *v36;
    v44 = v36[1];
    v45 = v36[2];
    v46 = v36[3];
    v100.origin.x = *v36;
    v100.origin.y = v44;
    v100.size.width = v45;
    v100.size.height = v46;
    MidX = CGRectGetMidX(v100);
    v101.origin.x = v43;
    v101.origin.y = v44;
    v101.size.width = v45;
    v101.size.height = v46;
    MidY = CGRectGetMidY(v101);
    v49 = v83;
    sub_2378BBFE0((uint64_t)v21, v83, &qword_2568252E8);
    v50 = (CGFloat *)(v49 + *(int *)(v81 + 36));
    *v50 = MidX;
    v50[1] = MidY;
    sub_2378BC024((uint64_t)v21, &qword_2568252E8);
    type metadata accessor for LayoutTreatment(0);
    sub_23786FAA0(&qword_2568234B0, type metadata accessor for LayoutTreatment, (uint64_t)&protocol conformance descriptor for LayoutTreatment);
    v51 = sub_237A867EC();
    v52 = sub_237A8669C();
    v53 = v85;
    sub_2378BBFE0(v49, v85, &qword_2568252D8);
    v54 = (uint64_t *)(v53 + *(int *)(v82 + 36));
    *v54 = v52;
    v54[1] = v51;
    sub_2378BC024(v49, &qword_2568252D8);
    v55 = v86;
    sub_2378BBFE0(v30 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, v86, &qword_25681E8E0);
    v56 = v90;
    v57 = v93;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v55, 0, 1, v93);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
    v58 = (uint64_t)v87;
    sub_237A87350();
    v59 = v89;
    v60 = v89 + *(int *)(v88 + 48);
    sub_2378BBFE0(v55, v89, &qword_256820880);
    sub_2378BBFE0(v58, v60, &qword_256820880);
    v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    if (v61(v59, 1, v57) == 1)
    {
      sub_2378BC024(v58, &qword_256820880);
      sub_2378BC024(v55, &qword_256820880);
      v62 = v61(v60, 1, v57);
      v63 = v94;
      if (v62 == 1)
      {
        sub_2378BC024(v59, &qword_256820880);
        v64 = 0;
LABEL_9:
        v69 = v91;
        v68 = (uint64_t)v92;
        v70 = swift_getKeyPath();
        v71 = swift_allocObject();
        *(_BYTE *)(v71 + 16) = v64 & 1;
        sub_2378BBFE0(v53, v68, &qword_2568252C8);
        swift_release();
        v72 = (uint64_t *)(v68 + *(int *)(v69 + 36));
        *v72 = v70;
        v72[1] = (uint64_t)sub_2379B11CC;
        v72[2] = v71;
        sub_2378BC024(v53, &qword_2568252C8);
        return sub_237870370(v68, v63, &qword_2568252A8);
      }
    }
    else
    {
      v65 = v75;
      sub_2378BBFE0(v59, v75, &qword_256820880);
      if (v61(v60, 1, v57) != 1)
      {
        v66 = v74;
        sub_237870370(v60, v74, &qword_25681E8E0);
        sub_237A86594();
        sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v67 = sub_237A877DC();
        sub_2378BC024(v66, &qword_25681E8E0);
        sub_2378BC024(v58, &qword_256820880);
        sub_2378BC024(v55, &qword_256820880);
        sub_2378BC024(v65, &qword_25681E8E0);
        sub_2378BC024(v59, &qword_256820880);
        v64 = v67 ^ 1;
        v63 = v94;
        goto LABEL_9;
      }
      sub_2378BC024(v58, &qword_256820880);
      sub_2378BC024(v55, &qword_256820880);
      sub_2378BC024(v65, &qword_25681E8E0);
      v63 = v94;
    }
    sub_2378BC024(v59, &qword_2568255C8);
    v64 = 1;
    goto LABEL_9;
  }
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
  result = sub_237A86A14();
  __break(1u);
  return result;
}

uint64_t sub_2379AD184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(_QWORD *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t (*v22)(_QWORD *, uint64_t);

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (_QWORD *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_BYTE *)(v1 + 32);
  sub_2379AF934(v8, v9, v10);
  sub_23796DB40(v8, v9, v10, (uint64_t *)&v22);
  sub_2379AEC50(v8, v9, v10);
  v11 = v22;
  if (v22)
  {
    v12 = type metadata accessor for LayoutView(0);
    v13 = (_QWORD *)(v1 + *(int *)(v12 + 56));
    v14 = v13[1];
    v21[0] = *v13;
    v21[1] = v14;
    v15 = v1 + *(int *)(v12 + 48);
    swift_bridgeObjectRetain();
    v16 = v11(v21, v15);
    sub_237955480((uint64_t)v11);
    swift_bridgeObjectRelease();
    *v7 = sub_237A874AC();
    v7[1] = v17;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255F0);
    sub_2379ADCA4(v16, v1, (uint64_t)v7 + *(int *)(v18 + 44));
    sub_2378BBFE0((uint64_t)v7, (uint64_t)v4, &qword_2568255E0);
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_2568255E8, &qword_2568255E0, MEMORY[0x24BDF4750]);
    sub_237A86D44();
    swift_release();
    return sub_2378BC024((uint64_t)v7, &qword_2568255E0);
  }
  else
  {
    v20 = v1 + *(int *)(type metadata accessor for LayoutView(0) + 48);
    *v4 = *(_QWORD *)(v20 + *(int *)(type metadata accessor for Layout() + 32));
    swift_storeEnumTagMultiPayload();
    sub_2378B70D4(&qword_2568255E8, &qword_2568255E0, MEMORY[0x24BDF4750]);
    swift_retain();
    return sub_237A86D44();
  }
}

uint64_t sub_2379AD404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v61 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255C8);
  MEMORY[0x24BDAC7A8](v64);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Zone();
  v71 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D38);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v59 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v59 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v70 = (uint64_t)&v59 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v59 - v23;
  v72 = type metadata accessor for LayoutView(0);
  sub_23796DB6C((uint64_t)&v76);
  SetNeedsFocusUpdateAction.callAsFunction()();
  sub_2379B11E4((uint64_t)&v76);
  v73 = a1;
  if (!*(_QWORD *)(a1 + 40))
  {
    type metadata accessor for ClusterTransitionCoordinator(0);
    sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
    result = sub_237A86A14();
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  v25 = *(_QWORD *)(v76 + 16);
  v69 = v24;
  if (v25)
  {
    v74 = *(unsigned __int8 *)(v25 + v76 + 31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v74 = 2;
  }
  v26 = v73 + *(int *)(v72 + 48);
  v27 = *(_QWORD *)(v26 + *(int *)(type metadata accessor for Layout() + 24));
  v28 = *(_QWORD *)(v27 + 16);
  v63 = v19;
  v68 = v13;
  if (!v28)
  {
    swift_bridgeObjectRetain();
    v36 = 1;
    goto LABEL_25;
  }
  v62 = v16;
  v29 = v27 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
  if ((v74 & 1) != 0)
    v30 = 0x32656E6F7ALL;
  else
    v30 = 0x31656E6F7ALL;
  v31 = v27;
  v32 = *(_QWORD *)(v71 + 72);
  v59 = v31;
  v60 = v10;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_2378D07D8(v29, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v33 = v7[*(int *)(v5 + 40)];
    if ((v33 & 1) != 0)
      v34 = 0x32656E6F7ALL;
    else
      v34 = 0x31656E6F7ALL;
    if (v33 == 2)
    {
      if (v74 == 2)
        goto LABEL_20;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    if (v74 == 2)
      goto LABEL_11;
    if (v34 == v30)
      break;
    v35 = sub_237A8840C();
    swift_bridgeObjectRelease_n();
    if ((v35 & 1) != 0)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
LABEL_12:
    sub_2379B1218((uint64_t)v7);
    v29 += v32;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      v36 = 1;
      v16 = v62;
      v37 = (uint64_t)v69;
      v38 = v70;
      v39 = v66;
      v40 = (uint64_t)v67;
      v10 = v60;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_24:
  v10 = v60;
  sub_2378D0858((uint64_t)v7, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
  v36 = 0;
  v16 = v62;
LABEL_25:
  v37 = (uint64_t)v69;
  v38 = v70;
  v39 = v66;
  v40 = (uint64_t)v67;
LABEL_26:
  v41 = v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v10, v36, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v10, 1, v5) == 1)
  {
    sub_2378BC024((uint64_t)v10, &qword_256820D38);
    v42 = 1;
  }
  else
  {
    sub_2378BBFE0((uint64_t)v10, v37, &qword_25681E8E0);
    sub_2379B1218((uint64_t)v10);
    v42 = 0;
  }
  v43 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v37, v42, 1, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  sub_237A87350();
  v44 = v40 + *(int *)(v64 + 48);
  sub_2378BBFE0(v38, v40, &qword_256820880);
  sub_2378BBFE0(v37, v44, &qword_256820880);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v45(v40, 1, v39) == 1)
  {
    sub_2378BC024(v38, &qword_256820880);
    if (v45(v44, 1, v39) == 1)
    {
      sub_2378BC024(v40, &qword_256820880);
      v46 = (uint64_t)v68;
      goto LABEL_45;
    }
LABEL_34:
    sub_2378BC024(v40, &qword_2568255C8);
    v46 = (uint64_t)v68;
    goto LABEL_35;
  }
  v47 = (uint64_t)v63;
  sub_2378BBFE0(v40, (uint64_t)v63, &qword_256820880);
  if (v45(v44, 1, v39) == 1)
  {
    sub_2378BC024(v70, &qword_256820880);
    sub_2378BC024(v47, &qword_25681E8E0);
    goto LABEL_34;
  }
  v57 = v61;
  sub_237870370(v44, v61, &qword_25681E8E0);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v58 = sub_237A877DC();
  sub_2378BC024(v57, &qword_25681E8E0);
  sub_2378BC024(v70, &qword_256820880);
  sub_2378BC024(v47, &qword_25681E8E0);
  sub_2378BC024(v40, &qword_256820880);
  v46 = (uint64_t)v68;
  if ((v58 & 1) == 0)
  {
LABEL_35:
    if (qword_25681E2F0 != -1)
      swift_once();
    v48 = sub_237A86678();
    __swift_project_value_buffer(v48, (uint64_t)qword_256870640);
    v49 = sub_237A86660();
    v50 = sub_237A87D34();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v76 = v52;
      *(_DWORD *)v51 = 136315138;
      v53 = 0x32656E6F7ALL;
      if ((v74 & 1) == 0)
        v53 = 0x31656E6F7ALL;
      if (v74 == 2)
        v54 = 0x3E6C696E3CLL;
      else
        v54 = v53;
      v75 = sub_2378FD9C8(v54, 0xE500000000000000, &v76);
      sub_237A87E24();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_237866000, v49, v50, "Focus moved to zone region %s", v51, 0xCu);
      swift_arrayDestroy();
      v55 = v52;
      v37 = (uint64_t)v69;
      MEMORY[0x23B81FB7C](v55, -1, -1);
      MEMORY[0x23B81FB7C](v51, -1, -1);
    }

  }
LABEL_45:
  sub_2378BBFE0(v37, (uint64_t)v16, &qword_256820880);
  sub_2378BBFE0((uint64_t)v16, v46, &qword_256820880);
  sub_237A8735C();
  sub_2378BC024((uint64_t)v16, &qword_256820880);
  return sub_2378BC024(v37, &qword_256820880);
}

uint64_t sub_2379ADCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (**v66)();
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[4];

  v99 = a1;
  v5 = type metadata accessor for LayoutView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  v81 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v90 = v7;
  v83 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD8);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568255F8);
  MEMORY[0x24BDAC7A8](v82);
  v89 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825600);
  v97 = *(_QWORD *)(v10 - 8);
  v98 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v87 = (uint64_t)&v75 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D38);
  MEMORY[0x24BDAC7A8](v14);
  v91 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Zone();
  v100 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v80 = (uint64_t)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v75 - v19;
  v79 = v21;
  MEMORY[0x24BDAC7A8](v22);
  v94 = (uint64_t)&v75 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825608);
  MEMORY[0x24BDAC7A8](v24);
  v96 = (uint64_t)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v95 = (uint64_t)&v75 - v27;
  v28 = *(_QWORD *)a2;
  v29 = *(_BYTE *)(a2 + 8);
  sub_237971568(*(_QWORD *)a2, v29);
  sub_23796D96C(v28, v29, v101);
  sub_237971574(v28, v29);
  v93 = v101[0];
  v30 = type metadata accessor for LayoutTreatment(0);
  v31 = sub_23786FAA0(&qword_2568234B0, type metadata accessor for LayoutTreatment, (uint64_t)&protocol conformance descriptor for LayoutTreatment);
  swift_retain();
  sub_237A867EC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  v32 = v101[0];
  sub_237A867EC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  v33 = v101[0];
  sub_237A8756C();
  v35 = v34;
  v37 = v36;
  v78 = v30;
  v77 = v31;
  sub_237A867EC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  swift_release();
  v38 = v101[0];
  v39 = *(int *)(v92 + 48);
  v92 = a2;
  v40 = *(_QWORD *)(a2 + v39 + *(int *)(type metadata accessor for Layout() + 24));
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    v76 = a3;
    v42 = v90;
    v43 = v40 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    v44 = *(_QWORD *)(v100 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2378D07D8(v43, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
      if (!v20[*(int *)(v16 + 32) + 16])
        break;
      sub_2379B1218((uint64_t)v20);
      v43 += v44;
      if (!--v41)
      {
        v45 = 1;
        v46 = v42;
        a3 = v76;
        goto LABEL_7;
      }
    }
    v49 = (uint64_t)v20;
    v48 = v91;
    sub_2378D0858(v49, v91, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v45 = 0;
    v46 = v42;
    a3 = v76;
    v47 = v100;
  }
  else
  {
    swift_bridgeObjectRetain();
    v45 = 1;
    v46 = v90;
LABEL_7:
    v47 = v100;
    v48 = v91;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v48, v45, 1, v16);
  swift_bridgeObjectRelease();
  v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v16);
  v51 = v92;
  if (v50 == 1)
  {
    sub_2378BC024(v48, &qword_256820D38);
    v52 = 1;
    v53 = v98;
    v54 = v95;
  }
  else
  {
    v55 = v94;
    sub_2378D0858(v48, v94, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v91 = sub_237A871F4();
    if (!*(_QWORD *)(v51 + 40))
    {
      type metadata accessor for ClusterTransitionCoordinator(0);
      sub_23786FAA0(&qword_2568236A8, type metadata accessor for ClusterTransitionCoordinator, (uint64_t)&protocol conformance descriptor for ClusterTransitionCoordinator);
      result = sub_237A86A14();
      __break(1u);
      return result;
    }
    swift_beginAccess();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820CD0);
    v56 = v84;
    sub_237A866D8();
    swift_endAccess();
    swift_release();
    v57 = v83;
    sub_2378D07D8(v51, v83, type metadata accessor for LayoutView);
    v58 = v80;
    sub_2378D07D8(v55, v80, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v59 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    v60 = (v46 + *(unsigned __int8 *)(v100 + 80) + v59) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    v61 = swift_allocObject();
    sub_2378D0858(v57, v61 + v59, type metadata accessor for LayoutView);
    sub_2378D0858(v58, v61 + v60, (uint64_t (*)(_QWORD))type metadata accessor for Zone);
    v62 = v82;
    v63 = v89;
    v64 = v85;
    v65 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(&v89[*(int *)(v82 + 52)], v56, v86);
    *v63 = v91;
    v66 = (uint64_t (**)())((char *)v63 + *(int *)(v62 + 56));
    *v66 = sub_2379B151C;
    v66[1] = (uint64_t (*)())v61;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v65);
    sub_237A867EC();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_237A866FC();
    swift_release();
    swift_release();
    swift_release();
    v67 = v101[0];
    v68 = v88;
    sub_2378BBFE0((uint64_t)v63, v88, &qword_2568255F8);
    v53 = v98;
    *(_QWORD *)(v68 + *(int *)(v98 + 36)) = v67;
    sub_2378BC024((uint64_t)v63, &qword_2568255F8);
    sub_2379B1218(v94);
    v69 = v68;
    v70 = v87;
    sub_237870370(v69, v87, &qword_256825600);
    v54 = v95;
    sub_237870370(v70, v95, &qword_256825600);
    v52 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v54, v52, 1, v53);
  if ((v93 & 1) != 0)
    v71 = 1.0;
  else
    v71 = 0.0;
  v72 = v96;
  sub_2378BBFE0(v54, v96, &qword_256825608);
  *(_QWORD *)a3 = v99;
  *(double *)(a3 + 8) = v71;
  *(_QWORD *)(a3 + 16) = v32;
  *(_QWORD *)(a3 + 24) = v33;
  *(_QWORD *)(a3 + 32) = v33;
  *(_QWORD *)(a3 + 40) = v35;
  *(_QWORD *)(a3 + 48) = v37;
  *(_QWORD *)(a3 + 56) = v38;
  *(_BYTE *)(a3 + 64) = 1;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825610);
  sub_2378BBFE0(v72, a3 + *(int *)(v73 + 48), &qword_256825608);
  swift_retain();
  sub_2378BC024(v54, &qword_256825608);
  sub_2378BC024(v72, &qword_256825608);
  return swift_release();
}

uint64_t sub_2379AE5F4()
{
  sub_237A874F4();
  sub_237A86918();
  return swift_release();
}

uint64_t sub_2379AE658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for LayoutView(0);
  type metadata accessor for LayoutTreatment(0);
  sub_23786FAA0(&qword_2568234B0, type metadata accessor for LayoutTreatment, (uint64_t)&protocol conformance descriptor for LayoutTreatment);
  sub_237A867EC();
  if (*(_QWORD *)(a2 + 16))
    sub_2378D3230(a3);
  v5 = sub_237A874E8();
  MEMORY[0x24BDAC7A8](v5);
  sub_237A86918();
  swift_release();
  v6 = sub_237A874E8();
  MEMORY[0x24BDAC7A8](v6);
  sub_237A86918();
  swift_release();
  return swift_release();
}

uint64_t sub_2379AE808()
{
  sub_2379B161C();
  return sub_237A86B88();
}

uint64_t sub_2379AE844(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[8];

  sub_2379B15E0(a1, (uint64_t)v3);
  sub_2379B15E0((uint64_t)v3, (uint64_t)&v2);
  sub_2379B161C();
  sub_237A86B94();
  return sub_2379B11E4((uint64_t)v3);
}

double sub_2379AE8A0@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2379AE918()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_237A86708();
}

uint64_t sub_2379AE98C()
{
  return sub_237A86A50();
}

uint64_t sub_2379AE9AC()
{
  return sub_237A86A50();
}

uint64_t sub_2379AE9CC()
{
  sub_2379B161C();
  return sub_237A86B88();
}

uint64_t sub_2379AEA14()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for LayoutView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_237971574(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  sub_2379AEC50(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
  swift_release();
  j_j__swift_release(*(_QWORD *)(v3 + 56), *(unsigned __int8 *)(v3 + 64));
  v4 = v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_237A86BC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if ((*(_BYTE *)(v3 + v1[9] + 8) & 1) != 0)
    swift_unknownObjectWeakDestroy();
  else
    swift_release();
  v6 = v3 + v1[10];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  swift_release();
  sub_237986CEC();
  v9 = v3 + v1[12];
  v10 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v9 + *(int *)(v11 + 48);
  if (*(_QWORD *)(v12 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237908D68(*(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_BYTE *)(v12 + 56));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2379AEC50(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_237955480(result);
  else
    return swift_release();
}

uint64_t sub_2379AEC5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LayoutView(0) - 8) + 80);
  return sub_2379AD404(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_2379AEC88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256825250;
  if (!qword_256825250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256825220);
    v2[0] = sub_2379AED0C();
    v2[1] = sub_2378B70D4(&qword_256825290, &qword_256825298, MEMORY[0x24BDEB950]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256825250);
  }
  return result;
}

unint64_t sub_2379AED0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256825258;
  if (!qword_256825258)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256825218);
    v2[0] = sub_2379AF2E4(&qword_256825260, &qword_256825210, (uint64_t (*)(void))sub_2379AEDA8);
    v2[1] = sub_2378B70D4(&qword_256825288, &qword_256825240, MEMORY[0x24BDEF370]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256825258);
  }
  return result;
}

unint64_t sub_2379AEDA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256825268;
  if (!qword_256825268)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256825208);
    v2[0] = sub_2378B70D4(&qword_256825270, &qword_256825200, MEMORY[0x24BDF4750]);
    v2[1] = sub_2378B70D4(&qword_256825278, &qword_256825280, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256825268);
  }
  return result;
}

unint64_t sub_2379AEE44()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2568252A0;
  if (!qword_2568252A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820D00);
    v2 = sub_2378DB950();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568252A0);
  }
  return result;
}

uint64_t sub_2379AEEA8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for LayoutView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  sub_237971574(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_2379AEC50(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
  swift_release();
  j_j__swift_release(*(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64));
  v3 = v2 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_237A86BC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  if ((*(_BYTE *)(v2 + v1[9] + 8) & 1) != 0)
    swift_unknownObjectWeakDestroy();
  else
    swift_release();
  v5 = v2 + v1[10];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  swift_release();
  sub_237986CEC();
  v8 = v2 + v1[12];
  v9 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v8 + *(int *)(v10 + 48);
  if (*(_QWORD *)(v11 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237908D68(*(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_BYTE *)(v11 + 56));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379AF0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LayoutView(0) - 8) + 80);
  return sub_2379AC79C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_2379AF158()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568252B8;
  if (!qword_2568252B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568252A8);
    v2[0] = sub_2379AF1DC();
    v2[1] = sub_2378B70D4(&qword_256825328, &qword_256825330, MEMORY[0x24BDF1248]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568252B8);
  }
  return result;
}

unint64_t sub_2379AF1DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568252C0;
  if (!qword_2568252C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568252C8);
    v2[0] = sub_2379AF260();
    v2[1] = sub_2378B70D4(&qword_256825318, &qword_256825320, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568252C0);
  }
  return result;
}

unint64_t sub_2379AF260()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568252D0;
  if (!qword_2568252D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568252D8);
    v2[0] = sub_2379AF2E4(&qword_2568252E0, &qword_2568252E8, (uint64_t (*)(void))sub_2379AF350);
    v2[1] = sub_2378E3848();
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568252D0);
  }
  return result;
}

uint64_t sub_2379AF2E4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379AF350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568252F0;
  if (!qword_2568252F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568252F8);
    v2[0] = sub_2379AF3D4();
    v2[1] = sub_2378B70D4(&qword_256825308, &qword_256825310, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568252F0);
  }
  return result;
}

unint64_t sub_2379AF3D4()
{
  unint64_t result;

  result = qword_256825300;
  if (!qword_256825300)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ZoneView, &type metadata for ZoneView);
    atomic_store(result, (unint64_t *)&qword_256825300);
  }
  return result;
}

uint64_t sub_2379AF418()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379AF428()
{
  return type metadata accessor for LayoutTreatment(0);
}

uint64_t type metadata accessor for LayoutTreatment(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256825368);
}

void sub_2379AF444()
{
  unint64_t v0;

  sub_2379AF4D0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LayoutTreatment()
{
  return swift_lookUpClassMethod();
}

void sub_2379AF4D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256825378[0])
  {
    v0 = sub_237A86720();
    if (!v1)
      atomic_store(v0, qword_256825378);
  }
}

unint64_t initializeBufferWithCopyOfBuffer for LayoutView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  char v80;
  uint64_t v81;
  int *v82;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_237971568(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_BYTE *)(a2 + 32);
    sub_2379AF934(v9, v10, v11);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v12 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v12;
    v13 = *(_QWORD *)(a2 + 56);
    LOBYTE(v10) = *(_BYTE *)(a2 + 64);
    swift_retain();
    j__swift_retain();
    *(_QWORD *)(a1 + 56) = v13;
    *(_BYTE *)(a1 + 64) = v10;
    v14 = a3[8];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_237A86BC4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[9];
    v20 = a1 + v19;
    v21 = *(_BYTE *)(a2 + v19 + 8);
    if ((v21 & 1) != 0)
    {
      swift_unknownObjectWeakCopyInit();
    }
    else
    {
      *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
      swift_retain();
    }
    *(_BYTE *)(v20 + 8) = v21;
    v22 = a3[10];
    v23 = (char *)(a1 + v22);
    v24 = (char *)(a2 + v22);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
    *(_QWORD *)&v23[*(int *)(v29 + 28)] = *(_QWORD *)&v24[*(int *)(v29 + 28)];
    v30 = a3[11];
    v31 = a1 + v30;
    v32 = (uint64_t *)(a2 + v30);
    v33 = *v32;
    v34 = v32[1];
    v35 = *((_BYTE *)v32 + 16);
    swift_retain();
    sub_237986CE4();
    *(_QWORD *)v31 = v33;
    *(_QWORD *)(v31 + 8) = v34;
    *(_BYTE *)(v31 + 16) = v35;
    v82 = a3;
    v36 = a3[12];
    v37 = a1 + v36;
    v38 = a2 + v36;
    v39 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = (int *)type metadata accessor for Layout();
    v41 = v40[5];
    v42 = (_QWORD *)(v37 + v41);
    v43 = (_QWORD *)(v38 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *(_QWORD *)(v37 + v40[6]) = *(_QWORD *)(v38 + v40[6]);
    v45 = v40[7];
    v46 = (_QWORD *)(v37 + v45);
    v47 = (_QWORD *)(v38 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *(_QWORD *)(v37 + v40[8]) = *(_QWORD *)(v38 + v40[8]);
    *(_BYTE *)(v37 + v40[9]) = *(_BYTE *)(v38 + v40[9]);
    v49 = v40[10];
    v50 = (_OWORD *)(v37 + v49);
    v51 = (_OWORD *)(v38 + v49);
    v52 = v51[4];
    v53 = v51[2];
    v50[3] = v51[3];
    v50[4] = v52;
    v54 = v51[1];
    *v50 = *v51;
    v50[1] = v54;
    v50[2] = v53;
    v55 = v40[11];
    v56 = (_OWORD *)(v37 + v55);
    v57 = (_OWORD *)(v38 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = v40[12];
    v60 = v37 + v59;
    v61 = v38 + v59;
    v62 = *(_QWORD *)(v38 + v59 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v62)
    {
      v63 = *(void **)v61;
      v64 = *(_QWORD *)(v61 + 8);
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *(_QWORD *)(v60 + 8) = v64;
      v65 = *(_QWORD *)(v61 + 24);
      v66 = *(_QWORD *)(v61 + 32);
      *(_QWORD *)(v60 + 16) = v62;
      *(_QWORD *)(v60 + 24) = v65;
      *(_QWORD *)(v60 + 32) = v66;
      v67 = *(_QWORD *)(v61 + 40);
      v81 = *(_QWORD *)(v61 + 48);
      v80 = *(_BYTE *)(v61 + 56);
      v68 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_237908B80(v67, v81, v80);
      *(_QWORD *)(v60 + 40) = v67;
      *(_QWORD *)(v60 + 48) = v81;
      *(_BYTE *)(v60 + 56) = v80;
    }
    else
    {
      v69 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v69;
      *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
      *(_OWORD *)(v60 + 41) = *(_OWORD *)(v61 + 41);
    }
    *(_QWORD *)(v60 + 64) = *(_QWORD *)(v61 + 64);
    v70 = v40[13];
    v71 = (_QWORD *)(v37 + v70);
    v72 = (uint64_t *)(v38 + v70);
    v73 = *v72;
    v74 = v72[1];
    *v71 = v73;
    v71[1] = v74;
    v75 = v82[14];
    *(_OWORD *)(a1 + v82[13]) = *(_OWORD *)(a2 + v82[13]);
    v76 = (_QWORD *)(a1 + v75);
    v77 = (_QWORD *)(a2 + v75);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2379AF934(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_23795547C(result);
  else
    return swift_retain();
}

uint64_t destroy for LayoutView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_237971574(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_2379AEC50(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  j_j__swift_release(*(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
  v4 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_237A86BC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if ((*(_BYTE *)(a1 + a2[9] + 8) & 1) != 0)
    swift_unknownObjectWeakDestroy();
  else
    swift_release();
  v6 = a1 + a2[10];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  swift_release();
  sub_237986CEC();
  v9 = a1 + a2[12];
  v10 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v9 + *(int *)(v11 + 48);
  if (*(_QWORD *)(v12 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237908D68(*(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_BYTE *)(v12 + 56));
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  char v79;
  int *v80;
  uint64_t v81;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_237971568(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_2379AF934(v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = *(_QWORD *)(a2 + 56);
  LOBYTE(v9) = *(_BYTE *)(a2 + 64);
  swift_retain();
  j__swift_retain();
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v9;
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_237A86BC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = *(_BYTE *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    swift_unknownObjectWeakCopyInit();
  }
  else
  {
    *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
    swift_retain();
  }
  *(_BYTE *)(v18 + 8) = v19;
  v20 = a3[10];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  *(_QWORD *)&v21[*(int *)(v27 + 28)] = *(_QWORD *)&v22[*(int *)(v27 + 28)];
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  v32 = v30[1];
  v33 = *((_BYTE *)v30 + 16);
  swift_retain();
  sub_237986CE4();
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_BYTE *)(v29 + 16) = v33;
  v80 = a3;
  v81 = a2;
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  v38 = (int *)type metadata accessor for Layout();
  v39 = v38[5];
  v40 = (_QWORD *)(v35 + v39);
  v41 = (_QWORD *)(v36 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  *(_QWORD *)(v35 + v38[6]) = *(_QWORD *)(v36 + v38[6]);
  v43 = v38[7];
  v44 = (_QWORD *)(v35 + v43);
  v45 = (_QWORD *)(v36 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  *(_QWORD *)(v35 + v38[8]) = *(_QWORD *)(v36 + v38[8]);
  *(_BYTE *)(v35 + v38[9]) = *(_BYTE *)(v36 + v38[9]);
  v47 = v38[10];
  v48 = (_OWORD *)(v35 + v47);
  v49 = (_OWORD *)(v36 + v47);
  v50 = v49[4];
  v51 = v49[2];
  v48[3] = v49[3];
  v48[4] = v50;
  v52 = v49[1];
  *v48 = *v49;
  v48[1] = v52;
  v48[2] = v51;
  v53 = v38[11];
  v54 = (_OWORD *)(v35 + v53);
  v55 = (_OWORD *)(v36 + v53);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = v38[12];
  v58 = v35 + v57;
  v59 = v36 + v57;
  v60 = *(_QWORD *)(v36 + v57 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v60)
  {
    v61 = *(void **)v59;
    v62 = *(_QWORD *)(v59 + 8);
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *(_QWORD *)(v58 + 8) = v62;
    v63 = *(_QWORD *)(v59 + 24);
    v64 = *(_QWORD *)(v59 + 32);
    *(_QWORD *)(v58 + 16) = v60;
    *(_QWORD *)(v58 + 24) = v63;
    *(_QWORD *)(v58 + 32) = v64;
    v65 = *(_QWORD *)(v59 + 40);
    v66 = *(_QWORD *)(v59 + 48);
    v79 = *(_BYTE *)(v59 + 56);
    v67 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v65, v66, v79);
    *(_QWORD *)(v58 + 40) = v65;
    *(_QWORD *)(v58 + 48) = v66;
    *(_BYTE *)(v58 + 56) = v79;
  }
  else
  {
    v68 = *(_OWORD *)(v59 + 16);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v68;
    *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
    *(_OWORD *)(v58 + 41) = *(_OWORD *)(v59 + 41);
  }
  *(_QWORD *)(v58 + 64) = *(_QWORD *)(v59 + 64);
  v69 = v38[13];
  v70 = (_QWORD *)(v35 + v69);
  v71 = (uint64_t *)(v36 + v69);
  v72 = *v71;
  v73 = v71[1];
  *v70 = v72;
  v70[1] = v73;
  v74 = v80[14];
  *(_OWORD *)(a1 + v80[13]) = *(_OWORD *)(v81 + v80[13]);
  v75 = (_QWORD *)(a1 + v74);
  v76 = (_QWORD *)(v81 + v74);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  char v96;
  uint64_t v97;

  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  sub_237971568(*(_QWORD *)a2, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  sub_237971574(v7, v8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  sub_2379AF934(v9, v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  sub_2379AEC50(v12, v13, v14);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  LOBYTE(v10) = *(_BYTE *)(a2 + 64);
  j__swift_retain();
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(unsigned __int8 *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_BYTE *)(a1 + 64) = v10;
  j_j__swift_release(v16, v17);
  if (a1 != a2)
  {
    v18 = a3[8];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_2378BC024(a1 + v18, &qword_2568237D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_237A86BC4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[9];
    v23 = a1 + v22;
    v24 = a2 + v22;
    sub_2378BC024(a1 + v22, &qword_2568237A8);
    if ((*(_BYTE *)(v24 + 8) & 1) != 0)
    {
      swift_unknownObjectWeakCopyInit();
      *(_BYTE *)(v23 + 8) = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_BYTE *)(v23 + 8) = 0;
      swift_retain();
    }
  }
  v25 = a3[10];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      v33 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v26, v27, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    sub_2378BC024((uint64_t)v26, &qword_25681E8E0);
LABEL_13:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_14;
  }
  v82 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v26, v27, v82);
LABEL_14:
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  *(_QWORD *)&v26[*(int *)(v35 + 28)] = *(_QWORD *)&v27[*(int *)(v35 + 28)];
  swift_retain();
  swift_release();
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = (uint64_t *)(a2 + v36);
  v39 = *v38;
  v40 = v38[1];
  v41 = *((_BYTE *)v38 + 16);
  sub_237986CE4();
  *(_QWORD *)v37 = v39;
  *(_QWORD *)(v37 + 8) = v40;
  *(_BYTE *)(v37 + 16) = v41;
  sub_237986CEC();
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  v46 = (int *)type metadata accessor for Layout();
  v47 = v46[5];
  v48 = (_QWORD *)(v43 + v47);
  v49 = (_QWORD *)(v44 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + v46[6]) = *(_QWORD *)(v44 + v46[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v46[7];
  v51 = (_QWORD *)(v43 + v50);
  v52 = (_QWORD *)(v44 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + v46[8]) = *(_QWORD *)(v44 + v46[8]);
  swift_retain();
  swift_release();
  *(_BYTE *)(v43 + v46[9]) = *(_BYTE *)(v44 + v46[9]);
  v53 = v46[10];
  v54 = v43 + v53;
  v55 = v44 + v53;
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v56 = *(_OWORD *)(v55 + 16);
  v57 = *(_OWORD *)(v55 + 32);
  v58 = *(_OWORD *)(v55 + 48);
  *(_DWORD *)(v54 + 63) = *(_DWORD *)(v55 + 63);
  *(_OWORD *)(v54 + 32) = v57;
  *(_OWORD *)(v54 + 48) = v58;
  *(_OWORD *)(v54 + 16) = v56;
  *(_QWORD *)(v54 + 72) = *(_QWORD *)(v55 + 72);
  v59 = v46[11];
  v60 = (_QWORD *)(v43 + v59);
  v61 = (_QWORD *)(v44 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  v60[2] = v61[2];
  v60[3] = v61[3];
  v62 = v46[12];
  v63 = v43 + v62;
  v64 = (__int128 *)(v44 + v62);
  v65 = *(_QWORD *)(v43 + v62 + 16);
  v66 = *(_QWORD *)(v44 + v62 + 16);
  if (v65)
  {
    if (v66)
    {
      v67 = *(void **)v63;
      v68 = *(void **)v64;
      *(_QWORD *)v63 = *(_QWORD *)v64;
      v69 = v68;

      *(_QWORD *)(v63 + 8) = *((_QWORD *)v64 + 1);
      *(_QWORD *)(v63 + 16) = *((_QWORD *)v64 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v63 + 24) = *((_QWORD *)v64 + 3);
      *(_QWORD *)(v63 + 32) = *((_QWORD *)v64 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v70 = *((_QWORD *)v64 + 5);
      v71 = *((_QWORD *)v64 + 6);
      v72 = *((_BYTE *)v64 + 56);
      sub_237908B80(v70, v71, v72);
      v73 = *(_QWORD *)(v63 + 40);
      v74 = *(_QWORD *)(v63 + 48);
      v75 = *(_BYTE *)(v63 + 56);
      *(_QWORD *)(v63 + 40) = v70;
      *(_QWORD *)(v63 + 48) = v71;
      *(_BYTE *)(v63 + 56) = v72;
      sub_237908D68(v73, v74, v75);
    }
    else
    {
      sub_237909C0C(v63);
      v80 = v64[1];
      v79 = v64[2];
      v81 = *v64;
      *(_OWORD *)(v63 + 41) = *(__int128 *)((char *)v64 + 41);
      *(_OWORD *)(v63 + 16) = v80;
      *(_OWORD *)(v63 + 32) = v79;
      *(_OWORD *)v63 = v81;
    }
  }
  else if (v66)
  {
    v76 = *(void **)v64;
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *(_QWORD *)(v63 + 8) = *((_QWORD *)v64 + 1);
    *(_QWORD *)(v63 + 16) = *((_QWORD *)v64 + 2);
    *(_QWORD *)(v63 + 24) = *((_QWORD *)v64 + 3);
    *(_QWORD *)(v63 + 32) = *((_QWORD *)v64 + 4);
    v77 = *((_QWORD *)v64 + 5);
    v97 = *((_QWORD *)v64 + 6);
    v96 = *((_BYTE *)v64 + 56);
    v78 = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237908B80(v77, v97, v96);
    *(_QWORD *)(v63 + 40) = v77;
    *(_QWORD *)(v63 + 48) = v97;
    *(_BYTE *)(v63 + 56) = v96;
  }
  else
  {
    v83 = *v64;
    v84 = v64[1];
    v85 = v64[2];
    *(_OWORD *)(v63 + 41) = *(__int128 *)((char *)v64 + 41);
    *(_OWORD *)(v63 + 16) = v84;
    *(_OWORD *)(v63 + 32) = v85;
    *(_OWORD *)v63 = v83;
  }
  *(_QWORD *)(v63 + 64) = *((_QWORD *)v64 + 8);
  v86 = v46[13];
  v87 = (_QWORD *)(v43 + v86);
  v88 = (_QWORD *)(v44 + v86);
  *v87 = *v88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87[1] = v88[1];
  v89 = a3[13];
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  *v90 = *v91;
  v90[1] = v91[1];
  v92 = a3[14];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  *v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 40) = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_237A86BC4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_BYTE *)(a2 + v12 + 8) == 1)
  {
    v13 = swift_unknownObjectWeakTakeInit();
    v15 = 1;
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v15 = *(_BYTE *)(v14 + 8);
  }
  *(_BYTE *)(v13 + 8) = v15;
  v16 = a3[10];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_237A86594();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  *(_QWORD *)&v17[*(int *)(v23 + 28)] = *(_QWORD *)&v18[*(int *)(v23 + 28)];
  v24 = a3[11];
  v25 = a3[12];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = a1 + v25;
  v29 = a2 + v25;
  v30 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = (int *)type metadata accessor for Layout();
  *(_OWORD *)(v28 + v31[5]) = *(_OWORD *)(v29 + v31[5]);
  *(_QWORD *)(v28 + v31[6]) = *(_QWORD *)(v29 + v31[6]);
  *(_OWORD *)(v28 + v31[7]) = *(_OWORD *)(v29 + v31[7]);
  *(_QWORD *)(v28 + v31[8]) = *(_QWORD *)(v29 + v31[8]);
  *(_BYTE *)(v28 + v31[9]) = *(_BYTE *)(v29 + v31[9]);
  v32 = v31[10];
  v33 = (_OWORD *)(v28 + v32);
  v34 = (_OWORD *)(v29 + v32);
  v35 = v34[3];
  v33[2] = v34[2];
  v33[3] = v35;
  v33[4] = v34[4];
  v36 = v34[1];
  *v33 = *v34;
  v33[1] = v36;
  v37 = v31[11];
  v38 = (_OWORD *)(v28 + v37);
  v39 = (_OWORD *)(v29 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v31[12];
  v42 = v28 + v41;
  v43 = v29 + v41;
  v44 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v42 + 48) = v44;
  *(_QWORD *)(v42 + 64) = *(_QWORD *)(v43 + 64);
  v45 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v45;
  *(_OWORD *)(v28 + v31[13]) = *(_OWORD *)(v29 + v31[13]);
  v46 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v46) = *(_OWORD *)(a2 + v46);
  return a1;
}

uint64_t assignWithTake for LayoutView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_237971574(v8, v9);
  v10 = *((_BYTE *)a2 + 32);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v10;
  sub_2379AEC50(v11, v12, v13);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_release();
  v14 = *((_BYTE *)a2 + 64);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(unsigned __int8 *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_BYTE *)(a1 + 64) = v14;
  j_j__swift_release(v15, v16);
  if ((uint64_t *)a1 != a2)
  {
    v17 = a3[8];
    v18 = (void *)(a1 + v17);
    v19 = (char *)a2 + v17;
    sub_2378BC024(a1 + v17, &qword_2568237D0);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_237A86BC4();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    v22 = a3[9];
    v23 = a1 + v22;
    v24 = (uint64_t)a2 + v22;
    sub_2378BC024(a1 + v22, &qword_2568237A8);
    if (*(_BYTE *)(v24 + 8) == 1)
    {
      swift_unknownObjectWeakTakeInit();
      v25 = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v25 = *(_BYTE *)(v24 + 8);
    }
    *(_BYTE *)(v23 + 8) = v25;
  }
  v26 = a3[10];
  v27 = (char *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      v34 = sub_237A86594();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v27, v28, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v33)
  {
    sub_2378BC024((uint64_t)v27, &qword_25681E8E0);
LABEL_14:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820880);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_15;
  }
  v85 = sub_237A86594();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v27, v28, v85);
LABEL_15:
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  *(_QWORD *)&v27[*(int *)(v36 + 28)] = *(_QWORD *)&v28[*(int *)(v36 + 28)];
  swift_release();
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = (uint64_t)a2 + v37;
  v40 = *(_BYTE *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = v40;
  sub_237986CEC();
  v41 = a3[12];
  v42 = a1 + v41;
  v43 = (uint64_t)a2 + v41;
  v44 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = (int *)type metadata accessor for Layout();
  v46 = v45[5];
  v47 = (_QWORD *)(v42 + v46);
  v48 = (uint64_t *)(v43 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v42 + v45[6]) = *(_QWORD *)(v43 + v45[6]);
  swift_bridgeObjectRelease();
  v51 = v45[7];
  v52 = (_QWORD *)(v42 + v51);
  v53 = (uint64_t *)(v43 + v51);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v42 + v45[8]) = *(_QWORD *)(v43 + v45[8]);
  swift_release();
  *(_BYTE *)(v42 + v45[9]) = *(_BYTE *)(v43 + v45[9]);
  v56 = v45[10];
  v57 = v42 + v56;
  v58 = v43 + v56;
  v59 = *(_OWORD *)(v58 + 48);
  *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
  *(_OWORD *)(v57 + 48) = v59;
  *(_DWORD *)(v57 + 63) = *(_DWORD *)(v58 + 63);
  v60 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v60;
  *(_QWORD *)(v57 + 72) = *(_QWORD *)(v58 + 72);
  v61 = v45[11];
  v62 = (_OWORD *)(v42 + v61);
  v63 = (_OWORD *)(v43 + v61);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = v45[12];
  v66 = v42 + v65;
  v67 = v43 + v65;
  if (!*(_QWORD *)(v42 + v65 + 16))
  {
LABEL_19:
    v75 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v75;
    *(_OWORD *)(v66 + 32) = *(_OWORD *)(v67 + 32);
    *(_OWORD *)(v66 + 41) = *(_OWORD *)(v67 + 41);
    goto LABEL_20;
  }
  if (!*(_QWORD *)(v67 + 16))
  {
    sub_237909C0C(v66);
    goto LABEL_19;
  }
  v68 = *(void **)v66;
  *(_QWORD *)v66 = *(_QWORD *)v67;

  v69 = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  *(_QWORD *)(v66 + 16) = v69;
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v67 + 32);
  *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
  *(_QWORD *)(v66 + 32) = v70;
  swift_bridgeObjectRelease();
  v71 = *(_BYTE *)(v67 + 56);
  v72 = *(_QWORD *)(v66 + 40);
  v73 = *(_QWORD *)(v66 + 48);
  v74 = *(_BYTE *)(v66 + 56);
  *(_OWORD *)(v66 + 40) = *(_OWORD *)(v67 + 40);
  *(_BYTE *)(v66 + 56) = v71;
  sub_237908D68(v72, v73, v74);
LABEL_20:
  *(_QWORD *)(v66 + 64) = *(_QWORD *)(v67 + 64);
  v76 = v45[13];
  v77 = (_QWORD *)(v42 + v76);
  v78 = (_QWORD *)(v43 + v76);
  *v77 = *v78;
  swift_bridgeObjectRelease();
  v77[1] = v78[1];
  v79 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  v80 = (_QWORD *)(a1 + v79);
  v81 = (uint64_t *)((char *)a2 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379B0C80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568254F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = type metadata accessor for Layout();
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[14] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379B0D60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568254F8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for Layout();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[14] + 8) = (a2 - 1);
  return result;
}

void sub_2379B0E30()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2379B0F0C();
  if (v0 <= 0x3F)
  {
    sub_2379B0F60();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Layout();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2379B0F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256825568)
  {
    sub_237A86BC4();
    v0 = sub_237A867E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256825568);
  }
}

void sub_2379B0F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256825570[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820880);
    v0 = sub_237A87368();
    if (!v1)
      atomic_store(v0, qword_256825570);
  }
}

uint64_t sub_2379B0FB8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256825220);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820D00);
  sub_2379AEC88();
  sub_2379AEE44();
  return swift_getOpaqueTypeConformance2();
}

double sub_2379B1028@<D0>(double *a1@<X8>)
{
  return sub_2379AE8A0(a1);
}

uint64_t sub_2379B104C()
{
  return sub_2379AE918();
}

double sub_2379B1070@<D0>(double *a1@<X8>)
{
  return sub_2379AE8A0(a1);
}

uint64_t sub_2379B1094()
{
  return sub_2379AE918();
}

double sub_2379B10B8@<D0>(double *a1@<X8>)
{
  return sub_2379AE8A0(a1);
}

uint64_t sub_2379B10DC()
{
  return sub_2379AE918();
}

uint64_t sub_2379B1100@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B34();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379B112C()
{
  return sub_237A86B40();
}

_BYTE *sub_2379B1150(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_2379B116C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237A86B34();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379B1198()
{
  return sub_237A86B40();
}

uint64_t sub_2379B11BC()
{
  return swift_deallocObject();
}

_BYTE *sub_2379B11CC(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_2379B11E4(uint64_t a1)
{
  destroy for SetNeedsFocusUpdateAction();
  return a1;
}

uint64_t sub_2379B1218(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Zone();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2379B1254()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for LayoutView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v19 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for Zone();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v20 = v3;
  v21 = v0;
  v6 = v0 + v3;
  sub_237971574(*(_QWORD *)(v0 + v3), *(_BYTE *)(v0 + v3 + 8));
  sub_2379AEC50(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_BYTE *)(v6 + 32));
  swift_release();
  j_j__swift_release(*(_QWORD *)(v6 + 56), *(unsigned __int8 *)(v6 + 64));
  v7 = v0 + v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568237D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_237A86BC4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  if ((*(_BYTE *)(v6 + v1[9] + 8) & 1) != 0)
    swift_unknownObjectWeakDestroy();
  else
    swift_release();
  v9 = v6 + v1[10];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E8E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825248);
  swift_release();
  sub_237986CEC();
  v12 = v6 + v1[12];
  v13 = sub_237A86594();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v16 = v12 + *(int *)(v15 + 48);
  if (*(_QWORD *)(v16 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237908D68(*(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(_BYTE *)(v16 + 56));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v21 + ((v20 + v19 + v5) & ~v5);
  v14(v17, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2378724B0(*(_QWORD *)(v17 + *(int *)(v4 + 32)), *(_QWORD *)(v17 + *(int *)(v4 + 32) + 8), *(_BYTE *)(v17 + *(int *)(v4 + 32) + 16));
  return swift_deallocObject();
}

uint64_t sub_2379B151C()
{
  type metadata accessor for LayoutView(0);
  type metadata accessor for Zone();
  return sub_2379AE5F4();
}

uint64_t sub_2379B158C()
{
  uint64_t *v0;

  return sub_2379AE658(v0[2], v0[3], v0[4]);
}

uint64_t sub_2379B15A8()
{
  return sub_2379AB950();
}

uint64_t sub_2379B15C4()
{
  return sub_2379ABA28();
}

uint64_t sub_2379B15E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SetNeedsFocusUpdateAction(a2, a1);
  return a2;
}

unint64_t sub_2379B161C()
{
  unint64_t result;

  result = qword_256825618;
  if (!qword_256825618)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for SetNeedsFocusUpdateKey, &type metadata for SetNeedsFocusUpdateKey);
    atomic_store(result, (unint64_t *)&qword_256825618);
  }
  return result;
}

uint64_t InstrumentDataSource.__allocating_init<A>(dataType:input:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_2379B1C30(a1, a2, 0);
  return v4;
}

uint64_t sub_2379B16B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_237A866FC();
  swift_release();
  return swift_release();
}

uint64_t sub_2379B1714(uint64_t a1)
{
  _BYTE v3[40];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2379B1BE8(a1, (uint64_t)v3);
  swift_retain();
  sub_237A86708();
  return sub_2379289EC(a1);
}

void (*sub_2379B1790(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_237A866F0();
  return sub_2378E6DAC;
}

uint64_t sub_2379B1808()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  sub_237A866D8();
  return swift_endAccess();
}

uint64_t sub_2379B186C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823570);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  sub_237A866E4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_2379B197C()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  sub_237A866D8();
  return swift_endAccess();
}

uint64_t sub_2379B19DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823570);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  sub_237A866E4();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_2379B1AB0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256823570);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  sub_237A866D8();
  swift_endAccess();
  return sub_2378E7190;
}

void InstrumentDataSource.identifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier);
}

uint64_t sub_2379B1B8C(_BYTE *a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_2379B1C30(a1, a2, a3);
  return v6;
}

uint64_t sub_2379B1BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379B1C30(_BYTE *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  void (*v18)(uint64_t *, _BYTE *, uint64_t);
  uint64_t *v19;
  uint64_t (*v20)();
  uint64_t (**v21)();
  _BYTE v24[40];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v7 = *(_QWORD *)a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  sub_2379B1BE8((uint64_t)&v25, (uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  sub_237A866CC();
  sub_2379289EC((uint64_t)&v25);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x24BEE4B08];
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v13 = nullsub_1;
  v13[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = a1[16];
  v14 = &a1[*(_QWORD *)(*(_QWORD *)a1 + 112)];
  v15 = *(_QWORD *)(v7 + 80);
  v16 = *(_QWORD *)(v7 + 88);
  *((_QWORD *)&v26 + 1) = v15;
  v27 = v16;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v25);
  v18 = *(void (**)(uint64_t *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v18(boxed_opaque_existential_0, v14, v15);
  sub_2379B24B4((uint64_t)&v25, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if ((a3 & 1) != 0)
  {
    *((_QWORD *)&v26 + 1) = v15;
    v27 = v16;
    v19 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v25);
    v18(v19, v14, v15);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2379B1BE8((uint64_t)&v25, (uint64_t)v24);
    swift_retain();
    sub_237A86708();
    sub_2379289EC((uint64_t)&v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v20 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v20 + 2) = v15;
  *((_QWORD *)v20 + 3) = v16;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = v3;
  v21 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *v21 = sub_2379B2528;
  v21[1] = v20;
  swift_release();
  return v3;
}

uint64_t sub_2379B1E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;

  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a2;
  v8 = sub_237A86684();
  MEMORY[0x23B81FA98](MEMORY[0x24BDB9AF8], v8);
  sub_237A8675C();
  swift_unownedRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_237A86690();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_2379B1FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  uint64_t v10[5];

  swift_unownedRetainStrong();
  v10[3] = a3;
  v10[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2379B1BE8((uint64_t)v10, (uint64_t)&v9);
  swift_retain();
  sub_237A86708();
  sub_2379289EC((uint64_t)v10);
  return swift_release();
}

void sub_2379B2078()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
    v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
    v2 = swift_retain();
    v1(v2);
    swift_release();
  }
}

uint64_t sub_2379B20D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  _BYTE v3[40];
  _BYTE v4[40];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables);
  swift_beginAccess();
  *v1 = MEMORY[0x24BEE4B08];
  result = swift_bridgeObjectRelease();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) == 1)
  {
    sub_2379B1BE8(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, (uint64_t)v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2379B1BE8((uint64_t)v4, (uint64_t)v3);
    swift_retain();
    sub_237A86708();
    result = sub_2379289EC((uint64_t)v4);
  }
  *(_BYTE *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  return result;
}

uint64_t InstrumentDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2379289EC(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InstrumentDataSource.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568236B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2379289EC(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2379B22B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for InstrumentDataSource();
  result = sub_237A866A8();
  *a1 = result;
  return result;
}

uint64_t sub_2379B2304()
{
  return type metadata accessor for InstrumentDataSource();
}

uint64_t type metadata accessor for InstrumentDataSource()
{
  uint64_t result;

  result = qword_256825678;
  if (!qword_256825678)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2379B2348()
{
  unint64_t v0;

  sub_2379B245C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for InstrumentDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of InstrumentDataSource.startListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of InstrumentDataSource.stopListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

void sub_2379B245C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256825688[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820020);
    v0 = sub_237A86720();
    if (!v1)
      atomic_store(v0, qword_256825688);
  }
}

uint64_t sub_2379B24B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379B24FC()
{
  swift_release();
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_2379B2528()
{
  uint64_t *v0;

  return sub_2379B1E90(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_2379B2534()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_2379B2558(uint64_t a1)
{
  uint64_t *v1;

  return sub_2379B1FC0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_2379B2564()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s20SingleValueContainerCMa()
{
  return objc_opt_self();
}

uint64_t sub_2379B25B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  _OWORD v11[2];

  v1 = sub_237A87FC8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v11, 0, sizeof(v11));
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    sub_2378E002C((uint64_t)v11);
    *(_QWORD *)(v0 + 16) = 7104878;
    *(_QWORD *)(v0 + 24) = 0xE300000000000000;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v0 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v6 = sub_237A87FD4();
    swift_allocError();
    v8 = v7;
    v9 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v8[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v10 = swift_allocObject();
    *v8 = v10;
    sub_2379B3D58((uint64_t)v11, v10 + 16);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v9, v4, v1);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v8, *MEMORY[0x24BEE2728], v6);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return sub_2378E002C((uint64_t)v11);
  }
  return result;
}

uint64_t sub_2379B2758(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  _OWORD v15[2];

  v3 = sub_237A87FC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v15, 0, sizeof(v15));
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    sub_2378E002C((uint64_t)v15);
    v7 = 1702195828;
    if ((a1 & 1) == 0)
      v7 = 0x65736C6166;
    v8 = 0xE500000000000000;
    if ((a1 & 1) != 0)
      v8 = 0xE400000000000000;
    *(_QWORD *)(v1 + 16) = v7;
    *(_QWORD *)(v1 + 24) = v8;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v10 = sub_237A87FD4();
    swift_allocError();
    v12 = v11;
    v13 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v14 = swift_allocObject();
    *v12 = v14;
    sub_2379B3D58((uint64_t)v15, v14 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v13, v6, v3);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x24BEE2728], v10);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2378E002C((uint64_t)v15);
  }
  return result;
}

uint64_t sub_2379B291C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_237A87FC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BEE0D00];
  v18 = a1;
  v19 = a2;
  if ((*(_BYTE *)(v3 + 32) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2378E002C((uint64_t)&v18);
    v18 = 34;
    v19 = 0xE100000000000000;
    v17[4] = a1;
    v17[5] = a2;
    v17[2] = 34;
    v17[3] = 0xE100000000000000;
    v17[0] = 8796;
    v17[1] = 0xE200000000000000;
    sub_237879800();
    sub_237A87E60();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    v10 = v19;
    *(_QWORD *)(v3 + 16) = v18;
    *(_QWORD *)(v3 + 24) = v10;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v3 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v12 = sub_237A87FD4();
    swift_allocError();
    v14 = v13;
    v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v16 = swift_allocObject();
    *v14 = v16;
    sub_2379B3D58((uint64_t)&v18, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x24BEE2728], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2378E002C((uint64_t)&v18);
  }
  return result;
}

uint64_t sub_2379B2B5C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  double v15;
  unint64_t v16;
  uint64_t v17;

  v3 = sub_237A87FC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BEE13C8];
  v15 = a1;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    sub_2378E002C((uint64_t)&v15);
    if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0)
    {
      v15 = 0.0;
      v16 = 0xE000000000000000;
      sub_237A87BA8();
      v8 = *(_QWORD *)&v15;
      v7 = v16;
    }
    else
    {
      v7 = 0xE300000000000000;
      v8 = 3157808;
    }
    *(_QWORD *)(v1 + 16) = v8;
    *(_QWORD *)(v1 + 24) = v7;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v9 = sub_237A87FD4();
    swift_allocError();
    v11 = v10;
    v12 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v13 = swift_allocObject();
    *v11 = v13;
    sub_2379B3D58((uint64_t)&v15, v13 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v6, v3);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE2728], v9);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2378E002C((uint64_t)&v15);
  }
  return result;
}

uint64_t sub_2379B2D58(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = sub_237A87FC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BEE14E8];
  *(float *)&v15 = a1;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    sub_2378E002C((uint64_t)&v15);
    if ((~LODWORD(a1) & 0x7F800000) != 0 || (LODWORD(a1) & 0x7FFFFF) == 0)
    {
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_237A87BCC();
      v8 = v15;
      v7 = v16;
    }
    else
    {
      v7 = 0xE300000000000000;
      v8 = 3157808;
    }
    *(_QWORD *)(v1 + 16) = v8;
    *(_QWORD *)(v1 + 24) = v7;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v9 = sub_237A87FD4();
    swift_allocError();
    v11 = v10;
    v12 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v13 = swift_allocObject();
    *v11 = v13;
    sub_2379B3D58((uint64_t)&v15, v13 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v6, v3);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE2728], v9);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2378E002C((uint64_t)&v15);
  }
  return result;
}

uint64_t sub_2379B2F54(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;

  v4 = v2;
  v6 = sub_237A87FC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = a2;
  v17[0] = a1;
  if ((*(_BYTE *)(v4 + 32) & 1) != 0)
  {
    sub_2378E002C((uint64_t)v17);
    v17[0] = a1;
    *(_QWORD *)(v4 + 16) = sub_237A882E0();
    *(_QWORD *)(v4 + 24) = v10;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v12 = sub_237A87FD4();
    swift_allocError();
    v14 = v13;
    v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v16 = swift_allocObject();
    *v14 = v16;
    sub_2379B3D58((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x24BEE2728], v12);
    swift_willThrow();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2378E002C((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2379B3110(__int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  _WORD v17[12];
  uint64_t v18;

  v4 = v2;
  v6 = sub_237A87FC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v17[0] = a1;
  if ((*(_BYTE *)(v4 + 32) & 1) != 0)
  {
    sub_2378E002C((uint64_t)v17);
    v17[0] = a1;
    *(_QWORD *)(v4 + 16) = sub_237A882E0();
    *(_QWORD *)(v4 + 24) = v10;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v12 = sub_237A87FD4();
    swift_allocError();
    v14 = v13;
    v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v16 = swift_allocObject();
    *v14 = v16;
    sub_2379B3D58((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x24BEE2728], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2378E002C((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2379B32CC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  _DWORD v17[6];
  uint64_t v18;

  v4 = v2;
  v6 = sub_237A87FC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v17[0] = a1;
  if ((*(_BYTE *)(v4 + 32) & 1) != 0)
  {
    sub_2378E002C((uint64_t)v17);
    v17[0] = a1;
    *(_QWORD *)(v4 + 16) = sub_237A882E0();
    *(_QWORD *)(v4 + 24) = v10;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v12 = sub_237A87FD4();
    swift_allocError();
    v14 = v13;
    v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v16 = swift_allocObject();
    *v14 = v16;
    sub_2379B3D58((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x24BEE2728], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2378E002C((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2379B3488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[4];

  v4 = v2;
  v6 = sub_237A87FC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = a2;
  v17[0] = a1;
  if ((*(_BYTE *)(v4 + 32) & 1) != 0)
  {
    sub_2378E002C((uint64_t)v17);
    v17[0] = a1;
    *(_QWORD *)(v4 + 16) = sub_237A882E0();
    *(_QWORD *)(v4 + 24) = v10;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v12 = sub_237A87FD4();
    swift_allocError();
    v14 = v13;
    v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
    v16 = swift_allocObject();
    *v14 = v16;
    sub_2379B3D58((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x24BEE2728], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2378E002C((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2379B3644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  char *v21;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35[3];
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v4 = v2;
  v7 = sub_237A87FC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == MEMORY[0x24BDCDDE8] || sub_2379B3CF0() == a2)
  {
    swift_bridgeObjectRetain();
    sub_237A87F98();
    v18 = sub_237A87FD4();
    swift_allocError();
    v20 = v19;
    v21 = (char *)v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
    v20[3] = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v10, v7);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE2728], v18);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v36 = a2;
    v11 = __swift_allocate_boxed_opaque_existential_0(v35);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v11, a1, a2);
    if (*(_BYTE *)(v4 + 32) == 1)
    {
      sub_2378E002C((uint64_t)v35);
      v12 = *(_QWORD *)(v4 + 40);
      v13 = *(_QWORD *)(v4 + 48);
      v14 = type metadata accessor for _LuaEncoder();
      v15 = (_QWORD *)swift_allocObject();
      v38 = v3;
      v15[4] = 0;
      v15[2] = v12;
      v15[3] = v13;
      v15[5] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = v14;
      v37 = sub_2379B3DA0();
      v35[0] = (uint64_t)v15;
      swift_retain();
      v16 = v38;
      sub_237A876BC();
      if (v16)
      {
        swift_release();
        result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
        if (v15[4])
        {
          v28 = v15[5];
          ObjectType = swift_getObjectType();
          v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
          swift_unknownObjectRetain();
          v31 = v30(ObjectType, v28);
          v33 = v32;
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
          v31 = 0;
          v33 = 0xE000000000000000;
        }
        *(_QWORD *)(v4 + 16) = v31;
        *(_QWORD *)(v4 + 24) = v33;
        result = swift_bridgeObjectRelease();
      }
      *(_BYTE *)(v4 + 32) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_237A87F98();
      v23 = sub_237A87FD4();
      swift_allocError();
      v25 = v24;
      v26 = (char *)v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256825880) + 48);
      v25[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
      v27 = swift_allocObject();
      *v25 = v27;
      sub_2379B3D58((uint64_t)v35, v27 + 16);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v26, v10, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE2728], v23);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_2378E002C((uint64_t)v35);
    }
  }
  return result;
}

uint64_t sub_2379B39FC()
{
  return sub_2379B25B8();
}

uint64_t sub_2379B3A1C(char a1)
{
  return sub_2379B2758(a1);
}

uint64_t sub_2379B3A3C(uint64_t a1, unint64_t a2)
{
  return sub_2379B291C(a1, a2);
}

uint64_t sub_2379B3A5C(double a1)
{
  return sub_2379B2B5C(a1);
}

uint64_t sub_2379B3A7C(float a1)
{
  return sub_2379B2D58(a1);
}

uint64_t sub_2379B3A9C(uint64_t a1)
{
  return sub_2379B3488(a1, MEMORY[0x24BEE1768]);
}

uint64_t sub_2379B3ACC(char a1)
{
  return sub_2379B2F54(a1, MEMORY[0x24BEE3E50]);
}

uint64_t sub_2379B3AFC(__int16 a1)
{
  return sub_2379B3110(a1, MEMORY[0x24BEE3F30]);
}

uint64_t sub_2379B3B2C(int a1)
{
  return sub_2379B32CC(a1, MEMORY[0x24BEE3F88]);
}

uint64_t sub_2379B3B5C(uint64_t a1)
{
  return sub_2379B3488(a1, MEMORY[0x24BEE4008]);
}

uint64_t sub_2379B3B8C()
{
  return sub_237A8849C();
}

uint64_t sub_2379B3BA0(uint64_t a1)
{
  return sub_2379B3488(a1, MEMORY[0x24BEE1E88]);
}

uint64_t sub_2379B3BD0(char a1)
{
  return sub_2379B2F54(a1, MEMORY[0x24BEE4260]);
}

uint64_t sub_2379B3C00(__int16 a1)
{
  return sub_2379B3110(a1, MEMORY[0x24BEE4478]);
}

uint64_t sub_2379B3C30(int a1)
{
  return sub_2379B32CC(a1, MEMORY[0x24BEE44F0]);
}

uint64_t sub_2379B3C60(uint64_t a1)
{
  return sub_2379B3488(a1, MEMORY[0x24BEE4568]);
}

uint64_t sub_2379B3C90()
{
  return sub_237A884A8();
}

uint64_t sub_2379B3CA4(uint64_t a1, uint64_t a2)
{
  return sub_2379B3644(a1, a2);
}

uint64_t sub_2379B3CC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2379B3CF0()
{
  unint64_t result;

  result = qword_256825878;
  if (!qword_256825878)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256825878);
  }
  return result;
}

uint64_t sub_2379B3D2C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_2Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2379B3D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2379B3DA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256822EE0;
  if (!qword_256822EE0)
  {
    v1 = type metadata accessor for _LuaEncoder();
    result = MEMORY[0x23B81FA98](&unk_237A9B0DC, v1);
    atomic_store(result, (unint64_t *)&qword_256822EE0);
  }
  return result;
}

uint64_t ShadowConfiguration.image.getter@<X0>(void *a1@<X8>)
{
  const void *v1;
  _BYTE __dst[440];

  memcpy(__dst, v1, 0x1B0uLL);
  memcpy(a1, v1, 0x1B0uLL);
  return sub_2379B3EA0((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_237870090, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23787007C);
}

void *ShadowConfiguration.image.setter(const void *a1)
{
  void *v1;
  _BYTE __dst[440];

  memcpy(__dst, v1, 0x1B0uLL);
  sub_2379B3EA0((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702CC);
  return memcpy(v1, a1, 0x1B0uLL);
}

uint64_t sub_2379B3EA0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v21 = *(_QWORD *)(a1 + 152);
  v22 = *(_QWORD *)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_QWORD *)(a1 + 160);
  v27 = *(_QWORD *)(a1 + 200);
  v28 = *(_QWORD *)(a1 + 192);
  v25 = *(_QWORD *)(a1 + 216);
  v26 = *(_QWORD *)(a1 + 208);
  v23 = *(_QWORD *)(a1 + 232);
  v24 = *(_QWORD *)(a1 + 224);
  v32 = *(_QWORD *)(a1 + 248);
  v33 = *(_QWORD *)(a1 + 240);
  v30 = *(_QWORD *)(a1 + 264);
  v31 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 288);
  v35 = *(_QWORD *)(a1 + 304);
  v36 = *(_QWORD *)(a1 + 296);
  v34 = *(_QWORD *)(a1 + 312);
  v41 = *(_QWORD *)(a1 + 344);
  v42 = *(_QWORD *)(a1 + 336);
  v39 = *(_QWORD *)(a1 + 360);
  v40 = *(_QWORD *)(a1 + 352);
  v45 = *(_QWORD *)(a1 + 392);
  v46 = *(_QWORD *)(a1 + 384);
  v43 = *(_QWORD *)(a1 + 408);
  v44 = *(_QWORD *)(a1 + 400);
  v9 = *(unsigned __int8 *)(a1 + 80);
  v10 = *(unsigned __int8 *)(a1 + 128);
  v11 = *(unsigned __int8 *)(a1 + 176);
  v12 = *(unsigned __int8 *)(a1 + 272);
  v18 = *(unsigned __int8 *)(a1 + 320);
  v29 = *(unsigned __int8 *)(a1 + 368);
  v38 = *(unsigned __int8 *)(a1 + 416);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  a2(v5, v6, v7, v8, v9);
  a2(v17, v16, v15, v14, v10);
  a2(v22, v21, v20, v19, v11);
  a3(v28, v27, v26, v25, v24, v23);
  a2(v33, v32, v31, v30, v12);
  a2(v37, v36, v35, v34, v18);
  a2(v42, v41, v40, v39, v29);
  a2(v46, v45, v44, v43, v38);
  return a1;
}

uint64_t (*ShadowConfiguration.image.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.shadowSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 432);
}

void ShadowConfiguration.shadowSize.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[54] = a1;
  v4[55] = a2;
  v4[56] = a3;
  v4[57] = a4;
}

uint64_t (*ShadowConfiguration.shadowSize.modify())()
{
  return nullsub_1;
}

uint64_t ShadowConfiguration.color.getter()
{
  return swift_retain();
}

uint64_t ShadowConfiguration.color.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 464) = a1;
  return result;
}

uint64_t (*ShadowConfiguration.color.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void ShadowConfiguration.offset.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 472) = a1;
  *(double *)(v2 + 480) = a2;
}

uint64_t (*ShadowConfiguration.offset.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.blurRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 488);
}

void ShadowConfiguration.blurRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 488) = a1;
}

uint64_t (*ShadowConfiguration.blurRadius.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void ShadowConfiguration.cornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

uint64_t (*ShadowConfiguration.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t ShadowConfiguration.isContinuousCurve.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 504);
}

uint64_t ShadowConfiguration.isContinuousCurve.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 504) = result;
  return result;
}

uint64_t (*ShadowConfiguration.isContinuousCurve.modify())()
{
  return nullsub_1;
}

void *ShadowConfiguration.init(image:shadowSize:color:offset:blurRadius:cornerRadius:isContinuousCurve:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>)
{
  void *result;

  result = memcpy((void *)a4, __src, 0x1B0uLL);
  *(double *)(a4 + 432) = a5;
  *(double *)(a4 + 440) = a6;
  *(double *)(a4 + 448) = a7;
  *(double *)(a4 + 456) = a8;
  *(_QWORD *)(a4 + 464) = a2;
  *(double *)(a4 + 472) = a9;
  *(double *)(a4 + 480) = a10;
  *(double *)(a4 + 488) = a11;
  *(double *)(a4 + 496) = a12;
  *(_BYTE *)(a4 + 504) = a3;
  return result;
}

uint64_t sub_2379B4208(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379B4238 + 4 * byte_237A9EA10[a1]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_2379B4238()
{
  return 0x6953776F64616873;
}

uint64_t sub_2379B4254()
{
  return 0x726F6C6F63;
}

uint64_t sub_2379B4264()
{
  return 0x74657366666FLL;
}

uint64_t sub_2379B4278()
{
  return 0x6964615272756C62;
}

uint64_t sub_2379B4298()
{
  return 0x615272656E726F63;
}

unint64_t sub_2379B42B8()
{
  return 0xD000000000000011;
}

uint64_t sub_2379B42D4()
{
  unsigned __int8 *v0;

  return sub_2379B4208(*v0);
}

uint64_t sub_2379B42DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379B5DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379B4300()
{
  sub_2379B4624();
  return sub_237A88718();
}

uint64_t sub_2379B4328()
{
  sub_2379B4624();
  return sub_237A88724();
}

uint64_t ShadowConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[54];
  int v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825888);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + 432);
  v10 = *(_QWORD *)(v3 + 440);
  v11 = *(_QWORD *)(v3 + 448);
  v12 = *(_QWORD *)(v3 + 456);
  v20 = *(_QWORD *)(v3 + 464);
  v13 = *(_QWORD *)(v3 + 472);
  v14 = *(_QWORD *)(v3 + 480);
  v16 = *(_QWORD *)(v3 + 488);
  v15 = *(_QWORD *)(v3 + 496);
  v22 = *(unsigned __int8 *)(v3 + 504);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379B4624();
  v17 = v5;
  sub_237A886B8();
  memcpy(v21, (const void *)v3, sizeof(v21));
  v23 = 0;
  sub_2379B4668();
  sub_237A882B0();
  if (!v2)
  {
    v18 = v20;
    v21[0] = v9;
    v21[1] = v10;
    v21[2] = v11;
    v21[3] = v12;
    v23 = 1;
    sub_2378DB308();
    sub_237A882B0();
    v21[0] = v18;
    v23 = 2;
    sub_237879654();
    sub_237A882B0();
    v21[0] = v13;
    v21[1] = v14;
    v23 = 3;
    type metadata accessor for CGPoint(0);
    sub_2379B4BA8(&qword_256822FE0, MEMORY[0x24BDBD878]);
    sub_237A882B0();
    v21[0] = v16;
    v23 = 4;
    sub_23787ADF8();
    sub_237A882B0();
    v21[0] = v15;
    v23 = 5;
    sub_237A882B0();
    LOBYTE(v21[0]) = 6;
    sub_237A88280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v17);
}

unint64_t sub_2379B4624()
{
  unint64_t result;

  result = qword_256825890;
  if (!qword_256825890)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9EB88, &type metadata for ShadowConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256825890);
  }
  return result;
}

unint64_t sub_2379B4668()
{
  unint64_t result;

  result = qword_256825898;
  if (!qword_256825898)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for NinePartImage, &type metadata for NinePartImage);
    atomic_store(result, (unint64_t *)&qword_256825898);
  }
  return result;
}

uint64_t ShadowConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  _QWORD v21[64];
  _QWORD v22[63];
  char v23;
  _BYTE v24[432];
  _BYTE v25[432];
  _BYTE v26[520];

  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568258A0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379B4624();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v8 = v5;
  v26[519] = 0;
  sub_2379B4B64();
  sub_237A881F0();
  memcpy(v24, v25, sizeof(v24));
  memcpy(v26, v25, 0x1B0uLL);
  LOBYTE(v21[0]) = 1;
  sub_2379B3EA0((uint64_t)v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_237870090, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23787007C);
  sub_2378DB448();
  sub_237A881F0();
  v9 = v22[0];
  v10 = v22[1];
  v11 = v22[2];
  v12 = v22[3];
  LOBYTE(v21[0]) = 2;
  sub_237879610();
  sub_237A881F0();
  v13 = v22[0];
  type metadata accessor for CGPoint(0);
  LOBYTE(v21[0]) = 3;
  sub_2379B4BA8(&qword_256823020, MEMORY[0x24BDBD888]);
  swift_retain();
  sub_237A881F0();
  v14 = v22[0];
  v15 = v22[1];
  LOBYTE(v21[0]) = 4;
  sub_23787AE3C();
  sub_237A881F0();
  v16 = v22[0];
  LOBYTE(v21[0]) = 5;
  sub_237A881F0();
  v17 = v22[0];
  v26[518] = 6;
  v18 = sub_237A881C0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v20);
  v18 &= 1u;
  memcpy(v21, v24, 0x1B0uLL);
  v21[54] = v9;
  v21[55] = v10;
  v21[56] = v11;
  v21[57] = v12;
  v21[58] = v13;
  v21[59] = v14;
  v21[60] = v15;
  v21[61] = v16;
  v21[62] = v17;
  LOBYTE(v21[63]) = v18;
  sub_2379B4BE8((uint64_t)v21);
  swift_release();
  sub_2379B3EA0((uint64_t)v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702CC);
  memcpy(a2, v21, 0x1F9uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  memcpy(v22, v26, 0x1B0uLL);
  v22[54] = v9;
  v22[55] = v10;
  v22[56] = v11;
  v22[57] = v12;
  v22[58] = v13;
  v22[59] = v14;
  v22[60] = v15;
  v22[61] = v16;
  v22[62] = v17;
  v23 = v18;
  return sub_2379B4DC8((uint64_t)v22);
}

unint64_t sub_2379B4B64()
{
  unint64_t result;

  result = qword_2568258A8;
  if (!qword_2568258A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for NinePartImage, &type metadata for NinePartImage);
    atomic_store(result, (unint64_t *)&qword_2568258A8);
  }
  return result;
}

uint64_t sub_2379B4BA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    result = MEMORY[0x23B81FA98](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2379B4BE8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  void *v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  char v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  v2 = *(void **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(void **)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v12 = *(void **)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(void **)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(void **)(a1 + 160);
  v24 = *(_QWORD *)(a1 + 200);
  v25 = *(void **)(a1 + 192);
  v22 = *(_QWORD *)(a1 + 216);
  v23 = *(void **)(a1 + 208);
  v21 = *(_QWORD *)(a1 + 224);
  v28 = *(_QWORD *)(a1 + 248);
  v29 = *(void **)(a1 + 240);
  v26 = *(_QWORD *)(a1 + 264);
  v27 = *(void **)(a1 + 256);
  v34 = *(void **)(a1 + 288);
  v32 = *(void **)(a1 + 304);
  v33 = *(_QWORD *)(a1 + 296);
  v31 = *(_QWORD *)(a1 + 312);
  v37 = *(_QWORD *)(a1 + 344);
  v38 = *(void **)(a1 + 336);
  v35 = *(_QWORD *)(a1 + 360);
  v36 = *(void **)(a1 + 352);
  v41 = *(_QWORD *)(a1 + 392);
  v42 = *(void **)(a1 + 384);
  v39 = *(_QWORD *)(a1 + 408);
  v40 = *(void **)(a1 + 400);
  v7 = *(_BYTE *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 128);
  v9 = *(_BYTE *)(a1 + 176);
  v10 = *(_BYTE *)(a1 + 272);
  v15 = *(_BYTE *)(a1 + 320);
  v20 = *(_BYTE *)(a1 + 368);
  v30 = *(_BYTE *)(a1 + 416);
  sub_237870090(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_237870090(v2, v3, v4, v5, v7);
  sub_237870090(v14, v13, v12, v6, v8);
  sub_237870090(v19, v18, v17, v16, v9);
  sub_23787007C(v25, v24, v23, v22, v21);
  sub_237870090(v29, v28, v27, v26, v10);
  sub_237870090(v34, v33, v32, v31, v15);
  sub_237870090(v38, v37, v36, v35, v20);
  sub_237870090(v42, v41, v40, v39, v30);
  swift_retain();
  return a1;
}

uint64_t sub_2379B4DC8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  void *v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  char v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  v2 = *(void **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(void **)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 120);
  v12 = *(void **)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(void **)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(void **)(a1 + 160);
  v24 = *(_QWORD *)(a1 + 200);
  v25 = *(void **)(a1 + 192);
  v22 = *(_QWORD *)(a1 + 216);
  v23 = *(void **)(a1 + 208);
  v21 = *(_QWORD *)(a1 + 224);
  v28 = *(_QWORD *)(a1 + 248);
  v29 = *(void **)(a1 + 240);
  v26 = *(_QWORD *)(a1 + 264);
  v27 = *(void **)(a1 + 256);
  v34 = *(void **)(a1 + 288);
  v32 = *(void **)(a1 + 304);
  v33 = *(_QWORD *)(a1 + 296);
  v31 = *(_QWORD *)(a1 + 312);
  v37 = *(_QWORD *)(a1 + 344);
  v38 = *(void **)(a1 + 336);
  v35 = *(_QWORD *)(a1 + 360);
  v36 = *(void **)(a1 + 352);
  v41 = *(_QWORD *)(a1 + 392);
  v42 = *(void **)(a1 + 384);
  v39 = *(_QWORD *)(a1 + 408);
  v40 = *(void **)(a1 + 400);
  v7 = *(_BYTE *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 128);
  v9 = *(_BYTE *)(a1 + 176);
  v10 = *(_BYTE *)(a1 + 272);
  v15 = *(_BYTE *)(a1 + 320);
  v20 = *(_BYTE *)(a1 + 368);
  v30 = *(_BYTE *)(a1 + 416);
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_2378702E0(v2, v3, v4, v5, v7);
  sub_2378702E0(v14, v13, v12, v6, v8);
  sub_2378702E0(v19, v18, v17, v16, v9);
  sub_2378702CC(v25, v24, v23, v22, v21);
  sub_2378702E0(v29, v28, v27, v26, v10);
  sub_2378702E0(v34, v33, v32, v31, v15);
  sub_2378702E0(v38, v37, v36, v35, v20);
  sub_2378702E0(v42, v41, v40, v39, v30);
  swift_release();
  return a1;
}

uint64_t sub_2379B4FA8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return ShadowConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379B4FBC(_QWORD *a1)
{
  return ShadowConfiguration.encode(to:)(a1);
}

uint64_t ShadowConfiguration.assets.getter()
{
  const void *v0;
  _BYTE v2[432];

  memcpy(v2, v0, sizeof(v2));
  return NinePartImage.assets.getter();
}

void ShadowConfiguration.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0)
      ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t sub_2379B50C4()
{
  const void *v0;
  _BYTE v2[432];

  memcpy(v2, v0, sizeof(v2));
  return NinePartImage.assets.getter();
}

void sub_2379B50FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0)
      ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t destroy for ShadowConfiguration(uint64_t a1)
{
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  sub_2378702E0(*(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(void **)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_2378702E0(*(void **)(a1 + 144), *(_QWORD *)(a1 + 152), *(void **)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 192), *(_QWORD *)(a1 + 200), *(void **)(a1 + 208), *(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224));
  sub_2378702E0(*(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(void **)(a1 + 256), *(_QWORD *)(a1 + 264), *(_BYTE *)(a1 + 272));
  sub_2378702E0(*(void **)(a1 + 288), *(_QWORD *)(a1 + 296), *(void **)(a1 + 304), *(_QWORD *)(a1 + 312), *(_BYTE *)(a1 + 320));
  sub_2378702E0(*(void **)(a1 + 336), *(_QWORD *)(a1 + 344), *(void **)(a1 + 352), *(_QWORD *)(a1 + 360), *(_BYTE *)(a1 + 368));
  sub_2378702E0(*(void **)(a1 + 384), *(_QWORD *)(a1 + 392), *(void **)(a1 + 400), *(_QWORD *)(a1 + 408), *(_BYTE *)(a1 + 416));
  return swift_release();
}

uint64_t initializeWithCopy for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(void **)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_BYTE *)(a2 + 80);
  sub_237870090(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v13;
  v14 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(void **)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 120);
  v18 = *(_BYTE *)(a2 + 128);
  sub_237870090(v14, v15, v16, v17, v18);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_BYTE *)(a1 + 128) = v18;
  v19 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 152);
  v21 = *(void **)(a2 + 160);
  v22 = *(_QWORD *)(a2 + 168);
  v23 = *(_BYTE *)(a2 + 176);
  sub_237870090(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 152) = v20;
  *(_QWORD *)(a1 + 160) = v21;
  *(_QWORD *)(a1 + 168) = v22;
  *(_BYTE *)(a1 + 176) = v23;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v24 = *(_QWORD *)(a2 + 224);
  if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
  {
    v26 = *(void **)(a2 + 192);
    v27 = *(_QWORD *)(a2 + 200);
    v28 = *(void **)(a2 + 208);
    v29 = *(_QWORD *)(a2 + 216);
    sub_237870090(v26, v27, v28, v29, *(_QWORD *)(a2 + 224));
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v27;
    *(_QWORD *)(a1 + 208) = v28;
    *(_QWORD *)(a1 + 216) = v29;
    *(_BYTE *)(a1 + 224) = v24;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  v30 = *(void **)(a2 + 240);
  v31 = *(_QWORD *)(a2 + 248);
  v32 = *(void **)(a2 + 256);
  v33 = *(_QWORD *)(a2 + 264);
  v34 = *(_BYTE *)(a2 + 272);
  sub_237870090(v30, v31, v32, v33, v34);
  *(_QWORD *)(a1 + 240) = v30;
  *(_QWORD *)(a1 + 248) = v31;
  *(_QWORD *)(a1 + 256) = v32;
  *(_QWORD *)(a1 + 264) = v33;
  *(_BYTE *)(a1 + 272) = v34;
  v35 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v36 = *(_QWORD *)(a2 + 296);
  v37 = *(void **)(a2 + 304);
  v38 = *(_QWORD *)(a2 + 312);
  v39 = *(_BYTE *)(a2 + 320);
  sub_237870090(v35, v36, v37, v38, v39);
  *(_QWORD *)(a1 + 288) = v35;
  *(_QWORD *)(a1 + 296) = v36;
  *(_QWORD *)(a1 + 304) = v37;
  *(_QWORD *)(a1 + 312) = v38;
  *(_BYTE *)(a1 + 320) = v39;
  v40 = *(void **)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  v41 = *(_QWORD *)(a2 + 344);
  v42 = *(void **)(a2 + 352);
  v43 = *(_QWORD *)(a2 + 360);
  v44 = *(_BYTE *)(a2 + 368);
  sub_237870090(v40, v41, v42, v43, v44);
  *(_QWORD *)(a1 + 336) = v40;
  *(_QWORD *)(a1 + 344) = v41;
  *(_QWORD *)(a1 + 352) = v42;
  *(_QWORD *)(a1 + 360) = v43;
  *(_BYTE *)(a1 + 368) = v44;
  v45 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v46 = *(_QWORD *)(a2 + 392);
  v47 = *(void **)(a2 + 400);
  v48 = *(_QWORD *)(a2 + 408);
  v49 = *(_BYTE *)(a2 + 416);
  sub_237870090(v45, v46, v47, v48, v49);
  *(_QWORD *)(a1 + 384) = v45;
  *(_QWORD *)(a1 + 392) = v46;
  *(_QWORD *)(a1 + 400) = v47;
  *(_QWORD *)(a1 + 408) = v48;
  *(_BYTE *)(a1 + 416) = v49;
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  v50 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v50;
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  v51 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v51;
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  char v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  char v104;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(void **)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 72);
  v18 = *(_BYTE *)(a2 + 80);
  sub_237870090(v14, v15, v16, v17, v18);
  v19 = *(void **)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(void **)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  v23 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v18;
  sub_2378702E0(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v24 = *(void **)(a2 + 96);
  v25 = *(_QWORD *)(a2 + 104);
  v26 = *(void **)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 120);
  v28 = *(_BYTE *)(a2 + 128);
  sub_237870090(v24, v25, v26, v27, v28);
  v29 = *(void **)(a1 + 96);
  v30 = *(_QWORD *)(a1 + 104);
  v31 = *(void **)(a1 + 112);
  v32 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_QWORD *)(a1 + 120) = v27;
  v33 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v28;
  sub_2378702E0(v29, v30, v31, v32, v33);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v34 = *(void **)(a2 + 144);
  v35 = *(_QWORD *)(a2 + 152);
  v36 = *(void **)(a2 + 160);
  v37 = *(_QWORD *)(a2 + 168);
  v38 = *(_BYTE *)(a2 + 176);
  sub_237870090(v34, v35, v36, v37, v38);
  v39 = *(void **)(a1 + 144);
  v40 = *(_QWORD *)(a1 + 152);
  v41 = *(void **)(a1 + 160);
  v42 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 144) = v34;
  *(_QWORD *)(a1 + 152) = v35;
  *(_QWORD *)(a1 + 160) = v36;
  *(_QWORD *)(a1 + 168) = v37;
  v43 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v38;
  sub_2378702E0(v39, v40, v41, v42, v43);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v44 = (_OWORD *)(a1 + 192);
  v45 = (_OWORD *)(a2 + 192);
  v46 = *(_QWORD *)(a2 + 224);
  v47 = v46 & 0xFE;
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
  {
    if (v47 == 254)
    {
      sub_237988280(a1 + 192);
      v51 = *(_OWORD *)(a2 + 208);
      v50 = *(_OWORD *)(a2 + 224);
      *v44 = *v45;
      *(_OWORD *)(a1 + 208) = v51;
      *(_OWORD *)(a1 + 224) = v50;
      goto LABEL_9;
    }
    v56 = *(void **)(a2 + 192);
    v57 = *(_QWORD *)(a2 + 200);
    v58 = *(void **)(a2 + 208);
    v59 = *(_QWORD *)(a2 + 216);
    sub_237870090(v56, v57, v58, v59, *(_QWORD *)(a2 + 224));
    v60 = *(void **)(a1 + 192);
    v61 = *(_QWORD *)(a1 + 200);
    v62 = *(void **)(a1 + 208);
    v63 = *(_QWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 192) = v56;
    *(_QWORD *)(a1 + 200) = v57;
    *(_QWORD *)(a1 + 208) = v58;
    *(_QWORD *)(a1 + 216) = v59;
    v64 = *(_BYTE *)(a1 + 224);
    *(_BYTE *)(a1 + 224) = v46;
    sub_2378702E0(v60, v61, v62, v63, v64);
LABEL_8:
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    goto LABEL_9;
  }
  if (v47 != 254)
  {
    v52 = *(void **)(a2 + 192);
    v53 = *(_QWORD *)(a2 + 200);
    v54 = *(void **)(a2 + 208);
    v55 = *(_QWORD *)(a2 + 216);
    sub_237870090(v52, v53, v54, v55, *(_QWORD *)(a2 + 224));
    *(_QWORD *)(a1 + 192) = v52;
    *(_QWORD *)(a1 + 200) = v53;
    *(_QWORD *)(a1 + 208) = v54;
    *(_QWORD *)(a1 + 216) = v55;
    *(_BYTE *)(a1 + 224) = v46;
    goto LABEL_8;
  }
  v48 = *v45;
  v49 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v49;
  *v44 = v48;
LABEL_9:
  v65 = *(void **)(a2 + 240);
  v66 = *(_QWORD *)(a2 + 248);
  v67 = *(void **)(a2 + 256);
  v68 = *(_QWORD *)(a2 + 264);
  v69 = *(_BYTE *)(a2 + 272);
  sub_237870090(v65, v66, v67, v68, v69);
  v70 = *(void **)(a1 + 240);
  v71 = *(_QWORD *)(a1 + 248);
  v72 = *(void **)(a1 + 256);
  v73 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 240) = v65;
  *(_QWORD *)(a1 + 248) = v66;
  *(_QWORD *)(a1 + 256) = v67;
  *(_QWORD *)(a1 + 264) = v68;
  v74 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v69;
  sub_2378702E0(v70, v71, v72, v73, v74);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v75 = *(void **)(a2 + 288);
  v76 = *(_QWORD *)(a2 + 296);
  v77 = *(void **)(a2 + 304);
  v78 = *(_QWORD *)(a2 + 312);
  v79 = *(_BYTE *)(a2 + 320);
  sub_237870090(v75, v76, v77, v78, v79);
  v80 = *(void **)(a1 + 288);
  v81 = *(_QWORD *)(a1 + 296);
  v82 = *(void **)(a1 + 304);
  v83 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 288) = v75;
  *(_QWORD *)(a1 + 296) = v76;
  *(_QWORD *)(a1 + 304) = v77;
  *(_QWORD *)(a1 + 312) = v78;
  v84 = *(_BYTE *)(a1 + 320);
  *(_BYTE *)(a1 + 320) = v79;
  sub_2378702E0(v80, v81, v82, v83, v84);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  v85 = *(void **)(a2 + 336);
  v86 = *(_QWORD *)(a2 + 344);
  v87 = *(void **)(a2 + 352);
  v88 = *(_QWORD *)(a2 + 360);
  v89 = *(_BYTE *)(a2 + 368);
  sub_237870090(v85, v86, v87, v88, v89);
  v90 = *(void **)(a1 + 336);
  v91 = *(_QWORD *)(a1 + 344);
  v92 = *(void **)(a1 + 352);
  v93 = *(_QWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 336) = v85;
  *(_QWORD *)(a1 + 344) = v86;
  *(_QWORD *)(a1 + 352) = v87;
  *(_QWORD *)(a1 + 360) = v88;
  v94 = *(_BYTE *)(a1 + 368);
  *(_BYTE *)(a1 + 368) = v89;
  sub_2378702E0(v90, v91, v92, v93, v94);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v95 = *(void **)(a2 + 384);
  v96 = *(_QWORD *)(a2 + 392);
  v97 = *(void **)(a2 + 400);
  v98 = *(_QWORD *)(a2 + 408);
  v99 = *(_BYTE *)(a2 + 416);
  sub_237870090(v95, v96, v97, v98, v99);
  v100 = *(void **)(a1 + 384);
  v101 = *(_QWORD *)(a1 + 392);
  v102 = *(void **)(a1 + 400);
  v103 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 384) = v95;
  *(_QWORD *)(a1 + 392) = v96;
  *(_QWORD *)(a1 + 400) = v97;
  *(_QWORD *)(a1 + 408) = v98;
  v104 = *(_BYTE *)(a1 + 416);
  *(_BYTE *)(a1 + 416) = v99;
  sub_2378702E0(v100, v101, v102, v103, v104);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
  return a1;
}

void *__swift_memcpy505_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F9uLL);
}

uint64_t assignWithTake for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  char v4;
  _OWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  __int128 v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  char v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  __int128 v71;
  char v72;
  __int128 v73;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = (_OWORD *)(a1 + 280);
  v6 = a2 + 280;
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v7, v8, v9, v10, v12);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  v15 = *(void **)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(void **)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v13;
  v19 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v14;
  sub_2378702E0(v15, v16, v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 120);
  v21 = *(_BYTE *)(a2 + 128);
  v22 = *(void **)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(void **)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v20;
  v26 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v21;
  sub_2378702E0(v22, v23, v24, v25, v26);
  v27 = *(_QWORD *)(a2 + 168);
  v28 = *(_BYTE *)(a2 + 176);
  v29 = *(void **)(a1 + 144);
  v30 = *(_QWORD *)(a1 + 152);
  v31 = *(void **)(a1 + 160);
  v32 = *(_QWORD *)(a1 + 168);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = v27;
  v33 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v28;
  sub_2378702E0(v29, v30, v31, v32, v33);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v34 = *(_DWORD *)(a1 + 224);
  if ((~(_BYTE)v34 & 0xFE) != 0)
  {
    v35 = *(_QWORD *)(a2 + 224);
    if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
    {
      v37 = *(void **)(a1 + 192);
      v38 = *(_QWORD *)(a1 + 200);
      v39 = *(void **)(a1 + 208);
      v40 = *(_QWORD *)(a1 + 216);
      v41 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v41;
      *(_BYTE *)(a1 + 224) = v35;
      sub_2378702E0(v37, v38, v39, v40, v34);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      goto LABEL_6;
    }
    sub_237988280(a1 + 192);
  }
  v36 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v36;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_6:
  v42 = *(_BYTE *)(a2 + 272);
  v43 = *(void **)(a1 + 240);
  v44 = *(_QWORD *)(a1 + 248);
  v45 = *(void **)(a1 + 256);
  v46 = *(_QWORD *)(a1 + 264);
  v47 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v47;
  v48 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v42;
  sub_2378702E0(v43, v44, v45, v46, v48);
  v49 = *(_QWORD *)(a2 + 312);
  v50 = *(_BYTE *)(a2 + 320);
  v51 = *(void **)(a1 + 288);
  v52 = *(_QWORD *)(a1 + 296);
  v53 = *(void **)(a1 + 304);
  v54 = *(_QWORD *)(a1 + 312);
  v55 = *(_OWORD *)(v6 + 16);
  *v5 = *(_OWORD *)v6;
  v5[1] = v55;
  *(_QWORD *)(a1 + 312) = v49;
  v56 = *(_BYTE *)(a1 + 320);
  *(_BYTE *)(a1 + 320) = v50;
  sub_2378702E0(v51, v52, v53, v54, v56);
  v57 = *(_QWORD *)(a2 + 360);
  v58 = *(_BYTE *)(a2 + 368);
  v59 = *(void **)(a1 + 336);
  v60 = *(_QWORD *)(a1 + 344);
  v61 = *(void **)(a1 + 352);
  v62 = *(_QWORD *)(a1 + 360);
  v63 = *(_OWORD *)(v6 + 64);
  v5[3] = *(_OWORD *)(v6 + 48);
  v5[4] = v63;
  *(_QWORD *)(a1 + 360) = v57;
  v64 = *(_BYTE *)(a1 + 368);
  *(_BYTE *)(a1 + 368) = v58;
  sub_2378702E0(v59, v60, v61, v62, v64);
  v65 = *(_QWORD *)(a2 + 408);
  v66 = *(_BYTE *)(a2 + 416);
  v67 = *(void **)(a1 + 384);
  v68 = *(_QWORD *)(a1 + 392);
  v69 = *(void **)(a1 + 400);
  v70 = *(_QWORD *)(a1 + 408);
  v71 = *(_OWORD *)(v6 + 112);
  v5[6] = *(_OWORD *)(v6 + 96);
  v5[7] = v71;
  *(_QWORD *)(a1 + 408) = v65;
  v72 = *(_BYTE *)(a1 + 416);
  *(_BYTE *)(a1 + 416) = v66;
  sub_2378702E0(v67, v68, v69, v70, v72);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  v73 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v73;
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_release();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(v6 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShadowConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 505))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 464);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShadowConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 504) = 0;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 505) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 464) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 505) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShadowConfiguration()
{
  return &type metadata for ShadowConfiguration;
}

uint64_t storeEnumTagSinglePayload for ShadowConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2379B5C5C + 4 * byte_237A9EA1C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2379B5C90 + 4 * byte_237A9EA17[v4]))();
}

uint64_t sub_2379B5C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379B5C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379B5CA0);
  return result;
}

uint64_t sub_2379B5CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379B5CB4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2379B5CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379B5CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShadowConfiguration.CodingKeys()
{
  return &type metadata for ShadowConfiguration.CodingKeys;
}

unint64_t sub_2379B5CE0()
{
  unint64_t result;

  result = qword_2568258B0;
  if (!qword_2568258B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9EB60, &type metadata for ShadowConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568258B0);
  }
  return result;
}

unint64_t sub_2379B5D28()
{
  unint64_t result;

  result = qword_2568258B8;
  if (!qword_2568258B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9EAD0, &type metadata for ShadowConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568258B8);
  }
  return result;
}

unint64_t sub_2379B5D70()
{
  unint64_t result;

  result = qword_2568258C0;
  if (!qword_2568258C0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9EAF8, &type metadata for ShadowConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568258C0);
  }
  return result;
}

uint64_t sub_2379B5DB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F64616873 && a2 == 0xEA0000000000657ALL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6964615272756C62 && a2 == 0xEA00000000007375 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB1D90)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2379B60A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    swift_retain();
    sub_2378D2D10(v15, v16, v17);
    if ((v18 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    swift_retain();
    v19 = sub_237A871C4();
    swift_release();
    result = swift_release();
    if ((v19 & 1) == 0)
      return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379B626C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_2378D2DB4(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_237A8840C();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2379B6470(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v21 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v22 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v8 = v7 | (v3 << 6);
      goto LABEL_22;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v22)
      return 1;
    v10 = *(_QWORD *)(v21 + 8 * v9);
    ++v3;
    if (!v10)
    {
      v3 = v9 + 1;
      if (v9 + 1 >= v22)
        return 1;
      v10 = *(_QWORD *)(v21 + 8 * v3);
      if (!v10)
      {
        v3 = v9 + 2;
        if (v9 + 2 >= v22)
          return 1;
        v10 = *(_QWORD *)(v21 + 8 * v3);
        if (!v10)
          break;
      }
    }
LABEL_21:
    v6 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v3 << 6);
LABEL_22:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v8;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v8);
    v16 = *(unsigned __int8 *)(v12 + 16);
    sub_23787A11C(*(_QWORD *)v12, v14, *(_BYTE *)(v12 + 16));
    swift_bridgeObjectRetain();
    sub_2378D2DC4(v13, v14, v16);
    v18 = v17;
    sub_23787A134(v13, v14, v16);
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v19 = swift_bridgeObjectRetain();
    v20 = sub_2379B668C(v19, v15);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      return 0;
  }
  v11 = v9 + 3;
  if (v11 >= v22)
    return 1;
  v10 = *(_QWORD *)(v21 + 8 * v11);
  if (v10)
  {
    v3 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v22)
      return 1;
    v10 = *(_QWORD *)(v21 + 8 * v3);
    ++v11;
    if (v10)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379B668C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2378D2DB8(v15, v16);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    swift_retain();
    v19 = sub_237A871C4();
    swift_release();
    result = swift_release();
    if ((v19 & 1) == 0)
      return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379B6854(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v2 = 0;
  v29 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v30 = (unint64_t)(v3 + 63) >> 6;
  v31 = result;
  while (1)
  {
    if (v5)
    {
      v32 = (v5 - 1) & v5;
      v33 = v2;
      v6 = __clz(__rbit64(v5)) | (v2 << 6);
      goto LABEL_22;
    }
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v7 >= v30)
      return 1;
    v8 = *(_QWORD *)(v29 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v30)
        return 1;
      v8 = *(_QWORD *)(v29 + 8 * v9);
      if (!v8)
      {
        v9 = v2 + 3;
        if (v2 + 3 >= v30)
          return 1;
        v8 = *(_QWORD *)(v29 + 8 * v9);
        if (!v8)
          break;
      }
    }
LABEL_21:
    v32 = (v8 - 1) & v8;
    v33 = v9;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
    v11 = *(_QWORD *)(result + 56);
    v12 = *(_QWORD *)(result + 48) + 112 * v6;
    v13 = *(_QWORD *)(v12 + 8);
    v14 = *(_QWORD *)(v12 + 16);
    v15 = *(_QWORD *)(v12 + 24);
    v16 = *(_QWORD *)(v12 + 32);
    v17 = *(_QWORD *)(v12 + 40);
    v18 = *(_QWORD *)(v12 + 48);
    v19 = *(_QWORD *)(v12 + 56);
    v20 = *(_QWORD *)(v12 + 72);
    v21 = *(_QWORD *)(v12 + 80);
    v22 = *(_QWORD *)(v12 + 88);
    v23 = *(unsigned __int8 *)(v12 + 96);
    v24 = *(_QWORD *)(v11 + 8 * v6);
    v25 = *(_BYTE *)(v12 + 64);
    v34 = *(_QWORD *)(v12 + 104);
    *(_QWORD *)&v35 = *(_QWORD *)v12;
    *((_QWORD *)&v35 + 1) = v13;
    v36 = v14;
    v37 = v15;
    v38 = v16;
    v39 = v17;
    v40 = v18;
    v41 = v19;
    v42 = v25;
    v43 = v20;
    v44 = v21;
    v45 = v22;
    v46 = v23;
    v47 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787978C(v15, v16, v17, v18, v19, v25);
    sub_2378797D4(v21);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2378D2E58(&v35);
    LOBYTE(v22) = v26;
    sub_23789E3CC((uint64_t)&v35);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v27 = swift_bridgeObjectRetain();
    v28 = sub_2379B6ADC(v27, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = v31;
    v5 = v32;
    v2 = v33;
    if ((v28 & 1) == 0)
      return 0;
  }
  v10 = v2 + 4;
  if (v2 + 4 >= v30)
    return 1;
  v8 = *(_QWORD *)(v29 + 8 * v10);
  if (v8)
  {
    v9 = v2 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v9 >= v30)
      return 1;
    v8 = *(_QWORD *)(v29 + 8 * v9);
    ++v10;
    if (v8)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2379B6ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v40;
  int64_t v41;

  if (a1 == a2)
    return 1;
  v2 = a2;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v37 = a1 + 64;
    v5 = 1 << *(_BYTE *)(a1 + 32);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(a1 + 64);
    v38 = (unint64_t)(v5 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v7)
        {
          v40 = (v7 - 1) & v7;
          v41 = v4;
          v8 = __clz(__rbit64(v7)) | (v4 << 6);
        }
        else
        {
          v9 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          if (v9 >= v38)
            return 1;
          v10 = *(_QWORD *)(v37 + 8 * v9);
          v11 = v4 + 1;
          if (!v10)
          {
            v11 = v4 + 2;
            if (v4 + 2 >= v38)
              return 1;
            v10 = *(_QWORD *)(v37 + 8 * v11);
            if (!v10)
            {
              v11 = v4 + 3;
              if (v4 + 3 >= v38)
                return 1;
              v10 = *(_QWORD *)(v37 + 8 * v11);
              if (!v10)
              {
                v12 = v4 + 4;
                if (v4 + 4 >= v38)
                  return 1;
                v10 = *(_QWORD *)(v37 + 8 * v12);
                if (!v10)
                {
                  while (1)
                  {
                    v11 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      break;
                    if (v11 >= v38)
                      return 1;
                    v10 = *(_QWORD *)(v37 + 8 * v11);
                    ++v12;
                    if (v10)
                      goto LABEL_22;
                  }
LABEL_45:
                  __break(1u);
                  JUMPOUT(0x2379B7108);
                }
                v11 = v4 + 4;
              }
            }
          }
LABEL_22:
          v40 = (v10 - 1) & v10;
          v41 = v11;
          v8 = __clz(__rbit64(v10)) + (v11 << 6);
        }
        v13 = 24 * v8;
        v14 = v3;
        v15 = *(_QWORD *)(v3 + 48) + v13;
        v16 = *(_QWORD *)v15;
        v17 = *(_QWORD *)(v15 + 8);
        v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v13);
        v20 = *v18;
        v19 = v18[1];
        v21 = v18[2];
        v22 = *(unsigned __int8 *)(v15 + 16);
        sub_23787A11C(*(_QWORD *)v15, v17, *(_BYTE *)(v15 + 16));
        sub_23787D104(v20, v19);
        v23 = sub_2378D2DC4(v16, v17, v22);
        v25 = v24;
        sub_23787A134(v16, v17, v22);
        if ((v25 & 1) == 0)
          goto LABEL_41;
        v26 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 24 * v23);
        v27 = *v26;
        v28 = v26[1];
        v29 = v26[2];
        if (v28 < 0)
          break;
        if (v19 < 0)
          goto LABEL_40;
        if ((v28 & 1) != 0)
          __asm { BR              X8 }
        v30 = sub_237A882E0();
        v32 = v31;
        if ((v19 & 1) != 0)
          __asm { BR              X8 }
        if (v30 == sub_237A882E0() && v32 == v34)
        {
          swift_bridgeObjectRelease_n();
          sub_23787D110(v27, v28);
          sub_23787D110(v20, v19);
          v2 = a2;
          v7 = v40;
          v3 = v14;
          v4 = v41;
          if (v29 != v21)
            return 0;
        }
        else
        {
          v35 = sub_237A8840C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23787D110(v27, v28);
          sub_23787D110(v20, v19);
          result = 0;
          if ((v35 & 1) == 0)
            return result;
          v2 = a2;
          v7 = v40;
          v3 = v14;
          v4 = v41;
          if (v29 != v21)
            return result;
        }
      }
      if ((v19 & 0x8000000000000000) == 0)
        break;
      sub_23787D104(*v26, v26[1]);
      sub_23787D104(v20, v19);
      sub_23787D104(v27, v28);
      sub_23787D104(v20, v19);
      sub_23787D104(v27, v28);
      v33 = sub_2379B668C(v27, v20);
      sub_23787D110(v27, v28);
      sub_23787D110(v20, v19);
      sub_23787D110(v20, v19);
      sub_23787D110(v27, v28);
      sub_23787D110(v27, v28);
      sub_23787D110(v20, v19);
      v2 = a2;
      v7 = v40;
      v3 = v14;
      v4 = v41;
      if ((v33 & 1) == 0)
        return 0;
    }
    swift_bridgeObjectRetain_n();
LABEL_40:
    sub_23787D104(v20, v19);
    sub_23787D110(v27, v28);
    sub_23787D110(v20, v19);
    sub_23787D110(v27, v28);
LABEL_41:
    sub_23787D110(v20, v19);
  }
  return 0;
}

uint64_t sub_2379B7140(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_2378D2DB8(v15, v16);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      result = sub_237A8678C();
      if ((result & 1) != 0)
        continue;
    }
    return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2379B7304(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v36;

  if (result == a2)
    return 1;
  v2 = a2;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = *(_QWORD *)(result + 64);
  v32 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v33 = (unint64_t)(v6 + 63) >> 6;
  v34 = result;
  if ((v7 & v5) != 0)
    goto LABEL_9;
LABEL_10:
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v12 >= v33)
    return 1;
  v13 = *(_QWORD *)(v32 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_23;
  v4 = v12 + 1;
  if (v12 + 1 >= v33)
    return 1;
  v13 = *(_QWORD *)(v32 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v4 = v12 + 2;
  if (v12 + 2 >= v33)
    return 1;
  v13 = *(_QWORD *)(v32 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v14 = v12 + 3;
  if (v14 >= v33)
    return 1;
  v13 = *(_QWORD *)(v32 + 8 * v14);
  if (v13)
  {
    v4 = v14;
LABEL_23:
    v8 = (v13 - 1) & v13;
    for (i = __clz(__rbit64(v13)) + (v4 << 6); ; i = v10 | (v4 << 6))
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * i);
      v16 = *(_QWORD *)(v3 + 56) + 24 * i;
      v18 = *(_QWORD *)v16;
      v17 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      v20 = sub_2378D2ED4(v15);
      if ((v21 & 1) == 0)
        break;
      v36 = v4;
      v22 = *(_QWORD *)(v2 + 56) + 24 * v20;
      v23 = *(_QWORD *)v22;
      v24 = *(_QWORD *)(v22 + 8);
      v25 = *(_BYTE *)(v22 + 16);
      sub_23787A11C(v18, v17, v19);
      sub_23787A11C(v23, v24, v25);
      Theme.ColorID.rawValue.getter();
      v27 = v26;
      v29 = v28;
      Theme.ColorID.rawValue.getter();
      if (v27 == v31 && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
        sub_23787A134(v23, v24, v25);
        result = sub_23787A134(v18, v17, v19);
        v3 = v34;
        v2 = a2;
        v4 = v36;
        if (!v8)
          goto LABEL_10;
      }
      else
      {
        v9 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23787A134(v23, v24, v25);
        result = sub_23787A134(v18, v17, v19);
        v3 = v34;
        v2 = a2;
        v4 = v36;
        if ((v9 & 1) == 0)
          return 0;
        if (!v8)
          goto LABEL_10;
      }
LABEL_9:
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
    }
    sub_23787A11C(v18, v17, v19);
    sub_23787A134(v18, v17, v19);
    return 0;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v33)
      return 1;
    v13 = *(_QWORD *)(v32 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2379B75E0(uint64_t a1, uint64_t a2)
{
  return sub_2379B7E78(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0B4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D0A0);
}

uint64_t sub_2379B75F4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2378D2DB4(v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v20 = swift_bridgeObjectRetain();
    v21 = sub_2379B77BC(v20, v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379B77BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  int64_t v39;
  _OWORD v40[6];
  _OWORD v41[2];
  _OWORD v42[6];
  _OWORD v43[2];
  _OWORD v44[6];
  _OWORD v45[2];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[25];
  _QWORD v53[2];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[2];
  _OWORD v61[6];
  _OWORD v62[2];
  _QWORD v63[2];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[3];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v38 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v39 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v10 >= v39)
      return 1;
    v11 = *(_QWORD *)(v38 + 8 * v10);
    ++v4;
    if (!v11)
    {
      v4 = v10 + 1;
      if (v10 + 1 >= v39)
        return 1;
      v11 = *(_QWORD *)(v38 + 8 * v4);
      if (!v11)
      {
        v4 = v10 + 2;
        if (v10 + 2 >= v39)
          return 1;
        v11 = *(_QWORD *)(v38 + 8 * v4);
        if (!v11)
          break;
      }
    }
LABEL_21:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    v16 = (__int128 *)(*(_QWORD *)(v3 + 56) + (v9 << 7));
    v17 = v16[3];
    v19 = *v16;
    v18 = v16[1];
    v44[2] = v16[2];
    v44[3] = v17;
    v44[0] = v19;
    v44[1] = v18;
    v21 = v16[5];
    v20 = v16[6];
    v22 = v16[4];
    *(_OWORD *)((char *)v45 + 9) = *(__int128 *)((char *)v16 + 105);
    v44[5] = v21;
    v45[0] = v20;
    v44[4] = v22;
    v23 = *v16;
    v24 = v16[1];
    v25 = v16[3];
    v48 = v16[2];
    v49 = v25;
    v46 = v23;
    v47 = v24;
    v26 = v16[4];
    v27 = v16[5];
    v28 = v16[6];
    *(_OWORD *)&v52[9] = *(__int128 *)((char *)v16 + 105);
    v51 = v27;
    *(_OWORD *)v52 = v28;
    v50 = v26;
    v53[0] = v14;
    v53[1] = v15;
    v58 = v26;
    v59 = v27;
    v60[0] = v28;
    *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)&v52[9];
    v54 = v46;
    v55 = v47;
    v56 = v48;
    v57 = v25;
    nullsub_1(v53);
    sub_237870370((uint64_t)v53, (uint64_t)v63, &qword_2568259E8);
    v61[4] = v68;
    v61[5] = v69;
    v62[0] = v70[0];
    *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v70 + 9);
    v61[0] = v64;
    v61[1] = v65;
    v61[2] = v66;
    v61[3] = v67;
    v42[4] = v68;
    v42[5] = v69;
    v43[0] = v70[0];
    *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v70 + 9);
    v42[0] = v64;
    v42[1] = v65;
    v29 = v63[0];
    v30 = v63[1];
    v42[2] = v66;
    v42[3] = v67;
    swift_bridgeObjectRetain();
    sub_23787AC58((uint64_t)v44);
    v31 = sub_2378D2DB4(v29, v30);
    LOBYTE(v29) = v32;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      sub_23787AD04((uint64_t)v61);
      return 0;
    }
    v33 = (_OWORD *)(*(_QWORD *)(a2 + 56) + (v31 << 7));
    v34 = v33[5];
    v40[4] = v33[4];
    v40[5] = v34;
    v41[0] = v33[6];
    *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v33 + 105);
    v35 = v33[1];
    v40[0] = *v33;
    v40[1] = v35;
    v36 = v33[3];
    v40[2] = v33[2];
    v40[3] = v36;
    v37 = _s14CarPlayAssetUI5ThemeO7PaletteV2eeoiySbAE_AEtFZ_0((uint64_t)v40, (uint64_t)v42);
    result = sub_23787AD04((uint64_t)v61);
    if ((v37 & 1) == 0)
      return 0;
  }
  v12 = v10 + 3;
  if (v12 >= v39)
    return 1;
  v11 = *(_QWORD *)(v38 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v39)
      return 1;
    v11 = *(_QWORD *)(v38 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2379B7AE4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11);
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v11);
    v17 = *v16;
    v18 = v16[1];
    v19 = sub_2378D2ED4(v15);
    if ((v20 & 1) != 0)
    {
      v21 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v19);
      result = *v21;
      if (*v21 == v17 && v21[1] == v18)
        continue;
      result = sub_237A8840C();
      if ((result & 1) != 0)
        continue;
    }
    return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2379B7C6C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v26 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v10 >= v27)
      return 1;
    v11 = *(_QWORD *)(v26 + 8 * v10);
    ++v4;
    if (!v11)
    {
      v4 = v10 + 1;
      if (v10 + 1 >= v27)
        return 1;
      v11 = *(_QWORD *)(v26 + 8 * v4);
      if (!v11)
      {
        v4 = v10 + 2;
        if (v10 + 2 >= v27)
          return 1;
        v11 = *(_QWORD *)(v26 + 8 * v4);
        if (!v11)
          break;
      }
    }
LABEL_21:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v9);
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 32 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    v19 = sub_2378D2ED4(v13);
    if ((v20 & 1) != 0)
    {
      v21 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 32 * v19);
      result = *v21;
      v22 = v21[2];
      v23 = v21[3];
      v24 = *v21 == v15 && v21[1] == v16;
      if (v24 || (result = sub_237A8840C(), (result & 1) != 0))
      {
        if (v22 == v17 && v23 == v18)
          continue;
        result = sub_237A8840C();
        if ((result & 1) != 0)
          continue;
      }
    }
    return 0;
  }
  v12 = v10 + 3;
  if (v12 >= v27)
    return 1;
  v11 = *(_QWORD *)(v26 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v27)
      return 1;
    v11 = *(_QWORD *)(v26 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2379B7E64(uint64_t a1, uint64_t a2)
{
  return sub_2379B7E78(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D138, (void (*)(uint64_t, uint64_t, uint64_t))sub_23787D134);
}

uint64_t sub_2379B7E78(uint64_t result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v43;

  if (result == a2)
    return 1;
  v4 = a2;
  v5 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v6 = a3;
  v7 = 0;
  v38 = result + 64;
  v8 = 1 << *(_BYTE *)(result + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(result + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  v40 = result;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v7 << 6);
      goto LABEL_24;
    }
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v39)
      return 1;
    v17 = *(_QWORD *)(v38 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v39)
        return 1;
      v17 = *(_QWORD *)(v38 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v39)
          return 1;
        v17 = *(_QWORD *)(v38 + 8 * v7);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v5 + 56) + 24 * v15;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(unsigned __int8 *)(v20 + 16);
    v24 = sub_2378D2ED4(v19);
    if ((v25 & 1) == 0)
    {
      a4(v22, v21, v23);
LABEL_36:
      v6(v22, v21, v23);
      return 0;
    }
    v43 = v7;
    v26 = *(_QWORD *)(v4 + 56) + 24 * v24;
    v28 = *(_QWORD *)v26;
    v27 = *(_QWORD *)(v26 + 8);
    v29 = *(unsigned __int8 *)(v26 + 16);
    if ((_DWORD)v29 == 255)
    {
      if ((_DWORD)v23 != 255)
      {
LABEL_35:
        a4(v22, v21, v23);
        a4(v28, v27, v29);
        v6(v28, v27, v29);
        goto LABEL_36;
      }
      a4(v22, v21, 255);
      v6(v28, v27, 255);
      v11 = v22;
      v12 = v21;
      v13 = 255;
LABEL_7:
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, v12, v13);
      v5 = v40;
      v4 = a2;
      v7 = v43;
    }
    else
    {
      if ((_DWORD)v23 == 255)
        goto LABEL_35;
      a4(v28, v27, v29);
      a4(v28, v27, v29);
      a4(v22, v21, v23);
      a4(v22, v21, v23);
      a4(v28, v27, v29);
      a4(v22, v21, v23);
      Theme.ColorID.rawValue.getter();
      v31 = v30;
      v33 = v32;
      Theme.ColorID.rawValue.getter();
      if (v31 == v35 && v33 == v34)
      {
        swift_bridgeObjectRelease_n();
        v6 = a3;
        a3(v28, v27, v29);
        a3(v22, v21, v23);
        a3(v22, v21, v23);
        a3(v28, v27, v29);
        a3(v28, v27, v29);
        v11 = v22;
        v12 = v21;
        v13 = v23;
        goto LABEL_7;
      }
      v36 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a3;
      a3(v28, v27, v29);
      a3(v22, v21, v23);
      a3(v22, v21, v23);
      a3(v28, v27, v29);
      a3(v28, v27, v29);
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a3)(v22, v21, v23);
      v5 = v40;
      v4 = a2;
      v7 = v43;
      if ((v36 & 1) == 0)
        return 0;
    }
  }
  v18 = v16 + 3;
  if (v18 >= v39)
    return 1;
  v17 = *(_QWORD *)(v38 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v39)
      return 1;
    v17 = *(_QWORD *)(v38 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2379B82A8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  char v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  void *v48;
  void *v49;
  char v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  char v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  int v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  int v68;
  uint64_t v69;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v51 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v52 = (unint64_t)(v4 + 63) >> 6;
  v53 = result;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v60 = v3;
      v8 = v7 | (v3 << 6);
      goto LABEL_22;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    if (v9 >= v52)
      return 1;
    v10 = *(_QWORD *)(v51 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v52)
        return 1;
      v10 = *(_QWORD *)(v51 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v52)
          return 1;
        v10 = *(_QWORD *)(v51 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_21:
    v6 = (v10 - 1) & v10;
    v60 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v8);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(result + 56) + (v8 << 6);
    v17 = *(void **)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v20 = *(void **)(v16 + 16);
    v19 = *(_QWORD *)(v16 + 24);
    v21 = *(char *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 48);
    v62 = *(_QWORD *)(v16 + 40);
    v59 = *(unsigned __int8 *)(v16 + 56);
    swift_bridgeObjectRetain();
    v66 = v20;
    v67 = v17;
    v69 = v18;
    v65 = v19;
    v68 = v21;
    sub_237870090(v17, v18, v20, v19, v21);
    swift_bridgeObjectRetain();
    v23 = sub_2378D2DB8(v14, v15);
    LOBYTE(v18) = v24;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_58;
    v25 = *(_QWORD *)(v2 + 56) + (v23 << 6);
    v26 = *(void **)v25;
    v27 = *(_QWORD *)(v25 + 8);
    v28 = *(void **)(v25 + 16);
    v29 = *(uint64_t *)(v25 + 24);
    v30 = *(char *)(v25 + 32);
    v63 = *(_QWORD *)(v25 + 48);
    v58 = *(unsigned __int8 *)(v25 + 56);
    v61 = *(_QWORD *)(v25 + 40);
    if ((v30 & 0x80000000) == 0)
    {
      if ((v68 & 0x80000000) == 0)
      {
        v31 = v26 == v67 && v27 == v69;
        if (v31 || (sub_237A8840C() & 1) != 0)
        {
          if (v28)
          {
            if (v20)
            {
              sub_23786A1FC();
              v56 = v6;
              v32 = v26;
              sub_237870090(v67, v69, v66, v65, v68);
              sub_237870090(v26, v27, v28, v29, v30);
              sub_237870090(v26, v27, v28, v29, v30);
              sub_237870090(v67, v69, v66, v65, v68);
              sub_237870090(v26, v27, v28, v29, v30);
              sub_237870090(v67, v69, v66, v65, v68);
              sub_237870090(v26, v27, v28, v29, v30);
              swift_bridgeObjectRetain();
              v33 = v66;
              v34 = v28;
              v50 = sub_237A87DD0();

              sub_2378702E0(v32, v27, v28, v29, v30);
              sub_2378702E0(v67, v69, v66, v65, v68);
              sub_2378702E0(v67, v69, v66, v65, v68);
              sub_2378702E0(v32, v27, v28, v29, v30);
              v6 = v56;
              v26 = v32;
              sub_2378702E0(v67, v69, v66, v65, v68);
              v35 = v28;
              sub_2378702E0(v32, v27, v28, v29, v30);
              if ((v50 & 1) == 0)
              {
                sub_2378702E0(v32, v27, v28, v29, v30);
                swift_bridgeObjectRelease();
                v42 = v66;
                v41 = v67;
                v43 = v69;
                v44 = v65;
                v45 = v68;
                goto LABEL_64;
              }
              if ((v30 & 1) != 0)
              {
LABEL_44:
                if ((v68 & 1) == 0)
                  goto LABEL_57;
                goto LABEL_52;
              }
              goto LABEL_34;
            }
            sub_237870090(v26, v27, v28, v29, v30);
            v46 = v65;
            v48 = v26;
            v47 = v68;
            sub_237870090(v67, v69, 0, v65, v68);
            sub_2378702E0(v48, v27, v28, v29, v30);
            sub_2378702E0(v67, v69, 0, v65, v68);
            v41 = v67;
            v43 = v69;
            v42 = 0;
LABEL_62:
            v44 = v46;
          }
          else
          {
            sub_237870090(v26, v27, 0, v29, v30);
            if (!v20)
            {
              v35 = 0;
              sub_237870090(v67, v69, 0, v65, v68);
              sub_237870090(v26, v27, 0, v29, v30);
              swift_bridgeObjectRetain();
              sub_2378702E0(v26, v27, 0, v29, v30);
              sub_2378702E0(v67, v69, 0, v65, v68);
              if ((v30 & 1) != 0)
                goto LABEL_44;
LABEL_34:
              if ((v68 & 1) != 0 || *(double *)&v29 != *(double *)&v65)
              {
LABEL_57:
                sub_2378702E0(v26, v27, v35, v29, v30);
                swift_bridgeObjectRelease();
LABEL_58:
                v42 = v66;
                v41 = v67;
                v43 = v69;
                v44 = v65;
                v45 = v68;
                goto LABEL_64;
              }
              goto LABEL_52;
            }
            v49 = v26;
            v47 = v68;
            sub_237870090(v67, v69, v66, v65, v68);
            sub_2378702E0(v49, v27, 0, v29, v30);
            sub_2378702E0(v67, v69, v66, v65, v68);
            v41 = v67;
            v43 = v69;
            v42 = v66;
            v44 = v65;
          }
          v45 = v47;
          goto LABEL_64;
        }
      }
LABEL_59:
      sub_237870090(v26, v27, v28, v29, v30);
      v46 = v65;
      v64 = v26;
      v47 = v68;
      sub_237870090(v67, v69, v20, v65, v68);
      sub_2378702E0(v64, v27, v28, v29, v30);
      sub_2378702E0(v67, v69, v20, v65, v68);
      v41 = v67;
      v43 = v69;
      v42 = v20;
      goto LABEL_62;
    }
    if ((v68 & 0x80000000) == 0)
      goto LABEL_59;
    v57 = v6;
    if (v26)
    {
      if (!v67)
      {
        v67 = 0;
LABEL_69:
        sub_237870090(v26, v27, v28, v29, v30);
        sub_237870090(v67, v69, v20, v65, v68);
        sub_2378702E0(v26, v27, v28, v29, v30);
        sub_2378702E0(v67, v69, v20, v65, v68);
        v41 = v67;
        v43 = v69;
        v42 = v20;
        v44 = v65;
        v45 = v68;
        goto LABEL_64;
      }
      sub_23786A1FC();
      sub_237870090(v67, v69, v20, v65, v68);
      sub_237870090(v26, v27, v28, v29, v30);
      sub_237870090(v26, v27, v28, v29, v30);
      sub_237870090(v67, v69, v20, v65, v68);
      sub_237870090(v26, v27, v28, v29, v30);
      v36 = v28;
      sub_237870090(v67, v69, v66, v65, v68);
      sub_237870090(v26, v27, v28, v29, v30);
      swift_bridgeObjectRetain();
      v37 = v67;
      v38 = v26;
      v39 = sub_237A87DD0();

      if ((v39 & 1) == 0)
        goto LABEL_60;
    }
    else
    {
      if (v67)
        goto LABEL_69;
      sub_237870090(0, v69, v20, v65, v68);
      sub_237870090(0, v27, v28, v29, v30);
      sub_237870090(0, v27, v28, v29, v30);
      sub_237870090(0, v69, v20, v65, v68);
      sub_237870090(0, v27, v28, v29, v30);
      sub_237870090(0, v69, v20, v65, v68);
      sub_237870090(0, v27, v28, v29, v30);
      swift_bridgeObjectRetain();
      v36 = v28;
    }
    if ((v27 != v69 || v36 != v66) && (sub_237A8840C() & 1) == 0)
    {
LABEL_60:
      sub_2378702E0(v26, v27, v36, v29, v30);
      sub_2378702E0(v67, v69, v66, v65, v68);
      sub_2378702E0(v67, v69, v66, v65, v68);
      sub_2378702E0(v26, v27, v36, v29, v30);
      sub_2378702E0(v67, v69, v66, v65, v68);
      sub_2378702E0(v26, v27, v36, v29, v30);
      sub_2378702E0(v26, v27, v36, v29, v30);
      swift_bridgeObjectRelease();
      v41 = v67;
      v43 = v69;
      v42 = v66;
      v44 = v65;
      v45 = v68;
LABEL_64:
      sub_2378702E0(v41, v43, v42, v44, v45);
LABEL_65:
      swift_bridgeObjectRelease();
      return 0;
    }
    v55 = sub_2379B8EB4(v29, v65);
    sub_2378702E0(v26, v27, v36, v29, v30);
    sub_2378702E0(v67, v69, v66, v65, v68);
    sub_2378702E0(v67, v69, v66, v65, v68);
    sub_2378702E0(v26, v27, v36, v29, v30);
    sub_2378702E0(v67, v69, v66, v65, v68);
    v35 = v36;
    sub_2378702E0(v26, v27, v36, v29, v30);
    v6 = v57;
    if ((v55 & 1) == 0)
      goto LABEL_57;
LABEL_52:
    if (v61 != v62)
      goto LABEL_57;
    v40 = sub_2379B7304(v63, v22);
    sub_2378702E0(v26, v27, v35, v29, v30);
    swift_bridgeObjectRelease();
    sub_2378702E0(v67, v69, v66, v65, v68);
    if ((v40 & 1) == 0)
      goto LABEL_65;
    swift_bridgeObjectRelease();
    result = v53;
    v2 = a2;
    v3 = v60;
    if (v58 != v59)
      return 0;
  }
  v12 = v3 + 4;
  if (v3 + 4 >= v52)
    return 1;
  v10 = *(_QWORD *)(v51 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v52)
      return 1;
    v10 = *(_QWORD *)(v51 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_21;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_2379B8EB4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  double v26;
  char v27;
  char v29;
  uint64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v30 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v31 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v4 << 6);
LABEL_26:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(v3 + 56) + 32 * v10;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(double *)(v17 + 16);
    v21 = *(_BYTE *)(v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_2378D2DB8(v15, v16);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v25 = *(_QWORD *)(a2 + 56) + 32 * v22;
    v26 = *(double *)(v25 + 16);
    v27 = *(_BYTE *)(v25 + 24);
    if (*(_QWORD *)v25 == v19 && *(_QWORD *)(v25 + 8) == v18)
    {
      result = swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_6;
LABEL_35:
      if ((v21 & 1) == 0)
        return 0;
    }
    else
    {
      v29 = sub_237A8840C();
      result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
        return 0;
      if ((v27 & 1) != 0)
        goto LABEL_35;
LABEL_6:
      if (v26 == v20)
        v8 = v21;
      else
        v8 = 1;
      if ((v8 & 1) != 0)
        return 0;
    }
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_25;
  v4 = v11 + 1;
  if (v11 + 1 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v4);
  if (v12)
    goto LABEL_25;
  v4 = v11 + 2;
  if (v11 + 2 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v4);
  if (v12)
  {
LABEL_25:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_26;
  }
  v13 = v11 + 3;
  if (v13 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_25;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2379B9100(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  int v22;
  BOOL v23;
  void *v24;
  char v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  BOOL v34;
  void *v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  char v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  char v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  int v75;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v62 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v63 = (unint64_t)(v4 + 63) >> 6;
  v64 = result;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v3 << 6);
LABEL_24:
    v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9);
    v14 = *(_QWORD *)(v2 + 56) + 48 * v9;
    v73 = *(void **)v14;
    v74 = *(_QWORD *)(v14 + 8);
    v72 = *(void **)(v14 + 16);
    v70 = *(uint64_t *)(v14 + 24);
    v75 = *(char *)(v14 + 32);
    v15 = *(_QWORD *)(v14 + 40);
    v16 = sub_2378D2ED4(v13);
    if ((v17 & 1) == 0)
    {
      sub_237870090(v73, v74, v72, v70, v75);
      v54 = v73;
      v55 = v74;
      v35 = v72;
      v36 = v70;
      v37 = v75;
      goto LABEL_70;
    }
    v67 = v3;
    v18 = *(_QWORD *)(a2 + 56) + 48 * v16;
    v19 = *(void **)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(void **)(v18 + 16);
    v71 = *(uint64_t *)(v18 + 24);
    v22 = *(char *)(v18 + 32);
    v68 = *(_QWORD *)(v18 + 40);
    if (v22 < 0)
    {
      if ((v75 & 0x80000000) == 0)
      {
LABEL_59:
        sub_237870090(v19, v20, v21, v71, v22);
        v51 = v72;
        v38 = v21;
        v52 = v70;
        v53 = v75;
        sub_237870090(v73, v74, v72, v70, v75);
        sub_2378702E0(v19, v20, v38, v71, v22);
        v54 = v73;
        v55 = v74;
        goto LABEL_60;
      }
      v59 = *(_BYTE *)(v18 + 32);
      v58 = *(void **)v18;
      v66 = v15;
      if (v19)
      {
        if (!v73)
        {
          v73 = 0;
LABEL_64:
          sub_237870090(v19, v20, v21, v71, v22);
          v42 = v73;
          v43 = v74;
          v44 = v72;
          v45 = v21;
          v52 = v70;
          v53 = v75;
          sub_237870090(v73, v74, v72, v70, v75);
          v46 = v19;
          v47 = v20;
          v48 = v45;
          v49 = v71;
          v50 = v22;
LABEL_68:
          sub_2378702E0(v46, v47, v48, v49, v50);
          v54 = v42;
          v55 = v43;
          v35 = v44;
LABEL_69:
          v36 = v52;
          v37 = v53;
          goto LABEL_70;
        }
        v28 = *(_QWORD *)(v18 + 8);
        sub_23786A1FC();
        v29 = v21;
        sub_237870090(v19, v20, v21, v71, v22);
        sub_237870090(v19, v20, v21, v71, v22);
        sub_237870090(v73, v74, v72, v70, v75);
        sub_237870090(v19, v20, v21, v71, v22);
        sub_237870090(v73, v74, v72, v70, v75);
        sub_237870090(v19, v20, v21, v71, v22);
        sub_237870090(v73, v74, v72, v70, v75);
        v30 = v20;
        sub_237870090(v73, v74, v72, v70, v75);
        v31 = v73;
        v32 = v19;
        v33 = sub_237A87DD0();

        if ((v33 & 1) == 0)
        {
          sub_2378702E0(v19, v28, v21, v71, v59);
          v51 = v72;
          v52 = v70;
          v53 = v75;
          sub_2378702E0(v73, v74, v72, v70, v75);
          sub_2378702E0(v73, v74, v72, v70, v75);
          sub_2378702E0(v19, v30, v29, v71, v59);
          sub_2378702E0(v73, v74, v72, v70, v75);
          sub_2378702E0(v19, v30, v29, v71, v59);
          sub_2378702E0(v19, v30, v29, v71, v59);
          v54 = v73;
          v55 = v74;
LABEL_60:
          v35 = v51;
          goto LABEL_69;
        }
      }
      else
      {
        if (v73)
          goto LABEL_64;
        sub_237870090(0, v20, v21, v71, v22);
        sub_237870090(0, v20, v21, v71, v22);
        sub_237870090(0, v74, v72, v70, v75);
        sub_237870090(0, v20, v21, v71, v22);
        sub_237870090(0, v74, v72, v70, v75);
        sub_237870090(0, v20, v21, v71, v22);
        sub_237870090(0, v74, v72, v70, v75);
        sub_237870090(0, v74, v72, v70, v75);
        v30 = v20;
      }
      v34 = v30 == v74 && v21 == v72;
      if (!v34 && (sub_237A8840C() & 1) == 0)
      {
        v56 = v30;
        sub_2378702E0(v58, v30, v21, v71, v59);
        v42 = v73;
        v43 = v74;
        v44 = v72;
        v57 = v21;
        v52 = v70;
        v53 = v75;
        sub_2378702E0(v73, v74, v72, v70, v75);
        sub_2378702E0(v73, v74, v72, v70, v75);
        sub_2378702E0(v58, v56, v57, v71, v59);
        sub_2378702E0(v73, v74, v72, v70, v75);
        sub_2378702E0(v58, v56, v57, v71, v59);
        v46 = v58;
        v47 = v56;
        v48 = v57;
        v49 = v71;
        v50 = v59;
        goto LABEL_68;
      }
      v61 = sub_2379B8EB4(v71, v70);
      sub_2378702E0(v19, v30, v21, v71, v59);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v19, v30, v21, v71, v59);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v19, v30, v21, v71, v59);
      sub_2378702E0(v19, v30, v21, v71, v59);
      sub_2378702E0(v73, v74, v72, v70, v75);
      result = 0;
      if ((v61 & 1) == 0)
        return result;
      v3 = v67;
      v2 = v64;
      if (v68 != v66)
        return result;
    }
    else
    {
      if (v75 < 0)
        goto LABEL_59;
      v23 = v19 == v73 && v20 == v74;
      if (!v23 && (sub_237A8840C() & 1) == 0)
      {
        sub_237870090(v19, v20, v21, v71, v22);
        v41 = v21;
        v52 = v70;
        v53 = v75;
        sub_237870090(v73, v74, v72, v70, v75);
        sub_237870090(v73, v74, v72, v70, v75);
        sub_2378702E0(v19, v20, v41, v71, v22);
        sub_2378702E0(v73, v74, v72, v70, v75);
        v54 = v73;
        v55 = v74;
        v35 = v72;
        goto LABEL_69;
      }
      if (!v21)
      {
        sub_237870090(v19, v20, 0, v71, v22);
        if (!v72)
        {
          sub_237870090(v73, v74, 0, v70, v75);
          sub_237870090(v73, v74, 0, v70, v75);
          sub_2378702E0(v19, v20, 0, v71, v22);
          sub_2378702E0(v73, v74, 0, v70, v75);
          sub_2378702E0(v73, v74, 0, v70, v75);
          if ((v22 & 1) != 0)
            goto LABEL_6;
          goto LABEL_44;
        }
        v39 = v70;
        v40 = v75;
        sub_237870090(v73, v74, v72, v70, v75);
        sub_2378702E0(v19, v20, 0, v71, v22);
        v54 = v73;
        v55 = v74;
        v35 = v72;
LABEL_66:
        v36 = v39;
        v37 = v40;
LABEL_70:
        sub_2378702E0(v54, v55, v35, v36, v37);
        return 0;
      }
      if (!v72)
      {
        sub_237870090(v19, v20, v21, v71, v22);
        v39 = v70;
        v40 = v75;
        sub_237870090(v73, v74, 0, v70, v75);
        sub_237870090(v73, v74, 0, v70, v75);
        sub_2378702E0(v19, v20, v21, v71, v22);
        sub_2378702E0(v73, v74, 0, v70, v75);
        v54 = v73;
        v55 = v74;
        v35 = 0;
        goto LABEL_66;
      }
      sub_23786A1FC();
      v24 = v21;
      sub_237870090(v19, v20, v21, v71, v22);
      sub_237870090(v19, v20, v21, v71, v22);
      v65 = v15;
      sub_237870090(v73, v74, v72, v70, v75);
      sub_237870090(v19, v20, v21, v71, v22);
      sub_237870090(v73, v74, v72, v70, v75);
      sub_237870090(v19, v20, v21, v71, v22);
      sub_237870090(v73, v74, v72, v70, v75);
      sub_237870090(v73, v74, v72, v70, v75);
      v25 = v22;
      v26 = v72;
      v27 = v24;
      v60 = sub_237A87DD0();

      sub_2378702E0(v19, v20, v24, v71, v25);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v19, v20, v24, v71, v25);
      sub_2378702E0(v73, v74, v72, v70, v75);
      sub_2378702E0(v19, v20, v24, v71, v25);
      sub_2378702E0(v19, v20, v24, v71, v25);
      v15 = v65;
      sub_2378702E0(v73, v74, v72, v70, v75);
      if ((v60 & 1) == 0)
        return 0;
      if ((v25 & 1) != 0)
      {
LABEL_6:
        result = 0;
        v2 = v64;
        v7 = v68;
        if ((v75 & 1) == 0)
          return result;
        goto LABEL_7;
      }
LABEL_44:
      v2 = v64;
      v7 = v68;
      if ((v75 & 1) != 0)
        return 0;
      result = 0;
      if (*(double *)&v71 != *(double *)&v70)
        return result;
LABEL_7:
      v3 = v67;
      if (v7 != v15)
        return result;
    }
  }
  v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v10 >= v63)
    return 1;
  v11 = *(_QWORD *)(v62 + 8 * v10);
  ++v3;
  if (v11)
    goto LABEL_23;
  v3 = v10 + 1;
  if (v10 + 1 >= v63)
    return 1;
  v11 = *(_QWORD *)(v62 + 8 * v3);
  if (v11)
    goto LABEL_23;
  v3 = v10 + 2;
  if (v10 + 2 >= v63)
    return 1;
  v11 = *(_QWORD *)(v62 + 8 * v3);
  if (v11)
  {
LABEL_23:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v3 << 6);
    goto LABEL_24;
  }
  v12 = v10 + 3;
  if (v12 >= v63)
    return 1;
  v11 = *(_QWORD *)(v62 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v63)
      return 1;
    v11 = *(_QWORD *)(v62 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_23;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_2379B9DF4(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t i;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v43;
  int64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  int v50;
  char v51;
  __int128 v52;
  char v53;
  __int128 v54;
  char v55;
  __int128 v56;
  char v57;
  char v58;
  char v59;
  _QWORD v60[2];
  int v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v2 = 0;
  v39 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v40 = (unint64_t)(v3 + 63) >> 6;
  v41 = result;
  if (!v5)
    goto LABEL_7;
LABEL_6:
  v43 = (v5 - 1) & v5;
  v44 = v2;
  for (i = __clz(__rbit64(v5)) | (v2 << 6); ; i = __clz(__rbit64(v8)) + (v9 << 6))
  {
    v11 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v12 = v11[1];
    v48 = *v11;
    v13 = *(_QWORD *)(result + 56) + 96 * i;
    v14 = *(_DWORD *)(v13 + 16);
    v15 = *(_BYTE *)(v13 + 20);
    v17 = *(_QWORD *)(v13 + 24);
    v16 = *(_QWORD *)(v13 + 32);
    v18 = *(_BYTE *)(v13 + 40);
    v20 = *(_QWORD *)(v13 + 48);
    v19 = *(_QWORD *)(v13 + 56);
    v21 = *(_BYTE *)(v13 + 64);
    v22 = *(_QWORD *)(v13 + 72);
    v23 = *(_QWORD *)(v13 + 80);
    v24 = *(_BYTE *)(v13 + 88);
    v25 = *(_BYTE *)(v13 + 89);
    v26 = *(_BYTE *)(v13 + 90);
    v60[0] = *(_QWORD *)v13;
    v60[1] = *(_QWORD *)(v13 + 8);
    v61 = v14;
    v62 = v15;
    v63 = v17;
    v64 = v16;
    v65 = v18;
    v66 = v20;
    v67 = v19;
    v68 = v21;
    v69 = v22;
    v70 = v23;
    v71 = v24;
    v72 = v25;
    v73 = v26;
    swift_bridgeObjectRetain();
    sub_23787A11C(v17, v16, v18);
    sub_23787A11C(v20, v19, v21);
    v46 = v23;
    v47 = v22;
    v45 = v24;
    sub_23787D0A0(v22, v23, v24);
    v27 = sub_2378D2DB8(v48, v12);
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      sub_23787A134(v17, v16, v18);
      sub_23787A134(v20, v19, v21);
      sub_23787D0B4(v22, v46, v45);
      return 0;
    }
    v30 = *(_QWORD *)(a2 + 56) + 96 * v27;
    v31 = *(_DWORD *)(v30 + 16);
    v32 = *(_BYTE *)(v30 + 20);
    v33 = *(_BYTE *)(v30 + 40);
    v34 = *(_BYTE *)(v30 + 64);
    v35 = *(_BYTE *)(v30 + 88);
    v36 = *(_BYTE *)(v30 + 89);
    v37 = *(_BYTE *)(v30 + 90);
    v49[0] = *(_QWORD *)v30;
    v49[1] = *(_QWORD *)(v30 + 8);
    v50 = v31;
    v51 = v32;
    v52 = *(_OWORD *)(v30 + 24);
    v53 = v33;
    v54 = *(_OWORD *)(v30 + 48);
    v55 = v34;
    v56 = *(_OWORD *)(v30 + 72);
    v57 = v35;
    v58 = v36;
    v59 = v37;
    v38 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV08TickTypeI0V2eeoiySbAI_AItFZ_0((uint64_t)v49, (uint64_t)v60);
    sub_23787A134(v17, v16, v18);
    sub_23787A134(v20, v19, v21);
    sub_23787D0B4(v47, v46, v45);
    if ((v38 & 1) == 0)
      return 0;
    result = v41;
    v5 = v43;
    v2 = v44;
    if (v43)
      goto LABEL_6;
LABEL_7:
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v7 >= v40)
      return 1;
    v8 = *(_QWORD *)(v39 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v7 + 1;
      if (v7 + 1 >= v40)
        return 1;
      v8 = *(_QWORD *)(v39 + 8 * v9);
      if (!v8)
      {
        v9 = v7 + 2;
        if (v7 + 2 >= v40)
          return 1;
        v8 = *(_QWORD *)(v39 + 8 * v9);
        if (!v8)
          break;
      }
    }
LABEL_20:
    v43 = (v8 - 1) & v8;
    v44 = v9;
  }
  v10 = v7 + 3;
  if (v10 >= v40)
    return 1;
  v8 = *(_QWORD *)(v39 + 8 * v10);
  if (v8)
  {
    v9 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v9 >= v40)
      return 1;
    v8 = *(_QWORD *)(v39 + 8 * v9);
    ++v10;
    if (v8)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2379BA160(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v28 = MEMORY[0x24BEE4AF8];
  sub_2379D6428(0, v1, 0);
  v2 = v28;
  result = sub_2379FA470(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v24 = v1;
  v25 = v5;
  v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v27 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_retain();
    result = sub_237A87B9C();
    v14 = v13;
    v16 = *(_QWORD *)(v28 + 16);
    v15 = *(_QWORD *)(v28 + 24);
    if (v16 >= v15 >> 1)
    {
      v23 = result;
      sub_2379D6428(v15 > 1, v16 + 1, 1);
      result = v23;
    }
    *(_QWORD *)(v28 + 16) = v16 + 1;
    v17 = (_QWORD *)(v28 + 24 * v16);
    v17[4] = result;
    v17[5] = v14;
    v17[6] = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v18 = *(_QWORD *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v27 + 1;
    v6 = v9;
    if (v27 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static GradientColor.singleColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t inited;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = a1;
  v5 = sub_2378D464C((double *)inited);
  swift_setDeallocating();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC70);
  swift_arrayDestroy();
  v6 = sub_2379BA160(v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC78);
    v7 = sub_237A880E8();
  }
  else
  {
    v7 = MEMORY[0x24BEE4B00];
  }
  v10 = v7;
  v8 = (_QWORD *)swift_bridgeObjectRetain();
  sub_2379BD4D4(v8, 1, &v10);
  result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t static GradientColor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2379B668C(*a1, *a2);
}

uint64_t sub_2379BA4D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v5 = *(_QWORD *)(a1 + 8 * v3 + 32);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = v4[2];
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v4 = sub_237895660(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = v4[2];
        if ((v4[3] >> 1) - v11 < v6)
          goto LABEL_28;
        v12 = (unint64_t)&v4[3 * v11 + 4];
        if (v5 + 32 < v12 + 24 * v6 && v12 < v5 + 32 + 24 * v6)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v6)
        {
          v14 = v4[2];
          v15 = __OFADD__(v14, v6);
          v16 = v14 + v6;
          if (v15)
            goto LABEL_29;
          v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
      goto LABEL_27;
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v1 == v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t Theming.palettes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  v6 = v5[1];
  if (!v6)
    return 0;
  v8[0] = *v5;
  v8[1] = v6;
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 24))(v8, a2, a3);
}

uint64_t Theming.defaultPalette(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  uint64_t v8;
  _OWORD v10[8];

  v7 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  v8 = v7[1];
  if (v8)
  {
    *(_QWORD *)&v10[0] = *v7;
    *((_QWORD *)&v10[0] + 1) = v8;
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(a3 + 16))(v10, a2, a3);
  }
  else
  {
    sub_2378CFEF0(v10);
    return sub_237870370((uint64_t)v10, a4, &qword_256820240);
  }
}

uint64_t Theming.defaultWallpaperID(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v11[2];

  result = type metadata accessor for Layout();
  v9 = (_QWORD *)(a1 + *(int *)(result + 28));
  v10 = v9[1];
  if (v10)
  {
    v11[0] = *v9;
    v11[1] = v10;
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 8))(v11, a2, a3);
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
  }
  return result;
}

uint64_t GradientColor.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_237876C74(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379BA860()
{
  return 0x73706F7473;
}

uint64_t sub_2379BA874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237A8840C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2379BA900()
{
  sub_2379BDC7C();
  return sub_237A88718();
}

uint64_t sub_2379BA928()
{
  sub_2379BDC7C();
  return sub_237A88724();
}

uint64_t GradientColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568258E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379BDC7C();
  sub_237A886B8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568258F8);
  sub_2379BDCC0(&qword_256825900, (uint64_t (*)(void))sub_237879654, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GradientColor.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876C74((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t GradientColor.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825908);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379BDC7C();
  sub_237A88688();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568258F8);
    sub_2379BDCC0(&qword_256825910, (uint64_t (*)(void))sub_237879610, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2379BAC04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return GradientColor.init(from:)(a1, a2);
}

uint64_t sub_2379BAC18(_QWORD *a1)
{
  return GradientColor.encode(to:)(a1);
}

uint64_t sub_2379BAC2C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876C74((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t sub_2379BAC70(uint64_t a1)
{
  uint64_t *v1;

  return sub_237876C74(a1, *v1);
}

uint64_t sub_2379BAC78()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_237876C74((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t sub_2379BACB8(uint64_t *a1, uint64_t *a2)
{
  return sub_2379B668C(*a1, *a2);
}

uint64_t Theme.ColorID.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;

  v6 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  if ((sub_2379BB17C() & 1) != 0)
  {
    v7 = sub_237A878C0();
    v8 = sub_2379BDD34(v7, a1, a2);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x23B81E4C0](v8, v10, v12, v14);
    v17 = v16;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v15;
    *(_QWORD *)(a3 + 8) = v17;
    v19 = 4;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v19 = -1;
  }
  *(_BYTE *)(a3 + 16) = v19;
  return result;
}

void Theme.ColorID.rawValue.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2379BB024()
{
  sub_237A878E4();
  sub_237A88070();
  return 0;
}

uint64_t sub_2379BB17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_237A878FC();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_237A878FC();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_237A8840C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_237A878FC();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_237A878FC();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t Theme.ColorID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  unint64_t v26;

  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A8867C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_2Tm(v25, v25[3]);
    v5 = sub_237A88418();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
    v24 = v5;
    v26 = v7;
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(_s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0() + 16))
    {
      v8 = (char *)&loc_2379BB3C0 + 4 * byte_237A9EBEA[*(unsigned __int8 *)(swift_bridgeObjectRetain() + 48)];
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v9 = v26;
    if ((sub_2379BB17C() & 1) != 0)
    {
      v23 = a2;
      v10 = sub_237A878C0();
      v11 = sub_2379BDD34(v10, v24, v9);
      v13 = v12;
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x23B81E4C0](v11, v13, v15, v17);
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v23 = v18;
      *(_QWORD *)(v23 + 8) = v20;
      *(_BYTE *)(v23 + 16) = 4;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2379BDD80();
      swift_allocError();
      *v21 = v24;
      v21[1] = v9;
      swift_willThrow();
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

void *static Theme.RadialColorID.allCases.getter()
{
  return &unk_2509698C0;
}

void *static Theme.ModularColorID.allCases.getter()
{
  return &unk_250969910;
}

void *static Theme.MapsMediaColorID.allCases.getter()
{
  return &unk_250969958;
}

void *static Theme.SpecialColorID.allCases.getter()
{
  return &unk_25096AB78;
}

uint64_t static TaggedValue<>.allCases.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v0 = (uint64_t (*)(uint64_t))off_2568258D8;
  if (!off_2568258D8)
    return MEMORY[0x24BEE4AF8];
  v1 = swift_retain();
  v2 = v0(v1);
  sub_2378A2C04((uint64_t)v0);
  return v2;
}

uint64_t sub_2379BB77C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t sub_2379BB7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.ColorID.init(rawValue:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

void sub_2379BB7AC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Theme.ColorID.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379BB7D0()
{
  sub_2379BE8A0();
  return sub_237A87A58();
}

uint64_t sub_2379BB810()
{
  sub_2379BE8A0();
  return sub_237A87A64();
}

uint64_t sub_2379BB878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.ColorID.init(from:)(a1, a2);
}

uint64_t sub_2379BB88C()
{
  sub_2379BE8A0();
  return sub_237A879EC();
}

uint64_t sub_2379BB8D8()
{
  sub_237A885D4();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379BB94C()
{
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379BB9A4()
{
  sub_237A885D4();
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379BBA14()
{
  return sub_2378D5160();
}

CarPlayAssetUI::Theme::RadialColorID_optional __swiftcall Theme.RadialColorID.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::Theme::RadialColorID_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_237A88568();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 23;
  switch(v3)
  {
    case 0:
      goto LABEL_25;
    case 1:
      v5 = 1;
      goto LABEL_25;
    case 2:
      v5 = 2;
      goto LABEL_25;
    case 3:
      v5 = 3;
      goto LABEL_25;
    case 4:
      v5 = 4;
      goto LABEL_25;
    case 5:
      v5 = 5;
      goto LABEL_25;
    case 6:
      v5 = 6;
      goto LABEL_25;
    case 7:
      v5 = 7;
      goto LABEL_25;
    case 8:
      v5 = 8;
      goto LABEL_25;
    case 9:
      v5 = 9;
      goto LABEL_25;
    case 10:
      v5 = 10;
      goto LABEL_25;
    case 11:
      v5 = 11;
      goto LABEL_25;
    case 12:
      v5 = 12;
      goto LABEL_25;
    case 13:
      v5 = 13;
      goto LABEL_25;
    case 14:
      v5 = 14;
      goto LABEL_25;
    case 15:
      v5 = 15;
      goto LABEL_25;
    case 16:
      v5 = 16;
      goto LABEL_25;
    case 17:
      v5 = 17;
      goto LABEL_25;
    case 18:
      v5 = 18;
      goto LABEL_25;
    case 19:
      v5 = 19;
      goto LABEL_25;
    case 20:
      v5 = 20;
      goto LABEL_25;
    case 21:
      v5 = 21;
      goto LABEL_25;
    case 22:
      v5 = 22;
LABEL_25:
      v6 = v5;
      break;
    case 23:
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    default:
      v6 = 41;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t Theme.RadialColorID.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379BBC28 + 4 * byte_237A9EC18[*v0]))(0x417972616D697270, 0xED00006576697463);
}

uint64_t sub_2379BBC28()
{
  return 5294388599723750000;
}

uint64_t sub_2379BBC4C()
{
  return 0x7261646E6F636573;
}

uint64_t sub_2379BBD18()
{
  return 0x65546C6961746564;
}

unint64_t sub_2379BBD38()
{
  return 0xD000000000000011;
}

unint64_t sub_2379BBD50()
{
  return 0xD000000000000012;
}

unint64_t sub_2379BBD68()
{
  return 0xD000000000000015;
}

unint64_t sub_2379BBD74()
{
  return 0xD000000000000013;
}

unint64_t sub_2379BBD8C()
{
  return 0xD000000000000015;
}

unint64_t sub_2379BBD98()
{
  return 0xD000000000000018;
}

unint64_t sub_2379BBDB0()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_2379BBDC8()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_2379BBDE0()
{
  return 0xD000000000000013;
}

unint64_t sub_2379BBDF8()
{
  return 0xD000000000000018;
}

uint64_t sub_2379BBE10()
{
  return 0x6C6576654C776F6CLL;
}

unint64_t sub_2379BBE9C()
{
  return 0xD000000000000010;
}

uint64_t sub_2379BBEB4()
{
  return 0x6465746361646572;
}

unint64_t sub_2379BBECC()
{
  return 0xD000000000000011;
}

unint64_t sub_2379BBEE4()
{
  return 0xD000000000000012;
}

unint64_t sub_2379BBEFC()
{
  return 0xD000000000000014;
}

unint64_t sub_2379BBF14()
{
  return 0xD000000000000013;
}

uint64_t sub_2379BBF2C()
{
  return 0x6954657669746361;
}

unint64_t sub_2379BBF50()
{
  return 0xD000000000000014;
}

unint64_t sub_2379BBF68()
{
  return 0xD000000000000016;
}

unint64_t sub_2379BBF80()
{
  return 0xD000000000000015;
}

unint64_t sub_2379BBF8C()
{
  return 0xD000000000000011;
}

unint64_t sub_2379BBFA4()
{
  return 0xD000000000000013;
}

unint64_t sub_2379BBFBC()
{
  return 0xD000000000000015;
}

unint64_t sub_2379BBFC8()
{
  return 0xD000000000000014;
}

void sub_2379BBFE0()
{
  JUMPOUT(0x2379BBFF4);
}

uint64_t sub_2379BC01C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5214(*a1, *a2);
}

uint64_t sub_2379BC028(uint64_t a1, uint64_t a2)
{
  return sub_2379BCD04(a1, a2, (void (*)(uint64_t))Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_2379BC034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCD78(a1, a2, a3, (void (*)(void))Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_2379BC040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCDD4(a1, a2, a3, (void (*)(uint64_t))Theme.RadialColorID.rawValue.getter);
}

CarPlayAssetUI::Theme::RadialColorID_optional sub_2379BC04C(Swift::String *a1)
{
  return Theme.RadialColorID.init(rawValue:)(*a1);
}

uint64_t sub_2379BC058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Theme.RadialColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2379BC07C()
{
  sub_2379BE85C();
  return sub_237A87A34();
}

uint64_t sub_2379BC0D8()
{
  sub_2379BE85C();
  return sub_237A879EC();
}

uint64_t sub_2379BC124()
{
  sub_2379BE85C();
  return sub_237A87A58();
}

uint64_t sub_2379BC164()
{
  sub_2379BE85C();
  return sub_237A87A64();
}

void sub_2379BC1CC(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509698C0;
}

CarPlayAssetUI::Theme::ModularColorID_optional __swiftcall Theme.ModularColorID.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::Theme::ModularColorID_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_237A88568();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 18;
  switch(v3)
  {
    case 0:
      goto LABEL_20;
    case 1:
      v5 = 1;
      goto LABEL_20;
    case 2:
      v5 = 2;
      goto LABEL_20;
    case 3:
      v5 = 3;
      goto LABEL_20;
    case 4:
      v5 = 4;
      goto LABEL_20;
    case 5:
      v5 = 5;
      goto LABEL_20;
    case 6:
      v5 = 6;
      goto LABEL_20;
    case 7:
      v5 = 7;
      goto LABEL_20;
    case 8:
      v5 = 8;
      goto LABEL_20;
    case 9:
      v5 = 9;
      goto LABEL_20;
    case 10:
      v5 = 10;
      goto LABEL_20;
    case 11:
      v5 = 11;
      goto LABEL_20;
    case 12:
      v5 = 12;
      goto LABEL_20;
    case 13:
      v5 = 13;
      goto LABEL_20;
    case 14:
      v5 = 14;
      goto LABEL_20;
    case 15:
      v5 = 15;
      goto LABEL_20;
    case 16:
      v5 = 16;
      goto LABEL_20;
    case 17:
      v5 = 17;
LABEL_20:
      v6 = v5;
      break;
    case 18:
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    default:
      v6 = 36;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t Theme.ModularColorID.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379BC3AC + 4 * byte_237A9EC65[*v0]))(0x41706F547466656CLL, 0xED00006576697463);
}

uint64_t sub_2379BC3AC()
{
  return 0x49706F547466656CLL;
}

unint64_t sub_2379BC3D0()
{
  return 0xD000000000000010;
}

uint64_t sub_2379BC6C4()
{
  return 0x6465746361646572;
}

void sub_2379BC6DC()
{
  JUMPOUT(0x2379BC6F0);
}

uint64_t sub_2379BC6FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D5208(*a1, *a2);
}

uint64_t sub_2379BC708(uint64_t a1, uint64_t a2)
{
  return sub_2379BCD04(a1, a2, (void (*)(uint64_t))Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_2379BC714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCD78(a1, a2, a3, (void (*)(void))Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_2379BC720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCDD4(a1, a2, a3, (void (*)(uint64_t))Theme.ModularColorID.rawValue.getter);
}

CarPlayAssetUI::Theme::ModularColorID_optional sub_2379BC72C(Swift::String *a1)
{
  return Theme.ModularColorID.init(rawValue:)(*a1);
}

uint64_t sub_2379BC738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Theme.ModularColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2379BC75C()
{
  sub_2379BE818();
  return sub_237A87A34();
}

uint64_t sub_2379BC7B8()
{
  sub_2379BE818();
  return sub_237A879EC();
}

uint64_t sub_2379BC804()
{
  sub_2379BE818();
  return sub_237A87A58();
}

uint64_t sub_2379BC844()
{
  sub_2379BE818();
  return sub_237A87A64();
}

void sub_2379BC8AC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250969910;
}

CarPlayAssetUI::Theme::MapsMediaColorID_optional __swiftcall Theme.MapsMediaColorID.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::Theme::MapsMediaColorID_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_237A88568();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 8;
  switch(v3)
  {
    case 0:
      goto LABEL_10;
    case 1:
      v5 = 1;
      goto LABEL_10;
    case 2:
      v5 = 2;
      goto LABEL_10;
    case 3:
      v5 = 3;
      goto LABEL_10;
    case 4:
      v5 = 4;
      goto LABEL_10;
    case 5:
      v5 = 5;
      goto LABEL_10;
    case 6:
      v5 = 6;
      goto LABEL_10;
    case 7:
      v5 = 7;
LABEL_10:
      v6 = v5;
      break;
    case 8:
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    default:
      v6 = 26;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t Theme.MapsMediaColorID.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379BCA3C + 4 * byte_237A9ECA3[*v0]))(0x417972616D697270, 0xED00006576697463);
}

uint64_t sub_2379BCA3C()
{
  return 5294388599723750000;
}

uint64_t sub_2379BCA60()
{
  return 0x656E696C646572;
}

uint64_t sub_2379BCA78()
{
  return 0x43656E696C646572;
}

uint64_t sub_2379BCA9C()
{
  return 0x50656E696C646572;
}

uint64_t sub_2379BCAC0()
{
  return 0x786554656772616CLL;
}

uint64_t sub_2379BCADC()
{
  return 0x746544656772616CLL;
}

uint64_t sub_2379BCB00()
{
  return 0x65546C6961746564;
}

unint64_t sub_2379BCB20()
{
  return 0xD000000000000011;
}

uint64_t sub_2379BCCEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2378D51FC(*a1, *a2);
}

uint64_t sub_2379BCCF8(uint64_t a1, uint64_t a2)
{
  return sub_2379BCD04(a1, a2, (void (*)(uint64_t))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_2379BCD04(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_237A885D4();
  a3(v4);
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379BCD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCD78(a1, a2, a3, (void (*)(void))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_2379BCD78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379BCDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379BCDD4(a1, a2, a3, (void (*)(uint64_t))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_2379BCDD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_237A885D4();
  a4(v5);
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::Theme::MapsMediaColorID_optional sub_2379BCE38(Swift::String *a1)
{
  return Theme.MapsMediaColorID.init(rawValue:)(*a1);
}

uint64_t sub_2379BCE44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Theme.MapsMediaColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2379BCE68()
{
  sub_2379BE7D4();
  return sub_237A87A34();
}

uint64_t sub_2379BCEC4()
{
  sub_2379BE7D4();
  return sub_237A879EC();
}

uint64_t sub_2379BCF10()
{
  sub_2379BE7D4();
  return sub_237A87A58();
}

uint64_t sub_2379BCF50()
{
  sub_2379BE7D4();
  return sub_237A87A64();
}

void sub_2379BCFB8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250969958;
}

uint64_t Theme.SpecialColorID.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t Theme.SpecialColorID.rawValue.getter()
{
  return 0x7261656C63;
}

uint64_t sub_2379BD030()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_2379BD07C()
{
  return sub_237A87710();
}

uint64_t sub_2379BD090()
{
  sub_237A885D4();
  sub_237A87710();
  return sub_237A88610();
}

uint64_t sub_2379BD0D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237A88124();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2379BD128(_QWORD *a1@<X8>)
{
  *a1 = 0x7261656C63;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_2379BD140()
{
  sub_2379BE790();
  return sub_237A87A34();
}

uint64_t sub_2379BD19C()
{
  sub_2379BE790();
  return sub_237A879EC();
}

uint64_t sub_2379BD1E8()
{
  sub_2379BE790();
  return sub_237A87A58();
}

uint64_t sub_2379BD228()
{
  sub_2379BE790();
  return sub_237A87A64();
}

void sub_2379BD290(_QWORD *a1@<X8>)
{
  *a1 = &unk_25096A4D0;
}

uint64_t static TaggedValue<>.externalColor.getter()
{
  return sub_2379BD328((uint64_t *)&off_2568258C8, &qword_2568258D0, (void (*)(uint64_t, _QWORD))sub_2378A2BF4);
}

uint64_t static TaggedValue<>.externalColor.setter(uint64_t a1, uint64_t a2)
{
  return sub_2379BD3A0(a1, a2, (uint64_t *)&off_2568258C8, &qword_2568258D0, (uint64_t (*)(uint64_t, uint64_t))sub_2378A2C04);
}

uint64_t (*static TaggedValue<>.externalColor.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t static TaggedValue<>.externalAllCases.getter()
{
  return sub_2379BD328((uint64_t *)&off_2568258D8, &qword_2568258E0, (void (*)(uint64_t, _QWORD))sub_23795547C);
}

uint64_t sub_2379BD328(uint64_t *a1, _QWORD *a2, void (*a3)(uint64_t, _QWORD))
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *a1;
  a3(v6, *a2);
  return v6;
}

uint64_t static TaggedValue<>.externalAllCases.setter(uint64_t a1, uint64_t a2)
{
  return sub_2379BD3A0(a1, a2, (uint64_t *)&off_2568258D8, &qword_2568258E0, (uint64_t (*)(uint64_t, uint64_t))sub_237955480);
}

uint64_t sub_2379BD3A0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = *a3;
  v11 = *a4;
  *a3 = a1;
  *a4 = a2;
  return a5(v10, v11);
}

uint64_t (*static TaggedValue<>.externalAllCases.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_2379BD44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  result = swift_beginAccess();
  v3 = (uint64_t (*)(uint64_t))off_2568258D8;
  if (off_2568258D8)
  {
    v4 = swift_retain();
    v5 = v3(v4);
    result = sub_2378A2C04((uint64_t)v3);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  *a1 = v5;
  return result;
}

void sub_2379BD4D4(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v42 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  swift_retain();
  v11 = sub_2378D2DB8(v7, v6);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2378C4B70();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v6;
    *(_QWORD *)(v20[7] + 8 * v11) = v8;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v42 - 1;
    if (v42 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 9;
    while (1)
    {
      v28 = *(v26 - 2);
      v27 = *(v26 - 1);
      v29 = *v26;
      v30 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      swift_retain();
      v31 = sub_2378D2DB8(v28, v27);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v23 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v23)
        break;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_2378C8D1C(v35, 1);
        v31 = sub_2378D2DB8(v28, v27);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_25;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v38 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v28;
      v39[1] = v27;
      *(_QWORD *)(v38[7] + 8 * v31) = v29;
      v40 = v38[2];
      v23 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v23)
        goto LABEL_24;
      v38[2] = v41;
      v26 += 3;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2378C8D1C(v14, a2 & 1);
  v16 = sub_2378D2DB8(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681EC88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_237A8858C();
  __break(1u);
LABEL_26:
  sub_237A87F44();
  sub_237A878E4();
  sub_237A88070();
  sub_237A878E4();
  sub_237A880AC();
  __break(1u);
}

uint64_t _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568259F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A99CE0;
  v1 = 41;
  v51 = MEMORY[0x24BEE4AF8];
  sub_2379D632C(0, 41, 0);
  v2 = v51;
  v3 = *(_QWORD *)(v51 + 16);
  v4 = 24 * v3;
  v5 = &byte_2509698E0;
  do
  {
    v7 = *v5++;
    v6 = v7;
    v52 = v2;
    v8 = *(_QWORD *)(v2 + 24);
    v9 = v3 + 1;
    if (v3 >= v8 >> 1)
    {
      sub_2379D632C(v8 > 1, v3 + 1, 1);
      v2 = v52;
    }
    *(_QWORD *)(v2 + 16) = v9;
    v10 = v2 + v4;
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = 0;
    *(_BYTE *)(v10 + 48) = 0;
    v4 += 24;
    v3 = v9;
    --v1;
  }
  while (v1);
  *(_QWORD *)(inited + 32) = v2;
  v11 = 36;
  v53 = MEMORY[0x24BEE4AF8];
  sub_2379D632C(0, 36, 0);
  v12 = v53;
  v13 = *(_QWORD *)(v53 + 16);
  v14 = 24 * v13;
  v15 = &byte_250969930;
  do
  {
    v17 = *v15++;
    v16 = v17;
    v54 = v12;
    v18 = *(_QWORD *)(v12 + 24);
    v19 = v13 + 1;
    if (v13 >= v18 >> 1)
    {
      sub_2379D632C(v18 > 1, v13 + 1, 1);
      v12 = v54;
    }
    *(_QWORD *)(v12 + 16) = v19;
    v20 = v12 + v14;
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = 0;
    *(_BYTE *)(v20 + 48) = 1;
    v14 += 24;
    v13 = v19;
    --v11;
  }
  while (v11);
  *(_QWORD *)(inited + 40) = v12;
  v21 = 26;
  v22 = MEMORY[0x24BEE4AF8];
  v55 = MEMORY[0x24BEE4AF8];
  sub_2379D632C(0, 26, 0);
  v23 = v55;
  v24 = *(_QWORD *)(v55 + 16);
  v25 = 24 * v24;
  v26 = &byte_250969978;
  do
  {
    v28 = *v26++;
    v27 = v28;
    v56 = v23;
    v29 = *(_QWORD *)(v23 + 24);
    v30 = v24 + 1;
    if (v24 >= v29 >> 1)
    {
      sub_2379D632C(v29 > 1, v24 + 1, 1);
      v23 = v56;
    }
    *(_QWORD *)(v23 + 16) = v30;
    v31 = v23 + v25;
    *(_QWORD *)(v31 + 32) = v27;
    *(_QWORD *)(v31 + 40) = 0;
    *(_BYTE *)(v31 + 48) = 2;
    v25 += 24;
    v24 = v30;
    --v21;
  }
  while (v21);
  *(_QWORD *)(inited + 48) = v23;
  sub_2379D632C(0, 1, 0);
  v32 = v22;
  v34 = *(_QWORD *)(v22 + 16);
  v33 = *(_QWORD *)(v22 + 24);
  if (v34 >= v33 >> 1)
  {
    sub_2379D632C(v33 > 1, v34 + 1, 1);
    v32 = v22;
  }
  *(_QWORD *)(v32 + 16) = v34 + 1;
  v35 = v32 + 24 * v34;
  *(_QWORD *)(v35 + 32) = 0;
  *(_QWORD *)(v35 + 40) = 0;
  *(_BYTE *)(v35 + 48) = 3;
  *(_QWORD *)(inited + 56) = v32;
  swift_beginAccess();
  v36 = (uint64_t (*)(uint64_t))off_2568258D8;
  v37 = MEMORY[0x24BEE4AF8];
  if (off_2568258D8)
  {
    v38 = swift_retain();
    v39 = v36(v38);
    sub_2378A2C04((uint64_t)v36);
    v40 = *(_QWORD *)(v39 + 16);
    if (v40)
      goto LABEL_17;
LABEL_23:
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
  v39 = MEMORY[0x24BEE4AF8];
  v40 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v40)
    goto LABEL_23;
LABEL_17:
  v50 = inited;
  sub_2379D632C(0, v40, 0);
  v41 = v37;
  v42 = (uint64_t *)(v39 + 40);
  do
  {
    v43 = *(v42 - 1);
    v44 = *v42;
    v45 = *(_QWORD *)(v41 + 16);
    v46 = *(_QWORD *)(v41 + 24);
    swift_bridgeObjectRetain();
    if (v45 >= v46 >> 1)
      sub_2379D632C(v46 > 1, v45 + 1, 1);
    v42 += 2;
    *(_QWORD *)(v41 + 16) = v45 + 1;
    v47 = v41 + 24 * v45;
    *(_QWORD *)(v47 + 32) = v43;
    *(_QWORD *)(v47 + 40) = v44;
    *(_BYTE *)(v47 + 48) = 4;
    --v40;
  }
  while (v40);
  swift_bridgeObjectRelease();
  inited = v50;
LABEL_24:
  *(_QWORD *)(inited + 64) = v41;
  v48 = sub_2379BA4D4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256825930);
  swift_arrayDestroy();
  return v48;
}

unint64_t sub_2379BDC7C()
{
  unint64_t result;

  result = qword_2568258F0;
  if (!qword_2568258F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F800, &type metadata for GradientColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568258F0);
  }
  return result;
}

uint64_t sub_2379BDCC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568258F8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B81FA98](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379BDD34(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_237A87980();
  __break(1u);
  return result;
}

unint64_t sub_2379BDD80()
{
  unint64_t result;

  result = qword_256825918;
  if (!qword_256825918)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F7C0, &type metadata for ThemeError);
    atomic_store(result, (unint64_t *)&qword_256825918);
  }
  return result;
}

unint64_t sub_2379BDDC8()
{
  unint64_t result;

  result = qword_256825920;
  if (!qword_256825920)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for GradientColor, &type metadata for GradientColor);
    atomic_store(result, (unint64_t *)&qword_256825920);
  }
  return result;
}

uint64_t sub_2379BDE0C()
{
  return sub_23794C098(&qword_256825928, &qword_256825930);
}

unint64_t sub_2379BDE34()
{
  unint64_t result;

  result = qword_256825938;
  if (!qword_256825938)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.RadialColorID, &type metadata for Theme.RadialColorID);
    atomic_store(result, (unint64_t *)&qword_256825938);
  }
  return result;
}

uint64_t sub_2379BDE78()
{
  return sub_23794C098(&qword_256825940, &qword_256825948);
}

unint64_t sub_2379BDEA0()
{
  unint64_t result;

  result = qword_256825950;
  if (!qword_256825950)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ModularColorID, &type metadata for Theme.ModularColorID);
    atomic_store(result, (unint64_t *)&qword_256825950);
  }
  return result;
}

uint64_t sub_2379BDEE4()
{
  return sub_23794C098(&qword_256825958, &qword_256825960);
}

unint64_t sub_2379BDF0C()
{
  unint64_t result;

  result = qword_256825968;
  if (!qword_256825968)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.MapsMediaColorID, &type metadata for Theme.MapsMediaColorID);
    atomic_store(result, (unint64_t *)&qword_256825968);
  }
  return result;
}

uint64_t sub_2379BDF50()
{
  return sub_23794C098(&qword_256825970, &qword_256825978);
}

unint64_t sub_2379BDF78()
{
  unint64_t result;

  result = qword_256825980;
  if (!qword_256825980)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.SpecialColorID, &type metadata for Theme.SpecialColorID);
    atomic_store(result, (unint64_t *)&qword_256825980);
  }
  return result;
}

uint64_t sub_2379BDFBC()
{
  return sub_23794C098(&qword_256825988, &qword_256825990);
}

uint64_t sub_2379BDFE0()
{
  return sub_23794C098(&qword_256825998, &qword_2568259A0);
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t dispatch thunk of Theming.defaultWallpaperID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Theming.defaultPalette(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Theming.palettes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for GradientColor()
{
  return &type metadata for GradientColor;
}

uint64_t destroy for Theme.ColorID(uint64_t a1)
{
  return sub_23787A134(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI5ThemeO7ColorIDOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23787A11C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Theme.ColorID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23787A11C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23787A134(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Theme.ColorID(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23787A134(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Theme.ColorID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme.ColorID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2379BE1BC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Theme.ColorID()
{
  return &type metadata for Theme.ColorID;
}

uint64_t getEnumTagSinglePayload for Theme.RadialColorID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD8)
    goto LABEL_17;
  if (a2 + 40 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 40) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 40;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 40;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 40;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x29;
  v8 = v6 - 41;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme.RadialColorID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 40 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 40) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD7)
    return ((uint64_t (*)(void))((char *)&loc_2379BE2B0 + 4 * byte_237A9ECC2[v4]))();
  *a1 = a2 + 40;
  return ((uint64_t (*)(void))((char *)sub_2379BE2E4 + 4 * byte_237A9ECBD[v4]))();
}

uint64_t sub_2379BE2E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE2EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379BE2F4);
  return result;
}

uint64_t sub_2379BE300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379BE308);
  *(_BYTE *)result = a2 + 40;
  return result;
}

uint64_t sub_2379BE30C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Theme.RadialColorID()
{
  return &type metadata for Theme.RadialColorID;
}

uint64_t getEnumTagSinglePayload for Theme.ModularColorID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDD)
    goto LABEL_17;
  if (a2 + 35 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 35) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 35;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 35;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 35;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x24;
  v8 = v6 - 36;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme.ModularColorID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 35 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 35) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDC)
    return ((uint64_t (*)(void))((char *)&loc_2379BE40C + 4 * byte_237A9ECCC[v4]))();
  *a1 = a2 + 35;
  return ((uint64_t (*)(void))((char *)sub_2379BE440 + 4 * byte_237A9ECC7[v4]))();
}

uint64_t sub_2379BE440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379BE450);
  return result;
}

uint64_t sub_2379BE45C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379BE464);
  *(_BYTE *)result = a2 + 35;
  return result;
}

uint64_t sub_2379BE468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Theme.ModularColorID()
{
  return &type metadata for Theme.ModularColorID;
}

uint64_t getEnumTagSinglePayload for Theme.MapsMediaColorID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme.MapsMediaColorID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_2379BE568 + 4 * byte_237A9ECD6[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_2379BE59C + 4 * byte_237A9ECD1[v4]))();
}

uint64_t sub_2379BE59C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE5A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379BE5ACLL);
  return result;
}

uint64_t sub_2379BE5B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379BE5C0);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_2379BE5C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379BE5CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Theme.MapsMediaColorID()
{
  return &type metadata for Theme.MapsMediaColorID;
}

ValueMetadata *type metadata accessor for Theme.SpecialColorID()
{
  return &type metadata for Theme.SpecialColorID;
}

ValueMetadata *type metadata accessor for Theme.PartnerColorIDTag()
{
  return &type metadata for Theme.PartnerColorIDTag;
}

ValueMetadata *type metadata accessor for ThemeError()
{
  return &type metadata for ThemeError;
}

uint64_t _s14CarPlayAssetUI5ThemeO14SpecialColorIDOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2379BE65C + 4 * byte_237A9ECDB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2379BE67C + 4 * byte_237A9ECE0[v4]))();
}

_BYTE *sub_2379BE65C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2379BE67C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379BE684(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379BE68C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379BE694(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379BE69C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GradientColor.CodingKeys()
{
  return &type metadata for GradientColor.CodingKeys;
}

unint64_t sub_2379BE6BC()
{
  unint64_t result;

  result = qword_2568259A8;
  if (!qword_2568259A8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F798, &type metadata for GradientColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568259A8);
  }
  return result;
}

unint64_t sub_2379BE704()
{
  unint64_t result;

  result = qword_2568259B0;
  if (!qword_2568259B0)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F708, &type metadata for GradientColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568259B0);
  }
  return result;
}

unint64_t sub_2379BE74C()
{
  unint64_t result;

  result = qword_2568259B8;
  if (!qword_2568259B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F730, &type metadata for GradientColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568259B8);
  }
  return result;
}

unint64_t sub_2379BE790()
{
  unint64_t result;

  result = qword_2568259C0;
  if (!qword_2568259C0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.SpecialColorID, &type metadata for Theme.SpecialColorID);
    atomic_store(result, (unint64_t *)&qword_2568259C0);
  }
  return result;
}

unint64_t sub_2379BE7D4()
{
  unint64_t result;

  result = qword_2568259C8;
  if (!qword_2568259C8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.MapsMediaColorID, &type metadata for Theme.MapsMediaColorID);
    atomic_store(result, (unint64_t *)&qword_2568259C8);
  }
  return result;
}

unint64_t sub_2379BE818()
{
  unint64_t result;

  result = qword_2568259D0;
  if (!qword_2568259D0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ModularColorID, &type metadata for Theme.ModularColorID);
    atomic_store(result, (unint64_t *)&qword_2568259D0);
  }
  return result;
}

unint64_t sub_2379BE85C()
{
  unint64_t result;

  result = qword_2568259D8;
  if (!qword_2568259D8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.RadialColorID, &type metadata for Theme.RadialColorID);
    atomic_store(result, (unint64_t *)&qword_2568259D8);
  }
  return result;
}

unint64_t sub_2379BE8A0()
{
  unint64_t result;

  result = qword_2568259E0;
  if (!qword_2568259E0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Theme.ColorID, &type metadata for Theme.ColorID);
    atomic_store(result, (unint64_t *)&qword_2568259E0);
  }
  return result;
}

uint64_t sub_2379BE8E4@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34[2];
  uint64_t v35[60];
  _BYTE __dst[488];
  _QWORD *v37;

  memcpy(__dst, __src, 0x1E0uLL);
  memcpy(v35, __src, sizeof(v35));
  v5 = Display.assets.getter();
  sub_2378700DC((uint64_t)__dst);
  v6 = sub_2379BF280((uint64_t)v5);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if (v2)
    return result;
  v10 = (_QWORD *)sub_2378D1094(MEMORY[0x24BEE4AF8]);
  v11 = *(_QWORD *)(v8 + 16);
  if (!v11)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v6;
    return result;
  }
  v32 = v6;
  v33 = a2;
  v12 = v8 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23787076C(v12, (uint64_t)v35);
    v14 = v35[3];
    v15 = v35[4];
    __swift_project_boxed_opaque_existential_2Tm(v35, v35[3]);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    v18 = v17;
    sub_23787076C((uint64_t)v35, (uint64_t)v34);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v10;
    v21 = sub_2378D2DB8(v16, v18);
    v22 = v10[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v10[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v10 = v37;
        if ((v20 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_2378C3CF8();
        v10 = v37;
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_2378C712C(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_2378D2DB8(v16, v18);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_22;
      v21 = v26;
      v10 = v37;
      if ((v25 & 1) != 0)
      {
LABEL_4:
        v13 = v10[7] + 40 * v21;
        __swift_destroy_boxed_opaque_existential_2Tm(v13);
        sub_237870734(v34, v13);
        goto LABEL_5;
      }
    }
    v10[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(v10[6] + 16 * v21);
    *v28 = v16;
    v28[1] = v18;
    sub_237870734(v34, v10[7] + 40 * v21);
    v29 = v10[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_21;
    v10[2] = v31;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
    v12 += 40;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      a2 = v33;
      v6 = v32;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2379BEB7C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = v1;
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_2378D2DB8(v6, v5);
      v9 = v8;
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v11 = v3[1];
        *(_QWORD *)&v18[0] = v11;
        v3[1] = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_2378C3EE0();
          v11 = *(_QWORD *)&v18[0];
        }
        swift_bridgeObjectRelease();
        sub_237904134(v7, v11);
        v3[1] = v11;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      v12 = sub_2378D2DB8(v6, v5);
      v14 = v13;
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        v15 = swift_isUniquelyReferenced_nonNull_native();
        v16 = *v3;
        v17 = *v3;
        *v3 = 0x8000000000000000;
        if ((v15 & 1) == 0)
        {
          sub_2378C3CF8();
          v16 = v17;
        }
        swift_bridgeObjectRelease();
        sub_237870734((__int128 *)(*(_QWORD *)(v16 + 56) + 40 * v12), (uint64_t)v18);
        sub_237903F4C(v12, v16);
        *v3 = v16;
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = 0;
        memset(v18, 0, sizeof(v18));
      }
      v4 += 2;
      swift_bridgeObjectRelease();
      sub_2378706F4((uint64_t)v18);
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AssetManifestEntry.path.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssetManifestEntry.path.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AssetManifestEntry.path.modify())()
{
  return nullsub_1;
}

void AssetManifestEntry.assetType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AssetManifestEntry.assetType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AssetManifestEntry.assetType.modify())()
{
  return nullsub_1;
}

void AssetManifestEntry.destination.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
}

_QWORD *AssetManifestEntry.destination.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = *result;
  return result;
}

uint64_t (*AssetManifestEntry.destination.modify())()
{
  return nullsub_1;
}

uint64_t sub_2379BEE04()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7079547465737361;
  if (*v0 != 1)
    v1 = 0x74616E6974736564;
  if (*v0)
    return v1;
  else
    return 1752457584;
}

uint64_t sub_2379BEE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379C039C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379BEE88()
{
  sub_2379BFFD4();
  return sub_237A88718();
}

uint64_t sub_2379BEEB0()
{
  sub_2379BFFD4();
  return sub_237A88724();
}

uint64_t AssetManifestEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568259F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(unsigned __int8 *)(v1 + 16);
  v14[0] = *(_QWORD *)(v1 + 24);
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_2Tm(v9, v8);
  sub_2379BFFD4();
  sub_237A886B8();
  v19 = 0;
  sub_237A88274();
  if (!v2)
  {
    v12 = v14[0];
    v18 = v15;
    v17 = 1;
    sub_2379C0018();
    sub_237A882B0();
    v14[1] = v12;
    v16 = 2;
    sub_237934824();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t AssetManifestEntry.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  int v15;
  char v16;
  char v17;
  unsigned __int8 v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256825A10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379BFFD4();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v19 = 0;
  v9 = sub_237A881B4();
  v11 = v10;
  v17 = 1;
  sub_2379C005C();
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v15 = v18;
  v16 = 2;
  sub_2379348AC();
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v14[1];
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379BF254@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetManifestEntry.init(from:)(a1, a2);
}

uint64_t sub_2379BF268(_QWORD *a1)
{
  return AssetManifestEntry.encode(to:)(a1);
}

uint64_t sub_2379BF280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t result;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  _QWORD v132[3];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v118 = sub_237A86594();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_237A86330();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237A8633C();
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_44:
    swift_bridgeObjectRetain();
    v100 = swift_bridgeObjectRetain();
    sub_2378CD648(v100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v14;
  }
  v111 = v5;
  v112 = v10;
  v113 = v8;
  v114 = v7;
  v12 = a1 + 32;
  v115 = a1;
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x24BEE4B00];
  v14 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v123 = v12;
    sub_23787076C(v12, (uint64_t)v132);
    v31 = v133;
    v32 = v134;
    __swift_project_boxed_opaque_existential_2Tm(v132, v133);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    v35 = v14[2];
    v135 = v13;
    v124 = v11;
    if (!v35 || (v36 = sub_2378D2DB8(v33, v34), (v37 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      v58 = v133;
      v59 = v134;
      __swift_project_boxed_opaque_existential_2Tm(v132, v133);
      *(_QWORD *)&v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 32))(v58, v59);
      *((_QWORD *)&v125 + 1) = v60;
      v130 = 47;
      v131 = 0xE100000000000000;
      v128 = 95;
      v129 = 0xE100000000000000;
      sub_237879800();
      v61 = sub_237A87E60();
      v63 = HIBYTE(v62) & 0xF;
      if ((v62 & 0x2000000000000000) == 0)
        v63 = v61 & 0xFFFFFFFFFFFFLL;
      if (!v63)
      {
        swift_bridgeObjectRelease();
        sub_237A86324();
        sub_2378D4298(MEMORY[0x24BEE4AF8]);
        sub_237934754();
        v101 = v112;
        v102 = v114;
        sub_237A864D4();
        v103 = sub_237A862D0();
        (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v102);
        v119 = v103;
        swift_willThrow();
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
      v64 = v133;
      v65 = v134;
      __swift_project_boxed_opaque_existential_2Tm(v132, v133);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v65 + 16))(&v130, v64, v65);
      *(_QWORD *)&v125 = 0;
      *((_QWORD *)&v125 + 1) = 0xE000000000000000;
      sub_237A878E4();
      swift_bridgeObjectRelease();
      sub_237A878E4();
      sub_237A878E4();
      v66 = *((_QWORD *)&v125 + 1);
      v67 = v125;
      if (*(_QWORD *)(v13 + 16))
      {
        swift_bridgeObjectRetain();
        v68 = sub_2378D2DB8(v67, v66);
        if ((v69 & 1) != 0)
        {
          sub_23787076C(*(_QWORD *)(v13 + 56) + 40 * v68, (uint64_t)&v125);
        }
        else
        {
          v127 = 0;
          v125 = 0u;
          v126 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v126 + 1))
        {
          swift_bridgeObjectRelease();
          sub_2378706F4((uint64_t)&v125);
          v70 = (void *)sub_237A877F4();
          v71 = objc_msgSend(v70, sel_stringByDeletingPathExtension);

          v72 = sub_237A87818();
          v74 = v73;

          v75 = (void *)sub_237A877F4();
          swift_bridgeObjectRelease();
          v76 = objc_msgSend(v75, sel_pathExtension);

          sub_237A87818();
          *(_QWORD *)&v125 = v72;
          *((_QWORD *)&v125 + 1) = v74;
          sub_237A878E4();
          v77 = v133;
          v78 = v134;
          __swift_project_boxed_opaque_existential_2Tm(v132, v133);
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v78);
          sub_237A878E4();
          swift_bridgeObjectRelease();
          sub_237A878E4();
          sub_237A878E4();
          swift_bridgeObjectRelease();
          v130 = 47;
          v131 = 0xE100000000000000;
          v128 = 95;
          v129 = 0xE100000000000000;
          v79 = sub_237A87E60();
          v81 = HIBYTE(v80) & 0xF;
          if ((v80 & 0x2000000000000000) == 0)
            v81 = v79 & 0xFFFFFFFFFFFFLL;
          if (!v81)
          {
            swift_bridgeObjectRelease();
            sub_237A86324();
            sub_2378D4298(MEMORY[0x24BEE4AF8]);
            sub_237934754();
            v104 = v112;
            v105 = v114;
            sub_237A864D4();
            v106 = sub_237A862D0();
            (*(void (**)(char *, uint64_t))(v113 + 8))(v104, v105);
            v119 = v106;
            swift_willThrow();
LABEL_47:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_48:
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v132);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (uint64_t)v14;
          }
          swift_bridgeObjectRelease();
          v82 = v133;
          v83 = v134;
          __swift_project_boxed_opaque_existential_2Tm(v132, v133);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v83 + 16))(&v130, v82, v83);
          *(_QWORD *)&v125 = 0;
          *((_QWORD *)&v125 + 1) = 0xE000000000000000;
          sub_237A878E4();
          swift_bridgeObjectRelease();
          sub_237A878E4();
          sub_237A878E4();
          swift_bridgeObjectRelease();
          v66 = *((_QWORD *)&v125 + 1);
          v67 = v125;
          if (*(_QWORD *)(v13 + 16))
          {
            swift_bridgeObjectRetain();
            v84 = sub_2378D2DB8(v67, v66);
            if ((v85 & 1) != 0)
            {
              sub_23787076C(*(_QWORD *)(v13 + 56) + 40 * v84, (uint64_t)&v125);
            }
            else
            {
              v127 = 0;
              v125 = 0u;
              v126 = 0u;
            }
            swift_bridgeObjectRelease();
            if (!*((_QWORD *)&v126 + 1))
              goto LABEL_41;
            swift_bridgeObjectRelease();
            sub_2378706F4((uint64_t)&v125);
            v95 = v116;
            sub_237A86588();
            sub_237A86570();
            (*(void (**)(char *, uint64_t))(v117 + 8))(v95, v118);
            v96 = v133;
            v97 = v134;
            __swift_project_boxed_opaque_existential_2Tm(v132, v133);
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v97 + 16))(&v130, v96, v97);
            *(_QWORD *)&v125 = 0;
            *((_QWORD *)&v125 + 1) = 0xE000000000000000;
            sub_237A878E4();
            swift_bridgeObjectRelease();
            sub_237A878E4();
            sub_237A878E4();
            swift_bridgeObjectRelease();
            v66 = *((_QWORD *)&v125 + 1);
            v67 = v125;
            if (*(_QWORD *)(v13 + 16))
            {
              swift_bridgeObjectRetain();
              v98 = sub_2378D2DB8(v67, v66);
              if ((v99 & 1) != 0)
              {
                sub_23787076C(*(_QWORD *)(v13 + 56) + 40 * v98, (uint64_t)&v125);
              }
              else
              {
                v127 = 0;
                v125 = 0u;
                v126 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v126 + 1))
              {
                swift_bridgeObjectRelease();
                sub_2378706F4((uint64_t)&v125);
                swift_bridgeObjectRelease();
                sub_237A86318();
                sub_2378D4298(MEMORY[0x24BEE4AF8]);
                sub_237934754();
                v108 = v112;
                v109 = v114;
                sub_237A864D4();
                v110 = sub_237A862D0();
                (*(void (**)(char *, uint64_t))(v113 + 8))(v108, v109);
                v119 = v110;
                swift_willThrow();
                goto LABEL_48;
              }
              goto LABEL_41;
            }
          }
          v127 = 0;
          v125 = 0u;
          v126 = 0u;
LABEL_41:
          v15 = v14;
          goto LABEL_5;
        }
      }
      else
      {
        v127 = 0;
        v125 = 0u;
        v126 = 0u;
      }
      v15 = v14;
      swift_bridgeObjectRelease();
LABEL_5:
      sub_2378706F4((uint64_t)&v125);
      v16 = v133;
      v17 = v134;
      __swift_project_boxed_opaque_existential_2Tm(v132, v133);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
      v20 = v19;
      v21 = v133;
      v22 = v134;
      __swift_project_boxed_opaque_existential_2Tm(v132, v133);
      v23 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      v23(&v130, v21, v22);
      LOBYTE(v21) = v130;
      v24 = v133;
      v25 = v134;
      __swift_project_boxed_opaque_existential_2Tm(v132, v133);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v25 + 24))(&v125, v24, v25);
      v26 = v125;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v125 = v15;
      sub_237870FB0(v67, v66, v21, v26, v18, v20, isUniquelyReferenced_nonNull_native);
      v14 = (_QWORD *)v125;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787076C((uint64_t)v132, (uint64_t)&v125);
      v28 = v135;
      v29 = swift_isUniquelyReferenced_nonNull_native();
      v130 = v28;
      sub_237870E7C(&v125, v67, v66, v29);
      v13 = v130;
      goto LABEL_6;
    }
    v38 = v14[7] + 32 * v36;
    v39 = *(_QWORD *)v38;
    v120 = *(_QWORD *)(v38 + 8);
    v121 = v39;
    v122 = *(unsigned __int8 *)(v38 + 16);
    v40 = *(_QWORD *)(v38 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = v133;
    v42 = v134;
    __swift_project_boxed_opaque_existential_2Tm(v132, v133);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(&v125, v41, v42);
    v43 = v125;
    v44 = v133;
    v45 = v134;
    __swift_project_boxed_opaque_existential_2Tm(v132, v133);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
    v48 = v47;
    v49 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v125 = v14;
    v51 = sub_2378D2DB8(v46, v48);
    v52 = v14[2];
    v53 = (v50 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
      break;
    v55 = v50;
    if (v14[3] >= v54)
    {
      if ((v49 & 1) == 0)
        sub_2378C3EE0();
    }
    else
    {
      sub_2378C7450(v54, v49);
      v56 = sub_2378D2DB8(v46, v48);
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_53;
      v51 = v56;
    }
    v86 = v43 | v40;
    v14 = (_QWORD *)v125;
    if ((v55 & 1) != 0)
    {
      v87 = *(_QWORD *)(v125 + 56) + 32 * v51;
      swift_bridgeObjectRelease();
      v88 = v120;
      *(_QWORD *)v87 = v121;
      *(_QWORD *)(v87 + 8) = v88;
      *(_BYTE *)(v87 + 16) = v122;
      *(_QWORD *)(v87 + 24) = v86;
      v13 = v135;
    }
    else
    {
      *(_QWORD *)(v125 + 8 * (v51 >> 6) + 64) |= 1 << v51;
      v89 = (uint64_t *)(v14[6] + 16 * v51);
      *v89 = v46;
      v89[1] = v48;
      v90 = v14[7] + 32 * v51;
      v91 = v120;
      *(_QWORD *)v90 = v121;
      *(_QWORD *)(v90 + 8) = v91;
      *(_BYTE *)(v90 + 16) = v122;
      *(_QWORD *)(v90 + 24) = v86;
      v92 = v14[2];
      v93 = __OFADD__(v92, 1);
      v94 = v92 + 1;
      v13 = v135;
      if (v93)
        goto LABEL_52;
      v14[2] = v94;
      swift_bridgeObjectRetain();
    }
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v124;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v132);
    v12 = v123 + 40;
    v11 = v30 - 1;
    if (!v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

BOOL _s14CarPlayAssetUI0C13ManifestEntryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_237A8840C(), result = 0, (v7 & 1) != 0))
  {
    if (v2)
      v9 = 1953394534;
    else
      v9 = 0x6567616D69;
    if (v2)
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    if (v4)
      v11 = 1953394534;
    else
      v11 = 0x6567616D69;
    if (v4)
      v12 = 0xE400000000000000;
    else
      v12 = 0xE500000000000000;
    if (v9 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v14 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v14 & 1) == 0)
        return result;
    }
    return v3 == v5;
  }
  return result;
}

unint64_t sub_2379BFFD4()
{
  unint64_t result;

  result = qword_256825A00;
  if (!qword_256825A00)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F9C4, &type metadata for AssetManifestEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256825A00);
  }
  return result;
}

unint64_t sub_2379C0018()
{
  unint64_t result;

  result = qword_256825A08;
  if (!qword_256825A08)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetType, &type metadata for AssetType);
    atomic_store(result, (unint64_t *)&qword_256825A08);
  }
  return result;
}

unint64_t sub_2379C005C()
{
  unint64_t result;

  result = qword_256825A18;
  if (!qword_256825A18)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for AssetType, &type metadata for AssetType);
    atomic_store(result, (unint64_t *)&qword_256825A18);
  }
  return result;
}

uint64_t initializeWithCopy for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AssetManifestEntry()
{
  return &type metadata for AssetManifestEntry;
}

_QWORD *assignWithCopy for AssetManifest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetManifest()
{
  return &type metadata for AssetManifest;
}

uint64_t storeEnumTagSinglePayload for AssetManifestEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2379C0244 + 4 * byte_237A9F855[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2379C0278 + 4 * byte_237A9F850[v4]))();
}

uint64_t sub_2379C0278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C0280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379C0288);
  return result;
}

uint64_t sub_2379C0294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379C029CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2379C02A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C02A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetManifestEntry.CodingKeys()
{
  return &type metadata for AssetManifestEntry.CodingKeys;
}

unint64_t sub_2379C02C8()
{
  unint64_t result;

  result = qword_256825A20;
  if (!qword_256825A20)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F99C, &type metadata for AssetManifestEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256825A20);
  }
  return result;
}

unint64_t sub_2379C0310()
{
  unint64_t result;

  result = qword_256825A28;
  if (!qword_256825A28)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F90C, &type metadata for AssetManifestEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256825A28);
  }
  return result;
}

unint64_t sub_2379C0358()
{
  unint64_t result;

  result = qword_256825A30;
  if (!qword_256825A30)
  {
    result = MEMORY[0x23B81FA98](&unk_237A9F934, &type metadata for AssetManifestEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256825A30);
  }
  return result;
}

uint64_t sub_2379C039C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079547465737361 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t static DecodableDefault.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_237A877DC() & 1;
}

uint64_t DecodableNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237A87E0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DecodableNil.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237A87E0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DecodableNil.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DecodableNil.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56);
  v6(a2, 1, 1, a1);
  v4 = sub_237A87E0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a2, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(a2, 1, 1, a1);
}

uint64_t DecodableNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  v5 = sub_237A87E0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a3, a1, v5);
}

void DecodableNil.init(from:)()
{
  uint64_t v0;

  v0 = sub_237A87E0C();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for DecodableNil();
}

uint64_t sub_2379C0788(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  void (*v9)(__n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v6 - 72) = a1;
  *(_QWORD *)(v6 - 128) = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = *(void (**)(__n128))(*(_QWORD *)(v3 - 8) + 56);
  *(_QWORD *)(v6 - 144) = (char *)&v17 - v8;
  v9(v7);
  v10 = v2[3];
  *(_QWORD *)(v6 - 136) = v2;
  __swift_project_boxed_opaque_existential_2Tm(v2, v10);
  v11 = *(_QWORD *)(v6 - 152);
  sub_237A8867C();
  if (v11)
  {
    v12 = *(_QWORD *)(v6 - 144);
    __swift_destroy_boxed_opaque_existential_2Tm(*(_QWORD *)(v6 - 136));
    return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 128) + 8))(v12, *(_QWORD *)(v6 - 72));
  }
  else
  {
    *(_QWORD *)(v6 - 184) = v9;
    *(_QWORD *)(v6 - 176) = v5;
    *(_QWORD *)(v6 - 152) = v4;
    __swift_project_boxed_opaque_existential_2Tm((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
    if ((sub_237A8810C() & 1) != 0)
    {
      v14 = *(_QWORD *)(v6 - 144);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 152) + 8))(v14, *(_QWORD *)(v6 - 176));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 - 184))(v14, 1, 1, v3);
    }
    else
    {
      __swift_project_boxed_opaque_existential_2Tm((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      sub_237A88448();
      v14 = *(_QWORD *)(v6 - 144);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 - 184))(v1, 0, 1, v3);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 152) + 40))(v14, v1, *(_QWORD *)(v6 - 176));
    }
    __swift_destroy_boxed_opaque_existential_2Tm(v6 - 120);
    v15 = *(_QWORD *)(v6 - 128);
    v16 = *(_QWORD *)(v6 - 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v15 + 16))(*(_QWORD *)(v6 - 168), v14, v16);
    __swift_destroy_boxed_opaque_existential_2Tm(*(_QWORD *)(v6 - 136));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
}

void type metadata accessor for DecodableNil()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t DecodableNil.hash(into:)()
{
  sub_237A87E0C();
  return sub_237A87E18();
}

BOOL static DecodableNil.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, __n128);
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a6;
  v38 = a1;
  v39 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237A87E0C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v37 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v34 - v11;
  v13 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v34 - v18;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v34 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v24((char *)&v34 - v22, v38, v9, v21);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v19, v39, v9);
  v38 = TupleTypeMetadata2;
  v25 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v24)(v12, v23, v9);
  ((void (*)(char *, char *, uint64_t))v24)(v25, v19, v9);
  v39 = v7;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v26(v12, 1, a3) == 1)
  {
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v19, v9);
    v27(v23, v9);
    if (v26(v25, 1, a3) == 1)
    {
      v27(v12, v9);
      return 1;
    }
    goto LABEL_6;
  }
  ((void (*)(char *, char *, uint64_t))v24)(v16, v12, v9);
  if (v26(v25, 1, a3) == 1)
  {
    v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v19, v9);
    v28(v23, v9);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, a3);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v38);
    return 0;
  }
  v29 = v39;
  v30 = v35;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v25, a3);
  LODWORD(v38) = sub_237A877DC();
  v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v30, a3);
  v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v19, v9);
  v32(v23, v9);
  v31(v16, a3);
  v32(v12, v9);
  return (v38 & 1) != 0;
}

uint64_t sub_2379C0C98(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x5664657070617277 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_237A8840C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2379C0D34()
{
  return 0x5664657070617277;
}

uint64_t sub_2379C0D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379C0C98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2379C0D88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237872944();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379C0DBC(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA01E8, a1);
  return sub_237A88718();
}

uint64_t sub_2379C0DF0(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA01E8, a1);
  return sub_237A88724();
}

void DecodableNil.encode(to:)()
{
  type metadata accessor for DecodableNil.CodingKeys();
}

uint64_t sub_2379C0E68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x23B81FA98](&unk_237AA01E8, a1);
  v2 = sub_237A882BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - v4;
  __swift_project_boxed_opaque_existential_2Tm(v1, v1[3]);
  sub_237A886B8();
  sub_237A88268();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t DecodableNil.hashValue.getter()
{
  sub_237A885D4();
  sub_237A87E0C();
  sub_237A87E18();
  return sub_237A88610();
}

void sub_2379C0F9C()
{
  DecodableNil.init(from:)();
}

void sub_2379C0FBC()
{
  DecodableNil.encode(to:)();
}

uint64_t sub_2379C0FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379C164C(a1, a2, a3, (void (*)(_BYTE *, uint64_t))DecodableNil.hash(into:));
}

BOOL sub_2379C0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static DecodableNil.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), a4, a5, *(_QWORD *)(a3 + 40));
}

uint64_t DecodableDefault.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t DecodableDefault.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

uint64_t (*DecodableDefault.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DecodableDefault.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t DecodableDefault.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
}

uint64_t DecodableDefault.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v26 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25 = (char *)&v21 - v9;
  v10 = type metadata accessor for DecodableDefault(0, a2, a3, a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - v12;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  v14 = v30;
  sub_237A8867C();
  if (v14)
  {
    v15 = (uint64_t)a1;
  }
  else
  {
    v22 = v10;
    v23 = a1;
    v16 = AssociatedTypeWitness;
    v21 = v13;
    v30 = v11;
    __swift_project_boxed_opaque_existential_2Tm(v28, v29);
    if ((sub_237A8810C() & 1) != 0)
    {
      v17 = v21;
      (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
      v18 = v30;
    }
    else
    {
      __swift_project_boxed_opaque_existential_2Tm(v28, v29);
      swift_getAssociatedConformanceWitness();
      v19 = v25;
      sub_237A88448();
      v18 = v30;
      v17 = v21;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v19, v16);
    }
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v26, v17, v22);
    v15 = (uint64_t)v23;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm(v15);
}

uint64_t DecodableDefault.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  return sub_237A876D4();
}

uint64_t sub_2379C1390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379C0C98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2379C13C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237872944();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2379C13F8(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA0198, a1);
  return sub_237A88718();
}

uint64_t sub_2379C142C(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA0198, a1);
  return sub_237A88724();
}

uint64_t DecodableDefault.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = type metadata accessor for DecodableDefault.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x23B81FA98](&unk_237AA0198, v3);
  v4 = sub_237A882BC();
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886B8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_237A882B0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v4);
}

uint64_t DecodableDefault.hashValue.getter()
{
  sub_237A885D4();
  DecodableDefault.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379C1604@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return DecodableDefault.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_2379C1624(_QWORD *a1, uint64_t *a2)
{
  return DecodableDefault.encode(to:)(a1, a2);
}

uint64_t sub_2379C1640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2379C164C(a1, a2, a3, (void (*)(_BYTE *, uint64_t))DecodableDefault.hash(into:));
}

uint64_t sub_2379C164C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_237A885D4();
  a4(v7, a2);
  return sub_237A88610();
}

uint64_t sub_2379C1698()
{
  return static DecodableDefault.== infix(_:_:)();
}

uint64_t static False.default.getter()
{
  return 0;
}

uint64_t static True.default.getter()
{
  return 1;
}

uint64_t static EmptyString.default.getter()
{
  return 0;
}

void sub_2379C16C0(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t static MinimumSDKVersionString.default.getter()
{
  return 808335153;
}

void sub_2379C16DC(_QWORD *a1@<X8>)
{
  *a1 = 808335153;
  a1[1] = 0xE400000000000000;
}

uint64_t static EmptyValue.default.getter()
{
  return sub_237A87D04();
}

uint64_t sub_2379C1714()
{
  return static EmptyValue.default.getter();
}

uint64_t static EmptyDictionary.default.getter()
{
  return sub_237A87620();
}

uint64_t sub_2379C172C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static EmptyDictionary.default.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2379C1760@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static EmptyArray.default.getter(*(_QWORD *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t static FirstCase.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_237A87E0C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  sub_237A87D04();
  swift_getAssociatedConformanceWitness();
  sub_237A87C8C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  v11 = *(_QWORD *)(a1 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, a1);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v6, a1);
  __break(1u);
  return result;
}

uint64_t sub_2379C18E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FirstCase.default.getter(*(_QWORD *)(a1 + 16), a2);
}

uint64_t static EmptySet.default.getter()
{
  return sub_237A87638();
}

uint64_t sub_2379C18F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static EmptySet.default.getter();
  *a1 = result;
  return result;
}

uint64_t static Zero.default.getter()
{
  return 0;
}

uint64_t static One.default.getter()
{
  return 1;
}

void sub_2379C1934(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

double static ZeroDouble.default.getter()
{
  return 0.0;
}

float static ZeroFloat.default.getter()
{
  return 0.0;
}

void sub_2379C1950(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

float static OneFloat.default.getter()
{
  return 0.0;
}

uint64_t sub_2379C1960(uint64_t a1)
{
  return sub_2379C1A78(a1, &qword_25681E078, &qword_256820BC8, &qword_256825A38);
}

uint64_t static BlackColor.default.getter()
{
  return sub_2378E39D4(&qword_25681E418);
}

uint64_t sub_2379C19A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2379C1A10(&qword_25681E418, &qword_256825A38, a1);
}

uint64_t sub_2379C19BC()
{
  uint64_t result;

  result = sub_237A87200();
  qword_256825A40 = result;
  return result;
}

uint64_t static ClearColor.default.getter()
{
  return sub_2378E39D4(&qword_25681E420);
}

uint64_t sub_2379C19F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_2379C1A10(&qword_25681E420, &qword_256825A40, a1);
}

uint64_t sub_2379C1A10@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_retain();
}

uint64_t sub_2379C1A54(uint64_t a1)
{
  return sub_2379C1A78(a1, &qword_25681E058, &qword_256820BA8, &qword_256825A48);
}

uint64_t sub_2379C1A78(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  if (*a2 != -1)
    swift_once();
  *a4 = *a3;
  return swift_retain();
}

uint64_t static MultiGaugePrimaryColor.default.getter()
{
  return sub_2378E39D4(&qword_25681E428);
}

uint64_t sub_2379C1AD8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2379C1A10(&qword_25681E428, &qword_256825A48, a1);
}

void static VehicleSpeedDataIdentifier.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 47;
}

void sub_2379C1B00(_BYTE *a1@<X8>)
{
  *a1 = 47;
}

double sub_2379C1B0C()
{
  double result;

  result = 0.0;
  xmmword_256825A50 = 0u;
  *(_OWORD *)&qword_256825A60 = 0u;
  return result;
}

double static EmptyEdgeInsets.default.getter()
{
  if (qword_25681E430 != -1)
    swift_once();
  return *(double *)&xmmword_256825A50;
}

double sub_2379C1B68@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_25681E430 != -1)
    swift_once();
  result = *(double *)&xmmword_256825A50;
  v3 = *(_OWORD *)&qword_256825A60;
  *a1 = xmmword_256825A50;
  a1[1] = v3;
  return result;
}

uint64_t static TopVerticalEdge.default.getter()
{
  return 0;
}

double static EmptyTexture.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)&result = 254;
  *(_OWORD *)(a1 + 32) = xmmword_237A9FA20;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

double sub_2379C1BE4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)&result = 254;
  *(_OWORD *)(a1 + 32) = xmmword_237A9FA20;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

void static DefaultCenter.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void type metadata accessor for DecodableNil.CodingKeys()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t type metadata accessor for DecodableDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DecodableDefault);
}

uint64_t type metadata accessor for DecodableDefault.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DecodableDefault.CodingKeys);
}

void sub_2379C1C34()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C1C44()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379C1C54()
{
  return MEMORY[0x24BEE1348];
}

uint64_t sub_2379C1C60()
{
  return MEMORY[0x24BEE1330];
}

uint64_t sub_2379C1C6C()
{
  return MEMORY[0x24BEE1340];
}

uint64_t sub_2379C1C78()
{
  return MEMORY[0x24BEE0D38];
}

uint64_t sub_2379C1C84()
{
  return MEMORY[0x24BEE0D08];
}

uint64_t sub_2379C1C90()
{
  return MEMORY[0x24BEE0D28];
}

uint64_t sub_2379C1C9C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_2379C1CA4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_2379C1CAC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_2379C1CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v2 = *(_QWORD *)(a2 + 56);
  v4[0] = *(_QWORD *)(a2 + 32);
  v4[1] = v2;
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE04E0], a1, v4);
}

uint64_t sub_2379C1CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v2 = *(_QWORD *)(a2 + 64);
  v4[0] = *(_QWORD *)(a2 + 40);
  v4[1] = v2;
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE04C0], a1, v4);
}

uint64_t sub_2379C1D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 72);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE04D0], a1, &v3);
}

uint64_t sub_2379C1D64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE12D0], a1, &v3);
}

uint64_t sub_2379C1D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 32);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE12A0], a1, &v3);
}

uint64_t sub_2379C1DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 40);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE12C0], a1, &v3);
}

uint64_t sub_2379C1E0C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 48);
}

uint64_t sub_2379C1E14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE1720], a1, &v3);
}

uint64_t sub_2379C1E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 32);
  return MEMORY[0x23B81FA98](MEMORY[0x24BEE1700], a1, &v3);
}

void sub_2379C1E84()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379C1E94()
{
  return MEMORY[0x24BEE1798];
}

uint64_t sub_2379C1EA0()
{
  return MEMORY[0x24BEE1770];
}

uint64_t sub_2379C1EAC()
{
  return MEMORY[0x24BEE1788];
}

uint64_t sub_2379C1EB8()
{
  return MEMORY[0x24BEE1400];
}

uint64_t sub_2379C1EC4()
{
  return MEMORY[0x24BEE13D8];
}

uint64_t sub_2379C1ED0()
{
  return MEMORY[0x24BEE13F8];
}

uint64_t sub_2379C1EDC()
{
  return MEMORY[0x24BEE1520];
}

uint64_t sub_2379C1EE8()
{
  return MEMORY[0x24BEE14F8];
}

uint64_t sub_2379C1EF4()
{
  return MEMORY[0x24BEE1518];
}

unint64_t sub_2379C1F0C()
{
  unint64_t result;

  result = qword_256825D10;
  if (!qword_256825D10)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDF3E60], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_256825D10);
  }
  return result;
}

unint64_t sub_2379C1F5C()
{
  unint64_t result;

  result = qword_256825DA8;
  if (!qword_256825DA8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for InstrumentDataIdentifier, &type metadata for InstrumentDataIdentifier);
    atomic_store(result, (unint64_t *)&qword_256825DA8);
  }
  return result;
}

unint64_t sub_2379C1FAC()
{
  unint64_t result;

  result = qword_256825E10;
  if (!qword_256825E10)
  {
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEBDB8], MEMORY[0x24BDEBDA8]);
    atomic_store(result, (unint64_t *)&qword_256825E10);
  }
  return result;
}

unint64_t sub_2379C1FF4()
{
  unint64_t result;

  result = qword_256825E48;
  if (!qword_256825E48)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture, &type metadata for Texture);
    atomic_store(result, (unint64_t *)&qword_256825E48);
  }
  return result;
}

unint64_t sub_2379C203C()
{
  unint64_t result;

  result = qword_256825E50;
  if (!qword_256825E50)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Texture, &type metadata for Texture);
    atomic_store(result, (unint64_t *)&qword_256825E50);
  }
  return result;
}

uint64_t sub_2379C208C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237A87E0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2379C20F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_2379C21D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_2379C222C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_2379C22C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_2379C23A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_2379C243C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_2379C251C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_2379C265C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_2379C2804()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2379C280C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_2379C2830()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2379C2838()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2379C28B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_2379C2940(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_2379C2988(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2379C29DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2379C2A30(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2379C2A84(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2379C2AD8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_2379C2C14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t dispatch thunk of static DefaultValueProvider.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for False()
{
  return &type metadata for False;
}

ValueMetadata *type metadata accessor for True()
{
  return &type metadata for True;
}

ValueMetadata *type metadata accessor for EmptyString()
{
  return &type metadata for EmptyString;
}

ValueMetadata *type metadata accessor for MinimumSDKVersionString()
{
  return &type metadata for MinimumSDKVersionString;
}

void type metadata accessor for EmptyValue()
{
  JUMPOUT(0x23B81F9FCLL);
}

uint64_t sub_2379C2E38()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for EmptyDictionary()
{
  JUMPOUT(0x23B81F9FCLL);
}

void type metadata accessor for EmptyArray()
{
  JUMPOUT(0x23B81F9FCLL);
}

void type metadata accessor for FirstCase()
{
  JUMPOUT(0x23B81F9FCLL);
}

void type metadata accessor for EmptySet()
{
  JUMPOUT(0x23B81F9FCLL);
}

ValueMetadata *type metadata accessor for Zero()
{
  return &type metadata for Zero;
}

ValueMetadata *type metadata accessor for One()
{
  return &type metadata for One;
}

ValueMetadata *type metadata accessor for ZeroDouble()
{
  return &type metadata for ZeroDouble;
}

ValueMetadata *type metadata accessor for ZeroFloat()
{
  return &type metadata for ZeroFloat;
}

ValueMetadata *type metadata accessor for OneFloat()
{
  return &type metadata for OneFloat;
}

ValueMetadata *type metadata accessor for BlackColor()
{
  return &type metadata for BlackColor;
}

ValueMetadata *type metadata accessor for ClearColor()
{
  return &type metadata for ClearColor;
}

ValueMetadata *type metadata accessor for MultiGaugePrimaryColor()
{
  return &type metadata for MultiGaugePrimaryColor;
}

ValueMetadata *type metadata accessor for VehicleSpeedDataIdentifier()
{
  return &type metadata for VehicleSpeedDataIdentifier;
}

ValueMetadata *type metadata accessor for EmptyEdgeInsets()
{
  return &type metadata for EmptyEdgeInsets;
}

ValueMetadata *type metadata accessor for TopVerticalEdge()
{
  return &type metadata for TopVerticalEdge;
}

ValueMetadata *type metadata accessor for EmptyTexture()
{
  return &type metadata for EmptyTexture;
}

ValueMetadata *type metadata accessor for DefaultCenter()
{
  return &type metadata for DefaultCenter;
}

uint64_t sub_2379C2F44(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2379C2F84 + 4 * byte_237A9FA4C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2379C2FA4 + 4 * byte_237A9FA51[v4]))();
}

_BYTE *sub_2379C2F84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2379C2FA4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379C2FAC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379C2FB4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2379C2FBC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2379C2FC4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_2379C2FD0()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C2FE0()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C2FF0()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C3000()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C3010()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C3020()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379C3038(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v27;
  __int128 v28;
  ValueMetadata *v29;
  _UNKNOWN **v30;
  int64_t v31;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v31 = v5;
  for (i = v6 | (v5 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v12 = *(_QWORD *)(a1 + 56) + 48 * i;
    v13 = *(void **)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(void **)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    v17 = *(_BYTE *)(v12 + 32);
    v27 = *(_QWORD *)(v12 + 40);
    v18 = *a2;
    sub_237870090(*(void **)v12, v14, v15, v16, v17);
    sub_237870090(v13, v14, v15, v16, v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v18 = sub_237895520(0, v18[2] + 1, 1, v18);
      *a2 = v18;
    }
    v21 = v18[2];
    v20 = v18[3];
    if (v21 >= v20 >> 1)
    {
      v18 = sub_237895520((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
      *a2 = v18;
    }
    v29 = &type metadata for ImageAsset;
    v30 = &protocol witness table for ImageAsset;
    v22 = swift_allocObject();
    *(_QWORD *)&v28 = v22;
    *(_QWORD *)(v22 + 16) = v13;
    *(_QWORD *)(v22 + 24) = v14;
    *(_QWORD *)(v22 + 32) = v15;
    *(_QWORD *)(v22 + 40) = v16;
    *(_BYTE *)(v22 + 48) = v17;
    *(_QWORD *)(v22 + 56) = v27;
    v18[2] = v21 + 1;
    sub_237870734(&v28, (uint64_t)&v18[5 * v21 + 4]);
    sub_2378702E0(v13, v14, v15, v16, v17);
    v5 = v31;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v24)
      goto LABEL_27;
    v9 = *(_QWORD *)(v23 + 8 * v8);
    v10 = v5 + 1;
    if (!v9)
    {
      v10 = v5 + 2;
      if (v5 + 2 >= v24)
        goto LABEL_27;
      v9 = *(_QWORD *)(v23 + 8 * v10);
      if (!v9)
      {
        v10 = v5 + 3;
        if (v5 + 3 >= v24)
          goto LABEL_27;
        v9 = *(_QWORD *)(v23 + 8 * v10);
        if (!v9)
        {
          v10 = v5 + 4;
          if (v5 + 4 >= v24)
            goto LABEL_27;
          v9 = *(_QWORD *)(v23 + 8 * v10);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v9 - 1) & v9;
    v31 = v10;
  }
  v11 = v5 + 5;
  if (v5 + 5 >= v24)
  {
LABEL_27:
    swift_release();
    return;
  }
  v9 = *(_QWORD *)(v23 + 8 * v11);
  if (v9)
  {
    v10 = v5 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v24)
      goto LABEL_27;
    v9 = *(_QWORD *)(v23 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

_QWORD *MeasurementLabelConfiguration.assets.getter()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  ValueMetadata *v28;
  _UNKNOWN **v29;
  _QWORD *v30;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 3);
  v4 = v0[32];
  v5 = v0[33];
  v6 = *((_QWORD *)v0 + 5);
  v7 = *((_QWORD *)v0 + 6);
  v25 = *((_QWORD *)v0 + 24);
  v26 = (void *)*((_QWORD *)v0 + 26);
  v22 = *((_QWORD *)v0 + 27);
  v23 = *((_QWORD *)v0 + 25);
  v24 = *((_QWORD *)v0 + 28);
  v20 = *((_QWORD *)v0 + 30);
  v21 = *((_QWORD *)v0 + 29);
  v8 = *((id *)v0 + 2);
  swift_bridgeObjectRetain();
  v9 = sub_237895520(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_237895520((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v28 = &type metadata for InstrumentFont;
  v29 = &protocol witness table for InstrumentFont;
  v12 = swift_allocObject();
  *(_QWORD *)&v27 = v12;
  *(_BYTE *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = v2;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v3;
  *(_BYTE *)(v12 + 48) = v4;
  *(_BYTE *)(v12 + 49) = v5;
  *(_QWORD *)(v12 + 56) = v6;
  *(_QWORD *)(v12 + 64) = v7;
  v9[2] = v11 + 1;
  sub_237870734(&v27, (uint64_t)&v9[5 * v11 + 4]);
  v30 = v9;
  if (v26)
  {
    v14 = v9[2];
    v13 = v9[3];
    v15 = v26;
    swift_bridgeObjectRetain_n();
    v16 = v15;
    if (v14 >= v13 >> 1)
      v9 = sub_237895520((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
    v28 = &type metadata for InstrumentFont;
    v29 = &protocol witness table for InstrumentFont;
    v17 = swift_allocObject();
    *(_QWORD *)&v27 = v17;
    *(_BYTE *)(v17 + 16) = v25;
    *(_QWORD *)(v17 + 24) = v23;
    *(_QWORD *)(v17 + 32) = v16;
    *(_QWORD *)(v17 + 40) = v22;
    *(_BYTE *)(v17 + 48) = v24 & 1;
    *(_BYTE *)(v17 + 49) = BYTE1(v24) & 1;
    *(_QWORD *)(v17 + 56) = v21;
    *(_QWORD *)(v17 + 64) = v20;
    v9[2] = v14 + 1;
    sub_237870734(&v27, (uint64_t)&v9[5 * v14 + 4]);
    sub_2378886C4(v25, v23, v26);
    v30 = v9;
  }
  v18 = swift_bridgeObjectRetain();
  sub_2379C3038(v18, &v30);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t MeasurementLabelConfiguration.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v4 = *(_QWORD *)(v1 + 248);
  v5 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  v6 = sub_237883AA4(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_237888708, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 248) = v6;
  }
  return result;
}

uint64_t static MeasurementLabelConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t static MeasurementLabelConfiguration.ColorIDs.defaultState.getter()
{
  return 0;
}

uint64_t MeasurementLabelConfiguration.ColorIDs.iconColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.valueColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.unitColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.iconRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.valueRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.unitRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23787A11C(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(iconColorIDs:valueColorIDs:unitColorIDs:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_23787A134(*(_QWORD *)a6, *(_QWORD *)(a6 + 8), *(_BYTE *)(a6 + 16));
  v13 = *(_BYTE *)(a4 + 16);
  v14 = *(_QWORD *)a5;
  v15 = *(_QWORD *)(a5 + 8);
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_OWORD *)(a7 + 24) = *(_OWORD *)a4;
  *(_BYTE *)(a7 + 40) = v13;
  *(_QWORD *)(a7 + 48) = v14;
  *(_QWORD *)(a7 + 56) = v15;
  v16 = *(_BYTE *)(a5 + 16);
  *(_BYTE *)(a7 + 64) = v16;
  *(_QWORD *)(a7 + 72) = v14;
  *(_QWORD *)(a7 + 80) = v15;
  *(_BYTE *)(a7 + 88) = v16;
  return sub_23787A11C(v14, v15, v16);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(iconColorID:valueColorID:unitColorID:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t inited;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  v8 = *a1;
  v9 = a1[1];
  v10 = *((_BYTE *)a1 + 16);
  v11 = *a2;
  v12 = a2[1];
  v13 = *((_BYTE *)a2 + 16);
  v22 = a3[1];
  v23 = *a3;
  v21 = *((_BYTE *)a3 + 16);
  v31 = a4[1];
  v32 = *a4;
  v30 = *((_BYTE *)a4 + 16);
  v28 = a5[1];
  v29 = *a5;
  v27 = *((_BYTE *)a5 + 16);
  v25 = a6[1];
  v26 = *a6;
  v24 = *((_BYTE *)a6 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256821698);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 48) = v9;
  *(_BYTE *)(inited + 56) = v10;
  v15 = sub_2378D49A0(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216A0);
  swift_arrayDestroy();
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = v11;
  *(_QWORD *)(v16 + 48) = v12;
  *(_BYTE *)(v16 + 56) = v13;
  v17 = sub_2378D49A0(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_237A8A9F0;
  *(_QWORD *)(v18 + 32) = 0;
  *(_QWORD *)(v18 + 40) = v23;
  *(_QWORD *)(v18 + 48) = v22;
  *(_BYTE *)(v18 + 56) = v21;
  v19 = sub_2378D49A0(v18);
  swift_setDeallocating();
  result = swift_arrayDestroy();
  *(_QWORD *)a7 = v15;
  *(_QWORD *)(a7 + 8) = v17;
  *(_QWORD *)(a7 + 16) = v19;
  *(_QWORD *)(a7 + 24) = v32;
  *(_QWORD *)(a7 + 32) = v31;
  *(_BYTE *)(a7 + 40) = v30;
  *(_QWORD *)(a7 + 48) = v29;
  *(_QWORD *)(a7 + 56) = v28;
  *(_BYTE *)(a7 + 64) = v27;
  *(_QWORD *)(a7 + 72) = v26;
  *(_QWORD *)(a7 + 80) = v25;
  *(_BYTE *)(a7 + 88) = v24;
  return result;
}

uint64_t MeasurementLabelConfiguration.ColorIDs.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 56);
  v12 = *(_QWORD *)(v1 + 48);
  v14 = *(_QWORD *)(v1 + 80);
  v15 = *(_QWORD *)(v1 + 72);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = *(_BYTE *)(v1 + 64);
  v13 = *(_BYTE *)(v1 + 88);
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_237876E24(a1, v5);
  swift_bridgeObjectRelease();
  sub_23787A11C(v6, v7, v9);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v6, v7, v9);
  sub_23787A11C(v12, v8, v10);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  sub_23787A134(v12, v8, v10);
  sub_23787A11C(v15, v14, v13);
  Theme.ColorID.rawValue.getter();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_23787A134(v15, v14, v13);
}

uint64_t sub_2379C3AA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379C3AE4 + 4 * byte_237AA0240[a1]))(0x6F6C6F436E6F6369, 0xEC00000073444972);
}

uint64_t sub_2379C3AE4()
{
  return 0x6C6F4365756C6176;
}

uint64_t sub_2379C3B08()
{
  return 0x6F6C6F4374696E75;
}

unint64_t sub_2379C3B1C()
{
  return 0xD000000000000013;
}

uint64_t sub_2379C3B64()
{
  unsigned __int8 *v0;

  return sub_2379C3AA8(*v0);
}

uint64_t sub_2379C3B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379C8940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379C3B90()
{
  sub_2379C7658();
  return sub_237A88718();
}

uint64_t sub_2379C3BB8()
{
  sub_2379C7658();
  return sub_237A88724();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826338);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v24 = v1[2];
  v25 = v8;
  v10 = v1[3];
  v22 = v1[4];
  v23 = v10;
  v29 = *((unsigned __int8 *)v1 + 40);
  v11 = v1[6];
  v21 = v1[7];
  v20 = *((unsigned __int8 *)v1 + 64);
  v16 = v1[9];
  v18 = v1[10];
  v19 = v11;
  v17 = *((unsigned __int8 *)v1 + 88);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379C7658();
  sub_237A886B8();
  v26 = v9;
  v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  sub_237919B10((unint64_t *)&qword_2568216C0, (uint64_t (*)(void))sub_23787AA5C, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_237A882B0();
  if (!v2)
  {
    v13 = v23;
    v12 = v24;
    v26 = v25;
    v30 = 1;
    sub_237A882B0();
    v26 = v12;
    v30 = 2;
    sub_237A882B0();
    v26 = v13;
    v27 = v22;
    v28 = v29;
    v30 = 3;
    sub_23787AA5C();
    sub_237A882B0();
    v26 = v19;
    v27 = v21;
    v28 = v20;
    v30 = 4;
    sub_237A882B0();
    v26 = v16;
    v27 = v18;
    v28 = v17;
    v30 = 5;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _BYTE v6[72];
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  __int128 v11;
  char v12;
  __int128 v13;
  char v14;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 40);
  v3 = *((_BYTE *)v0 + 64);
  v4 = *((_BYTE *)v0 + 88);
  v7 = *v0;
  v8 = v1;
  v9 = *(__int128 *)((char *)v0 + 24);
  v10 = v2;
  v11 = v0[3];
  v12 = v3;
  v13 = *(__int128 *)((char *)v0 + 72);
  v14 = v4;
  sub_237A885D4();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  int v45;
  char v46;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826348);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379C7658();
  sub_237A88688();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v41 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568216B8);
  v46 = 0;
  sub_237919B10((unint64_t *)&qword_2568216D8, (uint64_t (*)(void))sub_23787AB8C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
  sub_237A881F0();
  v9 = v42;
  v46 = 1;
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v40 = v9;
  v10 = v42;
  v46 = 2;
  swift_bridgeObjectRetain();
  sub_237A881F0();
  v39 = v10;
  v11 = v42;
  v46 = 3;
  v12 = sub_23787AB8C();
  swift_bridgeObjectRetain();
  v38 = 0;
  sub_237A881F0();
  v33 = v11;
  v14 = v42;
  v13 = v43;
  v15 = v12;
  LODWORD(v12) = v44;
  v46 = 4;
  sub_23787A11C(v42, v43, v44);
  v32 = v15;
  sub_237A881F0();
  v35 = v12;
  v36 = v14;
  v37 = v13;
  v17 = v42;
  v16 = v43;
  v46 = 5;
  v45 = v44;
  sub_23787A11C(v42, v43, v44);
  sub_237A881F0();
  v34 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = v42;
  v19 = v43;
  v32 = v43;
  LODWORD(v38) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v36;
  sub_23787A11C(v36, v37, v12);
  v22 = v45;
  sub_23787A11C(v17, v16, v45);
  v31 = v20;
  sub_23787A11C(v20, v19, v38);
  sub_23787A134(v17, v16, v22);
  v23 = v37;
  LOBYTE(v16) = v12;
  sub_23787A134(v21, v37, v12);
  v24 = v40;
  swift_bridgeObjectRelease();
  v25 = v39;
  swift_bridgeObjectRelease();
  v26 = v33;
  swift_bridgeObjectRelease();
  v27 = v41;
  *v41 = v24;
  v27[1] = v25;
  v28 = v36;
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v23;
  *((_BYTE *)v27 + 40) = v16;
  v29 = v34;
  v27[6] = v17;
  v27[7] = v29;
  LOBYTE(v23) = v45;
  *((_BYTE *)v27 + 64) = v45;
  v27[9] = v20;
  v30 = v32;
  v27[10] = v32;
  *((_BYTE *)v27 + 88) = v38;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(v28, v37, v35);
  sub_23787A134(v17, v29, v23);
  return sub_23787A134(v31, v30, v38);
}

uint64_t sub_2379C4518@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MeasurementLabelConfiguration.ColorIDs.init(from:)(a1, a2);
}

uint64_t sub_2379C452C(_QWORD *a1)
{
  return MeasurementLabelConfiguration.ColorIDs.encode(to:)(a1);
}

uint64_t sub_2379C4540()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _BYTE v6[72];
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  __int128 v11;
  char v12;
  __int128 v13;
  char v14;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 40);
  v3 = *((_BYTE *)v0 + 64);
  v4 = *((_BYTE *)v0 + 88);
  v7 = *v0;
  v8 = v1;
  v9 = *(__int128 *)((char *)v0 + 24);
  v10 = v2;
  v11 = v0[3];
  v12 = v3;
  v13 = *(__int128 *)((char *)v0 + 72);
  v14 = v4;
  sub_237A885D4();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

uint64_t sub_2379C45C4()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _BYTE v6[72];
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  __int128 v11;
  char v12;
  __int128 v13;
  char v14;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 40);
  v3 = *((_BYTE *)v0 + 64);
  v4 = *((_BYTE *)v0 + 88);
  v7 = *v0;
  v8 = v1;
  v9 = *(__int128 *)((char *)v0 + 24);
  v10 = v2;
  v11 = v0[3];
  v12 = v3;
  v13 = *(__int128 *)((char *)v0 + 72);
  v14 = v4;
  sub_237A885D4();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_237A88610();
}

void static MeasurementLabelConfiguration.Alignment.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional __swiftcall MeasurementLabelConfiguration.Alignment.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5)
    LOBYTE(v2) = 4;
  *v1 = v2;
  return (CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional)rawValue;
}

uint64_t MeasurementLabelConfiguration.Alignment.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional sub_2379C4684(Swift::Int *a1)
{
  return MeasurementLabelConfiguration.Alignment.init(rawValue:)(*a1);
}

uint64_t sub_2379C468C()
{
  sub_2379C91A4();
  return sub_237A87A40();
}

uint64_t sub_2379C46E8()
{
  sub_2379C91A4();
  return sub_237A879F8();
}

uint64_t MeasurementLabelConfiguration.font.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 33);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379C4784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 33);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)a2 = *(_BYTE *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 33) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  v9 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379C47D4(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[32];
  v7 = a1[33];
  v9 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 6);
  v10 = *(void **)(a2 + 16);
  v11 = *((id *)a1 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  *(_BYTE *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 33) = v7;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v8;
  return sub_2379C48F0();
}

uint64_t MeasurementLabelConfiguration.font.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[32];
  v7 = a1[33];
  v8 = *((_QWORD *)a1 + 5);
  v9 = *((_QWORD *)a1 + 6);
  v10 = *(void **)(v1 + 16);
  swift_bridgeObjectRelease();

  *(_BYTE *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 32) = v6;
  *(_BYTE *)(v1 + 33) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  return sub_2379C48F0();
}

uint64_t sub_2379C48F0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  double v5;
  uint64_t result;
  float v7;

  v1 = v0;
  v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v3 = InstrumentFont.cpFont.getter();
  v4 = sub_237A4C888();

  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(double *)(v4 + 32);
    swift_bridgeObjectRelease();

    result = swift_bridgeObjectRelease();
    v7 = v5;
    *(float *)(v1 + 260) = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    result = sub_237A880AC();
    __break(1u);
  }
  return result;
}

uint64_t (*MeasurementLabelConfiguration.font.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  return sub_2379C4A1C;
}

uint64_t sub_2379C4A1C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return sub_2379C48F0();
  return result;
}

uint64_t MeasurementLabelConfiguration.colorIDs.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 112);
  v8 = *(_QWORD *)(v1 + 136);
  v13 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v10 = *(_BYTE *)(v1 + 120);
  *(_BYTE *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v8;
  v11 = *(_BYTE *)(v1 + 144);
  *(_BYTE *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v4, v5, v9);
  sub_23787A11C(v6, v7, v10);
  return sub_23787A11C(v13, v8, v11);
}

__n128 MeasurementLabelConfiguration.colorIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  __n128 result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __n128 v21;

  v21 = *(__n128 *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 32);
  v19 = *(_BYTE *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 88);
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 136);
  v12 = *(_QWORD *)(v1 + 128);
  v7 = *(_BYTE *)(v1 + 96);
  v8 = *(_BYTE *)(v1 + 120);
  v10 = *(_BYTE *)(v1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(v3, v4, v7);
  sub_23787A134(v5, v6, v8);
  sub_23787A134(v12, v11, v10);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  result = v21;
  *(__n128 *)(v1 + 72) = v21;
  *(_QWORD *)(v1 + 88) = v20;
  *(_BYTE *)(v1 + 96) = v19;
  *(_QWORD *)(v1 + 104) = v18;
  *(_QWORD *)(v1 + 112) = v17;
  *(_BYTE *)(v1 + 120) = v16;
  *(_QWORD *)(v1 + 128) = v15;
  *(_QWORD *)(v1 + 136) = v14;
  *(_BYTE *)(v1 + 144) = v13;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.precision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t MeasurementLabelConfiguration.precision.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.precision.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.divider.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t MeasurementLabelConfiguration.divider.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.divider.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.defaultUnitLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MeasurementLabelConfiguration.defaultUnitLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = a2;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.defaultUnitLabel.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.unitLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.unitLabels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 184) = a1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.unitLabels.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.unitFont.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[24];
  v3 = v1[25];
  v4 = (void *)v1[26];
  v5 = v1[27];
  v6 = v1[28];
  v7 = v1[29];
  v8 = v1[30];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2378884CC(v2, v3, v4);
}

__n128 MeasurementLabelConfiguration.unitFont.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_2378886C4(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200), *(void **)(v1 + 208));
  *(_OWORD *)(v1 + 192) = v6;
  *(_OWORD *)(v1 + 208) = v5;
  result = v4;
  *(__n128 *)(v1 + 224) = v4;
  *(_QWORD *)(v1 + 240) = v2;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.unitFont.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.statefulImages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.statefulImages.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 248) = a1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.statefulImages.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.imagePadding.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 256);
}

void MeasurementLabelConfiguration.imagePadding.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 256) = a1;
}

uint64_t (*MeasurementLabelConfiguration.imagePadding.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.labelSpacing.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 260);
}

void MeasurementLabelConfiguration.labelSpacing.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 260) = a1;
}

uint64_t (*MeasurementLabelConfiguration.labelSpacing.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.valueYOffset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 264);
}

void MeasurementLabelConfiguration.valueYOffset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 264) = a1;
}

uint64_t (*MeasurementLabelConfiguration.valueYOffset.modify())()
{
  return nullsub_1;
}

unint64_t MeasurementLabelConfiguration.valueTracking.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 268) | ((unint64_t)*(unsigned __int8 *)(v0 + 272) << 32);
}

uint64_t MeasurementLabelConfiguration.valueTracking.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 268) = result;
  *(_BYTE *)(v1 + 272) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.valueTracking.modify())()
{
  return nullsub_1;
}

void MeasurementLabelConfiguration.alignment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 273);
}

_BYTE *MeasurementLabelConfiguration.alignment.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 273) = *result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.alignment.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:images:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)@<X0>(uint64_t result@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12, uint64_t a13, int a14, char a15, char *a16)
{
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  __int128 v31;
  char v32;
  __int128 v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  float v40;
  id v41;
  uint64_t v42;
  double v43;
  id v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v19 = *(_BYTE *)result;
  v20 = *(_QWORD *)(result + 8);
  v21 = *(void **)(result + 16);
  v22 = *(_QWORD *)(result + 24);
  v23 = *(_BYTE *)(result + 32);
  v24 = *(_BYTE *)(result + 33);
  v25 = *(_QWORD *)(result + 40);
  v26 = *(_QWORD *)(result + 48);
  v27 = *a2;
  v28 = *((_QWORD *)a2 + 2);
  v29 = *(__int128 *)((char *)a2 + 24);
  v30 = *((_BYTE *)a2 + 40);
  v31 = a2[3];
  v32 = *((_BYTE *)a2 + 64);
  v33 = *(__int128 *)((char *)a2 + 72);
  v34 = *((_BYTE *)a2 + 88);
  v35 = *a8;
  v36 = a8[1];
  v37 = a8[2];
  v38 = *((_QWORD *)a8 + 6);
  v39 = *a16;
  if ((a13 & 0x100000000) == 0)
  {
    v40 = *(float *)&a13;
LABEL_5:
    *(_BYTE *)a9 = v19;
    *(_QWORD *)(a9 + 8) = v20;
    *(_QWORD *)(a9 + 16) = v21;
    *(_QWORD *)(a9 + 24) = v22;
    *(_BYTE *)(a9 + 32) = v23;
    *(_BYTE *)(a9 + 33) = v24;
    *(_QWORD *)(a9 + 40) = v25;
    *(_QWORD *)(a9 + 48) = v26;
    *(_OWORD *)(a9 + 56) = v27;
    *(_QWORD *)(a9 + 72) = v28;
    *(_OWORD *)(a9 + 80) = v29;
    *(_BYTE *)(a9 + 96) = v30;
    *(_OWORD *)(a9 + 104) = v31;
    *(_BYTE *)(a9 + 120) = v32;
    *(_OWORD *)(a9 + 128) = v33;
    *(_BYTE *)(a9 + 144) = v34;
    *(_QWORD *)(a9 + 152) = a3;
    *(_QWORD *)(a9 + 160) = a4;
    *(_QWORD *)(a9 + 168) = a5;
    *(_QWORD *)(a9 + 176) = a6;
    *(_QWORD *)(a9 + 184) = a7;
    *(_OWORD *)(a9 + 192) = v35;
    *(_OWORD *)(a9 + 208) = v36;
    *(_OWORD *)(a9 + 224) = v37;
    *(_QWORD *)(a9 + 240) = v38;
    *(_QWORD *)(a9 + 248) = a12;
    *(float *)(a9 + 256) = a10;
    *(float *)(a9 + 260) = v40;
    *(float *)(a9 + 264) = a11;
    *(_DWORD *)(a9 + 268) = a14;
    *(_BYTE *)(a9 + 272) = a15 & 1;
    *(_BYTE *)(a9 + 273) = v39;
    return result;
  }
  v45 = *((_BYTE *)a2 + 88);
  v46 = *((_BYTE *)a2 + 64);
  v47 = *((_BYTE *)a2 + 40);
  v48 = *((_QWORD *)a2 + 2);
  v49 = *(__int128 *)((char *)a2 + 72);
  v50 = a2[3];
  v51 = *(__int128 *)((char *)a2 + 24);
  v52 = *a2;
  v53 = *((_QWORD *)a8 + 6);
  v54 = a8[2];
  v55 = a8[1];
  v56 = *a8;
  v57 = *a16;
  v58 = a3;
  v59 = a4;
  v60 = a5;
  v61 = a6;
  v62 = a7;
  v44 = v21;
  swift_bridgeObjectRetain();
  v41 = InstrumentFont.cpFont.getter();
  v42 = sub_237A4C888();

  if (*(_QWORD *)(v42 + 16))
  {
    v43 = *(double *)(v42 + 32);
    swift_bridgeObjectRelease();

    result = swift_bridgeObjectRelease();
    v40 = v43;
    a6 = v61;
    a7 = v62;
    a4 = v59;
    a5 = v60;
    a3 = v58;
    v39 = v57;
    v36 = v55;
    v35 = v56;
    v37 = v54;
    v38 = v53;
    v29 = v51;
    v27 = v52;
    v33 = v49;
    v31 = v50;
    v28 = v48;
    v32 = v46;
    v30 = v47;
    v34 = v45;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  result = sub_237A880AC();
  __break(1u);
  return result;
}

void *MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:image:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, float a10@<S0>, float a11@<S1>, __int128 *a12, unint64_t a13, unint64_t a14, char *a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52;
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  __int128 v59[3];
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;
  char v66;
  __int128 v67;
  char v68;
  _BYTE v69[8];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE __src[296];

  v15 = a7;
  v16 = a6;
  v17 = a5;
  v18 = a4;
  v22 = a9;
  v47 = *a1;
  v45 = *((_QWORD *)a1 + 2);
  v46 = *((_QWORD *)a1 + 1);
  v23 = *((_QWORD *)a1 + 3);
  v43 = a1[33];
  v44 = a1[32];
  v41 = *((_QWORD *)a1 + 6);
  v42 = *((_QWORD *)a1 + 5);
  v40 = *(_QWORD *)(a2 + 16);
  v50 = *(_OWORD *)(a2 + 24);
  v51 = *(_OWORD *)a2;
  v38 = *(_BYTE *)(a2 + 64);
  v39 = *(_BYTE *)(a2 + 40);
  v48 = *(_OWORD *)(a2 + 72);
  v49 = *(_OWORD *)(a2 + 48);
  v55 = *(_BYTE *)(a2 + 88);
  v53 = *(_OWORD *)(a8 + 16);
  v54 = *(_OWORD *)a8;
  v57 = *(_OWORD *)(a8 + 32);
  v56 = *(_QWORD *)(a8 + 48);
  v24 = *((_QWORD *)a12 + 4);
  v52 = *a15;
  if ((~*((_DWORD *)a12 + 8) & 0xFELL) != 0)
  {
    v35 = *((_QWORD *)a12 + 5);
    v30 = *((_QWORD *)a12 + 2);
    v29 = *((_QWORD *)a12 + 3);
    v34 = *a12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826350);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 0;
    *(_OWORD *)(inited + 16) = xmmword_237A8A9F0;
    *(_OWORD *)(inited + 40) = v34;
    *(_QWORD *)(inited + 56) = v30;
    *(_QWORD *)(inited + 64) = v29;
    v16 = a6;
    v17 = a5;
    v15 = a7;
    v18 = a4;
    v22 = a9;
    *(_BYTE *)(inited + 72) = v24;
    *(_QWORD *)(inited + 80) = v35;
    v25 = sub_2378D4854(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826358);
    swift_arrayDestroy();
  }
  else
  {
    v25 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  }
  v69[0] = v47;
  v70 = v46;
  v71 = v45;
  v72 = v23;
  v73 = v44;
  v74 = v43;
  v75 = v42;
  v76 = v41;
  v61 = v51;
  v62 = v40;
  v63 = v50;
  v64 = v39;
  v65 = v49;
  v66 = v38;
  v67 = v48;
  v68 = v55;
  v59[0] = v54;
  v59[1] = v53;
  v59[2] = v57;
  v60 = v56;
  v58 = v52;
  v33 = a14 | ((HIDWORD(a14) & 1) << 32);
  MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:images:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)((uint64_t)v69, &v61, a3, v18, v17, v16, v15, v59, (uint64_t)__src, a10, a11, v25, a13 | ((HIDWORD(a13) & 1) << 32), v33, SBYTE4(v33), &v58);
  return memcpy(v22, __src, 0x112uLL);
}

void sub_2379C541C(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[3];
  uint64_t v21;

  v5 = v4;
  v8 = *a1;
  v10 = *(_QWORD *)a2;
  v9 = *(void **)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(void **)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)&v17 = v9;
  *((_QWORD *)&v17 + 1) = v11;
  *(_QWORD *)&v18 = v12;
  *((_QWORD *)&v18 + 1) = v13;
  LOBYTE(v19) = v14;
  *((_QWORD *)&v19 + 1) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_237870090(v9, v11, v12, v13, v14);
  ImageAsset.restore(from:)(a3);
  if (v5)
  {
    sub_2378702E0(v9, v11, v12, v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20[0] = v17;
    v20[1] = v18;
    v20[2] = v19;
    sub_2379C9214((uint64_t)v20);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = v8;
    sub_237871E08(v20, v10, isUniquelyReferenced_nonNull_native);
    v16 = v21;
    swift_bridgeObjectRelease();
    sub_2378702E0((void *)v17, *((uint64_t *)&v17 + 1), (void *)v18, v13, v14);
    *a4 = v16;
  }
}

uint64_t MeasurementLabelConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(v1 + 176);
  v4 = *(_QWORD *)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 208);
  v7 = *(_QWORD *)(v1 + 248);
  v8 = *(unsigned __int8 *)(v1 + 272);
  InstrumentFont.hash(into:)();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)(a1);
  sub_237A885E0();
  sub_237A885E0();
  if (v3)
  {
    sub_237A885EC();
    swift_bridgeObjectRetain();
    sub_237A87710();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_237A885EC();
    if (v6)
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_237A885EC();
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_237A885EC();
  swift_bridgeObjectRetain();
  sub_237877240(a1, v4);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_4:
    sub_237A885EC();
    InstrumentFont.hash(into:)();
    goto LABEL_8;
  }
LABEL_7:
  sub_237A885EC();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_2378775A8(a1, v7);
  swift_bridgeObjectRelease();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885F8();
  sub_237A885EC();
  if (!v8)
    sub_237A885F8();
  return sub_237A885E0();
}

uint64_t sub_2379C5848(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379C5874 + 4 * byte_237AA0246[a1]))(1953394534, 0xE400000000000000);
}

uint64_t sub_2379C5874()
{
  return 0x734449726F6C6F63;
}

uint64_t sub_2379C588C()
{
  return 0x6F69736963657270;
}

uint64_t sub_2379C58A8()
{
  return 0x72656469766964;
}

unint64_t sub_2379C58C0()
{
  return 0xD000000000000010;
}

uint64_t sub_2379C58DC()
{
  return 0x6562614C74696E75;
}

uint64_t sub_2379C58F8()
{
  return 0x746E6F4674696E75;
}

uint64_t sub_2379C5910()
{
  return 0x6C75666574617473;
}

uint64_t sub_2379C5934()
{
  return 0x6461506567616D69;
}

uint64_t sub_2379C5958()
{
  return 0x6170536C6562616CLL;
}

uint64_t sub_2379C5978()
{
  return 0x664F5965756C6176;
}

uint64_t sub_2379C5998()
{
  return 0x61725465756C6176;
}

uint64_t sub_2379C59BC()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_2379C59DC()
{
  unsigned __int8 *v0;

  return sub_2379C5848(*v0);
}

uint64_t sub_2379C59E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379C8BF0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2379C5A08(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_2379C5A14()
{
  sub_2379C769C();
  return sub_237A88718();
}

uint64_t sub_2379C5A3C()
{
  sub_2379C769C();
  return sub_237A88724();
}

uint64_t MeasurementLabelConfiguration.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  int v57;
  char v58;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826360);
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *v1;
  v6 = *((_QWORD *)v1 + 1);
  v7 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v9 = v1[32];
  v10 = v1[33];
  v42 = *((_QWORD *)v1 + 5);
  v43 = v6;
  v41 = *((_QWORD *)v1 + 6);
  v40 = *(_OWORD *)(v1 + 56);
  v39 = *((_QWORD *)v1 + 9);
  v38 = *((_QWORD *)v1 + 10);
  v37 = *((_QWORD *)v1 + 11);
  v36 = v1[96];
  v35 = *((_QWORD *)v1 + 13);
  v34 = *((_QWORD *)v1 + 14);
  v33 = v1[120];
  v32 = *((_QWORD *)v1 + 16);
  v31 = *((_QWORD *)v1 + 17);
  v30 = v1[144];
  v29 = *((_QWORD *)v1 + 19);
  v28 = *((_QWORD *)v1 + 20);
  v27 = *((_QWORD *)v1 + 21);
  v26 = *((_QWORD *)v1 + 22);
  v25 = *((_QWORD *)v1 + 23);
  v19 = *((_OWORD *)v1 + 12);
  v20 = *((_QWORD *)v1 + 26);
  v21 = *((_QWORD *)v1 + 27);
  v24 = *((_QWORD *)v1 + 28);
  v23 = *((_QWORD *)v1 + 29);
  v22 = *((_QWORD *)v1 + 30);
  v11 = *((_DWORD *)v1 + 66);
  v16 = v1[272];
  v18 = *((_QWORD *)v1 + 31);
  v17 = *((unsigned int *)v1 + 67);
  v15 = v1[273];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379C769C();
  sub_237A886B8();
  LOBYTE(v46) = v57;
  *((_QWORD *)&v46 + 1) = v43;
  v47 = v7;
  v48 = v8;
  LOBYTE(v49) = v9;
  BYTE1(v49) = v10;
  v50 = v42;
  v51 = v41;
  v58 = 0;
  sub_237898A48();
  v12 = v44;
  sub_237A882B0();
  if (!v12)
  {
    v46 = v40;
    v47 = v39;
    v48 = v38;
    v49 = v37;
    LOBYTE(v50) = v36;
    v51 = v35;
    v52 = v34;
    v53 = v33;
    v54 = v32;
    v55 = v31;
    v56 = v30;
    v58 = 1;
    sub_2379C76E0();
    sub_237A882B0();
    LOBYTE(v46) = 2;
    sub_237A88298();
    LOBYTE(v46) = 3;
    sub_237A88298();
    LOBYTE(v46) = 4;
    sub_237A8822C();
    *(_QWORD *)&v46 = v25;
    v58 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821778);
    sub_23791A0C0(&qword_256821780, MEMORY[0x24BEE1770], MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_237A88268();
    v46 = v19;
    v47 = v20;
    v48 = v21;
    v49 = v24;
    v50 = v23;
    v51 = v22;
    v58 = 6;
    sub_237A88268();
    *(_QWORD *)&v46 = v18;
    v58 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
    sub_237888998(&qword_25681EDA0, (uint64_t (*)(void))sub_2378888DC, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
    sub_237A882B0();
    LOBYTE(v46) = 8;
    sub_237A8828C();
    LOBYTE(v46) = 9;
    sub_237A8828C();
    LODWORD(v46) = v11;
    v58 = 10;
    sub_237A882B0();
    LOBYTE(v46) = 11;
    v58 = v16;
    sub_237A88250();
    LOBYTE(v46) = v15;
    v58 = 12;
    sub_2379C7724();
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v5, v3);
}

uint64_t MeasurementLabelConfiguration.hashValue.getter()
{
  _BYTE v1[72];

  sub_237A885D4();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t MeasurementLabelConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  float v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[35];
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  uint64_t v79;
  char v80;
  _BYTE v81[7];
  uint64_t v82;
  uint64_t v83;
  char v84;
  _BYTE v85[7];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  float v101;
  int v102;
  char v103;
  char v104;
  char v105;
  unsigned __int8 v106;
  char v107;
  _BYTE v108[7];
  _BYTE v109[7];
  _BYTE v110[11];
  __int16 v111;
  _DWORD v112[3];
  uint64_t v113;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826380);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = 1;
  v9 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_2379C769C();
  sub_237A88688();
  if (v2)
  {
    v113 = 0;
    v61 = 0;
    v62 = 0;
    v59 = 0;
    v60 = 0;
    v58 = 0;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2378886C4(v58, v59, v60);
  }
  else
  {
    v42 = a2;
    LOBYTE(v63[0]) = 0;
    sub_237898B2C();
    sub_237A881F0();
    v41 = v64;
    v40 = v65;
    v11 = v67;
    v39 = v68;
    v12 = BYTE1(v68);
    v13 = v69;
    v55 = v66;
    v56 = v70;
    LOBYTE(v63[0]) = 1;
    sub_2379C7768();
    sub_237A881F0();
    v36 = v12;
    v37 = v13;
    v47 = (uint64_t)v66;
    v48 = v65;
    v44 = v64;
    v45 = v67;
    v46 = v68;
    v49 = v69;
    v50 = v70;
    v51 = v71;
    v52 = v72;
    v53 = v73;
    v14 = v74;
    v38 = v75;
    LOBYTE(v64) = 2;
    v15 = sub_237A881D8();
    v54 = v14;
    v16 = v15;
    LOBYTE(v64) = 3;
    v35 = sub_237A881D8();
    LOBYTE(v64) = 4;
    v33 = sub_237A8816C();
    v34 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256821778);
    LOBYTE(v63[0]) = 5;
    sub_23791A0C0(&qword_256821790, MEMORY[0x24BEE1798], MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_237A881A8();
    v18 = v64;
    LOBYTE(v63[0]) = 6;
    sub_237A881A8();
    v58 = v64;
    v59 = v65;
    v60 = v66;
    v61 = v67;
    v62 = v68;
    v113 = v69;
    v19 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25681ED98);
    LOBYTE(v63[0]) = 7;
    sub_237888998(&qword_25681EDC0, (uint64_t (*)(void))sub_237888A0C, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    sub_237A881F0();
    v43 = v64;
    LOBYTE(v64) = 8;
    sub_237A881CC();
    v21 = v20;
    LOBYTE(v64) = 9;
    sub_237A881CC();
    v23 = v22;
    LOBYTE(v63[0]) = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826390);
    sub_2379C77AC();
    sub_237A881A8();
    if (BYTE4(v64))
      v24 = 0.0;
    else
      LODWORD(v24) = v64;
    LOBYTE(v64) = 11;
    v32 = sub_237A88190();
    v31 = HIDWORD(v32) & 1;
    v107 = BYTE4(v32) & 1;
    v105 = 12;
    sub_2379C77F8();
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v63[34]) = v31;
    LODWORD(v31) = v106;
    LOBYTE(v63[0]) = v41;
    v25 = v55;
    v63[1] = v40;
    v63[2] = v55;
    v63[3] = v11;
    LOBYTE(v63[4]) = v39;
    BYTE1(v63[4]) = v36;
    v63[5] = v37;
    v63[6] = v56;
    v26 = v44;
    v27 = v45;
    v63[7] = v44;
    v63[8] = v48;
    v28 = v46;
    v63[9] = v47;
    v63[10] = v45;
    v63[11] = v46;
    LOBYTE(v63[12]) = v49;
    v63[13] = v50;
    v63[14] = v51;
    LOBYTE(v63[15]) = v52;
    v63[16] = v53;
    v63[17] = v54;
    LOBYTE(v63[18]) = v38;
    v63[19] = v16;
    v63[20] = v35;
    v63[21] = v33;
    v63[22] = v34;
    v63[23] = v18;
    v63[24] = v58;
    v63[25] = v59;
    v63[26] = v60;
    v63[27] = v61;
    v63[28] = v62;
    v63[29] = v113;
    v63[30] = v19;
    v30 = v19;
    v63[31] = v43;
    v63[32] = __PAIR64__(v23, v21);
    v63[33] = __PAIR64__(v32, LODWORD(v24));
    v29 = v32;
    BYTE1(v63[34]) = v106;
    memcpy(v42, v63, 0x112uLL);
    sub_237919BC8((uint64_t)v63);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    LOBYTE(v64) = v41;
    v65 = v40;
    v66 = v25;
    LOBYTE(v68) = v39;
    BYTE1(v68) = v36;
    *(_DWORD *)((char *)&v64 + 1) = v112[0];
    HIDWORD(v64) = *(_DWORD *)((char *)v112 + 3);
    *(_DWORD *)((char *)&v68 + 2) = *(_DWORD *)&v110[7];
    HIWORD(v68) = v111;
    v67 = v11;
    v69 = v37;
    v70 = v56;
    v71 = v26;
    v72 = v48;
    v73 = v47;
    v74 = v27;
    v75 = v28;
    v76 = v49;
    *(_DWORD *)v77 = *(_DWORD *)v110;
    *(_DWORD *)&v77[3] = *(_DWORD *)&v110[3];
    v78 = v50;
    v79 = v51;
    v80 = v52;
    *(_DWORD *)v81 = *(_DWORD *)v109;
    *(_DWORD *)&v81[3] = *(_DWORD *)&v109[3];
    v82 = v53;
    v83 = v54;
    v84 = v38;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v108[3];
    *(_DWORD *)v85 = *(_DWORD *)v108;
    v86 = v16;
    v87 = v35;
    v88 = v33;
    v89 = v34;
    v90 = v18;
    v91 = v58;
    v92 = v59;
    v93 = v60;
    v94 = v61;
    v95 = v62;
    v96 = v113;
    v97 = v30;
    v98 = v43;
    v99 = v21;
    v100 = v23;
    v101 = v24;
    v102 = v29;
    v103 = v107;
    v104 = v31;
    return sub_237919CFC((uint64_t)&v64);
  }
}

uint64_t sub_2379C6AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v4 = *(_QWORD *)(v1 + 248);
  v5 = sub_2378D4854(MEMORY[0x24BEE4AF8]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  v6 = sub_237883AA4(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_23788B060, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 248) = v6;
  }
  return result;
}

uint64_t sub_2379C6B4C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return MeasurementLabelConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2379C6B60(_QWORD *a1)
{
  return MeasurementLabelConfiguration.encode(to:)(a1);
}

uint64_t sub_2379C6B74()
{
  _BYTE v1[72];

  sub_237A885D4();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t sub_2379C6BB4()
{
  _BYTE v1[72];

  sub_237A885D4();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_237A88610();
}

uint64_t static MeasurementLabelConfiguration.ColorIDs.single(_:redacted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10[2];
  char v11;
  uint64_t v12[2];
  char v13;
  uint64_t v14[2];
  char v15;
  uint64_t v16[2];
  char v17;
  uint64_t v18[2];
  char v19;
  uint64_t v20[2];
  char v21;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  v8 = *(_BYTE *)(a2 + 16);
  v20[0] = *(_QWORD *)a1;
  v20[1] = v4;
  v21 = v7;
  v18[0] = v20[0];
  v18[1] = v4;
  v19 = v7;
  v16[0] = v20[0];
  v16[1] = v4;
  v17 = v7;
  v14[0] = v5;
  v14[1] = v6;
  v15 = v8;
  v12[0] = v5;
  v12[1] = v6;
  v13 = v8;
  v10[0] = v5;
  v10[1] = v6;
  v11 = v8;
  sub_23787A11C(v20[0], v4, v7);
  sub_23787A11C(v5, v6, v8);
  sub_23787A11C(v20[0], v4, v7);
  sub_23787A11C(v5, v6, v8);
  sub_23787A11C(v20[0], v4, v7);
  sub_23787A11C(v5, v6, v8);
  return MeasurementLabelConfiguration.ColorIDs.init(iconColorID:valueColorID:unitColorID:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)(v20, v18, v16, v14, v12, v10, a3);
}

uint64_t sub_2379C6CEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _s14CarPlayAssetUI29MeasurementLabelConfigurationV8ColorIDsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = *(_QWORD *)(a1 + 8);
  v41 = *(_QWORD *)(a1 + 24);
  v42 = *(_QWORD *)(a1 + 32);
  v48 = *(_QWORD *)(a1 + 48);
  v49 = *(_QWORD *)(a1 + 56);
  v50 = *(_QWORD *)(a1 + 16);
  v43 = *(_BYTE *)(a1 + 40);
  v44 = *(_BYTE *)(a1 + 64);
  v46 = *(_QWORD *)(a1 + 80);
  v47 = *(_QWORD *)(a1 + 72);
  v45 = *(_BYTE *)(a1 + 88);
  v51 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v2 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_BYTE *)(a2 + 88);
  if ((sub_2379B7304(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && (v38 = v6, v39 = v7, v40 = v8, (sub_2379B7304(v52, v51) & 1) != 0)
    && (sub_2379B7304(v50, v3) & 1) != 0)
  {
    sub_23787A11C(v41, v42, v43);
    sub_23787A11C(v2, v4, v5);
    Theme.ColorID.rawValue.getter();
    v13 = v12;
    v15 = v14;
    Theme.ColorID.rawValue.getter();
    if (v13 == v17 && v15 == v16)
    {
      swift_bridgeObjectRelease_n();
      sub_23787A134(v2, v4, v5);
      sub_23787A134(v41, v42, v43);
      v19 = v46;
      v18 = v47;
      v20 = v44;
      v21 = v45;
    }
    else
    {
      v24 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787A134(v2, v4, v5);
      sub_23787A134(v41, v42, v43);
      v22 = 0;
      v19 = v46;
      v18 = v47;
      v20 = v44;
      v21 = v45;
      if ((v24 & 1) == 0)
        return v22 & 1;
    }
    sub_23787A11C(v48, v49, v20);
    sub_23787A11C(v38, v39, v40);
    Theme.ColorID.rawValue.getter();
    v26 = v25;
    v28 = v27;
    Theme.ColorID.rawValue.getter();
    if (v26 == v30 && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
      sub_23787A134(v38, v39, v40);
      sub_23787A134(v48, v49, v20);
    }
    else
    {
      v31 = sub_237A8840C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23787A134(v38, v39, v40);
      sub_23787A134(v48, v49, v20);
      v22 = 0;
      if ((v31 & 1) == 0)
        return v22 & 1;
    }
    sub_23787A11C(v18, v19, v21);
    sub_23787A11C(v9, v10, v11);
    Theme.ColorID.rawValue.getter();
    v33 = v32;
    v35 = v34;
    Theme.ColorID.rawValue.getter();
    if (v33 == v37 && v35 == v36)
      v22 = 1;
    else
      v22 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23787A134(v9, v10, v11);
    sub_23787A134(v18, v19, v21);
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

BOOL _s14CarPlayAssetUI29MeasurementLabelConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  float v10;
  float v11;
  float v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  _BOOL8 result;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  char v49;
  char v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  void *v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  __int128 v99;
  __int128 v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  __int128 v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 33);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v99 = *(_OWORD *)(a1 + 56);
  v98 = *(void **)(a1 + 72);
  v97 = *(_QWORD *)(a1 + 80);
  v96 = *(_QWORD *)(a1 + 88);
  v95 = *(_BYTE *)(a1 + 96);
  v94 = *(_QWORD *)(a1 + 104);
  v93 = *(_QWORD *)(a1 + 112);
  v92 = *(_BYTE *)(a1 + 120);
  v91 = *(_QWORD *)(a1 + 128);
  v90 = *(_QWORD *)(a1 + 136);
  v89 = *(_BYTE *)(a1 + 144);
  v77 = *(_QWORD *)(a1 + 152);
  v70 = *(_QWORD *)(a1 + 160);
  v72 = *(_QWORD *)(a1 + 168);
  v71 = *(_QWORD *)(a1 + 176);
  v66 = *(_QWORD *)(a1 + 184);
  v61 = *(_OWORD *)(a1 + 192);
  v65 = *(void **)(a1 + 208);
  v62 = *(_QWORD *)(a1 + 216);
  v63 = *(_QWORD *)(a1 + 224);
  v64 = *(_QWORD *)(a1 + 232);
  v60 = *(_QWORD *)(a1 + 240);
  LOBYTE(v111) = *(_BYTE *)a1;
  v74 = *(_QWORD *)(a1 + 248);
  v9 = *(float *)(a1 + 256);
  v10 = *(float *)(a1 + 260);
  v11 = *(float *)(a1 + 264);
  *((_QWORD *)&v111 + 1) = v3;
  v112 = v2;
  v12 = *(float *)(a1 + 268);
  v75 = *(_BYTE *)(a1 + 272);
  v73 = *(unsigned __int8 *)(a1 + 273);
  LOBYTE(v2) = *(_BYTE *)a2;
  LOBYTE(v114) = v5;
  BYTE1(v114) = v6;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(void **)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v115 = v7;
  v116 = v8;
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  LOBYTE(v8) = *(_BYTE *)(a2 + 33);
  LOBYTE(v100) = (_BYTE)v2;
  *((_QWORD *)&v100 + 1) = v13;
  v101 = v14;
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v78 = *(_OWORD *)(a2 + 56);
  LOBYTE(v103) = v7;
  v88 = *(void **)(a2 + 72);
  v83 = *(_QWORD *)(a2 + 80);
  BYTE1(v103) = v8;
  v18 = *(_QWORD *)(a2 + 88);
  v104 = v16;
  v105 = v17;
  v87 = *(_BYTE *)(a2 + 96);
  v19 = *(float *)(a2 + 256);
  v20 = *(float *)(a2 + 260);
  v21 = *(float *)(a2 + 264);
  v22 = *(float *)(a2 + 268);
  v59 = *(unsigned __int8 *)(a2 + 272);
  v85 = *(_QWORD *)(a2 + 104);
  v86 = v18;
  v84 = *(_QWORD *)(a2 + 112);
  v82 = *(_BYTE *)(a2 + 120);
  v80 = *(_QWORD *)(a2 + 136);
  v81 = *(_QWORD *)(a2 + 128);
  v79 = *(_BYTE *)(a2 + 144);
  v76 = *(_QWORD *)(a2 + 152);
  v67 = *(_QWORD *)(a2 + 160);
  v68 = *(_QWORD *)(a2 + 168);
  v23 = *(_QWORD *)(a2 + 184);
  v69 = *(_QWORD *)(a2 + 176);
  v25 = *(_QWORD *)(a2 + 192);
  v24 = *(_QWORD *)(a2 + 200);
  v26 = *(void **)(a2 + 208);
  v27 = *(_QWORD *)(a2 + 216);
  v29 = *(_QWORD *)(a2 + 224);
  v28 = *(_QWORD *)(a2 + 232);
  v30 = *(_QWORD *)(a2 + 240);
  v31 = *(_QWORD *)(a2 + 248);
  v32 = *(unsigned __int8 *)(a2 + 273);
  v113 = v4;
  v102 = v15;
  if ((_s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v111, (uint64_t)&v100) & 1) == 0)
    return 0;
  v54 = v26;
  v58 = v27;
  v56 = v28;
  v57 = v30;
  v55 = v31;
  v111 = v99;
  v112 = v98;
  v113 = v97;
  v114 = v96;
  LOBYTE(v115) = v95;
  v116 = v94;
  v117 = v93;
  v118 = v92;
  v119 = v91;
  v120 = v90;
  v121 = v89;
  v100 = v78;
  v101 = v88;
  v102 = v83;
  v103 = v86;
  LOBYTE(v104) = v87;
  v105 = v85;
  v106 = v84;
  v107 = v82;
  v108 = v81;
  v109 = v80;
  v110 = v79;
  v33 = _s14CarPlayAssetUI29MeasurementLabelConfigurationV8ColorIDsV2eeoiySbAE_AEtFZ_0((uint64_t)&v111, (uint64_t)&v100);
  result = 0;
  if ((v33 & 1) == 0)
    return result;
  if (v77 != v76)
    return result;
  v35 = v75;
  v36 = v74;
  v37 = v55;
  v39 = v24;
  v38 = v58;
  v40 = v25;
  if (v70 != v67)
    return result;
  if (v71)
  {
    if (!v69)
      return 0;
    if (v72 != v68 || v71 != v69)
    {
      v41 = sub_237A8840C();
      v40 = v25;
      v39 = v24;
      v38 = v58;
      v42 = v41;
      result = 0;
      if ((v42 & 1) == 0)
        return result;
    }
  }
  else if (v69)
  {
    return 0;
  }
  if (v66)
  {
    if (!v23)
      return 0;
    swift_bridgeObjectRetain();
    v43 = swift_bridgeObjectRetain();
    v44 = sub_2379B7AE4(v43, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v25;
    v39 = v24;
    v38 = v58;
    if ((v44 & 1) == 0)
      return 0;
  }
  else if (v23)
  {
    return 0;
  }
  if (v65)
  {
    v111 = v61;
    v112 = v65;
    v113 = v62;
    v114 = v63;
    v115 = v64;
    v116 = v60;
    v45 = v54;
    if (v54)
    {
      LOBYTE(v100) = v40;
      *((_QWORD *)&v100 + 1) = v39;
      v101 = v54;
      v102 = v38;
      LOWORD(v103) = v29 & 0x101;
      v104 = v56;
      v105 = v57;
      v46 = v65;
      swift_bridgeObjectRetain_n();
      v47 = v46;
      LOBYTE(v46) = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v111, (uint64_t)&v100);
      v48 = v112;
      swift_bridgeObjectRelease();

      v35 = v75;
      sub_2378886C4(v61, *((uint64_t *)&v61 + 1), v65);
      v36 = v74;
      v37 = v55;
      if ((v46 & 1) != 0)
        goto LABEL_22;
      return 0;
    }
    v51 = v65;
    swift_bridgeObjectRetain();
    v40 = v25;
    v39 = v24;
LABEL_30:
    v52 = v39;
    v53 = v40;
    sub_2378884CC(v40, v39, v45);
    sub_2378886C4(v61, *((uint64_t *)&v61 + 1), v65);
    sub_2378886C4(v53, v52, v45);
    return 0;
  }
  v45 = v54;
  if (v54)
    goto LABEL_30;
LABEL_22:
  v49 = sub_2379B9100(v36, v37);
  result = 0;
  if ((v49 & 1) != 0 && v9 == v19 && v10 == v20)
  {
    v50 = v59;
    if (v11 == v21)
    {
      if ((v35 & 1) != 0)
      {
        if (v59)
          return v73 == v32;
      }
      else
      {
        if (v12 != v22)
          v50 = 1;
        if ((v50 & 1) == 0)
          return v73 == v32;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_2379C7658()
{
  unint64_t result;

  result = qword_256826340;
  if (!qword_256826340)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0770, &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826340);
  }
  return result;
}

unint64_t sub_2379C769C()
{
  unint64_t result;

  result = qword_256826368;
  if (!qword_256826368)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0720, &type metadata for MeasurementLabelConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826368);
  }
  return result;
}

unint64_t sub_2379C76E0()
{
  unint64_t result;

  result = qword_256826370;
  if (!qword_256826370)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.ColorIDs, &type metadata for MeasurementLabelConfiguration.ColorIDs);
    atomic_store(result, (unint64_t *)&qword_256826370);
  }
  return result;
}

unint64_t sub_2379C7724()
{
  unint64_t result;

  result = qword_256826378;
  if (!qword_256826378)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.Alignment, &type metadata for MeasurementLabelConfiguration.Alignment);
    atomic_store(result, (unint64_t *)&qword_256826378);
  }
  return result;
}

unint64_t sub_2379C7768()
{
  unint64_t result;

  result = qword_256826388;
  if (!qword_256826388)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.ColorIDs, &type metadata for MeasurementLabelConfiguration.ColorIDs);
    atomic_store(result, (unint64_t *)&qword_256826388);
  }
  return result;
}

unint64_t sub_2379C77AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256826398;
  if (!qword_256826398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826390);
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for DecodableDefault<A>, v1);
    atomic_store(result, (unint64_t *)&qword_256826398);
  }
  return result;
}

unint64_t sub_2379C77F8()
{
  unint64_t result;

  result = qword_2568263A0;
  if (!qword_2568263A0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.Alignment, &type metadata for MeasurementLabelConfiguration.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568263A0);
  }
  return result;
}

unint64_t sub_2379C7840()
{
  unint64_t result;

  result = qword_2568263A8;
  if (!qword_2568263A8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.ColorIDs, &type metadata for MeasurementLabelConfiguration.ColorIDs);
    atomic_store(result, (unint64_t *)&qword_2568263A8);
  }
  return result;
}

unint64_t sub_2379C7888()
{
  unint64_t result;

  result = qword_2568263B0;
  if (!qword_2568263B0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.Alignment, &type metadata for MeasurementLabelConfiguration.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568263B0);
  }
  return result;
}

unint64_t sub_2379C78D8()
{
  unint64_t result;

  result = qword_2568263E8;
  if (!qword_2568263E8)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration, &type metadata for MeasurementLabelConfiguration);
    atomic_store(result, (unint64_t *)&qword_2568263E8);
  }
  return result;
}

float sub_2379C7924@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 264);
  *a2 = result;
  return result;
}

float sub_2379C7930(float *a1, uint64_t a2)
{
  float result;

  result = *a1;
  *(float *)(a2 + 264) = *a1;
  return result;
}

uint64_t destroy for MeasurementLabelConfiguration(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  sub_23787A134(*(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  sub_23787A134(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_BYTE *)(a1 + 144));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 208);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __int128 v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_BYTE *)(a2 + 96);
  v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v7, v8, v9);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 96) = v9;
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  LOBYTE(v6) = *(_BYTE *)(a2 + 120);
  sub_23787A11C(v11, v12, v6);
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  *(_BYTE *)(a1 + 120) = v6;
  v13 = *(_QWORD *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 136);
  LOBYTE(v6) = *(_BYTE *)(a2 + 144);
  sub_23787A11C(v13, v14, v6);
  *(_QWORD *)(a1 + 128) = v13;
  *(_QWORD *)(a1 + 136) = v14;
  *(_BYTE *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v16 = *(void **)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v16;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
    v17 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v17;
    v18 = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _OWORD *v25;
  __int128 *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_BYTE *)(a2 + 96);
  sub_23787A11C(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  v12 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v9;
  sub_23787A134(v10, v11, v12);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_BYTE *)(a2 + 120);
  sub_23787A11C(v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  v18 = *(_BYTE *)(a1 + 120);
  *(_BYTE *)(a1 + 120) = v15;
  sub_23787A134(v16, v17, v18);
  v19 = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a2 + 136);
  v21 = *(_BYTE *)(a2 + 144);
  sub_23787A11C(v19, v20, v21);
  v22 = *(_QWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = v20;
  v24 = *(_BYTE *)(a1 + 144);
  *(_BYTE *)(a1 + 144) = v21;
  sub_23787A134(v22, v23, v24);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (_OWORD *)(a1 + 192);
  v26 = (__int128 *)(a2 + 192);
  v27 = *(void **)(a1 + 208);
  v28 = *(_QWORD *)(a2 + 208);
  if (v27)
  {
    if (v28)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v29 = *(void **)(a2 + 208);
      *(_QWORD *)(a1 + 208) = v29;
      v30 = v29;

      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_237889B98(a1 + 192);
      v34 = *(_OWORD *)(a2 + 208);
      v33 = *(_OWORD *)(a2 + 224);
      v35 = *v26;
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v34;
      *(_OWORD *)(a1 + 224) = v33;
      *v25 = v35;
    }
  }
  else if (v28)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v31 = *(void **)(a2 + 208);
    *(_QWORD *)(a1 + 208) = v31;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v32 = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *v26;
    v37 = *(_OWORD *)(a2 + 208);
    v38 = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v37;
    *(_OWORD *)(a1 + 224) = v38;
    *v25 = v36;
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  v39 = *(_DWORD *)(a2 + 268);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v39;
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  return a1;
}

void *__swift_memcpy274_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x112uLL);
}

uint64_t assignWithTake for MeasurementLabelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 96);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v10 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v7;
  sub_23787A134(v8, v9, v10);
  v11 = *(_BYTE *)(a2 + 120);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v14 = *(_BYTE *)(a1 + 120);
  *(_BYTE *)(a1 + 120) = v11;
  sub_23787A134(v12, v13, v14);
  v15 = *(_BYTE *)(a2 + 144);
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v18 = *(_BYTE *)(a1 + 144);
  *(_BYTE *)(a1 + 144) = v15;
  sub_23787A134(v16, v17, v18);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v20 = *(void **)(a1 + 208);
  if (!v20)
    goto LABEL_5;
  v21 = *(_QWORD *)(a2 + 208);
  if (!v21)
  {
    sub_237889B98(a1 + 192);
LABEL_5:
    v23 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v23;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v21;

  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  v22 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 274))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 272) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 274) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 274) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration()
{
  return &type metadata for MeasurementLabelConfiguration;
}

uint64_t destroy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23787A134(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_23787A134(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return sub_23787A134(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
}

uint64_t initializeWithCopy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23787A11C(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  LOBYTE(v5) = *(_BYTE *)(v2 + 64);
  sub_23787A11C(v8, v9, v5);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v5;
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(_QWORD *)(v2 + 80);
  LOBYTE(v2) = *(_BYTE *)(v2 + 88);
  sub_23787A11C(v10, v11, v2);
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v2;
  return a1;
}

uint64_t assignWithCopy for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[3];
  v5 = v2[4];
  v6 = *((_BYTE *)v2 + 40);
  sub_23787A11C(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_23787A134(v7, v8, v9);
  v10 = v2[6];
  v11 = v2[7];
  v12 = *((_BYTE *)v2 + 64);
  sub_23787A11C(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v15 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v12;
  sub_23787A134(v13, v14, v15);
  v16 = v2[9];
  v17 = v2[10];
  LOBYTE(v2) = *((_BYTE *)v2 + 88);
  sub_23787A11C(v16, v17, (char)v2);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  v20 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = (_BYTE)v2;
  sub_23787A134(v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MeasurementLabelConfiguration.ColorIDs(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_23787A134(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v8;
  sub_23787A134(v9, v10, v11);
  v12 = *(_BYTE *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v12;
  sub_23787A134(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.ColorIDs()
{
  return &type metadata for MeasurementLabelConfiguration.ColorIDs;
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration.Alignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2379C84E8 + 4 * byte_237AA0258[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2379C851C + 4 * byte_237AA0253[v4]))();
}

uint64_t sub_2379C851C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C8524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379C852CLL);
  return result;
}

uint64_t sub_2379C8538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379C8540);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2379C8544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C854C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.Alignment()
{
  return &type metadata for MeasurementLabelConfiguration.Alignment;
}

uint64_t getEnumTagSinglePayload for MeasurementLabelConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2379C8644 + 4 * byte_237AA0262[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2379C8678 + 4 * byte_237AA025D[v4]))();
}

uint64_t sub_2379C8678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C8680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379C8688);
  return result;
}

uint64_t sub_2379C8694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379C869CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2379C86A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C86A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.CodingKeys()
{
  return &type metadata for MeasurementLabelConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MeasurementLabelConfiguration.ColorIDs.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2379C8710 + 4 * byte_237AA026C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2379C8744 + 4 * byte_237AA0267[v4]))();
}

uint64_t sub_2379C8744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C874C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379C8754);
  return result;
}

uint64_t sub_2379C8760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379C8768);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2379C876C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379C8774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MeasurementLabelConfiguration.ColorIDs.CodingKeys()
{
  return &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys;
}

unint64_t sub_2379C8794()
{
  unint64_t result;

  result = qword_2568263F0;
  if (!qword_2568263F0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0640, &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568263F0);
  }
  return result;
}

unint64_t sub_2379C87DC()
{
  unint64_t result;

  result = qword_2568263F8;
  if (!qword_2568263F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA06F8, &type metadata for MeasurementLabelConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568263F8);
  }
  return result;
}

unint64_t sub_2379C8824()
{
  unint64_t result;

  result = qword_256826400;
  if (!qword_256826400)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0668, &type metadata for MeasurementLabelConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826400);
  }
  return result;
}

unint64_t sub_2379C886C()
{
  unint64_t result;

  result = qword_256826408;
  if (!qword_256826408)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0690, &type metadata for MeasurementLabelConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826408);
  }
  return result;
}

unint64_t sub_2379C88B4()
{
  unint64_t result;

  result = qword_256826410;
  if (!qword_256826410)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA05B0, &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826410);
  }
  return result;
}

unint64_t sub_2379C88FC()
{
  unint64_t result;

  result = qword_256826418;
  if (!qword_256826418)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA05D8, &type metadata for MeasurementLabelConfiguration.ColorIDs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826418);
  }
  return result;
}

uint64_t sub_2379C8940(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F6C6F436E6F6369 && a2 == 0xEC00000073444972;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F4365756C6176 && a2 == 0xED0000734449726FLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F4374696E75 && a2 == 0xEC00000073444972 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB1DB0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000237AB1DD0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000237AB1DF0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2379C8BF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953394534 && a2 == 0xE400000000000000;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656469766964 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB1E10 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6562614C74696E75 && a2 == 0xEA0000000000736CLL || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E6F4674696E75 && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C75666574617473 && a2 == 0xEE00736567616D49 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6461506567616D69 && a2 == 0xEC000000676E6964 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6170536C6562616CLL && a2 == 0xEC000000676E6963 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x664F5965756C6176 && a2 == 0xEC00000074657366 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x61725465756C6176 && a2 == 0xED0000676E696B63 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

unint64_t sub_2379C91A4()
{
  unint64_t result;

  result = qword_256826420;
  if (!qword_256826420)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for MeasurementLabelConfiguration.Alignment, &type metadata for MeasurementLabelConfiguration.Alignment);
    atomic_store(result, (unint64_t *)&qword_256826420);
  }
  return result;
}

uint64_t sub_2379C91E8()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_2379C9214(uint64_t a1)
{
  sub_237870090(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t destroy for InputAnimationEffect(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_2378E38C0(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_BYTE *)(a1 + 33));
}

uint64_t initializeWithCopy for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 33);
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_retain();
  swift_retain();
  sub_2378E38B4(v3, v5, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v4;
  return a1;
}

uint64_t assignWithCopy for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 33);
  v6 = *(unsigned __int8 *)(a2 + 32);
  sub_2378E38B4(v4, v6, v5);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 33);
  *(_QWORD *)(a1 + 24) = v4;
  v9 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 33) = v5;
  sub_2378E38C0(v7, v9, v8);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InputAnimationEffect(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 33);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 33) = v5;
  sub_2378E38C0(v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InputAnimationEffect(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputAnimationEffect(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InputAnimationEffect()
{
  return &type metadata for InputAnimationEffect;
}

uint64_t sub_2379C94B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379C94C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t (**v19)(uint64_t);
  uint64_t v20;
  __int128 v21;
  uint64_t (**v22)(uint64_t);
  __int128 v24;
  uint64_t v25;
  __int128 v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826428);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_237A874DC();
  v26 = *(_OWORD *)(v2 + 1);
  v24 = *(_OWORD *)(v2 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826438);
  sub_237A87350();
  v13 = v25;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826440);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, a1, v14);
  v15 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v15 = v12;
  *((_DWORD *)v15 + 2) = v13;
  v25 = *v3;
  v16 = v25;
  *(_QWORD *)&v24 = v3[3];
  WORD4(v24) = *((_WORD *)v3 + 16);
  v17 = swift_allocObject();
  v18 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v17 + 32) = v18;
  *(_WORD *)(v17 + 48) = *((_WORD *)v3 + 16);
  sub_2378BBFE0((uint64_t)v8, (uint64_t)v11, &qword_256826428);
  *(_QWORD *)&v11[*(int *)(v9 + 52)] = v16;
  v19 = (uint64_t (**)(uint64_t))&v11[*(int *)(v9 + 56)];
  *v19 = sub_2379C9898;
  v19[1] = (uint64_t (*)(uint64_t))v17;
  swift_retain();
  sub_2379230C8((uint64_t)&v25);
  sub_2379C98A0((uint64_t)&v26);
  sub_2379C98C8((uint64_t)&v24);
  sub_2378BC024((uint64_t)v8, &qword_256826428);
  v20 = swift_allocObject();
  v21 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v20 + 32) = v21;
  *(_WORD *)(v20 + 48) = *((_WORD *)v3 + 16);
  sub_2378BBFE0((uint64_t)v11, a2, &qword_256826430);
  v22 = (uint64_t (**)(uint64_t))(a2
                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256826448) + 36));
  *v22 = sub_2379C9938;
  v22[1] = (uint64_t (*)(uint64_t))v20;
  sub_2379230C8((uint64_t)&v25);
  sub_2379C98A0((uint64_t)&v26);
  sub_2379C98C8((uint64_t)&v24);
  return sub_2378BC024((uint64_t)v11, &qword_256826430);
}

uint64_t sub_2379C9720(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  _BYTE v4[8];

  v3 = *(_OWORD *)(a2 + 8);
  sub_2379C9940((uint64_t)&v3 + 8, (uint64_t)v4);
  sub_2379230C8((uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256826438);
  sub_237A87350();
  sub_237A8735C();
  return sub_2378BBC40((uint64_t)&v3);
}

uint64_t sub_2379C97B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  char v6;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned __int8 *)(a2 + 32);
  v4 = *(unsigned __int8 *)(a2 + 33);
  sub_2378E38B4(v2, v3, v4);
  sub_23796D3CC(v2, v3 | (v4 << 8));
  v6 = v5;
  result = sub_2378E38C0(v2, v3, v4);
  if ((v6 & 1) == 0)
  {
    sub_237A86810();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826438);
    sub_237A87350();
    return sub_237A86804();
  }
  return result;
}

uint64_t sub_2379C9898(uint64_t a1)
{
  uint64_t v1;

  return sub_2379C9720(a1, v1 + 16);
}

uint64_t sub_2379C98A0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_2379C98C8(uint64_t a1)
{
  sub_2378E38B4(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  return a1;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_2378E38C0(*(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_BYTE *)(v0 + 49));
  return swift_deallocObject();
}

uint64_t sub_2379C9938(uint64_t a1)
{
  uint64_t v1;

  return sub_2379C97B0(a1, v1 + 16);
}

uint64_t sub_2379C9940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2379C998C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256826458;
  if (!qword_256826458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826448);
    v2[0] = sub_2379C99F8();
    v2[1] = MEMORY[0x24BDEF830];
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256826458);
  }
  return result;
}

unint64_t sub_2379C99F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256826460;
  if (!qword_256826460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826430);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEDA68], v1);
    atomic_store(result, (unint64_t *)&qword_256826460);
  }
  return result;
}

uint64_t PopoverModel.isFocusable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PopoverModel(0) + 20));
}

uint64_t type metadata accessor for PopoverModel(uint64_t a1)
{
  return sub_23790828C(a1, qword_2568264D0);
}

uint64_t sub_2379C9A80(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_2379C9A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for PopoverModel(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PopoverView(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2378D07D8(v1, (uint64_t)v11, type metadata accessor for PopoverModel);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v14 = swift_getKeyPath();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  sub_237870370((uint64_t)v8, (uint64_t)&v14[*(int *)(v12 + 20)], &qword_256826510);
  sub_2378D0858((uint64_t)v11, (uint64_t)&v14[*(int *)(v12 + 24)], type metadata accessor for PopoverModel);
  sub_2378BBFE0(v1, (uint64_t)v5, &qword_256820330);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568266A0);
  sub_237870370((uint64_t)v5, a1 + *(int *)(v15 + 52), &qword_256820328);
  return sub_2378D0858((uint64_t)v14, a1, type metadata accessor for PopoverView);
}

uint64_t PopoverView.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = type metadata accessor for PopoverView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_2378D07D8(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_2378D0858((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PopoverView);
  *a1 = sub_2379CACF8;
  a1[1] = v7;
  return result;
}

uint64_t sub_2379C9D38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v73 = a1;
  v75 = a2;
  v61 = type metadata accessor for PopoverView(0);
  v71 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v72 = v2;
  v74 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_237A8747C();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v64 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for PlatterView();
  MEMORY[0x24BDAC7A8](v63);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v69 = (uint64_t)&v60 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568265D8);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568265E0);
  MEMORY[0x24BDAC7A8](v60);
  v68 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568265E8);
  MEMORY[0x24BDAC7A8](v62);
  v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681F430);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for Slot();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237A868C4();
  v25 = v24;
  v27 = v26;
  v28 = type metadata accessor for Instrument();
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v20, 1, 1, v28);
  v30 = (uint64_t)&v23[v21[9]];
  v29((char *)v30, 1, 1, v28);
  v31 = &v23[v21[10]];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v32 = v21[11];
  sub_237A86588();
  sub_2378BBFE0((uint64_t)v17, (uint64_t)v14, &qword_2568202F8);
  if (qword_25681E410 != -1)
    swift_once();
  v33 = (uint64_t)&v23[v32];
  v34 = qword_256825198;
  sub_2378BC024((uint64_t)v17, &qword_2568202F8);
  sub_237870370((uint64_t)v14, v33, &qword_2568202F8);
  *(_QWORD *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256820300) + 52)) = v34;
  *((_QWORD *)v23 + 15) = 12624;
  *((_QWORD *)v23 + 16) = 0xE200000000000000;
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  *((_QWORD *)v23 + 5) = 1;
  *((_QWORD *)v23 + 6) = 0;
  *((_QWORD *)v23 + 7) = 0;
  *((_QWORD *)v23 + 8) = v25;
  *((_QWORD *)v23 + 9) = v27;
  *((_OWORD *)v23 + 5) = 0u;
  *((_OWORD *)v23 + 6) = 0u;
  *((_QWORD *)v23 + 14) = 0;
  sub_23790760C((uint64_t)v20, v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v35 = v73;
  v36 = v66;
  sub_2379CA35C((uint64_t)v23, v73 + *(int *)(v61 + 24), v66);
  v37 = v64;
  sub_237A87470();
  sub_237A871F4();
  v38 = sub_237A8723C();
  swift_release();
  *(_QWORD *)v5 = swift_getKeyPath();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  *((_QWORD *)v5 + 3) = swift_getKeyPath();
  v5[32] = 0;
  *((_QWORD *)v5 + 5) = 0x4044000000000000;
  v39 = v63;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v5[*(int *)(v63 + 28)], v37, v67);
  v40 = &v5[*(int *)(v39 + 32)];
  *(_QWORD *)v40 = v38;
  *(_OWORD *)(v40 + 8) = xmmword_237AA0830;
  v41 = v69;
  sub_2378D0858((uint64_t)v5, v69, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v42 = sub_237A874AC();
  v44 = v43;
  v45 = (uint64_t)v68;
  v46 = (uint64_t)&v68[*(int *)(v60 + 36)];
  sub_2378D07D8(v41, v46, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  v47 = (uint64_t *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568265F0) + 36));
  *v47 = v42;
  v47[1] = v44;
  sub_2378BBFE0(v36, v45, &qword_2568265D8);
  sub_2378DE6A4(v41, (uint64_t (*)(_QWORD))type metadata accessor for PlatterView);
  sub_2378BC024(v36, &qword_2568265D8);
  v48 = sub_237A87488();
  v50 = v49;
  v51 = (uint64_t)v70;
  v52 = (uint64_t)&v70[*(int *)(v62 + 36)];
  PopoverView.overlayButton()(v52);
  v53 = (uint64_t *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568265F8) + 36));
  *v53 = v48;
  v53[1] = v50;
  sub_237870370(v45, v51, &qword_2568265E0);
  v54 = v74;
  sub_2378D07D8(v35, v74, type metadata accessor for PopoverView);
  v55 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  v56 = swift_allocObject();
  sub_2378D0858(v54, v56 + v55, type metadata accessor for PopoverView);
  v57 = v75;
  sub_2378BBFE0(v51, v75, &qword_2568265E8);
  v58 = (uint64_t (**)())(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256826600) + 36));
  *v58 = sub_2379CE8FC;
  v58[1] = (uint64_t (*)())v56;
  v58[2] = 0;
  v58[3] = 0;
  sub_2378BC024(v51, &qword_2568265E8);
  return sub_2378DE6A4((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Slot);
}

uint64_t sub_2379CA35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t (*v22)(uint64_t, uint64_t, char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, char *);

  v31 = a2;
  v33 = a1;
  v36 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820300);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_256826608);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)v3;
  v20 = *(_QWORD *)(v3 + 8);
  v21 = *(_BYTE *)(v3 + 16);
  sub_2379CCF44(*(_QWORD *)v3, v20, v21);
  sub_23796DD50(v19, v20, v21, (uint64_t *)&v37);
  sub_2379CACEC(v19, v20, v21);
  v22 = v37;
  if (v37)
  {
    type metadata accessor for PopoverView(0);
    sub_23796DF80((uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_237870370((uint64_t)v14, (uint64_t)v18, &qword_256820D58);
      swift_retain();
      v26 = v33;
      v27 = v22(v33, v31, v18);
      sub_2378A2C04((uint64_t)v22);
      sub_2378A2C04((uint64_t)v22);
      v28 = v26 + *(int *)(type metadata accessor for Slot() + 44);
      v29 = v32;
      sub_2378BBFE0(v28, v32, &qword_256820300);
      sub_237870370(v29, (uint64_t)v8, &qword_2568202F8);
      v25 = v35;
      sub_2378BBFE0((uint64_t)v8, (uint64_t)v11 + *(int *)(v35 + 52), &qword_2568202F8);
      *v11 = v27;
      sub_2378BC024((uint64_t)v8, &qword_2568202F8);
      sub_2378BC024((uint64_t)v18, &qword_256820D58);
      v24 = v36;
      sub_237870370((uint64_t)v11, v36, qword_256826608);
      v23 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v24, v23, 1, v25);
    }
    sub_2378A2C04((uint64_t)v22);
    sub_2378BC024((uint64_t)v14, &qword_256820D50);
  }
  v23 = 1;
  v25 = v35;
  v24 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v24, v23, 1, v25);
}

uint64_t PopoverView.overlayButton()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v25 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256824AC8);
  v24 = *(char **)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826468);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PopoverView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = type metadata accessor for IconNotificationButton(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t (**)())((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = v1 + *(int *)(v7 + 24);
  if (*(_BYTE *)(v13 + *(int *)(type metadata accessor for PopoverModel(0) + 20)) == 1)
  {
    v23 = (char *)v4;
    v24 = v6;
    sub_2378D07D8(v1, (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
    v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = swift_allocObject();
    sub_2378D0858((uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for PopoverView);
    v16 = (uint64_t)v12 + *(int *)(v10 + 20);
    if (qword_25681E3F0 != -1)
      swift_once();
    v17 = type metadata accessor for IconNotificationButtonConfiguration(0);
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_256824A90);
    sub_2378D07D8(v18, v16, type metadata accessor for IconNotificationButtonConfiguration);
    *v12 = sub_2379CAF14;
    v12[1] = (uint64_t (*)())v15;
    sub_2378D07D8((uint64_t)v12, (uint64_t)v24, type metadata accessor for IconNotificationButton);
    swift_storeEnumTagMultiPayload();
    sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    sub_2378B70D4(&qword_256824AD8, &qword_256824AC8, MEMORY[0x24BDF43B0]);
    sub_237A86D44();
    return sub_2378DE6A4((uint64_t)v12, type metadata accessor for IconNotificationButton);
  }
  else
  {
    v20 = v23;
    sub_237A87374();
    v21 = (uint64_t)v24;
    (*((void (**)(char *, char *, uint64_t))v24 + 2))(v6, v20, v2);
    swift_storeEnumTagMultiPayload();
    sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    sub_2378B70D4(&qword_256824AD8, &qword_256824AC8, MEMORY[0x24BDF43B0]);
    sub_237A86D44();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v20, v2);
  }
}

uint64_t sub_2379CA9C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_2378D07D8(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PopoverView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_2378D0858((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for PopoverView);
  *a2 = sub_2379CACF8;
  a2[1] = v7;
  return result;
}

uint64_t _s14CarPlayAssetUI12PopoverModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for PopoverModel(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820328);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v24 - v17;
  sub_2378BBFE0(a1, (uint64_t)v12, &qword_256820330);
  sub_237870370((uint64_t)v12, (uint64_t)v18, &qword_256820328);
  sub_2378BBFE0(a2, (uint64_t)v12, &qword_256820330);
  sub_237870370((uint64_t)v12, (uint64_t)v15, &qword_256820328);
  sub_237A86594();
  sub_23786FAA0((unint64_t *)&qword_256820458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v19 = sub_237A877DC();
  sub_2378BC024((uint64_t)v15, &qword_256820328);
  sub_2378BC024((uint64_t)v18, &qword_256820328);
  sub_2378D07D8(a1, (uint64_t)v9, type metadata accessor for PopoverModel);
  sub_2378D07D8(a2, (uint64_t)v6, type metadata accessor for PopoverModel);
  if ((v19 & 1) != 0)
  {
    v20 = v9[*(int *)(v4 + 20)];
    sub_2378DE6A4((uint64_t)v9, type metadata accessor for PopoverModel);
    v21 = v6[*(int *)(v4 + 20)];
    sub_2378DE6A4((uint64_t)v6, type metadata accessor for PopoverModel);
    v22 = v20 ^ v21 ^ 1;
  }
  else
  {
    sub_2378DE6A4((uint64_t)v6, type metadata accessor for PopoverModel);
    sub_2378DE6A4((uint64_t)v9, type metadata accessor for PopoverModel);
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t type metadata accessor for PopoverView(uint64_t a1)
{
  return sub_23790828C(a1, (uint64_t *)&unk_256826570);
}

uint64_t sub_2379CACEC(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_2378A2C04(result);
  else
    return swift_release();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v1 = type metadata accessor for PopoverView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_2379CACEC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
  v3 = v2 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    {
      v5 = sub_237A86594();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
    }
  }
  else
  {
    swift_release();
  }
  v6 = v2 + *(int *)(v1 + 24);
  v7 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v6 + *(int *)(type metadata accessor for Instrument() + 20);
  v24 = *(_OWORD *)(v8 + 464);
  v25 = *(_OWORD *)(v8 + 480);
  v22 = *(_OWORD *)(v8 + 432);
  v23 = *(_OWORD *)(v8 + 448);
  v20 = *(_OWORD *)(v8 + 400);
  v21 = *(_OWORD *)(v8 + 416);
  v18 = *(_OWORD *)(v8 + 368);
  v19 = *(_OWORD *)(v8 + 384);
  v16 = *(_OWORD *)(v8 + 336);
  v17 = *(_OWORD *)(v8 + 352);
  v14 = *(_OWORD *)(v8 + 304);
  v15 = *(_OWORD *)(v8 + 320);
  v12 = *(_OWORD *)(v8 + 272);
  v13 = *(_OWORD *)(v8 + 288);
  v10 = *(_OWORD *)(v8 + 240);
  v11 = *(_OWORD *)(v8 + 256);
  sub_2378DE7AC(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(void **)(v8 + 16), *(void **)(v8 + 24), *(void **)(v8 + 32), *(void **)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(void **)(v8 + 64), *(void **)(v8 + 72), *(void **)(v8 + 80), *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 104), *(_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 120), *(_QWORD *)(v8 + 128), *(_QWORD *)(v8 + 136), *(_QWORD *)(v8 + 144),
    *(_QWORD *)(v8 + 152),
    *(void **)(v8 + 160),
    *(_QWORD *)(v8 + 168),
    *(_QWORD *)(v8 + 176),
    *(_QWORD *)(v8 + 184),
    *(_QWORD *)(v8 + 192),
    *(_QWORD *)(v8 + 200),
    *(_QWORD *)(v8 + 208),
    *(void **)(v8 + 216),
    *(void **)(v8 + 224),
    *(_QWORD *)(v8 + 232),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    SBYTE8(v17),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    SBYTE8(v20),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    SBYTE8(v23),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    *(_QWORD *)(v8 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2379CAF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for PopoverView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + *(int *)(v1 + 24);
  v5 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(void))(v4 + *(int *)(v5 + 28) + v3))();
}

uint64_t sub_2379CAF68()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for PopoverModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 52));
    v67 = type metadata accessor for Instrument();
    v8 = *(int *)(v67 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v65 = a2;
    v93 = (void *)v10[10];
    v94 = (void *)v10[9];
    v91 = v10[12];
    v92 = v10[11];
    v89 = v10[14];
    v90 = v10[13];
    v87 = v10[16];
    v88 = v10[15];
    v85 = v10[18];
    v86 = v10[17];
    v83 = (void *)v10[20];
    v84 = v10[19];
    v81 = v10[22];
    v82 = v10[21];
    v79 = v10[24];
    v80 = v10[23];
    v77 = v10[26];
    v78 = v10[25];
    v75 = (void *)v10[28];
    v76 = (void *)v10[27];
    v74 = v10[29];
    v73 = v10[30];
    v72 = v10[31];
    v71 = v10[32];
    v70 = v10[33];
    v69 = v10[34];
    v68 = v10[35];
    v36 = v10[36];
    v37 = v10[37];
    v64 = a1;
    v38 = v10[38];
    v39 = v10[39];
    v40 = v10[40];
    v41 = v10[41];
    v42 = v10[42];
    v43 = v10[43];
    v44 = v10[44];
    v45 = v10[45];
    v46 = v10[46];
    v47 = v10[47];
    v48 = v10[48];
    v49 = v10[49];
    v50 = v10[50];
    v51 = v10[51];
    v52 = v10[52];
    v53 = v10[53];
    v54 = v10[54];
    v55 = v10[55];
    v56 = v10[56];
    v57 = v10[57];
    v58 = v10[58];
    v59 = v10[59];
    v60 = v10[60];
    v61 = v10[61];
    v62 = v10[62];
    v63 = v10[63];
    v11 = (void *)v10[8];
    v12 = *v10;
    v13 = v10[1];
    v14 = (void *)v10[2];
    v15 = (void *)v10[3];
    v16 = (void *)v10[4];
    v17 = (void *)v10[5];
    v18 = v10[6];
    v19 = v10[7];
    sub_2378DD44C(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62);
    *v9 = v12;
    v9[1] = v13;
    v9[2] = (uint64_t)v14;
    v9[3] = (uint64_t)v15;
    v9[4] = (uint64_t)v16;
    v9[5] = (uint64_t)v17;
    v9[6] = v18;
    v9[7] = v19;
    v9[8] = (uint64_t)v11;
    v20 = v64;
    v9[9] = (uint64_t)v94;
    v9[10] = (uint64_t)v93;
    v9[11] = v92;
    v9[12] = v91;
    v9[13] = v90;
    v9[14] = v89;
    v9[15] = v88;
    v9[16] = v87;
    v9[17] = v86;
    v9[18] = v85;
    v9[19] = v84;
    v9[20] = (uint64_t)v83;
    v9[21] = v82;
    v9[22] = v81;
    v9[23] = v80;
    v9[24] = v79;
    v9[25] = v78;
    v9[26] = v77;
    v9[27] = (uint64_t)v76;
    v9[28] = (uint64_t)v75;
    v9[29] = v74;
    v9[30] = v73;
    v9[31] = v72;
    v9[32] = v71;
    v9[33] = v70;
    v9[34] = v69;
    v9[35] = v68;
    v9[36] = v36;
    v9[37] = v37;
    v9[38] = v38;
    v9[39] = v39;
    v9[40] = v40;
    v9[41] = v41;
    v9[42] = v42;
    v9[43] = v43;
    v9[44] = v44;
    v9[45] = v45;
    v9[46] = v46;
    v9[47] = v47;
    v9[48] = v48;
    v9[49] = v49;
    v9[50] = v50;
    v9[51] = v51;
    v9[52] = v52;
    v9[53] = v53;
    v9[54] = v54;
    v9[55] = v55;
    v9[56] = v56;
    v9[57] = v57;
    v9[58] = v58;
    v9[59] = v59;
    v9[60] = v60;
    v9[61] = v61;
    v9[62] = v62;
    v9[63] = v63;
    v21 = *(int *)(v67 + 24);
    v22 = (char *)v64 + v21;
    v23 = (char *)v65 + v21;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
    v25 = *((_QWORD *)v23 + 5);
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 5) = v25;
    v26 = a3[6];
    *((_BYTE *)v64 + a3[5]) = *((_BYTE *)v65 + a3[5]);
    v27 = (_QWORD *)((char *)v64 + v26);
    v28 = (_QWORD *)((char *)v65 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[7];
    v31 = (_QWORD *)((char *)v64 + v30);
    v32 = (_QWORD *)((char *)v65 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v20;
}

uint64_t destroy for PopoverModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
  v19 = *(_OWORD *)(v3 + 464);
  v20 = *(_OWORD *)(v3 + 480);
  v17 = *(_OWORD *)(v3 + 432);
  v18 = *(_OWORD *)(v3 + 448);
  v15 = *(_OWORD *)(v3 + 400);
  v16 = *(_OWORD *)(v3 + 416);
  v13 = *(_OWORD *)(v3 + 368);
  v14 = *(_OWORD *)(v3 + 384);
  v11 = *(_OWORD *)(v3 + 336);
  v12 = *(_OWORD *)(v3 + 352);
  v9 = *(_OWORD *)(v3 + 304);
  v10 = *(_OWORD *)(v3 + 320);
  v7 = *(_OWORD *)(v3 + 272);
  v8 = *(_OWORD *)(v3 + 288);
  v5 = *(_OWORD *)(v3 + 240);
  v6 = *(_OWORD *)(v3 + 256);
  sub_2378DE7AC(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(void **)(v3 + 80), *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 120), *(_QWORD *)(v3 + 128), *(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144),
    *(_QWORD *)(v3 + 152),
    *(void **)(v3 + 160),
    *(_QWORD *)(v3 + 168),
    *(_QWORD *)(v3 + 176),
    *(_QWORD *)(v3 + 184),
    *(_QWORD *)(v3 + 192),
    *(_QWORD *)(v3 + 200),
    *(_QWORD *)(v3 + 208),
    *(void **)(v3 + 216),
    *(void **)(v3 + 224),
    *(_QWORD *)(v3 + 232),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    SBYTE8(v9),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    *(_QWORD *)(v3 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void *v90;
  void *v91;

  v5 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v6 + 52)) = *(_QWORD *)(a2 + *(int *)(v6 + 52));
  v63 = type metadata accessor for Instrument();
  v7 = *(int *)(v63 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v90 = (void *)v9[10];
  v91 = (void *)v9[9];
  v88 = v9[12];
  v89 = v9[11];
  v86 = v9[14];
  v87 = v9[13];
  v84 = v9[16];
  v85 = v9[15];
  v82 = v9[18];
  v83 = v9[17];
  v80 = (void *)v9[20];
  v81 = v9[19];
  v78 = v9[22];
  v79 = v9[21];
  v76 = v9[24];
  v77 = v9[23];
  v74 = v9[26];
  v75 = v9[25];
  v72 = (void *)v9[28];
  v73 = (void *)v9[27];
  v71 = v9[29];
  v70 = v9[30];
  v69 = v9[31];
  v68 = v9[32];
  v67 = v9[33];
  v66 = v9[34];
  v65 = v9[35];
  v33 = v9[36];
  v34 = v9[37];
  v35 = v9[38];
  v36 = v9[39];
  v37 = v9[40];
  v38 = v9[41];
  v39 = v9[42];
  v40 = v9[43];
  v41 = v9[44];
  v42 = v9[45];
  v43 = v9[46];
  v44 = v9[47];
  v45 = v9[48];
  v46 = v9[49];
  v47 = v9[50];
  v48 = v9[51];
  v49 = v9[52];
  v50 = v9[53];
  v51 = v9[54];
  v52 = v9[55];
  v53 = v9[56];
  v54 = v9[57];
  v55 = v9[58];
  v56 = v9[59];
  v57 = v9[60];
  v58 = v9[61];
  v59 = v9[62];
  v60 = v9[63];
  v10 = (void *)v9[8];
  v11 = *v9;
  v12 = v9[1];
  v13 = (void *)v9[2];
  v14 = (void *)v9[3];
  v15 = (void *)v9[4];
  v16 = (void *)v9[5];
  v17 = v9[6];
  v18 = v9[7];
  sub_2378DD44C(*v9, v12, v13, v14, v15, v16, v17, v18, v10, v91, v90, v89, v88, v87, v86, v85, v84, v83, v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  *v8 = v11;
  v8[1] = v12;
  v8[2] = (uint64_t)v13;
  v8[3] = (uint64_t)v14;
  v8[4] = (uint64_t)v15;
  v8[5] = (uint64_t)v16;
  v8[6] = v17;
  v8[7] = v18;
  v8[8] = (uint64_t)v10;
  v8[9] = (uint64_t)v91;
  v8[10] = (uint64_t)v90;
  v8[11] = v89;
  v8[12] = v88;
  v8[13] = v87;
  v8[14] = v86;
  v8[15] = v85;
  v8[16] = v84;
  v8[17] = v83;
  v8[18] = v82;
  v8[19] = v81;
  v8[20] = (uint64_t)v80;
  v8[21] = v79;
  v8[22] = v78;
  v8[23] = v77;
  v8[24] = v76;
  v8[25] = v75;
  v8[26] = v74;
  v8[27] = (uint64_t)v73;
  v8[28] = (uint64_t)v72;
  v8[29] = v71;
  v8[30] = v70;
  v8[31] = v69;
  v8[32] = v68;
  v8[33] = v67;
  v8[34] = v66;
  v8[35] = v65;
  v8[36] = v33;
  v8[37] = v34;
  v8[38] = v35;
  v8[39] = v36;
  v8[40] = v37;
  v8[41] = v38;
  v8[42] = v39;
  v8[43] = v40;
  v8[44] = v41;
  v8[45] = v42;
  v8[46] = v43;
  v8[47] = v44;
  v8[48] = v45;
  v8[49] = v46;
  v8[50] = v47;
  v8[51] = v48;
  v8[52] = v49;
  v8[53] = v50;
  v8[54] = v51;
  v8[55] = v52;
  v8[56] = v53;
  v8[57] = v54;
  v8[58] = v55;
  v8[59] = v56;
  v8[60] = v57;
  v8[61] = v58;
  v8[62] = v59;
  v8[63] = v60;
  v19 = *(int *)(v63 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_WORD *)(v20 + 24) = *(_WORD *)(v21 + 24);
  v23 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 40) = v23;
  v24 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[7];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  void *v122;
  void *v123;
  void *v124;

  v5 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v6 + 52)) = *(_QWORD *)(a2 + *(int *)(v6 + 52));
  v95 = type metadata accessor for Instrument();
  v7 = *(int *)(v95 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v123 = *(void **)(v9 + 72);
  v124 = *(void **)(v9 + 64);
  v121 = *(_QWORD *)(v9 + 88);
  v122 = *(void **)(v9 + 80);
  v119 = *(_QWORD *)(v9 + 104);
  v120 = *(_QWORD *)(v9 + 96);
  v117 = *(_QWORD *)(v9 + 120);
  v118 = *(_QWORD *)(v9 + 112);
  v115 = *(_QWORD *)(v9 + 136);
  v116 = *(_QWORD *)(v9 + 128);
  v113 = *(_QWORD *)(v9 + 152);
  v114 = *(_QWORD *)(v9 + 144);
  v111 = *(_QWORD *)(v9 + 168);
  v112 = *(void **)(v9 + 160);
  v109 = *(_QWORD *)(v9 + 184);
  v110 = *(_QWORD *)(v9 + 176);
  v108 = *(_QWORD *)(v9 + 192);
  v107 = *(_QWORD *)(v9 + 200);
  v106 = *(_QWORD *)(v9 + 208);
  v105 = *(void **)(v9 + 216);
  v104 = *(void **)(v9 + 224);
  v103 = *(_QWORD *)(v9 + 232);
  v102 = *(_QWORD *)(v9 + 240);
  v101 = *(_QWORD *)(v9 + 248);
  v100 = *(_QWORD *)(v9 + 256);
  v99 = *(_QWORD *)(v9 + 264);
  v98 = *(_QWORD *)(v9 + 272);
  v97 = *(_QWORD *)(v9 + 280);
  v67 = *(_QWORD *)(v9 + 288);
  v68 = *(_QWORD *)(v9 + 296);
  v69 = *(_QWORD *)(v9 + 304);
  v70 = *(_QWORD *)(v9 + 312);
  v71 = *(_QWORD *)(v9 + 320);
  v72 = *(_QWORD *)(v9 + 328);
  v73 = *(_QWORD *)(v9 + 336);
  v74 = *(_QWORD *)(v9 + 344);
  v75 = *(_QWORD *)(v9 + 352);
  v10 = *(_QWORD *)(v9 + 360);
  v76 = *(_OWORD *)(v9 + 368);
  v77 = *(_QWORD *)(v9 + 384);
  v78 = *(_QWORD *)(v9 + 392);
  v79 = *(_QWORD *)(v9 + 400);
  v80 = *(_QWORD *)(v9 + 408);
  v81 = *(_QWORD *)(v9 + 416);
  v82 = *(_QWORD *)(v9 + 424);
  v83 = *(_QWORD *)(v9 + 432);
  v84 = *(_QWORD *)(v9 + 440);
  v85 = *(_QWORD *)(v9 + 448);
  v86 = *(_QWORD *)(v9 + 456);
  v87 = *(_QWORD *)(v9 + 464);
  v88 = *(_QWORD *)(v9 + 472);
  v89 = *(_QWORD *)(v9 + 480);
  v90 = *(_QWORD *)(v9 + 488);
  v91 = *(_QWORD *)(v9 + 496);
  v92 = *(_QWORD *)(v9 + 504);
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(void **)(v9 + 16);
  v15 = *(void **)(v9 + 32);
  v14 = *(void **)(v9 + 24);
  v16 = *(void **)(v9 + 40);
  v17 = *(_QWORD *)(v9 + 48);
  v18 = *(_QWORD *)(v9 + 56);
  sub_2378DD44C(*(_QWORD *)v9, v12, v13, v14, v15, v16, v17, v18, v124, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114,
    v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    *(_OWORD *)(v9 + 336),
    v74,
    v75,
    v10,
    v76,
    *((uint64_t *)&v76 + 1),
    *(_OWORD *)(v9 + 384),
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91);
  v19 = *(_QWORD *)v8;
  v20 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v11;
  *(_QWORD *)(v8 + 8) = v12;
  v21 = *(void **)(v8 + 16);
  v22 = *(void **)(v8 + 24);
  *(_QWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 24) = v14;
  v23 = *(void **)(v8 + 32);
  v24 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 32) = v15;
  *(_QWORD *)(v8 + 40) = v16;
  v25 = *(_QWORD *)(v8 + 48);
  v26 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 48) = v17;
  *(_QWORD *)(v8 + 56) = v18;
  v27 = *(_OWORD *)(v8 + 64);
  v28 = *(_OWORD *)(v8 + 80);
  *(_QWORD *)(v8 + 64) = v124;
  *(_QWORD *)(v8 + 72) = v123;
  *(_QWORD *)(v8 + 80) = v122;
  *(_QWORD *)(v8 + 88) = v121;
  v29 = *(_OWORD *)(v8 + 96);
  v30 = *(_OWORD *)(v8 + 112);
  *(_QWORD *)(v8 + 96) = v120;
  *(_QWORD *)(v8 + 104) = v119;
  *(_QWORD *)(v8 + 112) = v118;
  *(_QWORD *)(v8 + 120) = v117;
  v31 = *(_OWORD *)(v8 + 128);
  v32 = *(_OWORD *)(v8 + 144);
  *(_QWORD *)(v8 + 128) = v116;
  *(_QWORD *)(v8 + 136) = v115;
  *(_QWORD *)(v8 + 144) = v114;
  *(_QWORD *)(v8 + 152) = v113;
  v33 = *(_OWORD *)(v8 + 160);
  v34 = *(_OWORD *)(v8 + 176);
  *(_QWORD *)(v8 + 160) = v112;
  *(_QWORD *)(v8 + 168) = v111;
  *(_QWORD *)(v8 + 176) = v110;
  *(_QWORD *)(v8 + 184) = v109;
  v35 = *(_OWORD *)(v8 + 192);
  v36 = *(_OWORD *)(v8 + 208);
  *(_QWORD *)(v8 + 192) = v108;
  *(_QWORD *)(v8 + 200) = v107;
  *(_QWORD *)(v8 + 208) = v106;
  *(_QWORD *)(v8 + 216) = v105;
  v37 = *(_OWORD *)(v8 + 224);
  v38 = *(_OWORD *)(v8 + 240);
  *(_QWORD *)(v8 + 224) = v104;
  *(_QWORD *)(v8 + 232) = v103;
  *(_QWORD *)(v8 + 240) = v102;
  *(_QWORD *)(v8 + 248) = v101;
  v39 = *(_OWORD *)(v8 + 256);
  v40 = *(_OWORD *)(v8 + 272);
  *(_QWORD *)(v8 + 256) = v100;
  *(_QWORD *)(v8 + 264) = v99;
  *(_QWORD *)(v8 + 272) = v98;
  *(_QWORD *)(v8 + 280) = v97;
  v41 = *(_OWORD *)(v8 + 288);
  v42 = *(_OWORD *)(v8 + 304);
  *(_QWORD *)(v8 + 288) = v67;
  *(_QWORD *)(v8 + 296) = v68;
  *(_QWORD *)(v8 + 304) = v69;
  *(_QWORD *)(v8 + 312) = v70;
  v43 = *(_OWORD *)(v8 + 320);
  v44 = *(_OWORD *)(v8 + 336);
  *(_QWORD *)(v8 + 320) = v71;
  *(_QWORD *)(v8 + 328) = v72;
  *(_QWORD *)(v8 + 336) = v73;
  *(_QWORD *)(v8 + 344) = v74;
  v45 = *(_OWORD *)(v8 + 352);
  v46 = *(_OWORD *)(v8 + 368);
  *(_QWORD *)(v8 + 352) = v75;
  *(_QWORD *)(v8 + 360) = v10;
  *(_OWORD *)(v8 + 368) = v76;
  v47 = *(_OWORD *)(v8 + 384);
  v48 = *(_OWORD *)(v8 + 400);
  *(_QWORD *)(v8 + 384) = v77;
  *(_QWORD *)(v8 + 392) = v78;
  *(_QWORD *)(v8 + 400) = v79;
  *(_QWORD *)(v8 + 408) = v80;
  v49 = *(_OWORD *)(v8 + 416);
  v50 = *(_OWORD *)(v8 + 432);
  *(_QWORD *)(v8 + 416) = v81;
  *(_QWORD *)(v8 + 424) = v82;
  *(_QWORD *)(v8 + 432) = v83;
  *(_QWORD *)(v8 + 440) = v84;
  v51 = *(_OWORD *)(v8 + 448);
  v52 = *(_OWORD *)(v8 + 464);
  *(_QWORD *)(v8 + 448) = v85;
  *(_QWORD *)(v8 + 456) = v86;
  *(_QWORD *)(v8 + 464) = v87;
  *(_QWORD *)(v8 + 472) = v88;
  v53 = *(_OWORD *)(v8 + 480);
  *(_QWORD *)(v8 + 480) = v89;
  *(_QWORD *)(v8 + 488) = v90;
  v54 = *(_QWORD *)(v8 + 496);
  *(_QWORD *)(v8 + 496) = v91;
  *(_QWORD *)(v8 + 504) = v92;
  sub_2378DE7AC(v19, v20, v21, v22, v23, v24, v25, v26, (void *)v27, *((void **)&v27 + 1), (void *)v28, *((unint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32,
    *((uint64_t *)&v32 + 1),
    (void *)v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((void **)&v36 + 1),
    (void *)v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    SBYTE8(v42),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    SBYTE8(v45),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    SBYTE8(v48),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    SBYTE8(v51),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54);
  v55 = *(int *)(v95 + 24);
  v56 = a1 + v55;
  v57 = a2 + v55;
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  swift_retain();
  swift_release();
  *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
  *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v56 + 24) = *(_BYTE *)(v57 + 24);
  *(_BYTE *)(v56 + 25) = *(_BYTE *)(v57 + 25);
  *(_QWORD *)(v56 + 32) = *(_QWORD *)(v57 + 32);
  *(_QWORD *)(v56 + 40) = *(_QWORD *)(v57 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v58 = a3[6];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  swift_retain();
  swift_release();
  v62 = a3[7];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  v8 = type metadata accessor for Instrument();
  memcpy((void *)(a1 + *(int *)(v8 + 20)), (const void *)(a2 + *(int *)(v8 + 20)), 0x200uLL);
  v9 = *(int *)(v8 + 24);
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v10[2] = v11[2];
  v13 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for PopoverModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v7 + 52)) = *(_QWORD *)(a2 + *(int *)(v7 + 52));
  v8 = type metadata accessor for Instrument();
  v9 = *(int *)(v8 + 20);
  v10 = a1 + v9;
  v11 = (_OWORD *)(a2 + v9);
  v12 = *(_QWORD *)v10;
  v13 = *(_QWORD *)(v10 + 8);
  v14 = *(void **)(v10 + 16);
  v15 = *(void **)(v10 + 24);
  v16 = *(void **)(v10 + 32);
  v17 = *(void **)(v10 + 40);
  v18 = *(_QWORD *)(v10 + 48);
  v19 = *(_QWORD *)(v10 + 56);
  v20 = *(_OWORD *)(v10 + 64);
  v21 = *(_OWORD *)(v10 + 80);
  v22 = *(_OWORD *)(v10 + 96);
  v23 = *(_OWORD *)(v10 + 112);
  v24 = *(_OWORD *)(v10 + 128);
  v25 = *(_OWORD *)(v10 + 144);
  v26 = *(_OWORD *)(v10 + 160);
  v27 = *(_OWORD *)(v10 + 176);
  v28 = *(_OWORD *)(v10 + 192);
  v29 = *(_OWORD *)(v10 + 208);
  v30 = *(_OWORD *)(v10 + 224);
  v31 = *(_OWORD *)(v10 + 240);
  v32 = *(_OWORD *)(v10 + 256);
  v33 = *(_OWORD *)(v10 + 272);
  v34 = *(_OWORD *)(v10 + 288);
  v35 = *(_OWORD *)(v10 + 304);
  v36 = *(_OWORD *)(v10 + 320);
  v37 = *(_OWORD *)(v10 + 336);
  v38 = *(_OWORD *)(v10 + 352);
  v39 = *(_OWORD *)(v10 + 368);
  v40 = *(_OWORD *)(v10 + 384);
  v41 = *(_OWORD *)(v10 + 400);
  v42 = *(_OWORD *)(v10 + 416);
  v43 = *(_OWORD *)(v10 + 432);
  v44 = *(_OWORD *)(v10 + 448);
  v45 = *(_OWORD *)(v10 + 464);
  v46 = *(_OWORD *)(v10 + 480);
  v47 = *(_QWORD *)(v10 + 496);
  v48 = v11[1];
  *(_OWORD *)v10 = *v11;
  *(_OWORD *)(v10 + 16) = v48;
  v49 = v11[3];
  *(_OWORD *)(v10 + 32) = v11[2];
  *(_OWORD *)(v10 + 48) = v49;
  v50 = v11[5];
  *(_OWORD *)(v10 + 64) = v11[4];
  *(_OWORD *)(v10 + 80) = v50;
  v51 = v11[7];
  *(_OWORD *)(v10 + 96) = v11[6];
  *(_OWORD *)(v10 + 112) = v51;
  v52 = v11[9];
  *(_OWORD *)(v10 + 128) = v11[8];
  *(_OWORD *)(v10 + 144) = v52;
  v53 = v11[11];
  *(_OWORD *)(v10 + 160) = v11[10];
  *(_OWORD *)(v10 + 176) = v53;
  v54 = v11[13];
  *(_OWORD *)(v10 + 192) = v11[12];
  *(_OWORD *)(v10 + 208) = v54;
  v55 = v11[15];
  *(_OWORD *)(v10 + 224) = v11[14];
  *(_OWORD *)(v10 + 240) = v55;
  v56 = v11[17];
  *(_OWORD *)(v10 + 256) = v11[16];
  *(_OWORD *)(v10 + 272) = v56;
  v57 = v11[19];
  *(_OWORD *)(v10 + 288) = v11[18];
  *(_OWORD *)(v10 + 304) = v57;
  v58 = v11[21];
  *(_OWORD *)(v10 + 320) = v11[20];
  *(_OWORD *)(v10 + 336) = v58;
  v59 = v11[23];
  *(_OWORD *)(v10 + 352) = v11[22];
  *(_OWORD *)(v10 + 368) = v59;
  v60 = v11[25];
  *(_OWORD *)(v10 + 384) = v11[24];
  *(_OWORD *)(v10 + 400) = v60;
  v61 = v11[27];
  *(_OWORD *)(v10 + 416) = v11[26];
  *(_OWORD *)(v10 + 432) = v61;
  v62 = v11[29];
  *(_OWORD *)(v10 + 448) = v11[28];
  *(_OWORD *)(v10 + 464) = v62;
  v63 = v11[31];
  *(_OWORD *)(v10 + 480) = v11[30];
  *(_OWORD *)(v10 + 496) = v63;
  sub_2378DE7AC(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((void **)&v20 + 1), (void *)v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    SBYTE8(v35),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  v64 = *(int *)(v8 + 24);
  v65 = a1 + v64;
  v66 = a2 + v64;
  *(_QWORD *)(a1 + v64) = *(_QWORD *)(a2 + v64);
  swift_release();
  v67 = *(_QWORD *)(v66 + 16);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_QWORD *)(v65 + 16) = v67;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
  *(_BYTE *)(v65 + 25) = *(_BYTE *)(v66 + 25);
  v68 = *(_QWORD *)(v66 + 40);
  *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
  *(_QWORD *)(v65 + 40) = v68;
  swift_bridgeObjectRelease();
  v69 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v69) = *(_OWORD *)(a2 + v69);
  swift_release();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379CC690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Instrument();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PopoverModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379CC718(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Instrument();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_2379CC790()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Instrument();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PopoverView(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  void *v108;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_2379CCF44(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v18 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 24);
    v20 = a1 + v19;
    v79 = a1 + v19;
    v78 = a2 + v19;
    v21 = sub_237A86594();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v78, v21);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)(v20 + *(int *)(v22 + 52)) = *(_QWORD *)(v78 + *(int *)(v22 + 52));
    v81 = type metadata accessor for Instrument();
    v23 = *(int *)(v81 + 20);
    v24 = (uint64_t *)(v20 + v23);
    v25 = (uint64_t *)(v78 + v23);
    v80 = a1;
    v107 = (void *)v25[10];
    v108 = (void *)v25[9];
    v105 = v25[12];
    v106 = v25[11];
    v103 = v25[14];
    v104 = v25[13];
    v101 = v25[16];
    v102 = v25[15];
    v99 = v25[18];
    v100 = v25[17];
    v97 = (void *)v25[20];
    v98 = v25[19];
    v95 = v25[22];
    v96 = v25[21];
    v93 = v25[24];
    v94 = v25[23];
    v91 = v25[26];
    v92 = v25[25];
    v89 = (void *)v25[28];
    v90 = (void *)v25[27];
    v88 = v25[29];
    v87 = v25[30];
    v86 = v25[31];
    v85 = v25[32];
    v84 = v25[33];
    v83 = v25[34];
    v82 = v25[35];
    v50 = v25[36];
    v51 = v25[37];
    v52 = v25[38];
    v53 = v25[39];
    v54 = v25[40];
    v55 = v25[41];
    v56 = v25[42];
    v57 = v25[43];
    v58 = v25[44];
    v59 = v25[45];
    v60 = v25[46];
    v61 = v25[47];
    v62 = v25[48];
    v63 = v25[49];
    v64 = v25[50];
    v65 = v25[51];
    v66 = v25[52];
    v67 = v25[53];
    v68 = v25[54];
    v69 = v25[55];
    v70 = v25[56];
    v71 = v25[57];
    v72 = v25[58];
    v73 = v25[59];
    v74 = v25[60];
    v75 = v25[61];
    v76 = v25[62];
    v77 = v25[63];
    v26 = (void *)v25[8];
    v27 = *v25;
    v28 = v25[1];
    v29 = (void *)v25[2];
    v30 = (void *)v25[3];
    v31 = (void *)v25[4];
    v32 = (void *)v25[5];
    v33 = v25[6];
    v34 = v25[7];
    sub_2378DD44C(*v25, v28, v29, v30, v31, v32, v33, v34, v26, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76);
    *v24 = v27;
    v24[1] = v28;
    v24[2] = (uint64_t)v29;
    v24[3] = (uint64_t)v30;
    v24[4] = (uint64_t)v31;
    v24[5] = (uint64_t)v32;
    v17 = v80;
    v24[6] = v33;
    v24[7] = v34;
    v24[8] = (uint64_t)v26;
    v24[9] = (uint64_t)v108;
    v24[10] = (uint64_t)v107;
    v24[11] = v106;
    v24[12] = v105;
    v24[13] = v104;
    v24[14] = v103;
    v24[15] = v102;
    v24[16] = v101;
    v24[17] = v100;
    v24[18] = v99;
    v24[19] = v98;
    v24[20] = (uint64_t)v97;
    v24[21] = v96;
    v24[22] = v95;
    v24[23] = v94;
    v24[24] = v93;
    v24[25] = v92;
    v24[26] = v91;
    v24[27] = (uint64_t)v90;
    v24[28] = (uint64_t)v89;
    v24[29] = v88;
    v24[30] = v87;
    v24[31] = v86;
    v24[32] = v85;
    v24[33] = v84;
    v24[34] = v83;
    v24[35] = v82;
    v24[36] = v50;
    v24[37] = v51;
    v24[38] = v52;
    v24[39] = v53;
    v24[40] = v54;
    v24[41] = v55;
    v24[42] = v56;
    v24[43] = v57;
    v24[44] = v58;
    v24[45] = v59;
    v24[46] = v60;
    v24[47] = v61;
    v24[48] = v62;
    v24[49] = v63;
    v24[50] = v64;
    v24[51] = v65;
    v24[52] = v66;
    v24[53] = v67;
    v24[54] = v68;
    v24[55] = v69;
    v24[56] = v70;
    v24[57] = v71;
    v24[58] = v72;
    v24[59] = v73;
    v24[60] = v74;
    v24[61] = v75;
    v24[62] = v76;
    v24[63] = v77;
    v35 = *(int *)(v81 + 24);
    v36 = v79 + v35;
    v37 = v78 + v35;
    v38 = *(_QWORD *)(v37 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v38;
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    *(_WORD *)(v36 + 24) = *(_WORD *)(v37 + 24);
    v39 = *(_QWORD *)(v37 + 40);
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    *(_QWORD *)(v36 + 40) = v39;
    v40 = (int *)type metadata accessor for PopoverModel(0);
    *(_BYTE *)(v79 + v40[5]) = *(_BYTE *)(v78 + v40[5]);
    v41 = v40[6];
    v42 = (_QWORD *)(v79 + v41);
    v43 = (_QWORD *)(v78 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v40[7];
    v46 = (_QWORD *)(v79 + v45);
    v47 = (_QWORD *)(v78 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v17;
}

uint64_t sub_2379CCF44(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_2378A2BF4(result);
  else
    return swift_retain();
}

uint64_t destroy for PopoverView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  sub_2379CACEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = sub_237A86594();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + *(int *)(type metadata accessor for Instrument() + 20);
  v25 = *(_OWORD *)(v9 + 464);
  v26 = *(_OWORD *)(v9 + 480);
  v23 = *(_OWORD *)(v9 + 432);
  v24 = *(_OWORD *)(v9 + 448);
  v21 = *(_OWORD *)(v9 + 400);
  v22 = *(_OWORD *)(v9 + 416);
  v19 = *(_OWORD *)(v9 + 368);
  v20 = *(_OWORD *)(v9 + 384);
  v17 = *(_OWORD *)(v9 + 336);
  v18 = *(_OWORD *)(v9 + 352);
  v15 = *(_OWORD *)(v9 + 304);
  v16 = *(_OWORD *)(v9 + 320);
  v13 = *(_OWORD *)(v9 + 272);
  v14 = *(_OWORD *)(v9 + 288);
  v11 = *(_OWORD *)(v9 + 240);
  v12 = *(_OWORD *)(v9 + 256);
  sub_2378DE7AC(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(void **)(v9 + 16), *(void **)(v9 + 24), *(void **)(v9 + 32), *(void **)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(void **)(v9 + 64), *(void **)(v9 + 72), *(void **)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), *(_QWORD *)(v9 + 104), *(_QWORD *)(v9 + 112), *(_QWORD *)(v9 + 120), *(_QWORD *)(v9 + 128), *(_QWORD *)(v9 + 136), *(_QWORD *)(v9 + 144),
    *(_QWORD *)(v9 + 152),
    *(void **)(v9 + 160),
    *(_QWORD *)(v9 + 168),
    *(_QWORD *)(v9 + 176),
    *(_QWORD *)(v9 + 184),
    *(_QWORD *)(v9 + 192),
    *(_QWORD *)(v9 + 200),
    *(_QWORD *)(v9 + 208),
    *(void **)(v9 + 216),
    *(void **)(v9 + 224),
    *(_QWORD *)(v9 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(_QWORD *)(v9 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  void *v106;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_2379CCF44(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = sub_237A86594();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v77 = a1 + v16;
  v18 = a2 + v16;
  v76 = a2 + v16;
  v19 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v17 + *(int *)(v20 + 52)) = *(_QWORD *)(v18 + *(int *)(v20 + 52));
  v78 = type metadata accessor for Instrument();
  v21 = *(int *)(v78 + 20);
  v22 = (uint64_t *)(v17 + v21);
  v23 = (uint64_t *)(v18 + v21);
  v79 = a1;
  v105 = (void *)v23[10];
  v106 = (void *)v23[9];
  v103 = v23[12];
  v104 = v23[11];
  v101 = v23[14];
  v102 = v23[13];
  v99 = v23[16];
  v100 = v23[15];
  v97 = v23[18];
  v98 = v23[17];
  v95 = (void *)v23[20];
  v96 = v23[19];
  v93 = v23[22];
  v94 = v23[21];
  v91 = v23[24];
  v92 = v23[23];
  v89 = v23[26];
  v90 = v23[25];
  v87 = (void *)v23[28];
  v88 = (void *)v23[27];
  v86 = v23[29];
  v85 = v23[30];
  v84 = v23[31];
  v83 = v23[32];
  v82 = v23[33];
  v81 = v23[34];
  v80 = v23[35];
  v48 = v23[36];
  v49 = v23[37];
  v50 = v23[38];
  v51 = v23[39];
  v52 = v23[40];
  v53 = v23[41];
  v54 = v23[42];
  v55 = v23[43];
  v56 = v23[44];
  v57 = v23[45];
  v58 = v23[46];
  v59 = v23[47];
  v60 = v23[48];
  v61 = v23[49];
  v62 = v23[50];
  v63 = v23[51];
  v64 = v23[52];
  v65 = v23[53];
  v66 = v23[54];
  v67 = v23[55];
  v68 = v23[56];
  v69 = v23[57];
  v70 = v23[58];
  v71 = v23[59];
  v72 = v23[60];
  v73 = v23[61];
  v74 = v23[62];
  v75 = v23[63];
  v24 = (void *)v23[8];
  v25 = *v23;
  v26 = v23[1];
  v27 = (void *)v23[2];
  v28 = (void *)v23[3];
  v29 = (void *)v23[4];
  v30 = (void *)v23[5];
  v31 = v23[6];
  v32 = v23[7];
  sub_2378DD44C(*v23, v26, v27, v28, v29, v30, v31, v32, v24, v106, v105, v104, v103, v102, v101, v100, v99, v98, v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74);
  *v22 = v25;
  v22[1] = v26;
  v22[2] = (uint64_t)v27;
  v22[3] = (uint64_t)v28;
  v22[4] = (uint64_t)v29;
  v22[5] = (uint64_t)v30;
  v22[6] = v31;
  v22[7] = v32;
  v22[8] = (uint64_t)v24;
  v22[9] = (uint64_t)v106;
  v22[10] = (uint64_t)v105;
  v22[11] = v104;
  v22[12] = v103;
  v22[13] = v102;
  v22[14] = v101;
  v22[15] = v100;
  v22[16] = v99;
  v22[17] = v98;
  v22[18] = v97;
  v22[19] = v96;
  v22[20] = (uint64_t)v95;
  v22[21] = v94;
  v22[22] = v93;
  v22[23] = v92;
  v22[24] = v91;
  v22[25] = v90;
  v22[26] = v89;
  v22[27] = (uint64_t)v88;
  v22[28] = (uint64_t)v87;
  v22[29] = v86;
  v22[30] = v85;
  v22[31] = v84;
  v22[32] = v83;
  v22[33] = v82;
  v22[34] = v81;
  v22[35] = v80;
  v22[36] = v48;
  v22[37] = v49;
  v22[38] = v50;
  v22[39] = v51;
  v22[40] = v52;
  v22[41] = v53;
  v22[42] = v54;
  v22[43] = v55;
  v22[44] = v56;
  v22[45] = v57;
  v22[46] = v58;
  v22[47] = v59;
  v22[48] = v60;
  v22[49] = v61;
  v22[50] = v62;
  v22[51] = v63;
  v22[52] = v64;
  v22[53] = v65;
  v22[54] = v66;
  v22[55] = v67;
  v22[56] = v68;
  v22[57] = v69;
  v22[58] = v70;
  v22[59] = v71;
  v22[60] = v72;
  v22[61] = v73;
  v22[62] = v74;
  v22[63] = v75;
  v33 = *(int *)(v78 + 24);
  v34 = v77 + v33;
  v35 = v76 + v33;
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_WORD *)(v34 + 24) = *(_WORD *)(v35 + 24);
  v37 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v37;
  v38 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(v77 + v38[5]) = *(_BYTE *)(v76 + v38[5]);
  v39 = v38[6];
  v40 = (_QWORD *)(v77 + v39);
  v41 = (_QWORD *)(v76 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v38[7];
  v44 = (_QWORD *)(v77 + v43);
  v45 = (_QWORD *)(v76 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v79;
}

uint64_t assignWithCopy for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  void *v139;
  void *v140;
  void *v141;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_2379CCF44(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_2379CACEC(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_2378BC024(a1 + v12, &qword_256820B20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v18 = sub_237A86594();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v13, v14, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v111 = a1 + v19;
  v110 = a2 + v19;
  v21 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v20, v110, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v20 + *(int *)(v22 + 52)) = *(_QWORD *)(v110 + *(int *)(v22 + 52));
  v113 = type metadata accessor for Instrument();
  v23 = *(int *)(v113 + 20);
  v24 = v20 + v23;
  v25 = v110 + v23;
  v112 = a1;
  v140 = *(void **)(v25 + 72);
  v141 = *(void **)(v25 + 64);
  v138 = *(_QWORD *)(v25 + 88);
  v139 = *(void **)(v25 + 80);
  v136 = *(_QWORD *)(v25 + 104);
  v137 = *(_QWORD *)(v25 + 96);
  v134 = *(_QWORD *)(v25 + 120);
  v135 = *(_QWORD *)(v25 + 112);
  v132 = *(_QWORD *)(v25 + 136);
  v133 = *(_QWORD *)(v25 + 128);
  v130 = *(_QWORD *)(v25 + 152);
  v131 = *(_QWORD *)(v25 + 144);
  v128 = *(_QWORD *)(v25 + 168);
  v129 = *(void **)(v25 + 160);
  v126 = *(_QWORD *)(v25 + 184);
  v127 = *(_QWORD *)(v25 + 176);
  v125 = *(_QWORD *)(v25 + 192);
  v124 = *(_QWORD *)(v25 + 200);
  v123 = *(_QWORD *)(v25 + 208);
  v122 = *(void **)(v25 + 216);
  v121 = *(void **)(v25 + 224);
  v120 = *(_QWORD *)(v25 + 232);
  v119 = *(_QWORD *)(v25 + 240);
  v118 = *(_QWORD *)(v25 + 248);
  v117 = *(_QWORD *)(v25 + 256);
  v116 = *(_QWORD *)(v25 + 264);
  v115 = *(_QWORD *)(v25 + 272);
  v114 = *(_QWORD *)(v25 + 280);
  v84 = *(_QWORD *)(v25 + 288);
  v85 = *(_QWORD *)(v25 + 296);
  v86 = *(_QWORD *)(v25 + 304);
  v87 = *(_QWORD *)(v25 + 312);
  v88 = *(_QWORD *)(v25 + 320);
  v89 = *(_QWORD *)(v25 + 328);
  v90 = *(_QWORD *)(v25 + 336);
  v26 = *(_QWORD *)(v25 + 344);
  v91 = *(_OWORD *)(v25 + 352);
  v92 = *(_QWORD *)(v25 + 368);
  v93 = *(_QWORD *)(v25 + 376);
  v94 = *(_QWORD *)(v25 + 384);
  v95 = *(_QWORD *)(v25 + 392);
  v96 = *(_QWORD *)(v25 + 400);
  v97 = *(_QWORD *)(v25 + 408);
  v98 = *(_QWORD *)(v25 + 416);
  v99 = *(_QWORD *)(v25 + 424);
  v100 = *(_QWORD *)(v25 + 432);
  v101 = *(_QWORD *)(v25 + 440);
  v102 = *(_QWORD *)(v25 + 448);
  v103 = *(_QWORD *)(v25 + 456);
  v104 = *(_QWORD *)(v25 + 464);
  v105 = *(_QWORD *)(v25 + 472);
  v106 = *(_QWORD *)(v25 + 480);
  v107 = *(_QWORD *)(v25 + 488);
  v108 = *(_QWORD *)(v25 + 496);
  v109 = *(_QWORD *)(v25 + 504);
  v27 = *(_QWORD *)v25;
  v28 = *(_QWORD *)(v25 + 8);
  v29 = *(void **)(v25 + 16);
  v30 = *(void **)(v25 + 24);
  v31 = *(void **)(v25 + 40);
  v32 = *(void **)(v25 + 32);
  v33 = *(_QWORD *)(v25 + 48);
  v34 = *(_QWORD *)(v25 + 56);
  sub_2378DD44C(*(_QWORD *)v25, v28, v29, v30, v32, v31, v33, v34, v141, v140, v139, v138, v137, v136, v135, v134, v133, v132, v131,
    v130,
    v129,
    v128,
    v127,
    v126,
    v125,
    v124,
    v123,
    v122,
    v121,
    v120,
    v119,
    v118,
    v117,
    v116,
    v115,
    v114,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v26,
    v91,
    SBYTE8(v91),
    v92,
    v93,
    *(_OWORD *)(v25 + 384),
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108);
  v35 = *(_QWORD *)v24;
  v36 = *(_QWORD *)(v24 + 8);
  *(_QWORD *)v24 = v27;
  *(_QWORD *)(v24 + 8) = v28;
  v37 = *(void **)(v24 + 16);
  v38 = *(void **)(v24 + 24);
  *(_QWORD *)(v24 + 16) = v29;
  *(_QWORD *)(v24 + 24) = v30;
  v39 = *(void **)(v24 + 32);
  v40 = *(void **)(v24 + 40);
  *(_QWORD *)(v24 + 32) = v32;
  *(_QWORD *)(v24 + 40) = v31;
  v41 = *(_QWORD *)(v24 + 48);
  v42 = *(_QWORD *)(v24 + 56);
  *(_QWORD *)(v24 + 48) = v33;
  *(_QWORD *)(v24 + 56) = v34;
  v43 = *(_OWORD *)(v24 + 64);
  v44 = *(_OWORD *)(v24 + 80);
  *(_QWORD *)(v24 + 64) = v141;
  *(_QWORD *)(v24 + 72) = v140;
  *(_QWORD *)(v24 + 80) = v139;
  *(_QWORD *)(v24 + 88) = v138;
  v45 = *(_OWORD *)(v24 + 96);
  v46 = *(_OWORD *)(v24 + 112);
  *(_QWORD *)(v24 + 96) = v137;
  *(_QWORD *)(v24 + 104) = v136;
  *(_QWORD *)(v24 + 112) = v135;
  *(_QWORD *)(v24 + 120) = v134;
  v47 = *(_OWORD *)(v24 + 128);
  v48 = *(_OWORD *)(v24 + 144);
  *(_QWORD *)(v24 + 128) = v133;
  *(_QWORD *)(v24 + 136) = v132;
  *(_QWORD *)(v24 + 144) = v131;
  *(_QWORD *)(v24 + 152) = v130;
  v49 = *(_OWORD *)(v24 + 160);
  v50 = *(_OWORD *)(v24 + 176);
  *(_QWORD *)(v24 + 160) = v129;
  *(_QWORD *)(v24 + 168) = v128;
  *(_QWORD *)(v24 + 176) = v127;
  *(_QWORD *)(v24 + 184) = v126;
  v51 = *(_OWORD *)(v24 + 192);
  v52 = *(_OWORD *)(v24 + 208);
  *(_QWORD *)(v24 + 192) = v125;
  *(_QWORD *)(v24 + 200) = v124;
  *(_QWORD *)(v24 + 208) = v123;
  *(_QWORD *)(v24 + 216) = v122;
  v53 = *(_OWORD *)(v24 + 224);
  v54 = *(_OWORD *)(v24 + 240);
  *(_QWORD *)(v24 + 224) = v121;
  *(_QWORD *)(v24 + 232) = v120;
  *(_QWORD *)(v24 + 240) = v119;
  *(_QWORD *)(v24 + 248) = v118;
  v55 = *(_OWORD *)(v24 + 256);
  v56 = *(_OWORD *)(v24 + 272);
  *(_QWORD *)(v24 + 256) = v117;
  *(_QWORD *)(v24 + 264) = v116;
  *(_QWORD *)(v24 + 272) = v115;
  *(_QWORD *)(v24 + 280) = v114;
  v57 = *(_OWORD *)(v24 + 288);
  v58 = *(_OWORD *)(v24 + 304);
  *(_QWORD *)(v24 + 288) = v84;
  *(_QWORD *)(v24 + 296) = v85;
  *(_QWORD *)(v24 + 304) = v86;
  *(_QWORD *)(v24 + 312) = v87;
  v59 = *(_OWORD *)(v24 + 320);
  v60 = *(_OWORD *)(v24 + 336);
  *(_QWORD *)(v24 + 320) = v88;
  *(_QWORD *)(v24 + 328) = v89;
  *(_QWORD *)(v24 + 336) = v90;
  *(_QWORD *)(v24 + 344) = v26;
  v61 = *(_OWORD *)(v24 + 352);
  v62 = *(_OWORD *)(v24 + 368);
  *(_OWORD *)(v24 + 352) = v91;
  *(_QWORD *)(v24 + 368) = v92;
  *(_QWORD *)(v24 + 376) = v93;
  v63 = *(_OWORD *)(v24 + 384);
  v64 = *(_OWORD *)(v24 + 400);
  *(_QWORD *)(v24 + 384) = v94;
  *(_QWORD *)(v24 + 392) = v95;
  *(_QWORD *)(v24 + 400) = v96;
  *(_QWORD *)(v24 + 408) = v97;
  v65 = *(_OWORD *)(v24 + 416);
  v66 = *(_OWORD *)(v24 + 432);
  *(_QWORD *)(v24 + 416) = v98;
  *(_QWORD *)(v24 + 424) = v99;
  *(_QWORD *)(v24 + 432) = v100;
  *(_QWORD *)(v24 + 440) = v101;
  v67 = *(_OWORD *)(v24 + 448);
  v68 = *(_OWORD *)(v24 + 464);
  *(_QWORD *)(v24 + 448) = v102;
  *(_QWORD *)(v24 + 456) = v103;
  *(_QWORD *)(v24 + 464) = v104;
  *(_QWORD *)(v24 + 472) = v105;
  v69 = *(_OWORD *)(v24 + 480);
  *(_QWORD *)(v24 + 480) = v106;
  *(_QWORD *)(v24 + 488) = v107;
  v70 = *(_QWORD *)(v24 + 496);
  *(_QWORD *)(v24 + 496) = v108;
  *(_QWORD *)(v24 + 504) = v109;
  sub_2378DE7AC(v35, v36, v37, v38, v39, v40, v41, v42, (void *)v43, *((void **)&v43 + 1), (void *)v44, *((unint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    (void *)v49,
    *((uint64_t *)&v49 + 1),
    v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((void **)&v52 + 1),
    (void *)v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    *((uint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    SBYTE8(v58),
    v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    SBYTE8(v61),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    SBYTE8(v64),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    SBYTE8(v67),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70);
  v71 = *(int *)(v113 + 24);
  v72 = v111 + v71;
  v73 = v110 + v71;
  *(_QWORD *)(v111 + v71) = *(_QWORD *)(v110 + v71);
  swift_retain();
  swift_release();
  *(_QWORD *)(v72 + 8) = *(_QWORD *)(v73 + 8);
  *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v72 + 24) = *(_BYTE *)(v73 + 24);
  *(_BYTE *)(v72 + 25) = *(_BYTE *)(v73 + 25);
  *(_QWORD *)(v72 + 32) = *(_QWORD *)(v73 + 32);
  *(_QWORD *)(v72 + 40) = *(_QWORD *)(v73 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v74 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(v111 + v74[5]) = *(_BYTE *)(v110 + v74[5]);
  v75 = v74[6];
  v76 = (_QWORD *)(v111 + v75);
  v77 = (_QWORD *)(v110 + v75);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  swift_retain();
  swift_release();
  v79 = v74[7];
  v80 = (_QWORD *)(v111 + v79);
  v81 = (_QWORD *)(v110 + v79);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  swift_retain();
  swift_release();
  return v112;
}

uint64_t initializeWithTake for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  int *v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = sub_237A86594();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v15 + *(int *)(v18 + 52)) = *(_QWORD *)(v16 + *(int *)(v18 + 52));
  v19 = type metadata accessor for Instrument();
  memcpy((void *)(v15 + *(int *)(v19 + 20)), (const void *)(v16 + *(int *)(v19 + 20)), 0x200uLL);
  v20 = *(int *)(v19 + 24);
  v21 = (_OWORD *)(v15 + v20);
  v22 = (_OWORD *)(v16 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  v24 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(v15 + v24[5]) = *(_BYTE *)(v16 + v24[5]);
  *(_OWORD *)(v15 + v24[6]) = *(_OWORD *)(v16 + v24[6]);
  *(_OWORD *)(v15 + v24[7]) = *(_OWORD *)(v16 + v24[7]);
  return a1;
}

uint64_t assignWithTake for PopoverView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_2379CACEC(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_2378BC024(a1 + v10, &qword_256820B20);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D58);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820D50);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v17 = sub_237A86594();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(v19 + *(int *)(v22 + 52)) = *(_QWORD *)(v20 + *(int *)(v22 + 52));
  v23 = type metadata accessor for Instrument();
  v24 = *(int *)(v23 + 20);
  v25 = v19 + v24;
  v26 = (_OWORD *)(v20 + v24);
  v27 = *(_QWORD *)v25;
  v28 = *(_QWORD *)(v25 + 8);
  v29 = *(void **)(v25 + 16);
  v30 = *(void **)(v25 + 24);
  v31 = *(void **)(v25 + 32);
  v32 = *(void **)(v25 + 40);
  v33 = *(_QWORD *)(v25 + 48);
  v34 = *(_QWORD *)(v25 + 56);
  v35 = *(_OWORD *)(v25 + 64);
  v36 = *(_OWORD *)(v25 + 80);
  v37 = *(_OWORD *)(v25 + 96);
  v38 = *(_OWORD *)(v25 + 112);
  v39 = *(_OWORD *)(v25 + 128);
  v40 = *(_OWORD *)(v25 + 144);
  v41 = *(_OWORD *)(v25 + 160);
  v42 = *(_OWORD *)(v25 + 176);
  v43 = *(_OWORD *)(v25 + 192);
  v44 = *(_OWORD *)(v25 + 208);
  v45 = *(_OWORD *)(v25 + 224);
  v46 = *(_OWORD *)(v25 + 240);
  v47 = *(_OWORD *)(v25 + 256);
  v48 = *(_OWORD *)(v25 + 272);
  v49 = *(_OWORD *)(v25 + 288);
  v50 = *(_OWORD *)(v25 + 304);
  v51 = *(_OWORD *)(v25 + 320);
  v52 = *(_OWORD *)(v25 + 336);
  v53 = *(_OWORD *)(v25 + 352);
  v54 = *(_OWORD *)(v25 + 368);
  v55 = *(_OWORD *)(v25 + 384);
  v56 = *(_OWORD *)(v25 + 400);
  v57 = *(_OWORD *)(v25 + 416);
  v58 = *(_OWORD *)(v25 + 432);
  v59 = *(_OWORD *)(v25 + 448);
  v60 = *(_OWORD *)(v25 + 464);
  v61 = *(_OWORD *)(v25 + 480);
  v62 = *(_QWORD *)(v25 + 496);
  v63 = v26[1];
  *(_OWORD *)v25 = *v26;
  *(_OWORD *)(v25 + 16) = v63;
  v64 = v26[3];
  *(_OWORD *)(v25 + 32) = v26[2];
  *(_OWORD *)(v25 + 48) = v64;
  v65 = v26[5];
  *(_OWORD *)(v25 + 64) = v26[4];
  *(_OWORD *)(v25 + 80) = v65;
  v66 = v26[7];
  *(_OWORD *)(v25 + 96) = v26[6];
  *(_OWORD *)(v25 + 112) = v66;
  v67 = v26[9];
  *(_OWORD *)(v25 + 128) = v26[8];
  *(_OWORD *)(v25 + 144) = v67;
  v68 = v26[11];
  *(_OWORD *)(v25 + 160) = v26[10];
  *(_OWORD *)(v25 + 176) = v68;
  v69 = v26[13];
  *(_OWORD *)(v25 + 192) = v26[12];
  *(_OWORD *)(v25 + 208) = v69;
  v70 = v26[15];
  *(_OWORD *)(v25 + 224) = v26[14];
  *(_OWORD *)(v25 + 240) = v70;
  v71 = v26[17];
  *(_OWORD *)(v25 + 256) = v26[16];
  *(_OWORD *)(v25 + 272) = v71;
  v72 = v26[19];
  *(_OWORD *)(v25 + 288) = v26[18];
  *(_OWORD *)(v25 + 304) = v72;
  v73 = v26[21];
  *(_OWORD *)(v25 + 320) = v26[20];
  *(_OWORD *)(v25 + 336) = v73;
  v74 = v26[23];
  *(_OWORD *)(v25 + 352) = v26[22];
  *(_OWORD *)(v25 + 368) = v74;
  v75 = v26[25];
  *(_OWORD *)(v25 + 384) = v26[24];
  *(_OWORD *)(v25 + 400) = v75;
  v76 = v26[27];
  *(_OWORD *)(v25 + 416) = v26[26];
  *(_OWORD *)(v25 + 432) = v76;
  v77 = v26[29];
  *(_OWORD *)(v25 + 448) = v26[28];
  *(_OWORD *)(v25 + 464) = v77;
  v78 = v26[31];
  *(_OWORD *)(v25 + 480) = v26[30];
  *(_OWORD *)(v25 + 496) = v78;
  sub_2378DE7AC(v27, v28, v29, v30, v31, v32, v33, v34, (void *)v35, *((void **)&v35 + 1), (void *)v36, *((unint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
    *((uint64_t *)&v40 + 1),
    (void *)v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((void **)&v44 + 1),
    (void *)v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    SBYTE8(v56),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59,
    SBYTE8(v59),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    *((uint64_t *)&v61 + 1),
    v62);
  v79 = *(int *)(v23 + 24);
  v80 = v19 + v79;
  v81 = v20 + v79;
  *(_QWORD *)(v19 + v79) = *(_QWORD *)(v20 + v79);
  swift_release();
  v82 = *(_QWORD *)(v81 + 16);
  *(_QWORD *)(v80 + 8) = *(_QWORD *)(v81 + 8);
  *(_QWORD *)(v80 + 16) = v82;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v80 + 24) = *(_BYTE *)(v81 + 24);
  *(_BYTE *)(v80 + 25) = *(_BYTE *)(v81 + 25);
  v83 = *(_QWORD *)(v81 + 40);
  *(_QWORD *)(v80 + 32) = *(_QWORD *)(v81 + 32);
  *(_QWORD *)(v80 + 40) = v83;
  swift_bridgeObjectRelease();
  v84 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(v19 + v84[5]) = *(_BYTE *)(v20 + v84[5]);
  *(_OWORD *)(v19 + v84[6]) = *(_OWORD *)(v20 + v84[6]);
  swift_release();
  *(_OWORD *)(v19 + v84[7]) = *(_OWORD *)(v20 + v84[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379CE5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826510);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for PopoverModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PopoverView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379CE648(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826510);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for PopoverModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2379CE6E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2379CE774();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PopoverModel(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2379CE774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256826580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256820D50);
    v0 = sub_237A867E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256826580);
  }
}

uint64_t sub_2379CE7CC()
{
  return sub_2378B70D4(&qword_2568265B8, &qword_2568265C0, MEMORY[0x24BDEC6F8]);
}

unint64_t sub_2379CE7FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568265C8;
  if (!qword_2568265C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568265D0);
    v2[0] = sub_23786FAA0(&qword_256826470, type metadata accessor for IconNotificationButton, (uint64_t)&protocol conformance descriptor for IconNotificationButton);
    v2[1] = sub_2378B70D4(&qword_256824AD8, &qword_256824AC8, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x23B81FA98](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568265C8);
  }
  return result;
}

uint64_t sub_2379CE89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverView(0) - 8) + 80);
  return sub_2379C9D38(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_2379CE8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PopoverView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2);
  v4 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(uint64_t))(v3 + *(int *)(v4 + 24)))(v3);
}

_QWORD *sub_2379CE954(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;

  v4 = type metadata accessor for PopoverModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = v34;
    v20 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v66 = (int *)v4;
    v6 = sub_237A86594();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 52));
    v67 = type metadata accessor for Instrument();
    v8 = *(int *)(v67 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v65 = a2;
    v93 = (void *)v10[10];
    v94 = (void *)v10[9];
    v91 = v10[12];
    v92 = v10[11];
    v89 = v10[14];
    v90 = v10[13];
    v87 = v10[16];
    v88 = v10[15];
    v85 = v10[18];
    v86 = v10[17];
    v83 = (void *)v10[20];
    v84 = v10[19];
    v81 = v10[22];
    v82 = v10[21];
    v79 = v10[24];
    v80 = v10[23];
    v77 = v10[26];
    v78 = v10[25];
    v75 = (void *)v10[28];
    v76 = (void *)v10[27];
    v74 = v10[29];
    v73 = v10[30];
    v72 = v10[31];
    v71 = v10[32];
    v70 = v10[33];
    v69 = v10[34];
    v68 = v10[35];
    v64 = a1;
    v36 = v10[36];
    v37 = v10[37];
    v38 = v10[38];
    v39 = v10[39];
    v40 = v10[40];
    v41 = v10[41];
    v42 = v10[42];
    v43 = v10[43];
    v44 = v10[44];
    v45 = v10[45];
    v46 = v10[46];
    v47 = v10[47];
    v48 = v10[48];
    v49 = v10[49];
    v50 = v10[50];
    v51 = v10[51];
    v52 = v10[52];
    v53 = v10[53];
    v54 = v10[54];
    v55 = v10[55];
    v56 = v10[56];
    v57 = v10[57];
    v58 = v10[58];
    v59 = v10[59];
    v60 = v10[60];
    v61 = v10[61];
    v62 = v10[62];
    v63 = v10[63];
    v11 = (void *)v10[8];
    v12 = *v10;
    v13 = v10[1];
    v14 = (void *)v10[2];
    v15 = (void *)v10[3];
    v16 = (void *)v10[4];
    v17 = (void *)v10[5];
    v18 = v10[6];
    v19 = v10[7];
    sub_2378DD44C(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62);
    *v9 = v12;
    v9[1] = v13;
    v9[2] = (uint64_t)v14;
    v9[3] = (uint64_t)v15;
    v9[4] = (uint64_t)v16;
    v9[5] = (uint64_t)v17;
    v9[6] = v18;
    v9[7] = v19;
    v9[8] = (uint64_t)v11;
    v20 = v64;
    v9[9] = (uint64_t)v94;
    v9[10] = (uint64_t)v93;
    v9[11] = v92;
    v9[12] = v91;
    v9[13] = v90;
    v9[14] = v89;
    v9[15] = v88;
    v9[16] = v87;
    v9[17] = v86;
    v9[18] = v85;
    v9[19] = v84;
    v9[20] = (uint64_t)v83;
    v9[21] = v82;
    v9[22] = v81;
    v9[23] = v80;
    v9[24] = v79;
    v9[25] = v78;
    v9[26] = v77;
    v9[27] = (uint64_t)v76;
    v9[28] = (uint64_t)v75;
    v9[29] = v74;
    v9[30] = v73;
    v9[31] = v72;
    v9[32] = v71;
    v9[33] = v70;
    v9[34] = v69;
    v9[35] = v68;
    v9[36] = v36;
    v9[37] = v37;
    v9[38] = v38;
    v9[39] = v39;
    v9[40] = v40;
    v9[41] = v41;
    v9[42] = v42;
    v9[43] = v43;
    v9[44] = v44;
    v9[45] = v45;
    v9[46] = v46;
    v9[47] = v47;
    v9[48] = v48;
    v9[49] = v49;
    v9[50] = v50;
    v9[51] = v51;
    v9[52] = v52;
    v9[53] = v53;
    v9[54] = v54;
    v9[55] = v55;
    v9[56] = v56;
    v9[57] = v57;
    v9[58] = v58;
    v9[59] = v59;
    v9[60] = v60;
    v9[61] = v61;
    v9[62] = v62;
    v9[63] = v63;
    v21 = *(int *)(v67 + 24);
    v22 = (char *)v64 + v21;
    v23 = (char *)v65 + v21;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
    v25 = *((_QWORD *)v23 + 5);
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 5) = v25;
    *((_BYTE *)v64 + v66[5]) = *((_BYTE *)v65 + v66[5]);
    v26 = v66[6];
    v27 = (_QWORD *)((char *)v64 + v26);
    v28 = (_QWORD *)((char *)v65 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v66[7];
    v31 = (_QWORD *)((char *)v64 + v30);
    v32 = (_QWORD *)((char *)v65 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v20;
}

uint64_t sub_2379CEF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
  v19 = *(_OWORD *)(v3 + 464);
  v20 = *(_OWORD *)(v3 + 480);
  v17 = *(_OWORD *)(v3 + 432);
  v18 = *(_OWORD *)(v3 + 448);
  v15 = *(_OWORD *)(v3 + 400);
  v16 = *(_OWORD *)(v3 + 416);
  v13 = *(_OWORD *)(v3 + 368);
  v14 = *(_OWORD *)(v3 + 384);
  v11 = *(_OWORD *)(v3 + 336);
  v12 = *(_OWORD *)(v3 + 352);
  v9 = *(_OWORD *)(v3 + 304);
  v10 = *(_OWORD *)(v3 + 320);
  v7 = *(_OWORD *)(v3 + 272);
  v8 = *(_OWORD *)(v3 + 288);
  v5 = *(_OWORD *)(v3 + 240);
  v6 = *(_OWORD *)(v3 + 256);
  sub_2378DE7AC(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(void **)(v3 + 64), *(void **)(v3 + 72), *(void **)(v3 + 80), *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 120), *(_QWORD *)(v3 + 128), *(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144),
    *(_QWORD *)(v3 + 152),
    *(void **)(v3 + 160),
    *(_QWORD *)(v3 + 168),
    *(_QWORD *)(v3 + 176),
    *(_QWORD *)(v3 + 184),
    *(_QWORD *)(v3 + 192),
    *(_QWORD *)(v3 + 200),
    *(_QWORD *)(v3 + 208),
    *(void **)(v3 + 216),
    *(void **)(v3 + 224),
    *(_QWORD *)(v3 + 232),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    SBYTE8(v9),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    *(_QWORD *)(v3 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PopoverModel(0);
  swift_release();
  return swift_release();
}

uint64_t sub_2379CF0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void *v89;
  void *v90;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v5 + 52)) = *(_QWORD *)(a2 + *(int *)(v5 + 52));
  v63 = type metadata accessor for Instrument();
  v6 = *(int *)(v63 + 20);
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v89 = (void *)v8[10];
  v90 = (void *)v8[9];
  v87 = v8[12];
  v88 = v8[11];
  v85 = v8[14];
  v86 = v8[13];
  v83 = v8[16];
  v84 = v8[15];
  v81 = v8[18];
  v82 = v8[17];
  v79 = (void *)v8[20];
  v80 = v8[19];
  v77 = v8[22];
  v78 = v8[21];
  v75 = v8[24];
  v76 = v8[23];
  v73 = v8[26];
  v74 = v8[25];
  v71 = (void *)v8[28];
  v72 = (void *)v8[27];
  v70 = v8[29];
  v69 = v8[30];
  v68 = v8[31];
  v67 = v8[32];
  v66 = v8[33];
  v65 = v8[34];
  v64 = v8[35];
  v33 = v8[36];
  v34 = v8[37];
  v35 = v8[38];
  v36 = v8[39];
  v37 = v8[40];
  v38 = v8[41];
  v39 = v8[42];
  v40 = v8[43];
  v41 = v8[44];
  v42 = v8[45];
  v43 = v8[46];
  v44 = v8[47];
  v45 = v8[48];
  v46 = v8[49];
  v47 = v8[50];
  v48 = v8[51];
  v49 = v8[52];
  v50 = v8[53];
  v51 = v8[54];
  v52 = v8[55];
  v53 = v8[56];
  v54 = v8[57];
  v55 = v8[58];
  v56 = v8[59];
  v57 = v8[60];
  v58 = v8[61];
  v59 = v8[62];
  v60 = v8[63];
  v9 = (void *)v8[8];
  v10 = *v8;
  v11 = v8[1];
  v12 = (void *)v8[2];
  v13 = (void *)v8[3];
  v14 = (void *)v8[4];
  v15 = (void *)v8[5];
  v16 = v8[6];
  v17 = v8[7];
  sub_2378DD44C(*v8, v11, v12, v13, v14, v15, v16, v17, v9, v90, v89, v88, v87, v86, v85, v84, v83, v82, v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  *v7 = v10;
  v7[1] = v11;
  v7[2] = (uint64_t)v12;
  v7[3] = (uint64_t)v13;
  v7[4] = (uint64_t)v14;
  v7[5] = (uint64_t)v15;
  v7[6] = v16;
  v7[7] = v17;
  v7[8] = (uint64_t)v9;
  v7[9] = (uint64_t)v90;
  v7[10] = (uint64_t)v89;
  v7[11] = v88;
  v7[12] = v87;
  v7[13] = v86;
  v7[14] = v85;
  v7[15] = v84;
  v7[16] = v83;
  v7[17] = v82;
  v7[18] = v81;
  v7[19] = v80;
  v7[20] = (uint64_t)v79;
  v7[21] = v78;
  v7[22] = v77;
  v7[23] = v76;
  v7[24] = v75;
  v7[25] = v74;
  v7[26] = v73;
  v7[27] = (uint64_t)v72;
  v7[28] = (uint64_t)v71;
  v7[29] = v70;
  v7[30] = v69;
  v7[31] = v68;
  v7[32] = v67;
  v7[33] = v66;
  v7[34] = v65;
  v7[35] = v64;
  v7[36] = v33;
  v7[37] = v34;
  v7[38] = v35;
  v7[39] = v36;
  v7[40] = v37;
  v7[41] = v38;
  v7[42] = v39;
  v7[43] = v40;
  v7[44] = v41;
  v7[45] = v42;
  v7[46] = v43;
  v7[47] = v44;
  v7[48] = v45;
  v7[49] = v46;
  v7[50] = v47;
  v7[51] = v48;
  v7[52] = v49;
  v7[53] = v50;
  v7[54] = v51;
  v7[55] = v52;
  v7[56] = v53;
  v7[57] = v54;
  v7[58] = v55;
  v7[59] = v56;
  v7[60] = v57;
  v7[61] = v58;
  v7[62] = v59;
  v7[63] = v60;
  v18 = *(int *)(v63 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_WORD *)(v19 + 24) = *(_WORD *)(v20 + 24);
  v22 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v22;
  v23 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(a1 + v23[5]) = *(_BYTE *)(a2 + v23[5]);
  v24 = v23[6];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v23[7];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2379CF6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void *v121;
  void *v122;
  void *v123;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v5 + 52)) = *(_QWORD *)(a2 + *(int *)(v5 + 52));
  v95 = type metadata accessor for Instrument();
  v6 = *(int *)(v95 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v122 = *(void **)(v8 + 72);
  v123 = *(void **)(v8 + 64);
  v120 = *(_QWORD *)(v8 + 88);
  v121 = *(void **)(v8 + 80);
  v118 = *(_QWORD *)(v8 + 104);
  v119 = *(_QWORD *)(v8 + 96);
  v116 = *(_QWORD *)(v8 + 120);
  v117 = *(_QWORD *)(v8 + 112);
  v114 = *(_QWORD *)(v8 + 136);
  v115 = *(_QWORD *)(v8 + 128);
  v112 = *(_QWORD *)(v8 + 152);
  v113 = *(_QWORD *)(v8 + 144);
  v110 = *(_QWORD *)(v8 + 168);
  v111 = *(void **)(v8 + 160);
  v108 = *(_QWORD *)(v8 + 184);
  v109 = *(_QWORD *)(v8 + 176);
  v107 = *(_QWORD *)(v8 + 192);
  v106 = *(_QWORD *)(v8 + 200);
  v105 = *(_QWORD *)(v8 + 208);
  v104 = *(void **)(v8 + 216);
  v103 = *(void **)(v8 + 224);
  v102 = *(_QWORD *)(v8 + 232);
  v101 = *(_QWORD *)(v8 + 240);
  v100 = *(_QWORD *)(v8 + 248);
  v99 = *(_QWORD *)(v8 + 256);
  v98 = *(_QWORD *)(v8 + 264);
  v97 = *(_QWORD *)(v8 + 272);
  v96 = *(_QWORD *)(v8 + 280);
  v67 = *(_QWORD *)(v8 + 288);
  v68 = *(_QWORD *)(v8 + 296);
  v69 = *(_QWORD *)(v8 + 304);
  v70 = *(_QWORD *)(v8 + 312);
  v71 = *(_QWORD *)(v8 + 320);
  v72 = *(_QWORD *)(v8 + 328);
  v73 = *(_QWORD *)(v8 + 336);
  v74 = *(_QWORD *)(v8 + 344);
  v75 = *(_QWORD *)(v8 + 352);
  v9 = *(_QWORD *)(v8 + 360);
  v76 = *(_OWORD *)(v8 + 368);
  v77 = *(_QWORD *)(v8 + 384);
  v78 = *(_QWORD *)(v8 + 392);
  v79 = *(_QWORD *)(v8 + 400);
  v80 = *(_QWORD *)(v8 + 408);
  v81 = *(_QWORD *)(v8 + 416);
  v82 = *(_QWORD *)(v8 + 424);
  v83 = *(_QWORD *)(v8 + 432);
  v84 = *(_QWORD *)(v8 + 440);
  v85 = *(_QWORD *)(v8 + 448);
  v86 = *(_QWORD *)(v8 + 456);
  v87 = *(_QWORD *)(v8 + 464);
  v88 = *(_QWORD *)(v8 + 472);
  v89 = *(_QWORD *)(v8 + 480);
  v90 = *(_QWORD *)(v8 + 488);
  v91 = *(_QWORD *)(v8 + 496);
  v92 = *(_QWORD *)(v8 + 504);
  v10 = *(_QWORD *)v8;
  v11 = *(_QWORD *)(v8 + 8);
  v12 = *(void **)(v8 + 16);
  v13 = *(void **)(v8 + 24);
  v14 = *(void **)(v8 + 32);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(void **)(v8 + 40);
  v17 = *(_QWORD *)(v8 + 56);
  sub_2378DD44C(*(_QWORD *)v8, v11, v12, v13, v14, v16, v15, v17, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113,
    v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v96,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    *(_OWORD *)(v8 + 336),
    v74,
    v75,
    v9,
    v76,
    *((uint64_t *)&v76 + 1),
    *(_OWORD *)(v8 + 384),
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91);
  v18 = *(_QWORD *)v7;
  v19 = *(_QWORD *)(v7 + 8);
  *(_QWORD *)v7 = v10;
  *(_QWORD *)(v7 + 8) = v11;
  v20 = *(void **)(v7 + 16);
  v21 = *(void **)(v7 + 24);
  *(_QWORD *)(v7 + 16) = v12;
  *(_QWORD *)(v7 + 24) = v13;
  v22 = *(void **)(v7 + 32);
  v23 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 32) = v14;
  *(_QWORD *)(v7 + 40) = v16;
  v24 = *(_QWORD *)(v7 + 48);
  v25 = *(_QWORD *)(v7 + 56);
  *(_QWORD *)(v7 + 48) = v15;
  *(_QWORD *)(v7 + 56) = v17;
  v26 = *(_OWORD *)(v7 + 64);
  v27 = *(_OWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 64) = v123;
  *(_QWORD *)(v7 + 72) = v122;
  *(_QWORD *)(v7 + 80) = v121;
  *(_QWORD *)(v7 + 88) = v120;
  v28 = *(_OWORD *)(v7 + 96);
  v29 = *(_OWORD *)(v7 + 112);
  *(_QWORD *)(v7 + 96) = v119;
  *(_QWORD *)(v7 + 104) = v118;
  *(_QWORD *)(v7 + 112) = v117;
  *(_QWORD *)(v7 + 120) = v116;
  v30 = *(_OWORD *)(v7 + 128);
  v31 = *(_OWORD *)(v7 + 144);
  *(_QWORD *)(v7 + 128) = v115;
  *(_QWORD *)(v7 + 136) = v114;
  *(_QWORD *)(v7 + 144) = v113;
  *(_QWORD *)(v7 + 152) = v112;
  v32 = *(_OWORD *)(v7 + 160);
  v33 = *(_OWORD *)(v7 + 176);
  *(_QWORD *)(v7 + 160) = v111;
  *(_QWORD *)(v7 + 168) = v110;
  *(_QWORD *)(v7 + 176) = v109;
  *(_QWORD *)(v7 + 184) = v108;
  v34 = *(_OWORD *)(v7 + 192);
  v35 = *(_OWORD *)(v7 + 208);
  *(_QWORD *)(v7 + 192) = v107;
  *(_QWORD *)(v7 + 200) = v106;
  *(_QWORD *)(v7 + 208) = v105;
  *(_QWORD *)(v7 + 216) = v104;
  v36 = *(_OWORD *)(v7 + 224);
  v37 = *(_OWORD *)(v7 + 240);
  *(_QWORD *)(v7 + 224) = v103;
  *(_QWORD *)(v7 + 232) = v102;
  *(_QWORD *)(v7 + 240) = v101;
  *(_QWORD *)(v7 + 248) = v100;
  v38 = *(_OWORD *)(v7 + 256);
  v39 = *(_OWORD *)(v7 + 272);
  *(_QWORD *)(v7 + 256) = v99;
  *(_QWORD *)(v7 + 264) = v98;
  *(_QWORD *)(v7 + 272) = v97;
  *(_QWORD *)(v7 + 280) = v96;
  v40 = *(_OWORD *)(v7 + 288);
  v41 = *(_OWORD *)(v7 + 304);
  *(_QWORD *)(v7 + 288) = v67;
  *(_QWORD *)(v7 + 296) = v68;
  *(_QWORD *)(v7 + 304) = v69;
  *(_QWORD *)(v7 + 312) = v70;
  v42 = *(_OWORD *)(v7 + 320);
  v43 = *(_OWORD *)(v7 + 336);
  *(_QWORD *)(v7 + 320) = v71;
  *(_QWORD *)(v7 + 328) = v72;
  *(_QWORD *)(v7 + 336) = v73;
  *(_QWORD *)(v7 + 344) = v74;
  v44 = *(_OWORD *)(v7 + 352);
  v45 = *(_OWORD *)(v7 + 368);
  *(_QWORD *)(v7 + 352) = v75;
  *(_QWORD *)(v7 + 360) = v9;
  *(_OWORD *)(v7 + 368) = v76;
  v46 = *(_OWORD *)(v7 + 384);
  v47 = *(_OWORD *)(v7 + 400);
  *(_QWORD *)(v7 + 384) = v77;
  *(_QWORD *)(v7 + 392) = v78;
  *(_QWORD *)(v7 + 400) = v79;
  *(_QWORD *)(v7 + 408) = v80;
  v48 = *(_OWORD *)(v7 + 416);
  v49 = *(_OWORD *)(v7 + 432);
  *(_QWORD *)(v7 + 416) = v81;
  *(_QWORD *)(v7 + 424) = v82;
  *(_QWORD *)(v7 + 432) = v83;
  *(_QWORD *)(v7 + 440) = v84;
  v50 = *(_OWORD *)(v7 + 448);
  v51 = *(_OWORD *)(v7 + 464);
  *(_QWORD *)(v7 + 448) = v85;
  *(_QWORD *)(v7 + 456) = v86;
  *(_QWORD *)(v7 + 464) = v87;
  *(_QWORD *)(v7 + 472) = v88;
  v52 = *(_OWORD *)(v7 + 480);
  *(_QWORD *)(v7 + 480) = v89;
  *(_QWORD *)(v7 + 488) = v90;
  v53 = *(_QWORD *)(v7 + 496);
  *(_QWORD *)(v7 + 496) = v91;
  *(_QWORD *)(v7 + 504) = v92;
  sub_2378DE7AC(v18, v19, v20, v21, v22, v23, v24, v25, (void *)v26, *((void **)&v26 + 1), (void *)v27, *((unint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
    *((uint64_t *)&v31 + 1),
    (void *)v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((void **)&v35 + 1),
    (void *)v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    SBYTE8(v47),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53);
  v54 = *(int *)(v95 + 24);
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  swift_retain();
  swift_release();
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(v56 + 8);
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  *(_BYTE *)(v55 + 25) = *(_BYTE *)(v56 + 25);
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  *(_QWORD *)(v55 + 40) = *(_QWORD *)(v56 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(a1 + v57[5]) = *(_BYTE *)(a2 + v57[5]);
  v58 = v57[6];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  swift_retain();
  swift_release();
  v62 = v57[7];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2379CFD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  int *v11;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v5 + 52)) = *(_QWORD *)(a2 + *(int *)(v5 + 52));
  v6 = type metadata accessor for Instrument();
  memcpy((void *)(a1 + *(int *)(v6 + 20)), (const void *)(a2 + *(int *)(v6 + 20)), 0x200uLL);
  v7 = *(int *)(v6 + 24);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(a1 + v11[5]) = *(_BYTE *)(a2 + v11[5]);
  *(_OWORD *)(a1 + v11[6]) = *(_OWORD *)(a2 + v11[6]);
  *(_OWORD *)(a1 + v11[7]) = *(_OWORD *)(a2 + v11[7]);
  return a1;
}

uint64_t sub_2379CFE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;

  v4 = sub_237A86594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256820330);
  *(_QWORD *)(a1 + *(int *)(v5 + 52)) = *(_QWORD *)(a2 + *(int *)(v5 + 52));
  v6 = type metadata accessor for Instrument();
  v7 = *(int *)(v6 + 20);
  v8 = a1 + v7;
  v9 = (_OWORD *)(a2 + v7);
  v10 = *(_QWORD *)v8;
  v11 = *(_QWORD *)(v8 + 8);
  v12 = *(void **)(v8 + 16);
  v13 = *(void **)(v8 + 24);
  v14 = *(void **)(v8 + 32);
  v15 = *(void **)(v8 + 40);
  v16 = *(_QWORD *)(v8 + 48);
  v17 = *(_QWORD *)(v8 + 56);
  v18 = *(_OWORD *)(v8 + 64);
  v19 = *(_OWORD *)(v8 + 80);
  v20 = *(_OWORD *)(v8 + 96);
  v21 = *(_OWORD *)(v8 + 112);
  v22 = *(_OWORD *)(v8 + 128);
  v23 = *(_OWORD *)(v8 + 144);
  v24 = *(_OWORD *)(v8 + 160);
  v25 = *(_OWORD *)(v8 + 176);
  v26 = *(_OWORD *)(v8 + 192);
  v27 = *(_OWORD *)(v8 + 208);
  v28 = *(_OWORD *)(v8 + 224);
  v29 = *(_OWORD *)(v8 + 240);
  v30 = *(_OWORD *)(v8 + 256);
  v31 = *(_OWORD *)(v8 + 272);
  v32 = *(_OWORD *)(v8 + 288);
  v33 = *(_OWORD *)(v8 + 304);
  v34 = *(_OWORD *)(v8 + 320);
  v35 = *(_OWORD *)(v8 + 336);
  v36 = *(_OWORD *)(v8 + 352);
  v37 = *(_OWORD *)(v8 + 368);
  v38 = *(_OWORD *)(v8 + 384);
  v39 = *(_OWORD *)(v8 + 400);
  v40 = *(_OWORD *)(v8 + 416);
  v41 = *(_OWORD *)(v8 + 432);
  v42 = *(_OWORD *)(v8 + 448);
  v43 = *(_OWORD *)(v8 + 464);
  v44 = *(_OWORD *)(v8 + 480);
  v45 = *(_QWORD *)(v8 + 496);
  v46 = v9[1];
  *(_OWORD *)v8 = *v9;
  *(_OWORD *)(v8 + 16) = v46;
  v47 = v9[3];
  *(_OWORD *)(v8 + 32) = v9[2];
  *(_OWORD *)(v8 + 48) = v47;
  v48 = v9[5];
  *(_OWORD *)(v8 + 64) = v9[4];
  *(_OWORD *)(v8 + 80) = v48;
  v49 = v9[7];
  *(_OWORD *)(v8 + 96) = v9[6];
  *(_OWORD *)(v8 + 112) = v49;
  v50 = v9[9];
  *(_OWORD *)(v8 + 128) = v9[8];
  *(_OWORD *)(v8 + 144) = v50;
  v51 = v9[11];
  *(_OWORD *)(v8 + 160) = v9[10];
  *(_OWORD *)(v8 + 176) = v51;
  v52 = v9[13];
  *(_OWORD *)(v8 + 192) = v9[12];
  *(_OWORD *)(v8 + 208) = v52;
  v53 = v9[15];
  *(_OWORD *)(v8 + 224) = v9[14];
  *(_OWORD *)(v8 + 240) = v53;
  v54 = v9[17];
  *(_OWORD *)(v8 + 256) = v9[16];
  *(_OWORD *)(v8 + 272) = v54;
  v55 = v9[19];
  *(_OWORD *)(v8 + 288) = v9[18];
  *(_OWORD *)(v8 + 304) = v55;
  v56 = v9[21];
  *(_OWORD *)(v8 + 320) = v9[20];
  *(_OWORD *)(v8 + 336) = v56;
  v57 = v9[23];
  *(_OWORD *)(v8 + 352) = v9[22];
  *(_OWORD *)(v8 + 368) = v57;
  v58 = v9[25];
  *(_OWORD *)(v8 + 384) = v9[24];
  *(_OWORD *)(v8 + 400) = v58;
  v59 = v9[27];
  *(_OWORD *)(v8 + 416) = v9[26];
  *(_OWORD *)(v8 + 432) = v59;
  v60 = v9[29];
  *(_OWORD *)(v8 + 448) = v9[28];
  *(_OWORD *)(v8 + 464) = v60;
  v61 = v9[31];
  *(_OWORD *)(v8 + 480) = v9[30];
  *(_OWORD *)(v8 + 496) = v61;
  sub_2378DE7AC(v10, v11, v12, v13, v14, v15, v16, v17, (void *)v18, *((void **)&v18 + 1), (void *)v19, *((unint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23,
    *((uint64_t *)&v23 + 1),
    (void *)v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((void **)&v27 + 1),
    (void *)v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    SBYTE8(v39),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    SBYTE8(v42),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45);
  v62 = *(int *)(v6 + 24);
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  swift_release();
  v65 = *(_QWORD *)(v64 + 16);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  *(_QWORD *)(v63 + 16) = v65;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  v66 = *(_QWORD *)(v64 + 40);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = v66;
  swift_bridgeObjectRelease();
  v67 = (int *)type metadata accessor for PopoverModel(0);
  *(_BYTE *)(a1 + v67[5]) = *(_BYTE *)(a2 + v67[5]);
  *(_OWORD *)(a1 + v67[6]) = *(_OWORD *)(a2 + v67[6]);
  swift_release();
  *(_OWORD *)(a1 + v67[7]) = *(_OWORD *)(a2 + v67[7]);
  swift_release();
  return a1;
}

uint64_t sub_2379D008C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379D0098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2379D00D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2379D00E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PopoverModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PopoverContainer(uint64_t a1)
{
  return sub_23790828C(a1, qword_256826668);
}

uint64_t sub_2379D0134()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PopoverModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2379D019C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2379D01BC()
{
  return sub_2378B70D4(&qword_2568266A8, &qword_2568266A0, MEMORY[0x24BDF44C8]);
}

uint64_t Color.init(r:g:b:a:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = sub_237A871B8();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v11 + 104))(v10, *MEMORY[0x24BDF3C28]);
  return MEMORY[0x23B81DEC0](v10, (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, a4);
}

uint64_t Color.init(hex:alpha:)(int a1, double a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_237A871B8();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v8 + 104))(v7, *MEMORY[0x24BDF3C28], v5);
  return MEMORY[0x23B81DEC0](v7, (double)BYTE2(a1) / 255.0, (double)BYTE1(a1) / 255.0, (double)a1 / 255.0, a2);
}

uint64_t NinePartImage.assets.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  ValueMetadata *v42;
  _UNKNOWN **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t i;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  int v85;
  void *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  int v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  int v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  int v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  void *v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132[2];
  _BYTE v133[40];
  uint64_t v134[3];
  __int128 v135;
  _QWORD v136[46];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v127 = *(void **)(v0 + 16);
  v128 = v3;
  v4 = *(unsigned __int8 *)(v0 + 32);
  v93 = *(_QWORD *)(v0 + 40);
  v5 = *(void **)(v0 + 48);
  v123 = v1;
  v124 = v5;
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v121 = *(unsigned __int8 *)(v0 + 80);
  v91 = *(_QWORD *)(v0 + 88);
  v9 = *(void **)(v0 + 96);
  v125 = v6;
  v126 = v9;
  v10 = *(void **)(v0 + 112);
  v117 = *(_QWORD *)(v0 + 104);
  v118 = v10;
  v122 = *(_QWORD *)(v0 + 120);
  v11 = *(unsigned __int8 *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(void **)(v0 + 144);
  v115 = *(_QWORD *)(v0 + 152);
  v116 = v13;
  v114 = *(void **)(v0 + 160);
  v120 = *(_QWORD *)(v0 + 168);
  v119 = *(unsigned __int8 *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 184);
  v76 = v12;
  v77 = v14;
  v15 = *(void **)(v0 + 192);
  v101 = *(_QWORD *)(v0 + 200);
  v102 = v15;
  v16 = *(void **)(v0 + 208);
  v99 = *(_QWORD *)(v0 + 216);
  v100 = v16;
  v17 = *(_QWORD *)(v0 + 224);
  v98 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 248);
  v103 = *(void **)(v0 + 240);
  v104 = v18;
  v19 = *(_QWORD *)(v0 + 264);
  v105 = *(void **)(v0 + 256);
  v106 = v19;
  v107 = *(unsigned __int8 *)(v0 + 272);
  v20 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 296);
  v108 = *(void **)(v0 + 288);
  v109 = v21;
  v22 = *(_QWORD *)(v0 + 312);
  v110 = *(void **)(v0 + 304);
  v111 = v22;
  v112 = *(unsigned __int8 *)(v0 + 320);
  v23 = *(_QWORD *)(v0 + 328);
  v78 = v20;
  v79 = v23;
  v113 = *(void **)(v0 + 336);
  v24 = *(void **)(v0 + 352);
  v82 = *(_QWORD *)(v0 + 344);
  v83 = v24;
  v84 = *(_QWORD *)(v0 + 360);
  v85 = *(unsigned __int8 *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 376);
  v26 = *(_QWORD *)(v0 + 392);
  v86 = *(void **)(v0 + 384);
  v87 = v26;
  v27 = *(_QWORD *)(v0 + 408);
  v88 = *(void **)(v0 + 400);
  v89 = v27;
  v90 = *(unsigned __int8 *)(v0 + 416);
  v28 = *(_QWORD *)(v0 + 424);
  v80 = v25;
  v81 = v28;
  v135 = xmmword_237AA0A40;
  v96 = v136;
  v136[3] = &type metadata for ImageAsset;
  v136[4] = &protocol witness table for ImageAsset;
  v97 = v17;
  v29 = ~(_BYTE)v17;
  v30 = swift_allocObject();
  v95 = v2;
  v31 = v123;
  *(_QWORD *)(v30 + 16) = v2;
  *(_QWORD *)(v30 + 24) = v31;
  v32 = v128;
  *(_QWORD *)(v30 + 32) = v127;
  *(_QWORD *)(v30 + 40) = v32;
  v94 = v4;
  *(_BYTE *)(v30 + 48) = v4;
  *(_QWORD *)(v30 + 56) = v93;
  v136[0] = v30;
  v136[8] = &type metadata for ImageAsset;
  v136[9] = &protocol witness table for ImageAsset;
  v33 = swift_allocObject();
  v34 = v125;
  *(_QWORD *)(v33 + 16) = v124;
  *(_QWORD *)(v33 + 24) = v34;
  v92 = v7;
  v93 = v8;
  *(_QWORD *)(v33 + 32) = v7;
  *(_QWORD *)(v33 + 40) = v8;
  *(_BYTE *)(v33 + 48) = v121;
  *(_QWORD *)(v33 + 56) = v91;
  v136[5] = v33;
  v136[13] = &type metadata for ImageAsset;
  v136[14] = &protocol witness table for ImageAsset;
  v35 = swift_allocObject();
  v36 = v117;
  *(_QWORD *)(v35 + 16) = v126;
  *(_QWORD *)(v35 + 24) = v36;
  v37 = v122;
  *(_QWORD *)(v35 + 32) = v118;
  *(_QWORD *)(v35 + 40) = v37;
  LODWORD(v91) = v11;
  *(_BYTE *)(v35 + 48) = v11;
  *(_QWORD *)(v35 + 56) = v76;
  v136[10] = v35;
  v136[18] = &type metadata for ImageAsset;
  v136[19] = &protocol witness table for ImageAsset;
  v38 = swift_allocObject();
  v136[15] = v38;
  v39 = v115;
  *(_QWORD *)(v38 + 16) = v116;
  *(_QWORD *)(v38 + 24) = v39;
  v40 = v120;
  *(_QWORD *)(v38 + 32) = v114;
  *(_QWORD *)(v38 + 40) = v40;
  *(_BYTE *)(v38 + 48) = v119;
  *(_QWORD *)(v38 + 56) = v77;
  if ((v29 & 0xFE) != 0)
  {
    v41 = swift_allocObject();
    v44 = v101;
    *(_QWORD *)(v41 + 16) = v102;
    *(_QWORD *)(v41 + 24) = v44;
    v45 = v99;
    *(_QWORD *)(v41 + 32) = v100;
    *(_QWORD *)(v41 + 40) = v45;
    *(_BYTE *)(v41 + 48) = v97;
    *(_QWORD *)(v41 + 56) = v98;
    v43 = &protocol witness table for ImageAsset;
    v42 = &type metadata for ImageAsset;
  }
  else
  {
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v136[22] = 0;
    v136[21] = 0;
  }
  v136[20] = v41;
  v136[23] = v42;
  v136[24] = v43;
  v136[28] = &type metadata for ImageAsset;
  v136[29] = &protocol witness table for ImageAsset;
  v46 = swift_allocObject();
  v47 = v104;
  *(_QWORD *)(v46 + 16) = v103;
  *(_QWORD *)(v46 + 24) = v47;
  v48 = v106;
  *(_QWORD *)(v46 + 32) = v105;
  *(_QWORD *)(v46 + 40) = v48;
  *(_BYTE *)(v46 + 48) = v107;
  *(_QWORD *)(v46 + 56) = v78;
  v136[25] = v46;
  v136[33] = &type metadata for ImageAsset;
  v136[34] = &protocol witness table for ImageAsset;
  v49 = swift_allocObject();
  v50 = v109;
  *(_QWORD *)(v49 + 16) = v108;
  *(_QWORD *)(v49 + 24) = v50;
  v51 = v111;
  *(_QWORD *)(v49 + 32) = v110;
  *(_QWORD *)(v49 + 40) = v51;
  *(_BYTE *)(v49 + 48) = v112;
  *(_QWORD *)(v49 + 56) = v79;
  v136[30] = v49;
  v136[38] = &type metadata for ImageAsset;
  v136[39] = &protocol witness table for ImageAsset;
  v52 = swift_allocObject();
  v54 = v82;
  v53 = v83;
  *(_QWORD *)(v52 + 16) = v113;
  *(_QWORD *)(v52 + 24) = v54;
  v55 = v84;
  *(_QWORD *)(v52 + 32) = v53;
  *(_QWORD *)(v52 + 40) = v55;
  v56 = v85;
  *(_BYTE *)(v52 + 48) = v85;
  *(_QWORD *)(v52 + 56) = v80;
  v136[35] = v52;
  v136[43] = &type metadata for ImageAsset;
  v136[44] = &protocol witness table for ImageAsset;
  v57 = swift_allocObject();
  v136[40] = v57;
  v59 = v86;
  v58 = v87;
  *(_QWORD *)(v57 + 16) = v86;
  *(_QWORD *)(v57 + 24) = v58;
  v61 = v88;
  v60 = v89;
  *(_QWORD *)(v57 + 32) = v88;
  *(_QWORD *)(v57 + 40) = v60;
  v62 = v90;
  *(_BYTE *)(v57 + 48) = v90;
  *(_QWORD *)(v57 + 56) = v81;
  v134[0] = MEMORY[0x24BEE4AF8];
  sub_237870090(v95, v123, v127, v128, v94);
  sub_237870090(v124, v125, v92, v93, v121);
  sub_237870090(v126, v117, v118, v122, v91);
  sub_237870090(v116, v115, v114, v120, v119);
  sub_23787007C(v102, v101, v100, v99, v97);
  sub_237870090(v103, v104, v105, v106, v107);
  sub_237870090(v108, v109, v110, v111, v112);
  sub_237870090(v113, v54, v53, v55, v56);
  sub_237870090(v59, v58, v61, v60, v62);
  for (i = 4; i != 49; i += 5)
  {
    sub_2379D09F4((uint64_t)&v134[i + 1], (uint64_t)v133);
    sub_2379D0A3C((uint64_t)v133, (uint64_t)&v129);
    if (v130)
    {
      sub_237870734(&v129, (uint64_t)v132);
      sub_237870734(v132, (uint64_t)&v129);
      v64 = (_QWORD *)v134[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v64 = sub_237895520(0, v64[2] + 1, 1, v64);
        v134[0] = (uint64_t)v64;
      }
      v66 = v64[2];
      v65 = v64[3];
      if (v66 >= v65 >> 1)
        v134[0] = (uint64_t)sub_237895520((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
      v67 = v130;
      v68 = v131;
      v69 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v129, v130);
      v70 = MEMORY[0x24BDAC7A8](v69);
      v72 = (char *)&v75 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v73 + 16))(v72, v70);
      sub_2379D2494(v66, (uint64_t)v72, v134, v67, v68);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v129);
    }
    else
    {
      sub_2378706F4((uint64_t)&v129);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25681E760);
  swift_arrayDestroy();
  return v134[0];
}

uint64_t sub_2379D09C8()
{
  uint64_t v0;

  sub_2378702E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_2379D09F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379D0A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void NinePartImage.restoreAssets(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0)
      ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

__n128 NinePartImage.init(topLeftCorner:topEdge:topRightCorner:leftEdge:middle:rightEdge:bottomLeftCorner:bottomEdge:bottomRightCorner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 result;
  __int128 v36;

  v10 = *(_BYTE *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_BYTE *)(a3 + 32);
  v15 = *(_QWORD *)(a3 + 40);
  v16 = *(_BYTE *)(a4 + 32);
  v17 = *(_QWORD *)(a4 + 40);
  v18 = *((_BYTE *)a6 + 32);
  v19 = *((_QWORD *)a6 + 5);
  v20 = *(_BYTE *)(a7 + 32);
  v21 = *(_QWORD *)(a7 + 40);
  v22 = *(_BYTE *)(a8 + 32);
  v23 = *(_QWORD *)(a8 + 40);
  v24 = *(_BYTE *)(a10 + 32);
  v25 = *(_QWORD *)(a10 + 40);
  v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 16) = v26;
  *(_BYTE *)(a9 + 32) = v10;
  *(_QWORD *)(a9 + 40) = v11;
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 64) = v27;
  *(_BYTE *)(a9 + 80) = v12;
  *(_QWORD *)(a9 + 88) = v13;
  v28 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 112) = v28;
  *(_BYTE *)(a9 + 128) = v14;
  *(_QWORD *)(a9 + 136) = v15;
  v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 144) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 160) = v29;
  *(_BYTE *)(a9 + 176) = v16;
  *(_QWORD *)(a9 + 184) = v17;
  v30 = a5[1];
  *(_OWORD *)(a9 + 192) = *a5;
  *(_OWORD *)(a9 + 208) = v30;
  v31 = *a6;
  v32 = a6[1];
  *(_OWORD *)(a9 + 224) = a5[2];
  *(_OWORD *)(a9 + 240) = v31;
  *(_OWORD *)(a9 + 256) = v32;
  *(_BYTE *)(a9 + 272) = v18;
  *(_QWORD *)(a9 + 280) = v19;
  v33 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a9 + 288) = *(_OWORD *)a7;
  *(_OWORD *)(a9 + 304) = v33;
  *(_BYTE *)(a9 + 320) = v20;
  *(_QWORD *)(a9 + 328) = v21;
  v34 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 336) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 352) = v34;
  *(_BYTE *)(a9 + 368) = v22;
  *(_QWORD *)(a9 + 376) = v23;
  result = *(__n128 *)a10;
  v36 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)(a9 + 384) = *(_OWORD *)a10;
  *(_OWORD *)(a9 + 400) = v36;
  *(_BYTE *)(a9 + 416) = v24;
  *(_QWORD *)(a9 + 424) = v25;
  return result;
}

uint64_t sub_2379D0C38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379D0C78 + 4 * byte_237AA0A50[a1]))(0x437466654C706F74, 0xED000072656E726FLL);
}

uint64_t sub_2379D0C78()
{
  return 0x65676445706F74;
}

uint64_t sub_2379D0C90()
{
  return 0x7468676952706F74;
}

uint64_t sub_2379D0CB4()
{
  return 0x656764457466656CLL;
}

uint64_t sub_2379D0CCC()
{
  return 0x656C6464696DLL;
}

uint64_t sub_2379D0CE0()
{
  return 0x6764457468676972;
}

unint64_t sub_2379D0CFC()
{
  return 0xD000000000000010;
}

uint64_t sub_2379D0D18()
{
  return 0x64456D6F74746F62;
}

unint64_t sub_2379D0D34()
{
  return 0xD000000000000011;
}

uint64_t sub_2379D0D54()
{
  unsigned __int8 *v0;

  return sub_2379D0C38(*v0);
}

uint64_t sub_2379D0D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379D3084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379D0D80()
{
  sub_2379D250C();
  return sub_237A88718();
}

uint64_t sub_2379D0DA8()
{
  sub_2379D250C();
  return sub_237A88724();
}

uint64_t NinePartImage.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char v72;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568266B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v71 = *((unsigned __int8 *)v1 + 32);
  v9 = *((_QWORD *)v1 + 5);
  v62 = *((_QWORD *)v1 + 6);
  v63 = v9;
  v10 = *((_QWORD *)v1 + 7);
  v60 = *((_QWORD *)v1 + 8);
  v61 = v10;
  v59 = *((_QWORD *)v1 + 9);
  v58 = *((unsigned __int8 *)v1 + 80);
  v11 = *((_QWORD *)v1 + 11);
  v56 = *((_QWORD *)v1 + 12);
  v57 = v11;
  v12 = *((_QWORD *)v1 + 13);
  v54 = *((_QWORD *)v1 + 14);
  v55 = v12;
  v53 = *((_QWORD *)v1 + 15);
  v52 = *((unsigned __int8 *)v1 + 128);
  v51 = *((_QWORD *)v1 + 17);
  v46 = v1[9];
  v47 = *((_QWORD *)v1 + 20);
  v48 = *((_QWORD *)v1 + 21);
  v50 = *((unsigned __int8 *)v1 + 176);
  v49 = *((_QWORD *)v1 + 23);
  v41 = v1[12];
  v42 = *((_QWORD *)v1 + 26);
  v43 = *((_QWORD *)v1 + 27);
  v45 = *((_QWORD *)v1 + 28);
  v44 = *((_QWORD *)v1 + 29);
  v36 = v1[15];
  v37 = *((_QWORD *)v1 + 32);
  v38 = *((_QWORD *)v1 + 33);
  v40 = *((unsigned __int8 *)v1 + 272);
  v39 = *((_QWORD *)v1 + 35);
  v31 = v1[18];
  v32 = *((_QWORD *)v1 + 38);
  v33 = *((_QWORD *)v1 + 39);
  v35 = *((unsigned __int8 *)v1 + 320);
  v34 = *((_QWORD *)v1 + 41);
  v26 = v1[21];
  v27 = *((_QWORD *)v1 + 44);
  v28 = *((_QWORD *)v1 + 45);
  v30 = *((unsigned __int8 *)v1 + 368);
  v29 = *((_QWORD *)v1 + 47);
  v21 = v1[24];
  v22 = *((_QWORD *)v1 + 50);
  v23 = *((_QWORD *)v1 + 51);
  v25 = *((unsigned __int8 *)v1 + 416);
  v24 = *((_QWORD *)v1 + 53);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379D250C();
  sub_237A886B8();
  v66 = v64;
  v67 = v7;
  v68 = v8;
  LOBYTE(v69) = v71;
  v13 = v6;
  v70 = v63;
  v72 = 0;
  sub_2378888DC();
  v14 = v65;
  sub_237A882B0();
  if (!v14)
  {
    v15 = v53;
    v16 = v54;
    v18 = v55;
    v17 = v56;
    *(_QWORD *)&v66 = v62;
    *((_QWORD *)&v66 + 1) = v61;
    v67 = v60;
    v68 = v59;
    LOBYTE(v69) = v58;
    v70 = v57;
    v72 = 1;
    sub_237A882B0();
    *(_QWORD *)&v66 = v17;
    *((_QWORD *)&v66 + 1) = v18;
    v67 = v16;
    v68 = v15;
    LOBYTE(v69) = v52;
    v70 = v51;
    v72 = 2;
    sub_237A882B0();
    v66 = v46;
    v67 = v47;
    v68 = v48;
    LOBYTE(v69) = v50;
    v70 = v49;
    v72 = 3;
    sub_237A882B0();
    v66 = v41;
    v67 = v42;
    v68 = v43;
    v69 = v45;
    v70 = v44;
    v72 = 4;
    sub_237A88268();
    v66 = v36;
    v67 = v37;
    v68 = v38;
    LOBYTE(v69) = v40;
    v70 = v39;
    v72 = 5;
    sub_237A882B0();
    v66 = v31;
    v67 = v32;
    v68 = v33;
    LOBYTE(v69) = v35;
    v70 = v34;
    v72 = 6;
    sub_237A882B0();
    v66 = v26;
    v67 = v27;
    v68 = v28;
    LOBYTE(v69) = v30;
    v70 = v29;
    v72 = 7;
    sub_237A882B0();
    v66 = v21;
    v67 = v22;
    v68 = v23;
    LOBYTE(v69) = v25;
    v70 = v24;
    v72 = 8;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

void NinePartImage.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  int v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  int v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  int v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  int v103;
  uint64_t v104;
  _QWORD v105[54];
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char v116;
  _BYTE v117[7];
  uint64_t v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  char v123;
  _BYTE v124[7];
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  char v130;
  _BYTE v131[7];
  uint64_t v132;
  void *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  char v143;
  _BYTE v144[7];
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char v150;
  _BYTE v151[7];
  uint64_t v152;
  void *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  char v157;
  _BYTE v158[7];
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  _BYTE v165[7];
  uint64_t v166;
  char v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  _BYTE v174[7];
  _BYTE v175[7];
  _BYTE v176[7];
  _BYTE v177[7];
  _BYTE v178[7];
  _BYTE v179[7];
  _BYTE v180[7];
  _DWORD v181[3];
  _QWORD *v182;

  v100 = a2;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568266C0);
  v4 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, v7);
  sub_2379D250C();
  v8 = (uint64_t)v6;
  sub_237A88688();
  v182 = a1;
  if (v2)
  {
    v11 = 16;
  }
  else
  {
    v99 = v4;
    LOBYTE(v105[0]) = 0;
    v9 = sub_237888A0C();
    v10 = v8;
    sub_237A881F0();
    v12 = v106;
    v89 = 0;
    v13 = v107;
    v14 = v108;
    LODWORD(a1) = v110;
    v72 = v111;
    LOBYTE(v105[0]) = 1;
    v8 = v109;
    sub_237870090(v106, v107, v108, v109, v110);
    v15 = v89;
    sub_237A881F0();
    v89 = v15;
    v94 = v13;
    v95 = v14;
    v96 = v12;
    if (v15)
    {
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v10, v104);
      sub_2378702E0(v12, v13, v14, v8, (char)a1);
      v11 = 17;
    }
    else
    {
      v71 = v8;
      v70 = (int)a1;
      a1 = v108;
      v16 = v109;
      v17 = v110;
      v69 = v111;
      LOBYTE(v105[0]) = 2;
      v18 = v106;
      v19 = v107;
      sub_237870090(v106, v107, v108, v109, v110);
      v20 = v89;
      sub_237A881F0();
      v92 = a1;
      v93 = v16;
      v90 = v19;
      v91 = v18;
      v103 = v17;
      if (!v20)
      {
        v21 = v108;
        v22 = v109;
        v23 = v110;
        v67 = v111;
        LOBYTE(v105[0]) = 3;
        v24 = v106;
        v88 = v107;
        sub_237870090(v106, v107, v108, v109, v110);
        v68 = v9;
        sub_237A881F0();
        v87 = v22;
        v101 = v24;
        v102 = v21;
        LODWORD(v22) = v23;
        v25 = v106;
        v26 = v107;
        v27 = v108;
        v28 = v111;
        LOBYTE(v105[0]) = 4;
        v97 = v109;
        v98 = v110;
        sub_237870090(v106, v107, v108, v109, v110);
        v29 = v104;
        sub_237A881A8();
        v55 = v28;
        v64 = v25;
        v65 = v26;
        v66 = v27;
        v30 = v107;
        v31 = v110;
        v32 = v111;
        LOBYTE(v105[0]) = 5;
        v33 = v106;
        v62 = v109;
        v63 = v108;
        sub_23787007C(v106, v107, v108, v109, v110);
        sub_237A881F0();
        LODWORD(v56) = 1;
        v60 = v32;
        v61 = v30;
        v58 = v31;
        v59 = v33;
        v57 = v22;
        v34 = v106;
        v35 = v109;
        LODWORD(v32) = v110;
        v54 = v111;
        LOBYTE(v105[0]) = 6;
        v76 = v108;
        v77 = v107;
        sub_237870090(v106, v107, v108, v109, v110);
        sub_237A881F0();
        v74 = v35;
        v75 = v34;
        v73 = v32;
        v36 = v106;
        v37 = v109;
        LODWORD(v35) = v110;
        v53 = v111;
        LOBYTE(v105[0]) = 7;
        v38 = v107;
        v89 = v108;
        sub_237870090(v106, v107, v108, v109, v110);
        sub_237A881F0();
        v86 = v35;
        v83 = v37;
        v84 = v36;
        v85 = v38;
        LODWORD(v38) = v110;
        v52 = v111;
        v167 = 8;
        v79 = v106;
        v80 = v107;
        v81 = v108;
        v82 = v109;
        sub_237870090(v106, v107, v108, v109, v110);
        sub_237A881F0();
        v78 = v38;
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v10, v29);
        v99 = v168;
        v68 = v169;
        v56 = v170;
        v51 = v171;
        HIDWORD(v50) = v172;
        v104 = v173;
        v105[0] = v96;
        v105[1] = v94;
        v105[2] = v95;
        v105[3] = v71;
        LOBYTE(v105[4]) = v70;
        v105[5] = v72;
        v105[6] = v91;
        v105[7] = v90;
        v105[8] = v92;
        v105[9] = v93;
        LOBYTE(v105[10]) = v103;
        v105[11] = v69;
        v105[12] = v101;
        v105[13] = v88;
        v105[14] = v102;
        v105[15] = v87;
        LOBYTE(v105[16]) = v22;
        v105[17] = v67;
        v105[18] = v64;
        v105[19] = v65;
        v105[20] = v66;
        v105[21] = v97;
        LOBYTE(v105[22]) = v98;
        v105[23] = v55;
        v105[24] = v59;
        v105[25] = v61;
        v105[26] = v63;
        v105[27] = v62;
        v105[28] = v58;
        v105[29] = v60;
        v105[30] = v75;
        v105[31] = v77;
        v105[32] = v76;
        v105[33] = v74;
        LOBYTE(v105[34]) = v73;
        v105[35] = v54;
        v39 = v83;
        v105[36] = v84;
        v105[37] = v85;
        v40 = v89;
        v105[38] = v89;
        v105[39] = v83;
        LOBYTE(v105[40]) = v86;
        v105[41] = v53;
        v42 = v79;
        v41 = v80;
        v105[42] = v79;
        v105[43] = v80;
        v43 = v81;
        v44 = v82;
        v105[44] = v81;
        v105[45] = v82;
        LOBYTE(v105[46]) = v38;
        v105[47] = v52;
        v105[48] = v168;
        v105[49] = v169;
        v105[50] = v170;
        v105[51] = v171;
        LOBYTE(v105[52]) = v172;
        v105[53] = v173;
        sub_2379B3EA0((uint64_t)v105, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_237870090, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23787007C);
        sub_2378702E0(v42, v41, v43, v44, v38);
        sub_2378702E0(v84, v85, v40, v39, v86);
        sub_2378702E0(v75, v77, v76, v74, v73);
        sub_2378702CC(v59, v61, v63, v62, v58);
        sub_2378702E0(v64, v65, v66, v97, v98);
        sub_2378702E0(v101, v88, v102, v87, v57);
        v45 = v90;
        LOBYTE(v44) = v103;
        sub_2378702E0(v91, v90, v92, v93, v103);
        v47 = v95;
        v46 = v96;
        v48 = v94;
        v49 = v71;
        LOBYTE(v39) = v70;
        sub_2378702E0(v96, v94, v95, v71, v70);
        memcpy(v100, v105, 0x1B0uLL);
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v182);
        v106 = v46;
        v107 = v48;
        v108 = v47;
        v109 = v49;
        LOBYTE(v110) = v39;
        v111 = v72;
        v112 = v91;
        v113 = v45;
        v114 = v92;
        v115 = v93;
        v116 = v44;
        v118 = v69;
        v119 = v101;
        v120 = v88;
        v121 = v102;
        v122 = v87;
        v123 = v57;
        v125 = v67;
        v126 = v64;
        v127 = v65;
        v128 = v66;
        v129 = v97;
        v130 = v98;
        v132 = v55;
        v133 = v59;
        *(_DWORD *)((char *)&v110 + 1) = v181[0];
        *(_DWORD *)v117 = *(_DWORD *)v180;
        *(_DWORD *)v124 = *(_DWORD *)v179;
        *(_DWORD *)&v131[3] = *(_DWORD *)&v178[3];
        *(_DWORD *)v131 = *(_DWORD *)v178;
        HIDWORD(v110) = *(_DWORD *)((char *)v181 + 3);
        *(_DWORD *)&v117[3] = *(_DWORD *)&v180[3];
        *(_DWORD *)&v124[3] = *(_DWORD *)&v179[3];
        v134 = v61;
        v135 = v63;
        v136 = v62;
        v137 = v58;
        v138 = v60;
        v139 = v75;
        v140 = v77;
        v141 = v76;
        v142 = v74;
        v143 = v73;
        *(_DWORD *)v144 = *(_DWORD *)v177;
        *(_DWORD *)&v144[3] = *(_DWORD *)&v177[3];
        v145 = v54;
        v146 = v84;
        v147 = v85;
        v148 = v89;
        v149 = v83;
        v150 = v86;
        *(_DWORD *)v151 = *(_DWORD *)v176;
        *(_DWORD *)&v151[3] = *(_DWORD *)&v176[3];
        v152 = v53;
        v153 = v79;
        v154 = v80;
        v155 = v81;
        v156 = v82;
        v157 = v78;
        *(_DWORD *)v158 = *(_DWORD *)v175;
        *(_DWORD *)&v158[3] = *(_DWORD *)&v175[3];
        v159 = v52;
        v160 = v99;
        v161 = v68;
        v162 = v56;
        v163 = v51;
        v164 = BYTE4(v50);
        *(_DWORD *)v165 = *(_DWORD *)v174;
        *(_DWORD *)&v165[3] = *(_DWORD *)&v174[3];
        v166 = v104;
        sub_2379B3EA0((uint64_t)&v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2378702CC);
        return;
      }
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v10, v104);
      sub_2378702E0(v18, v19, a1, v16, v17);
      v8 = v71;
      LOBYTE(a1) = v70;
      sub_2378702E0(v96, v94, v95, v71, v70);
      v11 = 19;
    }
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v182);
  if ((v11 & 1) != 0)
    sub_2378702E0(v96, v94, v95, v8, (char)a1);
  if ((v11 & 2) != 0)
    sub_2378702E0(v91, v90, v92, v93, v103);
  sub_2378702CC(0, 0, 0, 0, 254);
}

void sub_2379D2468(_QWORD *a1@<X0>, void *a2@<X8>)
{
  NinePartImage.init(from:)(a1, a2);
}

uint64_t sub_2379D247C(_QWORD *a1)
{
  return NinePartImage.encode(to:)(a1);
}

uint64_t sub_2379D2494(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_237870734(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_2379D250C()
{
  unint64_t result;

  result = qword_2568266B8;
  if (!qword_2568266B8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0B9C, &type metadata for NinePartImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266B8);
  }
  return result;
}

void destroy for NinePartImage(uint64_t a1)
{
  sub_2378702E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_2378702E0(*(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  sub_2378702E0(*(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(void **)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_2378702E0(*(void **)(a1 + 144), *(_QWORD *)(a1 + 152), *(void **)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
    sub_2378702E0(*(void **)(a1 + 192), *(_QWORD *)(a1 + 200), *(void **)(a1 + 208), *(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224));
  sub_2378702E0(*(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(void **)(a1 + 256), *(_QWORD *)(a1 + 264), *(_BYTE *)(a1 + 272));
  sub_2378702E0(*(void **)(a1 + 288), *(_QWORD *)(a1 + 296), *(void **)(a1 + 304), *(_QWORD *)(a1 + 312), *(_BYTE *)(a1 + 320));
  sub_2378702E0(*(void **)(a1 + 336), *(_QWORD *)(a1 + 344), *(void **)(a1 + 352), *(_QWORD *)(a1 + 360), *(_BYTE *)(a1 + 368));
  sub_2378702E0(*(void **)(a1 + 384), *(_QWORD *)(a1 + 392), *(void **)(a1 + 400), *(_QWORD *)(a1 + 408), *(_BYTE *)(a1 + 416));
}

uint64_t initializeWithCopy for NinePartImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(void **)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_BYTE *)(a2 + 80);
  sub_237870090(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v13;
  v14 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(void **)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 120);
  v18 = *(_BYTE *)(a2 + 128);
  sub_237870090(v14, v15, v16, v17, v18);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_BYTE *)(a1 + 128) = v18;
  v19 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 152);
  v21 = *(void **)(a2 + 160);
  v22 = *(_QWORD *)(a2 + 168);
  v23 = *(_BYTE *)(a2 + 176);
  sub_237870090(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 152) = v20;
  *(_QWORD *)(a1 + 160) = v21;
  *(_QWORD *)(a1 + 168) = v22;
  *(_BYTE *)(a1 + 176) = v23;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v24 = *(_QWORD *)(a2 + 224);
  if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
  {
    v26 = *(void **)(a2 + 192);
    v27 = *(_QWORD *)(a2 + 200);
    v28 = *(void **)(a2 + 208);
    v29 = *(_QWORD *)(a2 + 216);
    sub_237870090(v26, v27, v28, v29, *(_QWORD *)(a2 + 224));
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 200) = v27;
    *(_QWORD *)(a1 + 208) = v28;
    *(_QWORD *)(a1 + 216) = v29;
    *(_BYTE *)(a1 + 224) = v24;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  v30 = *(void **)(a2 + 240);
  v31 = *(_QWORD *)(a2 + 248);
  v32 = *(void **)(a2 + 256);
  v33 = *(_QWORD *)(a2 + 264);
  v34 = *(_BYTE *)(a2 + 272);
  sub_237870090(v30, v31, v32, v33, v34);
  *(_QWORD *)(a1 + 240) = v30;
  *(_QWORD *)(a1 + 248) = v31;
  *(_QWORD *)(a1 + 256) = v32;
  *(_QWORD *)(a1 + 264) = v33;
  *(_BYTE *)(a1 + 272) = v34;
  v35 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v36 = *(_QWORD *)(a2 + 296);
  v37 = *(void **)(a2 + 304);
  v38 = *(_QWORD *)(a2 + 312);
  v39 = *(_BYTE *)(a2 + 320);
  sub_237870090(v35, v36, v37, v38, v39);
  *(_QWORD *)(a1 + 288) = v35;
  *(_QWORD *)(a1 + 296) = v36;
  *(_QWORD *)(a1 + 304) = v37;
  *(_QWORD *)(a1 + 312) = v38;
  *(_BYTE *)(a1 + 320) = v39;
  v40 = *(void **)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  v41 = *(_QWORD *)(a2 + 344);
  v42 = *(void **)(a2 + 352);
  v43 = *(_QWORD *)(a2 + 360);
  v44 = *(_BYTE *)(a2 + 368);
  sub_237870090(v40, v41, v42, v43, v44);
  *(_QWORD *)(a1 + 336) = v40;
  *(_QWORD *)(a1 + 344) = v41;
  *(_QWORD *)(a1 + 352) = v42;
  *(_QWORD *)(a1 + 360) = v43;
  *(_BYTE *)(a1 + 368) = v44;
  v45 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v46 = *(_QWORD *)(a2 + 392);
  v47 = *(void **)(a2 + 400);
  v48 = *(_QWORD *)(a2 + 408);
  v49 = *(_BYTE *)(a2 + 416);
  sub_237870090(v45, v46, v47, v48, v49);
  *(_QWORD *)(a1 + 384) = v45;
  *(_QWORD *)(a1 + 392) = v46;
  *(_QWORD *)(a1 + 400) = v47;
  *(_QWORD *)(a1 + 408) = v48;
  *(_BYTE *)(a1 + 416) = v49;
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  return a1;
}

uint64_t assignWithCopy for NinePartImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  char v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  char v104;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_237870090(*(void **)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_2378702E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(void **)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 72);
  v18 = *(_BYTE *)(a2 + 80);
  sub_237870090(v14, v15, v16, v17, v18);
  v19 = *(void **)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(void **)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  v23 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v18;
  sub_2378702E0(v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v24 = *(void **)(a2 + 96);
  v25 = *(_QWORD *)(a2 + 104);
  v26 = *(void **)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 120);
  v28 = *(_BYTE *)(a2 + 128);
  sub_237870090(v24, v25, v26, v27, v28);
  v29 = *(void **)(a1 + 96);
  v30 = *(_QWORD *)(a1 + 104);
  v31 = *(void **)(a1 + 112);
  v32 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_QWORD *)(a1 + 120) = v27;
  v33 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v28;
  sub_2378702E0(v29, v30, v31, v32, v33);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v34 = *(void **)(a2 + 144);
  v35 = *(_QWORD *)(a2 + 152);
  v36 = *(void **)(a2 + 160);
  v37 = *(_QWORD *)(a2 + 168);
  v38 = *(_BYTE *)(a2 + 176);
  sub_237870090(v34, v35, v36, v37, v38);
  v39 = *(void **)(a1 + 144);
  v40 = *(_QWORD *)(a1 + 152);
  v41 = *(void **)(a1 + 160);
  v42 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 144) = v34;
  *(_QWORD *)(a1 + 152) = v35;
  *(_QWORD *)(a1 + 160) = v36;
  *(_QWORD *)(a1 + 168) = v37;
  v43 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v38;
  sub_2378702E0(v39, v40, v41, v42, v43);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v44 = (_OWORD *)(a1 + 192);
  v45 = (_OWORD *)(a2 + 192);
  v46 = *(_QWORD *)(a2 + 224);
  v47 = v46 & 0xFE;
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
  {
    if (v47 == 254)
    {
      sub_237988280(a1 + 192);
      v51 = *(_OWORD *)(a2 + 208);
      v50 = *(_OWORD *)(a2 + 224);
      *v44 = *v45;
      *(_OWORD *)(a1 + 208) = v51;
      *(_OWORD *)(a1 + 224) = v50;
      goto LABEL_9;
    }
    v56 = *(void **)(a2 + 192);
    v57 = *(_QWORD *)(a2 + 200);
    v58 = *(void **)(a2 + 208);
    v59 = *(_QWORD *)(a2 + 216);
    sub_237870090(v56, v57, v58, v59, *(_QWORD *)(a2 + 224));
    v60 = *(void **)(a1 + 192);
    v61 = *(_QWORD *)(a1 + 200);
    v62 = *(void **)(a1 + 208);
    v63 = *(_QWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 192) = v56;
    *(_QWORD *)(a1 + 200) = v57;
    *(_QWORD *)(a1 + 208) = v58;
    *(_QWORD *)(a1 + 216) = v59;
    v64 = *(_BYTE *)(a1 + 224);
    *(_BYTE *)(a1 + 224) = v46;
    sub_2378702E0(v60, v61, v62, v63, v64);
LABEL_8:
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    goto LABEL_9;
  }
  if (v47 != 254)
  {
    v52 = *(void **)(a2 + 192);
    v53 = *(_QWORD *)(a2 + 200);
    v54 = *(void **)(a2 + 208);
    v55 = *(_QWORD *)(a2 + 216);
    sub_237870090(v52, v53, v54, v55, *(_QWORD *)(a2 + 224));
    *(_QWORD *)(a1 + 192) = v52;
    *(_QWORD *)(a1 + 200) = v53;
    *(_QWORD *)(a1 + 208) = v54;
    *(_QWORD *)(a1 + 216) = v55;
    *(_BYTE *)(a1 + 224) = v46;
    goto LABEL_8;
  }
  v48 = *v45;
  v49 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v49;
  *v44 = v48;
LABEL_9:
  v65 = *(void **)(a2 + 240);
  v66 = *(_QWORD *)(a2 + 248);
  v67 = *(void **)(a2 + 256);
  v68 = *(_QWORD *)(a2 + 264);
  v69 = *(_BYTE *)(a2 + 272);
  sub_237870090(v65, v66, v67, v68, v69);
  v70 = *(void **)(a1 + 240);
  v71 = *(_QWORD *)(a1 + 248);
  v72 = *(void **)(a1 + 256);
  v73 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 240) = v65;
  *(_QWORD *)(a1 + 248) = v66;
  *(_QWORD *)(a1 + 256) = v67;
  *(_QWORD *)(a1 + 264) = v68;
  v74 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v69;
  sub_2378702E0(v70, v71, v72, v73, v74);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v75 = *(void **)(a2 + 288);
  v76 = *(_QWORD *)(a2 + 296);
  v77 = *(void **)(a2 + 304);
  v78 = *(_QWORD *)(a2 + 312);
  v79 = *(_BYTE *)(a2 + 320);
  sub_237870090(v75, v76, v77, v78, v79);
  v80 = *(void **)(a1 + 288);
  v81 = *(_QWORD *)(a1 + 296);
  v82 = *(void **)(a1 + 304);
  v83 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 288) = v75;
  *(_QWORD *)(a1 + 296) = v76;
  *(_QWORD *)(a1 + 304) = v77;
  *(_QWORD *)(a1 + 312) = v78;
  v84 = *(_BYTE *)(a1 + 320);
  *(_BYTE *)(a1 + 320) = v79;
  sub_2378702E0(v80, v81, v82, v83, v84);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  v85 = *(void **)(a2 + 336);
  v86 = *(_QWORD *)(a2 + 344);
  v87 = *(void **)(a2 + 352);
  v88 = *(_QWORD *)(a2 + 360);
  v89 = *(_BYTE *)(a2 + 368);
  sub_237870090(v85, v86, v87, v88, v89);
  v90 = *(void **)(a1 + 336);
  v91 = *(_QWORD *)(a1 + 344);
  v92 = *(void **)(a1 + 352);
  v93 = *(_QWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 336) = v85;
  *(_QWORD *)(a1 + 344) = v86;
  *(_QWORD *)(a1 + 352) = v87;
  *(_QWORD *)(a1 + 360) = v88;
  v94 = *(_BYTE *)(a1 + 368);
  *(_BYTE *)(a1 + 368) = v89;
  sub_2378702E0(v90, v91, v92, v93, v94);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v95 = *(void **)(a2 + 384);
  v96 = *(_QWORD *)(a2 + 392);
  v97 = *(void **)(a2 + 400);
  v98 = *(_QWORD *)(a2 + 408);
  v99 = *(_BYTE *)(a2 + 416);
  sub_237870090(v95, v96, v97, v98, v99);
  v100 = *(void **)(a1 + 384);
  v101 = *(_QWORD *)(a1 + 392);
  v102 = *(void **)(a1 + 400);
  v103 = *(_QWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 384) = v95;
  *(_QWORD *)(a1 + 392) = v96;
  *(_QWORD *)(a1 + 400) = v97;
  *(_QWORD *)(a1 + 408) = v98;
  v104 = *(_BYTE *)(a1 + 416);
  *(_BYTE *)(a1 + 416) = v99;
  sub_2378702E0(v100, v101, v102, v103, v104);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  return a1;
}

void *__swift_memcpy432_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B0uLL);
}

uint64_t assignWithTake for NinePartImage(uint64_t a1, uint64_t a2)
{
  char v4;
  _OWORD *v5;
  _OWORD *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  __int128 v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  char v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  __int128 v71;
  char v72;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = (_OWORD *)(a1 + 280);
  v6 = (_OWORD *)(a2 + 280);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2378702E0(v7, v8, v9, v10, v12);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  v15 = *(void **)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(void **)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v13;
  v19 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v14;
  sub_2378702E0(v15, v16, v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 120);
  v21 = *(_BYTE *)(a2 + 128);
  v22 = *(void **)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(void **)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v20;
  v26 = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(a1 + 128) = v21;
  sub_2378702E0(v22, v23, v24, v25, v26);
  v27 = *(_QWORD *)(a2 + 168);
  v28 = *(_BYTE *)(a2 + 176);
  v29 = *(void **)(a1 + 144);
  v30 = *(_QWORD *)(a1 + 152);
  v31 = *(void **)(a1 + 160);
  v32 = *(_QWORD *)(a1 + 168);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = v27;
  v33 = *(_BYTE *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v28;
  sub_2378702E0(v29, v30, v31, v32, v33);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v34 = *(_DWORD *)(a1 + 224);
  if ((~(_BYTE)v34 & 0xFE) != 0)
  {
    v35 = *(_QWORD *)(a2 + 224);
    if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
    {
      v37 = *(void **)(a1 + 192);
      v38 = *(_QWORD *)(a1 + 200);
      v39 = *(void **)(a1 + 208);
      v40 = *(_QWORD *)(a1 + 216);
      v41 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v41;
      *(_BYTE *)(a1 + 224) = v35;
      sub_2378702E0(v37, v38, v39, v40, v34);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      goto LABEL_6;
    }
    sub_237988280(a1 + 192);
  }
  v36 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v36;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_6:
  v42 = *(_BYTE *)(a2 + 272);
  v43 = *(void **)(a1 + 240);
  v44 = *(_QWORD *)(a1 + 248);
  v45 = *(void **)(a1 + 256);
  v46 = *(_QWORD *)(a1 + 264);
  v47 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v47;
  v48 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v42;
  sub_2378702E0(v43, v44, v45, v46, v48);
  v49 = *(_QWORD *)(a2 + 312);
  v50 = *(_BYTE *)(a2 + 320);
  v51 = *(void **)(a1 + 288);
  v52 = *(_QWORD *)(a1 + 296);
  v53 = *(void **)(a1 + 304);
  v54 = *(_QWORD *)(a1 + 312);
  v55 = v6[1];
  *v5 = *v6;
  v5[1] = v55;
  *(_QWORD *)(a1 + 312) = v49;
  v56 = *(_BYTE *)(a1 + 320);
  *(_BYTE *)(a1 + 320) = v50;
  sub_2378702E0(v51, v52, v53, v54, v56);
  v57 = *(_QWORD *)(a2 + 360);
  v58 = *(_BYTE *)(a2 + 368);
  v59 = *(void **)(a1 + 336);
  v60 = *(_QWORD *)(a1 + 344);
  v61 = *(void **)(a1 + 352);
  v62 = *(_QWORD *)(a1 + 360);
  v63 = v6[4];
  v5[3] = v6[3];
  v5[4] = v63;
  *(_QWORD *)(a1 + 360) = v57;
  v64 = *(_BYTE *)(a1 + 368);
  *(_BYTE *)(a1 + 368) = v58;
  sub_2378702E0(v59, v60, v61, v62, v64);
  v65 = *(_QWORD *)(a2 + 408);
  v66 = *(_BYTE *)(a2 + 416);
  v67 = *(void **)(a1 + 384);
  v68 = *(_QWORD *)(a1 + 392);
  v69 = *(void **)(a1 + 400);
  v70 = *(_QWORD *)(a1 + 408);
  v71 = v6[7];
  v5[6] = v6[6];
  v5[7] = v71;
  *(_QWORD *)(a1 + 408) = v65;
  v72 = *(_BYTE *)(a1 + 416);
  *(_BYTE *)(a1 + 416) = v66;
  sub_2378702E0(v67, v68, v69, v70, v72);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  return a1;
}

uint64_t getEnumTagSinglePayload for NinePartImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 432))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NinePartImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 432) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 432) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NinePartImage()
{
  return &type metadata for NinePartImage;
}

uint64_t storeEnumTagSinglePayload for NinePartImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2379D2F2C + 4 * byte_237AA0A5E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2379D2F60 + 4 * byte_237AA0A59[v4]))();
}

uint64_t sub_2379D2F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D2F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379D2F70);
  return result;
}

uint64_t sub_2379D2F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379D2F84);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2379D2F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D2F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NinePartImage.CodingKeys()
{
  return &type metadata for NinePartImage.CodingKeys;
}

unint64_t sub_2379D2FB0()
{
  unint64_t result;

  result = qword_2568266C8;
  if (!qword_2568266C8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0B74, &type metadata for NinePartImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266C8);
  }
  return result;
}

unint64_t sub_2379D2FF8()
{
  unint64_t result;

  result = qword_2568266D0;
  if (!qword_2568266D0)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0AE4, &type metadata for NinePartImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266D0);
  }
  return result;
}

unint64_t sub_2379D3040()
{
  unint64_t result;

  result = qword_2568266D8;
  if (!qword_2568266D8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0B0C, &type metadata for NinePartImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266D8);
  }
  return result;
}

uint64_t sub_2379D3084(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x437466654C706F74 && a2 == 0xED000072656E726FLL;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676445706F74 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xEE0072656E726F43 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656764457466656CLL && a2 == 0xE800000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6464696DLL && a2 == 0xE600000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6764457468676972 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000237AB1E30 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64456D6F74746F62 && a2 == 0xEA00000000006567 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AB1E50)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

Swift::Void __swiftcall ArcPackage.removeLocalNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  int v48;
  __int16 v49;
  _BYTE v50[7];
  _BYTE v51[7];
  _BYTE v52[7];
  _BYTE v53[7];
  _BYTE v54[7];
  _BYTE v55[7];
  _BYTE v56[7];
  _OWORD __dst[30];
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v58 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2379D6290(0, v2, 0);
    v3 = v58;
    v4 = v2 - 1;
    for (i = 32; ; i += 480)
    {
      memcpy(__dst, (const void *)(v1 + i), sizeof(__dst));
      sub_23786FE8C((uint64_t)__dst);
      swift_bridgeObjectRelease();
      v58 = v3;
      v7 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v3 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_2379D6290(v6 > 1, v7 + 1, 1);
        v3 = v58;
      }
      v8 = *((_QWORD *)&__dst[28] + 1);
      v9 = BYTE9(__dst[27]);
      v10 = BYTE8(__dst[27]);
      v11 = *(_QWORD *)&__dst[26];
      v12 = BYTE8(__dst[26]);
      v13 = *(_QWORD *)&__dst[27];
      v14 = BYTE8(__dst[23]);
      v15 = __dst[20];
      v16 = *(_QWORD *)&__dst[23];
      v17 = *((_QWORD *)&__dst[20] + 1);
      v18 = BYTE8(__dst[15]);
      v19 = __dst[11];
      v20 = BYTE8(__dst[6]);
      v21 = *(_QWORD *)&__dst[3];
      v22 = __dst[1];
      v23 = *((_QWORD *)&__dst[0] + 1);
      v24 = *((_QWORD *)&__dst[1] + 1);
      v25 = v3 + 480 * v7;
      v26 = __dst[2];
      v27 = *(_OWORD *)((char *)&__dst[3] + 8);
      v28 = *(_OWORD *)((char *)&__dst[4] + 8);
      v29 = *(_OWORD *)((char *)&__dst[5] + 8);
      v30 = __dst[7];
      v31 = __dst[8];
      v32 = __dst[9];
      v33 = __dst[10];
      v34 = *(_OWORD *)((char *)&__dst[11] + 8);
      v35 = *(_OWORD *)((char *)&__dst[12] + 8);
      v36 = *(_OWORD *)((char *)&__dst[13] + 8);
      v37 = *(_OWORD *)((char *)&__dst[14] + 8);
      v38 = __dst[16];
      v39 = __dst[17];
      v40 = __dst[18];
      v41 = __dst[19];
      v42 = __dst[21];
      v43 = __dst[22];
      v44 = __dst[24];
      v45 = __dst[25];
      v46 = __dst[29];
      *(_QWORD *)(v25 + 32) = *(_QWORD *)&__dst[0];
      v25 += 32;
      *(_QWORD *)(v3 + 16) = v7 + 1;
      *(_QWORD *)(v25 + 8) = v23;
      *(_BYTE *)(v25 + 16) = v22;
      *(_DWORD *)(v25 + 17) = *(_DWORD *)v56;
      *(_DWORD *)(v25 + 20) = *(_DWORD *)&v56[3];
      *(_QWORD *)(v25 + 24) = v24;
      *(_OWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 48) = v21;
      *(_OWORD *)(v25 + 56) = v27;
      *(_OWORD *)(v25 + 72) = v28;
      *(_OWORD *)(v25 + 88) = v29;
      *(_BYTE *)(v25 + 104) = v20;
      *(_DWORD *)(v25 + 108) = *(_DWORD *)&v55[3];
      *(_DWORD *)(v25 + 105) = *(_DWORD *)v55;
      *(_OWORD *)(v25 + 112) = v30;
      *(_OWORD *)(v25 + 128) = v31;
      *(_OWORD *)(v25 + 144) = v32;
      *(_OWORD *)(v25 + 160) = v33;
      *(_BYTE *)(v25 + 176) = v19;
      *(_DWORD *)(v25 + 180) = *(_DWORD *)&v54[3];
      *(_DWORD *)(v25 + 177) = *(_DWORD *)v54;
      *(_OWORD *)(v25 + 184) = v34;
      *(_OWORD *)(v25 + 200) = v35;
      *(_OWORD *)(v25 + 216) = v36;
      *(_OWORD *)(v25 + 232) = v37;
      *(_BYTE *)(v25 + 248) = v18;
      *(_DWORD *)(v25 + 252) = *(_DWORD *)&v53[3];
      *(_DWORD *)(v25 + 249) = *(_DWORD *)v53;
      *(_OWORD *)(v25 + 256) = v38;
      *(_OWORD *)(v25 + 272) = v39;
      *(_OWORD *)(v25 + 288) = v40;
      *(_OWORD *)(v25 + 304) = v41;
      *(_BYTE *)(v25 + 320) = v15;
      *(_DWORD *)(v25 + 324) = *(_DWORD *)&v52[3];
      *(_DWORD *)(v25 + 321) = *(_DWORD *)v52;
      *(_QWORD *)(v25 + 328) = v17;
      *(_OWORD *)(v25 + 336) = v42;
      *(_OWORD *)(v25 + 352) = v43;
      *(_QWORD *)(v25 + 368) = v16;
      *(_BYTE *)(v25 + 376) = v14;
      *(_DWORD *)(v25 + 380) = *(_DWORD *)&v51[3];
      *(_DWORD *)(v25 + 377) = *(_DWORD *)v51;
      *(_OWORD *)(v25 + 384) = v44;
      *(_OWORD *)(v25 + 400) = v45;
      *(_QWORD *)(v25 + 416) = v11;
      *(_BYTE *)(v25 + 424) = v12;
      *(_DWORD *)(v25 + 428) = *(_DWORD *)&v50[3];
      *(_DWORD *)(v25 + 425) = *(_DWORD *)v50;
      *(_QWORD *)(v25 + 432) = v13;
      *(_BYTE *)(v25 + 440) = v10;
      *(_BYTE *)(v25 + 441) = v9;
      *(_DWORD *)(v25 + 442) = v48;
      *(_WORD *)(v25 + 446) = v49;
      *(_QWORD *)(v25 + 448) = 0;
      *(_QWORD *)(v25 + 456) = v8;
      *(_OWORD *)(v25 + 464) = v46;
      if (!v4)
        break;
      --v4;
    }
    swift_bridgeObjectRelease_n();
    v0 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 112) = v3;
}

uint64_t ArcPackage.infoPlistContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 96);
  v17 = *(_QWORD *)(v1 + 88);
  v16 = *(_BYTE *)(v1 + 104);
  v9 = sub_2379D3CA0(*(_QWORD *)v1, v3, qword_250969820);
  swift_arrayDestroy();
  if ((v9 & 1) != 0)
    v10 = 1;
  else
    v10 = 2;
  if (byte_2568219B8 && byte_2568219B8 != 1)
  {
    v14 = sub_237A882E0();
    v7 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = v14;
    v13 = 1;
    v10 = 2;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_237A882E0();
    v13 = 0;
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v11;
  }
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v16;
  *(_BYTE *)(a1 + 65) = v10;
  *(_QWORD *)(a1 + 72) = 0xD000000000000013;
  *(_QWORD *)(a1 + 80) = 0x8000000237AB1E70;
  *(_QWORD *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 96) = v13;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t InfoPlist.asBinary()()
{
  uint64_t v0;

  sub_237A864C8();
  swift_allocObject();
  sub_237A864BC();
  sub_237A864A4();
  sub_237870938();
  v0 = sub_237A864B0();
  swift_release();
  return v0;
}

uint64_t ArcPackage.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _BYTE v12[480];
  _OWORD __dst[30];

  v4 = *(_QWORD *)(v2 + 112);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = *a1;
    v8 = a1[1];
    v9 = (uint64_t *)(v4 + 32);
    while (1)
    {
      result = *v9;
      if (*v9 == v7 && v9[1] == v8)
        break;
      result = sub_237A8840C();
      if ((result & 1) != 0)
        break;
      ++v6;
      v9 += 60;
      if (v5 == v6)
        goto LABEL_9;
    }
    if (v6 >= v5)
    {
      __break(1u);
    }
    else
    {
      memcpy(v12, v9, sizeof(v12));
      memmove(__dst, v9, 0x1E0uLL);
      nullsub_1(__dst);
      sub_2379D62AC((uint64_t)__dst, a2);
      return sub_23786FE8C((uint64_t)v12);
    }
  }
  else
  {
LABEL_9:
    sub_23787032C(__dst);
    return sub_2379D62AC((uint64_t)__dst, a2);
  }
  return result;
}

void sub_2379D3A88(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2379D3ACC()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

void sub_2379D3B88(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2379D3BCC()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379D3CA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_237A8840C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_237A8840C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2379D3D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *i;
  BOOL v7;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  for (i = (_QWORD *)(a3 + 40); ; i += 2)
  {
    v7 = *(i - 1) == a1 && *i == a2;
    if (v7 || (sub_237A8840C() & 1) != 0)
      break;
    if (!--v3)
      return 0;
  }
  return 1;
}

uint64_t sub_2379D3DD4@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_23793E8F8(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    memcpy(a2, &v5[60 * a1 + 4], 0x1E0uLL);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(&v5[60 * a1 + 4], &v5[60 * a1 + 64], 480 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_237A880F4();
  __break(1u);
  return result;
}

uint64_t static ArcPackage.from(json:)()
{
  sub_237A86360();
  swift_allocObject();
  sub_237A86354();
  sub_2379A7A0C();
  sub_237A86348();
  return swift_release();
}

uint64_t ArcPackage.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArcPackage.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.iOSContentVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.iOSContentVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArcPackage.iOSContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ArcPackage.version.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ArcPackage.version.modify())()
{
  return nullsub_1;
}

void ArcPackage.vehicleType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *ArcPackage.vehicleType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ArcPackage.vehicleType.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.partnerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.partnerID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ArcPackage.partnerID.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.minimumCompatibilityVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ArcPackage.minimumCompatibilityVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*ArcPackage.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.minimumSDKVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArcPackage.minimumSDKVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ArcPackage.minimumSDKVersion.modify())()
{
  return nullsub_1;
}

void ArcPackage.buildType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 104);
}

_BYTE *ArcPackage.buildType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = *result;
  return result;
}

uint64_t (*ArcPackage.buildType.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::ArcPackage::BuildType_optional __swiftcall ArcPackage.BuildType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::ArcPackage::BuildType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ArcPackage.BuildType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x657361656C6572;
  else
    return 0x6775626564;
}

uint64_t sub_2379D4240(char *a1, char *a2)
{
  return sub_2378D4CC4(*a1, *a2);
}

uint64_t sub_2379D424C()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379D42C8()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379D4320()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::ArcPackage::BuildType_optional sub_2379D4398(Swift::String *a1)
{
  return ArcPackage.BuildType.init(rawValue:)(*a1);
}

void sub_2379D43A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6775626564;
  if (*v1)
    v2 = 0x657361656C6572;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379D43E0()
{
  sub_2379D7D0C();
  return sub_237A87A34();
}

uint64_t sub_2379D443C()
{
  sub_2379D7D0C();
  return sub_237A879EC();
}

uint64_t ArcPackage.displays.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArcPackage.displays.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*ArcPackage.displays.modify())()
{
  return nullsub_1;
}

uint64_t ArcPackage.init(identifier:iOSContentVersion:version:minimumCompatibilityVersion:minimumSDKVersion:buildType:vehicleType:partnerID:displays:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char v14;
  char v15;

  v14 = *a10;
  v15 = *a11;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 88) = a7;
  *(_QWORD *)(a9 + 96) = a8;
  *(_BYTE *)(a9 + 104) = v14;
  *(_QWORD *)(a9 + 112) = a14;
  *(_BYTE *)(a9 + 48) = v15;
  *(_QWORD *)(a9 + 56) = a12;
  *(_QWORD *)(a9 + 64) = a13;
  *(_QWORD *)(a9 + 32) = 2;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 72) = a6;
  *(_QWORD *)(a9 + 80) = 2;
  return result;
}

uint64_t ArcPackage.addDisplay(type:manufacturerLogo:appleLogo:size:)(_BYTE *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t result;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  _QWORD v61[4];
  char v62;
  uint64_t v63;
  unsigned __int8 v64;
  _OWORD __dst[30];

  v6 = *a1;
  v7 = *(void **)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v52 = *(_QWORD *)(a2 + 24);
  v51 = *(_BYTE *)(a2 + 32);
  v49 = *(_QWORD *)(a3 + 8);
  v50 = *(void **)a3;
  v47 = *(_QWORD *)(a3 + 24);
  v48 = *(void **)(a3 + 16);
  v46 = *(_BYTE *)(a3 + 32);
  v10 = 0x5F72657473756C43;
  v11 = 0xEE0079616C707369;
  v44 = *(_QWORD *)(a3 + 40);
  v12 = 0x445F7265746E6543;
  if (v6 != 1)
  {
    v12 = 0xD000000000000011;
    v11 = 0x8000000237AB1E90;
  }
  if (*a1)
  {
    v10 = v12;
    v13 = v11;
  }
  else
  {
    v13 = 0xEF79616C70736944;
  }
  v43 = v10;
  v16 = *(_QWORD **)(v5 + 112);
  v17 = v16[2];
  v45 = *(_QWORD *)(a2 + 40);
  if (v17)
  {
    v40 = *(_QWORD *)(a2 + 8);
    v41 = *(void **)a2;
    v42 = v13;
    swift_bridgeObjectRetain();
    v18 = v17 - 1;
    v19 = MEMORY[0x24BEE4AF8];
    for (i = 4; ; i += 60)
    {
      memcpy(__dst, &v16[i], sizeof(__dst));
      if (LOBYTE(__dst[1]))
      {
        if (LOBYTE(__dst[1]) == 1)
          v21 = 0x6F437265746E6563;
        else
          v21 = 0x65676E6573736170;
        if (LOBYTE(__dst[1]) == 1)
          v22 = 0xED0000656C6F736ELL;
        else
          v22 = 0xE900000000000072;
        v23 = v16;
        if (v6)
        {
LABEL_16:
          if (v6 == 1)
            v24 = 0x6F437265746E6563;
          else
            v24 = 0x65676E6573736170;
          if (v6 == 1)
            v25 = 0xED0000656C6F736ELL;
          else
            v25 = 0xE900000000000072;
          if (v21 != v24)
            goto LABEL_28;
          goto LABEL_26;
        }
      }
      else
      {
        v22 = 0xE700000000000000;
        v21 = 0x72657473756C63;
        v23 = v16;
        if (v6)
          goto LABEL_16;
      }
      v25 = 0xE700000000000000;
      if (v21 != 0x72657473756C63)
        goto LABEL_28;
LABEL_26:
      if (v22 == v25)
      {
        sub_23786FE8C((uint64_t)__dst);
        swift_bridgeObjectRelease_n();
        v16 = v23;
        goto LABEL_29;
      }
LABEL_28:
      v26 = sub_237A8840C();
      sub_23786FE8C((uint64_t)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v23;
      if ((v26 & 1) == 0)
      {
        sub_2378700DC((uint64_t)__dst);
        if (!v18)
          goto LABEL_37;
        goto LABEL_36;
      }
LABEL_29:
      v61[0] = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2379D6290(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v61[0];
      }
      v28 = *(_QWORD *)(v19 + 16);
      v27 = *(_QWORD *)(v19 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_2379D6290(v27 > 1, v28 + 1, 1);
        v19 = v61[0];
      }
      *(_QWORD *)(v19 + 16) = v28 + 1;
      memcpy((void *)(v19 + 480 * v28 + 32), __dst, 0x1E0uLL);
      if (!v18)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        v7 = v41;
        v13 = v42;
        v8 = v40;
        goto LABEL_39;
      }
LABEL_36:
      --v18;
    }
  }
  v19 = MEMORY[0x24BEE4AF8];
LABEL_39:
  v29 = *(_QWORD *)(v19 + 16);
  swift_release();
  if (v29)
  {
    *(_QWORD *)&__dst[0] = v43;
    *((_QWORD *)&__dst[0] + 1) = v13;
    swift_bridgeObjectRetain();
    sub_237A878E4();
    v61[0] = v29;
    sub_237A882E0();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = *((_QWORD *)&__dst[0] + 1);
    v30 = *(_QWORD *)&__dst[0];
    v31 = v16[2];
    if (!v31)
      goto LABEL_52;
  }
  else
  {
    v30 = v43;
    v31 = v16[2];
    if (!v31)
      goto LABEL_52;
  }
  v32 = v16 + 5;
  while (*(v32 - 1) != v30 || *v32 != v13)
  {
    v34 = v30;
    v35 = sub_237A8840C();
    v30 = v34;
    if ((v35 & 1) != 0)
      break;
    v32 += 60;
    if (!--v31)
      goto LABEL_52;
  }
  *(_QWORD *)&__dst[0] = v30;
  *((_QWORD *)&__dst[0] + 1) = v13;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  LODWORD(v61[0]) = sub_2379D6600(1001);
  sub_237A882E0();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)&__dst[0] + 1);
  v30 = *(_QWORD *)&__dst[0];
LABEL_52:
  v64 = v6;
  v61[0] = v7;
  v61[1] = v8;
  v61[2] = v9;
  v61[3] = v52;
  v62 = v51;
  v63 = v45;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v49;
  v57 = v48;
  v58 = v47;
  v59 = v46;
  v60 = v44;
  *(_QWORD *)&v55 = v30;
  *((_QWORD *)&v55 + 1) = v13;
  sub_237870090(v7, v8, v9, v52, v51);
  sub_237870090(v50, v49, v48, v47, v46);
  swift_bridgeObjectRetain();
  Display.init(type:manufacturerLogo:appleLogo:id:size:density:requiresDarkAppearance:reversesDynamicContentDPadScrolling:)(&v64, (uint64_t)v61, &v56, &v55, 0, 2, __dst, a4, a5, 157.0);
  sub_23786FE8C((uint64_t)__dst);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_23789657C(0, v16[2] + 1, 1, v16);
  v37 = v16[2];
  v36 = v16[3];
  if (v37 >= v36 >> 1)
    v16 = sub_23789657C((_QWORD *)(v36 > 1), v37 + 1, 1, v16);
  v16[2] = v37 + 1;
  memcpy(&v16[60 * v37 + 4], __dst, 0x1E0uLL);
  *(_QWORD *)(v53 + 112) = v16;
  v38 = __dst[0];
  swift_bridgeObjectRetain();
  sub_2378700DC((uint64_t)__dst);
  result = swift_bridgeObjectRelease();
  *v54 = v38;
  return result;
}

uint64_t sub_2379D4A98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2379D4AD0 + 4 * byte_237AA0BFD[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_2379D4AD0()
{
  return 0xD000000000000011;
}

uint64_t sub_2379D4B70()
{
  return 0x707954646C697562;
}

uint64_t sub_2379D4B94()
{
  return 0x7379616C70736964;
}

uint64_t sub_2379D4BAC()
{
  unsigned __int8 *v0;

  return sub_2379D4A98(*v0);
}

uint64_t sub_2379D4BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379D7908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379D4BD8()
{
  sub_2379D6D58();
  return sub_237A88718();
}

uint64_t sub_2379D4C00()
{
  sub_2379D6D58();
  return sub_237A88724();
}

uint64_t ArcPackage.displayIndex(by:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = 0;
  v5 = *a1;
  v6 = a1[1];
  for (i = (_QWORD *)(v2 + 40); ; i += 60)
  {
    v8 = *(i - 1) == v5 && *i == v6;
    if (v8 || (sub_237A8840C() & 1) != 0)
      break;
    if (v3 == ++v4)
      return 0;
  }
  return v4;
}

uint64_t sub_2379D4CB0@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[2];
  _BYTE v17[297];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = *((_BYTE *)a1 + 48);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v9 = *((_QWORD *)a1 + 11);
  v10 = *((_QWORD *)a1 + 12);
  v11 = *((_BYTE *)a1 + 104);
  v12 = *((_QWORD *)a1 + 14);
  v14 = *a2;
  v13 = a2[1];
  v18 = *a1;
  v19 = v4;
  v20 = v5;
  v21 = a1[2];
  v22 = v6;
  v23 = v7;
  v24 = v8;
  v25 = *(__int128 *)((char *)a1 + 72);
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v16[0] = v14;
  v16[1] = v13;
  ArcPackage.subscript.getter(v16, (uint64_t)v17);
  sub_2379D62AC((uint64_t)v17, (uint64_t)&v18);
  return sub_2379D62AC((uint64_t)&v18, a3);
}

uint64_t sub_2379D4D64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[2];
  _BYTE v7[480];
  _BYTE v8[480];

  v4 = *a3;
  v3 = a3[1];
  sub_2379D62AC(a1, (uint64_t)v8);
  sub_2379D62AC((uint64_t)v8, (uint64_t)v7);
  v6[0] = v4;
  v6[1] = v3;
  swift_bridgeObjectRetain();
  sub_2379D6A0C((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379D6AC8);
  return ArcPackage.subscript.setter((uint64_t)v7, v6);
}

uint64_t ArcPackage.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t result;
  _BYTE v14[480];
  _BYTE v15[480];
  _BYTE __src[480];
  _BYTE v17[480];

  sub_2379D62AC(a1, (uint64_t)v17);
  v4 = a2[1];
  v7 = *(_QWORD **)(v2 + 112);
  v6 = (_QWORD *)(v2 + 112);
  v5 = v7;
  v8 = v7[2];
  if (v8)
  {
    v9 = 0;
    v10 = 0;
    v11 = *a2;
    while (1)
    {
      v12 = v5[v9 + 4] == v11 && v5[v9 + 5] == v4;
      if (v12 || (sub_237A8840C() & 1) != 0)
        break;
      ++v10;
      v9 += 60;
      if (v8 == v10)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    sub_2379D62AC((uint64_t)v17, (uint64_t)__src);
    if (sub_23786A188((uint64_t)__src) == 1)
    {
      sub_2379D3DD4(v10, v15);
      return sub_2378700DC((uint64_t)v15);
    }
    else
    {
      sub_2379D62AC((uint64_t)v17, (uint64_t)v15);
      sub_23786FE8C((uint64_t)v15);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23793E8F8(v5);
        v5 = (_QWORD *)result;
      }
      if (v10 >= v5[2])
      {
        __break(1u);
      }
      else
      {
        memcpy(v14, &v5[v9 + 4], sizeof(v14));
        memcpy(&v5[v9 + 4], __src, 0x1E0uLL);
        sub_2378700DC((uint64_t)v14);
        result = sub_2379D6A0C((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23787046C);
        *v6 = v5;
      }
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_2379D6A0C((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23787046C);
  }
  return result;
}

unint64_t ArcPackage.subscript.modify(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  const void *v12;

  v5 = malloc(0x798uLL);
  *a1 = v5;
  v6 = v5 + 60;
  v5[240] = v2;
  v7 = *a2;
  v8 = a2[1];
  v5[241] = *a2;
  v5[242] = v8;
  v9 = *(_QWORD *)(v2 + 112);
  result = sub_2379D697C(v9, v7, v8);
  if ((v11 & 1) != 0)
  {
    sub_23787032C(v6);
    sub_2379D62AC((uint64_t)v6, (uint64_t)v5);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v9 + 16))
  {
    v12 = (const void *)(v9 + 480 * result + 32);
    memcpy(v5 + 120, v12, 0x1E0uLL);
    memmove(v6, v12, 0x1E0uLL);
    nullsub_1(v6);
    sub_2379D62AC((uint64_t)v6, (uint64_t)v5);
    sub_23786FE8C((uint64_t)(v5 + 120));
LABEL_6:
    swift_bridgeObjectRetain();
    return (unint64_t)sub_2379D504C;
  }
  __break(1u);
  return result;
}

void sub_2379D504C(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 480;
  v4 = *a1 + 960;
  if ((a2 & 1) != 0)
  {
    v5 = v2[242];
    v6 = v2[241];
    sub_2379D62AC(*a1, v4);
    sub_2379D62AC(v4, (uint64_t)(v2 + 180));
    v9 = v6;
    v10 = v5;
    sub_2379D6A0C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2379D6AC8);
    ArcPackage.subscript.setter((uint64_t)(v2 + 180), &v9);
    sub_2379D62AC((uint64_t)v2, v3);
    sub_2379D6A0C(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23787046C);
  }
  else
  {
    v7 = v2[242];
    v8 = v2[241];
    sub_2379D62AC(*a1, v3);
    sub_2379D62AC(v3, v4);
    v9 = v8;
    v10 = v7;
    ArcPackage.subscript.setter(v4, &v9);
  }
  free(v2);
}

uint64_t InfoPlist.iOSContentVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.iOSContentVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InfoPlist.iOSContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.accessoryContentVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.accessoryContentVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*InfoPlist.accessoryContentVersion.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*InfoPlist.identifier.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.minimumSDKVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.minimumSDKVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*InfoPlist.minimumSDKVersion.modify())()
{
  return nullsub_1;
}

void InfoPlist.buildType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

_BYTE *InfoPlist.buildType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*InfoPlist.buildType.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.removeDisclaimerLabelOverride.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t InfoPlist.removeDisclaimerLabelOverride.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*InfoPlist.removeDisclaimerLabelOverride.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.disclaimer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InfoPlist.disclaimer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*InfoPlist.disclaimer.modify())()
{
  return nullsub_1;
}

uint64_t InfoPlist.minimumCompatibilityVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t InfoPlist.minimumCompatibilityVersion.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*InfoPlist.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

void __swiftcall InfoPlist.init(iOSContentVersion:accessoryContentVersion:identifier:minimumSDKVersion:buildType:removeDisclaimerLabelOverride:disclaimer:minimumCompatibilityVersion:)(CarPlayAssetUI::InfoPlist *__return_ptr retstr, Swift::String_optional iOSContentVersion, Swift::String accessoryContentVersion, Swift::String identifier, Swift::String_optional minimumSDKVersion, CarPlayAssetUI::ArcPackage::BuildType buildType, Swift::Bool_optional removeDisclaimerLabelOverride, Swift::String_optional disclaimer, Swift::Int_optional minimumCompatibilityVersion)
{
  CarPlayAssetUI::ArcPackage::BuildType v9;
  char v10;

  v9 = *(_BYTE *)buildType;
  retstr->iOSContentVersion = iOSContentVersion;
  retstr->accessoryContentVersion = accessoryContentVersion;
  retstr->identifier = identifier;
  retstr->minimumSDKVersion = minimumSDKVersion;
  retstr->buildType = v9;
  retstr->removeDisclaimerLabelOverride.value = disclaimer.value._countAndFlagsBits;
  retstr->disclaimer = *(Swift::String_optional *)&disclaimer.value._object;
  retstr->minimumCompatibilityVersion.value = *(_QWORD *)&minimumCompatibilityVersion.is_nil;
  retstr->minimumCompatibilityVersion.is_nil = v10 & 1;
}

void sub_2379D5424(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2379D5464(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_2379D54FC()
{
  return 0x6D69616C63736944;
}

uint64_t sub_2379D5544(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2379D557C + 4 * byte_237AA0C06[a1]))(0xD000000000000011, 0x8000000237AAEBF0);
}

uint64_t sub_2379D557C(uint64_t a1)
{
  return a1 + 6;
}

void sub_2379D5624(char *a1)
{
  sub_2378D4D64(*a1);
}

uint64_t sub_2379D5630()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_2379D3A88((uint64_t)v3, v1);
  return sub_237A88610();
}

void sub_2379D5674(uint64_t a1)
{
  char *v1;

  sub_2379D3A88(a1, *v1);
}

uint64_t sub_2379D567C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_237A885D4();
  sub_2379D3A88((uint64_t)v3, v1);
  return sub_237A88610();
}

uint64_t sub_2379D56BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2379D7CC4();
  *a1 = result;
  return result;
}

uint64_t sub_2379D56E8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2379D5544(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2379D5710()
{
  char *v0;

  sub_2379D5424(*v0);
}

uint64_t sub_2379D5718@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2379D7CC4();
  *a1 = result;
  return result;
}

uint64_t sub_2379D573C()
{
  sub_2379D6CD0();
  return sub_237A88718();
}

uint64_t sub_2379D5764()
{
  sub_2379D6CD0();
  return sub_237A88724();
}

uint64_t InfoPlist.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568266E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v29 = *(_QWORD *)(v1 + 24);
  v30 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v27 = *(_QWORD *)(v1 + 40);
  v28 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v25 = *(_QWORD *)(v1 + 56);
  v26 = v10;
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 64);
  v23 = *(unsigned __int8 *)(v1 + 65);
  v24 = v10;
  v11 = *(_QWORD *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 80);
  v22 = v11;
  v19 = *(_QWORD *)(v1 + 88);
  v20 = *(unsigned __int8 *)(v1 + 96);
  v12 = a1[3];
  v13 = a1;
  v15 = v14;
  __swift_project_boxed_opaque_existential_2Tm(v13, v12);
  sub_2379D6CD0();
  sub_237A886B8();
  v40 = 0;
  v16 = v7;
  sub_237A8822C();
  if (!v2)
  {
    v17 = v24;
    v39 = 1;
    sub_237A88274();
    v38 = 2;
    sub_237A88274();
    v37 = 3;
    sub_237A88274();
    v36 = 5;
    sub_237A8822C();
    v35 = v17;
    v34 = 6;
    sub_2379D6D14();
    sub_237A882B0();
    v33 = 7;
    sub_237A88238();
    v32 = 8;
    sub_237A8822C();
    v31 = 4;
    sub_237A8825C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v16, v15);
}

uint64_t sub_2379D5A20(_QWORD *a1)
{
  return InfoPlist.encode(to:)(a1);
}

uint64_t ArcPackage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568202D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 24);
  v32 = *(_QWORD *)(v1 + 16);
  v33 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v30 = *(_QWORD *)(v1 + 40);
  v31 = v8;
  v36 = *(unsigned __int8 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v28 = *(_QWORD *)(v1 + 64);
  v29 = v9;
  v10 = *(_QWORD *)(v1 + 80);
  v26 = *(_QWORD *)(v1 + 72);
  v27 = v10;
  v11 = *(_QWORD *)(v1 + 88);
  v24 = *(_QWORD *)(v1 + 96);
  v25 = v11;
  v23 = *(unsigned __int8 *)(v1 + 104);
  v12 = *(_QWORD *)(v1 + 112);
  v13 = a1[3];
  v14 = a1;
  v16 = v15;
  __swift_project_boxed_opaque_existential_2Tm(v14, v13);
  sub_2379D6D58();
  sub_237A886B8();
  LOBYTE(v35) = 0;
  v17 = v6;
  v18 = v34;
  sub_237A88274();
  if (!v18)
  {
    v19 = v36;
    v20 = v33;
    swift_bridgeObjectRetain();
    sub_2378C2A8C(v32, v20, v31, 1);
    swift_bridgeObjectRelease();
    LOBYTE(v35) = 2;
    sub_237A882A4();
    LOBYTE(v35) = v19;
    v37 = 3;
    sub_23789B120();
    sub_237A882B0();
    LOBYTE(v35) = 4;
    sub_237A88274();
    sub_2378C2BB0(v26, v27, 5);
    LOBYTE(v35) = 6;
    sub_237A88274();
    LOBYTE(v35) = v23;
    v37 = 7;
    sub_2379D6D14();
    sub_237A882B0();
    v35 = v12;
    v37 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826700);
    sub_2379D6E24(&qword_256826708, (uint64_t (*)(void))sub_2379D6D9C, MEMORY[0x24BEE12A0]);
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v17, v16);
}

uint64_t ArcPackage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  char v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256826718);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2379D6D58();
  sub_237A88688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v35) = 0;
    v10 = sub_237A881B4();
    v34 = v11;
    v38 = 1;
    sub_237A881A8();
    v12 = v36;
    if (v36)
    {
      v30 = v35;
      v13 = qword_25681E410;
      swift_bridgeObjectRetain();
      if (v13 != -1)
        swift_once();
      v29 = qword_256825198;
      v33 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_25681E410 != -1)
        swift_once();
      v29 = qword_256825198;
      v30 = 0;
      v33 = 0xE000000000000000;
    }
    LOBYTE(v35) = 2;
    v28 = sub_237A881E4();
    v38 = 3;
    sub_23789B0D8();
    sub_237A881F0();
    v37 = v35;
    LOBYTE(v35) = 4;
    v27 = sub_237A881B4();
    v32 = v14;
    v38 = 5;
    sub_237A881A8();
    v15 = v35;
    if ((_BYTE)v36)
      v15 = 0;
    v26 = v15;
    if (qword_25681E410 != -1)
      swift_once();
    v16 = qword_256825198;
    LOBYTE(v35) = 6;
    v25 = sub_237A881B4();
    v31 = v17;
    v38 = 7;
    sub_2379D6DE0();
    sub_237A881F0();
    v24 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256826700);
    v38 = 8;
    sub_2379D6E24(&qword_256826728, (uint64_t (*)(void))sub_2379D6E8C, MEMORY[0x24BEE12D0]);
    sub_237A881F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v10;
    v18 = v35;
    v19 = v30;
    *(_QWORD *)(a2 + 8) = v34;
    *(_QWORD *)(a2 + 16) = v19;
    v20 = v32;
    v21 = v29;
    *(_QWORD *)(a2 + 24) = v33;
    *(_QWORD *)(a2 + 32) = v21;
    *(_QWORD *)(a2 + 40) = v28;
    *(_BYTE *)(a2 + 48) = v37;
    *(_QWORD *)(a2 + 56) = v27;
    *(_QWORD *)(a2 + 64) = v20;
    *(_QWORD *)(a2 + 72) = v26;
    *(_QWORD *)(a2 + 80) = v16;
    v22 = v31;
    *(_QWORD *)(a2 + 88) = v25;
    *(_QWORD *)(a2 + 96) = v22;
    *(_BYTE *)(a2 + 104) = v24;
    *(_QWORD *)(a2 + 112) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379D6268@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArcPackage.init(from:)(a1, a2);
}

uint64_t sub_2379D627C(_QWORD *a1)
{
  return ArcPackage.encode(to:)(a1);
}

uint64_t sub_2379D6290(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237956B88(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D62AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25681E758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2379D62F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237957038(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D6310(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957304(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D632C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2379574A4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D6348(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23795761C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6364(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2379577C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D6380(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237957944(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D639C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957AA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D63B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957C44(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D63D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957DE0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D63F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957DF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D640C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237957F94(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6428(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23795811C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6444(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2379582C0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6460(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237958448(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D647C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2379585AC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6498(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237958734(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D64B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237958748(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D64D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23795875C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D64EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237958770(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6508(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237958964(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2379D6524(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237958AEC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D6540(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237958C54(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2379D655C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237958DB0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

unint64_t sub_2379D6578(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x23B81FB94](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x23B81FB94](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2379D6600(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  int64_t v5;
  uint64_t v6;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = result;
    v6 = 0;
    MEMORY[0x23B81FB94](&v6, 8);
    v3 = v6 * (unint64_t)v2;
    result = HIDWORD(v3);
    if (v3 < v1)
    {
      v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          v6 = 0;
          MEMORY[0x23B81FB94](&v6, 8);
          v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI9InfoPlistV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v40 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v38 = *(unsigned __int8 *)(a1 + 64);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v39 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v37 = *(unsigned __int8 *)(a2 + 64);
  if (v3)
  {
    if (!v9)
      return 0;
    v35 = *(unsigned __int8 *)(a2 + 65);
    v36 = *(unsigned __int8 *)(a1 + 65);
    v31 = *(_QWORD *)(a2 + 72);
    v32 = *(_QWORD *)(a1 + 72);
    v33 = *(_QWORD *)(a2 + 80);
    v34 = *(_QWORD *)(a1 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a1 + 88);
    v29 = *(_BYTE *)(a1 + 96);
    v30 = *(_BYTE *)(a2 + 96);
    if (*(_QWORD *)a1 != *(_QWORD *)a2 || v3 != v9)
    {
      v15 = sub_237A8840C();
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
  }
  else
  {
    v35 = *(unsigned __int8 *)(a2 + 65);
    v36 = *(unsigned __int8 *)(a1 + 65);
    v31 = *(_QWORD *)(a2 + 72);
    v32 = *(_QWORD *)(a1 + 72);
    v33 = *(_QWORD *)(a2 + 80);
    v34 = *(_QWORD *)(a1 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a1 + 88);
    v29 = *(_BYTE *)(a1 + 96);
    v30 = *(_BYTE *)(a2 + 96);
    if (v9)
      return 0;
  }
  if (v4 != v10 || v5 != v12)
  {
    v17 = sub_237A8840C();
    result = 0;
    if ((v17 & 1) == 0)
      return result;
  }
  if (v6 != v11 || v7 != v13)
  {
    v18 = sub_237A8840C();
    result = 0;
    if ((v18 & 1) == 0)
      return result;
  }
  if (v8)
  {
    if (!v14)
      return 0;
    if (v40 != v39 || v8 != v14)
    {
      v19 = sub_237A8840C();
      result = 0;
      if ((v19 & 1) == 0)
        return result;
    }
  }
  else if (v14)
  {
    return 0;
  }
  if (v38)
    v20 = 0x657361656C6572;
  else
    v20 = 0x6775626564;
  if (v38)
    v21 = 0xE700000000000000;
  else
    v21 = 0xE500000000000000;
  if (v37)
    v22 = 0x657361656C6572;
  else
    v22 = 0x6775626564;
  if (v37)
    v23 = 0xE700000000000000;
  else
    v23 = 0xE500000000000000;
  if (v20 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v24 = sub_237A8840C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v24 & 1) == 0)
      return result;
  }
  if (v36 == 2)
  {
    if (v35 != 2)
      return 0;
  }
  else
  {
    result = 0;
    if (v35 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
      return result;
  }
  if (!v34)
  {
    if (!v33)
      goto LABEL_51;
    return 0;
  }
  if (!v33)
    return 0;
  if (v32 == v31 && v34 == v33 || (v25 = sub_237A8840C(), result = 0, (v25 & 1) != 0))
  {
LABEL_51:
    if ((v29 & 1) != 0)
    {
      if ((v30 & 1) != 0)
        return 1;
    }
    else
    {
      v26 = v30;
      if (v28 != v27)
        v26 = 1;
      if ((v26 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2379D697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a1 + 40); ; i += 60)
  {
    v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_237A8840C() & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_2379D6A0C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = *(_OWORD *)(a1 + 432);
  v18 = *(_OWORD *)(a1 + 448);
  v15 = *(_OWORD *)(a1 + 400);
  v16 = *(_OWORD *)(a1 + 416);
  v13 = *(_OWORD *)(a1 + 368);
  v14 = *(_OWORD *)(a1 + 384);
  v11 = *(_OWORD *)(a1 + 336);
  v12 = *(_OWORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    v18,
    *((_QWORD *)&v18 + 1),
    *(_QWORD *)(a1 + 464),
    *(_QWORD *)(a1 + 472));
  return a1;
}

uint64_t sub_2379D6AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,void *a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,void *a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,void *a46,uint64_t a47,char a48,uint64_t a49,void *a50,uint64_t a51,void *a52,uint64_t a53,char a54)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23787007C(a8, a9, a10, a11, a12);
    swift_bridgeObjectRetain();
    sub_23787007C(a17, a18, a19, a20, a21);
    swift_bridgeObjectRetain();
    sub_23787007C(a26, a27, a28, a29, a30);
    swift_bridgeObjectRetain();
    sub_23787007C(a35, a36, a37, a38, a39);
    swift_bridgeObjectRetain();
    sub_237870090(a44, a45, a46, a47, a48);
    sub_237870090(a50, a51, a52, a53, a54);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2379D6CD0()
{
  unint64_t result;

  result = qword_2568266E8;
  if (!qword_2568266E8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA1024, &type metadata for InfoPlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266E8);
  }
  return result;
}

unint64_t sub_2379D6D14()
{
  unint64_t result;

  result = qword_2568266F0;
  if (!qword_2568266F0)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage.BuildType, &type metadata for ArcPackage.BuildType);
    atomic_store(result, (unint64_t *)&qword_2568266F0);
  }
  return result;
}

unint64_t sub_2379D6D58()
{
  unint64_t result;

  result = qword_2568266F8;
  if (!qword_2568266F8)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0FD4, &type metadata for ArcPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568266F8);
  }
  return result;
}

unint64_t sub_2379D6D9C()
{
  unint64_t result;

  result = qword_256826710;
  if (!qword_256826710)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display, &type metadata for Display);
    atomic_store(result, (unint64_t *)&qword_256826710);
  }
  return result;
}

unint64_t sub_2379D6DE0()
{
  unint64_t result;

  result = qword_256826720;
  if (!qword_256826720)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage.BuildType, &type metadata for ArcPackage.BuildType);
    atomic_store(result, (unint64_t *)&qword_256826720);
  }
  return result;
}

uint64_t sub_2379D6E24(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256826700);
    v8 = a2();
    result = MEMORY[0x23B81FA98](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2379D6E8C()
{
  unint64_t result;

  result = qword_256826730;
  if (!qword_256826730)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for Display, &type metadata for Display);
    atomic_store(result, (unint64_t *)&qword_256826730);
  }
  return result;
}

unint64_t sub_2379D6ED4()
{
  unint64_t result;

  result = qword_256826738;
  if (!qword_256826738)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage.BuildType, &type metadata for ArcPackage.BuildType);
    atomic_store(result, (unint64_t *)&qword_256826738);
  }
  return result;
}

uint64_t sub_2379D6F18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2379D6F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_2379D6F64@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 72);
  return result;
}

_QWORD *sub_2379D6F70(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 72) = *result;
  return result;
}

uint64_t sub_2379D6F84()
{
  return 0;
}

uint64_t destroy for ArcPackage()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArcPackage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArcPackage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArcPackage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcPackage()
{
  return &type metadata for ArcPackage;
}

uint64_t storeEnumTagSinglePayload for ArcPackage.BuildType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379D72F8 + 4 * byte_237AA0C14[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379D732C + 4 * byte_237AA0C0F[v4]))();
}

uint64_t sub_2379D732C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D7334(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379D733CLL);
  return result;
}

uint64_t sub_2379D7348(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379D7350);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379D7354(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D735C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArcPackage.BuildType()
{
  return &type metadata for ArcPackage.BuildType;
}

uint64_t initializeWithCopy for InfoPlist(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InfoPlist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v4;
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for InfoPlist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoPlist(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoPlist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoPlist()
{
  return &type metadata for InfoPlist;
}

ValueMetadata *type metadata accessor for ArcPackage.CodingKeys()
{
  return &type metadata for ArcPackage.CodingKeys;
}

uint64_t _s14CarPlayAssetUI10ArcPackageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2379D76D8 + 4 * byte_237AA0C1E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2379D770C + 4 * byte_237AA0C19[v4]))();
}

uint64_t sub_2379D770C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D7714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379D771CLL);
  return result;
}

uint64_t sub_2379D7728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379D7730);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2379D7734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D773C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InfoPlist.CodingKeys()
{
  return &type metadata for InfoPlist.CodingKeys;
}

unint64_t sub_2379D775C()
{
  unint64_t result;

  result = qword_256826740;
  if (!qword_256826740)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0EF4, &type metadata for InfoPlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826740);
  }
  return result;
}

unint64_t sub_2379D77A4()
{
  unint64_t result;

  result = qword_256826748;
  if (!qword_256826748)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0FAC, &type metadata for ArcPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826748);
  }
  return result;
}

unint64_t sub_2379D77EC()
{
  unint64_t result;

  result = qword_256826750;
  if (!qword_256826750)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0F1C, &type metadata for ArcPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826750);
  }
  return result;
}

unint64_t sub_2379D7834()
{
  unint64_t result;

  result = qword_256826758;
  if (!qword_256826758)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0F44, &type metadata for ArcPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826758);
  }
  return result;
}

unint64_t sub_2379D787C()
{
  unint64_t result;

  result = qword_256826760;
  if (!qword_256826760)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0E2C, &type metadata for InfoPlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826760);
  }
  return result;
}

unint64_t sub_2379D78C4()
{
  unint64_t result;

  result = qword_256826768;
  if (!qword_256826768)
  {
    result = MEMORY[0x23B81FA98](&unk_237AA0E54, &type metadata for InfoPlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256826768);
  }
  return result;
}

uint64_t sub_2379D7908(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAEBF0 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54656C6369686576 && a2 == 0xEB00000000657079 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000044 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000237AAEC30 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000237AAEC50 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954646C697562 && a2 == 0xE900000000000065 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7379616C70736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2379D7CC4()
{
  unint64_t v0;

  v0 = sub_237A88124();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

unint64_t sub_2379D7D0C()
{
  unint64_t result;

  result = qword_256826770[0];
  if (!qword_256826770[0])
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for ArcPackage.BuildType, &type metadata for ArcPackage.BuildType);
    atomic_store(result, qword_256826770);
  }
  return result;
}

uint64_t static DynamicAppearanceValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if ((sub_237A877DC() & 1) == 0)
    return 0;
  type metadata accessor for DynamicAppearanceValue(0, a3, v4, v5);
  return sub_237A877DC() & 1;
}

uint64_t type metadata accessor for DynamicAppearanceValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicAppearanceValue);
}

uint64_t DynamicAppearanceValue.lightMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DynamicAppearanceValue.lightMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DynamicAppearanceValue.lightMode.modify())()
{
  return nullsub_1;
}

uint64_t DynamicAppearanceValue.darkMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t DynamicAppearanceValue.darkMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*DynamicAppearanceValue.darkMode.modify())()
{
  return nullsub_1;
}

uint64_t DynamicAppearanceValue.init(lightMode:darkMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v11(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for DynamicAppearanceValue(0, a3, v7, v8) + 28);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v9, a2, a3);
}

uint64_t DynamicAppearanceValue.resolve(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v14;

  v7 = sub_237A867C8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 == *MEMORY[0x24BDEB400])
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3);
  if (v12 == *MEMORY[0x24BDEB3F0])
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3 + *(int *)(a2 + 28));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t DynamicAppearanceValue.resolve(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (a1 == 2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3 + *(int *)(a2 + 28));
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3);
}

BOOL sub_2379D8034(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2379D8044()
{
  return sub_237A885E0();
}

uint64_t sub_2379D8068(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646F4D746867696CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_237A8840C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4D6B726164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237A8840C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2379D8164()
{
  sub_237A885D4();
  sub_237A885E0();
  return sub_237A88610();
}

uint64_t sub_2379D81A8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65646F4D6B726164;
  else
    return 0x646F4D746867696CLL;
}

BOOL sub_2379D81E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2379D8034(*a1, *a2);
}

uint64_t sub_2379D81F4()
{
  return sub_2379D8164();
}

uint64_t sub_2379D8204()
{
  return sub_2379D8044();
}

uint64_t sub_2379D8214()
{
  sub_237A885D4();
  sub_2379D8044();
  return sub_237A88610();
}

uint64_t sub_2379D8258()
{
  char *v0;

  return sub_2379D81A8(*v0);
}

uint64_t sub_2379D8268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2379D8068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2379D8290@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2379D8FD8();
  *a1 = result;
  return result;
}

uint64_t sub_2379D82B8(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA12B0, a1);
  return sub_237A88718();
}

uint64_t sub_2379D82EC(uint64_t a1)
{
  MEMORY[0x23B81FA98](&unk_237AA12B0, a1);
  return sub_237A88724();
}

uint64_t DynamicAppearanceValue<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[4];
  char v13;
  char v14;

  v12[0] = a2;
  v12[1] = a4;
  v5 = type metadata accessor for DynamicAppearanceValue.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x23B81FA98](&unk_237AA12B0, v5);
  v6 = sub_237A882BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_237A886B8();
  v14 = 0;
  v10 = v12[3];
  sub_237A882B0();
  if (!v10)
  {
    v13 = 1;
    sub_237A882B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for DynamicAppearanceValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicAppearanceValue.CodingKeys);
}

uint64_t DynamicAppearanceValue<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  char v46;

  v42 = a3;
  v35 = a4;
  v38 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v33 - v8;
  v12 = type metadata accessor for DynamicAppearanceValue.CodingKeys(255, v9, v10, v11);
  MEMORY[0x23B81FA98](&unk_237AA12B0, v12);
  v40 = sub_237A88208();
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v33 - v13;
  v39 = a2;
  v17 = type metadata accessor for DynamicAppearanceValue(0, a2, v15, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v33 - v19;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  v43 = v14;
  v21 = v44;
  sub_237A88688();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v23 = v36;
  v22 = v37;
  v34 = v18;
  v44 = v17;
  v24 = v38;
  v25 = v39;
  v46 = 0;
  v26 = v40;
  sub_237A881F0();
  v27 = *(char **)(v24 + 32);
  v33 = v20;
  v28 = v41;
  v41 = v27;
  ((void (*)(char *, char *, uint64_t))v27)(v20, v28, v25);
  v45 = 1;
  sub_237A881F0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v26);
  v29 = v44;
  v30 = v33;
  ((void (*)(char *, char *, uint64_t))v41)(&v33[*(int *)(v44 + 28)], v22, v25);
  v31 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v35, v30, v29);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v29);
}

uint64_t sub_2379D873C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DynamicAppearanceValue<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_2379D8758(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return DynamicAppearanceValue<A>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

uint64_t sub_2379D8770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DynamicAppearanceValue<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t DynamicAppearanceValue<A>.hash(into:)()
{
  sub_237A876D4();
  return sub_237A876D4();
}

uint64_t DynamicAppearanceValue<A>.hashValue.getter()
{
  sub_237A885D4();
  sub_237A876D4();
  sub_237A876D4();
  return sub_237A88610();
}

uint64_t sub_2379D8844()
{
  return DynamicAppearanceValue<A>.hashValue.getter();
}

uint64_t sub_2379D884C()
{
  return DynamicAppearanceValue<A>.hash(into:)();
}

uint64_t sub_2379D8854()
{
  sub_237A885D4();
  DynamicAppearanceValue<A>.hash(into:)();
  return sub_237A88610();
}

uint64_t sub_2379D88A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B81FA98](&protocol conformance descriptor for <A> DynamicAppearanceValue<A>, a1, &v4);
}

uint64_t sub_2379D88DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2379D8948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_2379D89FC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_2379D8A64(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2379D8AD0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2379D8B3C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2379D8BA8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_2379D8C14(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2379D8CD4 + 4 * byte_237AA1080[(v7 - 1)]))();
}

void sub_2379D8D24(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_2379D8EE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2379D8EEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379D8F38 + 4 * byte_237AA1093[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379D8F6C + 4 * byte_237AA108E[v4]))();
}

uint64_t sub_2379D8F6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D8F74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379D8F7CLL);
  return result;
}

uint64_t sub_2379D8F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379D8F90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379D8F94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379D8F9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_2379D8FA8()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379D8FB8()
{
  JUMPOUT(0x23B81FA98);
}

void sub_2379D8FC8()
{
  JUMPOUT(0x23B81FA98);
}

uint64_t sub_2379D8FD8()
{
  return 2;
}

uint64_t NotificationModel.init(id:text:buttonType:symbol:style:dismissalHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t result;

  v12 = *(_BYTE *)(a3 + 32);
  v13 = *(_BYTE *)(a4 + 16);
  v14 = *(_QWORD *)(a5 + 16);
  v15 = *a6;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 32) = v16;
  *(_BYTE *)(a9 + 48) = v12;
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(_BYTE *)(a9 + 72) = v13;
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a5;
  *(_QWORD *)(a9 + 96) = v14;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a7;
  *(_QWORD *)(result + 24) = a8;
  *(_QWORD *)(a9 + 104) = sub_2378A3110;
  *(_QWORD *)(a9 + 112) = result;
  *(_BYTE *)(a9 + 73) = v15;
  return result;
}

uint64_t NotificationModel.Symbol.init(name:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_2379D9078(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2379D9098()
{
  swift_release();
  return swift_deallocObject();
}

BOOL NotificationModel.isFocusable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72) != 255;
}

uint64_t NotificationModel.Text.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (*((unsigned __int8 *)v0 + 32) > 1u)
    return 0;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Text.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (*(_BYTE *)(v0 + 32))
  {
    v2 = (uint64_t *)(v0 + 16);
    if ((_DWORD)v1 != 1)
      v2 = (uint64_t *)v0;
    v1 = *v2;
    swift_bridgeObjectRetain();
  }
  return v1;
}

double NotificationModel.Text.init(title:body:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  if (a2)
  {
    *(_QWORD *)a5 = a1;
    *(_QWORD *)(a5 + 8) = a2;
    if (a4)
    {
      *(_QWORD *)(a5 + 16) = a3;
      *(_QWORD *)(a5 + 24) = a4;
      *(_BYTE *)(a5 + 32) = 1;
    }
    else
    {
      *(_QWORD *)(a5 + 16) = 0;
      *(_QWORD *)(a5 + 24) = 0;
      *(_BYTE *)(a5 + 32) = 0;
    }
  }
  else if (a4)
  {
    *(_QWORD *)a5 = a3;
    *(_QWORD *)(a5 + 8) = a4;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)(a5 + 24) = 0;
    *(_BYTE *)(a5 + 32) = 2;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_BYTE *)(a5 + 32) = -1;
  }
  return result;
}

uint64_t NotificationModel.Text.description.getter()
{
  uint64_t v0;
  int v1;
  _QWORD v3[2];

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_237A87F44();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Text(title: ");
  BYTE5(v3[1]) = 0;
  HIWORD(v3[1]) = -5120;
  if (v1)
  {
    if (v1 == 1)
      swift_bridgeObjectRetain();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_237A878E4();
    swift_bridgeObjectRelease();
    sub_237A878E4();
  }
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return v3[0];
}

uint64_t NotificationModel.ButtonType.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x736E6F69746361;
  if (*(_BYTE *)(v0 + 16) != 1)
    v1 = 0x6E6F7276656863;
  if (*(_BYTE *)(v0 + 16))
    return v1;
  else
    return 0x74754265736F6C63;
}

uint64_t static NotificationModel.ButtonType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
        v8 = sub_237875CF4(*(_QWORD *)a1, *(_QWORD *)a2);
      else
        v8 = 0;
    }
    else
    {
      v8 = v7 == 2;
    }
  }
  else
  {
    v8 = v7 == 0;
  }
  sub_237973310(v5, v6, v7);
  sub_237973310(v2, v3, v4);
  sub_23790BD3C(v2, v3, v4);
  sub_23790BD3C(v5, v6, v7);
  return v8 & 1;
}

uint64_t sub_2379D9484()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0x736E6F69746361;
  if (*(_BYTE *)(v0 + 16) != 1)
    v1 = 0x6E6F7276656863;
  if (*(_BYTE *)(v0 + 16))
    return v1;
  else
    return 0x74754265736F6C63;
}

uint64_t sub_2379D94E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
        v8 = sub_237875CF4(*(_QWORD *)a1, *(_QWORD *)a2);
      else
        v8 = 0;
    }
    else
    {
      v8 = v7 == 2;
    }
  }
  else
  {
    v8 = v7 == 0;
  }
  sub_237973310(v5, v6, v7);
  sub_237973310(v2, v3, v4);
  sub_23790BD3C(v2, v3, v4);
  sub_23790BD3C(v5, v6, v7);
  return v8 & 1;
}

CarPlayAssetUI::NotificationModel::Style_optional __swiftcall NotificationModel.Style.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CarPlayAssetUI::NotificationModel::Style_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237A88124();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t NotificationModel.Style.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696B636F6C62;
  else
    return 0x746C7561666564;
}

uint64_t sub_2379D964C()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

uint64_t sub_2379D96CC()
{
  sub_237A87710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2379D9728()
{
  sub_237A885D4();
  sub_237A87710();
  swift_bridgeObjectRelease();
  return sub_237A88610();
}

CarPlayAssetUI::NotificationModel::Style_optional sub_2379D97A4(Swift::String *a1)
{
  return NotificationModel.Style.init(rawValue:)(*a1);
}

void sub_2379D97B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746C7561666564;
  if (*v1)
    v2 = 0x676E696B636F6C62;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2379D97F0(char *a1, char *a2)
{
  return sub_2378D5470(*a1, *a2);
}

uint64_t NotificationModel.Symbol.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Symbol.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotificationModel.Symbol.name.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Symbol.color.getter()
{
  return swift_retain();
}

uint64_t NotificationModel.Symbol.color.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*NotificationModel.Symbol.color.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Symbol.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v1 = *(_QWORD *)(v0 + 16);
  sub_237A87F44();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Symbol(name: ");
  HIWORD(v3[1]) = -4864;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  if (v1)
    sub_237A871AC();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return v3[0];
}

uint64_t NotificationModel.Action.id.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NotificationModel.Action.id.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NotificationModel.Action.id.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.Action.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.Action.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*NotificationModel.Action.title.modify())()
{
  return nullsub_1;
}

uint64_t (*NotificationModel.Action.handler.getter())(char a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_2379DBAE8;
  }
  else
  {
    v4 = 0;
  }
  sub_2378A2BF4(v1);
  return v4;
}

uint64_t sub_2379D9AAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  if (!v3)
    sub_2378A2BF4(0);
  *a2 = v3;
  a2[1] = v4;
  return sub_2378A2BF4(v3);
}

uint64_t NotificationModel.Action.handler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(unsigned __int8 *);
  uint64_t result;

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_2379DBB18;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  result = sub_2378A2C04(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 24) = v6;
  *(_QWORD *)(v2 + 32) = v5;
  return result;
}

uint64_t (*NotificationModel.Action.handler.modify(uint64_t (**a1)(char)))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char);

  a1[2] = (uint64_t (*)(char))v1;
  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  if (v4)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = sub_2379DCD68;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(char))v5;
  sub_2378A2BF4(v4);
  return sub_2379D9BD0;
}

uint64_t sub_2379D9BD0(uint64_t a1, char a2)
{
  uint64_t (*v3)(unsigned __int8 *);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(unsigned __int8 *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = *(uint64_t (**)(unsigned __int8 *))a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v3)
    {
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = v3;
      *(_QWORD *)(v5 + 24) = v4;
      v6 = sub_2379DCD38;
    }
    else
    {
      v6 = 0;
      v5 = 0;
    }
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    sub_2378A2BF4((uint64_t)v3);
    sub_2378A2C04(v10);
    *(_QWORD *)(v9 + 24) = v6;
    *(_QWORD *)(v9 + 32) = v5;
    return sub_2378A2C04((uint64_t)v3);
  }
  else
  {
    if (v3)
    {
      v7 = *(_QWORD *)(a1 + 8);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v3;
      *(_QWORD *)(v8 + 24) = v7;
      v3 = sub_2379DCD38;
    }
    else
    {
      v8 = 0;
    }
    v12 = *(_QWORD *)(a1 + 16);
    result = sub_2378A2C04(*(_QWORD *)(v12 + 24));
    *(_QWORD *)(v12 + 24) = v3;
    *(_QWORD *)(v12 + 32) = v8;
  }
  return result;
}

uint64_t NotificationModel.Action.init(id:title:handler:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t (*v10)(unsigned __int8 *);
  uint64_t result;

  *(_BYTE *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  if (a4)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    v10 = sub_2379DCD38;
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  result = sub_2378A2C04(0);
  *(_QWORD *)(a6 + 24) = v10;
  *(_QWORD *)(a6 + 32) = v9;
  return result;
}

uint64_t static NotificationModel.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2))
    return 1;
  else
    return sub_237A8840C();
}

uint64_t static EquatableNoop.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_2379D9D94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2))
    return 1;
  else
    return sub_237A8840C();
}

void sub_2379D9DDC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t NotificationModel.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationModel.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotificationModel.id.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_2379732BC(v2, v3, v4, v5, v6);
}

__n128 NotificationModel.text.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_23790BCE8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  result = v6;
  *(__n128 *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  return result;
}

uint64_t (*NotificationModel.text.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.buttonType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_2379DBB3C(v2, v3, v4);
}

uint64_t NotificationModel.buttonType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_237971B9C(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  *(_BYTE *)(v1 + 72) = v4;
  return result;
}

uint64_t (*NotificationModel.buttonType.modify())()
{
  return nullsub_1;
}

void NotificationModel.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

_BYTE *NotificationModel.style.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = *result;
  return result;
}

uint64_t (*NotificationModel.style.modify())()
{
  return nullsub_1;
}

uint64_t NotificationModel.symbol.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_2379DBB50(v2, v3);
}

__n128 NotificationModel.symbol.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_i64[0];
  sub_237971BB0(v1[10], v1[11]);
  result = v4;
  *((__n128 *)v1 + 5) = v4;
  v1[12] = v2;
  return result;
}

uint64_t (*NotificationModel.symbol.modify())()
{
  return nullsub_1;
}

uint64_t (*NotificationModel.dismissalHandler.getter())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  return sub_2378A3110;
}

uint64_t NotificationModel.dismissalHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  result = swift_release();
  *(_QWORD *)(v2 + 104) = sub_23790C304;
  *(_QWORD *)(v2 + 112) = v5;
  return result;
}

uint64_t (*NotificationModel.dismissalHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = (uint64_t (*)())v1;
  v4 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a1 = sub_23790C304;
  a1[1] = (uint64_t (*)())v5;
  swift_retain();
  return sub_2379DA0E4;
}

uint64_t sub_2379DA0E4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v2;
    swift_retain();
    swift_release();
    *(_QWORD *)(v4 + 104) = sub_23790C304;
    *(_QWORD *)(v4 + 112) = v5;
    return swift_release();
  }
  else
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v2;
    result = swift_release();
    *(_QWORD *)(v4 + 104) = sub_23790C304;
    *(_QWORD *)(v4 + 112) = v7;
  }
  return result;
}

BOOL sub_2379DA194()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72) != 255;
}

double NotificationModel.ValidationError.correct(on:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  if (!*(_BYTE *)(v2 + 16))
    goto LABEL_8;
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = *((unsigned __int8 *)a1 + 48);
  v8 = a1[7];
  v9 = a1[8];
  v10 = *((unsigned __int8 *)a1 + 72);
  v12 = a1[10];
  v11 = a1[11];
  v51 = a1[1];
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v44 = (_QWORD *)a2;
    v45 = *((unsigned __int8 *)a1 + 73);
    v46 = a1[13];
    v47 = *a1;
    v50 = a1[14];
    v52 = a1[10];
    v13 = *((unsigned __int8 *)a1 + 48);
    v14 = a1[11];
    v15 = a1[7];
    v16 = *((unsigned __int8 *)a1 + 72);
    swift_bridgeObjectRetain();
    sub_2379732BC(v3, v4, v5, v6, v13);
    v54 = v9;
    v55 = v15;
    v49 = v16;
    sub_2379DBB3C(v15, v9, v16);
    sub_2379DBB50(v52, v14);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2379732BC(v3, v4, v5, v6, v13);
    swift_retain();
    v17 = v6;
    v18 = v5;
    v19 = v4;
    v20 = v3;
    sub_237971BB0(v52, v14);
    v53 = 0;
    v48 = 0;
    v57 = 0;
    goto LABEL_4;
  }
  if (*(_OWORD *)v2 < 3uLL)
  {
LABEL_8:
    *(_QWORD *)(a2 + 112) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  v46 = a1[13];
  v47 = *a1;
  v45 = *((unsigned __int8 *)a1 + 73);
  v53 = a1[10];
  v48 = a1[11];
  v57 = a1[12];
  v50 = a1[14];
  v44 = (_QWORD *)a2;
  if (*(_QWORD *)v2 ^ 3 | *(_QWORD *)(v2 + 8))
  {
    v42 = a1[5];
    v43 = a1[4];
    if (v10 == 255)
    {
      v30 = a1[8];
      v31 = a1[3];
      v32 = a1[11];
      v33 = a1[7];
      swift_bridgeObjectRetain();
      sub_2379732BC(v3, v4, v5, v6, v7);
      v49 = 255;
      v54 = v30;
      v55 = v33;
      sub_2379DBB3C(v33, v30, 255);
      sub_2379DBB50(v12, v32);
      swift_retain();
      swift_bridgeObjectRetain();
      v20 = v3;
      v34 = v3;
      v19 = v31;
      v35 = v31;
      v37 = v6;
      v36 = v43;
      v18 = v43;
      v17 = v42;
    }
    else
    {
      v40 = *((unsigned __int8 *)a1 + 48);
      v41 = a1[3];
      if (v10 == 1)
      {
        if (*(_QWORD *)(v8 + 16) >= 2uLL)
          v25 = 2;
        else
          v25 = *(_QWORD *)(v8 + 16);
        v26 = a1[7];
        sub_2379DBB3C(v8, v9, 1);
        swift_bridgeObjectRetain();
        sub_2379732BC(v3, v4, v5, v6, v40);
        sub_2379DBB3C(v26, v9, 1);
        sub_2379DBB50(v12, v11);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2379732BC(v3, v4, v5, v6, v40);
        swift_retain();
        sub_2379DBB3C(v26, v9, 1);
        sub_237A884B4();
        v27 = swift_dynamicCastClass();
        if (!v27)
        {
          sub_237971B9C(v26, v9, 1);
          v27 = MEMORY[0x24BEE4AF8];
        }
        v28 = *(_QWORD *)(v27 + 16);
        swift_release();
        if (v28 == v25)
        {
          v29 = swift_dynamicCastClass();
          if (!v29)
          {
            sub_237971B9C(v26, v9, 1);
            v29 = MEMORY[0x24BEE4AF8];
          }
        }
        else
        {
          sub_237971B9C(v26, v9, 1);
          v29 = sub_2378CD900(v26, v26 + 32, 0, (2 * v25) | 1);
        }
        v49 = 1;
        sub_237971B9C(v26, v9, 1);
        v54 = 0;
        v55 = v29;
        v19 = v4;
        v20 = v3;
        v17 = v6;
        v18 = v43;
        v13 = v40;
        goto LABEL_4;
      }
      v38 = a1[7];
      v39 = *((unsigned __int8 *)a1 + 72);
      swift_bridgeObjectRetain();
      v19 = v4;
      v20 = v3;
      v17 = v6;
      v18 = v43;
      sub_2379732BC(v3, v41, v43, v42, v7);
      v54 = v9;
      v55 = v38;
      v49 = v39;
      sub_2379DBB3C(v38, v9, v39);
      sub_2379DBB50(v53, v48);
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = v3;
      v35 = v41;
      v36 = v43;
      v37 = v42;
    }
    v13 = v7;
    sub_2379732BC(v34, v35, v36, v37, v7);
    swift_retain();
  }
  else
  {
    v13 = *((unsigned __int8 *)a1 + 48);
    v23 = a1[7];
    v56 = v23;
    v24 = *((_BYTE *)a1 + 72);
    swift_bridgeObjectRetain();
    sub_2379732BC(v3, v4, v5, v6, v13);
    sub_2379DBB3C(v23, v9, v24);
    sub_2379DBB50(v53, v11);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2379732BC(v3, v4, v5, v6, v13);
    swift_retain();
    v17 = v6;
    v18 = v5;
    v19 = v4;
    v20 = v3;
    sub_237971B9C(v56, v9, v24);
    v54 = 0;
    v55 = 0;
    v49 = 255;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  sub_2379732BC(v20, v19, v18, v17, v13);
  sub_2379DBB3C(v55, v54, v49);
  sub_2379DBB50(v53, v48);
  sub_23790BCE8(v20, v19, v18, v17, v13);
  swift_bridgeObjectRelease_n();
  sub_23790BCE8(v20, v19, v18, v17, v13);
  sub_237971B9C(v55, v54, v49);
  sub_237971BB0(v53, v48);
  swift_release();
  *v44 = v47;
  v44[1] = v51;
  v22 = 256;
  if (!v45)
    v22 = 0;
  v44[2] = v20;
  v44[3] = v19;
  v44[4] = v18;
  v44[5] = v17;
  v44[6] = v13;
  v44[7] = v55;
  v44[8] = v54;
  v44[9] = v22 | v49;
  v44[10] = v53;
  v44[11] = v48;
  v44[12] = v57;
  v44[13] = v46;
  v44[14] = v50;
  return result;
}

unint64_t NotificationModel.ValidationError.description.getter()
{
  uint64_t v0;
  unint64_t v2;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) != 1)
      __asm { BR              X9 }
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v2 = 0xD000000000000020;
  }
  else
  {
    sub_237A87F44();
    swift_bridgeObjectRelease();
    v2 = 0x206E6F69746341;
    sub_237A882E0();
    sub_237A878E4();
    swift_bridgeObjectRelease();
  }
  sub_237A878E4();
  return v2;
}

_QWORD *NotificationModel.validate(automakerSymbolValidator:)(uint64_t (*a1)(unint64_t, uint64_t))
{
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  id v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  int v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(unsigned __int8 *)(v1 + 48);
  v53 = *(_QWORD *)(v1 + 64);
  v8 = *(unsigned __int8 *)(v1 + 72);
  v10 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v54 = *(_QWORD *)(v1 + 96);
  v55 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)v1 & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0)
    v11 = HIBYTE(v2) & 0xF;
  if (!v11)
  {
    v51 = *(unsigned __int8 *)(v1 + 72);
    v13 = *(_QWORD *)(v1 + 40);
    v14 = *(_QWORD *)(v1 + 32);
    v5 = *(_QWORD *)(v1 + 88);
    v9 = *(_QWORD *)(v1 + 80);
    v12 = sub_2378966A0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v10 = v12[2];
    v15 = v12[3];
    v1 = v10 + 1;
    if (v10 >= v15 >> 1)
      goto LABEL_78;
    goto LABEL_7;
  }
  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v7 <= 1)
    goto LABEL_8;
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v18 = v4 & 0xFFFFFFFFFFFFLL;
  v7 = v54;
  if (!v18)
  {
    v4 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
    v5 = v12[2];
    v19 = v12[3];
    v1 = v5 + 1;
    if (v5 >= v19 >> 1)
      v12 = sub_2378966A0((_QWORD *)(v19 > 1), v5 + 1, 1, v12);
    v12[2] = v1;
    v20 = &v12[3 * v5];
    *((_OWORD *)v20 + 2) = xmmword_237AA16F0;
    *((_BYTE *)v20 + 48) = 2;
    if (v8 != 1)
      goto LABEL_66;
    while (1)
    {
LABEL_30:
      v13 = *(_QWORD *)(v4 + 16);
      if (v13)
      {
        sub_237973310(v4, v53, 1);
        if (v13 < 3)
          goto LABEL_43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
        v5 = v12[2];
        v24 = v12[3];
        v1 = v5 + 1;
        if (v5 >= v24 >> 1)
          v12 = sub_2378966A0((_QWORD *)(v24 > 1), v5 + 1, 1, v12);
        v12[2] = v1;
        v25 = &v12[3 * v5];
        v26 = 4;
      }
      else
      {
        sub_237973310(v4, v53, 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
        v5 = v12[2];
        v27 = v12[3];
        v1 = v5 + 1;
        if (v5 >= v27 >> 1)
          v12 = sub_2378966A0((_QWORD *)(v27 > 1), v5 + 1, 1, v12);
        v12[2] = v1;
        v25 = &v12[3 * v5];
        v26 = 3;
      }
      v25[4] = v26;
      v25[5] = 0;
      *((_BYTE *)v25 + 48) = 2;
LABEL_43:
      if (v13 >= 2)
        v14 = 2;
      else
        v14 = v13;
      v15 = *(_QWORD *)(v4 + 16);
      if (v15 >= v14)
      {
        if (v14)
        {
          v28 = *(_QWORD *)(v4 + 48);
          v29 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFLL;
          if ((v28 & 0x2000000000000000) != 0)
            v29 = HIBYTE(v28) & 0xF;
          if (!v29)
          {
            v30 = *(unsigned __int8 *)(v4 + 32);
            v31 = *(_QWORD *)(v4 + 56);
            swift_bridgeObjectRetain();
            sub_2378A2BF4(v31);
            v32 = v10;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
            v34 = v12[2];
            v33 = v12[3];
            if (v34 >= v33 >> 1)
              v12 = sub_2378966A0((_QWORD *)(v33 > 1), v34 + 1, 1, v12);
            v12[2] = v34 + 1;
            v35 = &v12[3 * v34];
            v35[4] = v30;
            v35[5] = 0;
            *((_BYTE *)v35 + 48) = 0;
            swift_bridgeObjectRelease();
            sub_2378A2C04(v31);
            v10 = v32;
            v4 = v55;
          }
          if (v14 != 1)
          {
            v36 = *(_QWORD *)(v4 + 88);
            v37 = *(_QWORD *)(v4 + 80) & 0xFFFFFFFFFFFFLL;
            if ((v36 & 0x2000000000000000) != 0)
              v37 = HIBYTE(v36) & 0xF;
            if (!v37)
            {
              v38 = *(unsigned __int8 *)(v4 + 72);
              v39 = *(_QWORD *)(v4 + 96);
              swift_bridgeObjectRetain();
              sub_2378A2BF4(v39);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
              v41 = v12[2];
              v40 = v12[3];
              if (v41 >= v40 >> 1)
                v12 = sub_2378966A0((_QWORD *)(v40 > 1), v41 + 1, 1, v12);
              v12[2] = v41 + 1;
              v42 = &v12[3 * v41];
              v42[4] = v38;
              v42[5] = 0;
              *((_BYTE *)v42 + 48) = 0;
              swift_bridgeObjectRelease();
              sub_2378A2C04(v39);
              v4 = v55;
            }
          }
        }
        sub_237971B9C(v4, v53, 1);
        goto LABEL_66;
      }
      __break(1u);
LABEL_78:
      v12 = sub_2378966A0((_QWORD *)(v15 > 1), v1, 1, v12);
LABEL_7:
      v12[2] = v1;
      v16 = &v12[3 * v10];
      v16[4] = 0;
      v16[5] = 0;
      *((_BYTE *)v16 + 48) = 2;
      v10 = v9;
      v9 = v5;
      v5 = v14;
      v6 = v13;
      v8 = v51;
      if (v7 > 1)
        goto LABEL_13;
LABEL_8:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0)
        v17 = v4 & 0xFFFFFFFFFFFFLL;
      if (v17)
      {
        if (v7)
          goto LABEL_12;
      }
      else
      {
        v3 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
        v22 = v12[2];
        v21 = v12[3];
        v1 = v22 + 1;
        if (v22 >= v21 >> 1)
          v12 = sub_2378966A0((_QWORD *)(v21 > 1), v22 + 1, 1, v12);
        v12[2] = v1;
        v23 = &v12[3 * v22];
        *((_OWORD *)v23 + 2) = xmmword_237A9A850;
        *((_BYTE *)v23 + 48) = 2;
        v10 = v3;
        if (v7)
        {
LABEL_12:
          v3 = v6;
          v4 = v5;
          goto LABEL_13;
        }
      }
      v7 = v54;
      v4 = v55;
      if (v8 != 1)
        goto LABEL_66;
    }
  }
  v4 = v55;
  if (v8 == 1)
    goto LABEL_30;
LABEL_66:
  if (v9)
  {
    v43 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    sub_2379DBB50(v10, v9);
    v44 = (void *)sub_237A877F4();
    swift_bridgeObjectRelease();
    v45 = objc_msgSend(v43, sel__systemImageNamed_, v44);

    if (!v45)
    {
      if (!a1 || (swift_retain(), v46 = a1(v10, v9), sub_2378A2C04((uint64_t)a1), (v46 & 1) == 0))
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2378966A0(0, v12[2] + 1, 1, v12);
        v48 = v12[2];
        v47 = v12[3];
        if (v48 >= v47 >> 1)
          v12 = sub_2378966A0((_QWORD *)(v47 > 1), v48 + 1, 1, v12);
        v12[2] = v48 + 1;
        v49 = &v12[3 * v48];
        v49[4] = v10;
        v49[5] = v9;
        *((_BYTE *)v49 + 48) = 1;
      }
    }
    sub_237971BB0(v10, v9);
  }
  return v12;
}

Swift::Double_optional __swiftcall NotificationModel.doubleValue()()
{
  Swift::Bool v0;
  Swift::Double_optional result;

  v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t NotificationModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_237A87F44();
  sub_237A878E4();
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  NotificationModel.Text.description.getter();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  if (v1)
    NotificationModel.Symbol.description.getter();
  sub_237A878E4();
  swift_bridgeObjectRelease();
  sub_237A878E4();
  return 0;
}

uint64_t EquatableNoop.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EquatableNoop.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*EquatableNoop.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t EquatableNoop.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t _s14CarPlayAssetUI17NotificationModelV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if (v11 == 1)
      {
        v12 = v2 == v7 && v3 == v8;
        if (v12
          || (v13 = *(_QWORD *)a2,
              v14 = *(_QWORD *)a1,
              v15 = *(_QWORD *)(a1 + 8),
              v16 = sub_237A8840C(),
              v7 = v13,
              v3 = v15,
              v2 = v14,
              (v16 & 1) != 0))
        {
          if (v4 == v9 && v5 == v10)
          {
            v15 = v3;
            v14 = v2;
            v17 = v4;
            v18 = v5;
            LOBYTE(v11) = 1;
            LOBYTE(v6) = 1;
LABEL_29:
            v32 = 1;
            goto LABEL_32;
          }
          v15 = v3;
          v14 = v2;
          v17 = v4;
          v18 = v5;
          v25 = v9;
          v26 = v7;
          v27 = sub_237A8840C();
          v7 = v26;
          v9 = v25;
          v32 = v27;
        }
        else
        {
          v17 = v4;
          v18 = v5;
          v32 = 0;
        }
        LOBYTE(v11) = 1;
        LOBYTE(v6) = 1;
        goto LABEL_32;
      }
      goto LABEL_24;
    }
    if (v11 == 2)
    {
      if (v2 == v7 && v3 == v8)
      {
        v15 = *(_QWORD *)(a1 + 8);
        v14 = *(_QWORD *)a1;
        v17 = *(_QWORD *)(a1 + 16);
        v18 = *(_QWORD *)(a1 + 24);
        v32 = 1;
      }
      else
      {
        v17 = *(_QWORD *)(a1 + 16);
        v18 = *(_QWORD *)(a1 + 24);
        v14 = *(_QWORD *)a1;
        v15 = *(_QWORD *)(a1 + 8);
        v23 = *(_QWORD *)a2;
        v24 = sub_237A8840C();
        v7 = v23;
        v32 = v24;
      }
      LOBYTE(v11) = 2;
      LOBYTE(v6) = 2;
      goto LABEL_32;
    }
LABEL_24:
    v15 = *(_QWORD *)(a1 + 8);
    v14 = *(_QWORD *)a1;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(a1 + 24);
    v32 = 0;
    goto LABEL_32;
  }
  if (*(_BYTE *)(a2 + 32))
    goto LABEL_24;
  if (v2 == v7 && v3 == v8)
  {
    v15 = *(_QWORD *)(a1 + 8);
    v14 = *(_QWORD *)a1;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(a1 + 24);
    LOBYTE(v11) = 0;
    LOBYTE(v6) = 0;
    goto LABEL_29;
  }
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)a1;
  v15 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)a2;
  v21 = sub_237A8840C();
  v7 = v20;
  v32 = v21;
  LOBYTE(v11) = 0;
  LOBYTE(v6) = 0;
LABEL_32:
  v28 = v8;
  v29 = v8;
  v30 = v7;
  sub_2379732BC(v7, v28, v9, v10, v11);
  sub_2379732BC(v14, v15, v17, v18, v6);
  sub_23790BCE8(v14, v15, v17, v18, v6);
  sub_23790BCE8(v30, v29, v9, v10, v11);
  return v32 & 1;
}

uint64_t _s14CarPlayAssetUI17NotificationModelV6SymbolV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t result;
  char v7;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_237A8840C(), result = 0, (v5 & 1) != 0))
  {
    if (v2)
    {
      if (v3)
      {
        swift_retain();
        swift_retain();
        v7 = sub_237A871C4();
        swift_release();
        swift_release();
        if ((v7 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI17NotificationModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  char v42;
  _OWORD v43[2];
  char v44;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(unsigned __int8 *)(a1 + 73);
  v38 = *(_QWORD *)(a1 + 80);
  v39 = *(_QWORD *)(a1 + 88);
  v40 = *(_QWORD *)(a1 + 96);
  v9 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v14 = *(unsigned __int8 *)(a2 + 72);
  v15 = *(unsigned __int8 *)(a2 + 73);
  v36 = *(_QWORD *)(a2 + 80);
  v37 = *(_QWORD *)(a2 + 88);
  v35 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v33 = *(_OWORD *)(a1 + 32);
  v34 = *(_OWORD *)(a1 + 16);
  v31 = *(_OWORD *)(a2 + 32);
  v32 = *(_OWORD *)(a2 + 16);
  v16 = sub_237A8840C();
  v10 = v31;
  v9 = v32;
  v3 = v33;
  v2 = v34;
  v17 = v16;
  result = 0;
  if ((v17 & 1) != 0)
  {
LABEL_4:
    v43[0] = v2;
    v43[1] = v3;
    v44 = v4;
    v41[0] = v9;
    v41[1] = v10;
    v42 = v11;
    if ((_s14CarPlayAssetUI17NotificationModelV4TextO2eeoiySbAE_AEtFZ_0((uint64_t)v43, (uint64_t)v41) & 1) != 0)
    {
      if (v7 == 255)
      {
        if (v14 == 255)
          goto LABEL_18;
      }
      else if (v14 != 255)
      {
        if (v7)
        {
          if (v7 == 1)
          {
            if (v14 == 1)
            {
              v19 = sub_237875CF4(v6, v13);
              sub_2379DBB3C(v6, v5, 1);
              sub_2379DBB3C(v13, v12, 1);
              sub_23790BD3C(v6, v5, 1);
              sub_23790BD3C(v13, v12, 1);
              if ((v19 & 1) == 0)
                return 0;
LABEL_18:
              if (v8)
                v20 = 0x676E696B636F6C62;
              else
                v20 = 0x746C7561666564;
              if (v8)
                v21 = 0xE800000000000000;
              else
                v21 = 0xE700000000000000;
              if (v15)
                v22 = 0x676E696B636F6C62;
              else
                v22 = 0x746C7561666564;
              if (v15)
                v23 = 0xE800000000000000;
              else
                v23 = 0xE700000000000000;
              if (v20 == v22 && v21 == v23)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v24 = sub_237A8840C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                result = 0;
                if ((v24 & 1) == 0)
                  return result;
              }
              if (v39)
              {
                v26 = v37;
                v25 = v38;
                v27 = v36;
                if (v37)
                {
                  if ((v38 != v36 || v39 != v37) && (sub_237A8840C() & 1) == 0)
                    goto LABEL_47;
                  if (!v40)
                  {
                    swift_bridgeObjectRetain_n();
                    if (!v35)
                    {
LABEL_53:
                      swift_release();
                      swift_bridgeObjectRelease();
                      sub_237971BB0(v38, v39);
                      return 1;
                    }
                    goto LABEL_49;
                  }
                  if (v35)
                  {
                    sub_2379DBB50(v38, v39);
                    sub_2379DBB50(v38, v39);
                    sub_2379DBB50(v36, v37);
                    swift_retain();
                    swift_retain();
                    v28 = sub_237A871C4();
                    swift_release();
                    swift_release();
                    sub_237971BB0(v36, v37);
                    if ((v28 & 1) != 0)
                      goto LABEL_53;
                  }
                  else
                  {
LABEL_47:
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
LABEL_49:
                  swift_release();
                  swift_bridgeObjectRelease();
                  v29 = v38;
                  v30 = v39;
                  goto LABEL_50;
                }
                swift_bridgeObjectRetain();
                swift_retain();
              }
              else
              {
                v26 = v37;
                v25 = v38;
                v27 = v36;
                if (!v37)
                  return 1;
              }
              sub_2379DBB50(v27, v26);
              sub_237971BB0(v25, v39);
              v29 = v27;
              v30 = v26;
LABEL_50:
              sub_237971BB0(v29, v30);
              return 0;
            }
            goto LABEL_15;
          }
          if (v14 == 2)
          {
LABEL_17:
            sub_2379DBB3C(v6, v5, v7);
            sub_2379DBB3C(v13, v12, v7);
            sub_23790BD3C(v6, v5, v7);
            sub_23790BD3C(v13, v12, v7);
            goto LABEL_18;
          }
        }
        else if (!v14)
        {
          goto LABEL_17;
        }
LABEL_15:
        sub_2379DBB3C(v6, v5, v7);
        sub_2379DBB3C(v13, v12, v14);
        sub_23790BD3C(v6, v5, v7);
        sub_23790BD3C(v13, v12, v14);
        return 0;
      }
      sub_2379DBB3C(v6, v5, v7);
      sub_2379DBB3C(v13, v12, v14);
      sub_237971B9C(v6, v5, v7);
      sub_237971B9C(v13, v12, v14);
    }
    return 0;
  }
  return result;
}

uint64_t sub_2379DBAE8(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_2379DBB18(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_2379DBB3C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_237973310(a1, a2, a3);
  return a1;
}

uint64_t sub_2379DBB50(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2379DBB84()
{
  unint64_t result;

  result = qword_256826878;
  if (!qword_256826878)
  {
    result = MEMORY[0x23B81FA98](&protocol conformance descriptor for NotificationModel.Style, &type metadata for NotificationModel.Style);
    atomic_store(result, (unint64_t *)&qword_256826878);
  }
  return result;
}

uint64_t sub_2379DBBC8()
{
  return MEMORY[0x24BEE4270];
}

uint64_t sub_2379DBBD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 24);
  sub_2378A2BF4(*a1);
  result = sub_2378A2C04(v5);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_2379DBC28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_2379DBC34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 104) = v4;
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t destroy for NotificationModel(uint64_t a1)
{
  int v2;

  swift_bridgeObjectRelease();
  sub_23790BCE8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 != 255)
    sub_23790BD3C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v2);
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for NotificationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_2379732BC(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  v10 = *(unsigned __int8 *)(a2 + 72);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    sub_237973310(v11, v12, *(_BYTE *)(a2 + 72));
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_BYTE *)(a1 + 72) = v10;
  }
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v13 = *(_QWORD *)(a2 + 88);
  if (v13)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v13;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  }
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NotificationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_2379732BC(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v13 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  sub_23790BCE8(v9, v10, v11, v12, v13);
  v14 = (__int128 *)(a1 + 56);
  v15 = (__int128 *)(a2 + 56);
  v16 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v16 == 255)
    {
      v25 = *v15;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *v14 = v25;
    }
    else
    {
      v22 = *(_QWORD *)(a2 + 56);
      v23 = *(_QWORD *)(a2 + 64);
      sub_237973310(v22, v23, *(_BYTE *)(a2 + 72));
      *(_QWORD *)(a1 + 56) = v22;
      *(_QWORD *)(a1 + 64) = v23;
      *(_BYTE *)(a1 + 72) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_2379DBFE8(a1 + 56);
    v24 = *(_BYTE *)(a2 + 72);
    *v14 = *v15;
    *(_BYTE *)(a1 + 72) = v24;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 56);
    v18 = *(_QWORD *)(a2 + 64);
    sub_237973310(v17, v18, *(_BYTE *)(a2 + 72));
    v19 = *(_QWORD *)(a1 + 56);
    v20 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v17;
    *(_QWORD *)(a1 + 64) = v18;
    v21 = *(_BYTE *)(a1 + 72);
    *(_BYTE *)(a1 + 72) = v16;
    sub_23790BD3C(v19, v20, v21);
  }
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v26 = (_OWORD *)(a1 + 80);
  v27 = (_OWORD *)(a2 + 80);
  v28 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v28)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2379DC018(a1 + 80);
      v29 = *(_QWORD *)(a2 + 96);
      *v26 = *v27;
      *(_QWORD *)(a1 + 96) = v29;
    }
  }
  else if (v28)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v30 = *v27;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *v26 = v30;
  }
  v31 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v31;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2379DBFE8(uint64_t a1)
{
  sub_23790BD3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_2379DC018(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  _OWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_23790BCE8(v6, v7, v8, v9, v11);
  v12 = (_OWORD *)(a2 + 56);
  v13 = *(unsigned __int8 *)(a1 + 72);
  if (v13 != 255)
  {
    v14 = *(unsigned __int8 *)(a2 + 72);
    if (v14 != 255)
    {
      v15 = *(_QWORD *)(a1 + 56);
      v16 = *(_QWORD *)(a1 + 64);
      *(_OWORD *)(a1 + 56) = *v12;
      *(_BYTE *)(a1 + 72) = v14;
      sub_23790BD3C(v15, v16, v13);
      goto LABEL_6;
    }
    sub_2379DBFE8(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *v12;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
LABEL_6:
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  if (!*(_QWORD *)(a1 + 88))
  {
LABEL_10:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(a2 + 88);
  if (!v17)
  {
    sub_2379DC018(a1 + 80);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
LABEL_11:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel()
{
  return &type metadata for NotificationModel;
}

uint64_t destroy for NotificationModel.Text(uint64_t a1)
{
  return sub_23790BCE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2379732BC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2379732BC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_23790BCE8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for NotificationModel.Text(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_23790BCE8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationModel.Text(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationModel.Text(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_2379DC328(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_2379DC330(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NotificationModel.Text()
{
  return &type metadata for NotificationModel.Text;
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationModel.ButtonType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_2379DC7C4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_237973310);
}

uint64_t destroy for NotificationModel.ButtonType(uint64_t a1)
{
  return sub_23790BD3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t *assignWithCopy for NotificationModel.ButtonType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2379DC820(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_237973310, (void (*)(uint64_t, uint64_t, uint64_t))sub_23790BD3C);
}

uint64_t *assignWithTake for NotificationModel.ButtonType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2379DC88C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23790BD3C);
}

ValueMetadata *type metadata accessor for NotificationModel.ButtonType()
{
  return &type metadata for NotificationModel.ButtonType;
}

uint64_t storeEnumTagSinglePayload for NotificationModel.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2379DC3E8 + 4 * byte_237AA130A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2379DC41C + 4 * byte_237AA1305[v4]))();
}

uint64_t sub_2379DC41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379DC424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2379DC42CLL);
  return result;
}

uint64_t sub_2379DC438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2379DC440);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2379DC444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2379DC44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationModel.Style()
{
  return &type metadata for NotificationModel.Style;
}

uint64_t destroy for NotificationModel.Symbol()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s14CarPlayAssetUI17NotificationModelV6SymbolVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NotificationModel.Symbol(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationModel.Symbol(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.Symbol()
{
  return &type metadata for NotificationModel.Symbol;
}

uint64_t destroy for NotificationModel.Action(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationModel.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.Action()
{
  return &type metadata for NotificationModel.Action;
}

uint64_t initializeBufferWithCopyOfBuffer for NotificationModel.ValidationError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_2379DC7C4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2379DC784);
}

uint64_t sub_2379DC784(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for NotificationModel.ValidationError(uint64_t a1)
{
  return sub_2379DC7AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2379DC7AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2379DC7C4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for NotificationModel.ValidationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2379DC820(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2379DC784, (void (*)(uint64_t, uint64_t, uint64_t))sub_2379DC7AC);
}

uint64_t *sub_2379DC820(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for NotificationModel.ValidationError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2379DC88C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2379DC7AC);
}

uint64_t *sub_2379DC88C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationModel.ValidationError()
{
  return &type metadata for NotificationModel.ValidationError;
}

uint64_t sub_2379DC8E0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2379DC94C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2379DC9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_2379DC9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_2379DCA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2379DCA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2379DCA7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2379DCB2C + 4 * byte_237AA130F[(v7 - 1)]))();
}

void sub_2379DCB7C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for EquatableNoop(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EquatableNoop);
}

uint64_t EnvironmentValues.dataSourceManager.getter()
{
  uint64_t Strong;
  uint64_t *v1;
  _BYTE v3[16];

  sub_2379715D4();
  sub_237A86B88();
  if ((v3[8] & 1) != 0)
  {
    Strong = 0;
    v1 = &qword_2568237C0;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    v1 = &qword_2568237B8;
  }
  sub_2378BC024((uint64_t)v3, v1);
  return Strong;
}

uint64_t EnvironmentValues.dataSourceManager.setter(uint64_t a1)
{
  _BYTE v3[8];
  uint64_t v4;
  BOOL v5;

  if (a1)
  {
    swift_weakInit();
    swift_weakAssign();
    sub_2379DCE64((uint64_t)v3, (uint64_t)&v4);
  }
  else
  {
    v4 = 0;
  }
  v5 = a1 == 0;
  sub_2379715D4();
  sub_237A86B94();
  return swift_release();
}

uint64_t sub_2379DCE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568237B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DataSourceManager.__allocating_init(_:preLoadAll:)(uint64_t (*a1)(char *, _QWORD, _QWORD), uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DataSourceManager.init(_:preLoadAll:)(a1, a2, a3);
  return v6;
}

uint64_t sub_2379DCF00(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v7 = *a1;
  v24 = InstrumentDataIdentifier.rawValue.getter();
  v25 = v8;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_2378D2DB8(v24, v25);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32);
  LOBYTE(v22) = v7;
  v12 = v13(&v22, a2, a3);
  LOBYTE(v22) = v7;
  v22 = InstrumentDataIdentifier.rawValue.getter();
  v23 = v14;
  swift_bridgeObjectRetain();
  sub_237A878E4();
  v15 = v22;
  v16 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = 0x8000000000000000;
  sub_237871CC0(v12, v15, v16, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + 16) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_BYTE *)(v4 + 24) == 1
    && (*(_BYTE *)(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
  {
    *(_BYTE *)(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
    v18 = *(void (**)(uint64_t))(v12 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
    v19 = swift_retain();
    v18(v19);
    swift_release();
  }
  return v12;
}

uint64_t DataSourceManager.init(_:preLoadAll:)(uint64_t (*a1)(char *, _QWORD, _QWORD), uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v31;
  char v32[24];

  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4B00];
  v4 = (_QWORD *)(v3 + 16);
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  if ((a3 & 1) == 0)
    return v3;
  v5 = 56;
  swift_retain();
  v6 = &byte_25096A498;
  while (1)
  {
    v8 = *v6++;
    v32[0] = v8;
    v9 = InstrumentDataIdentifier.rawValue.getter();
    v11 = v10;
    v32[0] = v8;
    v12 = a1(v32, 0, 0);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = (_QWORD *)*v4;
    v31 = (_QWORD *)*v4;
    *v4 = 0x8000000000000000;
    v16 = sub_2378D2DB8(v9, v11);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      break;
    v20 = v15;
    if (v14[3] >= v19)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v23 = v31;
        if ((v15 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2378C6660();
        v23 = v31;
        if ((v20 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2378CBB20(v19, isUniquelyReferenced_nonNull_native);
      v21 = sub_2378D2DB8(v9, v11);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_20;
      v16 = v21;
      v23 = v31;
      if ((v20 & 1) != 0)
      {
LABEL_3:
        v7 = v23[7];
        swift_release();
        *(_QWORD *)(v7 + 8 * v16) = v12;
        goto LABEL_4;
      }
    }
    v23[(v16 >> 6) + 8] |= 1 << v16;
    v24 = (uint64_t *)(v23[6] + 16 * v16);
    *v24 = v9;
    v24[1] = v11;
    *(_QWORD *)(v23[7] + 8 * v16) = v12;
    v25 = v23[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_19;
    v23[2] = v27;
    swift_bridgeObjectRetain();
LABEL_4:
    *v4 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (!--v5)
    {
      swift_release();
      return v29;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_237A8858C();
  __break(1u);
  return result;
}

uint64_t sub_2379DD368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
    if ((*(_BYTE *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
    {
      *(_BYTE *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
      v15 = *(void (**)(uint64_t))(v14
                                           + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
      swift_retain();
      v16 = swift_retain();
      v15(v16);
      swift_release();
      result = swift_release();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v6)
    goto LABEL_24;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_24;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_24;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_24;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_24:
    result = swift_release();
    *(_BYTE *)(v0 + 24) = 1;
    return result;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_24;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2379DD534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v17[40];
  _BYTE v18[40];

  swift_beginAccess();
  v16 = v0;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      goto LABEL_25;
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        goto LABEL_25;
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          goto LABEL_25;
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v6)
            goto LABEL_25;
          v12 = *(_QWORD *)(v2 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
    v15 = (_QWORD *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables);
    swift_beginAccess();
    *v15 = MEMORY[0x24BEE4B08];
    swift_retain();
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) == 1)
    {
      sub_2378BBFE0(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, (uint64_t)v18, &qword_256820020);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2378BBFE0((uint64_t)v18, (uint64_t)v17, &qword_256820020);
      swift_retain();
      sub_237A86708();
      sub_2378BC024((uint64_t)v18, &qword_256820020);
    }
    *(_BYTE *)(v14 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
    result = swift_release();
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_25:
    result = swift_release();
    *(_BYTE *)(v16 + 24) = 0;
    return result;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t DataSourceManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DataSourceManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2379DD7E4()
{
  qword_256826900 = 0;
  byte_256826908 = 1;
}

uint64_t sub_2379DD7FC@<X0>(uint64_t a1@<X8>)
{
  if (qword_25681E438 != -1)
    swift_once();
  return sub_2378BBFE0((uint64_t)&qword_256826900, a1, &qword_2568237C0);
}

void (*EnvironmentValues.dataSourceManager.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2379715D4();
  sub_237A86B88();
  if ((v3[1] & 1) != 0)
  {
    Strong = 0;
    v5 = &qword_2568237C0;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    v5 = &qword_2568237B8;
  }
  sub_2378BC024((uint64_t)v3, v5);
  v3[2] = Strong;
  return sub_2379DD8F8;
}

void sub_2379DD8F8(uint64_t a1, char a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (!v3)
    {
      *(_QWORD *)v2 = 0;
      goto LABEL_8;
    }
  }
  else if (!v3)
  {
    *(_QWORD *)v2 = 0;
    goto LABEL_8;
  }
  swift_weakInit();
  v4 = swift_weakAssign();
  sub_2379DCE64(v4, (uint64_t)v2);
LABEL_8:
  v2[8] = v3 == 0;
  sub_237A86B94();
  swift_release();
  free(v2);
}

uint64_t type metadata accessor for DataSourceManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for DataSourceManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataSourceManager.dataSource(dataIdentifier:zoneRegion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

