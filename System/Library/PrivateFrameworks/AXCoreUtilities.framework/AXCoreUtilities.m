uint64_t AXCUProcessIsAXUIServer()
{
  if (AXCUProcessIsAXUIServer_onceToken != -1)
    dispatch_once(&AXCUProcessIsAXUIServer_onceToken, &__block_literal_global_34);
  return AXCUProcessIsAXUIServer__IsAXUIServer;
}

uint64_t AXProcessIsAXAssetsd()
{
  if (AXProcessIsAXAssetsd_onceToken != -1)
    dispatch_once(&AXProcessIsAXAssetsd_onceToken, &__block_literal_global_24_1);
  return AXProcessIsAXAssetsd__IsAXAssetsd;
}

id AXLogAppAccessibility()
{
  if (AXLogAppAccessibility_onceToken != -1)
    dispatch_once(&AXLogAppAccessibility_onceToken, &__block_literal_global_115);
  return (id)AXLogAppAccessibility___logObj;
}

uint64_t AXSetThreadPriority(int a1)
{
  _opaque_pthread_t *v2;
  uint64_t sched_priority;
  _opaque_pthread_t *v4;
  int v6;
  sched_param v7;

  v7 = 0;
  v6 = 0;
  v2 = pthread_self();
  pthread_getschedparam(v2, &v6, &v7);
  sched_priority = v7.sched_priority;
  v7.sched_priority = a1;
  v4 = pthread_self();
  pthread_setschedparam(v4, 2, &v7);
  return sched_priority;
}

id AXLogUltron()
{
  if (AXLogUltron_onceToken != -1)
    dispatch_once(&AXLogUltron_onceToken, &__block_literal_global_235);
  return (id)AXLogUltron___logObj;
}

id AXLogAssetLoader()
{
  if (AXLogAssetLoader_onceToken != -1)
    dispatch_once(&AXLogAssetLoader_onceToken, &__block_literal_global_293);
  return (id)AXLogAssetLoader___logObj;
}

id AXLogLoading()
{
  if (AXLogLoading_onceToken != -1)
    dispatch_once(&AXLogLoading_onceToken, &__block_literal_global_135);
  return (id)AXLogLoading___logObj;
}

id AXCLanguageFallbackPlistPath()
{
  void *v0;
  void *v1;

  AXCBundle();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "pathForResource:ofType:", CFSTR("AXLanguageToFallback"), CFSTR("plist"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id AXCBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)AXCBundle_CUBundle;
  if (!AXCBundle_CUBundle)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithIdentifier:", CFSTR("com.apple.accessibility.AXCoreUtilities"));
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)AXCBundle_CUBundle;
    AXCBundle_CUBundle = v1;

    v0 = (void *)AXCBundle_CUBundle;
  }
  return v0;
}

id AXTTSLogResourceManager()
{
  if (AXTTSLogResourceManager_onceToken != -1)
    dispatch_once(&AXTTSLogResourceManager_onceToken, &__block_literal_global_21_0);
  return (id)AXTTSLogResourceManager___logObj;
}

id AXCLanguageCanonicalFormToGeneralLanguageUsingFallback(void *a1, int a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  id v15;
  void *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = v3;
  if (a2)
  {
    AXCRemapLanguageCodeToFallbackIfNeccessary(v3);
    v5 = objc_claimAutoreleasedReturnValue();

    v4 = (void *)v5;
  }
  objc_msgSend(v4, "lowercaseString");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  AXCLanguageToLocales();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectForKeyedSubscript:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = v8;

    v6 = v9;
  }
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v10 = objc_msgSend(&unk_1E28D55F0, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v19;
    while (2)
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v19 != v12)
          objc_enumerationMutation(&unk_1E28D55F0);
        v14 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * i);
        if (objc_msgSend(v6, "rangeOfString:", v14) != 0x7FFFFFFFFFFFFFFFLL)
        {
          objc_msgSend(v6, "substringToIndex:", objc_msgSend(v6, "rangeOfString:", v14));
          v15 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_15;
        }
      }
      v11 = objc_msgSend(&unk_1E28D55F0, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (v11)
        continue;
      break;
    }
  }
  v15 = v6;
LABEL_15:
  v16 = v15;

  return v16;
}

BOOL AXRuntimeCheck_SupportsLiveCaptions()
{
  void *v0;
  _BOOL8 v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (_os_feature_enabled_impl())
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "_deviceLanguage");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v0, "isEqualToString:", CFSTR("en")))
    {
      if (AXRuntimeCheck_HasANE_onceToken != -1)
        dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
      v1 = AXRuntimeCheck_HasANE__hasANE != 0;
    }
    else
    {
      v1 = 0;
    }

  }
  else
  {
    v1 = 0;
  }
  AXLogLiveTranscription();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", _os_feature_enabled_impl());
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99DC8], "_deviceLanguage");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)MEMORY[0x1E0CB37E8];
    if (AXRuntimeCheck_HasANE_onceToken != -1)
      dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
    objc_msgSend(v6, "numberWithBool:", AXRuntimeCheck_HasANE__hasANE);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138413058;
    v10 = v3;
    v11 = 2112;
    v12 = v4;
    v13 = 2112;
    v14 = v5;
    v15 = 2112;
    v16 = v7;
    _os_log_impl(&dword_18EBEC000, v2, OS_LOG_TYPE_DEFAULT, "Live captions supported: %@ [%@,%@,%@]", (uint8_t *)&v9, 0x2Au);

  }
  return v1;
}

id AXLogLiveTranscription()
{
  if (AXLogLiveTranscription_onceToken != -1)
    dispatch_once(&AXLogLiveTranscription_onceToken, &__block_literal_global_315);
  return (id)AXLogLiveTranscription___logObj;
}

id AXLogRTT()
{
  if (AXLogRTT_onceToken != -1)
    dispatch_once(&AXLogRTT_onceToken, &__block_literal_global_233);
  return (id)AXLogRTT___logObj;
}

uint64_t AXRuntimeCheck_MauiSSEOnly()
{
  if (AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly != -1)
    dispatch_once(&AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly, &__block_literal_global_16);
  return AXRuntimeCheck_MauiSSEOnly__ffEnabled_MauiSSEOnly;
}

void sub_18EBEF498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id AXSupportLogCommon()
{
  if (AXSupportLogCommon_onceToken != -1)
    dispatch_once(&AXSupportLogCommon_onceToken, &__block_literal_global_3_2);
  return (id)AXSupportLogCommon___logObj;
}

void AX_PERFORM_WITH_LOCK(os_unfair_lock_s *a1, void *a2)
{
  void (**v3)(_QWORD);

  v3 = a2;
  os_unfair_lock_lock(a1);
  v3[2](v3);

  os_unfair_lock_unlock(a1);
}

void AXPerformBlockOnMainThreadAfterDelay(void *a1, double a2)
{
  int64_t v2;
  dispatch_time_t v3;
  dispatch_block_t block;

  v2 = (uint64_t)(a2 * 1000000000.0);
  block = a1;
  v3 = dispatch_time(0, v2);
  dispatch_after(v3, MEMORY[0x1E0C80D38], block);

}

__CFString *AXCLanguageConvertToCanonicalForm(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  __CFString *v4;
  void *v5;
  __CFString *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  CFArrayRef v13;
  __CFString *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    AXCRemapLanguageCodeToFallbackIfNeccessary(v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();

    AXCLanguageToLocales();
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringByReplacingOccurrencesOfString:withString:", CFSTR("_"), CFSTR("-"));
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue();

    -[__CFString lowercaseString](v4, "lowercaseString");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKey:", v5);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (!v6)
    {
      v7 = -[__CFString rangeOfString:](v4, "rangeOfString:", CFSTR("-"));
      if (v7 == 0x7FFFFFFFFFFFFFFFLL)
      {
        v6 = v4;
        if (!v6)
          goto LABEL_16;
      }
      else
      {
        v8 = v7;
        -[__CFString substringToIndex:](v4, "substringToIndex:", v7);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        -[__CFString substringFromIndex:](v4, "substringFromIndex:", v8 + 1);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "uppercaseString");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "stringByAppendingFormat:", CFSTR("-%@"), v11);
        v6 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (!v6)
          goto LABEL_16;
      }
    }
    if ((!objc_msgSend(v5, "isEqualToString:", CFSTR("zh"))
       || (-[__CFString hasPrefix:](v6, "hasPrefix:", CFSTR("zh")) & 1) == 0)
      && (!objc_msgSend(v5, "isEqualToString:", CFSTR("pt"))
       || (-[__CFString hasPrefix:](v6, "hasPrefix:", CFSTR("pt")) & 1) == 0)
      && (!objc_msgSend(v5, "isEqualToString:", CFSTR("fr"))
       || (-[__CFString hasPrefix:](v6, "hasPrefix:", CFSTR("fr")) & 1) == 0)
      && (!objc_msgSend(v5, "isEqualToString:", CFSTR("en"))
       || !-[__CFString hasPrefix:](v6, "hasPrefix:", CFSTR("en"))))
    {
      goto LABEL_26;
    }
LABEL_16:
    v12 = objc_msgSend(v5, "isEqualToString:", CFSTR("zh"));
    v13 = CFLocaleCopyPreferredLanguages();
    -[__CFArray firstObject](v13, "firstObject");
    v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {

      -[__CFString stringByReplacingOccurrencesOfString:withString:](v14, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-Hans"), &stru_1E28C88D8);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-Hant"), &stru_1E28C88D8);
      v14 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if ((-[__CFString hasPrefix:](v14, "hasPrefix:", CFSTR("zh")) & 1) != 0)
      {
        v6 = v14;
LABEL_26:

        goto LABEL_27;
      }
      v6 = CFSTR("zh-CN");
    }
    else
    {

      if (v14)
      {
        -[__CFString lowercaseString](v14, "lowercaseString");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "objectForKeyedSubscript:", v16);
        v17 = objc_claimAutoreleasedReturnValue();
        if (v17)
        {
          v18 = (void *)v17;
          -[__CFString lowercaseString](v14, "lowercaseString");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = objc_msgSend(v19, "hasPrefix:", v5);

          if (!v20)
            goto LABEL_25;
          v16 = v6;
          v6 = v14;
        }

      }
    }
LABEL_25:

    goto LABEL_26;
  }
  v4 = (__CFString *)v1;
  v6 = v4;
LABEL_27:

  return v6;
}

id AXCRemapLanguageCodeToFallbackIfNeccessary(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  AXCLanguageToFallbacks();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "lowercaseString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (id)objc_claimAutoreleasedReturnValue();

  if (!v4)
    v4 = v1;

  return v4;
}

id AXCLanguageToFallbacks()
{
  if (AXCLanguageToFallbacks_onceToken != -1)
    dispatch_once(&AXCLanguageToFallbacks_onceToken, &__block_literal_global_13_0);
  return (id)AXCLanguageToFallbacks_LanguageToFallback;
}

id AXCLanguageToLocales()
{
  if (AXCLanguageToLocales_onceToken != -1)
    dispatch_once(&AXCLanguageToLocales_onceToken, &__block_literal_global_22);
  return (id)AXCLanguageToLocales_LanguageToLangLocale;
}

void AXPerformBlockAsynchronouslyOnMainThread(dispatch_block_t block)
{
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

id AXRuntimeLogNotifications()
{
  if (AXRuntimeLogNotifications_onceToken != -1)
    dispatch_once(&AXRuntimeLogNotifications_onceToken, &__block_literal_global_9_0);
  return (id)AXRuntimeLogNotifications___logObj;
}

id AXRuntimeLogPID()
{
  if (AXRuntimeLogPID_onceToken != -1)
    dispatch_once(&AXRuntimeLogPID_onceToken, &__block_literal_global_7_0);
  return (id)AXRuntimeLogPID___logObj;
}

uint64_t AXAccessibilityBundlesDirectory()
{
  return objc_msgSend(CFSTR("/"), "stringByAppendingPathComponent:", CFSTR("System/Library/AccessibilityBundles"));
}

id AXLogUIA()
{
  if (AXLogUIA_onceToken != -1)
    dispatch_once(&AXLogUIA_onceToken, &__block_literal_global_79);
  return (id)AXLogUIA___logObj;
}

void destructor(id a1)
{
  if (a1)

}

void AXPerformBlockOnMainThread(void *a1)
{
  void *v1;
  void (**block)(void);

  v1 = (void *)MEMORY[0x1E0CB3978];
  block = a1;
  if (objc_msgSend(v1, "isMainThread"))
    block[2]();
  else
    dispatch_async(MEMORY[0x1E0C80D38], block);

}

void AXPerformBlockSynchronouslyOnMainThread(void *a1)
{
  void *v1;
  void (**block)(void);

  v1 = (void *)MEMORY[0x1E0CB3978];
  block = a1;
  if (objc_msgSend(v1, "isMainThread"))
    block[2]();
  else
    dispatch_sync(MEMORY[0x1E0C80D38], block);

}

id AXLogAssetDaemon()
{
  if (AXLogAssetDaemon_onceToken != -1)
    dispatch_once(&AXLogAssetDaemon_onceToken, &__block_literal_global_295);
  return (id)AXLogAssetDaemon___logObj;
}

id AXTTSLogResourceMigration()
{
  if (AXTTSLogResourceMigration_onceToken != -1)
    dispatch_once(&AXTTSLogResourceMigration_onceToken, &__block_literal_global_23);
  return (id)AXTTSLogResourceMigration___logObj;
}

id AXLogCommon()
{
  if (AXLogCommon_onceToken != -1)
    dispatch_once(&AXLogCommon_onceToken, &__block_literal_global_23);
  return (id)AXLogCommon___logObj;
}

id AXLogAggregate()
{
  if (AXLogAggregate_onceToken != -1)
    dispatch_once(&AXLogAggregate_onceToken, &__block_literal_global_77);
  return (id)AXLogAggregate___logObj;
}

BOOL AXDeviceIsAudioAccessory()
{
  return AXDeviceGetType() == 6;
}

uint64_t AXCUProcessIsVoiceOverTouch()
{
  if (AXCUProcessIsVoiceOverTouch_onceToken != -1)
    dispatch_once(&AXCUProcessIsVoiceOverTouch_onceToken, &__block_literal_global_35_0);
  return AXCUProcessIsVoiceOverTouch__IsVoiceOverTouch;
}

id AXCLanguageCanonicalFormToGeneralLanguage(void *a1)
{
  return AXCLanguageCanonicalFormToGeneralLanguageUsingFallback(a1, 1);
}

id getAXSettingsClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAXSettingsClass_softClass;
  v7 = getAXSettingsClass_softClass;
  if (!getAXSettingsClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke;
    v3[3] = &unk_1E28C1CB0;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EBF10AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAXSettingsClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary)
  {
    AccessibilityUtilitiesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AXSettings");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getAXSettingsClass_block_invoke_cold_1();
    free(v3);
  }
  getAXSettingsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18EBF1E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void *__Block_byref_object_copy_(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

{

}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

void OUTLINED_FUNCTION_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

const char *OUTLINED_FUNCTION_7()
{
  const char *v0;

  return sel_getName(v0);
}

uint64_t AXCurrentProcessExistsInLoginSessionSBOnly()
{
  if (AXDeviceIsMultiUser())
    return MKBUserSessionIsLoginWindow();
  else
    return 0;
}

uint64_t AXDeviceIsMultiUser()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)MKBUserTypeDeviceMode();
  objc_msgSend(v0, "objectForKeyedSubscript:", *MEMORY[0x1E0D4E5A0]);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0D4E5A8]);

  return v2;
}

const __CFString *AXInvertColorsDarkModeDetectionJavascript()
{
  return CFSTR("function luminance(color) {  if (color.length == 4 && color[3] == 0) { return 1; } for (var k = 0; k < 3; k++) { var adjusted = 0;  var value = color[k] / 255;  if (value < 0.03928) {        value = value / 12.92;    } else {        value = (value + .055) / 1.055;        value = Math.pow(value, 2.4); } color[k] = value;   } return (color[0] * .2126) + (color[1] * .7152) + (color[2] * .0722); }\nfunction dm() { var supportedSchemes = document.head.querySelector(\"meta[name='supported-color-schemes']\");\nvar supportedSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));\nvar colorSchemes = document.head.querySelector(\"meta[name='color-scheme']\");\nvar colorSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));\nvar classListDM = document.documentElement.classList.contains('apple-mail-implicit-dark-support');\nvar bgColor = document.body && window.getComputedStyle(document.body).getPropertyValue('background-color');\nbgColor = bgColor.replace(/[^\\d,]/g, '').split(',');\nvar luma = bgColor ? luminance(bgColor) : .99;\nreturn (supportedSchemesDM || colorSchemesDM || classListDM || (luma < .3)) }\ndm();");
}

uint64_t AXProcessIsPreBoard()
{
  if (AXProcessIsPreBoard_onceToken != -1)
    dispatch_once(&AXProcessIsPreBoard_onceToken, &__block_literal_global_0);
  return AXProcessIsPreBoard_AXProcessIsPreBoard;
}

id AXApplicationGetMainBundleIdentifier()
{
  if (AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken != -1)
    dispatch_once(&AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken, &__block_literal_global_194);
  return (id)AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
}

uint64_t AXProcessIsPreferences()
{
  if (AXProcessIsPreferences_token != -1)
    dispatch_once(&AXProcessIsPreferences_token, &__block_literal_global_146);
  return AXProcessIsPreferences__AXIsProcess;
}

uint64_t AXProcessIsCarPlay()
{
  if (AXProcessIsCarPlay_onceToken != -1)
    dispatch_once(&AXProcessIsCarPlay_onceToken, &__block_literal_global_147);
  return AXProcessIsCarPlay__AXProcessIsCarPlay;
}

uint64_t AXProcessIsMobileMail()
{
  if (AXProcessIsMobileMail__AXProcessIsMobileMailOnceToken != -1)
    dispatch_once(&AXProcessIsMobileMail__AXProcessIsMobileMailOnceToken, &__block_literal_global_148);
  return AXProcessIsMobileMail__AXProcessIsMobileMail;
}

uint64_t AXProcessIsMomentsUIService()
{
  if (AXProcessIsMomentsUIService__AXProcessIsMobileMailOnceToken != -1)
    dispatch_once(&AXProcessIsMomentsUIService__AXProcessIsMobileMailOnceToken, &__block_literal_global_149);
  return AXProcessIsMomentsUIService__AXProcessIsMomentsUIService;
}

uint64_t AXProcessIsSpringBoard()
{
  if (AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken != -1)
    dispatch_once(&AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken, &__block_literal_global_150);
  return AXProcessIsSpringBoard__AXProcessIsSpringBoard;
}

uint64_t AXProcessIsChronod()
{
  if (AXProcessIsChronod__AXProcessIsChronodOnceToken != -1)
    dispatch_once(&AXProcessIsChronod__AXProcessIsChronodOnceToken, &__block_literal_global_151);
  return AXProcessIsChronod__AXProcessIsChronod;
}

uint64_t AXProcessIsPosterBoard()
{
  if (AXProcessIsPosterBoard__AXProcessIsPosterBoardOnceToken != -1)
    dispatch_once(&AXProcessIsPosterBoard__AXProcessIsPosterBoardOnceToken, &__block_literal_global_152);
  return AXProcessIsPosterBoard__AXProcessIsPosterBoard;
}

uint64_t AXProcessIsAXSettingsShortcutsPlugin()
{
  if (AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPluginOnceToken != -1)
    dispatch_once(&AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPluginOnceToken, &__block_literal_global_153);
  return AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPlugin;
}

uint64_t AXProcessIsPineBoard()
{
  if (AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken != -1)
    dispatch_once(&AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_154);
  return AXProcessIsPineBoard__AXProcessIsPineBoard;
}

uint64_t AXProcessIsClarityBoard()
{
  if (AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken != -1)
    dispatch_once(&AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken, &__block_literal_global_155);
  return AXProcessIsClarityBoard__AXProcessIsClarityBoard;
}

uint64_t AXProcessIsSurfBoard()
{
  if (AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken != -1)
    dispatch_once(&AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_156);
  return AXProcessIsSurfBoard__AXProcessIsSurfBoard;
}

uint64_t AXProcessIsCheckerBoard()
{
  if (AXProcessIsCheckerBoard__AXProcessIsCheckerBoardOnceToken != -1)
    dispatch_once(&AXProcessIsCheckerBoard__AXProcessIsCheckerBoardOnceToken, &__block_literal_global_157);
  return AXProcessIsCheckerBoard__AXProcessIsCheckerBoard;
}

uint64_t AXProcessIsSystemApplication()
{
  if (AXProcessIsSystemApplication__OnceToken != -1)
    dispatch_once(&AXProcessIsSystemApplication__OnceToken, &__block_literal_global_158);
  if (AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken != -1)
    dispatch_once(&AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken, &__block_literal_global_150);
  if ((AXProcessIsSpringBoard__AXProcessIsSpringBoard & 1) != 0)
    return 1;
  if (AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken != -1)
    dispatch_once(&AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_154);
  if ((AXProcessIsPineBoard__AXProcessIsPineBoard & 1) != 0)
    return 1;
  if (AXProcessIsCarousel__AXProcessIsCarouselOnceToken != -1)
    dispatch_once(&AXProcessIsCarousel__AXProcessIsCarouselOnceToken, &__block_literal_global_174);
  if ((AXProcessIsCarousel__AXProcessIsCarousel & 1) != 0)
    return 1;
  if (AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken != -1)
    dispatch_once(&AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken, &__block_literal_global_155);
  if ((AXProcessIsClarityBoard__AXProcessIsClarityBoard & 1) != 0)
    return 1;
  if (AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken != -1)
    dispatch_once(&AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_156);
  if ((AXProcessIsSurfBoard__AXProcessIsSurfBoard & 1) != 0)
    return 1;
  else
    return objc_msgSend((id)AXProcessIsSystemApplication_app, "_accessibilityInterposesAsSystemApplication");
}

uint64_t AXProcessIsCarousel()
{
  if (AXProcessIsCarousel__AXProcessIsCarouselOnceToken != -1)
    dispatch_once(&AXProcessIsCarousel__AXProcessIsCarouselOnceToken, &__block_literal_global_174);
  return AXProcessIsCarousel__AXProcessIsCarousel;
}

uint64_t AXProcessIsSiri()
{
  if (AXProcessIsSiri__AXProcessIsSiriOnceToken != -1)
    dispatch_once(&AXProcessIsSiri__AXProcessIsSiriOnceToken, &__block_literal_global_163);
  return AXProcessIsSiri__AXProcessIsSiri;
}

uint64_t AXProcessIsSpotlight()
{
  if (AXProcessIsSpotlight__AXProcessIsSpotlightOnceToken != -1)
    dispatch_once(&AXProcessIsSpotlight__AXProcessIsSpotlightOnceToken, &__block_literal_global_164);
  return AXProcessIsSpotlight__AXProcessIsSpotlight;
}

uint64_t AXProcessIsInCallService()
{
  if (AXProcessIsInCallService_onceToken != -1)
    dispatch_once(&AXProcessIsInCallService_onceToken, &__block_literal_global_167);
  return AXProcessIsInCallService_AXIsInCallService;
}

uint64_t AXProcessIsRTTNotificationContentExtension()
{
  if (AXProcessIsRTTNotificationContentExtension_onceToken != -1)
    dispatch_once(&AXProcessIsRTTNotificationContentExtension_onceToken, &__block_literal_global_168);
  return AXProcessIsRTTNotificationContentExtension_AXIsRTTNotificationContentExtension;
}

uint64_t AXProcessIsSafari()
{
  if (AXProcessIsSafari_onceToken != -1)
    dispatch_once(&AXProcessIsSafari_onceToken, &__block_literal_global_169);
  return AXProcessIsSafari_AXIsSafari;
}

uint64_t AXProcessIsWidgetRenderer()
{
  if (AXProcessIsWidgetRenderer_onceToken != -1)
    dispatch_once(&AXProcessIsWidgetRenderer_onceToken, &__block_literal_global_170);
  return AXProcessIsWidgetRenderer__AXProcessIsWidgetRenderer;
}

id AXProcessGetName()
{
  if (AXProcessGetName__AXProcessNameOnceToken != -1)
    dispatch_once(&AXProcessGetName__AXProcessNameOnceToken, &__block_literal_global_192);
  return (id)AXProcessGetName__AXProcessName;
}

uint64_t AXProcessIsInputUI()
{
  if (AXProcessIsInputUI_onceToken != -1)
    dispatch_once(&AXProcessIsInputUI_onceToken, &__block_literal_global_171);
  return AXProcessIsInputUI_AXProcessIsInputUI;
}

uint64_t AXProcessIsShortcuts()
{
  if (AXProcessIsShortcuts_onceToken != -1)
    dispatch_once(&AXProcessIsShortcuts_onceToken, &__block_literal_global_172);
  return AXProcessIsShortcuts_AXProcessIsShortcuts;
}

uint64_t AXProcessIsStickerPickerService()
{
  if (AXProcessIsStickerPickerService_onceToken != -1)
    dispatch_once(&AXProcessIsStickerPickerService_onceToken, &__block_literal_global_173);
  return AXProcessIsStickerPickerService_AXProcessIsStickerPickerService;
}

uint64_t AXProcessIsClockFace()
{
  if (AXProcessIsClockFace__AXProcessIsClockFaceOnceToken != -1)
    dispatch_once(&AXProcessIsClockFace__AXProcessIsClockFaceOnceToken, &__block_literal_global_175);
  return AXProcessIsClockFace__AXProcessIsClockFace;
}

uint64_t AXProcessIsBackboard()
{
  if (AXProcessIsBackboard_Once != -1)
    dispatch_once(&AXProcessIsBackboard_Once, &__block_literal_global_176);
  return AXProcessIsBackboard__AXProcessIsBackboard;
}

uint64_t AXProcessIsAccessibilityAppIntents()
{
  if (AXProcessIsAccessibilityAppIntents_onceToken != -1)
    dispatch_once(&AXProcessIsAccessibilityAppIntents_onceToken, &__block_literal_global_177);
  return AXProcessIsAccessibilityAppIntents__IsAccessibilityAppIntents;
}

uint64_t AXProcessIsCommandAndControl()
{
  if (AXProcessIsCommandAndControl_onceToken != -1)
    dispatch_once(&AXProcessIsCommandAndControl_onceToken, &__block_literal_global_178);
  return AXProcessIsCommandAndControl__IsCommandAndControl;
}

uint64_t AXProcessIsFullKeyboardAccess()
{
  if (AXProcessIsFullKeyboardAccess_onceToken != -1)
    dispatch_once(&AXProcessIsFullKeyboardAccess_onceToken, &__block_literal_global_179);
  return AXProcessIsFullKeyboardAccess__IsFullKeyboardAccess;
}

uint64_t AXProcessIsAppleTVApp()
{
  if (AXProcessIsAppleTVApp_onceToken != -1)
    dispatch_once(&AXProcessIsAppleTVApp_onceToken, &__block_literal_global_180);
  return AXProcessIsAppleTVApp__IsAppleTVApp;
}

BOOL AXApplicationIsForeground()
{
  void *v0;
  void *v1;
  _BOOL8 v2;

  -[objc_class safeValueForKey:](AXSafeClassFromString(CFSTR("UIApplication")), "safeValueForKey:", CFSTR("sharedApplication"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "safeValueForKey:", CFSTR("applicationState"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue") == 0;

  return v2;
}

uint64_t AXApplicationIsViewService()
{
  if (AXApplicationIsViewService_onceToken != -1)
    dispatch_once(&AXApplicationIsViewService_onceToken, &__block_literal_global_183);
  return AXApplicationIsViewService_IsViewService;
}

uint64_t AXProcessRequestMobileUserPrivileges()
{
  uint64_t result;
  uint64_t v1;

  result = (uint64_t)getpwnam("mobile");
  if (result)
  {
    v1 = result;
    if (getuid() == *(_DWORD *)(result + 16))
      return 1;
    else
      return !setgid(*(_DWORD *)(v1 + 20)) && setuid(*(_DWORD *)(v1 + 16)) == 0;
  }
  return result;
}

id AXProcessGetCurrentUserDescription()
{
  uid_t v0;
  passwd *v1;

  v0 = getuid();
  v1 = getpwuid(v0);
  if (v1)
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("user named '%s'"), v1->pw_name);
  else
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("user with identifier '%lu'"), v0);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t AXSafeEqual(unint64_t cf1, unint64_t a2)
{
  uint64_t result;

  if (!(cf1 | a2))
    return 1;
  result = 0;
  if (cf1)
  {
    if (a2)
      return CFEqual((CFTypeRef)cf1, (CFTypeRef)a2);
  }
  return result;
}

uint64_t AXSystemGetVersion()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion;
}

BOOL AXIsLanguageRTL()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v0 = (void *)MEMORY[0x1E0C99DC8];
  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLanguages");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectAtIndex:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v0, "characterDirectionForLanguage:", v2);

  return v3 == 2;
}

uint64_t AXIsAnyPreferredLanguageRTL()
{
  void *v0;
  uint64_t v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLanguages");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __AXIsAnyPreferredLanguageRTL_block_invoke;
  v3[3] = &unk_1E28C2450;
  v3[4] = &v4;
  objc_msgSend(v0, "enumerateObjectsUsingBlock:", v3);

  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EBF41B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL AXSystemVersionEqualTo(uint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion == a1;
}

BOOL AXSystemVersionEqualToOrGreaterThan(unint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion >= a1;
}

BOOL AXSystemVersionEqualToOrLessThan(unint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion <= a1;
}

BOOL AXSystemIsSundance()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion == 3;
}

BOOL AXSystemIsBrighton()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion == 4;
}

BOOL AXSystemIsInnsbruck()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1)
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_199);
  return AXSystemGetVersion__AXSystemVersion == 5;
}

uint64_t AXIsInternalInstall()
{
  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1)
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_214);
  return AXIsInternalInstall__AXIsInternalInstall;
}

uint64_t AXCurrentRootLooksLikeBNI()
{
  if (AXCurrentRootLooksLikeBNI_onceToken != -1)
    dispatch_once(&AXCurrentRootLooksLikeBNI_onceToken, &__block_literal_global_217);
  return AXCurrentRootLooksLikeBNI_looksLikeBNI;
}

id AXCurrentRootDescription()
{
  if (AXCurrentRootDescription_onceToken != -1)
    dispatch_once(&AXCurrentRootDescription_onceToken, &__block_literal_global_225);
  return (id)AXCurrentRootDescription_rootDescription;
}

uint64_t AXSpawnProcess(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  char **v10;
  size_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  uint64_t v19;
  char *const *v20;
  size_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t j;
  id v28;
  const char *v29;
  char *const *v30;
  uint64_t v31;
  uint64_t v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v6, "count");
  MEMORY[0x1E0C80A78]();
  v10 = (char **)((char *)&v33 - v9);
  if (v8 >= 0x200)
    v11 = 512;
  else
    v11 = v8;
  bzero((char *)&v33 - v9, v11);
  v34 = objc_retainAutorelease(v5);
  *v10 = (char *)objc_msgSend(v34, "UTF8String");
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v12 = v6;
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v40;
    v16 = 1;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v40 != v15)
          objc_enumerationMutation(v12);
        (&v10[v16])[i] = (char *)objc_msgSend(objc_retainAutorelease(*(id *)(*((_QWORD *)&v39 + 1) + 8 * i)), "UTF8String");
      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
      v16 += i;
    }
    while (v14);
  }
  else
  {
    v16 = 1;
  }

  v10[v16] = 0;
  objc_msgSend(v7, "count");
  MEMORY[0x1E0C80A78]();
  v20 = (char *const *)((char *)&v33 - v19);
  if (v18 >= 0x200)
    v21 = 512;
  else
    v21 = v18;
  bzero((char *)&v33 - v19, v21);
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v22 = v7;
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
  if (v23)
  {
    v24 = v23;
    v33 = (uint64_t)&v33;
    v25 = 0;
    v26 = *(_QWORD *)v36;
    do
    {
      for (j = 0; j != v24; ++j)
      {
        if (*(_QWORD *)v36 != v26)
          objc_enumerationMutation(v22);
        v28 = objc_retainAutorelease(*(id *)(*((_QWORD *)&v35 + 1) + 8 * j));
        (&v20[v25])[j] = (char *const)objc_msgSend(v28, "UTF8String", v33);
      }
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
      v25 += j;
    }
    while (v24);
  }
  else
  {
    v25 = 0;
  }

  v20[v25] = 0;
  v29 = *v10;
  if (objc_msgSend(v22, "count"))
    v30 = v20;
  else
    v30 = 0;
  v31 = posix_spawn(0, v29, 0, 0, v10, v30);

  return v31;
}

uint64_t AXPidForLaunchLabel(void *a1)
{
  id v1;
  _launch_data *v2;
  id v3;
  uint64_t v4;
  _launch_data *v5;
  _launch_data *v6;
  _launch_data *v7;
  _launch_data *v8;
  uint64_t v9;

  v1 = a1;
  v2 = launch_data_alloc(LAUNCH_DATA_DICTIONARY);
  v3 = objc_retainAutorelease(v1);
  v4 = objc_msgSend(v3, "UTF8String");

  v5 = (_launch_data *)MEMORY[0x193FF9DB4](v4);
  launch_data_dict_insert(v2, v5, "GetJob");
  v6 = launch_msg(v2);
  MEMORY[0x193FF9D90](v2);
  if (!v6)
    return 0xFFFFFFFFLL;
  if (launch_data_get_type(v6) == LAUNCH_DATA_DICTIONARY
    && (v7 = launch_data_dict_lookup(v6, "PID")) != 0
    && (v8 = v7, launch_data_get_type(v7) == LAUNCH_DATA_INTEGER))
  {
    v9 = MEMORY[0x193FF9D9C](v8);
  }
  else
  {
    v9 = 0xFFFFFFFFLL;
  }
  MEMORY[0x193FF9D90](v6);
  return v9;
}

BOOL AXIsBuddyCompleted()
{
  return CFPreferencesGetAppBooleanValue(CFSTR("SetupDone"), CFSTR("com.apple.purplebuddy"), 0)
      || CFPreferencesGetAppBooleanValue(CFSTR("ForceNoBuddy"), CFSTR("com.apple.purplebuddy"), 0) != 0;
}

void AXLoadAccessibilityDebuggerIfNeeded()
{
  void *v0;
  int v1;
  void *v2;
  void *v3;
  char v4;
  id v5;
  void *v6;
  id v7;

  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1)
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_214);
  if (AXIsInternalInstall__AXIsInternalInstall)
  {
    if (AXProcessIsBackboard_Once != -1)
      dispatch_once(&AXProcessIsBackboard_Once, &__block_literal_global_176);
    if ((AXProcessIsBackboard__AXProcessIsBackboard & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v0 = (void *)objc_claimAutoreleasedReturnValue();
      v1 = objc_msgSend(v0, "fileExistsAtPath:", CFSTR("/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework"));

      if (v1)
      {
        objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithPath:", CFSTR("/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework"));
        v2 = (void *)objc_claimAutoreleasedReturnValue();
        v3 = v2;
        if (v2 && (objc_msgSend(v2, "isLoaded") & 1) == 0)
        {
          v7 = 0;
          v4 = objc_msgSend(v3, "loadAndReturnError:", &v7);
          v5 = v7;
          if ((v4 & 1) != 0)
          {
            objc_msgSend(v3, "principalClass");
            v6 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_opt_respondsToSelector() & 1) != 0)
              objc_msgSend(v6, "performSelector:", sel_target);
            else
              _AXLogWithFacility(0, 0, 1, 0, 0, 0, 0, 0.0, 0, 1, CFSTR("Principal class :%@. does not respond to expected 'target' class method"));

          }
          else
          {
            _AXLogWithFacility(0, 0, 1, 0, 0, 0, 0, 0.0, 0, 1, CFSTR("Error: Unable to load AccessibilityDebuggerTarget framework: %@ "));
          }

        }
      }
    }
  }
}

uint64_t AXIsLookingGlassAvailable()
{
  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1)
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_214);
  return AXIsInternalInstall__AXIsInternalInstall;
}

unint64_t AXMachTimeToNanoseconds(unint64_t a1)
{
  if (AXMachTimeToNanoseconds_onceToken != -1)
    dispatch_once(&AXMachTimeToNanoseconds_onceToken, &__block_literal_global_250);
  return (unint64_t)(*(double *)&AXMachTimeToNanoseconds_scale * (double)a1);
}

id AXInstalledAppIDs(int a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_new();
  AXInstalledApps(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v7), "bundleIdentifier");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v5);
  }

  return v2;
}

id AXInstalledApps(int a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v15;
  void *v16;
  void *v17;
  void *v19;

  objc_msgSend(MEMORY[0x1E0CA5868], "enumeratorWithOptions:", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (void *)objc_opt_new();
  objc_msgSend(v1, "nextObject");
  v2 = objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)v2;
    do
    {
      objc_msgSend(v3, "URL");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "pathComponents");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v3, "infoDictionary");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectForKey:ofClass:", CFSTR("SBIconVisibilityDefaultVisible"), objc_opt_class());
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0
        && (objc_msgSend(v5, "containsObject:", CFSTR("AppleInternal")) & 1) == 0
        && (objc_msgSend(v5, "containsObject:", CFSTR("CoreServices")) & 1) == 0
        && (objc_msgSend(v3, "isLaunchProhibited") & 1) == 0)
      {
        objc_msgSend(v3, "appTags");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v8, "containsObject:", CFSTR("hidden")))
        {
          objc_msgSend(v3, "appTags");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v9, "containsObject:", CFSTR("Hidden")) & 1) == 0
            && (!v7 || objc_msgSend(v7, "BOOLValue")))
          {
            objc_msgSend(v3, "bundleIdentifier");
            v10 = objc_claimAutoreleasedReturnValue();
            if (v10)
            {
              v16 = (void *)v10;
              objc_msgSend(v3, "bundleIdentifier");
              v11 = objc_claimAutoreleasedReturnValue();
              v17 = (void *)v11;
              if (AXShowInstalledApp_onceToken == -1)
              {
                v12 = (void *)v11;
              }
              else
              {
                dispatch_once(&AXShowInstalledApp_onceToken, &__block_literal_global_286);
                v12 = v17;
              }
              v15 = objc_msgSend((id)AXShowInstalledApp_AXHiddenApps, "containsObject:", v12);

              if ((v15 & 1) == 0)
                objc_msgSend(v19, "addObject:", v3);
              goto LABEL_18;
            }
          }

        }
      }
LABEL_18:

      objc_msgSend(v1, "nextObject");
      v13 = objc_claimAutoreleasedReturnValue();

      v3 = (void *)v13;
    }
    while (v13);
  }
  if (a1)
    objc_msgSend(v19, "sortUsingComparator:", &__block_literal_global_269);

  return v19;
}

id AXAppNameForBundleId(void *a1)
{
  id v1;
  __CFString *v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v8;

  v1 = a1;
  if (objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.springboard")))
  {
    v2 = CFSTR("HOME_SCREEN");
LABEL_5:
    soft_AXSettingsLocalizedStringForKey(v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_11;
  }
  if (objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.UIKit.activity.AirDrop")))
  {
    v2 = CFSTR("AIRDROP");
    goto LABEL_5;
  }
  v8 = 0;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5868]), "initWithBundleIdentifier:allowPlaceholder:error:", v1, 0, &v8);
  v5 = v8;
  if (v5)
  {
    AXLogSettings();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      AXAppNameForBundleId_cold_1(v5);

  }
  objc_msgSend(v4, "localizedName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_11:
  return v3;
}

id soft_AXSettingsLocalizedStringForKey(void *a1)
{
  id v1;
  void (*v2)(id);
  void *v3;
  _Unwind_Exception *v5;
  _Unwind_Exception *v6;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v1 = a1;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = (void (*)(id))getAXSettingsLocalizedStringForKeySymbolLoc_ptr;
  v11 = getAXSettingsLocalizedStringForKeySymbolLoc_ptr;
  if (!getAXSettingsLocalizedStringForKeySymbolLoc_ptr)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke;
    v7[3] = &unk_1E28C1CB0;
    v7[4] = &v8;
    __getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke((uint64_t)v7);
    v2 = (void (*)(id))v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    v6 = v5;
    _Block_object_dispose(&v8, 8);
    _Unwind_Resume(v6);
  }
  v2(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t AXIsHiddenAppWithBundleId(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  id v7;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.springboard")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.UIKit.activity.AirDrop")) & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v7 = 0;
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5868]), "initWithBundleIdentifier:allowPlaceholder:error:", v1, 0, &v7);
    v4 = v7;
    if (v4)
    {
      AXLogSettings();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        AXIsHiddenAppWithBundleId_cold_1(v4);

    }
    v2 = objc_msgSend(v3, "appProtectionHidden");

  }
  return v2;
}

id AXWatchAppNameForBundleId(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1;
  AXAppNameForBundleId(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    if (getCSLPRFApplicationLibraryClass())
    {
      objc_msgSend(getCSLPRFApplicationLibraryClass(), "sharedLibraryForLocation:", 0);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "applicationWithBundleIdentifier:", v1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v4, "localizedName");
      v2 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v2 = 0;
    }
  }

  return v2;
}

id getCSLPRFApplicationLibraryClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCSLPRFApplicationLibraryClass_softClass;
  v7 = getCSLPRFApplicationLibraryClass_softClass;
  if (!getCSLPRFApplicationLibraryClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCSLPRFApplicationLibraryClass_block_invoke;
    v3[3] = &unk_1E28C1CB0;
    v3[4] = &v4;
    __getCSLPRFApplicationLibraryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EBF5580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void AXRGBToHSB(long double *a1, double *a2, double *a3, double a4, double a5, double a6)
{
  double v8;
  double v9;
  BOOL v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  BOOL v17;
  double v18;

  if (a4 < a5 || a4 < a6)
  {
    if (a5 >= a4)
      v8 = a4;
    else
      v8 = a5;
    if (a4 >= a6)
      v9 = a6;
    else
      v9 = a4;
    v10 = a5 < a4 || a5 < a6;
    if (v10)
      v11 = a6;
    else
      v11 = a5;
    if (v10)
      v9 = v8;
  }
  else
  {
    if (a5 >= a6)
      v9 = a6;
    else
      v9 = a5;
    v11 = a4;
  }
  v12 = 0.0;
  if (v11 <= 0.0)
  {
    v14 = 0.0;
  }
  else
  {
    v13 = v11 - v9;
    v14 = (v11 - v9) / v11;
    if (v14 != 0.0)
    {
      v15 = (v11 - a5) / v13;
      v16 = (v11 - a6) / v13;
      if (v11 == a4)
      {
        if (v9 == a5)
          v12 = v16 + 5.0;
        else
          v12 = 1.0 - v15;
      }
      else
      {
        v17 = v11 == a5;
        v18 = (v11 - a4) / v13;
        if (v17)
        {
          if (v9 == a6)
            v12 = v18 + 1.0;
          else
            v12 = 3.0 - v16;
        }
        else if (v9 == a4)
        {
          v12 = v15 + 3.0;
        }
        else
        {
          v12 = 5.0 - v18;
        }
      }
    }
  }
  *a3 = v11;
  *a1 = fmod(v12 / 6.0, 1.0);
  *a2 = v14;
}

uint64_t _AXTriggerStackshot()
{
  uint64_t (*v0)(const __CFString *, uint64_t);
  uint64_t result;
  void *v2;

  v0 = (uint64_t (*)(const __CFString *, uint64_t))_AXTriggerStackshot___gWriteStackshotReportFunction;
  if (_AXTriggerStackshot___gWriteStackshotReportFunction)
    return v0(CFSTR("Accessibility triggered"), 3131746989);
  result = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport", 1);
  if (result)
  {
    v2 = (void *)result;
    _AXTriggerStackshot___gWriteStackshotReportFunction = dlsym((void *)result, "WriteStackshotReport");
    result = dlclose(v2);
  }
  v0 = (uint64_t (*)(const __CFString *, uint64_t))_AXTriggerStackshot___gWriteStackshotReportFunction;
  if (_AXTriggerStackshot___gWriteStackshotReportFunction)
    return v0(CFSTR("Accessibility triggered"), 3131746989);
  return result;
}

uint64_t AXProcessIsSetup()
{
  if (AXProcessIsSetup_onceToken != -1)
    dispatch_once(&AXProcessIsSetup_onceToken, &__block_literal_global_274);
  return AXProcessIsSetup_AXIsSetupProcess;
}

void *__getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;

  if (VoiceOverServicesLibraryCore_frameworkLibrary)
  {
    v2 = (void *)VoiceOverServicesLibraryCore_frameworkLibrary;
  }
  else
  {
    VoiceOverServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    v2 = (void *)VoiceOverServicesLibraryCore_frameworkLibrary;
    if (!VoiceOverServicesLibraryCore_frameworkLibrary)
    {
      v4 = (void *)abort_report_np();
      free(v4);
    }
  }
  result = dlsym(v2, "AXSettingsLocalizedStringForKey");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getAXSettingsLocalizedStringForKeySymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCSLPRFApplicationLibraryClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!CarouselPreferenceServicesLibraryCore_frameworkLibrary)
  {
    CarouselPreferenceServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!CarouselPreferenceServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("CSLPRFApplicationLibrary");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getCSLPRFApplicationLibraryClass_block_invoke_cold_1();
    free(v3);
  }
  getCSLPRFApplicationLibraryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_18EBF6100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

CGColorRef AXSAssistiveTouchCursorColor(uint64_t a1)
{
  CGColorSpace *DeviceRGB;
  CGColorRef v7;
  CGFloat components;
  int64x2_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  switch(a1)
  {
    case 1:
      components = 0.6;
      _Q0 = vdupq_n_s64(0x3FE3333333333333uLL);
      break;
    case 2:
      components = 1.0;
      __asm { FMOV            V0.2D, #1.0 }
      break;
    case 4:
      components = 1.0;
      _Q0 = (int64x2_t)xmmword_18EC6B440;
      break;
    case 5:
      components = 0.298039216;
      _Q0 = (int64x2_t)xmmword_18EC6B460;
      break;
    case 6:
      components = 1.0;
      _Q0 = (int64x2_t)xmmword_18EC6B450;
      break;
    case 7:
      components = 1.0;
      _Q0 = (int64x2_t)xmmword_18EC6B470;
      break;
    default:
      components = 0.0;
      _Q0 = (int64x2_t)xmmword_18EC6B480;
      break;
  }
  v10 = _Q0;
  v11 = 0x3FF0000000000000;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v7 = CGColorCreate(DeviceRGB, &components);
  CGColorSpaceRelease(DeviceRGB);
  CFAutorelease(v7);
  return v7;
}

CGColorRef AXSpeakHighlightColor(uint64_t a1)
{
  __int128 v1;
  uint64_t v2;
  CGColorSpace *v3;
  CGColorRef v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  switch(a1)
  {
    case 0:
      v6 = 0uLL;
      v7 = 0;
      goto LABEL_10;
    case 1:
      v1 = xmmword_18EC6B490;
      goto LABEL_7;
    case 2:
      v6 = xmmword_18EC6B4C0;
      v2 = 0x3FDADADADADADADBLL;
      goto LABEL_9;
    case 3:
      v6 = xmmword_18EC6B4B0;
      v2 = 0x3FDC9C9C9C9C9C9DLL;
      goto LABEL_9;
    case 4:
      v1 = xmmword_18EC6B4A0;
LABEL_7:
      v6 = v1;
      v2 = 0x3FF0000000000000;
      goto LABEL_9;
    case 5:
      v6 = xmmword_18EC6B4D0;
      v2 = 0x3FE9595959595959;
LABEL_9:
      v7 = v2;
LABEL_10:
      v8 = 0x3FF0000000000000;
      break;
    default:
      break;
  }
  v3 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D960]);
  v4 = CGColorCreate(v3, (const CGFloat *)&v6);
  CGColorSpaceRelease(v3);
  CFAutorelease(v4);
  return v4;
}

const __CFString *AXSCalibrationStrategyName(uint64_t a1)
{
  if (a1)
    return CFSTR("Dual Matrix");
  else
    return CFSTR("Singular Matrix");
}

void AXSLogarithmicValueForLinearValue(float a1)
{
  log10f(fabsf((float)(a1 + -0.5) * 198.0) + 1.0);
}

float AXSLinearValueForLogarithmicValue(float a1)
{
  float v2;
  float v3;

  v2 = fabsf(a1);
  v3 = __exp10f(v2 + v2) + -1.0;
  if (a1 < 0.0)
    v3 = -v3;
  return (float)(v3 / 198.0) + 0.5;
}

float AXSVoiceOverTapticChimesVolumeForSoundType(uint64_t a1)
{
  float result;

  result = 0.6;
  if (a1 != 2)
    return 1.0;
  return result;
}

uint64_t AXCArrayCreate(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  if (_AXCArrayRegisterClass__AXCArrayRegisterClassToken != -1)
    dispatch_once(&_AXCArrayRegisterClass__AXCArrayRegisterClassToken, &__block_literal_global_1);
  result = _CFRuntimeCreateInstance();
  if (result)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_QWORD *)(result + 24) = a1;
    if (a2 <= 1)
      v5 = 1;
    else
      v5 = a2;
    *(_QWORD *)(result + 48) = v5;
  }
  return result;
}

uint64_t AXCArrayGetTypeID()
{
  if (_AXCArrayRegisterClass__AXCArrayRegisterClassToken != -1)
    dispatch_once(&_AXCArrayRegisterClass__AXCArrayRegisterClassToken, &__block_literal_global_1);
  return _AXCArrayTypeID;
}

uint64_t AXCArrayCreateWithCoder(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t (**v9)(void *, const __CFString *);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v17[4];
  id v18;
  uint64_t *v19;
  _QWORD v20[4];
  id v21;
  id v22;
  _QWORD aBlock[4];
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2;
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __AXCArrayCreateWithCoder_block_invoke;
  aBlock[3] = &unk_1E28C2898;
  v6 = v4;
  v24 = v6;
  v20[0] = v5;
  v20[1] = 3221225472;
  v20[2] = __AXCArrayCreateWithCoder_block_invoke_2;
  v20[3] = &unk_1E28C28E8;
  v7 = _Block_copy(aBlock);
  v22 = v7;
  v8 = v3;
  v21 = v8;
  v9 = (uint64_t (**)(void *, const __CFString *))_Block_copy(v20);
  v10 = v9[2](v9, CFSTR("AXCArrayArchivingKeyElementSize"));
  v11 = v9[2](v9, CFSTR("AXCArrayArchivingKeyInitialCapacity"));
  if (v10)
  {
    v12 = AXCArrayCreate(v10, v11);
    v26[3] = v12;
    if (v12)
    {
      v17[0] = v5;
      v17[1] = 3221225472;
      v17[2] = __AXCArrayCreateWithCoder_block_invoke_4;
      v17[3] = &unk_1E28C2910;
      v18 = v8;
      v19 = &v25;
      (*((void (**)(void *, const __CFString *, _QWORD *))v7 + 2))(v7, CFSTR("AXCArrayArchivingKeyArray"), v17);
      if (v26[3])
      {
        v13 = v9[2](v9, CFSTR("AXCArrayArchivingKeyCursor"));
        v14 = (_QWORD *)v26[3];
        v14[4] = v13;
        v14[5] = v13;
        if (v13)
        {
          if (!v14[2])
          {
            CFRelease(v14);
            v26[3] = 0;
          }
        }
      }

    }
  }
  v15 = v26[3];

  _Block_object_dispose(&v25, 8);
  return v15;
}

void sub_18EBF6890(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18EBF69F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void AXCArrayEncodeWithCoder(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void (**v9)(void *, const __CFString *, _QWORD *);
  id v10;
  void (**v11)(void *, const __CFString *, _QWORD *);
  void (**v12)(void *, _QWORD, const __CFString *);
  _QWORD v13[4];
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  _QWORD *v18;
  _QWORD aBlock[4];
  id v20;

  v5 = a2;
  v6 = a3;
  v7 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __AXCArrayEncodeWithCoder_block_invoke;
  aBlock[3] = &unk_1E28C2898;
  v8 = v6;
  v20 = v8;
  v9 = (void (**)(void *, const __CFString *, _QWORD *))_Block_copy(aBlock);
  if (a1[2])
  {
    v16[0] = v7;
    v16[1] = 3221225472;
    v16[2] = __AXCArrayEncodeWithCoder_block_invoke_2;
    v16[3] = &unk_1E28C2938;
    v17 = v5;
    v18 = a1;
    v9[2](v9, CFSTR("AXCArrayArchivingKeyArray"), v16);

  }
  v13[0] = v7;
  v13[1] = 3221225472;
  v13[2] = __AXCArrayEncodeWithCoder_block_invoke_3;
  v13[3] = &unk_1E28C2960;
  v14 = v5;
  v15 = v9;
  v10 = v5;
  v11 = v9;
  v12 = (void (**)(void *, _QWORD, const __CFString *))_Block_copy(v13);
  v12[2](v12, a1[3], CFSTR("AXCArrayArchivingKeyElementSize"));
  v12[2](v12, a1[4], CFSTR("AXCArrayArchivingKeyCursor"));
  v12[2](v12, a1[6], CFSTR("AXCArrayArchivingKeyInitialCapacity"));

}

uint64_t _AXCArrayGetUnderlyingArray(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

BOOL _AXCArrayPrepareForInsertingElementAtIndex(_QWORD *a1, unint64_t a2)
{
  unint64_t v4;
  _BOOL8 v5;
  void *v6;
  uint64_t v7;

  v4 = a1[5];
  if (v4 <= a2)
  {
    v6 = (void *)a1[2];
    do
    {
      v7 = a1[3];
      if (v6)
      {
        v4 *= 2;
        v6 = malloc_type_realloc(v6, v7 * v4, 0x4A33D6CEuLL);
      }
      else
      {
        v4 = a1[6];
        v6 = malloc_type_malloc(v7 * v4, 0xEDB1FB56uLL);
      }
      v5 = v6 != 0;
      if (!v6)
        break;
      a1[2] = v6;
      a1[5] = v4;
    }
    while (v4 <= a2);
  }
  else
  {
    v5 = 1;
  }
  if (a1[4] <= a2)
    a1[4] = a2 + 1;
  return v5;
}

uint64_t AXCArrayGetCount(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t AXCArrayRemoveAllElements(uint64_t result)
{
  *(_QWORD *)(result + 32) = 0;
  return result;
}

void AXCArraySort(uint64_t a1, void *__compar)
{
  qsort_b(*(void **)(a1 + 16), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 24), __compar);
}

void _AXCArrayDestroy(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 16);
  if (v1)
    free(v1);
}

void sub_18EBF798C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

id AXGuaranteedMutableArray(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v1, "allObjects");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v1, "array");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
          goto LABEL_11;
        objc_msgSend(v1, "allKeys");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
      }
    }
    v4 = v3;
    v2 = (void *)objc_msgSend(v3, "mutableCopy");

    if (v2)
      goto LABEL_12;
LABEL_11:
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_12;
  }
  v2 = (void *)objc_msgSend(v1, "mutableCopy");
  if (!v2)
    goto LABEL_11;
LABEL_12:

  return v2;
}

uint64_t AXRuntimeCheck_HasANE()
{
  if (AXRuntimeCheck_HasANE_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
  return AXRuntimeCheck_HasANE__hasANE;
}

id get_ANEDeviceInfoClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)get_ANEDeviceInfoClass_softClass;
  v7 = get_ANEDeviceInfoClass_softClass;
  if (!get_ANEDeviceInfoClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __get_ANEDeviceInfoClass_block_invoke;
    v3[3] = &unk_1E28C1CB0;
    v3[4] = &v4;
    __get_ANEDeviceInfoClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EBF8670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t AXRuntimeCheck_isANEDeviceH13plus()
{
  if (AXRuntimeCheck_isANEDeviceH13plus_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_isANEDeviceH13plus_onceToken, &__block_literal_global_1);
  return AXRuntimeCheck_isANEDeviceH13plus_isANEH13plus;
}

uint64_t AXRuntimeCheck_SupportsMedina()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1)
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_3);
  return AXRuntimeCheck_SupportsMedina__supportsMedina;
}

uint64_t AXRuntimeCheck_SupportsNearbyDeviceControl()
{
  uint64_t result;

  result = _os_feature_enabled_impl();
  if ((_DWORD)result)
    return AXDeviceIsPhone() || AXDeviceIsPod() || AXDeviceIsWatch();
  return result;
}

uint64_t AXRuntimeCheck_SupportsMacAXV2()
{
  if (AXRuntimeCheck_SupportsMacAXV2_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_SupportsMacAXV2_onceToken, &__block_literal_global_8);
  return AXRuntimeCheck_SupportsMacAXV2__supportsMacAXV2;
}

uint64_t AXRuntimeCheck_VoiceOverSupportsNeuralVoices()
{
  if (AXRuntimeCheck_VoiceOverSupportsNeuralVoices_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_VoiceOverSupportsNeuralVoices_onceToken, &__block_literal_global_10);
  return AXRuntimeCheck_VoiceOverSupportsNeuralVoices__supportsMacAXV2;
}

BOOL AXRuntimeCheck_MauiSSE()
{
  if (AXRuntimeCheck_MauiSSE_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_MauiSSE_onceToken, &__block_literal_global_12);
  if (AXRuntimeCheck_MauiSSE__mauiSSE)
    return 1;
  if (AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly != -1)
    dispatch_once(&AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly, &__block_literal_global_16);
  return AXRuntimeCheck_MauiSSEOnly__ffEnabled_MauiSSEOnly != 0;
}

uint64_t AXRuntimeCheck_PerVoiceSettings()
{
  if (AXRuntimeCheck_PerVoiceSettings_onceToken_PerVoiceSettings != -1)
    dispatch_once(&AXRuntimeCheck_PerVoiceSettings_onceToken_PerVoiceSettings, &__block_literal_global_14);
  return AXRuntimeCheck_PerVoiceSettings__ffEnabled_PerVoiceSettings;
}

uint64_t AXRuntimeCheck_SiriSSEOnly()
{
  if (AXRuntimeCheck_SiriSSEOnly_onceToken_SiriSSEOnly != -1)
    dispatch_once(&AXRuntimeCheck_SiriSSEOnly_onceToken_SiriSSEOnly, &__block_literal_global_18);
  return AXRuntimeCheck_SiriSSEOnly__ffEnabled_SiriSSEOnly;
}

uint64_t AXRuntimeCheck_SpeakUp()
{
  if (AXRuntimeCheck_SpeakUp_onceToken_SpeakUp != -1)
    dispatch_once(&AXRuntimeCheck_SpeakUp_onceToken_SpeakUp, &__block_literal_global_20);
  return AXRuntimeCheck_SpeakUp__ffEnabled_SpeakUp;
}

uint64_t AXRuntimeCheck_MediaAnalysisSupport()
{
  if (AXRuntimeCheck_MediaAnalysisSupport_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_MediaAnalysisSupport_onceToken, &__block_literal_global_22);
  return AXRuntimeCheck_MediaAnalysisSupport__supportsMediaAnalysisServices;
}

uint64_t AXRuntimeCheck_ScreenRecognitionSupport()
{
  if (AXRuntimeCheck_ScreenRecognitionSupport_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_ScreenRecognitionSupport_onceToken, &__block_literal_global_24);
  return AXRuntimeCheck_ScreenRecognitionSupport__supportsScreenRecognition;
}

uint64_t AXRuntimeCheck_SupportsFocusEverywhere()
{
  return 0;
}

uint64_t AXRuntimeCheck_SupportsOnDeviceEyeTracking()
{
  if (AXRuntimeCheck_isANEDeviceH13plus_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_isANEDeviceH13plus_onceToken, &__block_literal_global_1);
  if (AXRuntimeCheck_isANEDeviceH13plus_isANEH13plus)
    return _os_feature_enabled_impl();
  else
    return 0;
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaSupportEnabled()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1)
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_3);
  if (AXRuntimeCheck_SupportsMedina__supportsMedina)
    return _os_feature_enabled_impl();
  else
    return 0;
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaKShotEnrollmentEnabled()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1)
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_3);
  if (AXRuntimeCheck_SupportsMedina__supportsMedina)
    return _os_feature_enabled_impl();
  else
    return 0;
}

uint64_t AXRuntimeCheck_SupportsIncreaseBrightnessFloor()
{
  if (AXRuntimeCheck_SupportsIncreaseBrightnessFloor_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_SupportsIncreaseBrightnessFloor_onceToken, &__block_literal_global_33);
  return AXRuntimeCheck_SupportsIncreaseBrightnessFloor__supportsIncreaseBrightnessFloor;
}

uint64_t AXRuntimeCheck_SupportsDoseAnalysis()
{
  if (AXRuntimeCheck_SupportsDoseAnalysis_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_SupportsDoseAnalysis_onceToken, &__block_literal_global_35);
  return AXRuntimeCheck_SupportsDoseAnalysis__supportsDoseAnalysis;
}

uint64_t AXRuntimeCheck_SupportsVoiceoverIndepedentVolume()
{
  if (AXRuntimeCheck_SupportsVoiceoverIndepedentVolume_onceToken != -1)
    dispatch_once(&AXRuntimeCheck_SupportsVoiceoverIndepedentVolume_onceToken, &__block_literal_global_37);
  return AXRuntimeCheck_SupportsVoiceoverIndepedentVolume__supportsVoiceoverIndepedentVolume;
}

void *__getMGGetBoolAnswerSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v2 = (void *)libMobileGestaltLibraryCore_frameworkLibrary;
  v8 = libMobileGestaltLibraryCore_frameworkLibrary;
  if (!libMobileGestaltLibraryCore_frameworkLibrary)
  {
    v9 = xmmword_1E28C2CB0;
    v10 = 0;
    v2 = (void *)_sl_dlopen();
    v6[3] = (uint64_t)v2;
    libMobileGestaltLibraryCore_frameworkLibrary = (uint64_t)v2;
  }
  _Block_object_dispose(&v5, 8);
  if (!v2)
  {
    v4 = (void *)abort_report_np();
    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "MGGetBoolAnswer");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMGGetBoolAnswerSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18EBF90DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

uint64_t _axSettingsHandlePreferenceChanged(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_handlePreferenceChangedWithNotificationName:");
}

void OUTLINED_FUNCTION_1_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return NSRequestConcreteImplementation();
}

uint64_t AXDeviceIsTallPhoneIdiom()
{
  if (AXDeviceIsTallPhoneIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsTallPhoneIdiom_onceToken, &__block_literal_global_5);
  return AXDeviceIsTallPhoneIdiom_isTallBoy;
}

uint64_t soft_MGGetSInt32Answer()
{
  void *v0;
  void *v1;
  _Unwind_Exception *v3;
  _Unwind_Exception *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = getMGGetSInt32AnswerSymbolLoc_ptr;
  v8 = getMGGetSInt32AnswerSymbolLoc_ptr;
  if (!getMGGetSInt32AnswerSymbolLoc_ptr)
  {
    v1 = (void *)libMobileGestaltLibrary();
    v0 = dlsym(v1, "MGGetSInt32Answer");
    v6[3] = (uint64_t)v0;
    getMGGetSInt32AnswerSymbolLoc_ptr = v0;
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    v4 = v3;
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  return ((uint64_t (*)(const __CFString *, uint64_t))v0)(CFSTR("main-screen-class"), 0xFFFFFFFFLL);
}

uint64_t AXDeviceIsSmallPhoneIdiom()
{
  if (AXDeviceIsSmallPhoneIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsSmallPhoneIdiom_onceToken, &__block_literal_global_2);
  return AXDeviceIsSmallPhoneIdiom_isSmall;
}

uint64_t AXDeviceIsPadMiniIdiom()
{
  if (AXDeviceIsPadMiniIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsPadMiniIdiom_onceToken, &__block_literal_global_3_0);
  return AXDeviceIsPadMiniIdiom_isIpadMini;
}

uint64_t AXDeviceIsBigPadIdiom()
{
  if (AXDeviceIsBigPadIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsBigPadIdiom_onceToken, &__block_literal_global_4);
  return AXDeviceIsBigPadIdiom_isBigPad;
}

uint64_t AXDeviceIsSmallWatchIdiom()
{
  if (AXDeviceIsSmallWatchIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsSmallWatchIdiom_onceToken, &__block_literal_global_5);
  return 0;
}

uint64_t AXDeviceIsBigWatchIdiom()
{
  if (AXDeviceIsBigWatchIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsBigWatchIdiom_onceToken, &__block_literal_global_6);
  return 0;
}

uint64_t AXDeviceIsPhoneIdiom()
{
  if (AXDeviceIsPhoneIdiom_onceToken != -1)
    dispatch_once(&AXDeviceIsPhoneIdiom_onceToken, &__block_literal_global_7);
  return AXDeviceIsPhoneIdiom_isPhoneIdiom;
}

BOOL AXDeviceIsRealityDevice()
{
  return AXDeviceGetType() == 7;
}

BOOL AXDeviceIsTV()
{
  return AXDeviceGetType() == 4;
}

uint64_t AXDeviceIsD22()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = -337121064;
  v3 = xmmword_18EC6B84C;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = 450980336;
  v1 = xmmword_18EC6B860;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t soft_MGIsDeviceOfType(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  _Unwind_Exception *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;

  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v2 = getMGIsDeviceOfTypeSymbolLoc_ptr;
  v10 = getMGIsDeviceOfTypeSymbolLoc_ptr;
  if (!getMGIsDeviceOfTypeSymbolLoc_ptr)
  {
    v3 = (void *)libMobileGestaltLibrary();
    v2 = dlsym(v3, "MGIsDeviceOfType");
    v8[3] = (uint64_t)v2;
    getMGIsDeviceOfTypeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    v6 = v5;
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t AXDeviceIsD42()
{
  __int128 v1;
  int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = -61007701;
  v1 = xmmword_18EC6B874;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD32()
{
  __int128 v1;
  int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = -232427879;
  v1 = xmmword_18EC6B888;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD43()
{
  __int128 v1;
  int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = -235416490;
  v1 = xmmword_18EC6B89C;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD33()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = -427474227;
  v3 = xmmword_18EC6B8B0;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = 1477534141;
  v1 = xmmword_18EC6B8C4;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD7x()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = -1820426635;
  v3 = xmmword_18EC6B8D8;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = -937652876;
  v1 = xmmword_18EC6B8EC;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD2y()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = 533419158;
  v3 = xmmword_18EC6B900;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = 1106979518;
  v1 = xmmword_18EC6B914;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsJ3XX()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  __int128 v5;
  int v6;
  __int128 v7;
  int v8;
  __int128 v9;
  int v10;
  __int128 v11;
  int v12;
  __int128 v13;
  int v14;
  __int128 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v16 = 2030516999;
  v15 = xmmword_18EC6B928;
  if ((soft_MGIsDeviceOfType((uint64_t)&v15) & 1) != 0)
    return 1;
  v14 = -1276010597;
  v13 = xmmword_18EC6B93C;
  if ((soft_MGIsDeviceOfType((uint64_t)&v13) & 1) != 0)
    return 1;
  v12 = -762483149;
  v11 = xmmword_18EC6B950;
  if ((soft_MGIsDeviceOfType((uint64_t)&v11) & 1) != 0)
    return 1;
  v10 = -1926937532;
  v9 = xmmword_18EC6B964;
  if ((soft_MGIsDeviceOfType((uint64_t)&v9) & 1) != 0)
    return 1;
  v8 = -1902732724;
  v7 = xmmword_18EC6B978;
  if ((soft_MGIsDeviceOfType((uint64_t)&v7) & 1) != 0)
    return 1;
  v6 = -342357580;
  v5 = xmmword_18EC6B98C;
  if ((soft_MGIsDeviceOfType((uint64_t)&v5) & 1) != 0)
    return 1;
  v4 = 300442574;
  v3 = xmmword_18EC6B9A0;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = -1294188889;
  v1 = xmmword_18EC6B9B4;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsJ42()
{
  __int128 v1;
  int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = 1839812531;
  v1 = xmmword_18EC6B9C8;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceSupportsSiri()
{
  return soft_MGGetBoolAnswer((uint64_t)CFSTR("assistant"));
}

uint64_t soft_MGGetBoolAnswer(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  _Unwind_Exception *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;

  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v2 = getMGGetBoolAnswerSymbolLoc_ptr_0;
  v10 = getMGGetBoolAnswerSymbolLoc_ptr_0;
  if (!getMGGetBoolAnswerSymbolLoc_ptr_0)
  {
    v3 = (void *)libMobileGestaltLibrary();
    v2 = dlsym(v3, "MGGetBoolAnswer");
    v8[3] = (uint64_t)v2;
    getMGGetBoolAnswerSymbolLoc_ptr_0 = v2;
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    v6 = v5;
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

BOOL AXDeviceHasJindo()
{
  void *v0;
  void *v1;
  char v2;

  objc_msgSend(MEMORY[0x1E0CB3898], "processInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "processName");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("backboardd"));

  if ((v2 & 1) != 0)
    return 0;
  if (AXDeviceHasJindo_onceToken != -1)
    dispatch_once(&AXDeviceHasJindo_onceToken, &__block_literal_global_31);
  return AXDeviceHasJindo_HasJindo != 0;
}

uint64_t AXDeviceHasStaccato()
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = 1874287171;
  v3 = xmmword_18EC6B9DC;
  if ((soft_MGIsDeviceOfType((uint64_t)&v3) & 1) != 0)
    return 1;
  v2 = -781324731;
  v1 = xmmword_18EC6B9F0;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t _AXDeviceIsVoicebankingAllowedForLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char isKindOfClass;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  int v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("group.com.apple.accessibility.voicebanking"));
  objc_msgSend(v2, "objectForKey:", CFSTR("ServerConfiguration"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  AXTTSLogVoiceBank();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if ((isKindOfClass & 1) == 0)
  {
    if (v6)
    {
      v11 = 138412290;
      v12 = v1;
      _os_log_impl(&dword_18EBEC000, v5, OS_LOG_TYPE_DEFAULT, "No ServerConfig was found for voicebanking. Assuming IsAllowed=1 for ID=%@", (uint8_t *)&v11, 0xCu);
    }
    goto LABEL_11;
  }
  if (v6)
  {
    LOWORD(v11) = 0;
    _os_log_impl(&dword_18EBEC000, v5, OS_LOG_TYPE_DEFAULT, "ServerConfig was found for voicebanking", (uint8_t *)&v11, 2u);
  }

  objc_msgSend(v3, "objectForKeyedSubscript:", v1);
  v5 = objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_11:
    v9 = 1;
    goto LABEL_14;
  }
  -[NSObject objectForKeyedSubscript:](v5, "objectForKeyedSubscript:", CFSTR("IsAllowed"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  AXTTSLogVoiceBank();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 138412546;
    v12 = v1;
    v13 = 2112;
    v14 = v7;
    _os_log_impl(&dword_18EBEC000, v8, OS_LOG_TYPE_DEFAULT, "voicebanking ServerConfig found for ID=%@. IsAllowed=%@", (uint8_t *)&v11, 0x16u);
  }

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v9 = objc_msgSend(v7, "BOOLValue");
  else
    v9 = 1;

LABEL_14:
  return v9;
}

BOOL AXDeviceSupportsVoiceBankingSpeech()
{
  if (AXDeviceSupportsVoiceBankingSpeech_onceToken != -1)
    dispatch_once(&AXDeviceSupportsVoiceBankingSpeech_onceToken, &__block_literal_global_43);
  return (AXDeviceSupportsVoiceBankingSpeech__AXDeviceSupportsVoiceBankingSpeech & 1) == 0;
}

uint64_t AXDeviceSupportsVoiceBankingTraining()
{
  if (AXDeviceSupportsVoiceBankingTraining_onceToken != -1)
    dispatch_once(&AXDeviceSupportsVoiceBankingTraining_onceToken, &__block_literal_global_50);
  return AXDeviceSupportsVoiceBankingTraining__AXDeviceSupportsVoiceBankingTraining;
}

BOOL AXDeviceSupportsAdaptiveVoiceShortcuts()
{
  if (AXDeviceSupportsAdaptiveVoiceShortcuts_onceToken != -1)
    dispatch_once(&AXDeviceSupportsAdaptiveVoiceShortcuts_onceToken, &__block_literal_global_51);
  return (AXDeviceSupportsAdaptiveVoiceShortcuts__AXDeviceSupportsAdaptiveVoiceShortcuts & 1) == 0;
}

uint64_t AXDeviceSupportsOnDeviceEyeTracking()
{
  if (AXDeviceSupportsOnDeviceEyeTracking_onceToken != -1)
    dispatch_once(&AXDeviceSupportsOnDeviceEyeTracking_onceToken, &__block_literal_global_53);
  return AXDeviceSupportsOnDeviceEyeTracking__AXDeviceSupportsOnDeviceEyeTracking;
}

uint64_t AXDeviceIsN301()
{
  return 0;
}

uint64_t AXDeviceSupportsLiveSpeechCategory()
{
  return _os_feature_enabled_impl();
}

uint64_t libMobileGestaltLibrary()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = libMobileGestaltLibraryCore_frameworkLibrary_0;
  v6 = libMobileGestaltLibraryCore_frameworkLibrary_0;
  if (!libMobileGestaltLibraryCore_frameworkLibrary_0)
  {
    v7 = xmmword_1E28C3020;
    v8 = 0;
    v0 = _sl_dlopen();
    v4[3] = v0;
    libMobileGestaltLibraryCore_frameworkLibrary_0 = v0;
  }
  _Block_object_dispose(&v3, 8);
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    __break(1u);
    free(v2);
  }
  return v0;
}

void sub_18EBFB510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getSBUIIsSystemApertureEnabledSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;

  if (SpringBoardUIServicesLibraryCore_frameworkLibrary)
  {
    v2 = (void *)SpringBoardUIServicesLibraryCore_frameworkLibrary;
  }
  else
  {
    SpringBoardUIServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    v2 = (void *)SpringBoardUIServicesLibraryCore_frameworkLibrary;
    if (!SpringBoardUIServicesLibraryCore_frameworkLibrary)
    {
      v4 = (void *)abort_report_np();
      free(v4);
    }
  }
  result = dlsym(v2, "SBUIIsSystemApertureEnabled");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getSBUIIsSystemApertureEnabledSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void UIAXAppendValidationError(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;

  v1 = a1;
  if (!UIAXAppendValidationError_ValidationErrors)
  {
    v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v3 = (void *)UIAXAppendValidationError_ValidationErrors;
    UIAXAppendValidationError_ValidationErrors = (uint64_t)v2;

    AXPerformBlockOnMainThreadAfterDelay(&__block_literal_global_6, 0.1);
  }
  objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectAtIndex:", 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "rangeOfString:", CFSTR("_installSafeCategoryOnClassNamed")) != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v4, "objectAtIndex:", 4);
    v6 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v6;
  }
  AXLogValidations();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    UIAXAppendValidationError_cold_1((uint64_t)v1, (uint64_t)v5, v7);

  objc_msgSend((id)UIAXAppendValidationError_ValidationErrors, "addObject:", v1);
}

uint64_t AXShouldCrashOnValidationErrors()
{
  return 0;
}

uint64_t AXPerformValidationChecks()
{
  if (AXPerformValidationChecks_onceToken != -1)
    dispatch_once(&AXPerformValidationChecks_onceToken, &__block_literal_global_8_0);
  return AXPerformValidationChecks_CachedSetting;
}

id getAXSettingsClass_0()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAXSettingsClass_softClass_0;
  v7 = getAXSettingsClass_softClass_0;
  if (!getAXSettingsClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke_0;
    v3[3] = &unk_1E28C1CB0;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EBFB8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t AXShouldLogValidationErrors()
{
  uint64_t result;

  result = AXIsInternalInstall();
  if ((_DWORD)result)
  {
    if (AXPerformValidationChecks_onceToken != -1)
      dispatch_once(&AXPerformValidationChecks_onceToken, &__block_literal_global_8_0);
    return AXPerformValidationChecks_CachedSetting != 0;
  }
  return result;
}

uint64_t AXShouldReportValidationErrors()
{
  return 0;
}

Class __getAXSettingsClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_0)
  {
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AXSettings");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getAXSettingsClass_block_invoke_cold_1();
    free(v3);
  }
  getAXSettingsClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __UIAccessibilityHandleValidationErrorWithDescription(int a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v11;
  id v12;
  void *v13;
  NSObject *v14;
  int v15;
  uint64_t v16;

  v11 = (objc_class *)MEMORY[0x1E0CB3940];
  v12 = a3;
  v13 = (void *)objc_msgSend([v11 alloc], "initWithFormat:arguments:", v12, &a9);

  if (AXShouldLogValidationErrors())
  {
    AXLogValidations();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      __UIAccessibilityHandleValidationErrorWithDescription_cold_1((uint64_t)v13, v14);

  }
  v15 = a1 ^ 1;
  if (!v13)
    v15 = 1;
  v16 = v15 ^ 1u;
  if ((v15 & 1) == 0 && a2)
  {
    if (__UIAccessibilityHandleValidationErrorWithDescription__UIAccessibilityValidationCrashOnceToken != -1)
      dispatch_once(&__UIAccessibilityHandleValidationErrorWithDescription__UIAccessibilityValidationCrashOnceToken, &__block_literal_global_8);
    v16 = 0;
  }

  return v16;
}

id AXSharedInertMetric()
{
  if (AXSharedInertMetric_onceToken != -1)
    dispatch_once(&AXSharedInertMetric_onceToken, &__block_literal_global_9);
  return (id)AXSharedInertMetric__InertMetric;
}

id AXCUApplicationGetMainBundleIdentifier()
{
  if (AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken != -1)
    dispatch_once(&AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken, &__block_literal_global_10);
  return (id)AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
}

id AXDiagnosticReportsDirectory()
{
  void *v0;
  void *v1;

  AXSystemRootDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("var/mobile/Library/Logs/Accessibility"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id AXInternalAccessibilityBundlesDirectory()
{
  void *v0;
  void *v1;

  AXSystemRootDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("AppleInternal/Library/AccessibilityBundles"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id AXAccessibilityPrivateFrameworksDirectory()
{
  void *v0;
  void *v1;

  AXSystemRootDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("System/Library/PrivateFrameworks/"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id AXVoiceServicesTTSResourcesDirectory()
{
  void *v0;
  void *v1;

  AXSystemRootDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("System/Library/PrivateFrameworks/VoiceServices.framework/TTSResources"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id AXBrailleTablesDirectory()
{
  void *v0;
  void *v1;

  AXSystemRootDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("System/Library/ScreenReader/BrailleTables"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

uint64_t AXProcessIsVoicebankingd()
{
  if (AXProcessIsVoicebankingd_onceToken != -1)
    dispatch_once(&AXProcessIsVoicebankingd_onceToken, &__block_literal_global_26);
  return AXProcessIsVoicebankingd__IsVoicebankingd;
}

uint64_t AXProcessIsAxctl()
{
  if (AXProcessIsAxctl_onceToken != -1)
    dispatch_once(&AXProcessIsAxctl_onceToken, &__block_literal_global_29);
  return AXProcessIsAxctl__IsAxctl;
}

uint64_t AXCUProcessIsAssistiveTouch()
{
  if (AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouchOnceToken != -1)
    dispatch_once(&AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouchOnceToken, &__block_literal_global_32);
  return AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouch;
}

uint64_t AXCUProcessIsMagnifierAngel()
{
  if (AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngelOnceToken != -1)
    dispatch_once(&AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngelOnceToken, &__block_literal_global_33_0);
  return AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngel;
}

uint64_t AXProcessIsLiveSpeech()
{
  if (AXCUProcessIsAXUIServer_onceToken != -1)
    dispatch_once(&AXCUProcessIsAXUIServer_onceToken, &__block_literal_global_34);
  return AXCUProcessIsAXUIServer__IsAXUIServer;
}

uint64_t AXProcessMacOSSettingsExtension()
{
  return 0;
}

uint64_t AXCUProcessIsPreferences()
{
  if (AXCUProcessIsPreferences_token != -1)
    dispatch_once(&AXCUProcessIsPreferences_token, &__block_literal_global_36);
  return AXCUProcessIsPreferences__IsPreferences;
}

uint64_t AXCUProcessIsVoiceOverUtilityApp()
{
  if (AXCUProcessIsVoiceOverUtilityApp_token != -1)
    dispatch_once(&AXCUProcessIsVoiceOverUtilityApp_token, &__block_literal_global_37_0);
  return AXCUProcessIsVoiceOverUtilityApp__IsVoiceOverUtility;
}

void sub_18EBFE180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v15;

  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_18EBFE4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;

  objc_sync_exit(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

BOOL AXDeviceIsPad()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1)
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  return AXDeviceGetType__AXDeviceType == 3;
}

uint64_t AXDeviceGetType()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1)
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  return AXDeviceGetType__AXDeviceType;
}

BOOL AXDeviceIsPhone()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1)
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  return AXDeviceGetType__AXDeviceType == 1;
}

BOOL AXDeviceIsPod()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1)
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  return AXDeviceGetType__AXDeviceType == 2;
}

BOOL AXDeviceIsWatch()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1)
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  return AXDeviceGetType__AXDeviceType == 5;
}

void *__getMGGetSInt32AnswerSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v2 = (void *)libMobileGestaltLibraryCore_frameworkLibrary_1;
  v8 = libMobileGestaltLibraryCore_frameworkLibrary_1;
  if (!libMobileGestaltLibraryCore_frameworkLibrary_1)
  {
    v9 = xmmword_1E28C32F8;
    v10 = 0;
    v2 = (void *)_sl_dlopen();
    v6[3] = (uint64_t)v2;
    libMobileGestaltLibraryCore_frameworkLibrary_1 = (uint64_t)v2;
  }
  _Block_object_dispose(&v5, 8);
  if (!v2)
  {
    v4 = (void *)abort_report_np();
    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "MGGetSInt32Answer");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMGGetSInt32AnswerSymbolLoc_ptr_0 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18EBFEAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void AXImageMonitor_dyld_image_callback()
{
  const char *v0;
  const char *v1;
  size_t v2;
  size_t v3;
  char *v4;
  char *v5;
  NSObject *v6;
  _QWORD block[5];

  v0 = (const char *)dyld_image_path_containing_address();
  if (v0)
  {
    v1 = v0;
    v2 = strlen(v0);
    if (v2)
    {
      v3 = v2 + 1;
      v4 = (char *)malloc_type_malloc(v2 + 1, 0xE1EC3ECCuLL);
      if (v4)
      {
        v5 = v4;
        strlcpy(v4, v1, v3);
        v6 = *(NSObject **)(_Shared + 16);
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = __AXImageMonitor_dyld_image_callback_block_invoke;
        block[3] = &__block_descriptor_40_e5_v8__0l;
        block[4] = v5;
        dispatch_async(v6, block);
      }
    }
  }
}

void *_loadOrderForInfo(void *result, uint64_t a2)
{
  if (result)
  {
    LOWORD(result) = objc_msgSend(result, "unsignedIntegerValue");
  }
  else
  {
    switch(a2)
    {
      case -1:
      case 0:
        LOWORD(result) = AXCodeItemLoadOrderNotApplicable;
        break;
      case 1:
        LOWORD(result) = AXCodeItemLoadOrderDylib;
        break;
      case 2:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
        LOWORD(result) = AXCodeItemLoadOrderBundle;
        break;
      case 3:
        LOWORD(result) = AXCodeItemLoadOrderFramework;
        break;
      case 4:
      case 5:
      case 6:
      case 16:
        LOWORD(result) = AXCodeItemLoadOrderMainProgram;
        break;
      default:
        return (void *)(unsigned __int16)result;
    }
  }
  return (void *)(unsigned __int16)result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_18EC00B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_1_2(uint64_t a1, uint64_t a2)
{
  return a2;
}

void _AXLogWithFacility(int a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, uint64_t a9, char a10, void *a11)
{
  uint64_t v19;
  id v20;
  id v21;

  v19 = _AXLogInitialize__AXLogInitializeOnceToken;
  v20 = a11;
  v21 = a2;
  if (v19 != -1)
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  _AXLogWithFacilityV(a1, v21, a3, a4, a5, a6, a7, a8, 0, a10, v20);

}

void _AXLogWithFacilityV(int a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, uint64_t a9, char a10, void *a11)
{
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  objc_class *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  NSObject *v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  _QWORD block[4];
  id v39;
  uint64_t *v40;
  uint64_t *v41;
  double v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  v18 = a2;
  v19 = a11;
  if (_AXLogInitialize__AXLogInitializeOnceToken != -1)
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  if (a6 && a4 && a10 && a3)
  {
    v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a4);
    objc_msgSend(v20, "lastPathComponent");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("|%@:%lu %s|"), v21, a5, a6);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("%@%@"), v22, v19);

  }
  else
  {
    if (a3)
      v24 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("%@"), v19);
    else
      v24 = v19;
    v23 = v24;
  }
  if ((a7 & 1) != 0)
    goto LABEL_16;
  if (_AXLogShouldIncludeBacktrace_onceToken != -1)
    dispatch_once(&_AXLogShouldIncludeBacktrace_onceToken, &__block_literal_global_30);
  if (_AXLogShouldIncludeBacktrace_IncludeBacktraceInLogs)
  {
LABEL_16:
    v25 = (objc_class *)MEMORY[0x1E0CB3940];
    v26 = v23;
    v27 = [v25 alloc];
    objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(v27, "initWithFormat:", CFSTR("%@\n%@"), v26, v28);

  }
  AXColorizeFormatLog(a1, v23);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = v18;
  v31 = v29;
  AXLoggerForFacility(v30);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  if (a8 <= 0.0)
  {
    v34 = objc_retainAutorelease(v31);
    objc_msgSend(v34, "UTF8String");
    os_log_with_args();
  }
  else
  {
    objc_msgSend((id)_AXLogThresholdCleanupTimer, "cancel");
    objc_msgSend((id)_AXLogThresholdCleanupTimer, "afterDelay:processBlock:", &__block_literal_global_35_1, 15.0);
    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v50 = 0;
    v43 = 0;
    v44 = &v43;
    v45 = 0x2020000000;
    v46 = 0;
    v33 = _AXLogThresholdQueue;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___AXLogWithThreshold_block_invoke_2;
    block[3] = &unk_1E28C3900;
    v34 = v31;
    v39 = v34;
    v40 = &v43;
    v41 = &v47;
    v42 = a8;
    dispatch_sync(v33, block);
    if (*((_BYTE *)v44 + 24))
    {
      if (v48[3])
      {
        v35 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "stringWithFormat:", CFSTR("(repeated %@ times(s)): %@"), v36, v34);
        v37 = objc_claimAutoreleasedReturnValue();

        v34 = (id)v37;
      }
      v34 = objc_retainAutorelease(v34);
      objc_msgSend(v34, "UTF8String");
      os_log_with_args();
    }

    _Block_object_dispose(&v43, 8);
    _Block_object_dispose(&v47, 8);
  }

}

void sub_18EC04014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

id AXColorizeFormatLog(int a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = a2;
  +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (a1 == 3)
  {
    objc_msgSend(v4, "debugString:", v3);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  else if (a1 == 1)
  {
    objc_msgSend(v4, "warningString:", v3);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a1)
      objc_msgSend(v4, "infoString:", v3);
    else
      objc_msgSend(v4, "errorString:", v3);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  v7 = (void *)v6;

  return v7;
}

uint64_t AXOSLogLevelFromAXLogLevel(unsigned int a1)
{
  unsigned int v1;

  v1 = 0x2010010u >> (8 * a1);
  if (a1 >= 4)
    LOBYTE(v1) = 0;
  return v1;
}

id _AXStringForArgs(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  const __CFString *v11;
  void *v12;
  const __CFString *v13;
  void *v14;
  void *v15;

  objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("%{public}@"), CFSTR("%@"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stringByReplacingOccurrencesOfString:withString:", CFSTR("%{public}s"), CFSTR("%s"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (AXIsInternalInstall())
    v11 = CFSTR("%@");
  else
    v11 = CFSTR("{redacted}");
  objc_msgSend(v10, "stringByReplacingOccurrencesOfString:withString:", CFSTR("%{private}@"), v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (AXIsInternalInstall())
    v13 = CFSTR("%s");
  else
    v13 = CFSTR("{redacted}");
  objc_msgSend(v12, "stringByReplacingOccurrencesOfString:withString:", CFSTR("%{private}s"), v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:arguments:", v14, &a9);
  return v15;
}

id AXLoggerForFacility(void *a1)
{
  id v1;
  NSObject *v2;
  id v3;
  id v4;
  _QWORD v6[4];
  id v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;

  v1 = a1;
  if (_AXLogInitialize__AXLogInitializeOnceToken != -1)
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = __Block_byref_object_copy__4;
  v13 = __Block_byref_object_dispose__4;
  v14 = 0;
  v2 = _AXLogThresholdQueue;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __AXLoggerForFacility_block_invoke;
  v6[3] = &unk_1E28C34F8;
  v7 = v1;
  v8 = &v9;
  v3 = v1;
  dispatch_sync(v2, v6);
  v4 = (id)v10[5];

  _Block_object_dispose(&v9, 8);
  return v4;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void AXPrintLine(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v10;
  id v11;
  void *v12;

  v10 = (objc_class *)MEMORY[0x1E0CB3940];
  v11 = a2;
  v12 = (void *)objc_msgSend([v10 alloc], "initWithFormat:arguments:", v11, &a9);

  AXPrintString(a1, v12);
}

void AXPrintString(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_t v9;
  void *v10;
  id v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  switch(a1)
  {
    case 0:
      v5 = v3;
      break;
    case 1:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "redString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    case 2:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "greenString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    case 3:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "yellowString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    case 4:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "blueString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    case 5:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "cyanString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    case 6:
      +[AXLogColorizer defaultColorizer](AXLogColorizer, "defaultColorizer");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "magentaString:", v4);
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_10:
      v5 = (id)v7;

      break;
    default:
      v5 = 0;
      break;
  }
  v8 = AXPrintString_AXEngineeringLog;
  if (!AXPrintString_AXEngineeringLog)
  {
    v9 = os_log_create((const char *)objc_msgSend(objc_retainAutorelease((id)*MEMORY[0x1E0DDDF48]), "UTF8String"), "axprintln");
    v10 = (void *)AXPrintString_AXEngineeringLog;
    AXPrintString_AXEngineeringLog = (uint64_t)v9;

    v8 = AXPrintString_AXEngineeringLog;
  }
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = objc_retainAutorelease(v5);
    v12 = v8;
    v13 = 136315138;
    v14 = objc_msgSend(v11, "UTF8String");
    _os_log_impl(&dword_18EBEC000, v12, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v13, 0xCu);

  }
}

BOOL AXWillLogInfoWithFacility(void *a1)
{
  NSObject *v1;
  _BOOL8 v2;

  AXLoggerForFacility(a1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = os_log_type_enabled(v1, OS_LOG_TYPE_INFO);

  return v2;
}

BOOL AXWillLogDebugWithFacility(void *a1)
{
  NSObject *v1;
  _BOOL8 v2;

  AXLoggerForFacility(a1);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG);

  return v2;
}

uint64_t AXLogShouldLogWithLevelAndFacility()
{
  return 1;
}

id getAXSettingsClass_1()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAXSettingsClass_softClass_1;
  v7 = getAXSettingsClass_softClass_1;
  if (!getAXSettingsClass_softClass_1)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke_1;
    v3[3] = &unk_1E28C1CB0;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke_1((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18EC04878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAXSettingsClass_block_invoke_1(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_1)
  {
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_1 = _sl_dlopen();
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_1)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AXSettings");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getAXSettingsClass_block_invoke_cold_1();
    free(v3);
  }
  getAXSettingsClass_softClass_1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

const __CFString *_AXNameForCodeItemType(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x13)
    return CFSTR("Unexpected!");
  else
    return *(&off_1E28C39D0 + a1 + 1);
}

void sub_18EC05908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18EC05A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18EC063C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLFSystemShellSwitcherClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!ClarityFoundationLibraryCore_frameworkLibrary)
  {
    ClarityFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!ClarityFoundationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("CLFSystemShellSwitcher");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getCLFSystemShellSwitcherClass_block_invoke_cold_1();
    free(v3);
  }
  getCLFSystemShellSwitcherClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t UIAccessibilitySymbolWithName(void *a1)
{
  id v1;
  uint64_t Value;
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  __CFDictionary *Mutable;
  uint64_t v8;

  v1 = a1;
  if (!_Symbols || (Value = (uint64_t)CFDictionaryGetValue((CFDictionaryRef)_Symbols, v1)) == 0)
  {
    v3 = objc_retainAutorelease(v1);
    Value = (uint64_t)dlsym((void *)8, (const char *)objc_msgSend(v3, "UTF8String"));
    if (!Value)
    {
      v4 = objc_retainAutorelease(v3);
      Value = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, (const char *)objc_msgSend(v4, "UTF8String"));
      if (!Value)
      {
        AXLogValidations();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
          UIAccessibilitySymbolWithName_cold_1((uint64_t)v4, v5, v6);

        Value = 1;
      }
    }
    Mutable = (__CFDictionary *)_Symbols;
    if (!_Symbols)
    {
      Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0, MEMORY[0x1E0C9AEB8], 0);
      _Symbols = (uint64_t)Mutable;
    }
    CFDictionarySetValue(Mutable, v3, (const void *)Value);
  }
  if (Value == 1)
    v8 = 0;
  else
    v8 = Value;

  return v8;
}

void sub_18EC07490(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 buf,int a24,__int16 a25,__int16 a26,id a27,__int128 a28)
{
  uint64_t v28;
  id v30;
  void *v31;
  void *v32;
  objc_class *v33;
  void *v34;
  NSObject *v35;
  NSObject *v36;
  id v37;
  id v38;
  objc_class *v39;
  id v40;
  void *v41;
  id v42;
  objc_class *v43;
  id v44;
  void *v45;

  if (a2 == 1)
  {
    v30 = objc_begin_catch(a1);
    v31 = *(void **)(a18 + 40);
    *(_QWORD *)(a18 + 40) = 0;

    if (AXShouldReportValidationErrors())
    {
      +[AXValidationManager sharedInstance](AXValidationManager, "sharedInstance");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = (objc_class *)objc_opt_class();
      NSStringFromClass(v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "sendExceptionForSafeValueKey:onTarget:overrideProcessName:", v28, v34, 0);

    }
    if (AXShouldLogValidationErrors())
    {
      AXLogValidations();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v30, "name");
        v38 = (id)objc_claimAutoreleasedReturnValue();
        v39 = (objc_class *)objc_opt_class();
        NSStringFromClass(v39);
        v40 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138544386;
        *(_QWORD *)((char *)&buf + 4) = v38;
        WORD6(buf) = 2114;
        *(_QWORD *)((char *)&buf + 14) = v28;
        a26 = 2114;
        a27 = v40;
        LOWORD(a28) = 2114;
        *(_QWORD *)((char *)&a28 + 2) = v30;
        WORD5(a28) = 2114;
        *(_QWORD *)((char *)&a28 + 12) = v41;
        _os_log_error_impl(&dword_18EBEC000, v35, OS_LOG_TYPE_ERROR, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);

      }
    }
    if (AXShouldCrashOnValidationErrors())
    {
      AXLogValidations();
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT))
      {
        objc_msgSend(v30, "name");
        v42 = (id)objc_claimAutoreleasedReturnValue();
        v43 = (objc_class *)objc_opt_class();
        NSStringFromClass(v43);
        v44 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138544386;
        *(_QWORD *)((char *)&buf + 4) = v42;
        WORD6(buf) = 2114;
        *(_QWORD *)((char *)&buf + 14) = v28;
        a26 = 2114;
        a27 = v44;
        LOWORD(a28) = 2114;
        *(_QWORD *)((char *)&a28 + 2) = v30;
        WORD5(a28) = 2114;
        *(_QWORD *)((char *)&a28 + 12) = v45;
        _os_log_fault_impl(&dword_18EBEC000, v36, OS_LOG_TYPE_FAULT, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);

      }
    }

    objc_end_catch();
    v37 = *(id *)(a18 + 40);
    JUMPOUT(0x18EC0743CLL);
  }
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void sub_18EC0784C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18EC07964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18EC07A60(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf, int a12, __int16 a13, __int16 a14, id a15, __int128 a16)
{
  uint64_t v16;
  id v17;
  void *v18;
  objc_class *v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  id v23;
  objc_class *v24;
  id v25;
  void *v26;
  id v27;
  objc_class *v28;
  id v29;
  void *v30;

  if (a2 == 1)
  {
    v17 = objc_begin_catch(a1);
    if (AXShouldReportValidationErrors())
    {
      +[AXValidationManager sharedInstance](AXValidationManager, "sharedInstance");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = (objc_class *)objc_opt_class();
      NSStringFromClass(v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "sendExceptionForSafeValueKey:onTarget:overrideProcessName:", v16, v20, 0);

    }
    if (AXShouldLogValidationErrors())
    {
      AXLogValidations();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v17, "name");
        v23 = (id)objc_claimAutoreleasedReturnValue();
        v24 = (objc_class *)objc_opt_class();
        NSStringFromClass(v24);
        v25 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138544386;
        *(_QWORD *)((char *)&buf + 4) = v23;
        WORD6(buf) = 2114;
        *(_QWORD *)((char *)&buf + 14) = v16;
        a14 = 2114;
        a15 = v25;
        LOWORD(a16) = 2114;
        *(_QWORD *)((char *)&a16 + 2) = v17;
        WORD5(a16) = 2114;
        *(_QWORD *)((char *)&a16 + 12) = v26;
        _os_log_error_impl(&dword_18EBEC000, v21, OS_LOG_TYPE_ERROR, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);

      }
    }
    if (AXShouldCrashOnValidationErrors())
    {
      AXLogValidations();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
      {
        objc_msgSend(v17, "name");
        v27 = (id)objc_claimAutoreleasedReturnValue();
        v28 = (objc_class *)objc_opt_class();
        NSStringFromClass(v28);
        v29 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138544386;
        *(_QWORD *)((char *)&buf + 4) = v27;
        WORD6(buf) = 2114;
        *(_QWORD *)((char *)&buf + 14) = v16;
        a14 = 2114;
        a15 = v29;
        LOWORD(a16) = 2114;
        *(_QWORD *)((char *)&a16 + 2) = v17;
        WORD5(a16) = 2114;
        *(_QWORD *)((char *)&a16 + 12) = v30;
        _os_log_fault_impl(&dword_18EBEC000, v22, OS_LOG_TYPE_FAULT, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);

      }
    }

    objc_end_catch();
    JUMPOUT(0x18EC07A20);
  }
  _Unwind_Resume(a1);
}

void AXPerformSafeBlock(void *a1)
{
  AXPerformSafeBlockWithErrorHandler(a1, 0);
}

void AXPerformSafeBlockWithErrorHandler(void *a1, void *a2)
{
  void (**v3)(_QWORD);
  id v4;

  v3 = a1;
  v4 = a2;
  v3[2](v3);

}

void sub_18EC07D40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t aBlock, uint64_t a11, id (*a12)(uint64_t a1), void *a13, void *a14, uint8_t buf, uint64_t a16, char a17)
{
  uint64_t v17;
  id v18;
  id v19;
  void (**v20)(_QWORD);
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;

  if (a2 == 1)
  {
    v18 = objc_begin_catch(exception_object);
    aBlock = MEMORY[0x1E0C809B0];
    a11 = 3221225472;
    a12 = __AXPerformSafeBlockWithErrorHandler_block_invoke;
    a13 = &unk_1E28C3AB8;
    v19 = v18;
    a14 = v19;
    v20 = (void (**)(_QWORD))_Block_copy(&aBlock);
    if (v17)
      (*(void (**)(uint64_t, id))(v17 + 16))(v17, v19);
    if (AXShouldLogValidationErrors())
    {
      AXLogValidations();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        v20[2](v20);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        AXPerformSafeBlockWithErrorHandler_cold_2(v22, (uint64_t)&a17, v21);
      }

    }
    if (AXShouldReportValidationErrors())
    {
      +[AXValidationManager sharedInstance](AXValidationManager, "sharedInstance");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v20[2](v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "sendExceptionForSafeBlock:overrideProcessName:", v24, 0);

    }
    if (AXShouldCrashOnValidationErrors())
    {
      AXLogValidations();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT))
      {
        v20[2](v20);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        AXPerformSafeBlockWithErrorHandler_cold_1(v26, &buf, v25);
      }

    }
    objc_end_catch();
    JUMPOUT(0x18EC07D04);
  }
  _Unwind_Resume(exception_object);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return objc_opt_class();
}

id __UIAccessibilityCastAsSafeCategory(void *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  NSString *v8;
  NSString *v9;
  int v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isKindOfClass;
  int v27;
  id v28;
  int v29;
  objc_class *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v39;
  void *v40;

  v7 = a2;
  if (v7)
  {
    objc_msgSend(a1, "safeCategoryTargetClassName");
    v8 = (NSString *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (!a3)
    {
      if (!v8 || !NSClassFromString(v8) || (objc_opt_isKindOfClass() & 1) == 0)
      {
LABEL_30:
        v28 = 0;
        goto LABEL_31;
      }
LABEL_24:
      v28 = v7;
LABEL_31:

      goto LABEL_32;
    }
    LOBYTE(v10) = 0;
    if (!AXPerformValidationChecks()
      || v9
      || (v11 = AXShouldCrashOnValidationErrors(),
          NSStringFromClass((Class)a1),
          v12 = (void *)objc_claimAutoreleasedReturnValue(),
          v10 = __UIAccessibilityHandleValidationErrorWithDescription(v11, 0, CFSTR("Couldn't find target class name for safe category class %@"), v13, v14, v15, v16, v17, (uint64_t)v12), v12, a4)|| !v10)
    {
      if (a4)
        *a4 = v10;
      if (!v9)
        goto LABEL_30;
      v18 = NSClassFromString(v9);
      LOBYTE(v19) = 0;
      if (!AXPerformValidationChecks()
        || v18
        || (v20 = AXShouldCrashOnValidationErrors(),
            NSStringFromClass((Class)a1),
            v39 = (void *)objc_claimAutoreleasedReturnValue(),
            v19 = __UIAccessibilityHandleValidationErrorWithDescription(v20, 0, CFSTR("Couldn't find target class named %@ for safe category class %@"), v21, v22, v23, v24, v25, (uint64_t)v9), v39, a4)|| !v19)
      {
        if (a4)
          *a4 = v19;
        if (!v18)
          goto LABEL_30;
        isKindOfClass = objc_opt_isKindOfClass();
        if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
        {
          LOBYTE(v27) = 0;
          goto LABEL_27;
        }
        v29 = AXShouldCrashOnValidationErrors();
        v30 = (objc_class *)objc_opt_class();
        NSStringFromClass(v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        NSStringFromClass((Class)a1);
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = __UIAccessibilityHandleValidationErrorWithDescription(v29, 0, CFSTR("Failed to cast object <%@: %p> as safe category %@ %@"), v33, v34, v35, v36, v37, (uint64_t)v31);

        if (a4 || !v27)
        {
LABEL_27:
          if (a4)
            *a4 = v27;
          if ((isKindOfClass & 1) == 0)
            goto LABEL_30;
          goto LABEL_24;
        }
      }
    }
    abort();
  }
  v28 = 0;
LABEL_32:

  return v28;
}

id __UIAccessibilitySafeClass(void *a1, void *a2, int a3, _BYTE *a4)
{
  NSString *v7;
  id v8;
  char isKindOfClass;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v19;

  v7 = a1;
  v8 = a2;
  if (!v8)
    goto LABEL_11;
  NSClassFromString(v7);
  isKindOfClass = objc_opt_isKindOfClass();
  if (a3)
  {
    if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
    {
      LOBYTE(v10) = 0;
    }
    else
    {
      v11 = AXShouldCrashOnValidationErrors();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = __UIAccessibilityHandleValidationErrorWithDescription(v11, 0, CFSTR("Failed to cast object <%@: %p> as class %@ %@"), v12, v13, v14, v15, v16, (uint64_t)v8);

      if (!a4 && v10)
        abort();
    }
    if (a4)
      *a4 = v10;
  }
  if ((isKindOfClass & 1) != 0)
    v17 = v8;
  else
LABEL_11:
    v17 = 0;

  return v17;
}

id __UIAccessibilityCastAsClass(objc_class *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  char isKindOfClass;
  int v9;
  int v10;
  objc_class *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v21;

  v7 = a2;
  if (!v7)
    goto LABEL_11;
  isKindOfClass = objc_opt_isKindOfClass();
  if (a3)
  {
    if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
    {
      LOBYTE(v9) = 0;
    }
    else
    {
      v10 = AXShouldCrashOnValidationErrors();
      v11 = (objc_class *)objc_opt_class();
      NSStringFromClass(v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromClass(a1);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = __UIAccessibilityHandleValidationErrorWithDescription(v10, 0, CFSTR("Failed to cast object <%@: %p> as class %@ %@"), v14, v15, v16, v17, v18, (uint64_t)v12);

      if (!a4 && v9)
        abort();
    }
    if (a4)
      *a4 = v9;
  }
  if ((isKindOfClass & 1) != 0)
    v19 = v7;
  else
LABEL_11:
    v19 = 0;

  return v19;
}

id __UIAccessibilityCastAsProtocol(void *a1, void *a2, int a3, _BYTE *a4)
{
  Protocol *v7;
  id v8;
  void *v9;
  int v10;
  int v11;
  int v12;
  objc_class *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v23;

  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (!v8)
    goto LABEL_11;
  v10 = objc_msgSend(v8, "conformsToProtocol:", v7);
  if (a3)
  {
    if (((AXPerformValidationChecks() ^ 1 | v10) & 1) != 0)
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      v12 = AXShouldCrashOnValidationErrors();
      v13 = (objc_class *)objc_opt_class();
      NSStringFromClass(v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromProtocol(v7);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, CFSTR("Failed to cast object <%@: %p> as protocol %@ %@"), v16, v17, v18, v19, v20, (uint64_t)v14);

      if (!a4 && v11)
        abort();
    }
    if (a4)
      *a4 = v11;
  }
  if (v10)
    v21 = v9;
  else
LABEL_11:
    v21 = 0;

  return v21;
}

uint64_t __UIAccessibilityGetAssociatedBool(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  return v3;
}

void __UIAccessibilitySetAssociatedBool(void *a1, const void *a2, int a3)
{
  void *v5;
  id object;

  object = a1;
  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);

}

void __UIAccessibilitySetAssociatedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (void *)1);
}

id __UIAccessibilityGetAssociatedNonRetainedObject(void *a1, const void *a2)
{
  void *v2;
  void *v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "nonRetainedObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void __UIAccessibilitySetAssociatedNonRetainedObject(void *a1, const void *a2, void *a3)
{
  id v5;
  id v6;
  NonRetainedObjectContainer *value;

  v5 = a3;
  v6 = a1;
  value = -[NonRetainedObjectContainer initWithObject:]([NonRetainedObjectContainer alloc], "initWithObject:", v5);

  objc_setAssociatedObject(v6, a2, value, (void *)1);
}

void __UIAccessibilitySetAssociatedCopiedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (void *)3);
}

uint64_t __UIAccessibilityGetAssociatedInteger(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "integerValue");

  return v3;
}

void __UIAccessibilitySetAssociatedInteger(void *a1, const void *a2, void *a3)
{
  id object;

  object = a1;
  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a3);
    a3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);

}

uint64_t __UIAccessibilityGetAssociatedInt(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "intValue");

  return v3;
}

void __UIAccessibilitySetAssociatedInt(void *a1, const void *a2, uint64_t a3)
{
  void *v5;
  id object;

  object = a1;
  if ((_DWORD)a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", a3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);

}

uint64_t __UIAccessibilityGetAssociatedUnsignedInt(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntValue");

  return v3;
}

void __UIAccessibilitySetAssociatedUnsignedInt(void *a1, const void *a2, uint64_t a3)
{
  void *v5;
  id object;

  object = a1;
  if ((_DWORD)a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);

}

uint64_t __UIAccessibilityGetAssociatedLong(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "longValue");

  return v3;
}

void __UIAccessibilitySetAssociatedLong(void *a1, const void *a2, void *a3)
{
  id object;

  object = a1;
  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", a3);
    a3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);

}

uint64_t __UIAccessibilityGetAssociatedUnsignedInteger(void *a1, const void *a2)
{
  void *v2;
  uint64_t v3;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntegerValue");

  return v3;
}

void __UIAccessibilitySetAssociatedUnsignedInteger(void *a1, const void *a2, void *a3)
{
  id object;

  object = a1;
  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
    a3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);

}

uint64_t __UIAccessibilityGetAssociatedRange(void *a1, const void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "rangeValue");
  else
    v4 = 0;

  return v4;
}

void __UIAccessibilitySetAssociatedRange(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id object;

  object = a1;
  if (a3 | a4)
  {
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRange:", a3, a4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }
  objc_setAssociatedObject(object, a2, v7, (void *)1);

}

double __UIAccessibilityGetAssociatedTimeInterval(void *a1, const void *a2)
{
  void *v2;
  double v3;
  double v4;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "doubleValue");
  v4 = v3;

  return v4;
}

void __UIAccessibilitySetAssociatedTimeInterval(void *a1, const void *a2, double a3)
{
  void *v5;
  id object;

  object = a1;
  if (a3 == 0.0)
    v5 = 0;
  else
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37E8]), "initWithDouble:", a3);
  objc_setAssociatedObject(object, a2, v5, (void *)1);

}

double __UIAccessibilityGetAssociatedCGFloat(void *a1, const void *a2)
{
  void *v2;
  double v3;
  double v4;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "doubleValue");
  v4 = v3;

  return v4;
}

void __UIAccessibilitySetAssociatedCGFloat(void *a1, const void *a2, double a3)
{
  void *v5;
  id object;

  object = a1;
  if (a3 == 0.0)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);

}

double __UIAccessibilityGetAssociatedCGPoint(void *a1, const void *a2)
{
  void *v2;
  void *v3;
  double v4;
  double v5;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "pointValue");
    v5 = v4;
  }
  else
  {
    v5 = *MEMORY[0x1E0C9D538];
  }

  return v5;
}

void __UIAccessibilitySetAssociatedCGPoint(void *a1, const void *a2, double a3, double a4)
{
  void *v8;
  id object;

  object = a1;
  if (a3 == *MEMORY[0x1E0C9D538] && a4 == *(double *)(MEMORY[0x1E0C9D538] + 8))
  {
    v8 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithPoint:", a3, a4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, v8, (void *)1);

}

double __UIAccessibilityGetAssociatedCGRect(void *a1, const void *a2)
{
  void *v2;
  void *v3;
  double v4;
  double v5;

  objc_getAssociatedObject(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "rectValue");
    v5 = v4;
  }
  else
  {
    v5 = *MEMORY[0x1E0C9D648];
  }

  return v5;
}

void __UIAccessibilitySetAssociatedCGRect(void *a1, const void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  void *v11;
  id object;
  CGRect v13;

  object = a1;
  v13.origin.x = a3;
  v13.origin.y = a4;
  v13.size.width = a5;
  v13.size.height = a6;
  if (CGRectEqualToRect(v13, *MEMORY[0x1E0C9D648]))
  {
    v11 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithRect:", a3, a4, a5, a6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_setAssociatedObject(object, a2, v11, (void *)1);

}

void sub_18EC09044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v15;

  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void sub_18EC09374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;

  objc_sync_exit(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void _axmonitor_dyld_image_callback()
{
  const char *v0;
  char *v1;
  _QWORD v2[5];

  v0 = (const char *)dyld_image_path_containing_address();
  if (v0 && *v0)
  {
    v1 = strdup(v0);
    if (v1)
    {
      v2[0] = MEMORY[0x1E0C809B0];
      v2[1] = 3221225472;
      v2[2] = ___axmonitor_dyld_image_callback_block_invoke;
      v2[3] = &__block_descriptor_40_e5_v8__0l;
      v2[4] = v1;
      AXPerformBlockOnMainThreadAfterDelay(v2, 0.5);
    }
  }
}

void ___axmonitor_dyld_image_callback_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x193FF9EC8]();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", *(_QWORD *)(a1 + 32), 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  +[AXBinaryMonitor sharedInstance](AXBinaryMonitor, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_handleLoadedImagePath:", v3);

  free(*(void **)(a1 + 32));
  objc_autoreleasePoolPop(v2);
}

void _AXInitializeSafeSwiftValueSupport()
{
  if (_AXInitializeSafeSwiftValueSupport_onceToken != -1)
    dispatch_once(&_AXInitializeSafeSwiftValueSupport_onceToken, &__block_literal_global_19);
}

void _bulkAddMethodsFromClass(objc_class *a1, uint64_t a2)
{
  Method *v4;
  Method *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  char *v10;
  char *v11;
  unint64_t v12;
  int v13;
  const char *Name;
  const char *TypeEncoding;
  objc_method *InstanceMethod;
  IMP Implementation;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int outCount;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  outCount = 0;
  v4 = class_copyMethodList(a1, &outCount);
  v5 = v4;
  v6 = outCount;
  if (!outCount)
  {
    if (!v4)
      return;
    goto LABEL_18;
  }
  v7 = 8 * outCount;
  if (outCount <= 0x55)
  {
    v20 = a2;
    MEMORY[0x1E0C80A78]();
    v9 = (char *)&v19 - ((v8 + 15) & 0x7FFFFFFFF0);
    bzero(v9, v8);
    v10 = &v9[v7];
    v11 = &v9[16 * v6];
    goto LABEL_8;
  }
  v9 = (char *)malloc_type_malloc(48 * outCount, 0x7631154uLL);
  v10 = &v9[v7];
  v11 = &v9[16 * v6];
  if (outCount)
  {
    v20 = a2;
LABEL_8:
    v12 = 0;
    v13 = 0;
    do
    {
      Name = method_getName(v5[v12]);
      TypeEncoding = method_getTypeEncoding(v5[v12]);
      InstanceMethod = class_getInstanceMethod(a1, Name);
      if (InstanceMethod)
      {
        Implementation = method_getImplementation(InstanceMethod);
        if (Implementation)
        {
          *(_QWORD *)&v9[8 * v13] = Name;
          *(_QWORD *)&v10[8 * v13] = Implementation;
          *(_QWORD *)&v11[8 * v13++] = TypeEncoding;
        }
      }
      ++v12;
    }
    while (v12 < outCount);
    goto LABEL_13;
  }
  if (v5)
LABEL_13:
    free(v5);
  v21 = 0;
  v18 = (void *)class_addMethodsBulk();
  if (v18)
    free(v18);
  if (v6 >= 0x56)
  {
    v4 = (Method *)v9;
LABEL_18:
    free(v4);
  }
}

__CFString *__UIAccessibilityCastAsSwiftStruct(void *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  id v8;
  void *v9;
  int IsStructWithTypeName;
  int v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __CFString *v19;
  void *v21;

  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (!v8)
    goto LABEL_11;
  IsStructWithTypeName = _AXSafeSwiftIsStructWithTypeName((uint64_t)v8, (uint64_t)v7);
  if (a3)
  {
    if (((AXPerformValidationChecks() ^ 1 | IsStructWithTypeName) & 1) != 0)
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      v12 = AXShouldCrashOnValidationErrors();
      _AXSafeSwiftTypeName((uint64_t)v9);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, CFSTR("Failed to cast object <%@: %p> as struct %@ %@"), v14, v15, v16, v17, v18, (uint64_t)v13);

      if (!a4 && v11)
        abort();
    }
    if (a4)
      *a4 = v11;
  }
  if (IsStructWithTypeName)
    v19 = v9;
  else
LABEL_11:
    v19 = &stru_1E28C88D8;

  return v19;
}

__CFString *__UIAccessibilityCastAsSwiftEnum(void *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  id v8;
  void *v9;
  int IsEnumWithTypeName;
  int v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __CFString *v19;
  void *v21;

  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (!v8)
    goto LABEL_11;
  IsEnumWithTypeName = _AXSafeSwiftIsEnumWithTypeName((uint64_t)v8, (uint64_t)v7);
  if (a3)
  {
    if (((AXPerformValidationChecks() ^ 1 | IsEnumWithTypeName) & 1) != 0)
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      v12 = AXShouldCrashOnValidationErrors();
      _AXSafeSwiftTypeName((uint64_t)v9);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, CFSTR("Failed to cast object <%@: %p> as enum %@ %@"), v14, v15, v16, v17, v18, (uint64_t)v13);

      if (!a4 && v11)
        abort();
    }
    if (a4)
      *a4 = v11;
  }
  if (IsEnumWithTypeName)
    v19 = v9;
  else
LABEL_11:
    v19 = &stru_1E28C88D8;

  return v19;
}

__CFString *__UIAccessibilityCastAsSwiftTuple(void *a1, int a2, _BYTE *a3)
{
  id v5;
  _BOOL4 IsTuple;
  int v7;
  int v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __CFString *v15;
  void *v17;

  v5 = a1;
  if (!v5)
    goto LABEL_11;
  IsTuple = _AXSafeSwiftIsTuple();
  if (a2)
  {
    if (((AXPerformValidationChecks() ^ 1 | IsTuple) & 1) != 0)
    {
      LOBYTE(v7) = 0;
    }
    else
    {
      v8 = AXShouldCrashOnValidationErrors();
      _AXSafeSwiftTypeName((uint64_t)v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3978], "callStackSymbols");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = __UIAccessibilityHandleValidationErrorWithDescription(v8, 0, CFSTR("Failed to cast object <%@: %p> as tuple %@"), v10, v11, v12, v13, v14, (uint64_t)v9);

      if (!a3 && v7)
        abort();
    }
    if (a3)
      *a3 = v7;
  }
  if (IsTuple)
    v15 = (__CFString *)v5;
  else
LABEL_11:
    v15 = &stru_1E28C88D8;

  return v15;
}

void _AXAssert(int a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v13;
  os_log_type_t v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t *v19;
  uint64_t *v20;
  void *v21;
  char v22;
  uint64_t *v23;
  uint64_t **v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE buf[24];
  void *v28;
  _QWORD v29[4];

  v29[3] = *MEMORY[0x1E0C80C00];
  v13 = a5;
  if (_AXSInUnitTestMode())
  {
    *(_QWORD *)buf = &a9;
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:arguments:", CFSTR("AccessibilityUnitTestingException"), v13, &a9);
  }
  else
  {
    if (a1)
      v14 = OS_LOG_TYPE_ERROR;
    else
      v14 = OS_LOG_TYPE_FAULT;
    v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    objc_msgSend(v15, "lastPathComponent");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = &a9;
    v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:arguments:", v13, &a9);
    AXLogCommon();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, v14))
    {
      *(_DWORD *)buf = 136315906;
      *(_QWORD *)&buf[4] = a4;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v16;
      *(_WORD *)&buf[22] = 2048;
      v28 = a3;
      LOWORD(v29[0]) = 2112;
      *(_QWORD *)((char *)v29 + 2) = v17;
      _os_log_impl(&dword_18EBEC000, v18, v14, "*** Assertion failure in %s, %@:%lu: %@", buf, 0x2Au);
    }

    if (a1)
    {
      v23 = 0;
      v24 = &v23;
      v25 = 0x2050000000;
      v19 = (uint64_t *)getAXSettingsClass_softClass_2;
      v26 = getAXSettingsClass_softClass_2;
      if (!getAXSettingsClass_softClass_2)
      {
        *(_QWORD *)buf = MEMORY[0x1E0C809B0];
        *(_QWORD *)&buf[8] = 3221225472;
        *(_QWORD *)&buf[16] = __getAXSettingsClass_block_invoke_2;
        v28 = &unk_1E28C1CB0;
        v29[0] = &v23;
        __getAXSettingsClass_block_invoke_2((uint64_t)buf);
        v19 = v24[3];
      }
      v20 = objc_retainAutorelease(v19);
      _Block_object_dispose(&v23, 8);
      objc_msgSend(v20, "sharedInstance", v23);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "ignoreAXAsserts");

      if ((v22 & 1) == 0)
        _AXAssert_cold_1();
    }
  }

}

void sub_18EC0B4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getAXSettingsClass_block_invoke_2(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_2)
  {
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_2 = _sl_dlopen();
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_2)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AXSettings");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getAXSettingsClass_block_invoke_cold_1();
    free(v3);
  }
  getAXSettingsClass_softClass_2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void AXValidationManagerSendExceptionForSafeValueKey(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;

  v3 = a2;
  v4 = a1;
  +[AXValidationManager sharedInstance](AXValidationManager, "sharedInstance");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "sendExceptionForSafeValueKey:onTarget:overrideProcessName:", v4, v3, 0);

}

void _UIValidationAXAppendError(void *a1)
{
  id v1;

  v1 = a1;
  if (AXShouldLogValidationErrors())
    UIAXAppendValidationError(v1);

}

void _UIReportSenderError(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a1;
  v3 = a2;
  if (AXShouldReportValidationErrors())
  {
    +[AXValidationManager sharedInstance](AXValidationManager, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "sendExceptionForInstallingSafeCategory:onTarget:overrideProcessName:", v3, v5, 0);

  }
}

void sub_18EC0CEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

objc_class *_AXClassFromStringWithFallback(void *a1)
{
  NSString *v1;
  Class v2;
  void *v3;
  NSString *v4;
  objc_class *v5;

  v1 = a1;
  v2 = NSClassFromString(v1);
  if (!v2)
  {
    -[NSString componentsSeparatedByString:](v1, "componentsSeparatedByString:", CFSTR("."));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    _AXGetSwiftMangledClassNameWithItems();
    v4 = (NSString *)objc_claimAutoreleasedReturnValue();
    v2 = NSClassFromString(v4);

  }
  v5 = v2;

  return v5;
}

void sub_18EC0E4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18EC0E9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_18EC0F344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

objc_ivar *__ax_verbose_encode_with_type_encoding_group_class(objc_class *a1, const char *a2)
{
  objc_ivar *result;

  result = class_getInstanceVariable(a1, a2);
  if (result)
    return (objc_ivar *)ivar_getTypeEncoding(result);
  return result;
}

Class __getAXSettingsClass_block_invoke_3(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_3)
  {
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_3 = _sl_dlopen();
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_3)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AXSettings");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getAXSettingsClass_block_invoke_cold_1();
    free(v3);
  }
  getAXSettingsClass_softClass_3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

__CFString *AXCFormattedString(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  __CFString *v17;
  id v19[2];
  uint8_t buf[4];
  id v21;
  __int16 v22;
  id v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v10 = a1;
  v11 = a2;
  v19[1] = &a9;
  v12 = objc_alloc(MEMORY[0x1E0CB3940]);
  objc_msgSend(MEMORY[0x1E0C99DC8], "autoupdatingCurrentLocale");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = 0;
  v14 = (void *)objc_msgSend(v12, "initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:", v10, v11, v13, &a9, v19);
  v15 = v19[0];

  if (v15)
  {
    AXLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412802;
      v21 = v15;
      v22 = 2112;
      v23 = v10;
      v24 = 2112;
      v25 = v11;
      _os_log_fault_impl(&dword_18EBEC000, v16, OS_LOG_TYPE_FAULT, "Error creating string: %@ [%@/%@]", buf, 0x20u);
    }

    v17 = &stru_1E28C88D8;
  }
  else
  {
    v17 = v14;
  }

  return v17;
}

id AXCLocString(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  AXCBundle();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "localizedStringForKey:value:table:", v1, v1, CFSTR("AXCoreUtilities"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id AXFormatNumber(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;

  v1 = AXFormatNumber__AXNumberFormatterOnceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&AXFormatNumber__AXNumberFormatterOnceToken, &__block_literal_global_21);
  objc_msgSend((id)AXFormatNumber__AXNumberFormatter, "stringFromNumber:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id AXFormatNumberWithOptions(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  id v7;
  float v8;
  float v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v7 = a1;
  if (AXFormatNumberWithOptions__AXNumberFormatterWithOptionsOnceToken != -1)
    dispatch_once(&AXFormatNumberWithOptions__AXNumberFormatterWithOptionsOnceToken, &__block_literal_global_1_1);
  if (!a4)
  {
    objc_msgSend(v7, "floatValue");
    if (v8 >= 1.0)
    {
      if (a2 < 1)
      {
LABEL_8:
        v10 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
        v11 = 0;
LABEL_11:
        objc_msgSend(v10, "setNumberStyle:", v11);
        goto LABEL_12;
      }
    }
    else
    {
      objc_msgSend(v7, "floatValue");
      if (a2 <= 0 && v9 <= -1.0)
        goto LABEL_8;
    }
    v10 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
    v11 = 1;
    goto LABEL_11;
  }
  objc_msgSend((id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions, "setNumberStyle:", 3);
  objc_msgSend((id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions, "_setUsesCharacterDirection:", 1);
LABEL_12:
  objc_msgSend((id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions, "setMinimumFractionDigits:", a3);
  objc_msgSend((id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions, "setMaximumFractionDigits:", a2);
  objc_msgSend((id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions, "stringFromNumber:", v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

id AXFormatInteger(uint64_t a1)
{
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  AXFormatNumber(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id AXFormatFloat(uint64_t a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  AXFormatNumberWithOptions(v2, a1, 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id AXFormatFloatWithPercentage(uint64_t a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  AXFormatNumberWithOptions(v2, a1, 0, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id AXFormatByteSize(uint64_t a1)
{
  float v2;
  void *v3;
  __CFString *v4;
  uint64_t v5;
  void *v6;

  v2 = (float)a1;
  AXCLocString(CFSTR("size.bytes.format"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (a1 >= 1025)
  {
    v2 = v2 * 0.00097656;
    if (v2 >= 1024.0)
    {
      v2 = v2 * 0.00097656;
      if (v2 >= 1024.0)
      {
        v2 = v2 * 0.00097656;
        v4 = CFSTR("size.gigabytes.format");
      }
      else
      {
        v4 = CFSTR("size.megabytes.format");
      }
    }
    else
    {
      v4 = CFSTR("size.kilobytes.format");
    }
    AXCLocString(v4);
    v5 = objc_claimAutoreleasedReturnValue();

    v3 = (void *)v5;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", v3, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id AXFormatMagnificationFactor(float a1)
{
  void *v2;
  void *v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)MEMORY[0x1E0CB3940];
  AXCLocString(CFSTR("magnification.factor.format"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  *(float *)&v4 = a1;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  AXFormatNumberWithOptions(v5, 1, 1, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", v3, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id AXFormatLocalizedPlaybackSpeedFactor(float a1)
{
  void *v2;
  void *v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)MEMORY[0x1E0CB3940];
  AXCLocString(CFSTR("playback.speed.factor.format"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  *(float *)&v4 = a1;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  AXFormatNumberWithOptions(v5, 1, 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", v3, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t AXIntegerValueFromString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  id v6;
  uint64_t v7;
  id v9;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    objc_msgSend(MEMORY[0x1E0CB37A0], "string");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3900], "localizedScannerWithString:", v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v3, "isAtEnd") & 1) == 0)
    {
      do
      {
        objc_msgSend(MEMORY[0x1E0CB3500], "decimalDigitCharacterSet");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = 0;
        v5 = objc_msgSend(v3, "scanCharactersFromSet:intoString:", v4, &v9);
        v6 = v9;

        if (v5)
          objc_msgSend(v2, "appendString:", v6);
        else
          objc_msgSend(v3, "setScanLocation:", objc_msgSend(v3, "scanLocation") + 1);

      }
      while (!objc_msgSend(v3, "isAtEnd"));
    }
    if (objc_msgSend(v2, "length"))
      v7 = objc_msgSend(v2, "integerValue");
    else
      v7 = 0;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id AXDescriptionForHeadingInDegrees(int a1, double a2)
{
  double i;
  __CFString *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  for (i = a2; i < 0.0; i = i + 360.0)
    ;
  for (; i > 360.0; i = i + -360.0)
    ;
  v4 = CFSTR("DIRECTION_NORTH");
  if (i >= 22.0)
  {
    if (i >= 67.0)
    {
      if (i >= 112.0)
      {
        if (i >= 157.0)
        {
          if (i >= 202.0)
          {
            if (i >= 247.0)
            {
              if (i >= 292.0)
              {
                if (i < 337.0)
                  v4 = CFSTR("DIRECTION_NORTHWEST");
              }
              else
              {
                v4 = CFSTR("DIRECTION_WEST");
              }
            }
            else
            {
              v4 = CFSTR("DIRECTION_SOUTHWEST");
            }
          }
          else
          {
            v4 = CFSTR("DIRECTION_SOUTH");
          }
        }
        else
        {
          v4 = CFSTR("DIRECTION_SOUTHEAST");
        }
      }
      else
      {
        v4 = CFSTR("DIRECTION_EAST");
      }
    }
    else
    {
      v4 = CFSTR("DIRECTION_NORTHEAST");
    }
  }
  AXCLocString(v4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (a1)
  {
    v7 = (void *)MEMORY[0x1E0CB3940];
    AXCLocString(CFSTR("degrees.format"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v9) = llround(i);
    objc_msgSend(v7, "localizedStringWithFormat:", v8, v9, v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = (void *)MEMORY[0x1E0CB3940];
    AXCLocString(CFSTR("compass.heading.format"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedStringWithFormat:", v12, v10, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

void _AXAssertIsMainThread()
{
  void *v0;
  char v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isMainThread");

  if ((v1 & 1) == 0)
  {
    AXLogCommon();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      _AXAssertIsMainThread_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);

  }
}

void _AXAssertIsThread(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  char v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (void *)MEMORY[0x1E0CB3978];
  v2 = a1;
  objc_msgSend(v1, "currentThread");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqual:", v2);

  if ((v4 & 1) == 0)
  {
    AXLogCommon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      _AXAssertIsThread_cold_1(v5, v6, v7, v8, v9, v10, v11, v12);

  }
}

void _AXAssertIsThreadNamed(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  char v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (void *)MEMORY[0x1E0CB3978];
  v2 = a1;
  objc_msgSend(v1, "currentThread");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "name");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqualToString:", v2);

  if ((v5 & 1) == 0)
  {
    AXLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      _AXAssertIsThread_cold_1(v6, v7, v8, v9, v10, v11, v12, v13);

  }
}

void OUTLINED_FUNCTION_0_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

const __CFString *AXSystemRootDirectory()
{
  return CFSTR("/");
}

id AXCLanguageToCanonicalPlistPath()
{
  void *v0;
  void *v1;

  AXCBundle();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "pathForResource:ofType:", CFSTR("AXLanguageToLocale"), CFSTR("plist"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

uint64_t AXAccessibilityMacCatalystBundlesDirectory()
{
  return objc_msgSend(CFSTR("/"), "stringByAppendingPathComponent:", CFSTR("System/iOSSupport/System/Library/AccessibilityBundles"));
}

void AXBackgroundLog(void *a1, os_log_type_t a2, void *a3)
{
  NSObject *v5;
  id v6;
  NSObject *v7;
  _QWORD block[4];
  NSObject *v9;
  id v10;
  os_log_type_t v11;

  v5 = a1;
  v6 = a3;
  if (os_log_type_enabled(v5, a2))
  {
    if (_AXBackgroundLoggingQueue_onceToken[0] != -1)
      dispatch_once(_AXBackgroundLoggingQueue_onceToken, &__block_literal_global_323);
    v7 = _AXBackgroundLoggingQueue__queue;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __AXBackgroundLog_block_invoke;
    block[3] = &unk_1E28C3DF8;
    v10 = v6;
    v9 = v5;
    v11 = a2;
    dispatch_async(v7, block);

  }
}

id AXRuntimeLogCommon()
{
  if (AXRuntimeLogCommon_onceToken != -1)
    dispatch_once(&AXRuntimeLogCommon_onceToken, &__block_literal_global_5_0);
  return (id)AXRuntimeLogCommon___logObj;
}

id AXRuntimeLogSerialization()
{
  if (AXRuntimeLogSerialization_onceToken != -1)
    dispatch_once(&AXRuntimeLogSerialization_onceToken, &__block_literal_global_11_0);
  return (id)AXRuntimeLogSerialization___logObj;
}

id AXRuntimeLogElementFetcher()
{
  if (AXRuntimeLogElementFetcher_onceToken != -1)
    dispatch_once(&AXRuntimeLogElementFetcher_onceToken, &__block_literal_global_13_1);
  return (id)AXRuntimeLogElementFetcher___logObj;
}

id AXTTSLogCommon()
{
  if (AXTTSLogCommon_onceToken != -1)
    dispatch_once(&AXTTSLogCommon_onceToken, &__block_literal_global_15_0);
  return (id)AXTTSLogCommon___logObj;
}

id AXTTSLogRange()
{
  if (AXTTSLogRange_onceToken != -1)
    dispatch_once(&AXTTSLogRange_onceToken, &__block_literal_global_17_0);
  return (id)AXTTSLogRange___logObj;
}

id AXTTSLogVoiceBank()
{
  if (AXTTSLogVoiceBank_onceToken != -1)
    dispatch_once(&AXTTSLogVoiceBank_onceToken, &__block_literal_global_19);
  return (id)AXTTSLogVoiceBank___logObj;
}

id AXTTSLogKona()
{
  if (AXTTSLogKona_onceToken != -1)
    dispatch_once(&AXTTSLogKona_onceToken, &__block_literal_global_25);
  return (id)AXTTSLogKona___logObj;
}

id AXLogEventTap()
{
  if (AXLogEventTap_onceToken != -1)
    dispatch_once(&AXLogEventTap_onceToken, &__block_literal_global_27);
  return (id)AXLogEventTap___logObj;
}

id AXLogIPC()
{
  if (AXLogIPC_onceToken != -1)
    dispatch_once(&AXLogIPC_onceToken, &__block_literal_global_29_0);
  return (id)AXLogIPC___logObj;
}

id AXLogDisplay()
{
  if (AXLogDisplay_onceToken != -1)
    dispatch_once(&AXLogDisplay_onceToken, &__block_literal_global_31_1);
  return (id)AXLogDisplay___logObj;
}

id AXLogUserInterfaceService()
{
  if (AXLogUserInterfaceService_onceToken != -1)
    dispatch_once(&AXLogUserInterfaceService_onceToken, &__block_literal_global_33_1);
  return (id)AXLogUserInterfaceService___logObj;
}

id AXLogUIViewService()
{
  if (AXLogUIViewService_onceToken != -1)
    dispatch_once(&AXLogUIViewService_onceToken, &__block_literal_global_35_2);
  return (id)AXLogUIViewService___logObj;
}

id AXLogBrokenHomeButton()
{
  if (AXLogBrokenHomeButton_onceToken != -1)
    dispatch_once(&AXLogBrokenHomeButton_onceToken, &__block_literal_global_37_1);
  return (id)AXLogBrokenHomeButton___logObj;
}

id AXLogMIDI()
{
  if (AXLogMIDI_onceToken != -1)
    dispatch_once(&AXLogMIDI_onceToken, &__block_literal_global_39);
  return (id)AXLogMIDI___logObj;
}

id AXLogDataMigrator()
{
  if (AXLogDataMigrator_onceToken != -1)
    dispatch_once(&AXLogDataMigrator_onceToken, &__block_literal_global_41);
  return (id)AXLogDataMigrator___logObj;
}

id AXLogDragging()
{
  if (AXLogDragging_onceToken != -1)
    dispatch_once(&AXLogDragging_onceToken, &__block_literal_global_43_0);
  return (id)AXLogDragging___logObj;
}

id AXLogSettings()
{
  if (AXLogSettings_onceToken != -1)
    dispatch_once(&AXLogSettings_onceToken, &__block_literal_global_45);
  return (id)AXLogSettings___logObj;
}

id AXLogSiriShortcuts()
{
  if (AXLogSiriShortcuts_onceToken != -1)
    dispatch_once(&AXLogSiriShortcuts_onceToken, &__block_literal_global_47);
  return (id)AXLogSiriShortcuts___logObj;
}

id AXLogAssertions()
{
  if (AXLogAssertions_onceToken != -1)
    dispatch_once(&AXLogAssertions_onceToken, &__block_literal_global_49);
  return (id)AXLogAssertions___logObj;
}

id AXLogTimeProfile()
{
  if (AXLogTimeProfile_onceToken != -1)
    dispatch_once(&AXLogTimeProfile_onceToken, &__block_literal_global_51_0);
  return (id)AXLogTimeProfile___logObj;
}

id AXLogMemoryProfile()
{
  if (AXLogMemoryProfile_onceToken != -1)
    dispatch_once(&AXLogMemoryProfile_onceToken, &__block_literal_global_53_0);
  return (id)AXLogMemoryProfile___logObj;
}

id AXLogLookingGlass()
{
  if (AXLogLookingGlass_onceToken != -1)
    dispatch_once(&AXLogLookingGlass_onceToken, &__block_literal_global_55);
  return (id)AXLogLookingGlass___logObj;
}

id AXLogLookingGlassUI()
{
  if (AXLogLookingGlassUI_onceToken != -1)
    dispatch_once(&AXLogLookingGlassUI_onceToken, &__block_literal_global_57);
  return (id)AXLogLookingGlassUI___logObj;
}

id AXLogAccessories()
{
  if (AXLogAccessories_onceToken != -1)
    dispatch_once(&AXLogAccessories_onceToken, &__block_literal_global_59);
  return (id)AXLogAccessories___logObj;
}

id AXLogUI()
{
  if (AXLogUI_onceToken != -1)
    dispatch_once(&AXLogUI_onceToken, &__block_literal_global_61);
  return (id)AXLogUI___logObj;
}

id AXLogBackboardServer()
{
  if (AXLogBackboardServer_onceToken[0] != -1)
    dispatch_once(AXLogBackboardServer_onceToken, &__block_literal_global_63);
  return (id)AXLogBackboardServer___logObj;
}

id AXLogSpringboardServer()
{
  if (AXLogSpringboardServer_onceToken != -1)
    dispatch_once(&AXLogSpringboardServer_onceToken, &__block_literal_global_65);
  return (id)AXLogSpringboardServer___logObj;
}

id AXLogSystemApp()
{
  if (AXLogSystemApp_onceToken != -1)
    dispatch_once(&AXLogSystemApp_onceToken, &__block_literal_global_67);
  return (id)AXLogSystemApp___logObj;
}

id AXLogPhysicalInteraction()
{
  if (AXLogPhysicalInteraction_onceToken != -1)
    dispatch_once(&AXLogPhysicalInteraction_onceToken, &__block_literal_global_69);
  return (id)AXLogPhysicalInteraction___logObj;
}

id AXLogAudioRouting()
{
  if (AXLogAudioRouting_onceToken != -1)
    dispatch_once(&AXLogAudioRouting_onceToken, &__block_literal_global_71_0);
  return (id)AXLogAudioRouting___logObj;
}

id ASTLogCommon()
{
  if (ASTLogCommon_onceToken != -1)
    dispatch_once(&ASTLogCommon_onceToken, &__block_literal_global_73);
  return (id)ASTLogCommon___logObj;
}

id ASTLogMouse()
{
  if (ASTLogMouse_onceToken != -1)
    dispatch_once(&ASTLogMouse_onceToken, &__block_literal_global_75);
  return (id)ASTLogMouse___logObj;
}

id AXLogLocCaptionPanel()
{
  if (AXLogLocCaptionPanel_onceToken != -1)
    dispatch_once(&AXLogLocCaptionPanel_onceToken, &__block_literal_global_81);
  return (id)AXLogLocCaptionPanel___logObj;
}

id AXLogContextKit()
{
  if (AXLogContextKit_onceToken != -1)
    dispatch_once(&AXLogContextKit_onceToken, &__block_literal_global_83);
  return (id)AXLogContextKit___logObj;
}

id AXLogPronunciations()
{
  if (AXLogPronunciations_onceToken != -1)
    dispatch_once(&AXLogPronunciations_onceToken, &__block_literal_global_85);
  return (id)AXLogPronunciations___logObj;
}

id AXLogBrailleHW()
{
  if (AXLogBrailleHW_onceToken != -1)
    dispatch_once(&AXLogBrailleHW_onceToken, &__block_literal_global_87);
  return (id)AXLogBrailleHW___logObj;
}

id AXLogBluetooth()
{
  if (AXLogBluetooth_onceToken != -1)
    dispatch_once(&AXLogBluetooth_onceToken, &__block_literal_global_89);
  return (id)AXLogBluetooth___logObj;
}

id AXLogFocusEngine()
{
  if (AXLogFocusEngine_onceToken != -1)
    dispatch_once(&AXLogFocusEngine_onceToken, &__block_literal_global_91);
  return (id)AXLogFocusEngine___logObj;
}

id AXLogSoundBoard()
{
  if (AXLogSoundBoard_onceToken != -1)
    dispatch_once(&AXLogSoundBoard_onceToken, &__block_literal_global_93);
  return (id)AXLogSoundBoard___logObj;
}

id FKALogCommon()
{
  if (FKALogCommon_onceToken != -1)
    dispatch_once(&FKALogCommon_onceToken, &__block_literal_global_95);
  return (id)FKALogCommon___logObj;
}

id GAXLogCommon()
{
  if (GAXLogCommon_onceToken != -1)
    dispatch_once(&GAXLogCommon_onceToken, &__block_literal_global_97);
  return (id)GAXLogCommon___logObj;
}

id GAXLogTimeRestrictions()
{
  if (GAXLogTimeRestrictions_onceToken != -1)
    dispatch_once(&GAXLogTimeRestrictions_onceToken, &__block_literal_global_99);
  return (id)GAXLogTimeRestrictions___logObj;
}

id GAXLogIntegrity()
{
  if (GAXLogIntegrity_onceToken != -1)
    dispatch_once(&GAXLogIntegrity_onceToken, &__block_literal_global_101);
  return (id)GAXLogIntegrity___logObj;
}

id GAXLogAppLaunching()
{
  if (GAXLogAppLaunching_onceToken != -1)
    dispatch_once(&GAXLogAppLaunching_onceToken, &__block_literal_global_103);
  return (id)GAXLogAppLaunching___logObj;
}

id GAXLogBlockedTouches()
{
  if (GAXLogBlockedTouches_onceToken != -1)
    dispatch_once(&GAXLogBlockedTouches_onceToken, &__block_literal_global_105);
  return (id)GAXLogBlockedTouches___logObj;
}

id AXLogInvertColors()
{
  if (AXLogInvertColors_onceToken != -1)
    dispatch_once(&AXLogInvertColors_onceToken, &__block_literal_global_107);
  return (id)AXLogInvertColors___logObj;
}

id AXLogInvertColorsTraversal()
{
  if (AXLogInvertColorsTraversal_onceToken != -1)
    dispatch_once(&AXLogInvertColorsTraversal_onceToken, &__block_literal_global_109);
  return (id)AXLogInvertColorsTraversal___logObj;
}

id AXLogInvertColorsLoadBundles()
{
  if (AXLogInvertColorsLoadBundles_onceToken != -1)
    dispatch_once(&AXLogInvertColorsLoadBundles_onceToken, &__block_literal_global_111);
  return (id)AXLogInvertColorsLoadBundles___logObj;
}

id AXLogMuseAccessibility()
{
  if (AXLogMuseAccessibility_onceToken != -1)
    dispatch_once(&AXLogMuseAccessibility_onceToken, &__block_literal_global_113);
  return (id)AXLogMuseAccessibility___logObj;
}

id AXLogAppCompareGeometry()
{
  if (AXLogAppCompareGeometry_onceToken != -1)
    dispatch_once(&AXLogAppCompareGeometry_onceToken, &__block_literal_global_117);
  return (id)AXLogAppCompareGeometry___logObj;
}

id AXLogValidations()
{
  if (AXLogValidations_onceToken != -1)
    dispatch_once(&AXLogValidations_onceToken, &__block_literal_global_119);
  return (id)AXLogValidations___logObj;
}

id AXLogValidationRunner()
{
  if (AXLogValidationRunner_onceToken != -1)
    dispatch_once(&AXLogValidationRunner_onceToken, &__block_literal_global_121);
  return (id)AXLogValidationRunner___logObj;
}

id AXLogElementTraversal()
{
  if (AXLogElementTraversal_onceToken != -1)
    dispatch_once(&AXLogElementTraversal_onceToken, &__block_literal_global_123);
  return (id)AXLogElementTraversal___logObj;
}

id AXLogFirstElement()
{
  if (AXLogFirstElement_onceToken != -1)
    dispatch_once(&AXLogFirstElement_onceToken, &__block_literal_global_125);
  return (id)AXLogFirstElement___logObj;
}

id AXLogHitTest()
{
  if (AXLogHitTest_onceToken != -1)
    dispatch_once(&AXLogHitTest_onceToken, &__block_literal_global_127);
  return (id)AXLogHitTest___logObj;
}

id AXLogScrollToVisible()
{
  if (AXLogScrollToVisible_onceToken != -1)
    dispatch_once(&AXLogScrollToVisible_onceToken, &__block_literal_global_129);
  return (id)AXLogScrollToVisible___logObj;
}

id AXLogVisibleFrame()
{
  if (AXLogVisibleFrame_onceToken != -1)
    dispatch_once(&AXLogVisibleFrame_onceToken, &__block_literal_global_131);
  return (id)AXLogVisibleFrame___logObj;
}

id AXLogOpaqueElements()
{
  if (AXLogOpaqueElements_onceToken != -1)
    dispatch_once(&AXLogOpaqueElements_onceToken, &__block_literal_global_133);
  return (id)AXLogOpaqueElements___logObj;
}

id AXLogVectorKit()
{
  if (AXLogVectorKit_onceToken != -1)
    dispatch_once(&AXLogVectorKit_onceToken, &__block_literal_global_137);
  return (id)AXLogVectorKit___logObj;
}

id AXLogRemoteElement()
{
  if (AXLogRemoteElement_onceToken != -1)
    dispatch_once(&AXLogRemoteElement_onceToken, &__block_literal_global_139);
  return (id)AXLogRemoteElement___logObj;
}

id AXLogEscape()
{
  if (AXLogEscape_onceToken != -1)
    dispatch_once(&AXLogEscape_onceToken, &__block_literal_global_141);
  return (id)AXLogEscape___logObj;
}

id MAGLogCommon()
{
  if (MAGLogCommon_onceToken != -1)
    dispatch_once(&MAGLogCommon_onceToken, &__block_literal_global_143);
  return (id)MAGLogCommon___logObj;
}

id MAGLogBrightness()
{
  if (MAGLogBrightness_onceToken != -1)
    dispatch_once(&MAGLogBrightness_onceToken, &__block_literal_global_145);
  return (id)MAGLogBrightness___logObj;
}

id AXLogMotionCues()
{
  if (AXLogMotionCues_onceToken != -1)
    dispatch_once(&AXLogMotionCues_onceToken, &__block_literal_global_147_0);
  return (id)AXLogMotionCues___logObj;
}

id AXLogSpeechAssetDownload()
{
  if (AXLogSpeechAssetDownload_onceToken != -1)
    dispatch_once(&AXLogSpeechAssetDownload_onceToken, &__block_literal_global_149_0);
  return (id)AXLogSpeechAssetDownload___logObj;
}

id AXLogCharacterVoices()
{
  if (AXLogCharacterVoices_onceToken != -1)
    dispatch_once(&AXLogCharacterVoices_onceToken, &__block_literal_global_151_0);
  return (id)AXLogCharacterVoices___logObj;
}

id AXLogSpeechSynthesis()
{
  if (AXLogSpeechSynthesis_onceToken != -1)
    dispatch_once(&AXLogSpeechSynthesis_onceToken, &__block_literal_global_153_0);
  return (id)AXLogSpeechSynthesis___logObj;
}

id AXLogOrator()
{
  if (AXLogOrator_onceToken != -1)
    dispatch_once(&AXLogOrator_onceToken, &__block_literal_global_155_0);
  return (id)AXLogOrator___logObj;
}

id AXLogSpeakSelection()
{
  if (AXLogSpeakSelection_onceToken != -1)
    dispatch_once(&AXLogSpeakSelection_onceToken, &__block_literal_global_157_0);
  return (id)AXLogSpeakSelection___logObj;
}

id AXLogSpeakTyping()
{
  if (AXLogSpeakTyping_onceToken != -1)
    dispatch_once(&AXLogSpeakTyping_onceToken, &__block_literal_global_159);
  return (id)AXLogSpeakTyping___logObj;
}

id AXLogSpeakScreen()
{
  if (AXLogSpeakScreen_onceToken != -1)
    dispatch_once(&AXLogSpeakScreen_onceToken, &__block_literal_global_161);
  return (id)AXLogSpeakScreen___logObj;
}

id AXLogSpeakFingerManager()
{
  if (AXLogSpeakFingerManager_onceToken != -1)
    dispatch_once(&AXLogSpeakFingerManager_onceToken, &__block_literal_global_163_0);
  return (id)AXLogSpeakFingerManager___logObj;
}

id AXLogSpokenContentTextProcessing()
{
  if (AXLogSpokenContentTextProcessing_onceToken != -1)
    dispatch_once(&AXLogSpokenContentTextProcessing_onceToken, &__block_literal_global_165);
  return (id)AXLogSpokenContentTextProcessing___logObj;
}

id SWCHLogCommon()
{
  if (SWCHLogCommon_onceToken != -1)
    dispatch_once(&SWCHLogCommon_onceToken, &__block_literal_global_167_0);
  return (id)SWCHLogCommon___logObj;
}

id SWCHLogElementNav()
{
  if (SWCHLogElementNav_onceToken != -1)
    dispatch_once(&SWCHLogElementNav_onceToken, &__block_literal_global_169_0);
  return (id)SWCHLogElementNav___logObj;
}

id SWCHLogPauseResume()
{
  if (SWCHLogPauseResume_onceToken != -1)
    dispatch_once(&SWCHLogPauseResume_onceToken, &__block_literal_global_171_0);
  return (id)SWCHLogPauseResume___logObj;
}

id SWCHLogHW()
{
  if (SWCHLogHW_onceToken != -1)
    dispatch_once(&SWCHLogHW_onceToken, &__block_literal_global_173_0);
  return (id)SWCHLogHW___logObj;
}

id AXLogTapticTime()
{
  if (AXLogTapticTime_onceToken != -1)
    dispatch_once(&AXLogTapticTime_onceToken, &__block_literal_global_175_0);
  return (id)AXLogTapticTime___logObj;
}

id AXLogTouchAccommodations()
{
  if (AXLogTouchAccommodations_onceToken != -1)
    dispatch_once(&AXLogTouchAccommodations_onceToken, &__block_literal_global_177_0);
  return (id)AXLogTouchAccommodations___logObj;
}

id AXLogIDS()
{
  if (AXLogIDS_onceToken != -1)
    dispatch_once(&AXLogIDS_onceToken, &__block_literal_global_179_0);
  return (id)AXLogIDS___logObj;
}

id VOTLogCommon()
{
  if (VOTLogCommon_onceToken != -1)
    dispatch_once(&VOTLogCommon_onceToken, &__block_literal_global_181);
  return (id)VOTLogCommon___logObj;
}

id VOTLogLayoutChange()
{
  if (VOTLogLayoutChange_onceToken != -1)
    dispatch_once(&VOTLogLayoutChange_onceToken, &__block_literal_global_183_0);
  return (id)VOTLogLayoutChange___logObj;
}

id VOTLogHandwriting()
{
  if (VOTLogHandwriting_onceToken != -1)
    dispatch_once(&VOTLogHandwriting_onceToken, &__block_literal_global_185);
  return (id)VOTLogHandwriting___logObj;
}

id VOTLogSpeech()
{
  if (VOTLogSpeech_onceToken != -1)
    dispatch_once(&VOTLogSpeech_onceToken, &__block_literal_global_187);
  return (id)VOTLogSpeech___logObj;
}

id VOTLogICloud()
{
  if (VOTLogICloud_onceToken != -1)
    dispatch_once(&VOTLogICloud_onceToken, &__block_literal_global_189);
  return (id)VOTLogICloud___logObj;
}

id VOTLogAudio()
{
  if (VOTLogAudio_onceToken != -1)
    dispatch_once(&VOTLogAudio_onceToken, &__block_literal_global_191);
  return (id)VOTLogAudio___logObj;
}

id VOTLogElement()
{
  if (VOTLogElement_onceToken != -1)
    dispatch_once(&VOTLogElement_onceToken, &__block_literal_global_193);
  return (id)VOTLogElement___logObj;
}

id VOTLogEvent()
{
  if (VOTLogEvent_onceToken != -1)
    dispatch_once(&VOTLogEvent_onceToken, &__block_literal_global_195);
  return (id)VOTLogEvent___logObj;
}

id VOTLogBraille()
{
  if (VOTLogBraille_onceToken != -1)
    dispatch_once(&VOTLogBraille_onceToken, &__block_literal_global_197);
  return (id)VOTLogBraille___logObj;
}

id VOTLogBrailleGestures()
{
  if (VOTLogBrailleGestures_onceToken != -1)
    dispatch_once(&VOTLogBrailleGestures_onceToken, &__block_literal_global_199_0);
  return (id)VOTLogBrailleGestures___logObj;
}

id VOTLogNotifications()
{
  if (VOTLogNotifications_onceToken != -1)
    dispatch_once(&VOTLogNotifications_onceToken, &__block_literal_global_201);
  return (id)VOTLogNotifications___logObj;
}

id VOTLogKeyboard()
{
  if (VOTLogKeyboard_onceToken != -1)
    dispatch_once(&VOTLogKeyboard_onceToken, &__block_literal_global_203);
  return (id)VOTLogKeyboard___logObj;
}

id VOTLogTVFocus()
{
  if (VOTLogTVFocus_onceToken != -1)
    dispatch_once(&VOTLogTVFocus_onceToken, &__block_literal_global_205);
  return (id)VOTLogTVFocus___logObj;
}

id VOTLogTVExplorer()
{
  if (VOTLogTVExplorer_onceToken != -1)
    dispatch_once(&VOTLogTVExplorer_onceToken, &__block_literal_global_207_0);
  return (id)VOTLogTVExplorer___logObj;
}

id VOTLogIAP()
{
  if (VOTLogIAP_onceToken != -1)
    dispatch_once(&VOTLogIAP_onceToken, &__block_literal_global_209);
  return (id)VOTLogIAP___logObj;
}

id VOTLogLifeCycle()
{
  if (VOTLogLifeCycle_onceToken != -1)
    dispatch_once(&VOTLogLifeCycle_onceToken, &__block_literal_global_211);
  return (id)VOTLogLifeCycle___logObj;
}

id VOTLogMagicTap()
{
  if (VOTLogMagicTap_onceToken != -1)
    dispatch_once(&VOTLogMagicTap_onceToken, &__block_literal_global_213);
  return (id)VOTLogMagicTap___logObj;
}

id VOTLogRotor()
{
  if (VOTLogRotor_onceToken != -1)
    dispatch_once(&VOTLogRotor_onceToken, &__block_literal_global_215);
  return (id)VOTLogRotor___logObj;
}

id VOTLogQuickSettings()
{
  if (VOTLogQuickSettings_onceToken != -1)
    dispatch_once(&VOTLogQuickSettings_onceToken, &__block_literal_global_217_0);
  return (id)VOTLogQuickSettings___logObj;
}

id VOTLogSimpleTap()
{
  if (VOTLogSimpleTap_onceToken != -1)
    dispatch_once(&VOTLogSimpleTap_onceToken, &__block_literal_global_219);
  return (id)VOTLogSimpleTap___logObj;
}

id AXLogPunctuationStorage()
{
  if (AXLogPunctuationStorage_onceToken != -1)
    dispatch_once(&AXLogPunctuationStorage_onceToken, &__block_literal_global_221);
  return (id)AXLogPunctuationStorage___logObj;
}

id VOTLogActivities()
{
  if (VOTLogActivities_onceToken != -1)
    dispatch_once(&VOTLogActivities_onceToken, &__block_literal_global_223);
  return (id)VOTLogActivities___logObj;
}

id VOTLogWebPageMovement()
{
  if (VOTLogWebPageMovement_onceToken != -1)
    dispatch_once(&VOTLogWebPageMovement_onceToken, &__block_literal_global_225_0);
  return (id)VOTLogWebPageMovement___logObj;
}

id VOTLogCommands()
{
  if (VOTLogCommands_onceToken != -1)
    dispatch_once(&VOTLogCommands_onceToken, &__block_literal_global_227);
  return (id)VOTLogCommands___logObj;
}

id VOTLogImageExplorer()
{
  if (VOTLogImageExplorer_onceToken != -1)
    dispatch_once(&VOTLogImageExplorer_onceToken, &__block_literal_global_229);
  return (id)VOTLogImageExplorer___logObj;
}

id AXLogVisualAlerts()
{
  if (AXLogVisualAlerts_onceToken != -1)
    dispatch_once(&AXLogVisualAlerts_onceToken, &__block_literal_global_231);
  return (id)AXLogVisualAlerts___logObj;
}

id AXLogUltronKShot()
{
  if (AXLogUltronKShot_onceToken != -1)
    dispatch_once(&AXLogUltronKShot_onceToken, &__block_literal_global_237);
  return (id)AXLogUltronKShot___logObj;
}

id AXLogAudiogram()
{
  if (AXLogAudiogram_onceToken != -1)
    dispatch_once(&AXLogAudiogram_onceToken, &__block_literal_global_239);
  return (id)AXLogAudiogram___logObj;
}

id AXLogDisplayFilters()
{
  if (AXLogDisplayFilters_onceToken != -1)
    dispatch_once(&AXLogDisplayFilters_onceToken, &__block_literal_global_241);
  return (id)AXLogDisplayFilters___logObj;
}

id ZOOMLogCommon()
{
  if (ZOOMLogCommon_onceToken != -1)
    dispatch_once(&ZOOMLogCommon_onceToken, &__block_literal_global_243);
  return (id)ZOOMLogCommon___logObj;
}

id ZOOMLogEvents()
{
  if (ZOOMLogEvents_onceToken != -1)
    dispatch_once(&ZOOMLogEvents_onceToken, &__block_literal_global_245);
  return (id)ZOOMLogEvents___logObj;
}

id AXLogUnitTesting()
{
  if (AXLogUnitTesting_onceToken != -1)
    dispatch_once(&AXLogUnitTesting_onceToken, &__block_literal_global_247);
  return (id)AXLogUnitTesting___logObj;
}

id AXLogPerfTesting()
{
  if (AXLogPerfTesting_onceToken != -1)
    dispatch_once(&AXLogPerfTesting_onceToken, &__block_literal_global_249);
  return (id)AXLogPerfTesting___logObj;
}

id AXMediaLogCommon()
{
  if (AXMediaLogCommon_onceToken != -1)
    dispatch_once(&AXMediaLogCommon_onceToken, &__block_literal_global_251);
  return (id)AXMediaLogCommon___logObj;
}

id AXMediaLogSettings()
{
  if (AXMediaLogSettings_onceToken != -1)
    dispatch_once(&AXMediaLogSettings_onceToken, &__block_literal_global_253);
  return (id)AXMediaLogSettings___logObj;
}

id AXMediaLogService()
{
  if (AXMediaLogService_onceToken != -1)
    dispatch_once(&AXMediaLogService_onceToken, &__block_literal_global_255);
  return (id)AXMediaLogService___logObj;
}

id AXMediaLogEngineCache()
{
  if (AXMediaLogEngineCache_onceToken != -1)
    dispatch_once(&AXMediaLogEngineCache_onceToken, &__block_literal_global_257);
  return (id)AXMediaLogEngineCache___logObj;
}

id AXMediaLogEnginePriority()
{
  if (AXMediaLogEnginePriority_onceToken != -1)
    dispatch_once(&AXMediaLogEnginePriority_onceToken, &__block_literal_global_259);
  return (id)AXMediaLogEnginePriority___logObj;
}

id AXMediaLogScreenGrab()
{
  if (AXMediaLogScreenGrab_onceToken != -1)
    dispatch_once(&AXMediaLogScreenGrab_onceToken, &__block_literal_global_261);
  return (id)AXMediaLogScreenGrab___logObj;
}

id AXMediaLogOCR()
{
  if (AXMediaLogOCR_onceToken != -1)
    dispatch_once(&AXMediaLogOCR_onceToken, &__block_literal_global_263);
  return (id)AXMediaLogOCR___logObj;
}

id AXMediaLogMLElement()
{
  if (AXMediaLogMLElement_onceToken != -1)
    dispatch_once(&AXMediaLogMLElement_onceToken, &__block_literal_global_265);
  return (id)AXMediaLogMLElement___logObj;
}

id AXMediaLogTextProcessing()
{
  if (AXMediaLogTextProcessing_onceToken != -1)
    dispatch_once(&AXMediaLogTextProcessing_onceToken, &__block_literal_global_267);
  return (id)AXMediaLogTextProcessing___logObj;
}

id AXMediaLogElementVision()
{
  if (AXMediaLogElementVision_onceToken != -1)
    dispatch_once(&AXMediaLogElementVision_onceToken, &__block_literal_global_269_0);
  return (id)AXMediaLogElementVision___logObj;
}

id AXMediaLogTextLayout()
{
  if (AXMediaLogTextLayout_onceToken != -1)
    dispatch_once(&AXMediaLogTextLayout_onceToken, &__block_literal_global_271);
  return (id)AXMediaLogTextLayout___logObj;
}

id AXMediaLogResults()
{
  if (AXMediaLogResults_onceToken != -1)
    dispatch_once(&AXMediaLogResults_onceToken, &__block_literal_global_273);
  return (id)AXMediaLogResults___logObj;
}

id AXMediaLogTracking()
{
  if (AXMediaLogTracking_onceToken != -1)
    dispatch_once(&AXMediaLogTracking_onceToken, &__block_literal_global_275);
  return (id)AXMediaLogTracking___logObj;
}

id AXMediaLogOutput()
{
  if (AXMediaLogOutput_onceToken != -1)
    dispatch_once(&AXMediaLogOutput_onceToken, &__block_literal_global_277);
  return (id)AXMediaLogOutput___logObj;
}

id AXMediaLogSpeech()
{
  if (AXMediaLogSpeech_onceToken != -1)
    dispatch_once(&AXMediaLogSpeech_onceToken, &__block_literal_global_279);
  return (id)AXMediaLogSpeech___logObj;
}

id AXMediaLogSounds()
{
  if (AXMediaLogSounds_onceToken != -1)
    dispatch_once(&AXMediaLogSounds_onceToken, &__block_literal_global_281);
  return (id)AXMediaLogSounds___logObj;
}

id AXMediaLogHaptics()
{
  if (AXMediaLogHaptics_onceToken != -1)
    dispatch_once(&AXMediaLogHaptics_onceToken, &__block_literal_global_283);
  return (id)AXMediaLogHaptics___logObj;
}

id AXMediaLogCaptionDescriptions()
{
  if (AXMediaLogCaptionDescriptions_onceToken != -1)
    dispatch_once(&AXMediaLogCaptionDescriptions_onceToken, &__block_literal_global_285);
  return (id)AXMediaLogCaptionDescriptions___logObj;
}

id AXMediaLogDiagnostics()
{
  if (AXMediaLogDiagnostics_onceToken != -1)
    dispatch_once(&AXMediaLogDiagnostics_onceToken, &__block_literal_global_287);
  return (id)AXMediaLogDiagnostics___logObj;
}

id AXMediaLogLanguageTranslation()
{
  if (AXMediaLogLanguageTranslation_onceToken != -1)
    dispatch_once(&AXMediaLogLanguageTranslation_onceToken, &__block_literal_global_289);
  return (id)AXMediaLogLanguageTranslation___logObj;
}

id AXLogAirPodSettings()
{
  if (AXLogAirPodSettings_onceToken != -1)
    dispatch_once(&AXLogAirPodSettings_onceToken, &__block_literal_global_291);
  return (id)AXLogAirPodSettings___logObj;
}

id AXPlatformTranslationLogCommon()
{
  if (AXPlatformTranslationLogCommon_onceToken != -1)
    dispatch_once(&AXPlatformTranslationLogCommon_onceToken, &__block_literal_global_297);
  return (id)AXPlatformTranslationLogCommon___logObj;
}

id AXLogTemp()
{
  if (AXLogTemp_onceToken != -1)
    dispatch_once(&AXLogTemp_onceToken, &__block_literal_global_299);
  return (id)AXLogTemp___logObj;
}

id BRLLogTranslation()
{
  if (BRLLogTranslation_onceToken != -1)
    dispatch_once(&BRLLogTranslation_onceToken, &__block_literal_global_301);
  return (id)BRLLogTranslation___logObj;
}

id AXLogBackTap()
{
  if (AXLogBackTap_onceToken != -1)
    dispatch_once(&AXLogBackTap_onceToken, &__block_literal_global_303);
  return (id)AXLogBackTap___logObj;
}

id AXLogSoundActions()
{
  if (AXLogSoundActions_onceToken != -1)
    dispatch_once(&AXLogSoundActions_onceToken, &__block_literal_global_305);
  return (id)AXLogSoundActions___logObj;
}

id CLFLogCommon()
{
  if (CLFLogCommon_onceToken != -1)
    dispatch_once(&CLFLogCommon_onceToken, &__block_literal_global_307);
  return (id)CLFLogCommon___logObj;
}

id CLFLogSettings()
{
  if (CLFLogSettings_onceToken != -1)
    dispatch_once(&CLFLogSettings_onceToken, &__block_literal_global_309);
  return (id)CLFLogSettings___logObj;
}

id HTLogCommon()
{
  if (HTLogCommon_onceToken != -1)
    dispatch_once(&HTLogCommon_onceToken, &__block_literal_global_311);
  return (id)HTLogCommon___logObj;
}

id LiveSpeechLogCommon()
{
  if (LiveSpeechLogCommon_onceToken != -1)
    dispatch_once(&LiveSpeechLogCommon_onceToken, &__block_literal_global_313);
  return (id)LiveSpeechLogCommon___logObj;
}

id AXLogTwiceRemoteScreen()
{
  if (AXLogTwiceRemoteScreen_onceToken != -1)
    dispatch_once(&AXLogTwiceRemoteScreen_onceToken, &__block_literal_global_317);
  return (id)AXLogTwiceRemoteScreen___logObj;
}

id AXLogHapticMusic()
{
  if (AXLogHapticMusic_onceToken != -1)
    dispatch_once(&AXLogHapticMusic_onceToken, &__block_literal_global_319);
  return (id)AXLogHapticMusic___logObj;
}

id AXLogAVS()
{
  if (AXLogAVS_onceToken != -1)
    dispatch_once(&AXLogAVS_onceToken, &__block_literal_global_321);
  return (id)AXLogAVS___logObj;
}

uint64_t _AXAccessQueuePerformBlockNoQueueingOrLocking(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void type metadata accessor for AXCDomain(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A700);
}

void type metadata accessor for AXSVoiceOverBrailleGesturesSoundOption(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A708);
}

void type metadata accessor for AXSVoiceOverBrailleMode(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A710);
}

void type metadata accessor for AXSVoiceOverKeyboardModifierChoice(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A718);
}

void type metadata accessor for AXSVoiceOverNavigationStyle(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A720);
}

void type metadata accessor for AXSVoiceOverNumberFeedback(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A728);
}

void type metadata accessor for AXSVoiceOverFeedbackOption(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A730);
}

void type metadata accessor for AXMagnifierFilterSetIdentifier(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A738);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_18EC17AA8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_18EC17AC8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A740);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A748);
}

uint64_t initializeBufferWithCopyOfBuffer for VoiceSelection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_18EC17B54(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_18EC17B74(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A750);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A758);
}

unint64_t sub_18EC17BC8()
{
  unint64_t result;

  result = sub_18EC583B8((uint64_t)&unk_1E28C5278);
  qword_1EE13F4D8 = result;
  return result;
}

unint64_t sub_18EC17BEC()
{
  unint64_t result;

  result = sub_18EC583B8((uint64_t)&unk_1E28C5338);
  qword_1EE13F4D0 = result;
  return result;
}

unint64_t sub_18EC17C10()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB30;
  *(_QWORD *)(inited + 32) = 1768841544;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = &unk_1E28C5458;
  *(_QWORD *)(inited + 56) = 1735287112;
  *(_QWORD *)(inited + 64) = 0xE400000000000000;
  *(_QWORD *)(inited + 72) = &unk_1E28C5498;
  result = sub_18EC584D8(inited);
  qword_1EE13F4F0 = result;
  return result;
}

unint64_t sub_18EC17C84()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  *(_QWORD *)(inited + 32) = 42;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = &unk_1E28C54C8;
  result = sub_18EC584D8(inited);
  qword_1EE13F4F8 = result;
  return result;
}

BOOL sub_18EC17CE0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_18EC17CF4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_18EC17D04(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x193FFA504]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for UScriptCode(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A768);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_18EC17D78(a1, &qword_1EE13A770);
}

void sub_18EC17D78(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_18EC17DBC(uint64_t a1, uint64_t a2)
{
  return sub_18EC17E84(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_18EC17DC8()
{
  sub_18EC671A0();
  sub_18EC6720C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC17E08()
{
  uint64_t v0;

  sub_18EC671A0();
  sub_18EC67AAC();
  sub_18EC6720C();
  v0 = sub_18EC67ADC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_18EC17E78(uint64_t a1, uint64_t a2)
{
  return sub_18EC17E84(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_18EC17E84(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_18EC671A0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18EC17EC0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_18EC67188();
  *a2 = 0;
  return result;
}

uint64_t sub_18EC17F34(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_18EC67194();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_18EC17FB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_18EC671A0();
  v2 = sub_18EC6717C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18EC17FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_18EC671A0();
  v2 = v1;
  if (v0 == sub_18EC671A0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_18EC679A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_18EC18078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18EC6717C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18EC180BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_18EC671A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18EC180E4()
{
  sub_18EC18198(&qword_1EE13A790, (uint64_t)&unk_18EC6C048);
  sub_18EC18198(&qword_1EE13A798, (uint64_t)&unk_18EC6BF9C);
  return sub_18EC6774C();
}

uint64_t sub_18EC18150()
{
  return sub_18EC18198(&qword_1EE13A778, (uint64_t)&unk_18EC6BF60);
}

uint64_t sub_18EC18174()
{
  return sub_18EC18198(&qword_1EE13A780, (uint64_t)&unk_18EC6BF34);
}

uint64_t sub_18EC18198(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x193FFA51C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC181D8()
{
  return sub_18EC18198(&qword_1EE13A788, (uint64_t)&unk_18EC6BFD0);
}

uint64_t axObservationTrackingStream<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_18EC673F8();
  MEMORY[0x1E0C80A78](v6);
  v11 = a3;
  v12 = a1;
  v13 = a2;
  (*(void (**)(_BYTE *, _QWORD))(v7 + 104))(&v10[-v8], *MEMORY[0x1E0DF07B8]);
  return sub_18EC67458();
}

uint64_t sub_18EC182C8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v29 = a3;
  v30 = a1;
  v6 = sub_18EC6741C();
  v7 = *(_QWORD *)(v6 - 8);
  v32 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v29 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = sub_18EC673E0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - v16;
  a2(v15);
  v18 = v30;
  sub_18EC67404();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_18EC673B0();
  v19 = sub_18EC673C8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
  v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v31, v18, v6);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = (v32 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v23[v21], v20, v6);
  v24 = &v23[v22];
  v25 = v29;
  *(_QWORD *)v24 = a2;
  *((_QWORD *)v24 + 1) = v25;
  swift_retain();
  v26 = sub_18EC5D3C4((uint64_t)v12, (uint64_t)&unk_1EE13A8D8, (uint64_t)v23);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a4;
  *(_QWORD *)(v27 + 24) = v26;
  return sub_18EC673EC();
}

uint64_t sub_18EC18508(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC182C8(a1, *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_18EC18514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = swift_task_alloc();
  v8 = sub_18EC673E0();
  v7[7] = v8;
  v7[8] = *(_QWORD *)(v8 - 8);
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC18598()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  if ((sub_18EC67470() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *(_QWORD *)v2 = v0;
    *(_QWORD *)(v2 + 8) = sub_18EC18638;
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v2 + 40) = *(_QWORD *)(v0 + 40);
    *(_OWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 16) = v3;
    return swift_task_switch();
  }
}

uint64_t sub_18EC18638()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC1869C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  sub_18EC6741C();
  sub_18EC67404();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((sub_18EC67470() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)v5 = v0;
    *(_QWORD *)(v5 + 8) = sub_18EC18638;
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v5 + 40) = *(_QWORD *)(v0 + 40);
    *(_OWORD *)(v5 + 24) = v7;
    *(_QWORD *)(v5 + 16) = v6;
    return swift_task_switch();
  }
}

uint64_t sub_18EC1878C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t withNextChange<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_18EC187E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  type metadata accessor for ObservationSentinel();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 48) = v2;
  *(_BYTE *)(v2 + 16) = 0;
  v6 = *(_OWORD *)(v0 + 24);
  sub_18EC670BC();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = v6;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_18EC188BC;
  return sub_18EC679B0();
}

uint64_t sub_18EC188BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC18928()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC1895C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC1899C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF07B8];
  v3 = sub_18EC673F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t type metadata accessor for ObservationSentinel()
{
  uint64_t result;

  result = qword_1EE13A7E8;
  if (!qword_1EE13A7E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18EC18A20()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC67098();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_18EC18AA4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC67098();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_18EC18B30()
{
  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC6708C();
  return swift_release();
}

uint64_t sub_18EC18BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC15AXCoreUtilitiesP33_AB91057B37695AB1D964E83478A9F98119ObservationSentinel___observationRegistrar;
  v2 = sub_18EC670C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_18EC18C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_18EC18C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_18EC18CF4;
  return sub_18EC67A40();
}

uint64_t sub_18EC18CF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18EC18D68()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC18D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_18EC18E18;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_18EC18E18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18EC18E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = v11;
  v22 = v10;
  v23 = v12;
  v24 = v13;
  v16 = v11;
  v17 = v10;
  v18 = v7;
  v19 = v12;
  v20 = v13;
  sub_18EC67080();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, a5);
}

uint64_t sub_18EC18EFC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC67098();
  v3 = swift_release();
  return a2(v3);
}

uint64_t (*sub_18EC18F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A8C0);
  v10 = sub_18EC67374();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v19 - v13, a2, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, v14, v10);
  v17 = (_QWORD *)(v16 + ((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v17 = a3;
  v17[1] = a4;
  swift_retain();
  swift_retain();
  return sub_18EC194C4;
}

uint64_t sub_18EC190C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC67098();
  v5 = swift_release();
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    sub_18EC67380();
    sub_18EC19538(&qword_1EE13A8C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
    swift_allocError();
    sub_18EC670F8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A8C0);
    sub_18EC67374();
    return sub_18EC6735C();
  }
  else
  {
    a3(v5);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A8C0);
    sub_18EC67374();
    return sub_18EC67368();
  }
}

uint64_t sub_18EC1925C()
{
  swift_getKeyPath();
  sub_18EC19538(&qword_1EE13A8B8, (uint64_t (*)(uint64_t))type metadata accessor for ObservationSentinel, (uint64_t)&unk_18EC6C0D0);
  sub_18EC6708C();
  return swift_release();
}

uint64_t sub_18EC19304()
{
  return sub_18EC1925C();
}

uint64_t sub_18EC1930C()
{
  return type metadata accessor for ObservationSentinel();
}

uint64_t sub_18EC19314()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18EC670C8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_18EC19394()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_18EC193A4(uint64_t a1)
{
  uint64_t *v1;

  return sub_18EC18E60(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_18EC193B0()
{
  uint64_t v0;

  return sub_18EC18EFC(*(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t (*sub_18EC193BC())()
{
  uint64_t *v0;

  return sub_18EC18F9C(v0[3], v0[4], v0[5], v0[6], v0[2]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x193FFA510](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_18EC19410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A8C0);
  v1 = sub_18EC67374();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC194C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A8C0);
  v1 = *(_QWORD *)(sub_18EC67374() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_18EC190C0(*(_QWORD *)(v0 + 24), v0 + v2, *(void (**)(uint64_t))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_18EC19538(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x193FFA51C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC19578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_18EC6741C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC19610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = *(_QWORD *)(sub_18EC6741C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = (uint64_t)v1 + v6;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_18EC19738;
  return sub_18EC18514(a1, v7, v8, v9, v11, v12, v4);
}

uint64_t sub_18EC196D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC196F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A8C0);
  return sub_18EC67464();
}

void sub_18EC1973C()
{
  sub_18EC19394();
}

void static AXKeyedArchiveSourcable.migrate(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t AssociatedTypeWitness;
  uint64_t ObjCClassFromMetadata;
  uint64_t AssociatedConformanceWitness;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v13[4];

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_18EC1A508(a1, a2);
  v6 = sub_18EC1A44C();
  sub_18EC1A54C(a1, a2);
  if (!v2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v10 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setClass_forClassName_, ObjCClassFromMetadata, v10);

    objc_msgSend(v6, sel_setRequiresSecureCoding_, 0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE13A8E0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(v11 + 32) = AssociatedTypeWitness;
    sub_18EC671A0();
    sub_18EC6750C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13[3])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v13[0] = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
        sub_18EC1A614();
        sub_18EC675E4();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      sub_18EC1A590((uint64_t)v13);
    }
    sub_18EC1A5D0();
    swift_allocError();
    *v12 = 5;
    swift_willThrow();

  }
}

void static Array<A>.migrate(from:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  id v10;
  uint64_t AssociatedTypeWitness;
  uint64_t ObjCClassFromMetadata;
  uint64_t AssociatedConformanceWitness;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _QWORD v23[4];
  _QWORD v24[2];
  _QWORD v25[6];

  v9 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_18EC1A508(a1, a2);
  v10 = sub_18EC1A44C();
  sub_18EC1A54C(a1, a2);
  if (!v4)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v14 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setClass_forClassName_, ObjCClassFromMetadata, v14);

    objc_msgSend(v10, sel_setRequiresSecureCoding_, 0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE13A8E0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_18EC6BB30;
    *(_QWORD *)(v15 + 32) = AssociatedTypeWitness;
    *(_QWORD *)(v15 + 40) = sub_18EC1A6F0(0, &qword_1EE13A8F8);
    sub_18EC671A0();
    sub_18EC6750C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25[3])
    {
      v16 = sub_18EC67338();
      v17 = swift_dynamicCast();
      if ((v17 & 1) != 0)
      {
        v24[1] = v24;
        v25[0] = v25[5];
        MEMORY[0x1E0C80A78](v17);
        v23[2] = a3;
        v23[3] = a4;
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
        v19 = MEMORY[0x193FFA51C](MEMORY[0x1E0DEAF50], v16);
        v21 = sub_18EC19DB4((void (*)(char *, char *))sub_18EC1A670, (uint64_t)v23, v16, v18, MEMORY[0x1E0DEDCE8], v19, MEMORY[0x1E0DEDD18], v20);
        swift_bridgeObjectRelease();
        v25[0] = v21;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A900);
        sub_18EC1A68C();
        sub_18EC675E4();
        swift_bridgeObjectRelease();
LABEL_7:

        return;
      }
    }
    else
    {
      sub_18EC1A590((uint64_t)v25);
    }
    sub_18EC1A5D0();
    swift_allocError();
    *v22 = 5;
    swift_willThrow();
    goto LABEL_7;
  }
}

uint64_t sub_18EC19D08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v4 = swift_checkMetadataState();
  result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_18EC19DB4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_18EC674DC();
  if (!v20)
    return sub_18EC67308();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_18EC670EC();
  v34 = sub_18EC6768C();
  sub_18EC67668();
  v37 = v8;
  result = sub_18EC674D0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_18EC674F4();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_18EC67674();
      result = sub_18EC674E8();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_18EC1A0A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  static Array<A>.migrate(from:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

void static Set<>.migrate(from:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t ObjCClassFromMetadata;
  uint64_t AssociatedConformanceWitness;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _QWORD v32[7];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_18EC1A508(a1, a2);
  v16 = sub_18EC1A44C();
  sub_18EC1A54C(a1, a2);
  if (!v7)
  {
    v34 = a7;
    v35 = a6;
    v33 = a5;
    objc_msgSend(v16, sel_setRequiresSecureCoding_, 0);
    v17 = a4;
    v18 = a3;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v22 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setClass_forClassName_, ObjCClassFromMetadata, v22);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE13A8E0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_18EC6BB30;
    *(_QWORD *)(v23 + 32) = AssociatedTypeWitness;
    *(_QWORD *)(v23 + 40) = sub_18EC1A6F0(0, (unint64_t *)&unk_1EE13A910);
    sub_18EC671A0();
    sub_18EC6750C();
    v24 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36[3])
    {
      v25 = sub_18EC674C4();
      v26 = swift_dynamicCast();
      if ((v26 & 1) != 0)
      {
        v36[0] = v36[5];
        MEMORY[0x1E0C80A78](v26);
        v32[2] = v18;
        v32[3] = v17;
        v32[4] = v33;
        v32[5] = v35;
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
        v28 = MEMORY[0x193FFA51C](MEMORY[0x1E0DEB3E0], v25);
        v30 = sub_18EC19DB4((void (*)(char *, char *))sub_18EC1A728, (uint64_t)v32, v25, v27, MEMORY[0x1E0DEDCE8], v28, MEMORY[0x1E0DEDD18], v29);
        swift_bridgeObjectRelease();
        v36[0] = v30;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A900);
        sub_18EC1A68C();
        sub_18EC675E4();
        swift_bridgeObjectRelease();
LABEL_7:

        return;
      }
    }
    else
    {
      sub_18EC1A590((uint64_t)v36);
    }
    sub_18EC1A5D0();
    swift_allocError();
    *v31 = 5;
    swift_willThrow();
    goto LABEL_7;
  }
}

void sub_18EC1A428(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  static Set<>.migrate(from:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 16), a5);
}

id sub_18EC1A44C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_18EC66EB8();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_18EC66EAC();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_18EC1A508(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_18EC1A54C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_18EC1A590(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_18EC1A5D0()
{
  unint64_t result;

  result = qword_1EE13A8F0;
  if (!qword_1EE13A8F0)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXCodingError, &type metadata for AXCodingError);
    atomic_store(result, (unint64_t *)&qword_1EE13A8F0);
  }
  return result;
}

unint64_t sub_18EC1A614()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE139A70;
  if (!qword_1EE139A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE139A68);
    v2 = MEMORY[0x1E0DEC1A0];
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEA0C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE139A70);
  }
  return result;
}

uint64_t sub_18EC1A670@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC19D08(a1);
}

unint64_t sub_18EC1A68C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE13A908;
  if (!qword_1EE13A908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A900);
    v2 = sub_18EC1A614();
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEAF18], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE13A908);
  }
  return result;
}

uint64_t sub_18EC1A6F0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_18EC1A728@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC19D08(a1);
}

uint64_t dispatch thunk of static AnyHashableMigratable.migrate(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static AXKeyedArchiverHelper.classNameForArchive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXKeyedArchiverHelper.hashableValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_18EC1A770(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    result = a1;
  else
    result = 0;
  if (result)
    return sub_18EC1AA4C(result, a2, result, v5);
  return result;
}

uint64_t sub_18EC1A7CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[5];

  sub_18EC1B130(a1, (uint64_t)v11);
  if (v11[3])
  {
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      return result;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(a4 + 8))(v11, v9, v10, a3, a4);
    if (v4)
      return sub_18EC1A54C(v9, v10);
    sub_18EC1AC5C((uint64_t)v11, a1);
    sub_18EC1A54C(v9, v10);
  }
  return sub_18EC1B4F4((uint64_t)v11);
}

uint64_t sub_18EC1A8C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  sub_18EC1B130(a1, (uint64_t)v10);
  if (!v11)
    return sub_18EC1B4F4((uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    sub_18EC1B700(v9, a3, a4);
    result = swift_bridgeObjectRelease();
    if (!v4)
    {
      sub_18EC1B938((unint64_t *)&qword_1EE139A70, &qword_1EE139A68, MEMORY[0x1E0DEA0C0]);
      sub_18EC675E4();
      sub_18EC1AC5C((uint64_t)v10, a1);
      return sub_18EC1B4F4((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_18EC1A9B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = swift_conformsToProtocol2();
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = a1;
  else
    v7 = 0;
  if (!v7 || (result = sub_18EC1A7CC(a2, v7, v7, v6), !v2))
  {
    result = swift_conformsToProtocol2();
    if (result)
      v10 = result;
    else
      v10 = 0;
    if (result)
      v11 = a1;
    else
      v11 = 0;
    if (v11)
      return sub_18EC1A8C0(a2, v9, v11, v10);
  }
  return result;
}

uint64_t sub_18EC1AA4C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v9 = *(_QWORD *)aVersion_0;
  v8 = *(_QWORD *)&aVersion_0[8];
  *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
  v10 = sub_18EC1B684();
  *(_QWORD *)(inited + 64) = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 24) = 1;
  *(_QWORD *)(v11 + 32) = v9;
  *(_QWORD *)(v11 + 40) = v8;
  v18[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC4E9A8(a3, a4);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v18, a2);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v18);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_18EC6BB40;
  v14 = *(_QWORD *)aType_3;
  v13 = unk_1EE13B538;
  *(_QWORD *)(v12 + 56) = &type metadata for AXCodingKey;
  *(_QWORD *)(v12 + 64) = v10;
  v15 = swift_allocObject();
  *(_QWORD *)(v12 + 32) = v15;
  *(_QWORD *)(v15 + 16) = 0;
  *(_BYTE *)(v15 + 24) = 1;
  *(_QWORD *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 40) = v13;
  v18[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)v12);
  v16 = (_QWORD *)v18[0];
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v18, v16);
  swift_bridgeObjectRelease();
  return sub_18EC1B4F4((uint64_t)v18);
}

uint64_t sub_18EC1AC5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  char v10;
  uint64_t *v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[4];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  sub_18EC1B63C(a1, (uint64_t)&v36);
  if (!*((_QWORD *)&v37 + 1))
    return sub_18EC1B4F4((uint64_t)&v36);
  v39 = v36;
  v40 = v37;
  v41 = v38;
  if (!a2[2])
  {
    v36 = v39;
    v37 = v40;
    v38 = v41;
    sub_18EC1B990((uint64_t)&v36, (uint64_t)&v33);
    swift_beginAccess();
    sub_18EC1B9D8((uint64_t)&v33, v2 + 16);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    v6 = a2[2];
    if (v6)
      goto LABEL_5;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  a2 = sub_18EC1B4E0(a2);
  v6 = a2[2];
  if (!v6)
    goto LABEL_30;
LABEL_5:
  v7 = v6 - 1;
  sub_18EC1B5E8((__int128 *)&a2[5 * v6 - 1], (uint64_t)&v33);
  a2[2] = v7;
  sub_18EC1B5E8(&v33, (uint64_t)&v36);
  v8 = (_QWORD *)swift_bridgeObjectRetain();
  sub_18EC1B130(v8, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  sub_18EC1B8B8((uint64_t)&v36, (uint64_t)v29);
  if (*((_QWORD *)&v31 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v33 = v30;
    v34 = v31;
    v35 = v32;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_18EC67B48();
    if ((v10 & 1) != 0)
    {
      *(_QWORD *)&v26 = MEMORY[0x1E0DEE9E0];
      v11 = &qword_1EE139A68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
      v12 = (unint64_t *)&qword_1EE139A70;
      v13 = MEMORY[0x1E0DEA0C0];
    }
    else
    {
      *(_QWORD *)&v26 = MEMORY[0x1E0DEE9D8];
      v11 = &qword_1EE139A88;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A88);
      v12 = &qword_1EE139A90;
      v13 = MEMORY[0x1E0DEAF18];
    }
    sub_18EC1B938(v12, v11, v13);
    sub_18EC675E4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    sub_18EC1B4F4((uint64_t)&v30);
  }
  __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
  v14 = sub_18EC67B48();
  if ((v15 & 1) != 0)
  {
    sub_18EC1B578((uint64_t)&v33, (uint64_t)&v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
      v21 = sub_18EC67B30();
      v23 = v22;
      sub_18EC1B578((uint64_t)&v39, (uint64_t)&v26);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_18EC62678((uint64_t)&v26, v21, v23, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18EC1B938((unint64_t *)&qword_1EE139A70, &qword_1EE139A68, MEMORY[0x1E0DEA0C0]);
LABEL_27:
      sub_18EC675E4();
      sub_18EC1B5B4((uint64_t)&v33);
      v33 = v26;
      v34 = v27;
      v35 = v28;
    }
LABEL_28:
    sub_18EC1B578((uint64_t)&v33, (uint64_t)&v30);
    sub_18EC1AC5C(&v30, a2);
    swift_bridgeObjectRelease();
    sub_18EC1B4F4((uint64_t)&v30);
    sub_18EC1B5B4((uint64_t)&v33);
    sub_18EC1B5B4((uint64_t)&v39);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  v4 = v14;
  sub_18EC1B578((uint64_t)&v33, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A88);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_28;
  v3 = (char *)v25;
  if (v4 == *(_QWORD *)(v25 + 16))
  {
    sub_18EC1B578((uint64_t)&v39, (uint64_t)&v26);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_17:
      v17 = *((_QWORD *)v3 + 2);
      v16 = *((_QWORD *)v3 + 3);
      if (v17 >= v16 >> 1)
        v3 = sub_18EC2361C((char *)(v16 > 1), v17 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v17 + 1;
      v18 = &v3[40 * v17];
      v19 = v26;
      v20 = v27;
      *((_QWORD *)v18 + 8) = v28;
      *((_OWORD *)v18 + 2) = v19;
      *((_OWORD *)v18 + 3) = v20;
      goto LABEL_26;
    }
LABEL_31:
    v3 = sub_18EC2361C(0, v4 + 1, 1, v3);
    goto LABEL_17;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_24;
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  result = (uint64_t)sub_18EC1B6EC(v25);
  v3 = (char *)result;
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_33;
LABEL_24:
  if (v4 < *((_QWORD *)v3 + 2))
  {
    sub_18EC1B8FC((uint64_t)&v39, (uint64_t)&v3[40 * v4 + 32]);
LABEL_26:
    sub_18EC1B938(&qword_1EE139A90, &qword_1EE139A88, MEMORY[0x1E0DEAF18]);
    goto LABEL_27;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_18EC1B130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  __int128 v18[2];
  uint64_t v19;
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24[2];
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;

  if (!a1[2])
  {
    swift_beginAccess();
    return sub_18EC1B63C(v2 + 16, a2);
  }
  v4 = a1;
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v6 = v4[2];
    if (v6)
      goto LABEL_4;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (uint64_t)sub_18EC1B4E0(v4);
  v4 = (_QWORD *)result;
  v6 = *(_QWORD *)(result + 16);
  if (!v6)
    goto LABEL_26;
LABEL_4:
  v7 = v6 - 1;
  sub_18EC1B5E8((__int128 *)&v4[5 * v6 - 1], (uint64_t)v24);
  v4[2] = v7;
  sub_18EC1B5E8(v24, (uint64_t)v26);
  sub_18EC1B130(&v21, v4);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
  {
    sub_18EC1B4F4((uint64_t)&v21);
LABEL_23:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  v24[0] = v21;
  v24[1] = v22;
  v25 = v23;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v8 = sub_18EC67B48();
  if ((v9 & 1) != 0)
  {
    sub_18EC1B578((uint64_t)v24, (uint64_t)&v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
    if (swift_dynamicCast())
    {
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v14 = sub_18EC67B30();
      if (*(_QWORD *)(v20[0] + 16) && (v16 = sub_18EC1FB10(v14, v15), (v17 & 1) != 0))
      {
        sub_18EC1B578(*(_QWORD *)(v20[0] + 56) + 40 * v16, a2);
      }
      else
      {
        *(_QWORD *)(a2 + 32) = 0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18EC1B5B4((uint64_t)v24);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    sub_18EC1B5B4((uint64_t)v24);
    goto LABEL_23;
  }
  v10 = v8;
  sub_18EC1B578((uint64_t)v24, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A80);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_18EC1B5B4((uint64_t)v24);
    goto LABEL_23;
  }
  sub_18EC1B5E8(v18, (uint64_t)&v21);
  v11 = __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
  MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *))(v13 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_18EC67344();
  if (v10 >= *(_QWORD *)(result + 16))
  {
    sub_18EC1B5B4((uint64_t)v24);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    goto LABEL_23;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    sub_18EC1B600(result + 32 * v10 + 32, (uint64_t)v20);
    swift_bridgeObjectRelease();
    sub_18EC1B5B4((uint64_t)v24);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_18EC1B49C()
{
  uint64_t v0;

  sub_18EC1B4F4(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AXDataHolder()
{
  return objc_opt_self();
}

_QWORD *sub_18EC1B4E0(_QWORD *a1)
{
  return sub_18EC234E8(0, a1[2], 0, a1);
}

uint64_t sub_18EC1B4F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_18EC1B578(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_18EC1B5B4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_18EC1B5E8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_18EC1B600(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18EC1B63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18EC1B684()
{
  unint64_t result;

  result = qword_1EE139A28;
  if (!qword_1EE139A28)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6DD8C, &type metadata for AXCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE139A28);
  }
  return result;
}

uint64_t sub_18EC1B6C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_18EC1B6EC(uint64_t a1)
{
  return sub_18EC2361C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18EC1B700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v4 = v3;
  v7 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)&aVersion_0[8];
  v9 = *(_QWORD *)aVersion_0;
  swift_bridgeObjectRetain();
  v10 = sub_18EC1FB10(v9, v8);
  if ((v11 & 1) == 0)
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_18EC1B578(*(_QWORD *)(v7 + 56) + 40 * v10, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
  {
LABEL_8:
    sub_18EC1B4F4((uint64_t)&v21);
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    v12 = v20;
    goto LABEL_10;
  }
LABEL_9:
  v12 = 0;
LABEL_10:
  v13 = sub_18EC4E944(a2, a3);
  v14 = *((_QWORD *)v13 + 2);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v15 = v13 + 48;
    while (1)
    {
      if (v12 < *((_QWORD *)v15 - 2))
      {
        v17 = (uint64_t (*)(uint64_t))*((_QWORD *)v15 - 1);
        swift_retain_n();
        v18 = v17(v7);
        if (v4)
        {
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        v16 = v18;
        swift_bridgeObjectRelease();
        swift_release_n();
        v7 = v16;
      }
      v15 += 24;
      if (!--v14)
        goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
LABEL_18:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_18EC1B8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18EC1B8FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 24))(a2, a1);
  return a2;
}

uint64_t sub_18EC1B938(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = MEMORY[0x1E0DEC1A0];
    result = MEMORY[0x193FFA51C](a3, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC1B990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC1B9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t AXSerialQueue.__allocating_init()()
{
  return sub_18EC1C358((void (*)(void))AXSerialQueue.init());
}

uint64_t AXSerialQueue.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139258);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139260);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139270);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v29 = v0;
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE139988);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v25 = v9;
  sub_18EC673D4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = v27;
  v17 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v0 + OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, v9, v28);
  v18 = sub_18EC673C8();
  v19 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v30, 1, 1, v18);
  v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v26, v15, v10);
  v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22 + v21, v20, v10);
  v23 = sub_18EC1BFF0(v19, (uint64_t)&unk_1EE13A988, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v17);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  result = v29;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_parentTask) = v23;
  return result;
}

uint64_t sub_18EC1BCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139268);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC1BD28()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139270);
  sub_18EC67428();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_18EC1BDB0;
  return sub_18EC67434();
}

uint64_t sub_18EC1BDB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC1BE04()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v1 = *(int **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = v2;
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    goto LABEL_5;
  }
  if ((sub_18EC67470() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    sub_18EC1CDA0((uint64_t)v1);
LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = (uint64_t (*)(void))((char *)v1 + *v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_18EC1BEC0;
  return v5();
}

uint64_t sub_18EC1BEC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_18EC1CDA0(v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v3;
  v4[1] = sub_18EC1BDB0;
  return sub_18EC67434();
}

uint64_t sub_18EC1BF5C()
{
  return objectdestroyTm(&qword_1EE139270);
}

uint64_t sub_18EC1BF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE139270) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_18EC18E18;
  return sub_18EC1BCC4(a1, v5, v6, v7);
}

uint64_t sub_18EC1BFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_18EC673C8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_18EC673BC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18EC1CDB0(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18EC67350();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t AXSerialQueue.deinit()
{
  return sub_18EC1C9E0(&OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, &qword_1EE139260);
}

uint64_t AXSerialQueue.__deallocating_deinit()
{
  return sub_18EC1CA68(&OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, &qword_1EE139260);
}

uint64_t sub_18EC1C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A990);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v10[0] = &unk_1EE13A9A0;
  v10[1] = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139260);
  sub_18EC67404();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_18EC1C244(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_18EC19738;
  return v5();
}

uint64_t sub_18EC1C298(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18EC19738;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE13A998 + dword_1EE13A998))(a1, v4);
}

uint64_t sub_18EC1C308()
{
  return sub_18EC67464();
}

uint64_t AXSerialQueue.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_18EC1C340()
{
  uint64_t v0;

  return v0;
}

uint64_t AXMainActorSerialQueue.__allocating_init()()
{
  return sub_18EC1C358((void (*)(void))AXMainActorSerialQueue.init());
}

uint64_t sub_18EC1C358(void (*a1)(void))
{
  uint64_t v2;

  v2 = swift_allocObject();
  a1();
  return v2;
}

uint64_t AXMainActorSerialQueue.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9B0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9B8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v29 = v0;
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE139400);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v25 = v9;
  sub_18EC673D4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = v27;
  v17 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v0 + OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, v9, v28);
  v18 = sub_18EC673C8();
  v19 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v30, 1, 1, v18);
  v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v26, v15, v10);
  v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22 + v21, v20, v10);
  v23 = sub_18EC1BFF0(v19, (uint64_t)&unk_1EE13A9C8, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v17);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  result = v29;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_parentTask) = v23;
  return result;
}

uint64_t sub_18EC1C628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9E0);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC1C68C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9B8);
  sub_18EC67428();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_18EC1C714;
  return sub_18EC67434();
}

uint64_t sub_18EC1C714()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC1C768()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v1 = *(int **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = v2;
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    goto LABEL_5;
  }
  if ((sub_18EC67470() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    sub_18EC1CDA0((uint64_t)v1);
LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = (uint64_t (*)(void))((char *)v1 + *v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_18EC1C824;
  return v5();
}

uint64_t sub_18EC1C824()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_18EC1CDA0(v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v3;
  v4[1] = sub_18EC1C714;
  return sub_18EC67434();
}

uint64_t sub_18EC1C8C0()
{
  return objectdestroyTm(&qword_1EE13A9B8);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_18EC1C93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9B8) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_18EC19738;
  return sub_18EC1C628(a1, v5, v6, v7);
}

uint64_t AXMainActorSerialQueue.deinit()
{
  return sub_18EC1C9E0(&OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, &qword_1EE13A9B0);
}

uint64_t sub_18EC1C9E0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2;
  v4 = v2 + *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_18EC67410();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_defaultActor_destroy();
  return v3;
}

uint64_t AXMainActorSerialQueue.__deallocating_deinit()
{
  return sub_18EC1CA68(&OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, &qword_1EE13A9B0);
}

uint64_t sub_18EC1CA68(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_18EC67410();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_18EC1CAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v10[0] = &unk_1EE13A9D8;
  v10[1] = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9B0);
  sub_18EC67404();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_18EC1CBAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC1CBD0()
{
  return sub_18EC67464();
}

uint64_t sub_18EC1CBFC()
{
  return type metadata accessor for AXSerialQueue(0);
}

uint64_t type metadata accessor for AXSerialQueue(uint64_t a1)
{
  return sub_18EC1CC74(a1, (uint64_t *)&unk_1EE139970);
}

void sub_18EC1CC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_18EC1CCBC(a1, a2, a3, &qword_1EE139980, qword_1EE139988);
}

uint64_t method lookup function for AXSerialQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXSerialQueue.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AXSerialQueue.async(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AXSerialQueue.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_18EC1CC58()
{
  return type metadata accessor for AXMainActorSerialQueue(0);
}

uint64_t type metadata accessor for AXMainActorSerialQueue(uint64_t a1)
{
  return sub_18EC1CC74(a1, (uint64_t *)&unk_1EE1393E8);
}

uint64_t sub_18EC1CC74(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_18EC1CCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_18EC1CCBC(a1, a2, a3, &qword_1EE1393F8, qword_1EE139400);
}

void sub_18EC1CCBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v5;

  sub_18EC1CD54(319, a4, a5);
  if (v5 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AXMainActorSerialQueue()
{
  return swift_lookUpClassMethod();
}

void sub_18EC1CD54(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_18EC6741C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_18EC1CDA0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_18EC1CDB0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18EC1CDF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18EC18E18;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE13AC10 + dword_1EE13AC10))(a1, v4);
}

id sub_18EC1CE7C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v0 = (void *)sub_18EC6717C();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v0);

  if (v1)
  {
    v2 = (void *)sub_18EC6717C();
    v3 = (void *)sub_18EC6717C();
    v4 = (void *)sub_18EC6717C();
    v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    v1 = (id)sub_18EC671A0();
    v7 = v6;

    v8 = v1 == (id)0x4E554F465F544F4ELL && v7 == 0xE900000000000044;
    if (v8 || (sub_18EC679A4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

void sub_18EC1D01C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_18EC66F48();
  sub_18EC671DC();
  swift_bridgeObjectRelease();
  uldn_open();
  swift_release();
  swift_slowAlloc();
  __asm { BR              X10 }
}

uint64_t Locale.LanguageCode.icuDisplayName.getter()
{
  return sub_18EC1D2E0(0x45474155474E414CLL, 0xE90000000000005FLL, (void (*)(uint64_t))MEMORY[0x1E0CB0AC0], 1);
}

unint64_t sub_18EC1D250()
{
  unint64_t result;

  result = qword_1EE13A9F8;
  if (!qword_1EE13A9F8)
  {
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE13A9F8);
  }
  return result;
}

id Locale.LanguageCode.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18EC1D65C(a1, 0x45474155474E414CLL, 0xE90000000000005FLL, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CB0AC0], 1);
}

uint64_t Locale.Region.icuDisplayName.getter()
{
  return sub_18EC1D2E0(0x5F4E4F49474552, 0xE700000000000000, (void (*)(uint64_t))MEMORY[0x1E0CB0C38], 2);
}

uint64_t sub_18EC1D2E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18EC67050();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_18EC66F9C();
  v25 = a1;
  v26 = a2;
  a3(v15);
  sub_18EC671D0();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v16 = (uint64_t)sub_18EC1CE7C();
  v18 = v17;
  v19 = swift_bridgeObjectRelease();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v20 = ((uint64_t (*)(uint64_t))a3)(v19);
    sub_18EC1D01C((uint64_t)v14, v20, v21, a4);
    v16 = v22;
    v18 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (!v18)
      return v16;
  }
  v25 = v16;
  v26 = v18;
  sub_18EC66F9C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_18EC1D250();
  v16 = sub_18EC67548();
  sub_18EC1E58C((uint64_t)v10, &qword_1EE13A9F0);
  swift_bridgeObjectRelease();
  return v16;
}

id Locale.Region.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18EC1D65C(a1, 0x5F4E4F49474552, 0xE700000000000000, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CB0C38], 2);
}

id Locale.Subdivision.icuDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v0 = sub_18EC67050();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC66F9C();
  v11[0] = 0x5349564944425553;
  v11[1] = 0xEB000000005F4E4FLL;
  _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
  sub_18EC671D0();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v4 = sub_18EC1CE7C();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
  {
    v7 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    sub_18EC1D01C((uint64_t)v3, v7, v8, 3);
    v4 = v9;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id Locale.Subdivision.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18EC1D65C(a1, 0x5349564944425553, 0xEB000000005F4E4FLL, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CB0AA0], 3);
}

id sub_18EC1D65C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), char a5)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  a4(a1, a2);
  sub_18EC671D0();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v8 = sub_18EC1CE7C();
  v10 = v9;
  v11 = swift_bridgeObjectRelease();
  if (!v10)
  {
    v12 = ((uint64_t (*)(uint64_t))a4)(v11);
    sub_18EC1D01C(a1, v12, v13, a5);
    v8 = v14;
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t Locale.icuDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A9F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_18EC67050();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC66F9C();
  v7 = Locale.icuDisplayName(with:)((uint64_t)v6);
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9)
  {
    v11[0] = v7;
    v11[1] = v9;
    sub_18EC66F9C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    sub_18EC1D250();
    v7 = sub_18EC67548();
    sub_18EC1E58C((uint64_t)v2, &qword_1EE13A9F0);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t Locale.icuDisplayName(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v64 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A038);
  MEMORY[0x1E0C80A78](v1);
  v63 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A048);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18EC67038();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v61 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A040);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC67044();
  sub_18EC67014();
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v12, v6);
  v17 = sub_18EC66F84();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    v19 = &qword_1EE13A040;
    v20 = (uint64_t)v15;
LABEL_8:
    sub_18EC1E58C(v20, v19);
    return 0;
  }
  v61 = v5;
  v62 = v10;
  v65 = 0x45474155474E414CLL;
  v66 = 0xE90000000000005FLL;
  _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
  sub_18EC671D0();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v21 = (char *)sub_18EC1CE7C();
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    v24 = v62;
    goto LABEL_6;
  }
  v25 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
  sub_18EC1D01C(v64, v25, v26, 1);
  v21 = v27;
  v23 = v28;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  v24 = v62;
  if (v23)
  {
LABEL_6:
    sub_18EC67044();
    v29 = (uint64_t)v61;
    sub_18EC67020();
    v16(v24, v6);
    v30 = sub_18EC66FB4();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
    {
      swift_bridgeObjectRelease();
      v19 = &qword_1EE13A048;
      v20 = v29;
      goto LABEL_8;
    }
    v62 = v21;
    v65 = 0x5F4E4F49474552;
    v66 = 0xE700000000000000;
    _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    sub_18EC671D0();
    swift_bridgeObjectRelease();
    sub_18EC6723C();
    swift_bridgeObjectRelease();
    v34 = sub_18EC1CE7C();
    v36 = v35;
    swift_bridgeObjectRelease();
    if (v36)
    {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    else
    {
      v37 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
      sub_18EC1D01C(v64, v37, v38, 2);
      v34 = v39;
      v36 = v40;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      if (!v36)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    v41 = (uint64_t)v63;
    sub_18EC66F6C();
    v42 = sub_18EC66F60();
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
    {
      sub_18EC1E58C(v41, &qword_1EE13A038);
LABEL_16:
      v44 = (void *)sub_18EC6717C();
      v45 = AXCLocString(v44);

      sub_18EC671A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA00);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_18EC6BB30;
      v47 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
      v48 = sub_18EC1DEF4();
      *(_QWORD *)(v46 + 32) = v62;
      *(_QWORD *)(v46 + 40) = v23;
      *(_QWORD *)(v46 + 96) = v47;
      *(_QWORD *)(v46 + 104) = v48;
      *(_QWORD *)(v46 + 64) = v48;
      *(_QWORD *)(v46 + 72) = v34;
      *(_QWORD *)(v46 + 80) = v36;
      v32 = sub_18EC671AC();
      swift_bridgeObjectRelease();
      return v32;
    }
    v65 = 0x5349564944425553;
    v66 = 0xEB000000005F4E4FLL;
    _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    sub_18EC671D0();
    swift_bridgeObjectRelease();
    sub_18EC6723C();
    swift_bridgeObjectRelease();
    v49 = sub_18EC1CE7C();
    v51 = v50;
    swift_bridgeObjectRelease();
    if (v51)
    {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    else
    {
      v52 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
      sub_18EC1D01C(v64, v52, v53, 3);
      v49 = v54;
      v51 = v55;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
      if (!v51)
        goto LABEL_16;
    }
    v56 = (void *)sub_18EC6717C();
    v57 = AXCLocString(v56);

    sub_18EC671A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA00);
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_18EC6C300;
    v59 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
    v60 = sub_18EC1DEF4();
    *(_QWORD *)(v58 + 32) = v62;
    *(_QWORD *)(v58 + 40) = v23;
    *(_QWORD *)(v58 + 96) = v59;
    *(_QWORD *)(v58 + 104) = v60;
    *(_QWORD *)(v58 + 64) = v60;
    *(_QWORD *)(v58 + 72) = v49;
    *(_QWORD *)(v58 + 80) = v51;
    *(_QWORD *)(v58 + 136) = v59;
    *(_QWORD *)(v58 + 144) = v60;
    *(_QWORD *)(v58 + 112) = v34;
    *(_QWORD *)(v58 + 120) = v36;
    v32 = sub_18EC671AC();
    swift_bridgeObjectRelease();
    return v32;
  }
  return 0;
}

unint64_t sub_18EC1DEF4()
{
  unint64_t result;

  result = qword_1EE13AA08;
  if (!qword_1EE13AA08)
  {
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE13AA08);
  }
  return result;
}

uint64_t sub_18EC1DF38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t ExemplarSet;
  uint64_t v9;
  int ItemCount;
  int v11;
  int v12;
  uint64_t v13;
  int Item;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v2 = sub_18EC66EA0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 0;
  sub_18EC66F48();
  sub_18EC671DC();
  swift_bridgeObjectRelease();
  v6 = ulocdata_open();
  swift_release();
  if (v23 > 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  ExemplarSet = ulocdata_getExemplarSet();
  if (v23 > 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
    return ulocdata_close();
  }
  if (v23 == -127)
    MEMORY[0x193FFA744](ExemplarSet);
  sub_18EC66E94();
  v9 = swift_slowAlloc();
  ItemCount = uset_getItemCount();
  if (ItemCount < 0)
LABEL_40:
    __break(1u);
  v11 = ItemCount;
  v18 = a1;
  v19 = v6;
  if (!ItemCount)
  {
LABEL_26:
    v16 = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v18, v5, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
    goto LABEL_28;
  }
  v12 = 0;
  while (1)
  {
    if (v11 == v12)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v22 = 0;
    Item = uset_getItem();
    v15 = v23;
    if (v23 == 15)
    {
      MEMORY[0x193FFA60C](v9, -1, -1);
      if (__OFADD__(Item, 1))
        goto LABEL_32;
      v9 = swift_slowAlloc();
      v23 = 0;
      uset_getItem();
      v15 = v23;
    }
    if (v15 > 0)
      break;
    if (Item > 0)
    {
      v20 = sub_18EC67170();
      v21 = v13;
      sub_18EC67284();
      sub_18EC66E70();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v22 < 0)
        goto LABEL_33;
      if (HIDWORD(v22) >> 11 == 27)
        goto LABEL_38;
      if (HIDWORD(v22) > 0x10FFFF)
        goto LABEL_34;
      if ((v22 & 0x80000000) != 0)
        goto LABEL_35;
      if (v22 >> 11 == 27)
        goto LABEL_39;
      if (v22 > 0x10FFFF)
        goto LABEL_36;
      if (v22 < HIDWORD(v22))
        goto LABEL_37;
      sub_18EC66E64();
    }
    if (v11 == ++v12)
      goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v18, 1, 1, v2);
LABEL_28:
  MEMORY[0x193FFA60C](v9, -1, -1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uset_close();
  return ulocdata_close();
}

uint64_t Locale.axExemplarCharacterSet.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  v31 = a1;
  v2 = sub_18EC66EA0();
  v3 = *(_QWORD **)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA10);
  v9 = MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v31 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - v17;
  v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v3[7];
  v35((char *)&v31 - v17, 1, 1, v2);
  v19 = 0;
  v33 = v13;
  v34 = v1;
  do
  {
    sub_18EC1DF38((uint64_t)v16);
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v3[6];
    if (v20((uint64_t)v16, 1, v2) == 1)
    {
      sub_18EC1E58C((uint64_t)v16, &qword_1EE13AA10);
    }
    else
    {
      v21 = v3;
      v22 = (void (*)(char *, char *, uint64_t))v3[4];
      v22(v7, v16, v2);
      v23 = v36;
      sub_18EC1E610((uint64_t)v18, v36);
      v24 = v20(v23, 1, v2);
      sub_18EC1E58C(v23, &qword_1EE13AA10);
      if (v24 == 1)
      {
        v25 = (uint64_t)v33;
        v22(v33, v7, v2);
        v26 = 0;
        v3 = v21;
        v27 = v25;
      }
      else
      {
        v3 = v21;
        if (v20((uint64_t)v18, 1, v2))
        {
          ((void (*)(char *, uint64_t))v21[1])(v7, v2);
          v26 = 1;
          v27 = (uint64_t)v33;
        }
        else
        {
          v28 = v32;
          ((void (*)(char *, char *, uint64_t))v21[2])(v32, v18, v2);
          v27 = (uint64_t)v33;
          sub_18EC66E58();
          v29 = (void (*)(char *, uint64_t))v3[1];
          v29(v28, v2);
          v29(v7, v2);
          v26 = 0;
        }
      }
      v35((char *)v27, v26, 1, v2);
      sub_18EC1E658(v27, (uint64_t)v18);
    }
    v19 += 4;
  }
  while (v19 != 16);
  return sub_18EC1E5C8((uint64_t)v18, v31);
}

uint64_t sub_18EC1E58C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18EC1E5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC1E610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC1E658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Unicode.Scalar.axScripts.getter(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  const void *v12;
  int ScriptExtensions;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  char v37;
  char isUniquelyReferenced_nonNull_native;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v2 = sub_18EC66FCC();
  v50 = *(_QWORD **)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v40 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - v9;
  v11 = swift_slowAlloc();
  if (a1 < 0)
    __break(1u);
  v12 = (const void *)v11;
  v56 = 0;
  ScriptExtensions = uscript_getScriptExtensions();
  if (v56)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA18);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_18EC6BB40;
    sub_18EC66FD8();
    v15 = sub_18EC21AD8(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  else
  {
    v16 = sub_18EC201E8(v12, ScriptExtensions);
    v17 = sub_18EC1EC04((uint64_t)v16);
    swift_release();
    v45 = *((_QWORD *)v17 + 2);
    if (v45)
    {
      v44 = v17 + 32;
      v40 = v17;
      swift_bridgeObjectRetain();
      v18 = 0;
      v15 = MEMORY[0x1E0DEE9E8];
      v41 = v8;
      do
      {
        v46 = v18;
        v19 = (uint64_t *)&v44[16 * v18];
        v21 = *v19;
        v20 = v19[1];
        v55 = v15;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v47 = v20;
        sub_18EC66FD8();
        sub_18EC20288((uint64_t)v10, v8);
        v53 = (void (*)(char *, uint64_t))v50[1];
        v53(v10, v2);
        if (qword_1EE13A6B8 != -1)
          swift_once();
        v22 = qword_1EE13F4F0;
        if (*(_QWORD *)(qword_1EE13F4F0 + 16))
        {
          v23 = v47;
          swift_bridgeObjectRetain();
          v24 = sub_18EC1FB10(v21, v23);
          if ((v25 & 1) != 0
            && (v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24),
                swift_bridgeObjectRetain(),
                swift_bridgeObjectRelease(),
                (v49 = *(_QWORD *)(v26 + 16)) != 0))
          {
            v42 = v26;
            v43 = v15;
            v48 = v26 + 32;
            swift_bridgeObjectRetain();
            v27 = 0;
            do
            {
              v28 = *(_QWORD *)(v48 + 16 * v27 + 8);
              swift_bridgeObjectRetain_n();
              sub_18EC66FD8();
              v29 = v55;
              sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
              swift_bridgeObjectRetain();
              v30 = sub_18EC67134();
              v31 = -1 << *(_BYTE *)(v29 + 32);
              v32 = v30 & ~v31;
              if (((*(_QWORD *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
              {
                v51 = v28;
                v52 = v27;
                v33 = v5;
                v34 = ~v31;
                v35 = v50[9];
                v36 = (void (*)(char *, unint64_t, uint64_t))v50[2];
                do
                {
                  v36(v10, *(_QWORD *)(v29 + 48) + v35 * v32, v2);
                  sub_18EC19538(&qword_1EE13AA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
                  v37 = sub_18EC67158();
                  v53(v10, v2);
                  if ((v37 & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    v5 = v33;
                    v27 = v52;
                    goto LABEL_15;
                  }
                  v32 = (v32 + 1) & v34;
                }
                while (((*(_QWORD *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0);
                swift_bridgeObjectRelease();
                v5 = v33;
                v27 = v52;
              }
              else
              {
                swift_bridgeObjectRelease();
                v36 = (void (*)(char *, unint64_t, uint64_t))v50[2];
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v36(v10, (unint64_t)v5, v2);
              v54 = v55;
              sub_18EC20850((uint64_t)v10, v32, isUniquelyReferenced_nonNull_native);
              v55 = v54;
              swift_bridgeObjectRelease();
LABEL_15:
              v53(v5, v2);
              swift_bridgeObjectRelease();
              ++v27;
            }
            while (v27 != v49);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v8 = v41;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v18 = v46 + 1;
        swift_bridgeObjectRelease();
        v15 = v55;
      }
      while (v18 != v45);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9E8];
    }
  }
  return v15;
}

char *sub_18EC1EC04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (uscript_getShortName())
    {
      v4 = sub_18EC67248();
      v6 = v5;
      if (sub_18EC67218() > 0)
        goto LABEL_7;
      swift_bridgeObjectRelease();
    }
    v6 = 0xE400000000000000;
    v4 = 2038004058;
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_18EC23730(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    v8 = *((_QWORD *)v3 + 2);
    v7 = *((_QWORD *)v3 + 3);
    if (v8 >= v7 >> 1)
      v3 = sub_18EC23730((char *)(v7 > 1), v8 + 1, 1, v3);
    ++v2;
    *((_QWORD *)v3 + 2) = v8 + 1;
    v9 = &v3[16 * v8];
    *((_QWORD *)v9 + 4) = v4;
    *((_QWORD *)v9 + 5) = v6;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Locale.Language.axScripts.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A050);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_18EC66FCC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v52 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v52 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v52 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v52 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A040);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_18EC66F84();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x1E0DEE9E8];
  sub_18EC67014();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_18EC1E58C((uint64_t)v18, &qword_1EE13A040);
    return MEMORY[0x1E0DEE9E8];
  }
  else
  {
    v55 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_18EC6702C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_18EC1E58C((uint64_t)v2, &qword_1EE13A050);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v15, v2, v3);
      v24 = v57;
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v57, v15, v3);
      v25 = v56;
      sub_18EC20288(v56, v24);
      v26 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v26(v25, v3);
      v26((uint64_t)v15, v3);
    }
    v57 = (char *)v19;
    if (qword_1EE13A6C0 != -1)
      swift_once();
    v27 = &unk_1EE13F000;
    v28 = qword_1EE13F4F8;
    v29 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    v31 = *(_QWORD *)(v28 + 16);
    v53 = v22;
    if (v31)
    {
      v32 = sub_18EC1FB10(v29, v30);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v35 = *(_QWORD *)(v34 + 16);
        if (v35)
        {
          v58 = MEMORY[0x1E0DEE9D8];
          sub_18EC20194(0, v35, 0);
          v36 = v58;
          v56 = v34;
          v37 = v34 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_18EC66FD8();
            v58 = v36;
            v39 = *(_QWORD *)(v36 + 16);
            v38 = *(_QWORD *)(v36 + 24);
            if (v39 >= v38 >> 1)
            {
              sub_18EC20194(v38 > 1, v39 + 1, 1);
              v36 = v58;
            }
            v37 += 16;
            *(_QWORD *)(v36 + 16) = v39 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v36+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v39, v9, v3);
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          v27 = (_QWORD *)&unk_1EE13F000;
        }
        else
        {
          swift_bridgeObjectRelease();
          v36 = MEMORY[0x1E0DEE9D8];
        }
        sub_18EC21CA8(v36);
      }
    }
    swift_bridgeObjectRelease();
    v40 = v57;
    v41 = v55;
    v42 = v27[159];
    if (*(_QWORD *)(v42 + 16))
    {
      v43 = sub_18EC1FB10(42, 0xE100000000000000);
      if ((v44 & 1) != 0)
      {
        v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
        v46 = *(_QWORD *)(v45 + 16);
        v47 = MEMORY[0x1E0DEE9D8];
        if (v46)
        {
          v58 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_18EC20194(0, v46, 0);
          v47 = v58;
          v48 = v45 + 40;
          v49 = v54;
          do
          {
            swift_bridgeObjectRetain();
            sub_18EC66FD8();
            v58 = v47;
            v51 = *(_QWORD *)(v47 + 16);
            v50 = *(_QWORD *)(v47 + 24);
            if (v51 >= v50 >> 1)
            {
              sub_18EC20194(v50 > 1, v51 + 1, 1);
              v47 = v58;
            }
            v48 += 16;
            *(_QWORD *)(v47 + 16) = v51 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v47+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v51, v49, v3);
            --v46;
          }
          while (v46);
          swift_bridgeObjectRelease();
          v40 = v57;
        }
        sub_18EC21CA8(v47);
        swift_bridgeObjectRelease();
        v41 = v55;
      }
    }
    (*(void (**)(char *, char *))(v41 + 8))(v53, v40);
    return v59;
  }
}

BOOL Locale.Language.supportsCharacter(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = Unicode.Scalar.axScripts.getter(a1);
  v2 = Locale.Language.axScripts.getter();
  v3 = sub_18EC20FA0(v2, v1);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  swift_release();
  return v4 != 0;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.__allocating_init(locale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = swift_allocObject();
  sub_18EC66E94();
  sub_18EC66E94();
  v3 = OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA30);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v2 + v3) = v4;
  v5 = v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  v6 = sub_18EC67050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  return v2;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.init(locale:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_18EC66E94();
  sub_18EC66E94();
  v3 = OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA30);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v1 + v3) = v4;
  v5 = v1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  v6 = sub_18EC67050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

BOOL sub_18EC1F3FC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v16;
  char v17[8];

  v2 = v1;
  v4 = sub_18EC67038();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock)
                          + 16);
  os_unfair_lock_lock(v8);
  sub_18EC1F574(v1, v17);
  os_unfair_lock_unlock(v8);
  if (v17[0] != 2)
    return v17[0] & 1;
  sub_18EC67044();
  v9 = Unicode.Scalar.axScripts.getter(a1);
  v10 = Locale.Language.axScripts.getter();
  v11 = sub_18EC20FA0(v10, v9);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  v13 = v12 != 0;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  MEMORY[0x1E0C80A78](v14);
  *((_BYTE *)&v16 - 32) = v13;
  *(&v16 - 3) = v2;
  *((_DWORD *)&v16 - 4) = a1;
  os_unfair_lock_lock(v8);
  sub_18EC21E3C((uint64_t)v17);
  os_unfair_lock_unlock(v8);
  return v13;
}

uint64_t sub_18EC1F574@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (*v9)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v10)(_BYTE *, uint64_t);
  uint64_t result;
  char v12;
  uint64_t v13;
  char v14;
  _BYTE v15[24];

  v4 = sub_18EC66EA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  swift_beginAccess();
  v9 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  LOBYTE(v8) = sub_18EC66E88();
  v10 = *(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8);
  result = v10(v7, v4);
  if ((v8 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    v13 = a1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters;
    swift_beginAccess();
    v9(v7, v13, v4);
    v14 = sub_18EC66E88();
    result = v10(v7, v4);
    if ((v14 & 1) != 0)
      v12 = 0;
    else
      v12 = 2;
  }
  *a2 = v12;
  return result;
}

uint64_t sub_18EC1F6B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_beginAccess();
  v2 = sub_18EC66E7C();
  result = swift_endAccess();
  *(_BYTE *)a1 = v2 & 1;
  *(_DWORD *)(a1 + 4) = HIDWORD(v2);
  return result;
}

uint64_t sub_18EC1F744(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];

  v3 = v2;
  v6 = sub_18EC67038();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1 & 0xFFFFFFFFFFFFLL;
  v29 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a2) & 0xF;
  else
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    return 1;
  v31 = v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock)
                          + 16);
  v26 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v27 = a2 & 0xFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  v10 = 0;
  v32 = v2;
  v30 = a2;
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = sub_18EC67614();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v37[0] = a1;
        v37[1] = v27;
      }
      else if ((a1 & 0x1000000000000000) == 0)
      {
        sub_18EC67638();
      }
      v11 = sub_18EC67644();
    }
    v13 = v11;
    v14 = v12;
    os_unfair_lock_lock(v9);
    sub_18EC1F574(v3, (char *)v37);
    os_unfair_lock_unlock(v9);
    if (LOBYTE(v37[0]) == 2)
    {
      v36 = v14;
      v15 = a1;
      v16 = v9;
      v17 = v33;
      sub_18EC67044();
      v18 = Unicode.Scalar.axScripts.getter(v13);
      v19 = Locale.Language.axScripts.getter();
      v20 = sub_18EC20FA0(v19, v18);
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v20 + 16);
      swift_release();
      v22 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v35);
      MEMORY[0x1E0C80A78](v22);
      *((_BYTE *)&v26 - 32) = v21 != 0;
      v3 = v32;
      *(&v26 - 3) = v32;
      *((_DWORD *)&v26 - 4) = v13;
      os_unfair_lock_lock(v16);
      sub_18EC21E3C((uint64_t)v37);
      v23 = v16;
      os_unfair_lock_unlock(v16);
      if (!v21)
      {
        v24 = 0;
        goto LABEL_20;
      }
      a2 = v30;
      a1 = v15;
      v9 = v23;
      v14 = v36;
    }
    else if ((v37[0] & 1) == 0)
    {
      v24 = 0;
      goto LABEL_20;
    }
    v10 += v14;
  }
  while (v10 < v8);
  v24 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  v2 = sub_18EC67050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  v4 = sub_18EC66EA0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters, v4);
  swift_release();
  return v0;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  v2 = sub_18EC67050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  v4 = sub_18EC66EA0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters, v4);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_18EC1FB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_18EC67AAC();
  sub_18EC6720C();
  v4 = sub_18EC67ADC();
  return sub_18EC1FCB8(a1, a2, v4);
}

unint64_t sub_18EC1FB74(uint64_t a1)
{
  uint64_t v2;

  sub_18EC676EC();
  v2 = sub_18EC67134();
  return sub_18EC1FD98(a1, v2);
}

unint64_t sub_18EC1FBC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18EC675C0();
  return sub_18EC1FEC0(a1, v2);
}

unint64_t sub_18EC1FBF4(uint64_t a1)
{
  uint64_t v2;

  sub_18EC67AAC();
  sub_18EC67068();
  v2 = sub_18EC67ADC();
  return sub_18EC1FF84(a1, v2);
}

unint64_t sub_18EC1FC4C(uint64_t a1)
{
  uint64_t v2;

  sub_18EC66F00();
  sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v2 = sub_18EC67134();
  return sub_18EC20054(a1, v2);
}

unint64_t sub_18EC1FCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_18EC679A4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_18EC679A4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_18EC1FD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_18EC676EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_18EC67158();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_18EC1FEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_18EC1B578(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x193FF91E4](v9, a1);
      sub_18EC1B5B4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_18EC1FF84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0 && (sub_18EC6705C() & 1) == 0)
  {
    v6 = ~v4;
    for (i = (i + 1) & v6; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v6)
    {
      if ((sub_18EC6705C() & 1) != 0)
        break;
    }
  }
  return i;
}

unint64_t sub_18EC20054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_18EC66F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_18EC19538(&qword_1EE13AB48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v14 = sub_18EC67158();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

size_t sub_18EC20194(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_18EC4F1AC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

char *sub_18EC201B0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18EC4F320(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_18EC201CC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18EC4F420(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_18EC201E8(const void *a1, uint64_t a2)
{
  size_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;

  if (!a2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a2 <= 0)
  {
    v4 = 4 * a2;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AB58);
    v4 = 4 * a2;
    v5 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 29;
    v5[2] = a2;
    v5[3] = 2 * (v7 >> 2);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

uint64_t sub_18EC20288(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_18EC66FCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_18EC19538(&qword_1EE13AA20, v11, MEMORY[0x1E0CB0C98]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_18EC67134();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_18EC19538(&qword_1EE13AA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
      v21 = sub_18EC67158();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_18EC20850((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_18EC204E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_18EC66FCC();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AB50);
  v6 = sub_18EC675FC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
      result = sub_18EC67134();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_18EC20850(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_18EC66FCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_18EC204E4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_18EC20A54();
      goto LABEL_12;
    }
    sub_18EC20C78();
  }
  v12 = *v3;
  sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
  v13 = sub_18EC67134();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_18EC19538(&qword_1EE13AA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
      v18 = sub_18EC67158();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_18EC67A58();
  __break(1u);
  return result;
}

void *sub_18EC20A54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_18EC66FCC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AB50);
  v6 = *v0;
  v7 = sub_18EC675F0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_18EC20C78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_18EC66FCC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AB50);
  v7 = sub_18EC675FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
    result = sub_18EC67134();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18EC20FA0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_18EC21120((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_18EC21120((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x193FFA60C](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_18EC21120(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t (*v42)(char *, uint64_t);
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t i;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v66 = a2;
  v69 = a1;
  v6 = sub_18EC66FCC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v66 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v66 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(a4 + 16);
  v75 = a4;
  v76 = a3;
  v77 = v7;
  if (v20 >= v19)
  {
    v71 = 0;
    v43 = 0;
    v44 = *(_QWORD *)(a3 + 56);
    v67 = a3 + 56;
    v45 = 1 << *(_BYTE *)(a3 + 32);
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v47 = v46 & v44;
    v68 = (unint64_t)(v45 + 63) >> 6;
    v74 = a4 + 56;
    if (v47)
      goto LABEL_38;
LABEL_39:
    v49 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v49 < v68)
    {
      v50 = *(_QWORD *)(v67 + 8 * v49);
      v51 = v43 + 1;
      if (v50)
        goto LABEL_52;
      v51 = v43 + 2;
      if (v43 + 2 < v68)
      {
        v50 = *(_QWORD *)(v67 + 8 * v51);
        if (v50)
          goto LABEL_52;
        v51 = v43 + 3;
        if (v43 + 3 < v68)
        {
          v50 = *(_QWORD *)(v67 + 8 * v51);
          if (v50)
            goto LABEL_52;
          v52 = v43 + 4;
          if (v43 + 4 < v68)
          {
            v50 = *(_QWORD *)(v67 + 8 * v52);
            if (!v50)
            {
              while (1)
              {
                v51 = v52 + 1;
                if (__OFADD__(v52, 1))
                  goto LABEL_67;
                if (v51 >= v68)
                  goto LABEL_61;
                v50 = *(_QWORD *)(v67 + 8 * v51);
                ++v52;
                if (v50)
                  goto LABEL_52;
              }
            }
            v51 = v43 + 4;
LABEL_52:
            v72 = (v50 - 1) & v50;
            v73 = v51;
            for (i = __clz(__rbit64(v50)) + (v51 << 6); ; i = __clz(__rbit64(v47)) | (v43 << 6))
            {
              v53 = *(_QWORD *)(a3 + 48);
              v54 = *(_QWORD *)(v7 + 72);
              v70 = i;
              v55 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
              v55(v10, v53 + v54 * i, v6);
              sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
              v56 = v7;
              v57 = v10;
              v58 = sub_18EC67134();
              v59 = -1 << *(_BYTE *)(a4 + 32);
              v60 = v58 & ~v59;
              if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) != 0)
              {
                v61 = ~v59;
                while (1)
                {
                  v55(v13, *(_QWORD *)(v75 + 48) + v60 * v54, v6);
                  sub_18EC19538(&qword_1EE13AA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
                  v62 = sub_18EC67158();
                  v63 = *(void (**)(char *, uint64_t))(v77 + 8);
                  v63(v13, v6);
                  if ((v62 & 1) != 0)
                    break;
                  v60 = (v60 + 1) & v61;
                  if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
                    goto LABEL_59;
                }
                v10 = v57;
                result = ((uint64_t (*)(char *, uint64_t))v63)(v57, v6);
                *(unint64_t *)((char *)v69 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
                v47 = v72;
                v26 = __OFADD__(v71++, 1);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v43 = v73;
                if (v26)
                  goto LABEL_65;
                if (!v72)
                  goto LABEL_39;
              }
              else
              {
                v63 = *(void (**)(char *, uint64_t))(v56 + 8);
LABEL_59:
                v10 = v57;
                result = ((uint64_t (*)(char *, uint64_t))v63)(v57, v6);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v47 = v72;
                v43 = v73;
                if (!v72)
                  goto LABEL_39;
              }
LABEL_38:
              v72 = (v47 - 1) & v47;
              v73 = v43;
            }
          }
        }
      }
    }
LABEL_61:
    v64 = v66;
    v65 = v71;
    swift_retain();
    return sub_18EC217D8(v69, v64, v65, a3);
  }
  v70 = (unint64_t)&v66 - v18;
  v71 = 0;
  v21 = 0;
  v22 = *(_QWORD *)(a4 + 56);
  v67 = a4 + 56;
  v23 = 1 << *(_BYTE *)(a4 + 32);
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v25 = v24 & v22;
  v68 = (unint64_t)(v23 + 63) >> 6;
  v74 = a3 + 56;
  do
  {
    v27 = v70;
    if (v25)
    {
LABEL_8:
      v72 = (v25 - 1) & v25;
      v73 = v21;
      v28 = __clz(__rbit64(v25)) | (v21 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      if (v29 >= v68)
        goto LABEL_61;
      v30 = *(_QWORD *)(v67 + 8 * v29);
      v31 = v21 + 1;
      if (!v30)
      {
        v31 = v21 + 2;
        if (v21 + 2 >= v68)
          goto LABEL_61;
        v30 = *(_QWORD *)(v67 + 8 * v31);
        if (!v30)
        {
          v31 = v21 + 3;
          if (v21 + 3 >= v68)
            goto LABEL_61;
          v30 = *(_QWORD *)(v67 + 8 * v31);
          if (!v30)
          {
            v32 = v21 + 4;
            if (v21 + 4 >= v68)
              goto LABEL_61;
            v30 = *(_QWORD *)(v67 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                v31 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_66;
                if (v31 >= v68)
                  goto LABEL_61;
                v30 = *(_QWORD *)(v67 + 8 * v31);
                ++v32;
                if (v30)
                  goto LABEL_22;
              }
            }
            v31 = v21 + 4;
          }
        }
      }
LABEL_22:
      v72 = (v30 - 1) & v30;
      v73 = v31;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_23:
      v33 = *(_QWORD *)(v7 + 72);
      v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      v34(v27, *(_QWORD *)(a4 + 48) + v33 * v28, v6);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v16, v27, v6);
      sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
      v35 = v7;
      v36 = v16;
      v37 = sub_18EC67134();
      a3 = v76;
      v38 = -1 << *(_BYTE *)(v76 + 32);
      v39 = v37 & ~v38;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
        break;
      v42 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
LABEL_29:
      v16 = v36;
      result = v42(v36, v6);
      a4 = v75;
      v7 = v77;
      v27 = v70;
      v25 = v72;
      v21 = v73;
      if (v72)
        goto LABEL_8;
    }
    v40 = ~v38;
    while (1)
    {
      v34((unint64_t)v13, *(_QWORD *)(a3 + 48) + v39 * v33, v6);
      sub_18EC19538(&qword_1EE13AA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
      v41 = sub_18EC67158();
      v42 = *(uint64_t (**)(char *, uint64_t))(v77 + 8);
      v42(v13, v6);
      if ((v41 & 1) != 0)
        break;
      v39 = (v39 + 1) & v40;
      a3 = v76;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        goto LABEL_29;
    }
    v16 = v36;
    result = v42(v36, v6);
    *(unint64_t *)((char *)v69 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v25 = v72;
    v26 = __OFADD__(v71++, 1);
    a4 = v75;
    a3 = v76;
    v7 = v77;
    v21 = v73;
  }
  while (!v26);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_18EC217D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_18EC66FCC();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AB50);
  result = sub_18EC67608();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_18EC19538(&qword_1EE13AA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0C98]);
    result = sub_18EC67134();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18EC21AD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_18EC66FCC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A050);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_18EC19538(&qword_1EE13AA20, v3, MEMORY[0x1E0CB0C98]);
  v19 = sub_18EC674B8();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_18EC20288((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_18EC21CA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_18EC66FCC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A050);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v14(v11, v13, v2);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v15(v11, 0, 1, v2);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_18EC20288((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v18;
      if (!--v12)
        return v15(v11, 1, 1, v2);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    return v15(v11, 1, 1, v2);
  }
  return result;
}

uint64_t sub_18EC21E3C@<X0>(uint64_t a1@<X8>)
{
  return sub_18EC1F6B4(a1);
}

uint64_t sub_18EC21E5C()
{
  return type metadata accessor for AXCachedLocaleCharacterSupportMatrix();
}

uint64_t type metadata accessor for AXCachedLocaleCharacterSupportMatrix()
{
  uint64_t result;

  result = qword_1EE13AA60;
  if (!qword_1EE13AA60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18EC21EA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_18EC67050();
  if (v1 <= 0x3F)
  {
    result = sub_18EC66EA0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AXCachedLocaleCharacterSupportMatrix()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.__allocating_init(locale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.supports(character:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.supports(string:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t AXAsyncTimer.__allocating_init(_:repeats:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  v12 = sub_18EC673C8();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(double *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a2;
  *(_QWORD *)(v14 + 48) = a3;
  *(_BYTE *)(v14 + 56) = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_18EC1CDB0((uint64_t)v10);
  }
  else
  {
    sub_18EC673BC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    if (*(_QWORD *)(v14 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_18EC67350();
      v17 = v16;
      swift_unknownObjectRelease();
      if (v17 | v15)
      {
        v19[0] = 0;
        v19[1] = 0;
        v19[2] = v15;
        v19[3] = v17;
      }
    }
  }
  *(_QWORD *)(v11 + 16) = swift_task_create();
  return v11;
}

uint64_t AXAsyncTimer.init(_:repeats:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_18EC673C8();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(double *)(v15 + 32) = a4;
  *(_QWORD *)(v15 + 40) = a2;
  *(_QWORD *)(v15 + 48) = a3;
  *(_BYTE *)(v15 + 56) = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_18EC1CDB0((uint64_t)v12);
  }
  else
  {
    sub_18EC673BC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(_QWORD *)(v15 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v16 = sub_18EC67350();
      v18 = v17;
      swift_unknownObjectRelease();
      if (v18 | v16)
      {
        v20[0] = 0;
        v20[1] = 0;
        v20[2] = v16;
        v20[3] = v18;
      }
    }
  }
  *(_QWORD *)(v5 + 16) = swift_task_create();
  return v5;
}

uint64_t sub_18EC22334(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v7 + 33) = a7;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(double *)(v7 + 40) = a1;
  v8 = sub_18EC676C8();
  *(_QWORD *)(v7 + 64) = v8;
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 80) = swift_task_alloc();
  v9 = sub_18EC676BC();
  *(_QWORD *)(v7 + 88) = v9;
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC223D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  sub_18EC67698();
  sub_18EC67B24();
  sub_18EC676A4();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 120) = v4;
  v4(v1, v2);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_18EC67A70();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v5;
  sub_18EC22A60();
  *v5 = v0;
  v5[1] = sub_18EC224B0;
  return sub_18EC6747C();
}

uint64_t sub_18EC224B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[9] + 8))(v2[10], v2[8]);
  return swift_task_switch();
}

uint64_t sub_18EC22534()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  _QWORD *v2;
  uint64_t (*v4)(void);

  if ((sub_18EC67470() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v4 = (uint64_t (*)(void))(**(int **)(v0 + 48) + *(_QWORD *)(v0 + 48));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v2;
    *v2 = v0;
    v2[1] = sub_18EC225D4;
    v1 = v4;
  }
  return v1();
}

uint64_t sub_18EC225D4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC22628()
{
  uint64_t v0;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (*(_BYTE *)(v0 + 33) == 1 && (sub_18EC67470() & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v5 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = sub_18EC67B24();
    MEMORY[0x193FF92C8](v7);
    v3(v2, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v6);
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    sub_18EC67A70();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v8;
    sub_18EC22A60();
    *v8 = v0;
    v8[1] = sub_18EC224B0;
    return sub_18EC6747C();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_18EC22754()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC227B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_18EC19738;
  return sub_18EC22334(v6, a1, v4, v5, v7, v8, v9);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC22878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_18EC18E18;
  return sub_18EC22334(v6, a1, v4, v5, v7, v8, v9);
}

Swift::Void __swiftcall AXAsyncTimer.cancel()()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A8C0);
  sub_18EC67464();
  swift_release();
}

uint64_t AXAsyncTimer.deinit()
{
  uint64_t v0;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A8C0);
  sub_18EC67464();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AXAsyncTimer.__deallocating_deinit()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A8C0);
  sub_18EC67464();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AXAsyncTimer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AXAsyncTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXAsyncTimer.__allocating_init(_:repeats:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_18EC22A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE13AB78;
  if (!qword_1EE13AB78)
  {
    v1 = sub_18EC676C8();
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DF0BF8], v1);
    atomic_store(result, &qword_1EE13AB78);
  }
  return result;
}

uint64_t Locale.init(withAXRemapping:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_18EC66F30();
  MEMORY[0x1E0C80A78](v0);
  Locale.Components.init(withAXRemapping:)((uint64_t)&v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_18EC66F3C();
}

uint64_t Locale.Components.init(withAXRemapping:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t (*v29)(char *, _QWORD);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[32];

  v33 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A040);
  v2 = MEMORY[0x1E0C80A78](v1);
  v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - v4;
  v6 = sub_18EC67008();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_18EC66F30();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE13A030 != -1)
    swift_once();
  v13 = qword_1EE13F4D8;
  v14 = sub_18EC671C4();
  if (*(_QWORD *)(v13 + 16) && (v16 = sub_18EC1FB10(v14, v15), (v17 & 1) != 0))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Locale.Components.init(withAXRemapping:)(v19, v20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33, v12, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_18EC66F24();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33, v12, v9);
    sub_18EC66F18();
    sub_18EC66FF0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
    v22 = sub_18EC66F84();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22))
    {
      return sub_18EC1E58C((uint64_t)v5, &qword_1EE13A040);
    }
    else
    {
      _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
      sub_18EC1E58C((uint64_t)v5, &qword_1EE13A040);
      v24 = sub_18EC671C4();
      v26 = v25;
      swift_bridgeObjectRelease();
      if (qword_1EE13A028 != -1)
        swift_once();
      if (*(_QWORD *)(qword_1EE13F4D0 + 16) && (sub_18EC1FB10(v24, v26), (v27 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v28 = v30;
        sub_18EC66F90();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        v29 = (uint64_t (*)(char *, _QWORD))sub_18EC66F0C();
        sub_18EC66FFC();
        return v29(v34, 0);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t Locale.minimalCanonicLocaleIdentifier.getter()
{
  return Locale.canonicIdentifier(includeScript:)(0)._countAndFlagsBits;
}

Swift::String __swiftcall Locale.canonicIdentifier(includeScript:)(Swift::Bool includeScript)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  int64_t v51;
  int64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  int64_t v67;
  Swift::String result;
  uint64_t v69;
  char *v70;
  _BOOL4 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v71 = includeScript;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A038);
  MEMORY[0x1E0C80A78](v2);
  v72 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_18EC66F60();
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  MEMORY[0x1E0C80A78](v4);
  v70 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A048);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A050);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18EC67038();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v69 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A040);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v1;
  sub_18EC67044();
  sub_18EC67014();
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v18, v12);
  v23 = sub_18EC66F84();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
  {
    sub_18EC1E58C((uint64_t)v21, &qword_1EE13A040);
    v65 = sub_18EC67710();
    __break(1u);
    goto LABEL_32;
  }
  v25 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A078);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_18EC6BB40;
  *(_QWORD *)(v28 + 32) = v25;
  *(_QWORD *)(v28 + 40) = v27;
  if (!v71)
    goto LABEL_5;
  sub_18EC67044();
  sub_18EC6702C();
  v22(v16, v12);
  v29 = sub_18EC66FCC();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v29) == 1)
  {
    sub_18EC1E58C((uint64_t)v11, &qword_1EE13A050);
LABEL_5:
    v32 = v73;
    v31 = v74;
    goto LABEL_9;
  }
  v33 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v29);
  v37 = *(_QWORD *)(v28 + 16);
  v36 = *(_QWORD *)(v28 + 24);
  if (v37 >= v36 >> 1)
    v28 = (uint64_t)sub_18EC23730((char *)(v36 > 1), v37 + 1, 1, (char *)v28);
  v32 = v73;
  v31 = v74;
  *(_QWORD *)(v28 + 16) = v37 + 1;
  v38 = v28 + 16 * v37;
  *(_QWORD *)(v38 + 32) = v33;
  *(_QWORD *)(v38 + 40) = v35;
LABEL_9:
  sub_18EC66FE4();
  v39 = sub_18EC66FB4();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v8, 1, v39) == 1)
  {
    sub_18EC1E58C((uint64_t)v8, &qword_1EE13A048);
    v41 = (uint64_t)v72;
  }
  else
  {
    v42 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v39);
    v46 = *(_QWORD *)(v28 + 16);
    v45 = *(_QWORD *)(v28 + 24);
    if (v46 >= v45 >> 1)
      v28 = (uint64_t)sub_18EC23730((char *)(v45 > 1), v46 + 1, 1, (char *)v28);
    v41 = (uint64_t)v72;
    *(_QWORD *)(v28 + 16) = v46 + 1;
    v47 = v28 + 16 * v46;
    *(_QWORD *)(v47 + 32) = v42;
    *(_QWORD *)(v47 + 40) = v44;
  }
  sub_18EC66F6C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v41, 1, v31) != 1)
  {
    v48 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v70, v41, v31);
    v49 = _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0();
    v51 = *(_QWORD *)(v28 + 16);
    v52 = v51 + 3;
    if (__OFADD__(v51, 3))
    {
      __break(1u);
    }
    else
    {
      v41 = v49;
      v48 = v50;
      v53 = *(_QWORD *)(v28 + 24);
      v54 = v53 >> 1;
      if ((uint64_t)(v53 >> 1) >= v52)
      {
LABEL_18:
        v55 = v51 + 1;
        if (v54 <= v51)
        {
          v28 = (uint64_t)sub_18EC23730((char *)(v53 > 1), v51 + 1, 1, (char *)v28);
          v53 = *(_QWORD *)(v28 + 24);
          v54 = v53 >> 1;
        }
        *(_QWORD *)(v28 + 16) = v55;
        v56 = v28 + 16 * v51;
        *(_QWORD *)(v56 + 32) = 117;
        *(_QWORD *)(v56 + 40) = 0xE100000000000000;
        v57 = v51 + 2;
        if ((uint64_t)v54 < v57)
          v28 = (uint64_t)sub_18EC23730((char *)(v53 > 1), v57, 1, (char *)v28);
        *(_QWORD *)(v28 + 16) = v57;
        v58 = v28 + 16 * v55;
        *(_QWORD *)(v58 + 32) = 25715;
        *(_QWORD *)(v58 + 40) = 0xE200000000000000;
        v59 = *(_QWORD *)(v28 + 16);
        v60 = *(_QWORD *)(v28 + 24);
        swift_bridgeObjectRetain();
        if (v59 >= v60 >> 1)
          v28 = (uint64_t)sub_18EC23730((char *)(v60 > 1), v59 + 1, 1, (char *)v28);
        *(_QWORD *)(v28 + 16) = v59 + 1;
        v61 = v28 + 16 * v59;
        *(_QWORD *)(v61 + 32) = v41;
        *(_QWORD *)(v61 + 40) = v48;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v70, v31);
        goto LABEL_25;
      }
    }
    if (v51 <= v52)
      v67 = v51 + 3;
    else
      v67 = v51;
    v28 = (uint64_t)sub_18EC23730((char *)1, v67, 1, (char *)v28);
    v51 = *(_QWORD *)(v28 + 16);
    v53 = *(_QWORD *)(v28 + 24);
    v54 = v53 >> 1;
    goto LABEL_18;
  }
  sub_18EC1E58C(v41, &qword_1EE13A038);
LABEL_25:
  v76 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
  sub_18EC2349C();
  v62 = sub_18EC6714C();
  v64 = v63;
  swift_bridgeObjectRelease();
  v65 = v62;
  v66 = v64;
LABEL_32:
  result._object = v66;
  result._countAndFlagsBits = v65;
  return result;
}

uint64_t Locale.maximalCanonicLocaleIdentifier.getter()
{
  return Locale.canonicIdentifier(includeScript:)(1)._countAndFlagsBits;
}

unint64_t sub_18EC2349C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE13A060;
  if (!qword_1EE13A060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13A058);
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE13A060);
  }
  return result;
}

_QWORD *sub_18EC234E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE139AB8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18EC2361C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18EC23730(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A078);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18EC23830()
{
  uint64_t v0;

  v0 = sub_18EC24328();
  sub_18EC24358(v0);
  return v0;
}

uint64_t sub_18EC23860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_18EC1CDA0(v5);
}

uint64_t (*sub_18EC238B0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AXAsyncStreamSplitter.__allocating_init(initialValueBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AXAsyncStreamSplitter.init(initialValueBlock:)(a1, a2);
  return v4;
}

_QWORD *AXAsyncStreamSplitter.init(initialValueBlock:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  v2[3] = 0;
  v2[2] = 0;
  sub_18EC6741C();
  v2[4] = sub_18EC67308();
  swift_beginAccess();
  v5 = v2[2];
  v2[2] = a1;
  v2[3] = a2;
  sub_18EC1CDA0(v5);
  return v2;
}

uint64_t sub_18EC239C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v2 = v1;
  v28 = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 80);
  v7 = sub_18EC673F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - v9;
  v11 = sub_18EC6741C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v26 - v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DF07B8], v7);
  sub_18EC673D4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v18(v15, v17, v11);
  swift_beginAccess();
  sub_18EC67338();
  sub_18EC67320();
  swift_endAccess();
  swift_beginAccess();
  v19 = v2[2];
  if (v19)
  {
    v20 = v2[3];
    v21 = sub_18EC673C8();
    v22 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v27, 1, 1, v21);
    v18(v15, v17, v11);
    v23 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v24 = (char *)swift_allocObject();
    *((_QWORD *)v24 + 2) = 0;
    *((_QWORD *)v24 + 3) = 0;
    *((_QWORD *)v24 + 4) = v6;
    *((_QWORD *)v24 + 5) = v19;
    *((_QWORD *)v24 + 6) = v20;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v15, v11);
    sub_18EC24358(v19);
    swift_retain();
    sub_18EC23E38(v22, (uint64_t)&unk_1EE13AB88, (uint64_t)v24);
    swift_release();
    sub_18EC1CDA0(v19);
    sub_18EC1CDB0(v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_18EC23C5C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v7[2] = a6;
  v7[3] = a7;
  v10 = sub_18EC673E0();
  v7[4] = v10;
  v7[5] = *(_QWORD *)(v10 - 8);
  v7[6] = swift_task_alloc();
  v7[7] = *(_QWORD *)(a7 - 8);
  v7[8] = swift_task_alloc();
  v11 = swift_task_alloc();
  v7[9] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v7[10] = v12;
  *v12 = v7;
  v12[1] = sub_18EC23D2C;
  return v14(v11);
}

uint64_t sub_18EC23D2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC23D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 64), v1, v6);
  sub_18EC6741C();
  sub_18EC67404();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC23E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC24618(a1, (uint64_t)v8);
  v9 = sub_18EC673C8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_18EC1CDB0((uint64_t)v8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_18EC67350();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_18EC673BC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_18EC23FC0()
{
  uint64_t v0;

  swift_beginAccess();
  sub_18EC6741C();
  v0 = sub_18EC67338();
  swift_bridgeObjectRetain();
  MEMORY[0x193FFA51C](MEMORY[0x1E0DEAF38], v0);
  sub_18EC672A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC2406C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18EC673E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_18EC6741C();
  sub_18EC67404();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t AXAsyncStreamSplitter.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  sub_18EC6741C();
  v1 = sub_18EC67338();
  swift_bridgeObjectRetain();
  MEMORY[0x193FFA51C](MEMORY[0x1E0DEAF38], v1);
  sub_18EC672A8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_18EC6732C();
  swift_endAccess();
  sub_18EC1CDA0(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AXAsyncStreamSplitter.__deallocating_deinit()
{
  AXAsyncStreamSplitter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC24278(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_18EC242DC;
  return v6(a1);
}

uint64_t sub_18EC242DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18EC24328()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_18EC24358(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_18EC24368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_18EC6741C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_18EC243E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[4];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_18EC6741C() - 8) + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v5 + 56) & ~v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_18EC18E18;
  return sub_18EC23C5C(a1, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_18EC24494(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC2406C(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_18EC244AC()
{
  sub_18EC6741C();
  return sub_18EC67410();
}

uint64_t sub_18EC244EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_18EC24328();
  *a1 = v2;
  a1[1] = v3;
  return sub_18EC24358(v2);
}

uint64_t sub_18EC24514(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_18EC24358(*a1);
  return sub_18EC23860(v1, v2);
}

uint64_t sub_18EC24554()
{
  return 8;
}

_QWORD *sub_18EC24560(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_18EC24570()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AXAsyncStreamSplitter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXAsyncStreamSplitter);
}

uint64_t method lookup function for AXAsyncStreamSplitter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.__allocating_init(initialValueBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.subscribe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.send(event:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_18EC24618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC24660()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x193FFA4B0](a1, v6, a5);
}

uint64_t AXCVoiceSelection.voiceId.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___AXCVoiceSelection_voiceId);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AXCVoiceSelection.voiceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___AXCVoiceSelection_voiceId);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_18EC24850(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_voiceId);
  if (v3)
  {
    v4 = v3;
    v5 = sub_18EC671A0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_18EC248B4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_18EC6717C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setVoiceId_);

}

void *AXCVoiceSelection.rate.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_rate);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void AXCVoiceSelection.rate.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_rate);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void *AXCVoiceSelection.pitch.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_pitch);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void AXCVoiceSelection.pitch.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_pitch);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void *AXCVoiceSelection.volume.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_volume);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_18EC24B90(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void **v5;
  void *v6;
  id v7;

  v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a3;
  v7 = a3;

}

void AXCVoiceSelection.volume.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_volume);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t AXCVoiceSelection.voiceSettings.getter()
{
  return sub_18EC24F14();
}

uint64_t AXCVoiceSelection.voiceSettings.setter(uint64_t a1)
{
  return sub_18EC24FD4(a1, &OBJC_IVAR___AXCVoiceSelection_voiceSettings);
}

void sub_18EC24D7C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_voiceSettings);
  if (v3)
  {
    v4 = v3;
    sub_18EC1A6F0(0, &qword_1EE13AC48);
    v5 = sub_18EC67110();

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_18EC24E08(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1)
  {
    sub_18EC1A6F0(0, &qword_1EE13AC48);
    v3 = sub_18EC67104();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)v3;
  objc_msgSend(v2, sel_setVoiceSettings_);

}

uint64_t AXCVoiceSelection.effects.getter()
{
  return sub_18EC24F14();
}

uint64_t sub_18EC24F14()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t AXCVoiceSelection.effects.setter(uint64_t a1)
{
  return sub_18EC24FD4(a1, &OBJC_IVAR___AXCVoiceSelection_effects);
}

uint64_t sub_18EC24FD4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

void sub_18EC25020(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_effects);
  if (v3)
  {
    v4 = v3;
    type metadata accessor for AXAudioEffectConfiguration(0);
    v5 = sub_18EC672FC();

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_18EC2508C(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1)
  {
    type metadata accessor for AXAudioEffectConfiguration(0);
    v3 = sub_18EC672F0();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)v3;
  objc_msgSend(v2, sel_setEffects_);

}

void __swiftcall AXCVoiceSelection.init(voiceId:rate:pitch:volume:voiceSettings:effects:)(AXCVoiceSelection *__return_ptr retstr, Swift::String_optional voiceId, NSNumber_optional rate, NSNumber_optional pitch, NSNumber_optional volume, Swift::OpaquePointer_optional voiceSettings, Swift::OpaquePointer_optional effects)
{
  Class isa;
  uint64_t v8;
  Class v9;
  void *v10;
  Class v11;
  void *v12;
  void *v13;
  void *v14;

  isa = volume.value.super.super.isa;
  v8 = *(_QWORD *)&pitch.is_nil;
  v9 = pitch.value.super.super.isa;
  v10 = *(void **)&rate.is_nil;
  v11 = rate.value.super.super.isa;
  if (voiceId.value._object)
  {
    v12 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
LABEL_6:
    v13 = 0;
    if (isa)
      goto LABEL_4;
LABEL_7:
    v14 = 0;
    goto LABEL_8;
  }
  v12 = 0;
  if (!*(_QWORD *)&pitch.is_nil)
    goto LABEL_6;
LABEL_3:
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v13 = (void *)sub_18EC67104();
  swift_bridgeObjectRelease();
  if (!isa)
    goto LABEL_7;
LABEL_4:
  type metadata accessor for AXAudioEffectConfiguration(0);
  v14 = (void *)sub_18EC672F0();
  swift_bridgeObjectRelease();
LABEL_8:
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithVoiceId_rate_pitch_volume_voiceSettings_effects_, v12, v11, v10, v9, v13, v14);

}

id AXCVoiceSelection.init(voiceId:rate:pitch:volume:voiceSettings:effects:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v10;

  v10 = sub_18EC25C98(a1, a2, a3, a4, a5, a6, a7);

  return v10;
}

void __swiftcall AXCVoiceSelection.init()(AXCVoiceSelection *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void AXCVoiceSelection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void __swiftcall VoiceSelection._bridgeToObjectiveC()(AXCVoiceSelection *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  double v15;
  id v16;
  int v17;
  id v18;
  double v19;
  id v20;
  uint64_t v21;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 28);
  v6 = *(_DWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 36);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  if ((*(_BYTE *)(v1 + 20) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    if ((v5 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v17 = *(_DWORD *)(v1 + 16);
    v18 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    LODWORD(v19) = v17;
    v10 = objc_msgSend(v18, sel_initWithFloat_, v19);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      v11 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v12) = v4;
      v13 = objc_msgSend(v11, sel_initWithFloat_, v12);
      if ((v7 & 1) == 0)
        goto LABEL_4;
LABEL_8:
      v16 = 0;
      if (!v9)
        goto LABEL_10;
      goto LABEL_9;
    }
  }
  v13 = 0;
  if ((v7 & 1) != 0)
    goto LABEL_8;
LABEL_4:
  v14 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v15) = v6;
  v16 = objc_msgSend(v14, sel_initWithFloat_, v15);
  if (v9)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC68);
    swift_dynamicCast();
    v9 = v21;
  }
LABEL_10:
  if (v8)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC58);
    swift_dynamicCast();
    v8 = v21;
  }
  v20 = objc_allocWithZone((Class)AXCVoiceSelection);
  sub_18EC25B70(v2, v3, v10, v13, v16, v9, v8);
}

uint64_t static VoiceSelection._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t *a2)
{
  uint64_t result;

  result = _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    result = sub_18EC67710();
    __break(1u);
  }
  return result;
}

uint64_t sub_18EC256B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  int64_t v13;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ACA0);
    v2 = sub_18EC67734();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
LABEL_23:
    v11 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    v12 = v11;
    MEMORY[0x193FF90C4]();

    swift_bridgeObjectRelease();
    sub_18EC26288();
    swift_release();
    return 0;
  }
  if (v13 <= 1)
    goto LABEL_24;
  v8 = *(_QWORD *)(a1 + 72);
  v9 = 1;
  if (v8)
  {
LABEL_22:
    v7 = __clz(__rbit64(v8)) + (v9 << 6);
    goto LABEL_23;
  }
  v9 = 2;
  if (v13 <= 2)
  {
LABEL_24:
    sub_18EC26288();
    return v2;
  }
  v8 = *(_QWORD *)(a1 + 80);
  if (v8)
    goto LABEL_22;
  v9 = 3;
  if (v13 <= 3)
    goto LABEL_24;
  v8 = *(_QWORD *)(a1 + 88);
  if (v8)
    goto LABEL_22;
  v9 = 4;
  if (v13 <= 4)
    goto LABEL_24;
  v8 = *(_QWORD *)(a1 + 96);
  if (v8)
    goto LABEL_22;
  v10 = 5;
  if (v13 <= 5)
    goto LABEL_24;
  v8 = *(_QWORD *)(a1 + 104);
  if (v8)
  {
    v9 = 5;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v8 = *(_QWORD *)(a1 + 64 + 8 * v9);
    ++v10;
    if (v8)
      goto LABEL_22;
  }
  __break(1u);
  return result;
}

void static VoiceSelection._unconditionallyBridgeFromObjectiveC(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];

  if (a1
    && (v9 = xmmword_18EC6C3F0,
        v10 = 0u,
        memset(v11, 0, 24),
        v3 = a1,
        (_s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(v3, (uint64_t *)&v9) & 1) != 0)&& (v4 = *((_QWORD *)&v9 + 1), *((_QWORD *)&v9 + 1) != 1))
  {
    v6 = *((_QWORD *)&v10 + 1);
    v5 = *(_QWORD *)&v11[0];
    v7 = v10;
    v8 = v9;

    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 16) = v7;
    *(_BYTE *)(a2 + 20) = BYTE4(v7) & 1;
    *(_DWORD *)(a2 + 24) = v6;
    *(_BYTE *)(a2 + 28) = BYTE4(v6) & 1;
    *(_DWORD *)(a2 + 32) = v5;
    *(_BYTE *)(a2 + 36) = BYTE4(v5) & 1;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)((char *)v11 + 8);
  }
  else
  {
    sub_18EC67710();
    __break(1u);
  }
}

uint64_t sub_18EC25AFC(void *a1, uint64_t *a2)
{
  uint64_t result;

  result = _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    result = sub_18EC67710();
    __break(1u);
  }
  return result;
}

id sub_18EC25B70(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v8 = v7;
  if (a2)
  {
    v14 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_3;
LABEL_6:
    v15 = 0;
    if (a7)
      goto LABEL_4;
LABEL_7:
    v16 = 0;
    goto LABEL_8;
  }
  v14 = 0;
  if (!a6)
    goto LABEL_6;
LABEL_3:
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v15 = (void *)sub_18EC67104();
  swift_bridgeObjectRelease();
  if (!a7)
    goto LABEL_7;
LABEL_4:
  type metadata accessor for AXAudioEffectConfiguration(0);
  v16 = (void *)sub_18EC672F0();
  swift_bridgeObjectRelease();
LABEL_8:
  v17 = objc_msgSend(v8, sel_initWithVoiceId_rate_pitch_volume_voiceSettings_effects_, v14, a3, a4, a5, v15, v16);

  return v17;
}

id sub_18EC25C98(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v10;
  void **v11;
  void **v12;
  void **v13;
  char *v14;
  char *v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  objc_super v29;

  v10 = &v7[OBJC_IVAR___AXCVoiceSelection_voiceId];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_rate];
  *(_QWORD *)&v7[OBJC_IVAR___AXCVoiceSelection_rate] = 0;
  v12 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_pitch];
  *(_QWORD *)&v7[OBJC_IVAR___AXCVoiceSelection_pitch] = 0;
  v13 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_volume];
  *(_QWORD *)&v7[OBJC_IVAR___AXCVoiceSelection_volume] = 0;
  v14 = &v7[OBJC_IVAR___AXCVoiceSelection_voiceSettings];
  *(_QWORD *)&v7[OBJC_IVAR___AXCVoiceSelection_voiceSettings] = 0;
  v15 = &v7[OBJC_IVAR___AXCVoiceSelection_effects];
  *(_QWORD *)&v7[OBJC_IVAR___AXCVoiceSelection_effects] = 0;
  swift_beginAccess();
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v16 = v7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = *v11;
  *v11 = a3;
  v18 = a3;

  swift_beginAccess();
  v19 = *v12;
  *v12 = a4;
  v20 = a4;

  swift_beginAccess();
  v21 = *v13;
  *v13 = a5;
  v22 = a5;

  swift_beginAccess();
  *(_QWORD *)v14 = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)v15 = a7;

  swift_bridgeObjectRelease();
  v29.receiver = v16;
  v29.super_class = (Class)AXCVoiceSelection;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(void *a1, uint64_t *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  void *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  id v18;
  void *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_18EC26248(*a2, a2[1]);
  v4 = objc_msgSend(a1, sel_voiceId);
  if (v4)
  {
    v5 = v4;
    v6 = sub_18EC671A0();
    v29 = v7;
    v31 = v6;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v8 = objc_msgSend(a1, sel_rate, v29, v31);
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, sel_floatValue);
    v11 = v10;

    v12 = v11;
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(a1, sel_pitch);
  v14 = v13;
  if (v13)
  {
    objc_msgSend(v13, sel_floatValue);
    v16 = v15;

    v17 = v16;
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(a1, sel_volume);
  v19 = v18;
  if (v18)
  {
    objc_msgSend(v18, sel_floatValue);
    v21 = v20;

    v22 = v21;
  }
  else
  {
    v22 = 0;
  }
  v23 = objc_msgSend(a1, sel_effects);
  if (v23)
  {
    v24 = v23;
    type metadata accessor for AXAudioEffectConfiguration(0);
    sub_18EC672FC();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC50);
    if (swift_dynamicCast())
      v25 = v33;
    else
      v25 = 0;
  }
  else
  {
    v25 = 0;
  }
  v26 = objc_msgSend(a1, sel_voiceSettings);
  if (v26)
  {
    sub_18EC1A6F0(0, &qword_1EE13AC48);
    v27 = sub_18EC67110();

    v26 = (id)sub_18EC256B0(v27);
    swift_bridgeObjectRelease();
  }
  *a2 = v32;
  a2[1] = v30;
  a2[2] = v12 | ((unint64_t)(v9 == 0) << 32);
  a2[3] = v17 | ((unint64_t)(v14 == 0) << 32);
  a2[4] = v22 | ((unint64_t)(v19 == 0) << 32);
  a2[5] = v25;
  a2[6] = (uint64_t)v26;
  return 1;
}

char *keypath_get_selector_voiceId()
{
  return sel_voiceId;
}

char *keypath_get_selector_rate()
{
  return sel_rate;
}

id sub_18EC26110@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_rate);
  *a2 = result;
  return result;
}

id sub_18EC26148(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRate_, *a1);
}

char *keypath_get_selector_pitch()
{
  return sel_pitch;
}

id sub_18EC26168@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_pitch);
  *a2 = result;
  return result;
}

id sub_18EC261A0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPitch_, *a1);
}

char *keypath_get_selector_volume()
{
  return sel_volume;
}

id sub_18EC261C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_volume);
  *a2 = result;
  return result;
}

id sub_18EC261F8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVolume_, *a1);
}

char *keypath_get_selector_voiceSettings()
{
  return sel_voiceSettings;
}

char *keypath_get_selector_effects()
{
  return sel_effects;
}

uint64_t type metadata accessor for AXCVoiceSelection(uint64_t a1)
{
  return sub_18EC1A6F0(a1, &qword_1EE13AC98);
}

uint64_t sub_18EC26248(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18EC26288()
{
  return swift_release();
}

uint64_t VoiceSelection.init(voiceId:rate:pitch:volume:effects:voiceSettings:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 28) = BYTE4(a4) & 1;
  *(_DWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 36) = BYTE4(a5) & 1;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t VoiceSelection.voiceId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18EC262EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;

  v3 = *a1;
  v4 = a1[1];
  result = *a2;
  v6 = a2[1];
  *a2 = v3;
  a2[1] = v4;
  if (v6)
  {
    if (v4)
    {
      v7 = result == v3 && v6 == v4;
      if (v7 || (sub_18EC679A4() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRelease();
      }
    }
  }
  else if (!v4)
  {
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  a2[6] = 0;
  return result;
}

uint64_t VoiceSelection.voiceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  BOOL v6;

  result = *v2;
  v5 = v2[1];
  *v2 = a1;
  v2[1] = a2;
  if (v5)
  {
    if (a2)
    {
      v6 = result == a1 && v5 == a2;
      if (v6 || (sub_18EC679A4() & 1) != 0)
        return swift_bridgeObjectRelease();
    }
  }
  else if (!a2)
  {
    return result;
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v2[6] = 0;
  return result;
}

uint64_t (*VoiceSelection.voiceId.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_18EC26434;
}

uint64_t sub_18EC26434(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v2 = a1[1];
  v3 = (uint64_t *)a1[2];
  v4 = *a1;
  result = *v3;
  v6 = v3[1];
  *v3 = v4;
  v3[1] = v2;
  if ((a2 & 1) != 0)
  {
    if (v6)
    {
      if (v2)
      {
        v7 = result == v4 && v6 == v2;
        if (v7 || (sub_18EC679A4() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
    }
    else if (!v2)
    {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3[6] = 0;
    return swift_bridgeObjectRelease();
  }
  if (v6)
  {
    if (v2)
    {
      v8 = result == v4 && v6 == v2;
      if (v8 || (sub_18EC679A4() & 1) != 0)
        return swift_bridgeObjectRelease();
    }
  }
  else if (!v2)
  {
    return result;
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3[6] = 0;
  return result;
}

unint64_t VoiceSelection.rate.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t VoiceSelection.rate.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.rate.modify())()
{
  return nullsub_1;
}

unint64_t VoiceSelection.pitch.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t VoiceSelection.pitch.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.pitch.modify())()
{
  return nullsub_1;
}

unint64_t VoiceSelection.volume.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t VoiceSelection.volume.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.volume.modify())()
{
  return nullsub_1;
}

uint64_t VoiceSelection.effects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VoiceSelection.effects.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*VoiceSelection.effects.modify())()
{
  return nullsub_1;
}

uint64_t VoiceSelection.voiceSettings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VoiceSelection.voiceSettings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*VoiceSelection.voiceSettings.modify())()
{
  return nullsub_1;
}

unint64_t static VoiceSelection.typeKey.getter()
{
  return 0xD000000000000015;
}

void sub_18EC26680()
{
  qword_1EE13ACA8 = MEMORY[0x1E0DEE9D8];
}

uint64_t static VoiceSelection.migrations.getter()
{
  if (qword_1EE13A6C8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static VoiceSelection.migrations.setter(uint64_t a1)
{
  if (qword_1EE13A6C8 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EE13ACA8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static VoiceSelection.migrations.modify())()
{
  if (qword_1EE13A6C8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t VoiceSelection.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 20);
  v5 = *(unsigned __int8 *)(v2 + 28);
  v6 = *(unsigned __int8 *)(v2 + 36);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  if (*(_QWORD *)(v2 + 8))
  {
    sub_18EC67AC4();
    swift_bridgeObjectRetain();
    sub_18EC6720C();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    sub_18EC67AC4();
    if (v4)
    {
LABEL_3:
      sub_18EC67AC4();
      if (!v5)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  sub_18EC67AC4();
  sub_18EC67AD0();
  if (!v5)
  {
LABEL_4:
    sub_18EC67AC4();
    sub_18EC67AD0();
    if (!v6)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  sub_18EC67AC4();
  if (!v6)
  {
LABEL_5:
    sub_18EC67AC4();
    sub_18EC67AD0();
    if (v8)
      goto LABEL_6;
LABEL_12:
    sub_18EC67AC4();
    if (v7)
      goto LABEL_7;
    return sub_18EC67AC4();
  }
LABEL_11:
  sub_18EC67AC4();
  if (!v8)
    goto LABEL_12;
LABEL_6:
  sub_18EC67AC4();
  swift_bridgeObjectRetain();
  sub_18EC27878(a1, v8);
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_7:
    sub_18EC67AC4();
    swift_bridgeObjectRetain();
    sub_18EC276D4(a1, v7);
    return swift_bridgeObjectRelease();
  }
  return sub_18EC67AC4();
}

BOOL sub_18EC2697C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_18EC26990()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

uint64_t sub_18EC269D4()
{
  return sub_18EC67AB8();
}

uint64_t sub_18EC269FC()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

uint64_t sub_18EC26A3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18EC26A6C + 4 * byte_18EC6C448[*v0]))(0x64496563696F76, 0xE700000000000000);
}

uint64_t sub_18EC26A6C()
{
  return 1702125938;
}

uint64_t sub_18EC26A7C()
{
  return 0x6863746970;
}

uint64_t sub_18EC26A90()
{
  return 0x656D756C6F76;
}

uint64_t sub_18EC26AA4()
{
  return 0x73746365666665;
}

uint64_t sub_18EC26AB8()
{
  return 0x7465536563696F76;
}

uint64_t sub_18EC26ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18EC282E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18EC26B00()
{
  return 0;
}

void sub_18EC26B0C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_18EC26B18()
{
  sub_18EC27BA4();
  return sub_18EC67B54();
}

uint64_t sub_18EC26B40()
{
  sub_18EC27BA4();
  return sub_18EC67B60();
}

uint64_t VoiceSelection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ACB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(unsigned int *)(v1 + 16);
  v24 = *(unsigned __int8 *)(v1 + 20);
  v21 = *(unsigned int *)(v1 + 24);
  v20 = *(unsigned __int8 *)(v1 + 28);
  v19 = *(unsigned int *)(v1 + 32);
  v18 = *(unsigned __int8 *)(v1 + 36);
  v8 = *(_QWORD *)(v1 + 40);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_18EC27BA4();
  sub_18EC67B18();
  LOBYTE(v23) = 0;
  sub_18EC677AC();
  if (!v2)
  {
    v13 = v20;
    v14 = v18;
    LOBYTE(v23) = 1;
    v25 = v24;
    sub_18EC677B8();
    LOBYTE(v23) = 2;
    v25 = v13;
    sub_18EC677B8();
    LOBYTE(v23) = 3;
    v25 = v14;
    sub_18EC677B8();
    v23 = v17;
    v25 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC50);
    sub_18EC27BE8(&qword_1EE13ACC0, &qword_1EE13ACC8, (uint64_t)&protocol conformance descriptor for AudioEffectConfiguration, MEMORY[0x1E0DEAF10]);
    sub_18EC677C4();
    v23 = v16;
    v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC60);
    sub_18EC27C6C(&qword_1EE13ACD0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB198], MEMORY[0x1E0DEA0B8]);
    sub_18EC677C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t VoiceSelection.hashValue.getter()
{
  __int128 *v0;
  int v1;
  char v2;
  int v3;
  char v4;
  int v5;
  char v6;
  _BYTE v8[72];
  __int128 v9;
  int v10;
  char v11;
  int v12;
  char v13;
  int v14;
  char v15;
  __int128 v16;

  v1 = *((_DWORD *)v0 + 4);
  v2 = *((_BYTE *)v0 + 20);
  v3 = *((_DWORD *)v0 + 6);
  v4 = *((_BYTE *)v0 + 28);
  v5 = *((_DWORD *)v0 + 8);
  v6 = *((_BYTE *)v0 + 36);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = *(__int128 *)((char *)v0 + 40);
  sub_18EC67AAC();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18EC67ADC();
}

uint64_t VoiceSelection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ACD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18EC27BA4();
  sub_18EC67B0C();
  if (!v2)
  {
    LOBYTE(v25) = 0;
    v10 = sub_18EC67758();
    v12 = v11;
    LOBYTE(v25) = 1;
    swift_bridgeObjectRetain();
    v23 = sub_18EC67764();
    LOBYTE(v25) = 2;
    v22 = sub_18EC67764();
    LOBYTE(v25) = 3;
    v21 = sub_18EC67764();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC50);
    v24 = 4;
    sub_18EC27BE8(&qword_1EE13ACE0, &qword_1EE13ACE8, (uint64_t)&protocol conformance descriptor for AudioEffectConfiguration, MEMORY[0x1E0DEAF40]);
    sub_18EC67770();
    v20 = a2;
    v13 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC60);
    v24 = 5;
    sub_18EC27C6C(&qword_1EE13ACF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_18EC67770();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15 = v20;
    *v20 = v10;
    v15[1] = v12;
    v16 = BYTE4(v23);
    *((_DWORD *)v15 + 4) = v23;
    *((_BYTE *)v15 + 20) = v16 & 1;
    v17 = BYTE4(v22);
    *((_DWORD *)v15 + 6) = v22;
    *((_BYTE *)v15 + 28) = v17 & 1;
    v18 = BYTE4(v21);
    *((_DWORD *)v15 + 8) = v21;
    *((_BYTE *)v15 + 36) = v18 & 1;
    v15[5] = v13;
    v15[6] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_18EC271D0()
{
  return 0xD000000000000015;
}

uint64_t sub_18EC271EC()
{
  if (qword_1EE13A6C8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC2725C()
{
  __int128 *v0;
  int v1;
  char v2;
  int v3;
  char v4;
  int v5;
  char v6;
  _BYTE v8[72];
  __int128 v9;
  int v10;
  char v11;
  int v12;
  char v13;
  int v14;
  char v15;
  __int128 v16;

  v1 = *((_DWORD *)v0 + 4);
  v2 = *((_BYTE *)v0 + 20);
  v3 = *((_DWORD *)v0 + 6);
  v4 = *((_BYTE *)v0 + 28);
  v5 = *((_DWORD *)v0 + 8);
  v6 = *((_BYTE *)v0 + 36);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = *(__int128 *)((char *)v0 + 40);
  sub_18EC67AAC();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18EC67ADC();
}

uint64_t sub_18EC272E0()
{
  __int128 *v0;
  int v1;
  char v2;
  int v3;
  char v4;
  int v5;
  char v6;
  _BYTE v8[72];
  __int128 v9;
  int v10;
  char v11;
  int v12;
  char v13;
  int v14;
  char v15;
  __int128 v16;

  v1 = *((_DWORD *)v0 + 4);
  v2 = *((_BYTE *)v0 + 20);
  v3 = *((_DWORD *)v0 + 6);
  v4 = *((_BYTE *)v0 + 28);
  v5 = *((_DWORD *)v0 + 8);
  v6 = *((_BYTE *)v0 + 36);
  v9 = *v0;
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = *(__int128 *)((char *)v0 + 40);
  sub_18EC67AAC();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18EC67ADC();
}

uint64_t sub_18EC2735C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return VoiceSelection.init(from:)(a1, a2);
}

uint64_t sub_18EC27370(_QWORD *a1)
{
  return VoiceSelection.encode(to:)(a1);
}

uint64_t sub_18EC27384(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  char v21;
  char v22;
  uint64_t v24;

  v4 = (int *)type metadata accessor for AudioEffectConfiguration();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v22 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      while (1)
      {
        v15 = v14;
        sub_18EC2856C(a1 + v12, (uint64_t)v10);
        sub_18EC2856C(a2 + v12, (uint64_t)v7);
        if ((sub_18EC66EDC() & 1) == 0)
          break;
        v16 = v4[5];
        v17 = *(_QWORD *)&v10[v16];
        v18 = *(_QWORD *)&v10[v16 + 8];
        v19 = &v7[v16];
        v20 = v17 == *(_QWORD *)v19 && v18 == *((_QWORD *)v19 + 1);
        if (!v20 && (sub_18EC679A4() & 1) == 0
          || (sub_18EC61944(*(_QWORD *)&v10[v4[6]], *(_QWORD *)&v7[v4[6]]) & 1) == 0
          || (sub_18EC61AF4(*(_QWORD *)&v10[v4[7]], *(_QWORD *)&v7[v4[7]]) & 1) == 0)
        {
          break;
        }
        v21 = v10[v4[8]] ^ v7[v4[8]];
        sub_18EC285B0((uint64_t)v7);
        sub_18EC285B0((uint64_t)v10);
        if ((v21 & 1) == 0)
        {
          v14 = v15 - 1;
          v12 += v13;
          if (v15)
            continue;
        }
        v22 = v21 ^ 1;
        return v22 & 1;
      }
      sub_18EC285B0((uint64_t)v7);
      sub_18EC285B0((uint64_t)v10);
      v22 = 0;
    }
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_18EC27534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_19;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_18EC6720C();
    swift_bridgeObjectRelease();
    sub_18EC67AD0();
    result = sub_18EC67ADC();
    v8 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_18EC67AB8();
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_18EC276D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_19;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_18EC6720C();
    swift_bridgeObjectRelease();
    sub_18EC67AD0();
    result = sub_18EC67ADC();
    v8 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_18EC67AB8();
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_19;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_18EC27878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for AudioEffectConfiguration();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  result = sub_18EC67AB8();
  if (v8)
  {
    v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    v12 = MEMORY[0x1E0CB09C8];
    do
    {
      sub_18EC2856C(v10, (uint64_t)v7);
      sub_18EC66F00();
      sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], v12);
      sub_18EC67140();
      swift_bridgeObjectRetain();
      sub_18EC6720C();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)&v7[*(int *)(v4 + 24)];
      swift_bridgeObjectRetain();
      sub_18EC276D4(a1, v13);
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)&v7[*(int *)(v4 + 28)];
      swift_bridgeObjectRetain();
      sub_18EC27534(a1, v14);
      swift_bridgeObjectRelease();
      sub_18EC67AC4();
      result = sub_18EC285B0((uint64_t)v7);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

BOOL _s15AXCoreUtilities14VoiceSelectionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  float v4;
  char v5;
  float v6;
  char v7;
  float v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  int v14;
  float v15;
  int v16;
  float v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(float *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  v6 = *(float *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 28);
  v8 = *(float *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 36);
  v11 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(float *)(a2 + 16);
  v14 = *(unsigned __int8 *)(a2 + 20);
  v15 = *(float *)(a2 + 24);
  v16 = *(unsigned __int8 *)(a2 + 28);
  v17 = *(float *)(a2 + 32);
  v18 = *(unsigned __int8 *)(a2 + 36);
  v20 = *(_QWORD *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  if (!v3)
  {
    if (v12)
      return 0;
    goto LABEL_8;
  }
  if (!v12)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v12 || (v21 = sub_18EC679A4(), result = 0, (v21 & 1) != 0))
  {
LABEL_8:
    if ((v5 & 1) != 0)
    {
      if (!v14)
        return 0;
    }
    else
    {
      if (v4 == v13)
        v23 = v14;
      else
        v23 = 1;
      if ((v23 & 1) != 0)
        return 0;
    }
    if ((v7 & 1) != 0)
    {
      if (!v16)
        return 0;
    }
    else
    {
      if (v6 == v15)
        v24 = v16;
      else
        v24 = 1;
      if ((v24 & 1) != 0)
        return 0;
    }
    if ((v9 & 1) != 0)
    {
      if (!v18)
        return 0;
    }
    else
    {
      if (v8 == v17)
        v25 = v18;
      else
        v25 = 1;
      if ((v25 & 1) != 0)
        return 0;
    }
    if (v11)
    {
      if (!v20)
        return 0;
      swift_bridgeObjectRetain();
      v26 = swift_bridgeObjectRetain();
      v27 = sub_18EC27384(v26, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        return 0;
    }
    else if (v20)
    {
      return 0;
    }
    if (v10)
    {
      if (!v19)
        return 0;
      swift_bridgeObjectRetain();
      v28 = swift_bridgeObjectRetain();
      v29 = sub_18EC61944(v28, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v29 & 1) != 0;
    }
    return !v19;
  }
  return result;
}

unint64_t sub_18EC27BA4()
{
  unint64_t result;

  result = qword_1EE13ACB8;
  if (!qword_1EE13ACB8)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6C618, &type metadata for VoiceSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13ACB8);
  }
  return result;
}

uint64_t sub_18EC27BE8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13AC50);
    v10 = sub_18EC19538(a2, (uint64_t (*)(uint64_t))type metadata accessor for AudioEffectConfiguration, a3);
    result = MEMORY[0x193FFA51C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC27C6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13AC60);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x193FFA51C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18EC27CD0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_18EC27CFC();
  result = sub_18EC27D40();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_18EC27CFC()
{
  unint64_t result;

  result = qword_1EE13ACF8;
  if (!qword_1EE13ACF8)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for VoiceSelection, &type metadata for VoiceSelection);
    atomic_store(result, (unint64_t *)&qword_1EE13ACF8);
  }
  return result;
}

unint64_t sub_18EC27D40()
{
  unint64_t result;

  result = qword_1EE13AD00;
  if (!qword_1EE13AD00)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for VoiceSelection, &type metadata for VoiceSelection);
    atomic_store(result, (unint64_t *)&qword_1EE13AD00);
  }
  return result;
}

unint64_t sub_18EC27D88()
{
  unint64_t result;

  result = qword_1EE13AD08;
  if (!qword_1EE13AD08)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for VoiceSelection, &type metadata for VoiceSelection);
    atomic_store(result, (unint64_t *)&qword_1EE13AD08);
  }
  return result;
}

uint64_t sub_18EC27DCC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for VoiceSelection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VoiceSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VoiceSelection(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  v6 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VoiceSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceSelection(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceSelection()
{
  return &type metadata for VoiceSelection;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VoiceSelection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceSelection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_18EC28180 + 4 * byte_18EC6C453[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_18EC281B4 + 4 * byte_18EC6C44E[v4]))();
}

uint64_t sub_18EC281B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC281BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18EC281C4);
  return result;
}

uint64_t sub_18EC281D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18EC281D8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_18EC281DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC281E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC281F0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_18EC281F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VoiceSelection.CodingKeys()
{
  return &type metadata for VoiceSelection.CodingKeys;
}

unint64_t sub_18EC28214()
{
  unint64_t result;

  result = qword_1EE13AD10;
  if (!qword_1EE13AD10)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6C5F0, &type metadata for VoiceSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13AD10);
  }
  return result;
}

unint64_t sub_18EC2825C()
{
  unint64_t result;

  result = qword_1EE13AD18;
  if (!qword_1EE13AD18)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6C560, &type metadata for VoiceSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13AD18);
  }
  return result;
}

unint64_t sub_18EC282A4()
{
  unint64_t result;

  result = qword_1EE13AD20;
  if (!qword_1EE13AD20)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6C588, &type metadata for VoiceSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13AD20);
  }
  return result;
}

uint64_t sub_18EC282E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64496563696F76 && a2 == 0xE700000000000000;
  if (v2 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125938 && a2 == 0xE400000000000000 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746970 && a2 == 0xE500000000000000 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7465536563696F76 && a2 == 0xED000073676E6974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_18EC679A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_18EC2856C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC285B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18EC285EC()
{
  sub_18EC19538(&qword_1EE13AD78, (uint64_t (*)(uint64_t))type metadata accessor for AXMagnifierFilterSetIdentifier, (uint64_t)&unk_18EC6BCA4);
  return sub_18EC672E4();
}

uint64_t sub_18EC28660()
{
  sub_18EC19538(&qword_1EE13AD78, (uint64_t (*)(uint64_t))type metadata accessor for AXMagnifierFilterSetIdentifier, (uint64_t)&unk_18EC6BCA4);
  return sub_18EC672CC();
}

uint64_t sub_18EC286C4()
{
  sub_18EC19538(&qword_1EE13AD70, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverFeedbackOption, (uint64_t)&unk_18EC6BCE0);
  return sub_18EC672D8();
}

uint64_t sub_18EC28738()
{
  sub_18EC19538(&qword_1EE13AD70, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverFeedbackOption, (uint64_t)&unk_18EC6BCE0);
  return sub_18EC672C0();
}

uint64_t sub_18EC2879C()
{
  return sub_18EC19538(&qword_1EE13AD28, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverFeedbackOption, (uint64_t)&unk_18EC6BECC);
}

uint64_t sub_18EC287CC()
{
  return sub_18EC67AB8();
}

uint64_t sub_18EC287F8()
{
  sub_18EC19538(&qword_1EE13AD68, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNumberFeedback, (uint64_t)&unk_18EC6BD1C);
  return sub_18EC672D8();
}

uint64_t sub_18EC2886C()
{
  sub_18EC19538(&qword_1EE13AD68, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNumberFeedback, (uint64_t)&unk_18EC6BD1C);
  return sub_18EC672C0();
}

uint64_t sub_18EC288D0()
{
  return sub_18EC19538(&qword_1EE13AD30, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNumberFeedback, (uint64_t)&unk_18EC6BEA0);
}

uint64_t sub_18EC288FC()
{
  sub_18EC19538(&qword_1EE13AD60, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNavigationStyle, (uint64_t)&unk_18EC6BD58);
  return sub_18EC672D8();
}

uint64_t sub_18EC28970()
{
  sub_18EC19538(&qword_1EE13AD60, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNavigationStyle, (uint64_t)&unk_18EC6BD58);
  return sub_18EC672C0();
}

uint64_t sub_18EC289D4()
{
  return sub_18EC19538(&qword_1EE13AD38, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverNavigationStyle, (uint64_t)&unk_18EC6BE74);
}

uint64_t sub_18EC28A00()
{
  sub_18EC19538(&qword_1EE13AD58, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverKeyboardModifierChoice, (uint64_t)&unk_18EC6BD94);
  return sub_18EC672D8();
}

uint64_t sub_18EC28A74()
{
  sub_18EC19538(&qword_1EE13AD58, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverKeyboardModifierChoice, (uint64_t)&unk_18EC6BD94);
  return sub_18EC672C0();
}

uint64_t sub_18EC28AD8()
{
  return sub_18EC19538(&qword_1EE13AD40, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverKeyboardModifierChoice, (uint64_t)&unk_18EC6BE48);
}

uint64_t sub_18EC28B04()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

uint64_t sub_18EC28B48()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

uint64_t sub_18EC28B88()
{
  sub_18EC19538(&qword_1EE13AD50, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverBrailleMode, (uint64_t)&unk_18EC6BDD0);
  return sub_18EC672D8();
}

uint64_t sub_18EC28BFC()
{
  sub_18EC19538(&qword_1EE13AD50, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverBrailleMode, (uint64_t)&unk_18EC6BDD0);
  return sub_18EC672C0();
}

uint64_t sub_18EC28C60()
{
  sub_18EC19538(&qword_1EE13AD48, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverBrailleGesturesSoundOption, (uint64_t)&unk_18EC6BE0C);
  return sub_18EC672D8();
}

uint64_t sub_18EC28CD4()
{
  sub_18EC19538(&qword_1EE13AD48, (uint64_t (*)(uint64_t))type metadata accessor for AXSVoiceOverBrailleGesturesSoundOption, (uint64_t)&unk_18EC6BE0C);
  return sub_18EC672C0();
}

uint64_t sub_18EC28D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  sub_18EC1B600(a1, (uint64_t)v18);
  v7 = (void *)sub_18EC67A4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v8 = type metadata accessor for FieldAccessor(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18EC6C300;
  v13 = v12 + v11;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v14, v13);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v15, v13 + v10);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)&unk_1EE13F550);
  sub_18EC3F7B8(v16, v13 + 2 * v10);
  sub_18EC2917C(v7, a2, a3, v12, (uint64_t)sub_18EC29160, 0, (uint64_t)v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  if (v18[3] != 1)
    return sub_18EC3F9F8((uint64_t)v18, (uint64_t)a4, &qword_1EE139AC8);
  *a4 = 0u;
  a4[1] = 0u;
  return sub_18EC1E58C((uint64_t)v18, &qword_1EE13ADA8);
}

uint64_t safeValue<A>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v6 = (void *)sub_18EC67998();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v7 = type metadata accessor for FieldAccessor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_18EC6C300;
  v12 = v11 + v10;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v13, v12);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v14, v12 + v9);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v15, v12 + 2 * v9);
  sub_18EC2917C(v6, a1, a2, v11, (uint64_t)sub_18EC29160, 0, (uint64_t)v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  if (v17[3] != 1)
    return sub_18EC3F9F8((uint64_t)v17, (uint64_t)a3, &qword_1EE139AC8);
  *a3 = 0u;
  a3[1] = 0u;
  return sub_18EC1E58C((uint64_t)v17, &qword_1EE13ADA8);
}

uint64_t sub_18EC29160()
{
  return 1;
}

uint64_t type metadata accessor for FieldAccessor(uint64_t a1)
{
  return sub_18EC1CC74(a1, qword_1EE13AFD8);
}

uint64_t sub_18EC2917C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t isClassType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v42)();
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v50 = a3;
  v13 = sub_18EC67704();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC2E898(a1, &v52);
  if (v53)
  {
    sub_18EC3FA60(&v52, &v54);
    __swift_project_boxed_opaque_existential_1(&v54, v55);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
    v20 = sub_18EC3F380(a7, ObjectType, (uint64_t)&v54, ObjectType, a4, (uint64_t)a1, a2, v50, a5, a6, v19, ObjectType);
    v22 = v21;
    v23 = v20 & 1;
    v24 = (v20 >> 8) & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  }
  else
  {
    v45 = v13;
    v48 = a7;
    sub_18EC1E58C((uint64_t)&v52, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v25 = a6;
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v46 = v26 + 2;
    v26[3] = 0;
    v26[4] = 0;
    v26[5] = 1;
    v27 = swift_allocObject();
    v47 = &v44;
    *(_BYTE *)(v27 + 16) = 1;
    v28 = v50;
    *(_QWORD *)(v27 + 24) = a1;
    *(_QWORD *)(v27 + 32) = a2;
    *(_QWORD *)(v27 + 40) = v28;
    *(_QWORD *)(v27 + 48) = a1;
    *(_QWORD *)(v27 + 56) = v26;
    v51 = 0;
    *(_QWORD *)&v54 = 0;
    v29 = MEMORY[0x1E0C80A78](v27);
    *(&v44 - 10) = a4;
    *(&v44 - 9) = v30;
    v49 = v30;
    *(&v44 - 8) = v31;
    *(&v44 - 7) = (uint64_t)&v51 + 1;
    *(&v44 - 6) = (uint64_t)&v54;
    *(&v44 - 5) = a5;
    v40 = v25;
    v41 = sub_18EC42464;
    v42 = (uint64_t (*)())v29;
    v43 = (uint64_t *)&v51;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_18EC6BB40;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_18EC676F8();
      *(_QWORD *)&v52 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v33 = v45;
      v34 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v34);
      v42 = sub_18EC40E1C;
      v43 = &v44 - 12;
      sub_18EC67650();
      v35 = *(void (**)(char *, uint64_t))(v14 + 8);
      swift_retain();
      v35(v16, v33);
      swift_release();
    }
    else
    {
      *(_QWORD *)&v52 = ObjectType;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isOptionalType() & 1) != 0)
      {
        MEMORY[0x1E0C80A78](ObjectType);
        v42 = (uint64_t (*)())&v52;
        AGTypeApplyFields2();
      }
      isClassType = swift_isClassType();
      if ((isClassType & 1) == 0)
        isClassType = AGTypeGetKind();
      MEMORY[0x1E0C80A78](isClassType);
      v42 = sub_18EC40E1C;
      v43 = &v44 - 12;
      AGTypeApplyFields2();
      swift_retain();
      swift_release();
    }
    v37 = v48;
    a2 = v49;
    v38 = (uint64_t)v46;
    v23 = HIBYTE(v51);
    LOBYTE(v24) = v51;
    v22 = v54;
    swift_beginAccess();
    sub_18EC42470(v38, v37);
    swift_release();
  }
  return sub_18EC2F118((uint64_t)a1, ObjectType, a2, v50, v23, v24, v22);
}

uint64_t sub_18EC295F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  sub_18EC2E898(a1, &v19);
  if (v20)
  {
    sub_18EC3FA60(&v19, &v21);
    __swift_project_boxed_opaque_existential_1(&v21, v22);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v14 = sub_18EC3F380((uint64_t)&v19, ObjectType, (uint64_t)&v21, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, MEMORY[0x1E0DEAFA0], ObjectType);
    v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v19, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v14 = sub_18EC34A4C(&v19, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    v16 = v17;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v14 & 1, HIBYTE(v14) & 1, v16);
  return v19;
}

uint64_t sub_18EC2973C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  sub_18EC2E898(a1, &v23);
  if (v24)
  {
    sub_18EC3FA60(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = sub_18EC3F380((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v23, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v20 = v21;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23 | (BYTE1(v23) << 8);
}

uint64_t sub_18EC29894(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  sub_18EC2E898(a1, &v23);
  if (v24)
  {
    sub_18EC3FA60(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = sub_18EC3F380((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v23, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v20 = v21;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return (unsigned __int16)v23 | (BYTE2(v23) << 16);
}

unint64_t sub_18EC299EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  sub_18EC2E898(a1, &v23);
  if (v24)
  {
    sub_18EC3FA60(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = sub_18EC3F380((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v23, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v20 = v21;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23 | ((unint64_t)BYTE4(v23) << 32);
}

uint64_t sub_18EC29B4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  sub_18EC2E898(a1, &v23);
  if (v24)
  {
    sub_18EC3FA60(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = sub_18EC3F380((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v23, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v20 = v21;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23;
}

uint64_t sub_18EC29CA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD), uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = a7(0);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

double sub_18EC29DFC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double result;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char v28;

  sub_18EC2E898(a1, &v26);
  if (*((_QWORD *)&v27 + 1))
  {
    sub_18EC3FA60(&v26, &v24);
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    type metadata accessor for CGRect(0);
    v17 = sub_18EC3F380((uint64_t)&v26, ObjectType, (uint64_t)&v24, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v16, ObjectType);
    v19 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v26, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v17 = sub_18EC38440(&v26, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    v19 = v20;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v17 & 1, HIBYTE(v17) & 1, v19);
  v21 = v28;
  result = *(double *)&v26;
  v23 = v27;
  *(_OWORD *)a7 = v26;
  *(_OWORD *)(a7 + 16) = v23;
  *(_BYTE *)(a7 + 32) = v21;
  return result;
}

uint64_t sub_18EC29F54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  sub_18EC2E898(a1, &v20);
  if (v21)
  {
    sub_18EC3FA60(&v20, &v22);
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B178);
    v15 = sub_18EC3F380((uint64_t)&v20, ObjectType, (uint64_t)&v22, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v14, ObjectType);
    v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v20, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v15 = sub_18EC387E8(&v20, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    v17 = v18;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v15 & 1, HIBYTE(v15) & 1, v17);
  return v20;
}

uint64_t sub_18EC2A0A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return (unsigned __int16)v24 | (BYTE2(v24) << 16);
}

uint64_t sub_18EC2A200(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return (unsigned __int16)v24 | (BYTE2(v24) << 16) | (BYTE3(v24) << 24);
}

unint64_t sub_18EC2A368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24 | ((unint64_t)BYTE4(v24) << 32) | ((unint64_t)BYTE5(v24) << 40);
}

uint64_t sub_18EC2A4D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

uint64_t sub_18EC2A63C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

double sub_18EC2A7A0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double result;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;

  sub_18EC2E898(a1, &v27);
  if (*((_QWORD *)&v28 + 1))
  {
    sub_18EC3FA60(&v27, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADB0);
    v17 = sub_18EC3F380((uint64_t)&v27, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v16, ObjectType);
    v19 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v27, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v17 = sub_18EC3C244(&v27, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    v19 = v20;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v17 & 1, HIBYTE(v17) & 1, v19);
  v21 = v29;
  v22 = v30;
  result = *(double *)&v27;
  v24 = v28;
  *(_OWORD *)a7 = v27;
  *(_OWORD *)(a7 + 16) = v24;
  *(_BYTE *)(a7 + 32) = v21;
  *(_BYTE *)(a7 + 33) = v22;
  return result;
}

uint64_t sub_18EC2A904(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  sub_18EC2E898(a1, &v20);
  if (v21)
  {
    sub_18EC3FA60(&v20, &v22);
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B080);
    v15 = sub_18EC3F380((uint64_t)&v20, ObjectType, (uint64_t)&v22, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v14, ObjectType);
    v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v20, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v15 = sub_18EC3C5F4((uint64_t *)&v20, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    v17 = v18;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v15 & 1, HIBYTE(v15) & 1, v17);
  return v20;
}

uint64_t sub_18EC2AA50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t DynamicType;
  uint64_t ObjectType;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_18EC2E898(a1, &v24);
  if (v25)
  {
    sub_18EC3FA60(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    DynamicType = swift_getDynamicType();
    ObjectType = sub_18EC2E43C(DynamicType);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v19 = sub_18EC3F380((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v24, &qword_1EE139AC8);
    ObjectType = swift_getObjectType();
    v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    v21 = v22;
  }
  sub_18EC2F118((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

uint64_t _AXSafeSwiftBoolForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC295F4(a1, v2, v4, v9, (uint64_t)sub_18EC3431C, 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t _AXSafeSwiftIntForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18EC34374, MEMORY[0x1E0DEB418], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC34DE0);
}

uint64_t _AXSafeSwiftUIntForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18EC343CC, MEMORY[0x1E0DEBB98], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC35180);
}

uint64_t _AXSafeSwiftIntForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v8 = sub_18EC671A0();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v11 = type metadata accessor for FieldAccessor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_18EC6C300;
  v16 = v15 + v14;
  v17 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v18, v16);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v19, v16 + v13);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v20, v16 + 2 * v13);
  v21 = sub_18EC29B4C(a1, v8, v10, v15, a3, 0, a4, a5);
  v23 = v22;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    return 0;
  else
    return v21;
}

uint64_t _AXSafeSwiftInt8ForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC2973C(a1, v2, v4, v9, (uint64_t)sub_18EC34424, 0, MEMORY[0x1E0DEDA70], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC35520);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 0x100) != 0)
    return 0;
  else
    return (char)v15;
}

uint64_t _AXSafeSwiftUInt8ForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC2973C(a1, v2, v4, v9, (uint64_t)sub_18EC3447C, 0, MEMORY[0x1E0DEDE70], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC358BC);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 0x100) != 0)
    return 0;
  else
    return v15;
}

uint64_t _AXSafeSwiftInt16ForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC29894(a1, v2, v4, v9, (uint64_t)sub_18EC344D4, 0, MEMORY[0x1E0DEDB58], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC35C58);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 0x10000) != 0)
    return 0;
  else
    return (__int16)v15;
}

uint64_t _AXSafeSwiftUInt16ForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC29894(a1, v2, v4, v9, (uint64_t)sub_18EC3452C, 0, MEMORY[0x1E0DEE068], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC35FF8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 0x10000) != 0)
    return 0;
  else
    return (unsigned __int16)v15;
}

uint64_t _AXSafeSwiftInt32ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftInt32ForKeyTm(a1, a2, (uint64_t)sub_18EC34584, MEMORY[0x1E0DEDBC8], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC36398);
}

uint64_t _AXSafeSwiftUInt32ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftInt32ForKeyTm(a1, a2, (uint64_t)sub_18EC345DC, MEMORY[0x1E0DEE0F8], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC36738);
}

uint64_t _AXSafeSwiftInt32ForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v8 = sub_18EC671A0();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v11 = type metadata accessor for FieldAccessor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_18EC6C300;
  v16 = v15 + v14;
  v17 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v18, v16);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v19, v16 + v13);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v20, v16 + 2 * v13);
  v21 = sub_18EC299EC(a1, v8, v10, v15, a3, 0, a4, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 0x100000000) != 0)
    return 0;
  else
    return v21;
}

uint64_t _AXSafeSwiftInt64ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18EC34634, MEMORY[0x1E0DEDC60], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC36AD8);
}

uint64_t _AXSafeSwiftUInt64ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18EC3468C, MEMORY[0x1E0DEE190], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC36E78);
}

float _AXSafeSwiftFloatForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  float result;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC299EC(a1, v2, v4, v9, (uint64_t)sub_18EC346E4, 0, MEMORY[0x1E0DEB188], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC37218);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  result = *(float *)&v15;
  if ((v15 & 0x100000000) != 0)
    return 0.0;
  return result;
}

double _AXSafeSwiftDoubleForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftDoubleForKeyTm(a1, a2, (uint64_t)sub_18EC3473C, MEMORY[0x1E0DEB070], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC375B8);
}

double _AXSafeSwiftCGFloatForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftDoubleForKeyTm(a1, a2, (uint64_t)sub_18EC34794, MEMORY[0x1E0DEF040], (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC37958);
}

double _AXSafeSwiftDoubleForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  char v23;
  double result;

  v8 = sub_18EC671A0();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v11 = type metadata accessor for FieldAccessor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_18EC6C300;
  v16 = v15 + v14;
  v17 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v18, v16);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v19, v16 + v13);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v20, v16 + 2 * v13);
  v21 = COERCE_DOUBLE(sub_18EC29B4C(a1, v8, v10, v15, a3, 0, a4, a5));
  v23 = v22;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  result = v21;
  if ((v23 & 1) != 0)
    return 0.0;
  return result;
}

double _AXSafeSwiftCGPointForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftCGPointForKeyTm(a1, a2, (uint64_t)sub_18EC347EC, (uint64_t (*)(_QWORD))type metadata accessor for CGPoint, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC37CF8);
}

double _AXSafeSwiftCGSizeForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftCGPointForKeyTm(a1, a2, (uint64_t)sub_18EC34800, (uint64_t (*)(_QWORD))type metadata accessor for CGSize, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3809C);
}

double _AXSafeSwiftCGPointForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  char v23;
  double result;

  v8 = sub_18EC671A0();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v11 = type metadata accessor for FieldAccessor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_18EC6C300;
  v16 = v15 + v14;
  v17 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v18, v16);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v19, v16 + v13);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v20, v16 + 2 * v13);
  v21 = COERCE_DOUBLE(sub_18EC29CA0(a1, v8, v10, v15, a3, 0, a4, a5));
  v23 = v22;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  result = v21;
  if ((v23 & 1) != 0)
    return 0.0;
  return result;
}

uint64_t _AXSafeSwiftCGRectForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[32];

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  sub_18EC29DFC(a1, v2, v4, v9, (uint64_t)sub_18EC34814, 0, (uint64_t)&v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return sub_18EC3F9F8((uint64_t)&v16, (uint64_t)v17, &qword_1EE13ADB0);
}

id _AXSafeSwiftOptionalBoolForKey(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftOptionalBoolForKeyTm(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_18EC2C21C);
}

uint64_t sub_18EC2C21C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v8 = type metadata accessor for FieldAccessor(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18EC6C300;
  v13 = v12 + v11;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v14, v13);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v15, v13 + v10);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v16, v13 + 2 * v10);
  v17 = sub_18EC29F54(a1, a2, a3, v12, (uint64_t)sub_18EC34890, 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v17 & 0xFE) == 2)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a4 + 24) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)a4 = v17 & 1;
  }
  return result;
}

id _AXSafeSwiftOptionalIntForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC348A4, &qword_1EE13B168, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC38B7C, MEMORY[0x1E0DEB418], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalUIntForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC348B8, &qword_1EE13B158, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC38F24, MEMORY[0x1E0DEBB98], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_18EC2C634@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  __int16 v24;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C300;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v20, v18 + v15);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v21, v18 + 2 * v15);
  v22 = sub_18EC2A4D8(a1, a2, a3, v17, a4, 0, a5, a6);
  v24 = v23;
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v24 & 0x101) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a8 + 24) = a7;
    *(_QWORD *)a8 = v22;
  }
  return result;
}

id _AXSafeSwiftOptionalInt8ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2CA5C(v3, v0, v2, (uint64_t)sub_18EC348CC, &qword_1EE13B148, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC392CC, MEMORY[0x1E0DEDA70], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalUInt8ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2CA5C(v3, v0, v2, (uint64_t)sub_18EC348E0, &qword_1EE13B138, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3966C, MEMORY[0x1E0DEDE70], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_18EC2CA5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C300;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v20, v18 + v15);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v21, v18 + 2 * v15);
  v22 = sub_18EC2A0A0(a1, a2, a3, v17, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v22 & 0x10100) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a8 + 24) = a7;
    *(_BYTE *)a8 = v22;
  }
  return result;
}

id _AXSafeSwiftOptionalInt16ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2CE84(v3, v0, v2, (uint64_t)sub_18EC348F4, &qword_1EE13B128, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC39A0C, MEMORY[0x1E0DEDB58], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalUInt16ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2CE84(v3, v0, v2, (uint64_t)sub_18EC34908, &qword_1EE13B118, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC39DB0, MEMORY[0x1E0DEE068], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_18EC2CE84@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C300;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v20, v18 + v15);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v21, v18 + 2 * v15);
  v22 = sub_18EC2A200(a1, a2, a3, v17, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v22 & 0x1010000) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a8 + 24) = a7;
    *(_WORD *)a8 = v22;
  }
  return result;
}

id _AXSafeSwiftOptionalInt32ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2D2A8(v3, v0, v2, (uint64_t)sub_18EC3491C, &qword_1EE13B108, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3A154, MEMORY[0x1E0DEDBC8], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalUInt32ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2D2A8(v3, v0, v2, (uint64_t)sub_18EC34930, &qword_1EE13B0F8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3A4FC, MEMORY[0x1E0DEE0F8], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_18EC2D2A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C300;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v20, v18 + v15);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v21, v18 + 2 * v15);
  v22 = sub_18EC2A368(a1, a2, a3, v17, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v22 & 0x10100000000) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a8 + 24) = a7;
    *(_DWORD *)a8 = v22;
  }
  return result;
}

id _AXSafeSwiftOptionalInt64ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC34944, &qword_1EE13B0E8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3A8A4, MEMORY[0x1E0DEDC60], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalUInt64ForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC34958, &qword_1EE13B0D8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3AC4C, MEMORY[0x1E0DEE190], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalFloatForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2D2A8(v3, v0, v2, (uint64_t)sub_18EC3496C, &qword_1EE13B0C8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3AFF4, MEMORY[0x1E0DEB188], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalDoubleForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC34980, &qword_1EE13B0B8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3B39C, MEMORY[0x1E0DEB070], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalCGFloatForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2C634(v3, v0, v2, (uint64_t)sub_18EC34994, &qword_1EE13B0A8, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3B744, MEMORY[0x1E0DEF040], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalCGPointForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2DC58(v3, v0, v2, (uint64_t)sub_18EC349A8, &qword_1EE13B098, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3BAEC, (uint64_t (*)(_QWORD))type metadata accessor for CGPoint, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

id _AXSafeSwiftOptionalCGSizeForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v11[3];
  uint64_t v12;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2DC58(v3, v0, v2, (uint64_t)sub_18EC349BC, &qword_1EE13B088, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3BE98, (uint64_t (*)(_QWORD))type metadata accessor for CGSize, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v12;
  if (!v12)
    return 0;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_18EC2DC58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t (*a7)(_QWORD)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  __int16 v26;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C300;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v20, v18 + v15);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v21, v18 + 2 * v15);
  v22 = sub_18EC2A63C(a1, a2, a3, v17, a4, 0, a5, a6);
  v24 = v23;
  v26 = v25;
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  if ((v26 & 0x101) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    result = a7(0);
    *(_QWORD *)(a8 + 24) = result;
    *(_QWORD *)a8 = v22;
    *(_QWORD *)(a8 + 8) = v24;
  }
  return result;
}

id _AXSafeSwiftOptionalCGRectForKey(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftOptionalBoolForKeyTm(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_18EC2DF60);
}

id _AXSafeSwiftOptionalBoolForKeyTm(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[3];
  uint64_t v16;

  v4 = sub_18EC671A0();
  v6 = v5;
  v7 = swift_unknownObjectRetain();
  a3(v15, v7, v4, v6);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v16;
  if (!v16)
    return 0;
  v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v12);
  v13 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v13;
}

_QWORD *sub_18EC2DF60@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *result;
  uint64_t v23;
  _QWORD v24[4];
  char v25;
  _BYTE v26[40];
  _BYTE v27[40];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v8 = type metadata accessor for FieldAccessor(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18EC6C300;
  v13 = v12 + v11;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v14, v13);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v15, v13 + v10);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v16, v13 + 2 * v10);
  sub_18EC2A7A0(a1, a2, a3, v12, (uint64_t)sub_18EC349D0, 0, (uint64_t)v24);
  v17 = v24[0];
  v18 = v24[1];
  v19 = v24[2];
  v20 = v24[3];
  v21 = v25;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  result = (_QWORD *)sub_18EC3F9F8((uint64_t)v24, (uint64_t)v26, &qword_1EE13ADB8);
  if ((v26[33] & 1) != 0
    || (result = (_QWORD *)sub_18EC3F9F8((uint64_t)v26, (uint64_t)v27, &qword_1EE13ADB0), (v21 & 1) != 0))
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    type metadata accessor for CGRect(0);
    *(_QWORD *)(a4 + 24) = v23;
    result = (_QWORD *)swift_allocObject();
    *(_QWORD *)a4 = result;
    result[2] = v17;
    result[3] = v18;
    result[4] = v19;
    result[5] = v20;
  }
  return result;
}

id _AXSafeSwiftStringForKey(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;

  v2 = sub_18EC671A0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v5 = type metadata accessor for FieldAccessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_18EC6C300;
  v10 = v9 + v8;
  v11 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v12, v10);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v13, v10 + v7);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v14, v10 + 2 * v7);
  v15 = sub_18EC2A904(a1, v2, v4, v9, (uint64_t)sub_18EC2E39C, 0);
  v17 = v16;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v18 = 0;
  if (v17 >= 2)
  {
    v18 = (void *)sub_18EC6717C();
    sub_18EC3FA4C(v15, v17);
  }
  return v18;
}

BOOL sub_18EC2E39C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B080);
  return a1 == MEMORY[0x1E0DEA968] || v2 == a1;
}

id _AXSafeSwiftValueForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18EC2E3F4, &qword_1EE13B078, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3C990);
}

uint64_t sub_18EC2E3F4(uint64_t a1)
{
  uint64_t Kind;

  sub_18EC2E43C(a1);
  if ((swift_isClassType() & 1) != 0)
    return 1;
  Kind = AGTypeGetKind();
  return sub_18EC2E4CC(Kind, (uint64_t)&unk_1E28C5538);
}

uint64_t sub_18EC2E43C(uint64_t a1)
{
  if ((swift_isOptionalType() & 1) != 0)
  {
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78]();
      AGTypeApplyFields2();
    }
    return sub_18EC2E43C(a1);
  }
  return a1;
}

uint64_t sub_18EC2E4CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

id _AXSafeSwiftArrayForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18EC2E73C, &qword_1EE13B070, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3CD28);
}

id _AXSafeSwiftValueForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v8 = sub_18EC671A0();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v11 = type metadata accessor for FieldAccessor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_18EC6C300;
  v16 = v15 + v14;
  v17 = qword_1EE13A6D0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v18, v16);
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v19, v16 + v13);
  if (qword_1EE13A6E0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE13F550);
  sub_18EC3F7B8(v20, v16 + 2 * v13);
  v21 = sub_18EC2AA50(a1, v8, v10, v15, a3, 0, a4, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v21 == 1)
    v22 = 0;
  else
    v22 = (void *)v21;
  return v22;
}

BOOL sub_18EC2E73C(uint64_t a1)
{
  return sub_18EC2E798(a1);
}

id _AXSafeSwiftSetForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18EC2E764, &qword_1EE13B068, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3D0C0);
}

BOOL sub_18EC2E764(uint64_t a1)
{
  return sub_18EC2E798(a1);
}

id _AXSafeSwiftDictionaryForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18EC2E78C, &qword_1EE13B050, (uint64_t (*)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18EC3D458);
}

BOOL sub_18EC2E78C(uint64_t a1)
{
  return sub_18EC2E798(a1);
}

BOOL sub_18EC2E798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_18EC2E43C(a1);
  if (swift_conformsToProtocol2())
    v2 = v1;
  else
    v2 = 0;
  return v2 != 0;
}

uint64_t _AXSafeSwiftCallAsFunctionForKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t DynamicType;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v0 = sub_18EC671A0();
  v2 = v1;
  v3 = (void *)swift_unknownObjectRetain();
  sub_18EC2E898(v3, &v7);
  if (v8)
  {
    sub_18EC3FA60(&v7, &v9);
    __swift_project_boxed_opaque_existential_1(&v9, v10);
    DynamicType = swift_getDynamicType();
    v5 = sub_18EC2E43C(DynamicType);
    sub_18EC2E9C4(v5, &v9, v5, v0, v2, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v7, &qword_1EE139AC8);
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_18EC2E898@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  NSString *v4;
  Class v5;
  double result;
  _QWORD v7[5];
  _OWORD v8[2];

  v4 = (NSString *)sub_18EC6717C();
  v5 = NSClassFromString(v4);

  if (v5 && objc_msgSend(a1, sel_isKindOfClass_, v5))
  {
    memset(v8, 0, sizeof(v8));
    v7[4] = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
    if (swift_dynamicCast())
    {
      sub_18EC1E58C((uint64_t)v8, &qword_1EE139AC8);
      sub_18EC3F9F8((uint64_t)v7, (uint64_t)v8, &qword_1EE139AC8);
      sub_18EC3F9F8((uint64_t)v8, (uint64_t)a2, &qword_1EE139AC8);
      return result;
    }
    memset(v7, 0, 24);
    v7[3] = 1;
    sub_18EC1E58C((uint64_t)v7, &qword_1EE13ADA8);
    sub_18EC1E58C((uint64_t)v8, &qword_1EE139AC8);
  }
  result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

uint64_t sub_18EC2E9C4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  int v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[12];
  int v29;
  _BYTE v30[8];
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v11 = sub_18EC67524();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = &v28[-v14];
  v16 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18EC1B600((uint64_t)a2, (uint64_t)v30);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v15, 0, 1, a6);
    v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v18, v15, a6);
    MEMORY[0x1E0C80A78](v21);
    *(_QWORD *)&v28[-32] = a6;
    *(_QWORD *)&v28[-24] = a3;
    *(_QWORD *)&v28[-16] = a4;
    *(_QWORD *)&v28[-8] = a5;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B030);
    sub_18EC2F08C((uint64_t)v18, (uint64_t)sub_18EC41D2C, (uint64_t)&v28[-48], a6, MEMORY[0x1E0DEDCE8], v22, MEMORY[0x1E0DEDD18], v23);
    v29 = v30[0];
    v24 = v30[1];
    v25 = v31;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v26 = sub_18EC67998();
    sub_18EC2F118(v26, a3, a4, a5, v29, v24, v25);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v18, a6);
  }
  else
  {
    v20(v15, 1, 1, a6);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_18EC2EBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t isClassType;
  char v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;

  v38 = a6;
  v36 = a3;
  v37 = a4;
  v35 = sub_18EC67704();
  v9 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v13 = type metadata accessor for FieldAccessor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6BB30;
  v18 = v17 + v16;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v19, v18);
  v20 = v18 + v15;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE13F538);
  v22 = sub_18EC3F7B8(v21, v20);
  v41 = 0;
  v40 = 0;
  MEMORY[0x1E0C80A78](v22);
  v23 = &v34 - 12;
  v24 = v36;
  v25 = v37;
  *(&v34 - 10) = v17;
  *(&v34 - 9) = v24;
  *(&v34 - 8) = (uint64_t)v25;
  *(&v34 - 7) = (uint64_t)&v41 + 1;
  *(&v34 - 6) = (uint64_t)&v40;
  *(&v34 - 5) = (uint64_t)sub_18EC29160;
  *(&v34 - 4) = 0;
  *(&v34 - 3) = (uint64_t)sub_18EC41D9C;
  *(&v34 - 2) = v12;
  *(&v34 - 1) = (uint64_t)&v41;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v37 = &v34;
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v39 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v27 = v35;
    v28 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v28);
    *(&v34 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v34 - 1) = (uint64_t)v23;
    sub_18EC67650();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v39 = a2;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a2);
      *(&v34 - 2) = (uint64_t)&v39;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v34 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v34 - 1) = (uint64_t)v23;
    AGTypeApplyFields2();
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  v31 = v41;
  v32 = v40;
  v33 = v38;
  *v38 = HIBYTE(v41);
  v33[1] = v31;
  *((_QWORD *)v33 + 1) = v32;
  return result;
}

uint64_t sub_18EC2EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;

  v6 = sub_18EC2E43C(a2);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B048);
  if (v6 == result)
  {
    v8 = (void (**)(uint64_t))(a4 + a1);
    result = swift_isOptionalType();
    if ((result & 1) != 0)
    {
      v9 = *v8;
      if (*v8)
      {
        v10 = swift_retain();
        v9(v10);
        return sub_18EC1CDA0((uint64_t)v9);
      }
    }
    else
    {
      v11 = *v8;
      v12 = swift_retain();
      v11(v12);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_18EC2F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, char *);
  uint64_t result;
  uint64_t v17;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78]();
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v15(v12, v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

uint64_t sub_18EC2F118(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;

  if ((a5 & 1) == 0 || (a6 & 1) == 0)
  {
    v12 = sub_18EC67B6C();
    v14 = v13;
    if ((AXShouldLogValidationErrors() & 1) != 0)
    {
      v15 = (void *)sub_18EC6717C();
      v16 = (void *)sub_18EC6717C();
      AXValidationManagerSendExceptionForSafeValueKey(v15, v16);

    }
    if ((AXShouldLogValidationErrors() & 1) == 0)
      goto LABEL_14;
    if ((a5 & 1) != 0)
    {
      if ((a6 & 1) != 0 || !a7)
        goto LABEL_14;
      result = (uint64_t)AXLogValidations();
      if (result)
      {
        v17 = (void *)result;
        sub_18EC67500();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA00);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_18EC6C9A0;
        v19 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
        v20 = sub_18EC1DEF4();
        *(_QWORD *)(v18 + 32) = a3;
        *(_QWORD *)(v18 + 40) = a4;
        *(_QWORD *)(v18 + 96) = v19;
        *(_QWORD *)(v18 + 104) = v20;
        *(_QWORD *)(v18 + 64) = v20;
        *(_QWORD *)(v18 + 72) = v12;
        *(_QWORD *)(v18 + 80) = v14;
        swift_bridgeObjectRetain();
        v21 = sub_18EC671B8();
        *(_QWORD *)(v18 + 136) = v19;
        *(_QWORD *)(v18 + 144) = v20;
        *(_QWORD *)(v18 + 112) = v21;
        *(_QWORD *)(v18 + 120) = v22;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B040);
        swift_dynamicCast();
        v23 = sub_18EC67B6C();
        *(_QWORD *)(v18 + 216) = v19;
        *(_QWORD *)(v18 + 224) = v20;
        *(_QWORD *)(v18 + 192) = v23;
        *(_QWORD *)(v18 + 200) = v24;
        v25 = objc_msgSend((id)objc_opt_self(), sel_callStackSymbols);
        v26 = sub_18EC672FC();

        *(_QWORD *)(v18 + 256) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
        *(_QWORD *)(v18 + 264) = sub_18EC41D4C(&qword_1EE13B038, &qword_1EE13A058, MEMORY[0x1E0CB1B18]);
        *(_QWORD *)(v18 + 232) = v26;
        sub_18EC670D4();

        goto LABEL_14;
      }
    }
    else
    {
      result = (uint64_t)AXLogValidations();
      if (result)
      {
        v27 = (void *)result;
        sub_18EC67500();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA00);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_18EC6C300;
        v29 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
        v30 = sub_18EC1DEF4();
        *(_QWORD *)(v28 + 32) = a3;
        *(_QWORD *)(v28 + 40) = a4;
        *(_QWORD *)(v28 + 96) = v29;
        *(_QWORD *)(v28 + 104) = v30;
        *(_QWORD *)(v28 + 64) = v30;
        *(_QWORD *)(v28 + 72) = v12;
        *(_QWORD *)(v28 + 80) = v14;
        v31 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v32 = objc_msgSend(v31, sel_callStackSymbols);
        v33 = sub_18EC672FC();

        *(_QWORD *)(v28 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
        *(_QWORD *)(v28 + 144) = sub_18EC41D4C(&qword_1EE13B038, &qword_1EE13A058, MEMORY[0x1E0CB1B18]);
        *(_QWORD *)(v28 + 112) = v33;
        sub_18EC670D4();

LABEL_14:
        swift_bridgeObjectRelease();
        result = AXShouldCrashOnValidationErrors();
        if ((result & 1) != 0)
          abort();
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t _AXSafeSwiftIsStructWithTypeName(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftIsStructWithTypeNameTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_18EC2F48C);
}

uint64_t sub_18EC2F48C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DynamicType;
  char v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  sub_18EC2E898(a1, &v9);
  if (!v10)
  {
    sub_18EC1E58C((uint64_t)&v9, &qword_1EE139AC8);
LABEL_11:
    v6 = 0;
    return v6 & 1;
  }
  sub_18EC3FA60(&v9, &v11);
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  DynamicType = swift_getDynamicType();
  *(_QWORD *)&v9 = DynamicType;
  if ((swift_isOptionalType() & 1) != 0)
  {
    MEMORY[0x1E0C80A78](DynamicType);
    AGTypeApplyFields2();
  }
  if (AGTypeGetKind() != 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    goto LABEL_11;
  }
  v6 = 1;
  if (sub_18EC67B6C() != a2 || v7 != a3)
    v6 = sub_18EC679A4();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  return v6 & 1;
}

uint64_t _AXSafeSwiftIsEnumWithTypeName(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftIsStructWithTypeNameTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_18EC2F64C);
}

uint64_t _AXSafeSwiftIsStructWithTypeNameTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_18EC671A0();
  v6 = v5;
  v7 = swift_unknownObjectRetain();
  LOBYTE(a3) = a3(v7, v4, v6);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18EC2F64C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DynamicType;
  char v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  sub_18EC2E898(a1, &v9);
  if (!v10)
  {
    sub_18EC1E58C((uint64_t)&v9, &qword_1EE139AC8);
LABEL_11:
    v6 = 0;
    return v6 & 1;
  }
  sub_18EC3FA60(&v9, &v11);
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  DynamicType = swift_getDynamicType();
  *(_QWORD *)&v9 = DynamicType;
  if ((swift_isOptionalType() & 1) != 0)
  {
    MEMORY[0x1E0C80A78](DynamicType);
    AGTypeApplyFields2();
  }
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    goto LABEL_11;
  }
  v6 = 1;
  if (sub_18EC67B6C() != a2 || v7 != a3)
    v6 = sub_18EC679A4();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  return v6 & 1;
}

BOOL _AXSafeSwiftIsTuple()
{
  void *v0;
  BOOL v1;

  v0 = (void *)swift_unknownObjectRetain();
  v1 = sub_18EC2F7D0(v0);
  swift_unknownObjectRelease();
  return v1;
}

BOOL sub_18EC2F7D0(void *a1)
{
  uint64_t isOptionalType;
  _BOOL8 v2;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  sub_18EC2E898(a1, &v4);
  if (v5)
  {
    sub_18EC3FA60(&v4, &v6);
    __swift_project_boxed_opaque_existential_1(&v6, v7);
    *(_QWORD *)&v4 = swift_getDynamicType();
    isOptionalType = swift_isOptionalType();
    if ((isOptionalType & 1) != 0)
    {
      MEMORY[0x1E0C80A78](isOptionalType);
      AGTypeApplyFields2();
    }
    v2 = AGTypeGetKind() == 5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v4, &qword_1EE139AC8);
    return 0;
  }
  return v2;
}

id _AXSafeSwiftTypeName(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18EC2F8C4);
}

uint64_t sub_18EC2F8C4(void *a1)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  sub_18EC2E898(a1, &v2);
  if (v3)
  {
    sub_18EC3FA60(&v2, &v4);
    __swift_project_boxed_opaque_existential_1(&v4, v5);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v2, &qword_1EE139AC8);
    swift_getObjectType();
  }
  return sub_18EC67B6C();
}

id _AXDebugPrintSwiftAllFields(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18EC2F964);
}

uint64_t sub_18EC2F964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t isClassType;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_18EC67704();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0DEE9D8];
  ObjectType = swift_getObjectType();
  v11 = &v13;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v12 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v6 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v6);
    *(_QWORD *)&v10[-16] = sub_18EC40C9C;
    *(_QWORD *)&v10[-8] = v10;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    v12 = ObjectType;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](ObjectType);
      *(_QWORD *)&v10[-16] = &v12;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v10[-16] = sub_18EC40C9C;
    *(_QWORD *)&v10[-8] = v10;
    AGTypeApplyFields2();
  }
  v12 = v13;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
  sub_18EC41D4C((unint64_t *)&qword_1EE13A060, &qword_1EE13A058, MEMORY[0x1E0DEAF20]);
  v8 = sub_18EC6714C();
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t sub_18EC2FC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char **a5)
{
  uint64_t v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  char *v13;

  sub_18EC2E43C(a4);
  AGTypeGetKind();
  sub_18EC67620();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  sub_18EC67B6C();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  sub_18EC6723C();
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v8 = a1;
  v9 = *a5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_18EC23730(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    *a5 = v9;
  }
  v12 = *((_QWORD *)v9 + 2);
  v11 = *((_QWORD *)v9 + 3);
  if (v12 >= v11 >> 1)
  {
    v9 = sub_18EC23730((char *)(v11 > 1), v12 + 1, 1, v9);
    *a5 = v9;
  }
  *((_QWORD *)v9 + 2) = v12 + 1;
  v13 = &v9[16 * v12];
  *((_QWORD *)v13 + 4) = v8;
  *((_QWORD *)v13 + 5) = a2;
  return 1;
}

uint64_t sub_18EC2FE9C(uint64_t a1, int a2)
{
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 <= 2 && a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
    sub_18EC41D4C((unint64_t *)&qword_1EE13A060, &qword_1EE13A058, MEMORY[0x1E0DEAF20]);
    return sub_18EC6714C();
  }
  else
  {
    if (v3)
    {
      v15 = MEMORY[0x1E0DEE9D8];
      sub_18EC201B0(0, v3, 0);
      v6 = a1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        v7 = sub_18EC30130();
        v9 = v8;
        swift_bridgeObjectRelease();
        v11 = *(_QWORD *)(v15 + 16);
        v10 = *(_QWORD *)(v15 + 24);
        if (v11 >= v10 >> 1)
          sub_18EC201B0((char *)(v10 > 1), v11 + 1, 1);
        v6 += 16;
        *(_QWORD *)(v15 + 16) = v11 + 1;
        v12 = v15 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v7;
        *(_QWORD *)(v12 + 40) = v9;
        --v3;
      }
      while (v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A058);
    sub_18EC41D4C((unint64_t *)&qword_1EE13A060, &qword_1EE13A058, MEMORY[0x1E0DEAF20]);
    sub_18EC6714C();
    swift_bridgeObjectRelease();
    switch(a2)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 7:
        swift_bridgeObjectRetain();
        v14 = sub_18EC67284();
        sub_18EC67230();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = v14;
        break;
      default:
        result = sub_18EC67710();
        __break(1u);
        break;
    }
  }
  return result;
}

uint64_t sub_18EC30130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if ((sub_18EC6726C() & 1) != 0 || (sub_18EC6726C() & 1) != 0 || (sub_18EC6726C() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v0 = sub_18EC67218();
    v1 = sub_18EC41CA4(v0);
    v3 = v2;
    v5 = v4;
    v7 = v6;
    swift_bridgeObjectRelease();
    MEMORY[0x193FF8E00](v1, v3, v5, v7);
    swift_bridgeObjectRelease();
    sub_18EC67218();
    v9 = sub_18EC6780C();
    sub_18EC6723C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_18EC6723C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18EC67218();
    v9 = sub_18EC6780C();
    sub_18EC6723C();
  }
  return v9;
}

id _AXGetSwiftMangledClassNameWithItems()
{
  uint64_t v0;
  void *v1;

  v0 = sub_18EC672FC();
  sub_18EC2FE9C(v0, 1);
  swift_bridgeObjectRelease();
  v1 = (void *)sub_18EC6717C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t _AXSwiftValidateClassHasField(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateClassHasFieldTm(a1, a2, sub_18EC304E4);
}

uint64_t sub_18EC304E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isClassType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  v6 = sub_18EC67704();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v10 = type metadata accessor for FieldAccessor(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18EC6BB30;
  v15 = v14 + v13;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v16, v15);
  v17 = v15 + v12;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F538);
  v19 = sub_18EC3F7B8(v18, v17);
  v28 = 0;
  v27 = 0;
  MEMORY[0x1E0C80A78](v19);
  v20 = &v25 - 12;
  *(&v25 - 10) = v14;
  *(&v25 - 9) = a2;
  *(&v25 - 8) = a3;
  *(&v25 - 7) = (uint64_t)&v28 + 1;
  *(&v25 - 6) = (uint64_t)&v27;
  *(&v25 - 5) = (uint64_t)sub_18EC29160;
  *(&v25 - 4) = 0;
  *(&v25 - 3) = 0;
  *(&v25 - 2) = 0;
  *(&v25 - 1) = (uint64_t)&v28;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v22 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v22);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    sub_18EC67650();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      *(&v25 - 2) = (uint64_t)&v26;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v28);
}

uint64_t _AXSwiftValidateClassHasFieldWithTypeString()
{
  uint64_t ObjCClassMetadata;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  ObjCClassMetadata = swift_getObjCClassMetadata();
  v1 = sub_18EC671A0();
  v3 = v2;
  v4 = sub_18EC671A0();
  LOBYTE(v1) = sub_18EC308E0(ObjCClassMetadata, v1, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_18EC308E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t isClassType;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;

  v10 = sub_18EC67704();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = a4;
  v31 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v14 = type metadata accessor for FieldAccessor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
  v19 = v18 + v17;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v20, v19);
  v21 = v19 + v16;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
  v23 = sub_18EC3F7B8(v22, v21);
  v34 = 0;
  v33 = 0;
  MEMORY[0x1E0C80A78](v23);
  v24 = &v29[-96];
  *(_QWORD *)&v29[-80] = v18;
  *(_QWORD *)&v29[-72] = a2;
  *(_QWORD *)&v29[-64] = a3;
  *(_QWORD *)&v29[-56] = (char *)&v34 + 1;
  *(_QWORD *)&v29[-48] = &v33;
  *(_QWORD *)&v29[-40] = sub_18EC40E20;
  *(_QWORD *)&v29[-32] = v29;
  *(_QWORD *)&v29[-24] = 0;
  *(_QWORD *)&v29[-16] = 0;
  *(_QWORD *)&v29[-8] = &v34;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v32 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v26 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v26);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      *(_QWORD *)&v29[-16] = &v32;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v34) & v34 & 1;
}

id _AXSwiftValidateClassGetFieldTypeString()
{
  uint64_t ObjCClassMetadata;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  ObjCClassMetadata = swift_getObjCClassMetadata();
  v1 = sub_18EC671A0();
  sub_18EC30CF4(ObjCClassMetadata, v1, v2);
  swift_bridgeObjectRelease();
  v3 = (void *)sub_18EC6717C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18EC30CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isClassType;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  v6 = sub_18EC67704();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v10 = type metadata accessor for FieldAccessor(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18EC6BB30;
  v15 = v14 + v13;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v16, v15);
  v17 = v15 + v12;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F538);
  v19 = sub_18EC3F7B8(v18, v17);
  v28 = 0;
  v27 = 0;
  MEMORY[0x1E0C80A78](v19);
  v20 = &v25 - 12;
  *(&v25 - 10) = v14;
  *(&v25 - 9) = a2;
  *(&v25 - 8) = a3;
  *(&v25 - 7) = (uint64_t)&v28 + 1;
  *(&v25 - 6) = (uint64_t)&v27;
  *(&v25 - 5) = (uint64_t)sub_18EC29160;
  *(&v25 - 4) = 0;
  *(&v25 - 3) = 0;
  *(&v25 - 2) = 0;
  *(&v25 - 1) = (uint64_t)&v28;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v22 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v22);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    sub_18EC67650();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      *(&v25 - 2) = (uint64_t)&v26;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v28 & 0x100) == 0)
    return 0;
  result = v27;
  if (v27)
    return sub_18EC67B6C();
  __break(1u);
  return result;
}

uint64_t _AXSwiftValidateClassHasFieldOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateClassHasFieldTm(a1, a2, sub_18EC31104);
}

uint64_t _AXSwiftValidateClassHasFieldTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata;
  uint64_t v5;
  uint64_t v6;

  ObjCClassMetadata = swift_getObjCClassMetadata();
  v5 = sub_18EC671A0();
  LOBYTE(a3) = a3(ObjCClassMetadata, v5, v6);
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18EC31104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isClassType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  v6 = sub_18EC67704();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v10 = type metadata accessor for FieldAccessor(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18EC6BB30;
  v15 = v14 + v13;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v16, v15);
  v17 = v15 + v12;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F538);
  v19 = sub_18EC3F7B8(v18, v17);
  v28 = 0;
  v27 = 0;
  MEMORY[0x1E0C80A78](v19);
  v20 = &v25 - 12;
  *(&v25 - 10) = v14;
  *(&v25 - 9) = a2;
  *(&v25 - 8) = a3;
  *(&v25 - 7) = (uint64_t)&v28 + 1;
  *(&v25 - 6) = (uint64_t)&v27;
  *(&v25 - 5) = (uint64_t)sub_18EC31490;
  *(&v25 - 4) = 0;
  *(&v25 - 3) = 0;
  *(&v25 - 2) = 0;
  *(&v25 - 1) = (uint64_t)&v28;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v22 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v22);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    sub_18EC67650();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      *(&v25 - 2) = (uint64_t)&v26;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v25 - 2) = (uint64_t)sub_18EC40E1C;
    *(&v25 - 1) = (uint64_t)v20;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v28) & v28 & 1;
}

uint64_t sub_18EC31490()
{
  return sub_18EC330F4();
}

uint64_t _AXSwiftValidateStruct(uint64_t a1)
{
  return _AXSwiftValidateStructTm(a1, (uint64_t (*)(uint64_t))sub_18EC314A8);
}

BOOL sub_18EC314A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t isOptionalType;

  sub_18EC1D250();
  v0 = sub_18EC6753C();
  sub_18EC2FE9C(v0, 2);
  swift_bridgeObjectRelease();
  v1 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v1)
    return 0;
  isOptionalType = swift_isOptionalType();
  if ((isOptionalType & 1) != 0)
  {
    MEMORY[0x1E0C80A78](isOptionalType);
    AGTypeApplyFields2();
  }
  return AGTypeGetKind() == 2;
}

BOOL _AXSwiftValidateStructHasSize(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_18EC671A0();
  sub_18EC1D250();
  v3 = sub_18EC6753C();
  sub_18EC2FE9C(v3, 2);
  swift_bridgeObjectRelease();
  v4 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v5 = sub_18EC31680(v4, v4);
    swift_bridgeObjectRelease();
    return v5 == a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_18EC31680(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
}

uint64_t _AXSwiftValidateStructHasField(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18EC31698);
}

uint64_t sub_18EC31698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t isClassType;
  _BYTE v29[14];
  __int16 v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 2);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v13)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v14 = type metadata accessor for FieldAccessor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
  v19 = v18 + v17;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v20, v19);
  v21 = v19 + v16;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
  v23 = sub_18EC3F7B8(v22, v21);
  v30 = 0;
  v32[0] = 0;
  MEMORY[0x1E0C80A78](v23);
  v24 = &v29[-96];
  *(_QWORD *)&v29[-80] = v18;
  *(_QWORD *)&v29[-72] = a3;
  *(_QWORD *)&v29[-64] = a4;
  *(_QWORD *)&v29[-56] = (char *)&v30 + 1;
  *(_QWORD *)&v29[-48] = v32;
  *(_QWORD *)&v29[-40] = sub_18EC29160;
  *(_QWORD *)&v29[-32] = 0;
  *(_QWORD *)&v29[-24] = 0;
  *(_QWORD *)&v29[-16] = 0;
  *(_QWORD *)&v29[-8] = &v30;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v31[0] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v26 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v26);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31[0] = v13;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v13);
      *(_QWORD *)&v29[-16] = v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v30);
}

uint64_t _AXSwiftValidateStructHasFieldWithTypeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _AXSwiftValidateStructHasFieldWithTypeStringTm(a1, a2, a3, sub_18EC31AA0);
}

uint64_t sub_18EC31AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t isClassType;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  __int16 v38;
  _QWORD v39[2];
  _QWORD v40[2];

  v12 = sub_18EC67704();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[0] = a1;
  v40[1] = a2;
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_18EC1D250();
  v16 = sub_18EC6753C();
  sub_18EC2FE9C(v16, 2);
  swift_bridgeObjectRelease();
  v17 = sub_18EC6762C();
  v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    v36 = a4;
    v37 = &v35;
    MEMORY[0x1E0C80A78](v18);
    *(&v35 - 2) = a5;
    *(&v35 - 1) = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v19 = type metadata accessor for FieldAccessor(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(_QWORD *)(v20 + 72);
    v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_18EC6BB30;
    v24 = v23 + v22;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v19, (uint64_t)qword_1EE13F520);
    sub_18EC3F7B8(v25, v24);
    v26 = v24 + v21;
    if (qword_1EE13A6D8 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v19, (uint64_t)qword_1EE13F538);
    v28 = sub_18EC3F7B8(v27, v26);
    v38 = 0;
    v40[0] = 0;
    MEMORY[0x1E0C80A78](v28);
    v29 = &v35 - 12;
    *(&v35 - 10) = v23;
    *(&v35 - 9) = a3;
    *(&v35 - 8) = v36;
    *(&v35 - 7) = (uint64_t)&v38 + 1;
    *(&v35 - 6) = (uint64_t)v40;
    *(&v35 - 5) = (uint64_t)sub_18EC42758;
    *(&v35 - 4) = (uint64_t)(&v35 - 4);
    *(&v35 - 3) = 0;
    *(&v35 - 2) = 0;
    *(&v35 - 1) = (uint64_t)&v38;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_18EC6BB40;
      sub_18EC676F8();
      v39[0] = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v31 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v31);
      *(&v35 - 2) = (uint64_t)sub_18EC40E1C;
      *(&v35 - 1) = (uint64_t)v29;
      sub_18EC67650();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      v39[0] = v17;
      if ((swift_isOptionalType() & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v17);
        *(&v35 - 2) = (uint64_t)v39;
        AGTypeApplyFields2();
      }
      isClassType = swift_isClassType();
      if ((isClassType & 1) == 0)
        isClassType = AGTypeGetKind();
      MEMORY[0x1E0C80A78](isClassType);
      *(&v35 - 2) = (uint64_t)sub_18EC40E1C;
      *(&v35 - 1) = (uint64_t)v29;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    v32 = HIBYTE(v38) & v38;
  }
  else
  {
    v32 = 0;
  }
  return v32 & 1;
}

id _AXSwiftValidateStructGetFieldTypeString(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructGetFieldTypeStringTm(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_18EC31EF0);
}

uint64_t sub_18EC31EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t isClassType;
  _BYTE v29[14];
  __int16 v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 2);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v13)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v14 = type metadata accessor for FieldAccessor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
  v19 = v18 + v17;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v20, v19);
  v21 = v19 + v16;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
  v23 = sub_18EC3F7B8(v22, v21);
  v30 = 0;
  v32[0] = 0;
  MEMORY[0x1E0C80A78](v23);
  v24 = &v29[-96];
  *(_QWORD *)&v29[-80] = v18;
  *(_QWORD *)&v29[-72] = a3;
  *(_QWORD *)&v29[-64] = a4;
  *(_QWORD *)&v29[-56] = (char *)&v30 + 1;
  *(_QWORD *)&v29[-48] = v32;
  *(_QWORD *)&v29[-40] = sub_18EC29160;
  *(_QWORD *)&v29[-32] = 0;
  *(_QWORD *)&v29[-24] = 0;
  *(_QWORD *)&v29[-16] = 0;
  *(_QWORD *)&v29[-8] = &v30;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v31[0] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v26 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v26);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31[0] = v13;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v13);
      *(_QWORD *)&v29[-16] = v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v30 & 0x100) == 0)
    return 0;
  result = v32[0];
  if (v32[0])
    return sub_18EC67B6C();
  __break(1u);
  return result;
}

uint64_t _AXSwiftValidateStructHasFieldOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18EC3238C);
}

uint64_t _AXSwiftValidateStructHasFieldTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_18EC671A0();
  v6 = v5;
  v7 = sub_18EC671A0();
  LOBYTE(a3) = a3(v4, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18EC3238C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t isClassType;
  _BYTE v30[14];
  __int16 v31;
  _QWORD v32[2];
  _QWORD v33[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33[0] = a1;
  v33[1] = a2;
  v32[0] = 46;
  v32[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 2);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v14 = type metadata accessor for FieldAccessor(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
    v19 = v18 + v17;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
    sub_18EC3F7B8(v20, v19);
    v21 = v19 + v16;
    if (qword_1EE13A6D8 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
    v23 = sub_18EC3F7B8(v22, v21);
    v31 = 0;
    v33[0] = 0;
    MEMORY[0x1E0C80A78](v23);
    v24 = &v30[-96];
    *(_QWORD *)&v30[-80] = v18;
    *(_QWORD *)&v30[-72] = a3;
    *(_QWORD *)&v30[-64] = a4;
    *(_QWORD *)&v30[-56] = (char *)&v31 + 1;
    *(_QWORD *)&v30[-48] = v33;
    *(_QWORD *)&v30[-40] = sub_18EC31490;
    *(_QWORD *)&v30[-32] = 0;
    *(_QWORD *)&v30[-24] = 0;
    *(_QWORD *)&v30[-16] = 0;
    *(_QWORD *)&v30[-8] = &v31;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
      sub_18EC676F8();
      v32[0] = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v26 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v26);
      *(_QWORD *)&v30[-16] = sub_18EC40E1C;
      *(_QWORD *)&v30[-8] = v24;
      sub_18EC67650();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v32[0] = v13;
      if ((swift_isOptionalType() & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v13);
        *(_QWORD *)&v30[-16] = v32;
        AGTypeApplyFields2();
      }
      isClassType = swift_isClassType();
      if ((isClassType & 1) == 0)
        isClassType = AGTypeGetKind();
      MEMORY[0x1E0C80A78](isClassType);
      *(_QWORD *)&v30[-16] = sub_18EC40E1C;
      *(_QWORD *)&v30[-8] = v24;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    v27 = HIBYTE(v31) & v31;
  }
  else
  {
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t _AXSwiftValidateEnum(uint64_t a1)
{
  return _AXSwiftValidateStructTm(a1, (uint64_t (*)(uint64_t))sub_18EC327D8);
}

uint64_t _AXSwiftValidateStructTm(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_18EC671A0();
  LOBYTE(a2) = a2(v3);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

BOOL sub_18EC327D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t isOptionalType;

  sub_18EC1D250();
  v0 = sub_18EC6753C();
  sub_18EC2FE9C(v0, 3);
  swift_bridgeObjectRelease();
  v1 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v1)
    return 0;
  isOptionalType = swift_isOptionalType();
  if ((isOptionalType & 1) != 0)
  {
    MEMORY[0x1E0C80A78](isOptionalType);
    AGTypeApplyFields2();
  }
  return AGTypeGetKind() == 3;
}

uint64_t _AXSwiftValidateEnumHasCase(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18EC328E4);
}

uint64_t sub_18EC328E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t isClassType;
  _BYTE v29[14];
  __int16 v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 3);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v13)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v14 = type metadata accessor for FieldAccessor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
  v19 = v18 + v17;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v20, v19);
  v21 = v19 + v16;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
  v23 = sub_18EC3F7B8(v22, v21);
  v30 = 0;
  v32[0] = 0;
  MEMORY[0x1E0C80A78](v23);
  v24 = &v29[-96];
  *(_QWORD *)&v29[-80] = v18;
  *(_QWORD *)&v29[-72] = a3;
  *(_QWORD *)&v29[-64] = a4;
  *(_QWORD *)&v29[-56] = (char *)&v30 + 1;
  *(_QWORD *)&v29[-48] = v32;
  *(_QWORD *)&v29[-40] = sub_18EC29160;
  *(_QWORD *)&v29[-32] = 0;
  *(_QWORD *)&v29[-24] = 0;
  *(_QWORD *)&v29[-16] = 0;
  *(_QWORD *)&v29[-8] = &v30;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v31[0] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v26 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v26);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31[0] = v13;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v13);
      *(_QWORD *)&v29[-16] = v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v30);
}

uint64_t _AXSwiftValidateEnumHasCaseOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18EC32CEC);
}

uint64_t sub_18EC32CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t isClassType;
  _BYTE v30[14];
  __int16 v31;
  _QWORD v32[2];
  _QWORD v33[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33[0] = a1;
  v33[1] = a2;
  v32[0] = 46;
  v32[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 3);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v14 = type metadata accessor for FieldAccessor(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
    v19 = v18 + v17;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
    sub_18EC3F7B8(v20, v19);
    v21 = v19 + v16;
    if (qword_1EE13A6D8 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
    v23 = sub_18EC3F7B8(v22, v21);
    v31 = 0;
    v33[0] = 0;
    MEMORY[0x1E0C80A78](v23);
    v24 = &v30[-96];
    *(_QWORD *)&v30[-80] = v18;
    *(_QWORD *)&v30[-72] = a3;
    *(_QWORD *)&v30[-64] = a4;
    *(_QWORD *)&v30[-56] = (char *)&v31 + 1;
    *(_QWORD *)&v30[-48] = v33;
    *(_QWORD *)&v30[-40] = sub_18EC31490;
    *(_QWORD *)&v30[-32] = 0;
    *(_QWORD *)&v30[-24] = 0;
    *(_QWORD *)&v30[-16] = 0;
    *(_QWORD *)&v30[-8] = &v31;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
      sub_18EC676F8();
      v32[0] = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v26 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v26);
      *(_QWORD *)&v30[-16] = sub_18EC40E1C;
      *(_QWORD *)&v30[-8] = v24;
      sub_18EC67650();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v32[0] = v13;
      if ((swift_isOptionalType() & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v13);
        *(_QWORD *)&v30[-16] = v32;
        AGTypeApplyFields2();
      }
      isClassType = swift_isClassType();
      if ((isClassType & 1) == 0)
        isClassType = AGTypeGetKind();
      MEMORY[0x1E0C80A78](isClassType);
      *(_QWORD *)&v30[-16] = sub_18EC40E1C;
      *(_QWORD *)&v30[-8] = v24;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    v27 = HIBYTE(v31) & v31;
  }
  else
  {
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_18EC330F4()
{
  uint64_t isOptionalType;

  isOptionalType = swift_isOptionalType();
  if ((isOptionalType & 1) != 0)
  {
    MEMORY[0x1E0C80A78](isOptionalType);
    AGTypeApplyFields2();
  }
  return swift_isClassType();
}

uint64_t _AXSwiftValidateEnumHasCaseWithTypeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _AXSwiftValidateStructHasFieldWithTypeStringTm(a1, a2, a3, sub_18EC3321C);
}

uint64_t _AXSwiftValidateStructHasFieldWithTypeStringTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = sub_18EC671A0();
  v7 = v6;
  v8 = sub_18EC671A0();
  v10 = v9;
  v11 = sub_18EC671A0();
  LOBYTE(a4) = a4(v5, v7, v8, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_18EC3321C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t isClassType;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  __int16 v38;
  _QWORD v39[2];
  _QWORD v40[2];

  v12 = sub_18EC67704();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[0] = a1;
  v40[1] = a2;
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_18EC1D250();
  v16 = sub_18EC6753C();
  sub_18EC2FE9C(v16, 3);
  swift_bridgeObjectRelease();
  v17 = sub_18EC6762C();
  v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    v36 = a4;
    v37 = &v35;
    MEMORY[0x1E0C80A78](v18);
    *(&v35 - 2) = a5;
    *(&v35 - 1) = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v19 = type metadata accessor for FieldAccessor(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(_QWORD *)(v20 + 72);
    v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_18EC6BB30;
    v24 = v23 + v22;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v19, (uint64_t)qword_1EE13F520);
    sub_18EC3F7B8(v25, v24);
    v26 = v24 + v21;
    if (qword_1EE13A6D8 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v19, (uint64_t)qword_1EE13F538);
    v28 = sub_18EC3F7B8(v27, v26);
    v38 = 0;
    v40[0] = 0;
    MEMORY[0x1E0C80A78](v28);
    v29 = &v35 - 12;
    *(&v35 - 10) = v23;
    *(&v35 - 9) = a3;
    *(&v35 - 8) = v36;
    *(&v35 - 7) = (uint64_t)&v38 + 1;
    *(&v35 - 6) = (uint64_t)v40;
    *(&v35 - 5) = (uint64_t)sub_18EC42758;
    *(&v35 - 4) = (uint64_t)(&v35 - 4);
    *(&v35 - 3) = 0;
    *(&v35 - 2) = 0;
    *(&v35 - 1) = (uint64_t)&v38;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_18EC6BB40;
      sub_18EC676F8();
      v39[0] = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v31 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v31);
      *(&v35 - 2) = (uint64_t)sub_18EC40E1C;
      *(&v35 - 1) = (uint64_t)v29;
      sub_18EC67650();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      v39[0] = v17;
      if ((swift_isOptionalType() & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v17);
        *(&v35 - 2) = (uint64_t)v39;
        AGTypeApplyFields2();
      }
      isClassType = swift_isClassType();
      if ((isClassType & 1) == 0)
        isClassType = AGTypeGetKind();
      MEMORY[0x1E0C80A78](isClassType);
      *(&v35 - 2) = (uint64_t)sub_18EC40E1C;
      *(&v35 - 1) = (uint64_t)v29;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    v32 = HIBYTE(v38) & v38;
  }
  else
  {
    v32 = 0;
  }
  return v32 & 1;
}

uint64_t sub_18EC33660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char v6;

  if (sub_18EC67B6C() == a3 && v5 == a4)
    v6 = 1;
  else
    v6 = sub_18EC679A4();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id _AXSwiftValidateEnumGetCaseTypeString(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructGetFieldTypeStringTm(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_18EC3377C);
}

id _AXSwiftValidateStructGetFieldTypeStringTm(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v4 = sub_18EC671A0();
  v6 = v5;
  v7 = sub_18EC671A0();
  a3(v4, v6, v7, v8);
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    v11 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  return v11;
}

uint64_t sub_18EC3377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t isClassType;
  _BYTE v29[14];
  __int16 v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v8 = sub_18EC67704();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18EC1D250();
  v12 = sub_18EC6753C();
  sub_18EC2FE9C(v12, 3);
  swift_bridgeObjectRelease();
  v13 = sub_18EC6762C();
  swift_bridgeObjectRelease();
  if (!v13)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v14 = type metadata accessor for FieldAccessor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_18EC6BB30;
  v19 = v18 + v17;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F520);
  sub_18EC3F7B8(v20, v19);
  v21 = v19 + v16;
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE13F538);
  v23 = sub_18EC3F7B8(v22, v21);
  v30 = 0;
  v32[0] = 0;
  MEMORY[0x1E0C80A78](v23);
  v24 = &v29[-96];
  *(_QWORD *)&v29[-80] = v18;
  *(_QWORD *)&v29[-72] = a3;
  *(_QWORD *)&v29[-64] = a4;
  *(_QWORD *)&v29[-56] = (char *)&v30 + 1;
  *(_QWORD *)&v29[-48] = v32;
  *(_QWORD *)&v29[-40] = sub_18EC29160;
  *(_QWORD *)&v29[-32] = 0;
  *(_QWORD *)&v29[-24] = 0;
  *(_QWORD *)&v29[-16] = 0;
  *(_QWORD *)&v29[-8] = &v30;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v31[0] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v26 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v26);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    sub_18EC67650();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31[0] = v13;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v13);
      *(_QWORD *)&v29[-16] = v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v29[-16] = sub_18EC40E1C;
    *(_QWORD *)&v29[-8] = v24;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v30 & 0x100) == 0)
    return 0;
  result = v32[0];
  if (v32[0])
    return sub_18EC67B6C();
  __break(1u);
  return result;
}

id _AXSafeSwiftEnumAssociatedObject()
{
  void *v0;
  void *v1;

  v0 = (void *)swift_unknownObjectRetain();
  v1 = sub_18EC33BD4(v0);
  swift_unknownObjectRelease();
  return v1;
}

void *sub_18EC33BD4(void *a1)
{
  uint64_t DynamicType;
  uint64_t v2;
  void *v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  sub_18EC2E898(a1, &v5);
  if (!v6)
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AC8);
    return 0;
  }
  sub_18EC3FA60(&v5, &v7);
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  DynamicType = swift_getDynamicType();
  v2 = sub_18EC2E43C(DynamicType);
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    return 0;
  }
  v3 = sub_18EC33C84(v2, (uint64_t)&v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v3;
}

void *sub_18EC33C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v24;
  NSString *v25;
  Class v26;
  __int128 v27[2];
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x1E0C80C00];
  v5 = sub_18EC67524();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - v8;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x1E0C80A78](v7);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v27 - v14;
  sub_18EC1B600(a2, (uint64_t)v29);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v16)
  {
    v17(v9, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v17(v9, 0, 1, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B020);
  if (!swift_dynamicCast())
  {
    v28 = 0;
    memset(v27, 0, sizeof(v27));
    v24 = sub_18EC1E58C((uint64_t)v27, &qword_1EE13B028);
    v29[0] = 0;
    MEMORY[0x1E0C80A78](v24);
    *(_QWORD *)&v27[-1] = a3;
    *((_QWORD *)&v27[-1] + 1) = v29;
    AGTypeApplyEnumData();
    v22 = (void *)v29[0];
    if (!v29[0]
      || (sub_18EC41B78(), !objc_msgSend(v22, sel_isKindOfClass_, swift_getObjCClassFromMetadata())))
    {
      v25 = (NSString *)sub_18EC6717C();
      v26 = NSClassFromString(v25);

      if (!v22 || !v26 || !objc_msgSend(v22, sel_isKindOfClass_, v26))
        goto LABEL_4;
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a3);
    return 0;
  }
  sub_18EC1B5E8(v27, (uint64_t)v29);
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v21 = (char *)v27 - v20;
  sub_18EC672B4();
  v22 = (void *)sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
LABEL_4:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a3);
  return v22;
}

uint64_t sub_18EC33FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a4);
  return v8;
}

id _AXSafeSwiftEnumCase(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18EC340EC);
}

id _AXSafeSwiftTypeNameTm(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = swift_unknownObjectRetain();
  a2(v3);
  v5 = v4;
  swift_unknownObjectRelease();
  if (v5)
  {
    v6 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

uint64_t sub_18EC340EC(void *a1)
{
  uint64_t DynamicType;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  sub_18EC2E898(a1, &v5);
  if (!v6)
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AC8);
    return 0;
  }
  sub_18EC3FA60(&v5, &v7);
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  DynamicType = swift_getDynamicType();
  v2 = sub_18EC2E43C(DynamicType);
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    return 0;
  }
  v3 = sub_18EC341A8(v2, (uint64_t)&v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v3;
}

uint64_t sub_18EC341A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _BYTE v17[32];

  v5 = sub_18EC67524();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v17[-v8];
  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18EC1B600(a2, (uint64_t)v17);
  v13 = swift_dynamicCast();
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v13)
  {
    v14(v9, 1, 1, a3);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v14(v9, 0, 1, a3);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v9, a3);
  if (!swift_EnumCaseName())
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, a3);
    return 0;
  }
  v15 = sub_18EC67164();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, a3);
  return v15;
}

BOOL sub_18EC3431C(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEAFA0] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEAFA0])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B178) == a1;
  return result;
}

BOOL sub_18EC34374(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEB418] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEB418])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B168) == a1;
  return result;
}

BOOL sub_18EC343CC(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEBB98] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEBB98])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B158) == a1;
  return result;
}

BOOL sub_18EC34424(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEDA70] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEDA70])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B148) == a1;
  return result;
}

BOOL sub_18EC3447C(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEDE70] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEDE70])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B138) == a1;
  return result;
}

BOOL sub_18EC344D4(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEDB58] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEDB58])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B128) == a1;
  return result;
}

BOOL sub_18EC3452C(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEE068] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEE068])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B118) == a1;
  return result;
}

BOOL sub_18EC34584(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEDBC8] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEDBC8])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B108) == a1;
  return result;
}

BOOL sub_18EC345DC(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEE0F8] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEE0F8])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0F8) == a1;
  return result;
}

BOOL sub_18EC34634(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEDC60] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEDC60])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0E8) == a1;
  return result;
}

BOOL sub_18EC3468C(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEE190] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEE190])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0D8) == a1;
  return result;
}

BOOL sub_18EC346E4(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEB188] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEB188])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0C8) == a1;
  return result;
}

BOOL sub_18EC3473C(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEB070] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEB070])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0B8) == a1;
  return result;
}

BOOL sub_18EC34794(uint64_t a1, int a2)
{
  _BOOL8 result;

  result = a1 == MEMORY[0x1E0DEF040] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E0DEF040])
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B0A8) == a1;
  return result;
}

BOOL sub_18EC347EC(uint64_t a1, int a2)
{
  return sub_18EC34828(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CGPoint, &qword_1EE13B098);
}

BOOL sub_18EC34800(uint64_t a1, int a2)
{
  return sub_18EC34828(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CGSize, &qword_1EE13B088);
}

BOOL sub_18EC34814(uint64_t a1, int a2)
{
  return sub_18EC34828(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CGRect, &qword_1EE13ADB0);
}

BOOL sub_18EC34828(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v7;
  _BOOL8 result;

  v7 = a3(0);
  result = v7 == a1 || a2 == 4;
  if (a2 == 4 && v7 != a1)
    return __swift_instantiateConcreteTypeFromMangledName(a4) == a1;
  return result;
}

BOOL sub_18EC34890(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B178, &qword_1EE13B180);
}

BOOL sub_18EC348A4(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B168, &qword_1EE13B170);
}

BOOL sub_18EC348B8(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B158, &qword_1EE13B160);
}

BOOL sub_18EC348CC(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B148, &qword_1EE13B150);
}

BOOL sub_18EC348E0(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B138, &qword_1EE13B140);
}

BOOL sub_18EC348F4(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B128, &qword_1EE13B130);
}

BOOL sub_18EC34908(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B118, &qword_1EE13B120);
}

BOOL sub_18EC3491C(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B108, &qword_1EE13B110);
}

BOOL sub_18EC34930(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0F8, &qword_1EE13B100);
}

BOOL sub_18EC34944(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0E8, &qword_1EE13B0F0);
}

BOOL sub_18EC34958(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0D8, &qword_1EE13B0E0);
}

BOOL sub_18EC3496C(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0C8, &qword_1EE13B0D0);
}

BOOL sub_18EC34980(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0B8, &qword_1EE13B0C0);
}

BOOL sub_18EC34994(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B0A8, &qword_1EE13B0B0);
}

BOOL sub_18EC349A8(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B098, &qword_1EE13B0A0);
}

BOOL sub_18EC349BC(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13B088, &qword_1EE13B090);
}

BOOL sub_18EC349D0(uint64_t a1, int a2)
{
  return sub_18EC349E4(a1, a2, &qword_1EE13ADB0, &qword_1EE13ADB8);
}

BOOL sub_18EC349E4(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  _BOOL8 result;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  result = v7 == a1 || a2 == 4;
  if (a2 == 4 && v7 != a1)
    return __swift_instantiateConcreteTypeFromMangledName(a4) == a1;
  return result;
}

uint64_t sub_18EC34A4C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  int v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49[10];

  v33 = a7;
  v35 = a1;
  v32 = sub_18EC67704();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 2;
  v34 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v49 = 0;
  v37 = a9;
  v38 = a4;
  v39 = a5;
  v40 = (char *)&v49[1];
  v41 = &v47;
  v42 = a6;
  v43 = v33;
  v44 = sub_18EC423F0;
  v45 = v18;
  v46 = v49;
  v47 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v31;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v48 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v30;
    v22 = v32;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v30 - 2) = (char *)sub_18EC40E1C;
    *(&v30 - 1) = v36;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v48 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v30 - 2) = (char *)&v48;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v30 - 2) = (char *)sub_18EC40E1C;
    *(&v30 - 1) = v36;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v49[1];
  v27 = v49[0];
  swift_beginAccess();
  *v35 = *(_BYTE *)(v17 + 16);
  swift_release();
  if (v27)
    v28 = 256;
  else
    v28 = 0;
  return v28 | v26;
}

uint64_t sub_18EC34DE0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC423D8;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC35180(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC423C0;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC35520(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _BYTE *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 256;
  v36 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC423A8;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 17);
  v29 = v37;
  *v37 = *(_BYTE *)(v17 + 16);
  v29[1] = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC358BC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _BYTE *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 256;
  v36 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42390;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 17);
  v29 = v37;
  *v37 = *(_BYTE *)(v17 + 16);
  v29[1] = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC35C58(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _WORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _WORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 18) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42368;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 18);
  v29 = v37;
  *v37 = *(_WORD *)(v17 + 16);
  *((_BYTE *)v29 + 2) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC35FF8(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _WORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _WORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 18) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42350;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 18);
  v29 = v37;
  *v37 = *(_WORD *)(v17 + 16);
  *((_BYTE *)v29 + 2) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC36398(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _DWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 20) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42338;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 20);
  v29 = v37;
  *v37 = *(_DWORD *)(v17 + 16);
  *((_BYTE *)v29 + 4) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC36738(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _DWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 20) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42320;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 20);
  v29 = v37;
  *v37 = *(_DWORD *)(v17 + 16);
  *((_BYTE *)v29 + 4) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC36AD8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42308;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC36E78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC422F0;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC37218(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _DWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 20) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC422D8;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 20);
  v29 = v37;
  *v37 = *(_DWORD *)(v17 + 16);
  *((_BYTE *)v29 + 4) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC375B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC422C0;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC37958(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _QWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 24) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC422A8;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = v37;
  *v37 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v29 + 8) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC37CF8(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _OWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42290;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 32);
  v29 = v37;
  *v37 = *(_OWORD *)(v17 + 16);
  *((_BYTE *)v29 + 16) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC3809C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _OWORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42278;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 32);
  v29 = v37;
  *v37 = *(_OWORD *)(v17 + 16);
  *((_BYTE *)v29 + 16) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC38440(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  __int128 v29;
  _OWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  v37 = v17 + 16;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_BYTE *)(v17 + 48) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42268;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 48);
  v29 = *(_OWORD *)(v17 + 32);
  v30 = v38;
  *v38 = *(_OWORD *)(v17 + 16);
  v30[1] = v29;
  *((_BYTE *)v30 + 32) = v28;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC387E8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  int v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49[10];

  v33 = a7;
  v35 = a1;
  v32 = sub_18EC67704();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 3;
  v34 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v49 = 0;
  v37 = a9;
  v38 = a4;
  v39 = a5;
  v40 = (char *)&v49[1];
  v41 = &v47;
  v42 = a6;
  v43 = v33;
  v44 = sub_18EC42258;
  v45 = v18;
  v46 = v49;
  v47 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v31;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v48 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v30;
    v22 = v32;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v30 - 2) = (char *)sub_18EC40E1C;
    *(&v30 - 1) = v36;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v48 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v30 - 2) = (char *)&v48;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v30 - 2) = (char *)sub_18EC40E1C;
    *(&v30 - 1) = v36;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v49[1];
  v27 = v49[0];
  swift_beginAccess();
  *v35 = *(_BYTE *)(v17 + 16);
  swift_release();
  if (v27)
    v28 = 256;
  else
    v28 = 0;
  return v28 | v26;
}

uint64_t sub_18EC38B7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42230;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC38F24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42218;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC392CC(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _WORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _WORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 18) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC42200;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 18);
  v29 = v37;
  *v37 = *(_WORD *)(v17 + 16);
  *((_BYTE *)v29 + 2) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC3966C(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  _WORD *v29;
  int v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _WORD *v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51[10];

  v35 = a7;
  v37 = a1;
  v34 = sub_18EC67704();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  v36 = v17 + 16;
  *(_BYTE *)(v17 + 18) = 1;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v51 = 0;
  v39 = a9;
  v40 = a4;
  v41 = a5;
  v42 = (char *)&v51[1];
  v43 = &v49;
  v44 = a6;
  v45 = v35;
  v46 = sub_18EC421E8;
  v47 = v18;
  v48 = v51;
  v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v33;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v32;
    v22 = v34;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v32 - 2) = (char *)sub_18EC40E1C;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v51[1];
  v27 = v51[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 18);
  v29 = v37;
  *v37 = *(_WORD *)(v17 + 16);
  *((_BYTE *)v29 + 2) = v28;
  swift_release();
  if (v27)
    v30 = 256;
  else
    v30 = 0;
  return v30 | v26;
}

uint64_t sub_18EC39A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0x1000000;
  v37 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC421C0;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_WORD *)(v17 + 16);
  v29 = *(_BYTE *)(v17 + 19);
  v30 = v38;
  *(_BYTE *)(v38 + 2) = *(_BYTE *)(v17 + 18);
  *(_WORD *)v30 = v28;
  *(_BYTE *)(v30 + 3) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC39DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0x1000000;
  v37 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC421A8;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_WORD *)(v17 + 16);
  v29 = *(_BYTE *)(v17 + 19);
  v30 = v38;
  *(_BYTE *)(v38 + 2) = *(_BYTE *)(v17 + 18);
  *(_WORD *)v30 = v28;
  *(_BYTE *)(v30 + 3) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3A154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42180;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_DWORD *)(v17 + 16);
  v29 = *(_BYTE *)(v17 + 21);
  v30 = v38;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v17 + 20);
  *(_DWORD *)v30 = v28;
  *(_BYTE *)(v30 + 5) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3A4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42168;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_DWORD *)(v17 + 16);
  v29 = *(_BYTE *)(v17 + 21);
  v30 = v38;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v17 + 20);
  *(_DWORD *)v30 = v28;
  *(_BYTE *)(v30 + 5) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3A8A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42150;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3AC4C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42138;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3AFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42120;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_DWORD *)(v17 + 16);
  v29 = *(_BYTE *)(v17 + 21);
  v30 = v38;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v17 + 20);
  *(_DWORD *)v30 = v28;
  *(_BYTE *)(v30 + 5) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3B39C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC420F8;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3B744(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _QWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC420E0;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 24);
  v29 = *(_BYTE *)(v17 + 25);
  v30 = v38;
  *v38 = *(_QWORD *)(v17 + 16);
  *((_BYTE *)v30 + 8) = v28;
  *((_BYTE *)v30 + 9) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3BAEC(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _OWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_WORD *)(v17 + 32) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC420B8;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 32);
  v29 = *(_BYTE *)(v17 + 33);
  v30 = v38;
  *v38 = *(_OWORD *)(v17 + 16);
  *((_BYTE *)v30 + 16) = v28;
  *((_BYTE *)v30 + 17) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3BE98(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  _OWORD *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v37 = v17 + 16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_WORD *)(v17 + 32) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC42068;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 32);
  v29 = *(_BYTE *)(v17 + 33);
  v30 = v38;
  *v38 = *(_OWORD *)(v17 + 16);
  *((_BYTE *)v30 + 16) = v28;
  *((_BYTE *)v30 + 17) = v29;
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3C244(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  char v28;
  char v29;
  __int128 v30;
  _OWORD *v31;
  int v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53[10];

  v37 = a7;
  v39 = a1;
  v36 = sub_18EC67704();
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v34 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  v38 = v17 + 16;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_WORD *)(v17 + 48) = 256;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v53 = 0;
  v41 = a9;
  v42 = a4;
  v43 = a5;
  v44 = (char *)&v53[1];
  v45 = &v51;
  v46 = a6;
  v47 = v37;
  v48 = sub_18EC42048;
  v49 = v18;
  v50 = v53;
  v51 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v35;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v52 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v34;
    v22 = v36;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v34 - 2) = (char *)sub_18EC40E1C;
    *(&v34 - 1) = v40;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v52 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v34 - 2) = (char *)&v52;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v34 - 2) = (char *)sub_18EC40E1C;
    *(&v34 - 1) = v40;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v53[1];
  v27 = v53[0];
  swift_beginAccess();
  v28 = *(_BYTE *)(v17 + 48);
  v29 = *(_BYTE *)(v17 + 49);
  v30 = *(_OWORD *)(v17 + 32);
  v31 = v39;
  *v39 = *(_OWORD *)(v17 + 16);
  v31[1] = v30;
  *((_BYTE *)v31 + 32) = v28;
  *((_BYTE *)v31 + 33) = v29;
  swift_release();
  if (v27)
    v32 = 256;
  else
    v32 = 0;
  return v32 | v26;
}

uint64_t sub_18EC3C5F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52[10];

  v36 = a7;
  v38 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18EC6C3F0;
  v37 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v52 = 0;
  v40 = a9;
  v41 = a4;
  v42 = a5;
  v43 = (char *)&v52[1];
  v44 = &v50;
  v45 = a6;
  v46 = v36;
  v47 = sub_18EC41FE0;
  v48 = v18;
  v49 = v52;
  v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v34;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v33;
    v22 = v35;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v52[1];
  v27 = v52[0];
  swift_beginAccess();
  v28 = *(_QWORD *)(v17 + 16);
  v29 = *(_QWORD *)(v17 + 24);
  v30 = v38;
  *v38 = v28;
  v30[1] = v29;
  sub_18EC42020(v28, v29);
  swift_release();
  if (v27)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v26;
}

uint64_t sub_18EC3C990(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  uint64_t v28;
  int v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50[10];

  v34 = a7;
  v36 = a1;
  v33 = sub_18EC67704();
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 1;
  v35 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v50 = 0;
  v38 = a9;
  v39 = a4;
  v40 = a5;
  v41 = (char *)&v50[1];
  v42 = &v48;
  v43 = a6;
  v44 = v34;
  v45 = sub_18EC41F7C;
  v46 = v18;
  v47 = v50;
  v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v32;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v31;
    v22 = v33;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v50[1];
  v27 = v50[0];
  swift_beginAccess();
  v28 = *(_QWORD *)(v17 + 16);
  *v36 = v28;
  sub_18EC41F90(v28);
  swift_release();
  if (v27)
    v29 = 256;
  else
    v29 = 0;
  return v29 | v26;
}

uint64_t sub_18EC3CD28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  void *v28;
  int v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50[10];

  v34 = a7;
  v36 = a1;
  v33 = sub_18EC67704();
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 1;
  v35 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v50 = 0;
  v38 = a9;
  v39 = a4;
  v40 = a5;
  v41 = (char *)&v50[1];
  v42 = &v48;
  v43 = a6;
  v44 = v34;
  v45 = sub_18EC41F38;
  v46 = v18;
  v47 = v50;
  v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v32;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v31;
    v22 = v33;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v50[1];
  v27 = v50[0];
  swift_beginAccess();
  v28 = *(void **)(v17 + 16);
  *v36 = v28;
  sub_18EC41EC0(v28);
  swift_release();
  if (v27)
    v29 = 256;
  else
    v29 = 0;
  return v29 | v26;
}

uint64_t sub_18EC3D0C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  void *v28;
  int v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50[10];

  v34 = a7;
  v36 = a1;
  v33 = sub_18EC67704();
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 1;
  v35 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v50 = 0;
  v38 = a9;
  v39 = a4;
  v40 = a5;
  v41 = (char *)&v50[1];
  v42 = &v48;
  v43 = a6;
  v44 = v34;
  v45 = sub_18EC41EE4;
  v46 = v18;
  v47 = v50;
  v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v32;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v31;
    v22 = v33;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v50[1];
  v27 = v50[0];
  swift_beginAccess();
  v28 = *(void **)(v17 + 16);
  *v36 = v28;
  sub_18EC41EC0(v28);
  swift_release();
  if (v27)
    v29 = 256;
  else
    v29 = 0;
  return v29 | v26;
}

uint64_t sub_18EC3D458(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v26;
  int v27;
  void *v28;
  int v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50[10];

  v34 = a7;
  v36 = a1;
  v33 = sub_18EC67704();
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 1;
  v35 = v17 + 16;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a10;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v17;
  *(_WORD *)v50 = 0;
  v38 = a9;
  v39 = a4;
  v40 = a5;
  v41 = (char *)&v50[1];
  v42 = &v48;
  v43 = a6;
  v44 = v34;
  v45 = sub_18EC41EAC;
  v46 = v18;
  v47 = v50;
  v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v19 = v32;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v21 = v31;
    v22 = v33;
    v23 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v23);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    sub_18EC67650();
    v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v31 - 2) = (char *)sub_18EC40E1C;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v26 = v50[1];
  v27 = v50[0];
  swift_beginAccess();
  v28 = *(void **)(v17 + 16);
  *v36 = v28;
  sub_18EC41EC0(v28);
  swift_release();
  if (v27)
    v29 = 256;
  else
    v29 = 0;
  return v29 | v26;
}

uint64_t sub_18EC3D7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t isClassType;
  unsigned int v28;
  int v29;
  uint64_t v30;
  int v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54[10];

  v37 = a7;
  v36 = a6;
  v40 = a1;
  v35 = sub_18EC67704();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_18EC67524();
  v17 = swift_allocBox();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 56);
  v38 = v19;
  v18(v19, 1, 1, a11);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a11;
  *(_BYTE *)(v20 + 24) = a8;
  *(_QWORD *)(v20 + 32) = a10;
  *(_QWORD *)(v20 + 40) = a4;
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a2;
  *(_QWORD *)(v20 + 64) = v17;
  *(_WORD *)v54 = 0;
  v42 = a9;
  v43 = a4;
  v44 = a5;
  v45 = (char *)&v54[1];
  v46 = &v52;
  v47 = v36;
  v48 = v37;
  v49 = sub_18EC41E0C;
  v50 = v20;
  v51 = v54;
  v52 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v21 = v34;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_18EC6BB40;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18EC676F8();
    v53 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v23 = v33;
    v24 = v35;
    v25 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v25);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v41;
    sub_18EC67650();
    v26 = *(void (**)(char *, uint64_t))(v21 + 8);
    swift_retain();
    v26(v23, v24);
    swift_release();
  }
  else
  {
    v53 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a3);
      *(&v33 - 2) = (char *)&v53;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(&v33 - 2) = (char *)sub_18EC40E1C;
    *(&v33 - 1) = v41;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  v28 = v54[1];
  v29 = v54[0];
  v30 = v38;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v40, v30);
  swift_release();
  if (v29)
    v31 = 256;
  else
    v31 = 0;
  return v31 | v28;
}

uint64_t sub_18EC3DBBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  char v19[24];
  uint64_t v20;
  _BYTE v21[32];

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, v19, v17, a2);
  if (v20 == 1)
    return sub_18EC1E58C((uint64_t)v19, &qword_1EE13ADA8);
  sub_18EC3F9F8((uint64_t)v19, (uint64_t)v21, &qword_1EE139AC8);
  sub_18EC3F9F8((uint64_t)v21, (uint64_t)v19, &qword_1EE139AC8);
  swift_beginAccess();
  return sub_18EC424B8((uint64_t)v19, a9 + 16);
}

uint64_t sub_18EC3DCBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  char v10;
  char v11[24];

  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, v11, MEMORY[0x1E0DEAFA0], a2);
  v10 = v11[0];
  if (v11[0] != 2)
  {
    result = swift_beginAccess();
    *(_BYTE *)(a9 + 16) = v10;
  }
  return result;
}

uint64_t sub_18EC3DD38(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  char v11;
  char v12[24];

  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, v12, a10, a2);
  if ((v12[1] & 1) == 0)
  {
    v11 = v12[0];
    result = swift_beginAccess();
    *(_BYTE *)(a9 + 16) = v11;
    *(_BYTE *)(a9 + 17) = 0;
  }
  return result;
}

uint64_t sub_18EC3DDB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  __int16 v11;
  __int16 v12;
  char v13;

  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    v11 = v12;
    result = swift_beginAccess();
    *(_WORD *)(a9 + 16) = v11;
    *(_BYTE *)(a9 + 18) = 0;
  }
  return result;
}

uint64_t sub_18EC3DE30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  int v11;
  int v12;
  char v13;

  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    v11 = v12;
    result = swift_beginAccess();
    *(_DWORD *)(a9 + 16) = v11;
    *(_BYTE *)(a9 + 20) = 0;
  }
  return result;
}

uint64_t sub_18EC3DEAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;

  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    v11 = v12;
    result = swift_beginAccess();
    *(_QWORD *)(a9 + 16) = v11;
    *(_BYTE *)(a9 + 24) = 0;
  }
  return result;
}

uint64_t sub_18EC3DF28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(_QWORD))
{
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  char v23;

  v18 = a10(0);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)v22, v18, a2);
  if ((v23 & 1) == 0)
  {
    v21 = v22[0];
    v20 = v22[1];
    result = swift_beginAccess();
    *(_QWORD *)(a9 + 16) = v21;
    *(_QWORD *)(a9 + 24) = v20;
    *(_BYTE *)(a9 + 32) = 0;
  }
  return result;
}

__n128 sub_18EC3DFE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 *a9)
{
  uint64_t v17;
  __n128 result;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  __n128 v22;
  unint64_t v23;
  unint64_t v24;
  char v25;

  type metadata accessor for CGRect(0);
  sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v17, a2);
  if ((v25 & 1) == 0)
  {
    v20 = v23;
    v19 = v24;
    v21 = v22;
    swift_beginAccess();
    result = v21;
    a9[1] = v21;
    a9[2].n128_u64[0] = v20;
    a9[2].n128_u64[1] = v19;
    a9[3].n128_u8[0] = 0;
  }
  return result;
}

uint64_t sub_18EC3E0AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t result;
  char v19;
  char v20[24];

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B178);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, v20, v17, a2);
  v19 = v20[0];
  if (v20[0] != 3)
  {
    result = swift_beginAccess();
    *(_BYTE *)(a9 + 16) = v19;
  }
  return result;
}

uint64_t sub_18EC3E164(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18;
  uint64_t result;
  __int16 v20;
  __int16 v21;
  char v22;

  v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v21, v18, a2);
  if ((v22 & 1) == 0)
  {
    v20 = v21;
    result = swift_beginAccess();
    *(_WORD *)(a9 + 16) = v20;
    *(_BYTE *)(a9 + 18) = 0;
  }
  return result;
}

uint64_t sub_18EC3E21C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18;
  uint64_t result;
  __int16 v20;
  char v21;
  __int16 v22;
  char v23;
  char v24;

  v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    v20 = v22;
    v21 = v23;
    result = swift_beginAccess();
    *(_BYTE *)(a9 + 18) = v21;
    *(_WORD *)(a9 + 16) = v20;
    *(_BYTE *)(a9 + 19) = 0;
  }
  return result;
}

uint64_t sub_18EC3E2DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18;
  uint64_t result;
  int v20;
  char v21;
  int v22;
  char v23;
  char v24;

  v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    v20 = v22;
    v21 = v23;
    result = swift_beginAccess();
    *(_BYTE *)(a9 + 20) = v21;
    *(_DWORD *)(a9 + 16) = v20;
    *(_BYTE *)(a9 + 21) = 0;
  }
  return result;
}

uint64_t sub_18EC3E39C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    v20 = v23;
    v21 = v22;
    result = swift_beginAccess();
    *(_QWORD *)(a9 + 16) = v21;
    *(_BYTE *)(a9 + 24) = v20;
    *(_BYTE *)(a9 + 25) = 0;
  }
  return result;
}

uint64_t sub_18EC3E45C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;
  char v25;

  v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)v23, v18, a2);
  if ((v25 & 1) == 0)
  {
    v20 = v24;
    v22 = v23[0];
    v21 = v23[1];
    result = swift_beginAccess();
    *(_QWORD *)(a9 + 16) = v22;
    *(_QWORD *)(a9 + 24) = v21;
    *(_BYTE *)(a9 + 32) = v20;
    *(_BYTE *)(a9 + 33) = 0;
  }
  return result;
}

__n128 sub_18EC3E51C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 *a9)
{
  uint64_t v17;
  __n128 result;
  unsigned __int8 v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int8 v26;
  char v27;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADB0);
  sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v23, v17, a2);
  if ((v27 & 1) == 0)
  {
    v19 = v26;
    v21 = v24;
    v20 = v25;
    v22 = v23;
    swift_beginAccess();
    result = v22;
    a9[1] = v22;
    a9[2].n128_u64[0] = v21;
    a9[2].n128_u64[1] = v20;
    a9[3].n128_u8[0] = v19;
    a9[3].n128_u8[1] = 0;
  }
  return result;
}

uint64_t sub_18EC3E5F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B080);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, (char *)&v23, v17, a2);
  v19 = v24;
  if (v24 != 1)
  {
    v20 = v23;
    swift_beginAccess();
    v21 = *(_QWORD *)(a9 + 16);
    v22 = *(_QWORD *)(a9 + 24);
    *(_QWORD *)(a9 + 16) = v20;
    *(_QWORD *)(a9 + 24) = v19;
    return sub_18EC3FA4C(v21, v22);
  }
  return result;
}

uint64_t sub_18EC3E6B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t (*a11)(uint64_t))
{
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char v23[24];

  v19 = __swift_instantiateConcreteTypeFromMangledName(a10);
  result = sub_18EC3E920(a4, a3, a5, a6, a7, a8, a1, v23, v19, a2);
  v21 = *(_QWORD *)v23;
  if (*(_QWORD *)v23 != 1)
  {
    swift_beginAccess();
    v22 = *(_QWORD *)(a9 + 16);
    *(_QWORD *)(a9 + 16) = v21;
    return a11(v22);
  }
  return result;
}

uint64_t sub_18EC3E774(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a7;
  v31 = a8;
  v28 = a1;
  v29 = a6;
  v14 = sub_18EC67524();
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v27 - v19;
  v21 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = swift_projectBox();
  sub_18EC3E920(a4, a3, a5, v29, v30, v31, v28, v20, a10, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, a10) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v20, v33);
  v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v26(v23, v20, a10);
  v26(v17, v23, a10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, a10);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 40))(v24, v17, v33);
}

uint64_t sub_18EC3E920@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char isOptionalType;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char v44;
  char isClassType;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  NSString *v57;
  Class v58;
  unsigned __int8 v59;
  uint64_t result;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  void (*v64)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t *boxed_opaque_existential_0;
  char *v72;
  char v73;
  void (*v74)(char *, _QWORD, uint64_t, uint64_t);
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  int v80;
  void (*v81)(uint64_t, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[4];
  uint64_t v108[5];

  v97 = a6;
  v98 = a7;
  v89 = a5;
  v88 = a4;
  v87 = a3;
  LODWORD(v100) = a1;
  v99 = a8;
  v93 = sub_18EC67524();
  v92 = *(_QWORD *)(v93 - 8);
  v11 = MEMORY[0x1E0C80A78](v93);
  v95 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v90 = (char *)&v84 - v14;
  v101 = a9;
  v103 = *(_QWORD *)(a9 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FieldAccessor(0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v84 - v23;
  v25 = sub_18EC67524();
  v105 = *(_QWORD *)(v25 - 8);
  v106 = v25;
  v26 = MEMORY[0x1E0C80A78](v25);
  v94 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v91 = (char *)&v84 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v102 = (char *)&v84 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v84 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v84 - v36;
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v84 - v38;
  isOptionalType = swift_isOptionalType();
  v104 = v17;
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v41(v39, 1, 1, a10);
  v96 = a2;
  sub_18EC3F7B8(a2, (uint64_t)v24);
  if ((v100 & 1) == 0 || (isOptionalType & 1) == 0)
  {
    sub_18EC41BB4((uint64_t)v24);
    v42 = v19;
LABEL_11:
    v52 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v34, v97 + v98, a10);
    v53 = v105;
    v54 = v106;
    v48 = *(void (**)(char *, uint64_t))(v105 + 8);
    v48(v39, v106);
    v41(v34, 0, 1, a10);
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v39, v34, v54);
    v46 = v102;
    goto LABEL_12;
  }
  if (qword_1EE13A6D8 != -1)
    swift_once();
  v42 = v19;
  v43 = __swift_project_value_buffer(v19, (uint64_t)qword_1EE13F538);
  sub_18EC3F7B8(v43, (uint64_t)v22);
  v44 = sub_18EC66EDC();
  sub_18EC41BB4((uint64_t)v22);
  sub_18EC41BB4((uint64_t)v24);
  if ((v44 & 1) != 0)
    goto LABEL_11;
  sub_18EC2E43C(a10);
  isClassType = swift_isClassType();
  v46 = v102;
  if ((isClassType & 1) != 0 || AGTypeGetKind() == 7)
  {
    sub_18EC3F148(v87, v88, v89, a10, (uint64_t)v37);
    v47 = v106;
    v48 = *(void (**)(char *, uint64_t))(v105 + 8);
    v48(v39, v106);
    v49 = v104;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v37, 1, a10) == 1)
    {
      v50 = v37;
      v51 = v47;
LABEL_18:
      v48(v50, v51);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v99, 1, 1, v101);
    }
    v61 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v100 = v42;
    v62 = v85;
    v61(v85, v37, a10);
    v63 = v62;
    v42 = v100;
    v61(v39, v63, a10);
    v41(v39, 0, 1, a10);
    v52 = v49;
  }
  else
  {
    v52 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v34, v97 + v98, a10);
    v83 = v105;
    v48 = *(void (**)(char *, uint64_t))(v105 + 8);
    v48(v39, v106);
    v41(v34, 0, 1, a10);
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v39, v34, v106);
  }
LABEL_12:
  if ((isOptionalType & 1) != 0)
  {
    v55 = v106;
    v56 = (void *)sub_18EC67518();
    sub_18EC41B78();
    if (objc_msgSend(v56, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      v48(v39, v55);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v99, 1, 1, v101);
    }
    v57 = (NSString *)sub_18EC6717C();
    v58 = NSClassFromString(v57);

    if (v58)
    {
      v59 = objc_msgSend(v56, sel_isKindOfClass_, v58);
      swift_unknownObjectRelease();
      v52 = v104;
      v46 = v102;
      if ((v59 & 1) != 0)
      {
        v50 = v39;
        v51 = v106;
        goto LABEL_18;
      }
    }
    else
    {
      swift_unknownObjectRelease();
      v52 = v104;
      v46 = v102;
    }
  }
  v64 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v96 + *(int *)(v42 + 28));
  v65 = v101;
  v66 = v103;
  v67 = v106;
  if (v64)
  {
    v68 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
    v68(v46, v39, v106);
    v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
    if (v69(v46, 1, a10) == 1)
    {
      v48(v46, v67);
      v66 = v103;
    }
    else
    {
      swift_retain();
      v48(v46, v67);
      v70 = v91;
      v68(v91, v39, v67);
      result = v69(v70, 1, a10);
      if ((_DWORD)result == 1)
      {
        __break(1u);
        return result;
      }
      v107[3] = a10;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v107);
      (*(void (**)(uint64_t *, char *, uint64_t))(v104 + 32))(boxed_opaque_existential_0, v70, a10);
      v64(v108, v107);
      sub_18EC1CDA0((uint64_t)v64);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
      v72 = v90;
      v73 = swift_dynamicCast();
      v66 = v103;
      v74 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56);
      if ((v73 & 1) != 0)
      {
        v74(v72, 0, 1, v65);
        v48(v39, v67);
        v75 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
        v76 = v86;
        v75(v86, v72, v65);
        v77 = v99;
        v75(v99, v76, v65);
        v78 = v77;
        return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v74)(v78, 0, 1, v65);
      }
      v74(v72, 1, 1, v65);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v93);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v94, v39, v67);
  v79 = v95;
  v80 = swift_dynamicCast();
  v74 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56);
  if (v80)
  {
    v74(v79, 0, 1, v65);
    v81 = *(void (**)(uint64_t, char *, uint64_t))(v66 + 32);
    v82 = v99;
    v81((uint64_t)v99, v79, v65);
    v78 = v82;
    return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v74)(v78, 0, 1, v65);
  }
  v74(v79, 1, 1, v65);
  v74(v99, 1, 1, v65);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v79, v93);
}

uint64_t sub_18EC3F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  int v22;
  __int128 v25;
  _OWORD v26[2];
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v26[0] = a1;
  swift_getObjectType();
  v8 = swift_reflectionMirror_normalizedType();
  if (swift_isClassType())
    v9 = v8;
  else
    v9 = 0;
  if (!v9)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, 1, 1);
  while (1)
  {
    *(_QWORD *)&v26[0] = a1;
    v10 = swift_reflectionMirror_count();
    if (v10 < 0)
      goto LABEL_28;
    v11 = v10;
    if (v10)
      break;
LABEL_20:
    v19 = MEMORY[0x193FF9274](v9);
    if (v19)
    {
      v20 = v19;
      v9 = swift_isClassType() ? v20 : 0;
      if (v9)
        continue;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, 1, 1);
  }
  v12 = 0;
  while (1)
  {
    if (v11 == v12)
    {
      __break(1u);
LABEL_28:
      __break(1u);
    }
    v27 = 0;
    v28 = 0;
    *(_QWORD *)&v25 = a1;
    swift_reflectionMirror_subscript();
    v14 = v28;
    if (v28)
    {
      v15 = MEMORY[0x193FF8E18](v28);
      v17 = v16;
      v18 = v27;
      if (!v27)
        goto LABEL_14;
LABEL_13:
      v18(v14);
      goto LABEL_14;
    }
    v15 = 0;
    v17 = 0;
    v18 = v27;
    if (v27)
      goto LABEL_13;
LABEL_14:
    if (v17)
      break;
LABEL_9:
    ++v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (v11 == v12)
      goto LABEL_20;
  }
  if (v15 != a2 || v17 != a3)
  {
    v13 = sub_18EC679A4();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      goto LABEL_26;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  sub_18EC3FA60(v26, &v25);
  v22 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, v22 ^ 1u, 1);
}

uint64_t sub_18EC3F380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  unsigned __int8 *v33;
  uint64_t v34;
  int v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v40 = a7;
  v41 = a8;
  v38 = a5;
  v39 = a6;
  v43 = a4;
  v44 = a1;
  v49 = *MEMORY[0x1E0C80C00];
  v45 = MEMORY[0x1E0DEAFA0];
  v46 = MEMORY[0x1E0DEAFA0];
  v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13B058);
  v13 = sub_18EC67524();
  v48 = v13;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v15 = (unsigned __int8 *)&v37 - v14;
  v16 = sub_18EC67524();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v37 - v19;
  v21 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC1B600(a3, (uint64_t)&v45);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v24)
  {
    v25(v20, 0, 1, a12);
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, a12);
    MEMORY[0x1E0C80A78](v26);
    *(&v37 - 8) = a11;
    *(&v37 - 7) = a12;
    v27 = v39;
    *(&v37 - 6) = v38;
    *(&v37 - 5) = v27;
    v28 = v41;
    *(&v37 - 4) = v40;
    *(&v37 - 3) = v28;
    *(&v37 - 2) = a9;
    *(&v37 - 1) = a10;
    v45 = MEMORY[0x1E0DEAFA0];
    v46 = MEMORY[0x1E0DEAFA0];
    v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13B060);
    v48 = v13;
    v29 = swift_getTupleTypeMetadata();
    sub_18EC2F08C((uint64_t)v23, (uint64_t)sub_18EC41DA4, (uint64_t)(&v37 - 10), a12, MEMORY[0x1E0DEDCE8], v29, MEMORY[0x1E0DEDD18], v30);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a12);
    v31 = *v15;
    v32 = v15[1];
    v33 = &v15[*(int *)(TupleTypeMetadata + 80)];
    v34 = sub_18EC67524();
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v44, v33, v34);
    if (v32)
      v35 = 256;
    else
      v35 = 0;
  }
  else
  {
    v25(v20, 1, 1, a12);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 56))(v44, 1, 1, a11);
    v31 = 0;
    v35 = 0;
  }
  return v35 | v31;
}

uint64_t sub_18EC3F694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t TupleTypeMetadata;
  uint64_t result;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13B058);
  sub_18EC67524();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  result = sub_18EC3D7F0(a9 + *(int *)(TupleTypeMetadata + 80), a1, a10, a4, a5, a6, a7, 0, a2, a3, a8);
  *(_BYTE *)a9 = result & 1;
  *(_BYTE *)(a9 + 1) = BYTE1(result) & 1;
  *(_QWORD *)(a9 + 8) = v20;
  return result;
}

uint64_t sub_18EC3F784(uint64_t a1)
{
  return sub_18EC3F848(a1, qword_1EE13F520, (uint64_t)sub_18EC3F7FC, (uint64_t)nullsub_1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_18EC3F7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FieldAccessor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC3F7FC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18EC3F82C(uint64_t a1)
{
  return sub_18EC3F848(a1, qword_1EE13F538, (uint64_t)sub_18EC3F8C4, (uint64_t)sub_18EC3F8E4);
}

uint64_t sub_18EC3F848(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v7 = (int *)type metadata accessor for FieldAccessor(0);
  __swift_allocate_value_buffer((uint64_t)v7, a2);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)a2);
  result = sub_18EC66EF4();
  v10 = (_QWORD *)(v8 + v7[5]);
  *v10 = a3;
  v10[1] = 0;
  v11 = (_QWORD *)(v8 + v7[6]);
  *v11 = a4;
  v11[1] = 0;
  v12 = (_QWORD *)(v8 + v7[7]);
  *v12 = 0;
  v12[1] = 0;
  return result;
}

uint64_t sub_18EC3F8C4(uint64_t a1, uint64_t a2)
{
  return sub_18EC3FA90(a1, a2, &qword_1EE13A6F0, &qword_1EE13AD90);
}

uint64_t sub_18EC3F8E4(uint64_t a1)
{
  uint64_t isOptionalType;

  if ((swift_isOptionalType() & 1) == 0)
    return 0;
  isOptionalType = swift_isOptionalType();
  if ((isOptionalType & 1) != 0)
  {
    MEMORY[0x1E0C80A78](isOptionalType);
    AGTypeApplyFields2();
  }
  return a1;
}

uint64_t sub_18EC3F970()
{
  int *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t (**v3)(uint64_t, uint64_t);
  uint64_t (**v4)(uint64_t);
  _QWORD *v5;

  v0 = (int *)type metadata accessor for FieldAccessor(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EE13F550);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EE13F550);
  result = sub_18EC66EF4();
  v3 = (uint64_t (**)(uint64_t, uint64_t))(v1 + v0[5]);
  *v3 = sub_18EC3FA70;
  v3[1] = 0;
  v4 = (uint64_t (**)(uint64_t))(v1 + v0[6]);
  *v4 = sub_18EC3FB08;
  v4[1] = 0;
  v5 = (_QWORD *)(v1 + v0[7]);
  *v5 = sub_18EC40740;
  v5[1] = 0;
  return result;
}

uint64_t sub_18EC3F9F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18EC3FA3C()
{
  return swift_deallocObject();
}

uint64_t sub_18EC3FA4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

_OWORD *sub_18EC3FA60(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_18EC3FA70(uint64_t a1, uint64_t a2)
{
  return sub_18EC3FA90(a1, a2, &qword_1EE13A6E8, &qword_1EE13AD80);
}

uint64_t sub_18EC3FA90(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v6;

  if (*a3 != -1)
    swift_once();
  v6 = *a4;
  swift_bridgeObjectRetain();
  sub_18EC6723C();
  return v6;
}

uint64_t sub_18EC3FB08(uint64_t a1)
{
  uint64_t v2;

  sub_18EC67B6C();
  v2 = sub_18EC3FB58(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_18EC3FB58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t isClassType;
  uint64_t v27;
  _QWORD v29[2];
  __int128 v30;
  uint64_t v31;
  __int16 v32;
  _QWORD v33[3];

  v2 = sub_18EC67704();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  if ((sub_18EC4026C() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v7 = type metadata accessor for FieldAccessor(0);
    v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject();
    v30 = xmmword_18EC6BB40;
    *(_OWORD *)(v10 + 16) = xmmword_18EC6BB40;
    v11 = v10 + v9;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE13F520);
    v13 = sub_18EC3F7B8(v12, v11);
    v32 = 0;
    v33[0] = 0;
    MEMORY[0x1E0C80A78](v13);
    v14 = &v29[-12];
    v29[-10] = v10;
    v29[-9] = 0x656761726F7473;
    v29[-8] = 0xE700000000000000;
    v29[-7] = (char *)&v32 + 1;
    v29[-6] = v33;
    v29[-5] = sub_18EC29160;
    v29[-4] = 0;
    v29[-3] = sub_18EC4258C;
    v29[-2] = v6;
    v29[-1] = &v32;
    if (AGTypeGetKind() == 5)
    {
LABEL_10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
      v22 = swift_allocObject();
      v29[1] = v29;
      v23 = v22;
      *(_OWORD *)(v22 + 16) = v30;
      sub_18EC676F8();
      v31 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
      sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
      v24 = sub_18EC67584();
      MEMORY[0x1E0C80A78](v24);
      v29[-2] = sub_18EC40E1C;
      v29[-1] = v14;
      sub_18EC67650();
      v25 = *(void (**)(char *, uint64_t))(v3 + 8);
      swift_retain();
      v25(v5, v2);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_23;
    }
    v31 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      v29[-2] = &v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) != 0)
    {
LABEL_22:
      MEMORY[0x1E0C80A78](isClassType);
      v29[-2] = sub_18EC40E1C;
      v29[-1] = v14;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_21:
    isClassType = AGTypeGetKind();
    goto LABEL_22;
  }
  if ((sub_18EC4026C() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
    v15 = type metadata accessor for FieldAccessor(0);
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject();
    v30 = xmmword_18EC6BB40;
    *(_OWORD *)(v18 + 16) = xmmword_18EC6BB40;
    v19 = v18 + v17;
    if (qword_1EE13A6D0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v15, (uint64_t)qword_1EE13F520);
    v21 = sub_18EC3F7B8(v20, v19);
    v32 = 0;
    v33[0] = 0;
    MEMORY[0x1E0C80A78](v21);
    v14 = &v29[-12];
    v29[-10] = v18;
    v29[-9] = 0x65756C61765FLL;
    v29[-8] = 0xE600000000000000;
    v29[-7] = (char *)&v32 + 1;
    v29[-6] = v33;
    v29[-5] = sub_18EC29160;
    v29[-4] = 0;
    v29[-3] = sub_18EC42550;
    v29[-2] = v6;
    v29[-1] = &v32;
    if (AGTypeGetKind() == 5)
      goto LABEL_10;
    v31 = a1;
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a1);
      v29[-2] = &v31;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) != 0)
      goto LABEL_22;
    goto LABEL_21;
  }
  if ((sub_18EC4026C() & 1) == 0 && (sub_18EC4026C() & 1) == 0)
    sub_18EC4026C();
LABEL_23:
  swift_beginAccess();
  v27 = *(_QWORD *)(v6 + 16);
  swift_release();
  return v27;
}

uint64_t sub_18EC4026C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_18EC67254();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_18EC67254();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_18EC679A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_18EC67254();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_18EC67254();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18EC403D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t isClassType;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;

  v6 = sub_18EC67704();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA0);
  v10 = type metadata accessor for FieldAccessor(0);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v22 = xmmword_18EC6BB40;
  *(_OWORD *)(v13 + 16) = xmmword_18EC6BB40;
  v14 = v13 + v12;
  if (qword_1EE13A6D0 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE13F520);
  v16 = sub_18EC3F7B8(v15, v14);
  v25 = 0;
  v24 = 0;
  MEMORY[0x1E0C80A78](v16);
  v17 = &v22 - 6;
  *((_QWORD *)&v22 - 10) = v13;
  *((_QWORD *)&v22 - 9) = 0x65756C6176;
  *((_QWORD *)&v22 - 8) = 0xE500000000000000;
  *((_QWORD *)&v22 - 7) = (char *)&v25 + 1;
  *((_QWORD *)&v22 - 6) = &v24;
  *((_QWORD *)&v22 - 5) = sub_18EC29160;
  *((_QWORD *)&v22 - 4) = 0;
  *((_QWORD *)&v22 - 3) = sub_18EC4275C;
  *((_QWORD *)&v22 - 2) = a4;
  *((_QWORD *)&v22 - 1) = &v25;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v22;
    swift_retain();
    sub_18EC676F8();
    v23 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v19 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v19);
    *((_QWORD *)&v22 - 2) = sub_18EC40E1C;
    *((_QWORD *)&v22 - 1) = v17;
    sub_18EC67650();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v23 = a2;
    swift_retain();
    if ((swift_isOptionalType() & 1) != 0)
    {
      MEMORY[0x1E0C80A78](a2);
      *((_QWORD *)&v22 - 2) = &v23;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *((_QWORD *)&v22 - 2) = sub_18EC40E1C;
    *((_QWORD *)&v22 - 1) = v17;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

_OWORD *sub_18EC40740@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_18EC67B6C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_18EC4080C((uint64_t)a1, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  if (v6)
    return sub_18EC3FA60(&v5, a2);
  *a2 = 0u;
  a2[1] = 0u;
  return (_OWORD *)sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AC8);
}

double sub_18EC4080C@<D0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  void *v4;
  void *v5;
  double result;
  void *v7;
  __int128 v8;

  if ((sub_18EC4026C() & 1) != 0)
  {
    sub_18EC28D3C(a1, 0x656761726F7473, 0xE700000000000000, &v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
    if (swift_dynamicCast())
    {
      v4 = sub_18EC33BD4(v7);
      if (v4)
      {
        v5 = v4;
        *(_QWORD *)(a2 + 24) = swift_getObjectType();
        swift_unknownObjectRelease();
        *(_QWORD *)a2 = v5;
        return result;
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if ((sub_18EC4026C() & 1) != 0)
    {
      sub_18EC28D3C(a1, 0x65756C61765FLL, 0xE600000000000000, (_OWORD *)a2);
      return result;
    }
    if ((sub_18EC4026C() & 1) == 0 && (sub_18EC4026C() & 1) == 0)
      sub_18EC4026C();
  }
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_18EC409D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8, uint64_t *a9, uint64_t (*a10)(uint64_t, uint64_t), uint64_t a11, void (*a12)(uint64_t, uint64_t, char *), uint64_t a13, _BYTE *a14)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t result;
  uint64_t Kind;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, char *);
  _BYTE *v39;
  uint64_t *v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a6;
  v47 = a7;
  v45 = a4;
  v19 = type metadata accessor for FieldAccessor(0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a5 + 16);
  if (!v23)
    return 1;
  v36 = a13;
  v37 = a3;
  v38 = a12;
  v39 = a14;
  v42 = a11;
  v43 = a8;
  v40 = a9;
  v41 = a10;
  v24 = a5 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  v25 = *(_QWORD *)(v20 + 72);
  v44 = a5;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_18EC3F7B8(v24, (uint64_t)v22);
    v28 = *(uint64_t (**)(uint64_t, uint64_t))&v22[*(int *)(v19 + 20)];
    swift_retain();
    v29 = v28(v46, v47);
    v31 = v30;
    swift_release();
    if (v29 == a1 && v31 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = sub_18EC679A4();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
        goto LABEL_5;
    }
    v26 = *(uint64_t (**)(uint64_t))&v22[*(int *)(v19 + 24)];
    swift_retain();
    v27 = v26(v45);
    swift_release();
    if (v27)
      break;
LABEL_5:
    sub_18EC41BB4((uint64_t)v22);
    v24 += v25;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  *v43 = 1;
  *v40 = v27;
  swift_bridgeObjectRelease();
  Kind = AGTypeGetKind();
  if ((v41(v27, Kind) & 1) != 0)
  {
    if (v38)
      v38(v37, v45, v22);
    sub_18EC41BB4((uint64_t)v22);
    result = 0;
    *v39 = 1;
  }
  else
  {
    sub_18EC41BB4((uint64_t)v22);
    return 0;
  }
  return result;
}

uint64_t sub_18EC40C00(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v6 = sub_18EC67164();
  if (v7)
  {
    if (v6 == 1701670771 && v7 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      result = 0;
      *a4 = a3;
      return result;
    }
    v8 = sub_18EC679A4();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_6;
  }
  return 1;
}

uint64_t sub_18EC40C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18EC40C00(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

uint64_t sub_18EC40C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18EC2FC20(a1, a2, a3, a4, *(char ***)(v4 + 16));
}

uint64_t sub_18EC40CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;

  v8 = sub_18EC67164();
  if (!v9)
    return 1;
  v10 = v8;
  v11 = v9;
  v17 = v8;
  v18 = v9;
  swift_bridgeObjectRetain();
  v12 = sub_18EC67260();
  result = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    v16 = a5(v10, v11, a2, a3);
    swift_bridgeObjectRelease();
    return v16 & 1;
  }
  v14 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v14 = v10 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    result = sub_18EC41BF0(v10, v11);
    if (v15)
    {
      sub_18EC41C30(1);
      swift_bridgeObjectRelease();
      v10 = v17;
      v11 = v18;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18EC40DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  v5 = sub_18EC67164();
  if (!v6)
    return 1;
  v7 = a4(v5);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_18EC40E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18EC40DA4(a1, a2, a3, *(uint64_t (**)(uint64_t))(v3 + 16));
}

uint64_t sub_18EC40E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18EC40CA4(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 16));
}

uint64_t sub_18EC40E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18EC33660(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1;
}

uint64_t sub_18EC40E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t isOptionalType;
  uint64_t isClassType;
  _BYTE v10[16];
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v0 = sub_18EC67704();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Prefix(0);
  v13 = 0;
  v14 = 0;
  v11 = &v13;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v12 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v6 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v6);
    *(_QWORD *)&v10[-16] = sub_18EC425CC;
    *(_QWORD *)&v10[-8] = v10;
    sub_18EC67650();
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    v12 = v4;
    isOptionalType = swift_isOptionalType();
    if ((isOptionalType & 1) != 0)
    {
      MEMORY[0x1E0C80A78](isOptionalType);
      *(_QWORD *)&v10[-16] = &v12;
      AGTypeApplyFields2();
    }
    isClassType = swift_isClassType();
    if ((isClassType & 1) == 0)
      isClassType = AGTypeGetKind();
    MEMORY[0x1E0C80A78](isClassType);
    *(_QWORD *)&v10[-16] = sub_18EC425CC;
    *(_QWORD *)&v10[-8] = v10;
    result = AGTypeApplyFields2();
  }
  if (v14)
  {
    qword_1EE13AD80 = v13;
    *(_QWORD *)algn_1EE13AD88 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18EC41090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCF15AXCoreUtilities27_axPropertyWrapperFieldNameFSSSSL_6Prefix__publishedValue;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_18EC410E4()
{
  return type metadata accessor for Prefix(0);
}

uint64_t type metadata accessor for Prefix(uint64_t a1)
{
  return sub_18EC1CC74(a1, (uint64_t *)&unk_1EE13AE08);
}

void sub_18EC41100()
{
  unint64_t v0;

  sub_18EC4116C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_18EC4116C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE13AE18[0])
  {
    v0 = sub_18EC670E0();
    if (!v1)
      atomic_store(v0, qword_1EE13AE18);
  }
}

uint64_t sub_18EC411C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[16];
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_18EC67704();
  v1 = *(_QWORD *)(v0 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = _s15AXCoreUtilities6PrefixCMa_0();
  v11 = 0;
  v12 = 0;
  v9 = &v11;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18EC6BB40;
    sub_18EC676F8();
    v10 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADC8);
    sub_18EC41D4C(&qword_1EE13ADD0, &qword_1EE13ADC8, MEMORY[0x1E0DEAF38]);
    v6 = sub_18EC67584();
    MEMORY[0x1E0C80A78](v6);
    *(_QWORD *)&v8[-16] = sub_18EC42610;
    *(_QWORD *)&v8[-8] = v8;
    sub_18EC67650();
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    v10 = v4;
    if ((swift_isOptionalType() & 1) != 0)
    {
      ((void (*)(void))MEMORY[0x1E0C80A78])();
      *(_QWORD *)&v8[-16] = &v10;
      AGTypeApplyFields2();
    }
    if ((swift_isClassType() & 1) == 0)
      AGTypeGetKind();
    ((void (*)(void))MEMORY[0x1E0C80A78])();
    *(_QWORD *)&v8[-16] = sub_18EC42610;
    *(_QWORD *)&v8[-8] = v8;
    result = AGTypeApplyFields2();
  }
  if (v12)
  {
    qword_1EE13AD90 = v11;
    *(_QWORD *)algn_1EE13AD98 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18EC41418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_18EC1D250();
  if ((sub_18EC67554() & 1) == 0 || __swift_instantiateConcreteTypeFromMangledName(a8) != a4)
    return 1;
  swift_bridgeObjectRetain();
  v12 = sub_18EC67218();
  v13 = sub_18EC41CA4(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x193FF8E00](v13, v15, v17, v19);
  v22 = v21;
  swift_bridgeObjectRelease();
  *a5 = v20;
  a5[1] = v22;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18EC41520()
{
  return swift_deallocClassInstance();
}

uint64_t _s15AXCoreUtilities6PrefixCMa_0()
{
  return objc_opt_self();
}

uint64_t *sub_18EC41550(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_18EC66F00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = *v18;
    swift_retain();
    swift_retain();
    if (v19)
    {
      v20 = v18[1];
      *v17 = v19;
      v17[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

uint64_t sub_18EC41630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    return swift_release();
  return result;
}

uint64_t sub_18EC416AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  swift_retain();
  swift_retain();
  if (v18)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_18EC41760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15);
  v19 = *(_QWORD *)(a2 + v15);
  if (!v18)
  {
    if (v19)
    {
      v21 = *(_QWORD *)(v17 + 8);
      *v16 = v19;
      v16[1] = v21;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_7;
  }
  v20 = *(_QWORD *)(v17 + 8);
  *v16 = v19;
  v16[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_18EC41854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  if (*v10)
  {
    v12 = v10[1];
    *v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  return a1;
}

uint64_t sub_18EC418E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *v9;
  if (!v10)
  {
    if (v11)
    {
      v13 = v9[1];
      *v8 = v11;
      v8[1] = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = v9[1];
  *v8 = v11;
  v8[1] = v12;
  swift_release();
  return a1;
}

uint64_t sub_18EC419B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18EC419BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_18EC66F00();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_18EC41A38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18EC41A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_18EC66F00();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_18EC41ABC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18EC66F00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_18EC41B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;

  v4 = *(uint64_t **)(v3 + 24);
  *v4 = sub_18EC33FF0(a2, a3, *(_QWORD *)(v3 + 16), a2);
  return swift_unknownObjectRelease();
}

unint64_t sub_18EC41B78()
{
  unint64_t result;

  result = qword_1EE139A98;
  if (!qword_1EE139A98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE139A98);
  }
  return result;
}

uint64_t sub_18EC41BB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FieldAccessor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18EC41BF0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_18EC67278();
  else
    return 0;
}

uint64_t sub_18EC41C30(uint64_t result)
{
  char v1;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_18EC67224();
      if ((v1 & 1) == 0)
        return sub_18EC671F4();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_18EC41CA4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_18EC67224();
    return sub_18EC67290();
  }
  return result;
}

uint64_t sub_18EC41D2C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_18EC2EBF8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_18EC41D4C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x193FFA51C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC41D8C()
{
  return swift_deallocObject();
}

uint64_t sub_18EC41D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18EC2EFDC(a1, a2, a3, *(_QWORD *)(v3 + 24));
}

uint64_t sub_18EC41DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_18EC3F694(a1, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[2], a2, v2[3]);
}

uint64_t sub_18EC41DD8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC41E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18EC3E774(a1, a2, a3, *(unsigned __int8 *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 16));
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_18EC41E7C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1 != (void *)1)

  return swift_deallocObject();
}

uint64_t sub_18EC41EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41EF8(a1, a2, a3, &qword_1EE13B050, (uint64_t (*)(uint64_t))sub_18EC41ED0);
}

id sub_18EC41EC0(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_18EC41ED0(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_18EC41EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41EF8(a1, a2, a3, &qword_1EE13B068, (uint64_t (*)(uint64_t))sub_18EC42744);
}

uint64_t sub_18EC41EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;

  return sub_18EC3E6B4(a1, a2, a3, *(unsigned __int8 *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), a4, a5);
}

uint64_t sub_18EC41F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41EF8(a1, a2, a3, &qword_1EE13B070, (uint64_t (*)(uint64_t))sub_18EC42744);
}

uint64_t sub_18EC41F4C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) != 1)
    swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18EC41F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41EF8(a1, a2, a3, &qword_1EE13B078, sub_18EC41FA0);
}

uint64_t sub_18EC41F90(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t sub_18EC41FA0(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t sub_18EC41FB0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) != 1)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18EC41FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3E5F0);
}

uint64_t sub_18EC41FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, a2, a3, *(unsigned __int8 *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56));
}

uint64_t sub_18EC42020(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_18EC42034()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3E51C);
}

uint64_t sub_18EC42054()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B088, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E45C);
}

uint64_t sub_18EC4207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v5;

  return a5(a1, a2, a3, *(unsigned __int8 *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), a4);
}

uint64_t sub_18EC420B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B098, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E45C);
}

uint64_t sub_18EC420CC()
{
  return swift_deallocObject();
}

uint64_t sub_18EC420E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC420F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC4210C()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E2DC);
}

uint64_t sub_18EC42138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC42150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC42168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E2DC);
}

uint64_t sub_18EC42180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B108, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E2DC);
}

uint64_t sub_18EC42194()
{
  return swift_deallocObject();
}

uint64_t sub_18EC421A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B118, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E21C);
}

uint64_t sub_18EC421C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B128, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E21C);
}

uint64_t sub_18EC421D4()
{
  return swift_deallocObject();
}

uint64_t sub_18EC421E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B138, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E164);
}

uint64_t sub_18EC42200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B148, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E164);
}

uint64_t sub_18EC42218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B158, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC42230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)&qword_1EE13B168, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3E39C);
}

uint64_t sub_18EC42244()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3E0AC);
}

uint64_t sub_18EC42268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3DFE4);
}

uint64_t sub_18EC42278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DF28);
}

uint64_t sub_18EC42290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, (uint64_t)type metadata accessor for CGPoint, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DF28);
}

uint64_t sub_18EC422A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC422C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEB070], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC422D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DE30);
}

uint64_t sub_18EC422F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEE190], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC42308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC42320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DE30);
}

uint64_t sub_18EC42338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEDBC8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DE30);
}

uint64_t sub_18EC42350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEE068], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DDB4);
}

uint64_t sub_18EC42368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEDB58], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DDB4);
}

uint64_t sub_18EC4237C()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEDE70], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DD38);
}

uint64_t sub_18EC423A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEDA70], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DD38);
}

uint64_t sub_18EC423C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEBB98], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC423D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC4207C(a1, a2, a3, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_18EC3DEAC);
}

uint64_t sub_18EC423F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3DCBC);
}

uint64_t sub_18EC423FC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40) >= 2uLL)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t objectdestroy_75Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC42464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC41FEC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18EC3DBBC);
}

uint64_t sub_18EC42470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC424B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ADA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_18EC42540()
{
  return swift_deallocObject();
}

uint64_t sub_18EC42550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t sub_18EC4258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18EC403D0(a1, a2, a3, v3);
}

uint64_t sub_18EC42594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18EC409D8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_BYTE **)(v4 + 40), *(uint64_t **)(v4 + 48), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 56), *(_QWORD *)(v4 + 64), *(void (**)(uint64_t, uint64_t, char *))(v4 + 72), *(_QWORD *)(v4 + 80), *(_BYTE **)(v4 + 88)) & 1;
}

uint64_t sub_18EC425CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18EC41418(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), 0x656873696C627570, 0xEE0065756C615664, &qword_1EE13B018) & 1;
}

uint64_t sub_18EC42610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18EC41418(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), 0x756C6156797A616CLL, 0xE900000000000065, &qword_1EE13B188) & 1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FieldAccessor.TypeValidation(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FieldAccessor.TypeValidation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_18EC426FC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_18EC42714(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FieldAccessor.TypeValidation()
{
  return &type metadata for FieldAccessor.TypeValidation;
}

uint64_t sub_18EC42764(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[48];
  _OWORD v12[2];
  uint64_t v13;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = &v11[-v4];
  type metadata accessor for AXMigratingEncoder();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  v6[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v12, v8 + 16);
  v9 = swift_endAccess();
  v6[4] = v8;
  v6[2] = v7;
  sub_18EC45814(v9, (uint64_t)v5);
  sub_18EC58CE4(v2, (uint64_t)v12);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  swift_release();
  sub_18EC1B63C((uint64_t)v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  sub_18EC454B0();
  sub_18EC675E4();
  return sub_18EC1E58C((uint64_t)v12, &qword_1EE139AA0);
}

uint64_t sub_18EC42930(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v15 = a1;
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v14 = sub_18EC67524();
  v3 = MEMORY[0x1E0C80A78](v14);
  v5 = (char *)&v14 - v4;
  v6 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v14 - v7;
  type metadata accessor for AXMigratingDecoder();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x1E0DEE9D8];
  v9[2] = MEMORY[0x1E0DEE9D8];
  v9[3] = sub_18EC585F0(v10);
  type metadata accessor for AXDataHolder();
  memset(v16, 0, sizeof(v16));
  v17 = 0;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 32) = 0u;
  *(_QWORD *)(v11 + 48) = 0;
  *(_OWORD *)(v11 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v16, v11 + 16);
  swift_endAccess();
  v9[4] = v11;
  v12 = v15;
  sub_18EC53B48(v2, v15, v2);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v5, v2);
  sub_18EC4695C((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
  return sub_18EC1B5B4(v12);
}

_QWORD *sub_18EC42B64()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void (*v9)(void);
  void (*v10)(void);
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  objc_class *ObjCClassFromMetadata;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;

  v1 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v2 = (_QWORD *)((char *)v0 + v1[14]);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v21, v3, v4);
  v6 = v21;
  v7 = v22;
  if (v24)
  {
    if (v24 != 1)
      return result;
    v8 = v23;
    if (!v23)
    {
      swift_bridgeObjectRetain();
      sub_18EC48860(1);
      swift_bridgeObjectRelease();
      sub_18EC67530();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18EC488E8(1uLL, v6, v7);
      swift_bridgeObjectRelease();
      sub_18EC450DC();
      swift_bridgeObjectRetain();
      sub_18EC67230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18EC6723C();
      swift_bridgeObjectRelease();
      result = (_QWORD *)sub_18EC6723C();
      v8 = 0xE300000000000000;
    }
  }
  else
  {
    v8 = 0;
  }
  v9 = sub_18EC42E28((uint64_t)result);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  type metadata accessor for AXSetting(0, v1[10], v1[11], v1[12]);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v17 = (const char *)sub_18EC67074();
  v21 = v13;
  v22 = v15;
  swift_bridgeObjectRetain();
  sub_18EC6723C();
  v18 = sub_18EC671DC();
  swift_bridgeObjectRelease();
  class_replaceMethod(ObjCClassFromMetadata, v17, v9, (const char *)(v18 + 32));
  swift_release();
  if (!v8)
    return (_QWORD *)swift_bridgeObjectRelease();
  v19 = (const char *)sub_18EC67074();
  v21 = 3817590;
  v22 = 0xE300000000000000;
  sub_18EC6723C();
  swift_bridgeObjectRelease();
  v20 = sub_18EC671DC();
  swift_bridgeObjectRelease();
  class_replaceMethod(ObjCClassFromMetadata, v19, v11, (const char *)(v20 + 32));
  return (_QWORD *)swift_release();
}

IMP sub_18EC42E28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  IMP v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  _QWORD *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  void *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  void *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t aBlock;
  uint64_t v104;
  void *v105;
  void *v106;
  void *v107;
  uint64_t v108;
  _BYTE v109[40];

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v102 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v102 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v102 - v13;
  v16 = (char *)v1 + *(_QWORD *)(v15 + 104);
  v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17((char *)&v102 - v13, v16, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B198);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1A0);
    if (swift_dynamicCast())
    {
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v1;
      v107 = sub_18EC453BC;
      v108 = v28;
      v29 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC43FEC;
      v106 = &block_descriptor_132;
      v30 = _Block_copy(&aBlock);
      v31 = v1;
      swift_release();
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v31;
      v107 = sub_18EC45334;
      v108 = v32;
      aBlock = v29;
      v104 = 1107296256;
      v105 = sub_18EC43FF0;
      v106 = &block_descriptor_138;
      v33 = _Block_copy(&aBlock);
      v34 = v31;
      swift_release();
      v27 = imp_implementationWithBlock(v30);
      imp_implementationWithBlock(v33);
      _Block_release(v33);
      _Block_release(v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
LABEL_6:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v27;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1A8);
    if (swift_dynamicCast())
    {
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v1;
      v107 = sub_18EC4539C;
      v108 = v35;
      v36 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC43FEC;
      v106 = &block_descriptor_120;
      v37 = _Block_copy(&aBlock);
      v38 = v1;
      swift_release();
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v38;
      v107 = sub_18EC45300;
      v108 = v39;
      aBlock = v36;
      v104 = 1107296256;
      v105 = sub_18EC43FF0;
      v106 = &block_descriptor_126;
      v40 = _Block_copy(&aBlock);
      v41 = v38;
      swift_release();
      v27 = imp_implementationWithBlock(v37);
      imp_implementationWithBlock(v40);
      _Block_release(v40);
      _Block_release(v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v1;
      v107 = sub_18EC45348;
      v108 = v42;
      v43 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC441F8;
      v106 = &block_descriptor_108;
      v44 = _Block_copy(&aBlock);
      v45 = v1;
      swift_release();
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v45;
      v107 = sub_18EC45350;
      v108 = v46;
      aBlock = v43;
      v104 = 1107296256;
      v105 = sub_18EC44114;
      v106 = &block_descriptor_114;
      v47 = _Block_copy(&aBlock);
      v48 = v45;
      swift_release();
      v27 = imp_implementationWithBlock(v44);
      imp_implementationWithBlock(v47);
      _Block_release(v47);
      _Block_release(v44);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v27;
    }
    if (swift_dynamicCast())
    {
      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = v1;
      v107 = sub_18EC45314;
      v108 = v50;
      v51 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC43FEC;
      v106 = &block_descriptor_96;
      v52 = _Block_copy(&aBlock);
      v53 = v1;
      swift_release();
      v54 = swift_allocObject();
      *(_QWORD *)(v54 + 16) = v53;
      v107 = sub_18EC45334;
      v108 = v54;
      aBlock = v51;
      v104 = 1107296256;
      v105 = sub_18EC43FF0;
      v106 = &block_descriptor_102;
      v55 = _Block_copy(&aBlock);
      v56 = v53;
      swift_release();
      v27 = imp_implementationWithBlock(v52);
      imp_implementationWithBlock(v55);
      _Block_release(v55);
      _Block_release(v52);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v1;
      v107 = sub_18EC452E0;
      v108 = v57;
      v58 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC43FEC;
      v106 = &block_descriptor_84;
      v59 = _Block_copy(&aBlock);
      v60 = v1;
      swift_release();
      v61 = swift_allocObject();
      *(_QWORD *)(v61 + 16) = v60;
      v107 = sub_18EC45300;
      v108 = v61;
      aBlock = v58;
      v104 = 1107296256;
      v105 = sub_18EC43FF0;
      v106 = &block_descriptor_90;
      v62 = _Block_copy(&aBlock);
      v63 = v60;
      swift_release();
      v27 = imp_implementationWithBlock(v59);
      imp_implementationWithBlock(v62);
      _Block_release(v62);
      _Block_release(v59);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      v64 = swift_allocObject();
      *(_QWORD *)(v64 + 16) = v1;
      v107 = sub_18EC452D0;
      v108 = v64;
      v65 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC44374;
      v106 = &block_descriptor_72;
      v66 = _Block_copy(&aBlock);
      v67 = v1;
      swift_release();
      v68 = swift_allocObject();
      *(_QWORD *)(v68 + 16) = v67;
      v107 = sub_18EC452D8;
      v108 = v68;
      aBlock = v65;
      v104 = 1107296256;
      v69 = &block_descriptor_78;
LABEL_20:
      v105 = sub_18EC443C4;
      v106 = v69;
      v73 = _Block_copy(&aBlock);
      v74 = v67;
      swift_release();
      v27 = imp_implementationWithBlock(v66);
      imp_implementationWithBlock(v73);
      _Block_release(v73);
      _Block_release(v66);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v27;
    }
    if (swift_dynamicCast())
    {
      v70 = swift_allocObject();
      *(_QWORD *)(v70 + 16) = v1;
      v107 = sub_18EC4527C;
      v108 = v70;
      v71 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC44374;
      v106 = &block_descriptor_60;
      v66 = _Block_copy(&aBlock);
      v67 = v1;
      swift_release();
      v72 = swift_allocObject();
      *(_QWORD *)(v72 + 16) = v67;
      v107 = sub_18EC45284;
      v108 = v72;
      aBlock = v71;
      v104 = 1107296256;
      v69 = &block_descriptor_66;
      goto LABEL_20;
    }
    if (swift_dynamicCast())
    {
      v75 = swift_allocObject();
      *(_QWORD *)(v75 + 16) = v1;
      v107 = sub_18EC45228;
      v108 = v75;
      v76 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC445A4;
      v106 = &block_descriptor_48;
      v77 = _Block_copy(&aBlock);
      v78 = v1;
      swift_release();
      v79 = swift_allocObject();
      *(_QWORD *)(v79 + 16) = v78;
      v107 = sub_18EC45230;
      v108 = v79;
      aBlock = v76;
      v104 = 1107296256;
      v105 = sub_18EC44600;
      v106 = &block_descriptor_54;
      v80 = _Block_copy(&aBlock);
      v81 = v78;
      swift_release();
      v27 = imp_implementationWithBlock(v77);
      imp_implementationWithBlock(v80);
      _Block_release(v80);
      _Block_release(v77);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v27;
    }
    if (swift_dynamicCast())
    {
      v82 = swift_allocObject();
      *(_QWORD *)(v82 + 16) = v1;
      v107 = sub_18EC451D4;
      v108 = v82;
      v83 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v104 = 1107296256;
      v105 = sub_18EC446EC;
      v106 = &block_descriptor_36;
      v84 = _Block_copy(&aBlock);
      v85 = v1;
      swift_release();
      v86 = swift_allocObject();
      *(_QWORD *)(v86 + 16) = v85;
      v107 = sub_18EC451DC;
      v108 = v86;
      aBlock = v83;
      v104 = 1107296256;
      v105 = sub_18EC44114;
      v106 = &block_descriptor_42;
      v87 = _Block_copy(&aBlock);
      v88 = v85;
      swift_release();
      v27 = imp_implementationWithBlock(v84);
      imp_implementationWithBlock(v87);
      _Block_release(v87);
      _Block_release(v84);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v27;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1B0);
    if (swift_dynamicCast())
    {
      v17(v12, v16, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1B8);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      v17(v9, v16, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1C8);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
LABEL_29:
        v17(v6, v16, v2);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1C0);
        if (swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          v89 = swift_allocObject();
          *(_QWORD *)(v89 + 16) = v1;
          v107 = sub_18EC451C4;
          v108 = v89;
          v90 = MEMORY[0x1E0C809B0];
          aBlock = MEMORY[0x1E0C809B0];
          v104 = 1107296256;
          v105 = sub_18EC44804;
          v106 = &block_descriptor_24;
          v20 = _Block_copy(&aBlock);
          v21 = v1;
          swift_release();
          v91 = swift_allocObject();
          *(_QWORD *)(v91 + 16) = v21;
          v107 = sub_18EC451CC;
          v108 = v91;
          aBlock = v90;
          v104 = 1107296256;
          v23 = sub_18EC44954;
          v24 = &block_descriptor_30;
        }
        else
        {
          v92 = swift_allocObject();
          *(_QWORD *)(v92 + 16) = v1;
          v107 = sub_18EC451B4;
          v108 = v92;
          v93 = MEMORY[0x1E0C809B0];
          aBlock = MEMORY[0x1E0C809B0];
          v104 = 1107296256;
          v105 = sub_18EC44804;
          v106 = &block_descriptor_12;
          v20 = _Block_copy(&aBlock);
          v21 = v1;
          swift_release();
          v94 = swift_allocObject();
          *(_QWORD *)(v94 + 16) = v21;
          v107 = sub_18EC451BC;
          v108 = v94;
          aBlock = v93;
          v104 = 1107296256;
          v23 = sub_18EC44954;
          v24 = &block_descriptor_18;
        }
        goto LABEL_3;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
    v95 = swift_allocObject();
    *(_QWORD *)(v95 + 16) = v1;
    v107 = sub_18EC45144;
    v108 = v95;
    v96 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v104 = 1107296256;
    v105 = sub_18EC44BC4;
    v106 = &block_descriptor;
    v97 = _Block_copy(&aBlock);
    v98 = v1;
    swift_release();
    v99 = swift_allocObject();
    *(_QWORD *)(v99 + 16) = v98;
    v107 = sub_18EC4517C;
    v108 = v99;
    aBlock = v96;
    v104 = 1107296256;
    v105 = sub_18EC44C34;
    v106 = &block_descriptor_6;
    v100 = _Block_copy(&aBlock);
    v101 = v98;
    swift_release();
    v27 = imp_implementationWithBlock(v97);
    imp_implementationWithBlock(v100);
    _Block_release(v100);
    _Block_release(v97);
    return v27;
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v1;
  v107 = sub_18EC45420;
  v108 = v18;
  v19 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v104 = 1107296256;
  v105 = sub_18EC43EB8;
  v106 = &block_descriptor_144;
  v20 = _Block_copy(&aBlock);
  v21 = v1;
  swift_release();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  v107 = sub_18EC45428;
  v108 = v22;
  aBlock = v19;
  v104 = 1107296256;
  v23 = sub_18EC43F7C;
  v24 = &block_descriptor_150;
LABEL_3:
  v105 = v23;
  v106 = v24;
  v25 = _Block_copy(&aBlock);
  v26 = v21;
  swift_release();
  v27 = imp_implementationWithBlock(v20);
  imp_implementationWithBlock(v25);
  _Block_release(v25);
  _Block_release(v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  return v27;
}

uint64_t sub_18EC43DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];
  _QWORD v5[4];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)v4 - v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B198);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_18EC672B4();
  v2 = v4[1];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v2;
}

id sub_18EC43EB8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  v3 = (void *)sub_18EC6717C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18EC43F28()
{
  _BYTE v1[40];

  swift_bridgeObjectRetain();
  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

uint64_t sub_18EC43F7C(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v2 = sub_18EC671A0();
  v4 = v3;
  swift_retain();
  v5 = swift_unknownObjectRetain();
  v1(v5, v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18EC43FF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[4];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)&v8[-1] - v4);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_18EC672B4();
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_18EC440C0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18EC44114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18EC44164(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[16];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)&v3[-v1]);
  swift_dynamicCast();
  return v3[15];
}

uint64_t sub_18EC441F8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_18EC4424C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)v3 - v1);
  swift_dynamicCast();
  return v3[1];
}

double sub_18EC442E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(double *)&v3[1];
}

uint64_t sub_18EC44378()
{
  _BYTE v1[40];

  sub_18EC45430();
  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

double sub_18EC443C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(double *)&v3[1];
}

double sub_18EC4445C(uint64_t a1)
{
  double (*v1)(uint64_t);
  uint64_t v2;
  double v3;

  v1 = *(double (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18EC444B8(uint64_t a1, double a2)
{
  void (*v3)(uint64_t, double);
  uint64_t v4;

  v3 = *(void (**)(uint64_t, double))(a1 + 32);
  swift_retain();
  v4 = swift_unknownObjectRetain();
  v3(v4, a2);
  swift_release();
  return swift_unknownObjectRelease();
}

float sub_18EC44510(uint64_t a1)
{
  uint64_t v1;
  _DWORD v3[4];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(float *)&v3[3];
}

float sub_18EC445A4(uint64_t a1)
{
  float (*v1)(uint64_t);
  uint64_t v2;
  float v3;

  v1 = *(float (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18EC44600(uint64_t a1, float a2)
{
  void (*v3)(uint64_t, float);
  uint64_t v4;

  v3 = *(void (**)(uint64_t, float))(a1 + 32);
  swift_retain();
  v4 = swift_unknownObjectRetain();
  v3(v4, a2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18EC44658(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[16];

  MEMORY[0x1E0C80A78](a1);
  sub_18EC45DCC((uint64_t)&v3[-v1]);
  swift_dynamicCast();
  return v3[15];
}

uint64_t sub_18EC446EC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_18EC44740(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - v4;
  sub_18EC45DCC((uint64_t)&v8 - v4);
  v6 = sub_18EC67998();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v6;
}

id sub_18EC44804(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18EC44858(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD v9[2];

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)v9 - v5;
  if (v7)
  {
    swift_unknownObjectRetain();
    sub_18EC6798C();
    sub_18EC4695C((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
    swift_dynamicCast();
    sub_18EC4695C((uint64_t)v6);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_18EC44954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18EC449B8(uint64_t a1, _QWORD *a2)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11[4];
  uint64_t v12[3];
  uint64_t v13;

  v13 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  sub_18EC45DCC((uint64_t)boxed_opaque_existential_0);
  sub_18EC1B600((uint64_t)v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1D8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_18EC1E58C((uint64_t)&v8, &qword_1EE13B1E0);
    sub_18EC1B600((uint64_t)v12, (uint64_t)&v8);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B1E8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v11[0];
      *((_QWORD *)&v9 + 1) = v3;
      swift_bridgeObjectRetain();
      v5 = sub_18EC44CA8(MEMORY[0x1E0DEE9E0], v4, v4);
      swift_bridgeObjectRelease_n();
      *(_QWORD *)&v8 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      sub_18EC3FA60(&v8, v12);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    sub_18EC1E58C((uint64_t)&v8, &qword_1EE13B1E0);
  }
  sub_18EC1B600((uint64_t)v12, (uint64_t)&v8);
  v6 = sub_18EC67A4C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v6;
}

uint64_t sub_18EC44B30(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a2);
  v6 = (char *)&v8 - v5;
  sub_18EC6798C();
  sub_18EC4695C((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_18EC44BC4(uint64_t a1)
{
  void (*v1)(_QWORD *__return_ptr, uint64_t);
  uint64_t v2;
  void *v3;
  _QWORD v5[5];

  v1 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v5, v2);
  swift_release();
  swift_unknownObjectRelease();
  v3 = (void *)sub_18EC6759C();
  sub_18EC1B5B4((uint64_t)v5);
  return v3;
}

uint64_t sub_18EC44C34(uint64_t a1)
{
  void (*v1)(uint64_t, _BYTE *);
  uint64_t v2;
  _BYTE v4[40];

  v1 = *(void (**)(uint64_t, _BYTE *))(a1 + 32);
  sub_18EC675A8();
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2, v4);
  swift_unknownObjectRelease();
  swift_release();
  return sub_18EC1B5B4((uint64_t)v4);
}

uint64_t sub_18EC44CA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[40];
  _OWORD v50[2];
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  int64_t v54;

  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v54 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v9 << 6);
LABEL_25:
    sub_18EC1B578(*(_QWORD *)(a2 + 48) + 40 * v12, (uint64_t)v52);
    v50[0] = v52[0];
    v50[1] = v52[1];
    v51 = v53;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v46 = sub_18EC675B4();
    *((_QWORD *)&v46 + 1) = v16;
    sub_18EC675E4();
    if (*(_QWORD *)(a3 + 16) && (v17 = sub_18EC1FBC4((uint64_t)v50), (v18 & 1) != 0))
    {
      sub_18EC1B578(*(_QWORD *)(a3 + 56) + 40 * v17, (uint64_t)&v46);
      v43 = v46;
      v44 = v47;
      v45 = v48;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = sub_18EC1FBC4((uint64_t)v49);
      v22 = a1[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        goto LABEL_44;
      v25 = v20;
      if (a1[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_18EC4D224();
      }
      else
      {
        sub_18EC4B830(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_18EC1FBC4((uint64_t)v49);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_47;
        v21 = v26;
      }
      v10 = (uint64_t)a1;
      if ((v25 & 1) != 0)
      {
        sub_18EC45474((uint64_t)&v43, a1[7] + 40 * v21);
      }
      else
      {
        a1[(v21 >> 6) + 8] |= 1 << v21;
        sub_18EC1B578((uint64_t)v49, a1[6] + 40 * v21);
        v35 = a1[7] + 40 * v21;
        v36 = v43;
        v37 = v44;
        *(_QWORD *)(v35 + 32) = v45;
        *(_OWORD *)v35 = v36;
        *(_OWORD *)(v35 + 16) = v37;
        v38 = a1[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_45;
        a1[2] = v40;
      }
      swift_bridgeObjectRelease();
      sub_18EC1B5B4((uint64_t)v49);
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = sub_18EC1FBC4((uint64_t)v49);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        v31 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v43 = a1;
        v10 = (uint64_t)a1;
        if ((v31 & 1) == 0)
        {
          sub_18EC4D224();
          v10 = v43;
        }
        sub_18EC1B5B4(*(_QWORD *)(v10 + 48) + 40 * v28);
        v32 = *(_QWORD *)(v10 + 56) + 40 * v28;
        v33 = *(_QWORD *)(v32 + 32);
        v34 = *(_OWORD *)(v32 + 16);
        v46 = *(_OWORD *)v32;
        v47 = v34;
        v48 = v33;
        sub_18EC4CAD4(v28, v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = 0;
        v10 = (uint64_t)a1;
        v46 = 0u;
        v47 = 0u;
      }
      sub_18EC1B5B4((uint64_t)v49);
      sub_18EC1E58C((uint64_t)&v46, &qword_1EE139AA0);
    }
    sub_18EC1B5B4((uint64_t)v50);
    swift_bridgeObjectRelease();
    a1 = (_QWORD *)v10;
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v13 >= v54)
    goto LABEL_42;
  v14 = *(_QWORD *)(v42 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_24;
  v9 = v13 + 1;
  if (v13 + 1 >= v54)
    goto LABEL_42;
  v14 = *(_QWORD *)(v42 + 8 * v9);
  if (v14)
    goto LABEL_24;
  v9 = v13 + 2;
  if (v13 + 2 >= v54)
    goto LABEL_42;
  v14 = *(_QWORD *)(v42 + 8 * v9);
  if (v14)
    goto LABEL_24;
  v9 = v13 + 3;
  if (v13 + 3 >= v54)
    goto LABEL_42;
  v14 = *(_QWORD *)(v42 + 8 * v9);
  if (v14)
  {
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_25;
  }
  v15 = v13 + 4;
  if (v15 >= v54)
  {
LABEL_42:
    swift_release();
    return (uint64_t)a1;
  }
  v14 = *(_QWORD *)(v42 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v54)
      goto LABEL_42;
    v14 = *(_QWORD *)(v42 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_18EC67A64();
  __break(1u);
  return result;
}

unint64_t sub_18EC450DC()
{
  unint64_t result;

  result = qword_1EE13B190;
  if (!qword_1EE13B190)
  {
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE13B190);
  }
  return result;
}

uint64_t sub_18EC45120()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18EC45144(uint64_t a1)
{
  return sub_18EC42764(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_18EC4517C(uint64_t a1, uint64_t a2)
{
  _BYTE v3[40];

  sub_18EC1B578(a2, (uint64_t)v3);
  return sub_18EC42930((uint64_t)v3);
}

uint64_t sub_18EC451B4(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC449B8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_18EC451BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18EC44B30(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_18EC451C4(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC44740(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_18EC451CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18EC44858(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_18EC451D4(uint64_t a1)
{
  return sub_18EC44658(a1);
}

uint64_t sub_18EC451DC()
{
  _BYTE v1[40];

  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

float sub_18EC45228(uint64_t a1)
{
  return sub_18EC44510(a1);
}

uint64_t sub_18EC45230()
{
  _BYTE v1[40];

  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

double sub_18EC4527C(uint64_t a1)
{
  return sub_18EC443C8(a1);
}

uint64_t sub_18EC45284()
{
  _BYTE v1[40];

  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

double sub_18EC452D0(uint64_t a1)
{
  return sub_18EC442E0(a1);
}

uint64_t sub_18EC452D8()
{
  return sub_18EC44378();
}

uint64_t sub_18EC452E0(uint64_t a1)
{
  return sub_18EC4424C(a1);
}

uint64_t sub_18EC45300()
{
  return sub_18EC453DC();
}

uint64_t sub_18EC45314(uint64_t a1)
{
  return sub_18EC4424C(a1);
}

uint64_t sub_18EC45334()
{
  return sub_18EC453DC();
}

uint64_t sub_18EC45348(uint64_t a1)
{
  return sub_18EC44164(a1);
}

uint64_t sub_18EC45350()
{
  _BYTE v1[40];

  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

uint64_t sub_18EC4539C(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC43FF4(a1, *(_QWORD *)(v1 + 16), &qword_1EE13B1A8);
}

uint64_t sub_18EC453BC(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC43FF4(a1, *(_QWORD *)(v1 + 16), &qword_1EE13B1A0);
}

uint64_t sub_18EC453DC()
{
  _BYTE v1[40];

  sub_18EC675E4();
  return sub_18EC42930((uint64_t)v1);
}

uint64_t sub_18EC45420(uint64_t a1)
{
  return sub_18EC43DE8(a1);
}

uint64_t sub_18EC45428()
{
  return sub_18EC43F28();
}

unint64_t sub_18EC45430()
{
  unint64_t result;

  result = qword_1EE13B1D0;
  if (!qword_1EE13B1D0)
  {
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEF060], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EE13B1D0);
  }
  return result;
}

uint64_t sub_18EC45474(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 40))(a2, a1);
  return a2;
}

unint64_t sub_18EC454B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE13B1F0[0];
  if (!qword_1EE13B1F0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE139AA0);
    v2 = MEMORY[0x1E0DEC1A0];
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, qword_1EE13B1F0);
  }
  return result;
}

uint64_t sub_18EC45638@<X0>(uint64_t a1@<X8>)
{
  return AXSetting.key.getter(a1);
}

uint64_t AXSetting.key.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_18EC1B8B8((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70), a1);
}

uint64_t sub_18EC4568C@<X0>(uint64_t a1@<X8>)
{
  return AXSetting.store.getter(a1);
}

uint64_t AXSetting.store.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_18EC1B8B8((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80), a1);
}

uint64_t sub_18EC456E0()
{
  return sub_18EC45708();
}

id sub_18EC45700()
{
  void *v0;

  return v0;
}

uint64_t sub_18EC45708()
{
  _QWORD *v0;

  return sub_18EC4695C((uint64_t)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68));
}

uint64_t sub_18EC4572C(uint64_t a1)
{
  return sub_18EC45F1C(a1, (void (*)(void))sub_18EC46B84);
}

void (*sub_18EC45738(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_18EC45814((uint64_t)v7, (uint64_t)v7);
  return sub_18EC457C8;
}

void sub_18EC457C8(uint64_t a1, char a2)
{
  sub_18EC46004(a1, a2, (void (*)(void *))sub_18EC4695C);
}

uint64_t sub_18EC457D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18EC45814(a1, a2);
}

uint64_t sub_18EC457F4(uint64_t a1)
{
  return sub_18EC4695C(a1);
}

uint64_t sub_18EC45814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *KeyPath;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;

  v3 = v2;
  v25 = a2;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2;
  v6 = *(_QWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v22 - v8;
  v23 = sub_18EC67524();
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v22 - v10;
  v26 = v6;
  v24 = *(_OWORD *)(v5 + 88);
  v27 = v24;
  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_18EC465E4(KeyPath);
  swift_release();
  sub_18EC461FC();
  v13 = &v3[*(_QWORD *)((*v4 & *(_QWORD *)v3) + 0x80)];
  v14 = *((_QWORD *)v13 + 3);
  v15 = *((_QWORD *)v13 + 4);
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t))(v15 + 8))(&v28, &v3[*(_QWORD *)((*v4 & *(_QWORD *)v3) + 0x70)], v14, v15);
  if (*((_QWORD *)&v29 + 1))
  {
    v31[0] = v28;
    v31[1] = v29;
    v32 = v30;
    type metadata accessor for AXMigratingDecoder();
    v16 = (_QWORD *)swift_allocObject();
    v17 = MEMORY[0x1E0DEE9D8];
    v16[2] = MEMORY[0x1E0DEE9D8];
    v16[3] = sub_18EC585F0(v17);
    type metadata accessor for AXDataHolder();
    v28 = 0u;
    v29 = 0u;
    v30 = 0;
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 32) = 0u;
    *(_QWORD *)(v18 + 48) = 0;
    *(_OWORD *)(v18 + 16) = 0u;
    swift_beginAccess();
    sub_18EC1B9D8((uint64_t)&v28, v18 + 16);
    swift_endAccess();
    v16[4] = v18;
    sub_18EC53B48(v6, (uint64_t)v31, v6);
    sub_18EC1B5B4((uint64_t)v31);
    swift_release();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25, v11, v6);
  }
  else
  {
    v19 = sub_18EC1B4F4((uint64_t)&v28);
    v20 = *(void (**)(uint64_t))&v3[*(_QWORD *)((*v4 & *(_QWORD *)v3) + 0x78)];
    if (v20)
    {
      v20(v19);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25, v9, v6);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 16))(v25, &v3[*(_QWORD *)((*v4 & *(_QWORD *)v3) + 0x68)], v6);
    }
  }
}

uint64_t sub_18EC45B2C(uint64_t a1)
{
  return sub_18EC45F1C(a1, (void (*)(void))sub_18EC4695C);
}

uint64_t sub_18EC45B38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = *(_QWORD *)(v1 + 80);
  v4 = v0;
  axObservationTrackingStream<A>(_:)((uint64_t)sub_18EC46C0C, v2, v3);
  return swift_release();
}

uint64_t sub_18EC45BB0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88);
  swift_beginAccess();
  v4 = sub_18EC67524();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_18EC45C30(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88);
  swift_beginAccess();
  v4 = sub_18EC67524();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_18EC45CB8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *KeyPath;

  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_18EC465E4(KeyPath);
  swift_release();
  return sub_18EC45BB0(a1);
}

uint64_t sub_18EC45D30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = sub_18EC67524();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - v4, a2);
  return sub_18EC45C30((uint64_t)v5);
}

uint64_t sub_18EC45DCC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v15;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v4 = sub_18EC67524();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  sub_18EC461FC();
  sub_18EC45CB8((uint64_t)v10);
  v11 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v3) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v10, v3);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v13 = v12(v10, v4);
  sub_18EC45814(v13, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v3);
  sub_18EC468CC();
  return v12(v8, v4);
}

uint64_t sub_18EC45F10(uint64_t a1)
{
  return sub_18EC45F1C(a1, (void (*)(void))sub_18EC46C2C);
}

uint64_t sub_18EC45F1C(uint64_t a1, void (*a2)(void))
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *MEMORY[0x1E0DEEDD8] & *v2;
  a2();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a1);
}

void (*sub_18EC45F68(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_18EC45DCC((uint64_t)v7);
  return sub_18EC45FF8;
}

void sub_18EC45FF8(uint64_t a1, char a2)
{
  sub_18EC46004(a1, a2, (void (*)(void *))sub_18EC46C2C);
}

void sub_18EC46004(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);

  v4 = *(void **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v6, v7);
    a3(v5);
    v9 = *(void (**)(void *, uint64_t))(v8 + 8);
    v9(v5, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 32));
    v9 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v9(v6, v7);
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_18EC460A8()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90));
}

uint64_t sub_18EC460C8(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90)) = result;
  return result;
}

uint64_t sub_18EC460E8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *KeyPath;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_18EC465E4(KeyPath);
  swift_release();
  return *((unsigned __int8 *)v0 + *(_QWORD *)((*v1 & *v0) + 0x90));
}

uint64_t sub_18EC46168()
{
  _QWORD *KeyPath;

  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_18EC46664(KeyPath);
  return swift_release();
}

uint64_t sub_18EC461FC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, void (*)(), uint64_t, uint64_t, uint64_t);

  v1 = *v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8];
  result = sub_18EC460E8();
  if ((result & 1) == 0)
  {
    v5 = v3 & v1;
    sub_18EC46168();
    v6 = (uint64_t *)((char *)v0 + *(_QWORD *)((*v2 & *v0) + 0x80));
    v7 = v6[3];
    v8 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v9 = (char *)v0 + *(_QWORD *)((*v2 & *v0) + 0x70);
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = *(_OWORD *)(v5 + 80);
    *(_QWORD *)(v11 + 32) = *(_QWORD *)(v5 + 96);
    *(_QWORD *)(v11 + 40) = v10;
    v12 = *(void (**)(char *, void (*)(), uint64_t, uint64_t, uint64_t))(v8 + 24);
    swift_retain();
    v12(v9, sub_18EC47408, v11, v7, v8);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_18EC46324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x193FFA69C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_18EC46374();

  }
}

uint64_t sub_18EC46374()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[7];
  _QWORD *v13;

  v1 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v2 = v1[10];
  v3 = sub_18EC67524();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  sub_18EC45814(v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v7, 0, 1, v2);
  sub_18EC468CC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v8 = v1[11];
  v9 = v1[12];
  v12[4] = v2;
  v12[5] = v8;
  v12[6] = v9;
  v13 = v0;
  swift_getKeyPath();
  v10 = type metadata accessor for AXSetting(255, v2, v8, v9);
  MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSetting<A>, v10);
  sub_18EC670B0();
  swift_release();
  v13 = v0;
  v12[0] = v2;
  v12[1] = v8;
  v12[2] = v9;
  swift_getKeyPath();
  sub_18EC670A4();
  return swift_release();
}

id AXSetting.__allocating_init(wrappedValue:_:initializer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  id v11;

  v5 = v4;
  v10 = objc_allocWithZone(v5);
  v11 = sub_18EC46D04(a1, a2, a3, a4);
  sub_18EC1CDA0(a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v5 + 10) - 8) + 8))(a1);
  return v11;
}

id AXSetting.init(wrappedValue:_:initializer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  id v8;

  v7 = *MEMORY[0x1E0DEEDD8] & *v4;
  v8 = sub_18EC46D04(a1, a2, a3, a4);
  sub_18EC1CDA0(a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a1);
  return v8;
}

uint64_t sub_18EC465E4(_QWORD *a1)
{
  MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSetting<A>, *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]));
  return sub_18EC67098();
}

uint64_t sub_18EC46664(_QWORD *a1)
{
  MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSetting<A>, *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]));
  return sub_18EC6708C();
}

id AXSetting.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AXSetting.init()()
{
  sub_18EC46F44();
}

void sub_18EC4675C()
{
  sub_18EC46F44();
}

id AXSetting.__deallocating_deinit()
{
  _QWORD *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for AXSetting(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60));
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_18EC467CC(char *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50) - 8)
                                         + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x68)], *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x70)]);
  sub_18EC1CDA0(*(_QWORD *)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x78)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x80)]);
  v3 = &a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x88)];
  v4 = sub_18EC67524();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = &a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x98)];
  v6 = sub_18EC670C8();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_18EC468CC()
{
  _QWORD *KeyPath;

  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_18EC46664(KeyPath);
  return swift_release();
}

uint64_t sub_18EC4695C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v16[0] = a1;
  v3 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = sub_18EC67524();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - v6;
  sub_18EC1B8B8((uint64_t)&v1[*(_QWORD *)(v3 + 128)], (uint64_t)v21);
  v8 = v22;
  v9 = v23;
  v16[1] = __swift_project_boxed_opaque_existential_1(v21, v22);
  type metadata accessor for AXMigratingEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DEE9D8];
  v10[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v19, 0, sizeof(v19));
  v20 = 0;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 48) = 0;
  *(_OWORD *)(v12 + 16) = 0u;
  swift_beginAccess();
  v13 = v16[0];
  sub_18EC1B9D8((uint64_t)v19, v12 + 16);
  swift_endAccess();
  v10[4] = v12;
  v10[2] = v11;
  sub_18EC58CE4(v4, (uint64_t)v19);
  swift_release();
  (*(void (**)(_OWORD *, char *, uint64_t, uint64_t))(v9 + 16))(v19, &v2[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2) + 0x70)], v8, v9);
  sub_18EC1B4F4((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v14 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v13, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v4);
  sub_18EC468CC();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v18);
}

uint64_t sub_18EC46B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18EC45814(a1, a2);
}

uint64_t sub_18EC46BA8(uint64_t a1)
{
  return sub_18EC4695C(a1);
}

uint64_t sub_18EC46BC8()
{
  return 24;
}

__n128 sub_18EC46BD4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18EC46BE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18EC46C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18EC45814(a1, a2);
}

uint64_t sub_18EC46C2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v4 = sub_18EC67524();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  sub_18EC4695C(a1);
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_18EC468CC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_18EC46D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  objc_class *v20;
  id v21;
  uint64_t v23;
  objc_super v24;
  __int128 v25[2];

  v5 = v4;
  v23 = a1;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v5);
  v11 = v10[10];
  v12 = sub_18EC67524();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v23 - v13, 1, 1, v11);
  swift_getObjectType();
  v16 = (char *)v5 + *(_QWORD *)((*v9 & *v5) + 0x88);
  v17 = sub_18EC67524();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, v14, v17);
  *((_BYTE *)v5 + *(_QWORD *)((*v9 & *v5) + 0x90)) = 0;
  v18 = v5;
  sub_18EC670BC();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(&v18[*(_QWORD *)((*v9 & *(_QWORD *)v18) + 0x68)], v23, v11);
  v19 = (uint64_t *)&v18[*(_QWORD *)((*v9 & *(_QWORD *)v18) + 0x78)];
  *v19 = a3;
  v19[1] = a4;
  sub_18EC1B8B8(a2, (uint64_t)&v18[*(_QWORD *)((*v9 & *(_QWORD *)v18) + 0x70)]);
  sub_18EC24358(a3);
  if (qword_1EE13A6F8 != -1)
    swift_once();
  swift_retain();
  sub_18EC48608((uint64_t)v25);
  swift_release();
  sub_18EC1B5E8(v25, (uint64_t)&v18[*(_QWORD *)((*v9 & *(_QWORD *)v18) + 0x80)]);

  v20 = (objc_class *)type metadata accessor for AXSetting(0, v11, v10[11], v10[12]);
  v24.receiver = v18;
  v24.super_class = v20;
  v21 = objc_msgSendSuper2(&v24, sel_init);
  sub_18EC42B64();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v21;
}

void sub_18EC46F44()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for AXSetting(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXSetting);
}

uint64_t sub_18EC46F7C()
{
  return sub_18EC45728();
}

uint64_t sub_18EC46F9C()
{
  return sub_18EC46B84();
}

uint64_t sub_18EC46FBC()
{
  return 24;
}

__n128 sub_18EC46FC8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18EC46FDC()
{
  return 24;
}

__n128 sub_18EC46FE8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18EC46FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_18EC45DCC(a1);
}

uint64_t sub_18EC4701C(uint64_t a1)
{
  return sub_18EC46C2C(a1);
}

uint64_t sub_18EC4703C()
{
  return 24;
}

__n128 sub_18EC47048(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of AXSettingProtocol.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXSettingProtocol.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AXSettingProtocol.resetToDefaultValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_18EC47074()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_18EC67524();
    if (v2 <= 0x3F)
    {
      v0 = sub_18EC670C8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return v0;
}

uint64_t method lookup function for AXSetting()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXSetting.projectedValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AXSetting.resetToDefaultValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AXSetting.value.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AXSetting.value.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AXSetting.value.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AXSetting.stream.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of AXSetting.__allocating_init(wrappedValue:_:initializer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t sub_18EC472B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18EC460E8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_18EC472DC()
{
  return sub_18EC46168();
}

uint64_t sub_18EC47300()
{
  return 24;
}

__n128 sub_18EC4730C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_18EC47320()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x90)) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_18EC47348@<X0>(uint64_t a1@<X8>)
{
  return sub_18EC45CB8(a1);
}

uint64_t sub_18EC47368()
{
  return sub_18EC468CC();
}

uint64_t sub_18EC47388()
{
  return 24;
}

__n128 sub_18EC47394(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18EC473A8()
{
  uint64_t v0;

  return sub_18EC45D30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18EC473C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18EC473E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_18EC47408()
{
  uint64_t v0;

  sub_18EC46324(*(_QWORD *)(v0 + 40));
}

uint64_t sub_18EC47414(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_18EC3FA60((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_18EC627E4(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18EC1E58C(a1, &qword_1EE139AC8);
    sub_18EC48788(a2, v7);
    return sub_18EC1E58C((uint64_t)v7, &qword_1EE139AC8);
  }
}

uint64_t sub_18EC474C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t String.axUppercasedFirstLetter.getter(uint64_t a1, unint64_t a2)
{
  return sub_18EC484F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEBA10]);
}

uint64_t static AXPreferenceContext.store.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE13A6F8 != -1)
    swift_once();
  swift_retain();
  sub_18EC48608(a1);
  return swift_release();
}

void sub_18EC47580(_QWORD *a1@<X8>)
{
  AXSettingsKey.traits.getter(a1);
}

void AXSettingsKey.traits.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t AXSettingsTrait.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AXSettingsTrait.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static AXSettingsTrait.watchSynced.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static AXSettingsTrait.excludeFromBuddy.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

_QWORD *sub_18EC475C4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_18EC475D0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_18EC475D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_18EC475EC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_18EC47600@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_18EC47614(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_18EC47644@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_18EC47670@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_18EC47694(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_18EC476A8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_18EC476BC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_18EC476D0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_18EC476E4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_18EC476F8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_18EC4770C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_18EC47720()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_18EC47730()
{
  return sub_18EC67578();
}

_QWORD *sub_18EC47748(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t AXConcreteKey.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AXConcreteKey.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AXConcreteKey.key.modify())()
{
  return nullsub_1;
}

uint64_t AXConcreteKey.domain.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AXConcreteKey.domain.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*AXConcreteKey.domain.modify())()
{
  return nullsub_1;
}

uint64_t AXConcreteKey.objcMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_18EC48984(v2, v3, v4, v5, v6);
}

__n128 AXConcreteKey.objcMode.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_18EC489C8(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
  result = v6;
  *(__n128 *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_BYTE *)(v1 + 56) = v4;
  return result;
}

uint64_t (*AXConcreteKey.objcMode.modify())()
{
  return nullsub_1;
}

void AXConcreteKey.traits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
}

_QWORD *AXConcreteKey.traits.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = *result;
  return result;
}

uint64_t (*AXConcreteKey.traits.modify())()
{
  return nullsub_1;
}

__n128 AXConcreteKey.init(key:domain:objcMode:traits:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result;
  __int128 v7;
  char v8;
  uint64_t v9;

  result = *(__n128 *)a4;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)a4;
  v8 = *(_BYTE *)(a4 + 32);
  v9 = *a5;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_OWORD *)(a6 + 40) = v7;
  *(_BYTE *)(a6 + 56) = v8;
  *(_QWORD *)(a6 + 64) = v9;
  return result;
}

uint64_t sub_18EC478C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18EC478F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_18EC478F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_18EC48984(v2, v3, v4, v5, v6);
}

void sub_18EC47914(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
}

uint64_t AXSettingsGroup.forwadingTargets()(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;

  v4[2] = &v5;
  v5 = MEMORY[0x1E0DEE9E0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B280);
  sub_18EC47C58((void (*)(char *))sub_18EC48A14, (uint64_t)v4, 1, a1, v2);
  return v5;
}

uint64_t sub_18EC47980(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  char v38;
  uint64_t v39[3];
  uint64_t v40;
  uint64_t v41;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v39, v2, v3);
  v4 = v40;
  v5 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 24))(v36, v4, v5);
  v6 = v36[0];
  v7 = v36[1];
  if (v38)
  {
    if (v38 != 1)
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    v9 = v36[2];
    v8 = v37;
    if (v37)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = 7628147;
      v35 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_18EC48860(1);
      v28 = sub_18EC67530();
      v29 = v9;
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13 = sub_18EC488E8(1uLL, v6, v7);
      v15 = v14;
      v17 = v16;
      v19 = v18;
      swift_bridgeObjectRelease();
      v32 = v28;
      v33 = v12;
      v30[0] = v13;
      v30[1] = v15;
      v30[2] = v17;
      v31 = v19;
      sub_18EC450DC();
      swift_bridgeObjectRetain();
      sub_18EC67230();
      v9 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18EC6723C();
      swift_bridgeObjectRelease();
      sub_18EC6723C();
    }
    swift_bridgeObjectRetain();
    v20 = sub_18EC67074();
    v21 = a1[3];
    v22 = __swift_project_boxed_opaque_existential_1(a1, v21);
    v31 = v21;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v30);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_0, v22, v21);
    sub_18EC47414((uint64_t)v30, v20);
    sub_18EC489C8(v6, v7, v9, v8, 1);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v24 = sub_18EC67074();
  v25 = a1[3];
  v26 = __swift_project_boxed_opaque_existential_1(a1, v25);
  v40 = v25;
  v27 = __swift_allocate_boxed_opaque_existential_0(v39);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v27, v26, v25);
  return sub_18EC47414((uint64_t)v39, v24);
}

uint64_t AXSettingsGroup.enumerateSettings(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B280);
  return sub_18EC47C58(a1, a2, 1, a3, v6);
}

uint64_t sub_18EC47C58(void (*a1)(char *), uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  __int128 v34[2];
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[32];
  _QWORD v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  v32 = a3;
  v30 = a2;
  v29 = a1;
  v28 = sub_18EC67524();
  v27 = *(_QWORD *)(v28 - 8);
  v8 = MEMORY[0x1E0C80A78](v28);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_18EC67B00();
  v25 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a4;
  v16 = __swift_allocate_boxed_opaque_existential_0(&v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v16, v5, a4);
  sub_18EC67AE8();
  v24 = v15;
  sub_18EC67AF4();
  v17 = sub_18EC676D4();
  swift_release();
  swift_retain();
  v33 = v17;
  sub_18EC67740();
  if (v47)
  {
    v31 = &v45;
    do
    {
      v19 = v43;
      v18 = v44;
      v41[0] = v43;
      v41[1] = v44;
      sub_18EC3FA60(v31, &v42);
      v38 = v19;
      v39 = v18;
      sub_18EC1B600((uint64_t)&v42, (uint64_t)v40);
      swift_bridgeObjectRetain();
      v20 = swift_dynamicCast();
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      if ((v20 & 1) != 0)
      {
        v21(v10, 0, 1, a5);
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a5);
        v29(v13);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a5);
      }
      else
      {
        v21(v10, 1, 1, a5);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
      }
      if ((v32 & 1) != 0)
      {
        v38 = v19;
        v39 = v18;
        sub_18EC1B600((uint64_t)&v42, (uint64_t)v40);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B2B0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_18EC1B5E8(v34, (uint64_t)v36);
          v22 = v37;
          __swift_project_boxed_opaque_existential_1(v36, v37);
          sub_18EC47C58(v29, v30, 1, v22, a5);
          sub_18EC1E58C((uint64_t)v41, &qword_1EE13B2A8);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        }
        else
        {
          v35 = 0;
          memset(v34, 0, sizeof(v34));
          sub_18EC1E58C((uint64_t)v41, &qword_1EE13B2A8);
          sub_18EC1E58C((uint64_t)v34, &qword_1EE13B2B8);
        }
      }
      else
      {
        sub_18EC1E58C((uint64_t)v41, &qword_1EE13B2A8);
        swift_bridgeObjectRelease();
      }
      sub_18EC67740();
    }
    while (v47);
  }
  swift_release_n();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v26);
}

uint64_t AXSettingsGroup.allMembersOfType<A>(_:recursive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v9[7];
  uint64_t v10;

  v10 = sub_18EC670EC();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = &v10;
  sub_18EC47C58((void (*)(char *))sub_18EC48A1C, (uint64_t)v9, 1, a3, a4);
  return v10;
}

uint64_t sub_18EC480A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_18EC67338();
  return sub_18EC67320();
}

Swift::Void __swiftcall AXSettingsGroup.resetAllSettings()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B280);
  sub_18EC47C58((void (*)(char *))sub_18EC48164, 0, 1, v1, v2);
}

uint64_t sub_18EC48164(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_18EC481A4()
{
  uint64_t v0;
  uint64_t result;
  __int128 v2;
  Class v3;
  _UNKNOWN **v4;

  v3 = (Class)type metadata accessor for AXCoreSettingsStore();
  v4 = &protocol witness table for AXCoreSettingsStore;
  *(_QWORD *)&v2 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B2D0);
  v0 = swift_allocObject();
  sub_18EC66EF4();
  result = sub_18EC1B5E8(&v2, v0 + 16);
  qword_1EE13B278 = v0;
  return result;
}

uint64_t static AXPreferenceContext.$store.getter()
{
  if (qword_1EE13A6F8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AXCDomain.suiteName.getter(uint64_t a1)
{
  void **v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  switch(a1)
  {
    case 1:
      v1 = (void **)MEMORY[0x1E0DDDF48];
      v2 = (void *)*MEMORY[0x1E0DDDF48];
      if (!*MEMORY[0x1E0DDDF48])
      {
        __break(1u);
        goto LABEL_39;
      }
      v3 = (id)AXCPCopySharedResourcesPreferencesDomainForDomain();

      if (v3)
        goto LABEL_28;
      v4 = *v1;
      if (*v1)
      {
LABEL_27:
        v3 = v4;
        goto LABEL_28;
      }
      __break(1u);
LABEL_6:
      v5 = (void *)*MEMORY[0x1E0DDDF50];
      if (*MEMORY[0x1E0DDDF50])
        goto LABEL_36;
      __break(1u);
LABEL_8:
      v5 = (void *)*MEMORY[0x1E0DDE288];
      if (*MEMORY[0x1E0DDE288])
        goto LABEL_36;
      __break(1u);
LABEL_10:
      v5 = (void *)*MEMORY[0x1E0DDE0E0];
      if (*MEMORY[0x1E0DDE0E0])
        goto LABEL_36;
      __break(1u);
LABEL_12:
      v5 = (void *)*MEMORY[0x1E0DDE290];
      if (*MEMORY[0x1E0DDE290])
        goto LABEL_36;
      __break(1u);
LABEL_14:
      v5 = (void *)*MEMORY[0x1E0DDE2F0];
      if (*MEMORY[0x1E0DDE2F0])
        goto LABEL_36;
      __break(1u);
LABEL_16:
      v5 = (void *)*MEMORY[0x1E0DDE2F8];
      if (*MEMORY[0x1E0DDE2F8])
        goto LABEL_36;
      __break(1u);
LABEL_18:
      v5 = (void *)*MEMORY[0x1E0DDE328];
      if (*MEMORY[0x1E0DDE328])
        goto LABEL_36;
      __break(1u);
LABEL_20:
      v5 = (void *)*MEMORY[0x1E0DDE000];
      if (*MEMORY[0x1E0DDE000])
        goto LABEL_36;
      __break(1u);
LABEL_22:
      v5 = (void *)*MEMORY[0x1E0DDE248];
      if (*MEMORY[0x1E0DDE248])
      {
LABEL_36:
        v7 = v5;
        goto LABEL_37;
      }
      __break(1u);
LABEL_24:
      v6 = (void *)*MEMORY[0x1E0DDE1E8];
      if (!*MEMORY[0x1E0DDE1E8])
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      v3 = (id)AXCPCopySharedResourcesPreferencesDomainForDomain();

      if (!v3)
      {
        v4 = (void *)*MEMORY[0x1E0DDDF48];
        if (*MEMORY[0x1E0DDDF48])
          goto LABEL_27;
LABEL_41:
        __break(1u);
LABEL_42:
        sub_18EC67710();
        __break(1u);
        JUMPOUT(0x18EC484B0);
      }
LABEL_28:
      v7 = v3;
LABEL_37:
      v8 = sub_18EC671A0();

      return v8;
    case 2:
      goto LABEL_16;
    case 3:
      goto LABEL_18;
    case 4:
      goto LABEL_20;
    case 5:
      goto LABEL_10;
    case 6:
      goto LABEL_24;
    case 7:
      v5 = (void *)*MEMORY[0x1E0DDE110];
      if (*MEMORY[0x1E0DDE110])
        goto LABEL_36;
      __break(1u);
LABEL_31:
      v5 = (void *)*MEMORY[0x1E0DDE2B0];
      if (*MEMORY[0x1E0DDE2B0])
        goto LABEL_36;
      __break(1u);
LABEL_33:
      v5 = (void *)*MEMORY[0x1E0DDE188];
      if (*MEMORY[0x1E0DDE188])
        goto LABEL_36;
      __break(1u);
LABEL_35:
      v5 = (void *)*MEMORY[0x1E0DDE0C8];
      if (*MEMORY[0x1E0DDE0C8])
        goto LABEL_36;
      goto LABEL_40;
    case 8:
      goto LABEL_22;
    case 9:
      goto LABEL_31;
    case 10:
      goto LABEL_12;
    case 11:
      goto LABEL_33;
    case 12:
      goto LABEL_8;
    case 13:
      goto LABEL_14;
    case 14:
      goto LABEL_35;
    case 15:
      goto LABEL_6;
    default:
      goto LABEL_42;
  }
}

uint64_t String.axLowercasedFirstLetter.getter(uint64_t a1, unint64_t a2)
{
  return sub_18EC484F8(a1, a2, MEMORY[0x1E0DEBA00]);
}

uint64_t sub_18EC484F8(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v6 = sub_18EC48860(1);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = a3(v6, v8, v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18EC488E8(1uLL, a1, a2);
  swift_bridgeObjectRelease();
  sub_18EC450DC();
  swift_bridgeObjectRetain();
  sub_18EC67230();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_18EC48608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  __int128 v9[2];
  uint64_t v10;
  _OWORD v11[2];

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  v5 = objc_msgSend(v4, sel_threadDictionary);

  *(_QWORD *)&v9[0] = sub_18EC66EC4();
  *((_QWORD *)&v9[0] + 1) = v6;
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_18EC67A4C(), v9[0]);
  swift_unknownObjectRelease();

  if (v7)
  {
    sub_18EC6756C();
    swift_unknownObjectRelease();
    sub_18EC3FA60(v9, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B2C0);
  if (swift_dynamicCast())
  {
    sub_18EC1B5E8(v9, a1);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_18EC1B8B8(v2 + 16, a1);
    sub_18EC1E58C((uint64_t)v9, &qword_1EE13B2C8);
  }
  return swift_bridgeObjectRelease();
}

double sub_18EC48788@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18EC1FBF4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18EC4D404();
      v9 = v11;
    }
    sub_18EC3FA60((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_18EC4CCA4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_18EC48860(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_18EC67224();
    return sub_18EC67290();
  }
  return result;
}

unint64_t sub_18EC488E8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_18EC67224();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_18EC67290();
  }
  __break(1u);
  return result;
}

uint64_t sub_18EC48984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC489C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC48A14(_QWORD *a1)
{
  return sub_18EC47980(a1);
}

uint64_t sub_18EC48A1C(uint64_t a1)
{
  return sub_18EC480A0(a1);
}

unint64_t sub_18EC48A2C()
{
  unint64_t result;

  result = qword_1EE13B288;
  if (!qword_1EE13B288)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSettingsTrait, &type metadata for AXSettingsTrait);
    atomic_store(result, (unint64_t *)&qword_1EE13B288);
  }
  return result;
}

unint64_t sub_18EC48A74()
{
  unint64_t result;

  result = qword_1EE13B290;
  if (!qword_1EE13B290)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSettingsTrait, &type metadata for AXSettingsTrait);
    atomic_store(result, (unint64_t *)&qword_1EE13B290);
  }
  return result;
}

unint64_t sub_18EC48ABC()
{
  unint64_t result;

  result = qword_1EE13B298;
  if (!qword_1EE13B298)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSettingsTrait, &type metadata for AXSettingsTrait);
    atomic_store(result, (unint64_t *)&qword_1EE13B298);
  }
  return result;
}

unint64_t sub_18EC48B04()
{
  unint64_t result;

  result = qword_1EE13B2A0;
  if (!qword_1EE13B2A0)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXSettingsTrait, &type metadata for AXSettingsTrait);
    atomic_store(result, (unint64_t *)&qword_1EE13B2A0);
  }
  return result;
}

uint64_t dispatch thunk of AXSettingsKey.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXSettingsKey.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AXSettingsKey.objcMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AXSettingsKey.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for AXSettingsTrait()
{
  return &type metadata for AXSettingsTrait;
}

uint64_t destroy for AXSettingsObjCMode(uint64_t a1)
{
  return sub_18EC489C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_18EC48984(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_18EC48984(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_18EC489C8(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_18EC489C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXSettingsObjCMode(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AXSettingsObjCMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_18EC48D48(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_18EC48D60(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AXSettingsObjCMode()
{
  return &type metadata for AXSettingsObjCMode;
}

uint64_t destroy for AXConcreteKey(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_18EC489C8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_18EC48984(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  sub_18EC48984(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v8;
  sub_18EC489C8(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 48) = v5;
  v12 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v6;
  sub_18EC489C8(v7, v8, v9, v10, v12);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXConcreteKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXConcreteKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXConcreteKey()
{
  return &type metadata for AXConcreteKey;
}

ValueMetadata *type metadata accessor for AXPreferenceContext()
{
  return &type metadata for AXPreferenceContext;
}

uint64_t dispatch thunk of AXSettingsStore.value(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AXSettingsStore.set(value:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AXSettingsStore.observe(key:onChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

id AXCoreSettingsStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_18EC49070()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_18EC49094()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_suiteLock) + 16);
  os_unfair_lock_lock(v1);
  sub_18EC4A248(&v5);
  v2 = v5;
  os_unfair_lock_unlock(v1);
  v3 = *(id *)(v2 + 16);
  swift_release();
  return v3;
}

uint64_t sub_18EC49120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v17;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_cachedSuites);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_18EC1FB10(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_18EC6717C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (!v14)
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99EA0]), sel_init);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v11 = v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v7;
  *v7 = 0x8000000000000000;
  sub_18EC628FC((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
  *v7 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_8:
  type metadata accessor for AXCoreSettingsStore.SuiteSmuggler();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v11;
  *a4 = result;
  return result;
}

double sub_18EC492E4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  double result;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  AXCDomain.suiteName.getter(v6);
  v7 = sub_18EC49094();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_9;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v10 = (void *)sub_18EC6717C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v7, sel_valueForKey_, v10);

  if (v11)
  {
    sub_18EC6756C();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v13, 0, sizeof(v13));
  }
  sub_18EC4943C((uint64_t)v13, (uint64_t)v14);
  if (!v15)
  {
    sub_18EC1A590((uint64_t)v14);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_18EC4943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC49484(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  AXCDomain.suiteName.getter(v6);
  v7 = sub_18EC49094();
  result = swift_bridgeObjectRelease();
  if (v7)
  {
    sub_18EC4A1B0(a1, (uint64_t)&v16, &qword_1EE139AA0);
    if (v18)
    {
      v9 = sub_18EC6759C();
      sub_18EC1B5B4((uint64_t)&v16);
    }
    else
    {
      v9 = 0;
    }
    v10 = a2[3];
    v11 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    v12 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setObject_forKey_, v9, v12);
    swift_unknownObjectRelease();

    v16 = 0;
    v17 = 0xE000000000000000;
    sub_18EC67620();
    swift_bridgeObjectRelease();
    v16 = 0xD000000000000010;
    v17 = 0x800000018EC744C0;
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    sub_18EC6723C();
    swift_bridgeObjectRelease();
    v15 = sub_18EC671DC();
    swift_bridgeObjectRelease();
    notify_post((const char *)(v15 + 32));

    return swift_release();
  }
  return result;
}

uint64_t sub_18EC49634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  v2 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_key);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC496A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  v4 = sub_18EC66F00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_18EC496F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t (**v14)();
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __CFNotificationCenter *v21;
  __CFString *v22;
  __int128 v23[2];

  v4 = v3;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  AXCDomain.suiteName.getter(v10);
  v11 = sub_18EC49094();
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_18EC1B8B8((uint64_t)a1, (uint64_t)v23);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    type metadata accessor for AXCoreSettingsStore.Observation();
    v13 = (char *)swift_allocObject();
    swift_retain();
    sub_18EC66EF4();
    sub_18EC1B5E8(v23, (uint64_t)&v13[OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_key]);
    v14 = (uint64_t (**)())&v13[OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block];
    *v14 = sub_18EC49994;
    v14[1] = (uint64_t (*)())v12;
    v15 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observationLock)
                             + 16);
    os_unfair_lock_lock(v15);
    sub_18EC499F0(v4, (uint64_t)v13);
    os_unfair_lock_unlock(v15);
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    v18 = (void *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_addObserver_forKeyPath_options_context_, v4, v18, 3, v13);

    *(_QWORD *)&v23[0] = 0;
    *((_QWORD *)&v23[0] + 1) = 0xE000000000000000;
    sub_18EC67620();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v23[0] = 0xD000000000000010;
    *((_QWORD *)&v23[0] + 1) = 0x800000018EC744C0;
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    sub_18EC6723C();
    swift_bridgeObjectRelease();
    v21 = CFNotificationCenterGetDarwinNotifyCenter();
    v22 = (__CFString *)sub_18EC6717C();
    swift_bridgeObjectRelease();
    CFNotificationCenterAddObserver(v21, v13, (CFNotificationCallback)sub_18EC49AA4, v22, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    swift_release();
  }
}

uint64_t sub_18EC49970()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC49994()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for AXCoreSettingsStore.Observation()
{
  uint64_t result;

  result = qword_1EE13B3E8;
  if (!qword_1EE13B3E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18EC499F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v3 = a2 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v4;
  *v4 = 0x8000000000000000;
  sub_18EC62A58(a2, v3, isUniquelyReferenced_nonNull_native);
  *v4 = v7;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void *sub_18EC49AA4(void *result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  void (*v7)(uint64_t);
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  if (a2)
  {
    v7 = *(void (**)(uint64_t))(a2 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block);
    v8 = result;
    v9 = a3;
    v10 = a5;
    v11 = swift_retain();
    v7(v11);

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_18EC49B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations);
  result = swift_beginAccess();
  v7 = *v5;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_18EC1FC4C(a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_retain();
    }
    else
    {
      v10 = 0;
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  *a3 = v10;
  return result;
}

id AXCoreSettingsStore.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_cachedSuites;
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_18EC5878C(MEMORY[0x1E0DEE9D8]);
  v3 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_suiteLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA30);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(_QWORD *)&v2[v3] = v4;
  v5 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observationLock;
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations] = MEMORY[0x1E0DEE9E0];

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for AXCoreSettingsStore();
  return objc_msgSendSuper2(&v8, sel_init);
}

id AXCoreSettingsStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AXCoreSettingsStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_18EC49E4C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18EC492E4(a1, a2);
}

uint64_t sub_18EC49E6C(uint64_t a1, _QWORD *a2)
{
  return sub_18EC49484(a1, a2);
}

void sub_18EC49E8C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_18EC496F0(a1, a2, a3);
}

void sub_18EC49EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  id v17[2];
  _QWORD v18[4];

  v7 = sub_18EC66F00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_18EC4A1B0(a1, (uint64_t)v18, &qword_1EE139AC8);
    if (v18[3])
    {
      sub_18EC4A1F4();
      if (swift_dynamicCast())
      {

        if (a3)
        {
          v11 = a3 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
          v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
          swift_retain();
          v12(v10, v11, v7);
          v13 = swift_release();
          MEMORY[0x1E0C80A78](v13);
          v17[-2] = v3;
          v17[-1] = v10;
          v15 = v14 + 4;
          os_unfair_lock_lock(v14 + 4);
          sub_18EC4A230(v18);
          v16 = v18[0];
          os_unfair_lock_unlock(v15);
          if (v16)
          {
            (*(void (**)(void))(v16 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block))();
            swift_release();
          }
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        }
      }
    }
    else
    {
      sub_18EC1A590((uint64_t)v18);
    }
  }
}

uint64_t type metadata accessor for AXCoreSettingsStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for AXCoreSettingsStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXCoreSettingsStore.value(forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AXCoreSettingsStore.set(value:forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AXCoreSettingsStore.observe(key:onChange:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t type metadata accessor for AXCoreSettingsStore.SuiteSmuggler()
{
  return objc_opt_self();
}

uint64_t sub_18EC4A0F8()
{
  return type metadata accessor for AXCoreSettingsStore.Observation();
}

uint64_t sub_18EC4A100()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18EC66F00();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_18EC4A184()
{
  return sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_18EC4A1B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_18EC4A1F4()
{
  unint64_t result;

  result = qword_1EE13B480;
  if (!qword_1EE13B480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE13B480);
  }
  return result;
}

uint64_t sub_18EC4A230@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_18EC49B24(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_18EC4A248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_18EC49120(v1[2], v1[3], v1[4], a1);
}

void __swiftcall AudioEffectConfiguration._bridgeToObjectiveC()(AXAudioEffectConfiguration *__return_ptr retstr)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  id v25;
  double v26;
  id v27;
  id v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  char v44;
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  _QWORD *v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  char v87;
  void *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  id v104;

  v2 = objc_msgSend(objc_allocWithZone((Class)AXAudioEffectConfiguration), sel_init);
  v3 = type metadata accessor for AudioEffectConfiguration();
  objc_msgSend(v2, sel_setEnabled_, *(unsigned __int8 *)(v1 + *(int *)(v3 + 32)));
  v4 = MEMORY[0x1E0DEE9D8];
  sub_18EC58798(MEMORY[0x1E0DEE9D8]);
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v5 = MEMORY[0x1E0DEA968];
  v6 = MEMORY[0x1E0DEA978];
  v7 = (void *)sub_18EC67104();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setParameters_, v7);

  sub_18EC58798(v4);
  v8 = (void *)sub_18EC67104();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setProperties_, v8);

  v94 = v3;
  v95 = v1;
  v9 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  v96 = v9 + 64;
  v10 = 1 << *(_BYTE *)(v9 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v9 + 64);
  v98 = (unint64_t)(v10 + 63) >> 6;
  v100 = v9;
  swift_bridgeObjectRetain();
  v13 = 0;
  v104 = v2;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_23;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_78;
    if (v18 >= v98)
      break;
    v19 = *(_QWORD *)(v96 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v98)
        break;
      v19 = *(_QWORD *)(v96 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v98)
          break;
        v19 = *(_QWORD *)(v96 + 8 * v13);
        if (!v19)
        {
          v20 = v18 + 3;
          if (v20 >= v98)
            break;
          v19 = *(_QWORD *)(v96 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v13 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_82;
              if (v13 >= v98)
                goto LABEL_38;
              v19 = *(_QWORD *)(v96 + 8 * v13);
              ++v20;
              if (v19)
                goto LABEL_22;
            }
          }
          v13 = v20;
        }
      }
    }
LABEL_22:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_23:
    v21 = (uint64_t *)(*(_QWORD *)(v100 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(_DWORD *)(*(_QWORD *)(v100 + 56) + 4 * v17);
    v25 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    LODWORD(v26) = v24;
    v27 = objc_msgSend(v25, sel_initWithFloat_, v26);
    v28 = objc_msgSend(v2, sel_parameters);
    v29 = (_QWORD *)sub_18EC67110();

    if (v27)
    {
      v102 = v12;
      v30 = v13;
      v31 = v6;
      v32 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35 = sub_18EC1FB10(v22, v23);
      v36 = v29[2];
      v37 = (v34 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      v39 = v34;
      if (v29[3] >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_18EC4D800(&qword_1EE13B4F0);
      }
      else
      {
        sub_18EC4C1C0(v38, isUniquelyReferenced_nonNull_native, &qword_1EE13B4F0);
        v40 = sub_18EC1FB10(v22, v23);
        if ((v39 & 1) != (v41 & 1))
          goto LABEL_84;
        v35 = v40;
      }
      v5 = v32;
      v6 = v31;
      if ((v39 & 1) != 0)
      {
        v14 = v29[7];

        *(_QWORD *)(v14 + 8 * v35) = v27;
        v13 = v30;
      }
      else
      {
        v29[(v35 >> 6) + 8] |= 1 << v35;
        v46 = (uint64_t *)(v29[6] + 16 * v35);
        *v46 = v22;
        v46[1] = v23;
        *(_QWORD *)(v29[7] + 8 * v35) = v27;
        v47 = v29[2];
        v48 = __OFADD__(v47, 1);
        v49 = v47 + 1;
        if (v48)
          goto LABEL_80;
        v13 = v30;
        v29[2] = v49;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v102;
      v2 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      v42 = sub_18EC1FB10(v22, v23);
      v44 = v43;
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_18EC4D800(&qword_1EE13B4F0);
        swift_bridgeObjectRelease();
        v45 = *(void **)(v29[7] + 8 * v42);
        sub_18EC4CE5C(v42, (uint64_t)v29);

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v15 = (void *)sub_18EC67104();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setParameters_, v15);

  }
LABEL_38:
  swift_release();
  v50 = *(_QWORD *)(v95 + *(int *)(v94 + 28));
  v51 = *(_QWORD *)(v50 + 64);
  v97 = v50 + 64;
  v52 = 1 << *(_BYTE *)(v50 + 32);
  v53 = -1;
  if (v52 < 64)
    v53 = ~(-1 << v52);
  v54 = v53 & v51;
  v99 = (unint64_t)(v52 + 63) >> 6;
  v101 = *(_QWORD *)(v95 + *(int *)(v94 + 28));
  swift_bridgeObjectRetain();
  v55 = 0;
  v56 = MEMORY[0x1E0DEA968];
  v57 = MEMORY[0x1E0DEA978];
  while (1)
  {
    if (v54)
    {
      v60 = __clz(__rbit64(v54));
      v54 &= v54 - 1;
      v61 = v60 | (v55 << 6);
      goto LABEL_60;
    }
    v62 = v55 + 1;
    if (__OFADD__(v55, 1))
      goto LABEL_79;
    if (v62 >= v99)
    {
LABEL_75:
      swift_release();
      v92 = (void *)sub_18EC66ED0();
      objc_msgSend(v2, sel_setIdentifier_, v92);

      v93 = (void *)sub_18EC6717C();
      objc_msgSend(v2, sel_setEffectName_, v93);

      return;
    }
    v63 = *(_QWORD *)(v97 + 8 * v62);
    ++v55;
    if (!v63)
    {
      v55 = v62 + 1;
      if (v62 + 1 >= v99)
        goto LABEL_75;
      v63 = *(_QWORD *)(v97 + 8 * v55);
      if (!v63)
      {
        v55 = v62 + 2;
        if (v62 + 2 >= v99)
          goto LABEL_75;
        v63 = *(_QWORD *)(v97 + 8 * v55);
        if (!v63)
          break;
      }
    }
LABEL_59:
    v54 = (v63 - 1) & v63;
    v61 = __clz(__rbit64(v63)) + (v55 << 6);
LABEL_60:
    v65 = (uint64_t *)(*(_QWORD *)(v101 + 48) + 16 * v61);
    v66 = *v65;
    v67 = v65[1];
    v68 = *(unsigned int *)(*(_QWORD *)(v101 + 56) + 4 * v61);
    v69 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    v70 = objc_msgSend(v69, sel_initWithUnsignedInt_, v68);
    v71 = objc_msgSend(v2, sel_properties);
    v72 = (_QWORD *)sub_18EC67110();

    if (v70)
    {
      v103 = v54;
      v73 = v55;
      v74 = v57;
      v75 = v56;
      v76 = swift_isUniquelyReferenced_nonNull_native();
      v78 = sub_18EC1FB10(v66, v67);
      v79 = v72[2];
      v80 = (v77 & 1) == 0;
      v81 = v79 + v80;
      if (__OFADD__(v79, v80))
        goto LABEL_77;
      v82 = v77;
      if (v72[3] >= v81)
      {
        if ((v76 & 1) == 0)
          sub_18EC4D800(&qword_1EE13B4F0);
      }
      else
      {
        sub_18EC4C1C0(v81, v76, &qword_1EE13B4F0);
        v83 = sub_18EC1FB10(v66, v67);
        if ((v82 & 1) != (v84 & 1))
          goto LABEL_84;
        v78 = v83;
      }
      v56 = v75;
      v57 = v74;
      if ((v82 & 1) != 0)
      {
        v58 = v72[7];

        *(_QWORD *)(v58 + 8 * v78) = v70;
        v55 = v73;
      }
      else
      {
        v72[(v78 >> 6) + 8] |= 1 << v78;
        v89 = (uint64_t *)(v72[6] + 16 * v78);
        *v89 = v66;
        v89[1] = v67;
        *(_QWORD *)(v72[7] + 8 * v78) = v70;
        v90 = v72[2];
        v48 = __OFADD__(v90, 1);
        v91 = v90 + 1;
        if (v48)
          goto LABEL_81;
        v55 = v73;
        v72[2] = v91;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v54 = v103;
      v2 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      v85 = sub_18EC1FB10(v66, v67);
      v87 = v86;
      swift_bridgeObjectRelease();
      if ((v87 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_18EC4D800(&qword_1EE13B4F0);
        swift_bridgeObjectRelease();
        v88 = *(void **)(v72[7] + 8 * v85);
        sub_18EC4CE5C(v85, (uint64_t)v72);

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v59 = (void *)sub_18EC67104();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setProperties_, v59);

  }
  v64 = v62 + 3;
  if (v64 >= v99)
    goto LABEL_75;
  v63 = *(_QWORD *)(v97 + 8 * v64);
  if (v63)
  {
    v55 = v64;
    goto LABEL_59;
  }
  while (1)
  {
    v55 = v64 + 1;
    if (__OFADD__(v64, 1))
      break;
    if (v55 >= v99)
      goto LABEL_75;
    v63 = *(_QWORD *)(v97 + 8 * v55);
    ++v64;
    if (v63)
      goto LABEL_59;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  sub_18EC67A64();
  __break(1u);
}

uint64_t static AudioEffectConfiguration._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t result;

  result = _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    result = sub_18EC67710();
    __break(1u);
  }
  return result;
}

uint64_t static AudioEffectConfiguration._unconditionallyBridgeFromObjectiveC(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B488);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  if (a1)
  {
    v10 = type metadata accessor for AudioEffectConfiguration();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    v12 = a1;
    if ((_s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(v12, (uint64_t)v9) & 1) != 0)
    {
      sub_18EC4E3B0((uint64_t)v9, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
      {
        sub_18EC4E3F8((uint64_t)v9);

        return sub_18EC4E438((uint64_t)v7, a2);
      }
      sub_18EC4E3F8((uint64_t)v7);
    }
  }
  result = sub_18EC67710();
  __break(1u);
  return result;
}

uint64_t sub_18EC4AD8C(void *a1, uint64_t a2)
{
  uint64_t result;

  result = _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    result = sub_18EC67710();
    __break(1u);
  }
  return result;
}

id AXAudioEffectConfiguration.identifier.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_identifier);
  swift_beginAccess();
  return *v1;
}

void AXAudioEffectConfiguration.identifier.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AXAudioEffectConfiguration_identifier);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t AXAudioEffectConfiguration.effectName.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_effectName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AXAudioEffectConfiguration.effectName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___AXAudioEffectConfiguration_effectName);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_18EC4B0B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_effectName);
  v4 = sub_18EC671A0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t AXAudioEffectConfiguration.enabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_enabled);
  swift_beginAccess();
  return *v1;
}

uint64_t AXAudioEffectConfiguration.enabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___AXAudioEffectConfiguration_enabled);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t AXAudioEffectConfiguration.properties.getter()
{
  return sub_18EC24F14();
}

uint64_t AXAudioEffectConfiguration.properties.setter(uint64_t a1)
{
  return sub_18EC24FD4(a1, &OBJC_IVAR___AXAudioEffectConfiguration_properties);
}

id sub_18EC4B260()
{
  void *v0;

  swift_beginAccess();
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  swift_bridgeObjectRetain();
  v0 = (void *)sub_18EC67104();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AXAudioEffectConfiguration.parameters.getter()
{
  return sub_18EC24F14();
}

uint64_t sub_18EC4B304(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t *v7;

  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v6 = sub_18EC67110();
  v7 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v7 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t AXAudioEffectConfiguration.parameters.setter(uint64_t a1)
{
  return sub_18EC24FD4(a1, &OBJC_IVAR___AXAudioEffectConfiguration_parameters);
}

void sub_18EC4B3A4(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*a1, *a2);
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v5 = sub_18EC67110();

  *a3 = v5;
}

void sub_18EC4B420(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v7 = (id)sub_18EC67104();
  objc_msgSend(v6, *a5, v7);

}

uint64_t sub_18EC4B4FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139248);
  v42 = a2;
  v6 = sub_18EC67728();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_34;
      v23 = *(_QWORD *)(v41 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v13 >= v40)
              goto LABEL_34;
            v23 = *(_QWORD *)(v41 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v13 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 40 * v20;
    if ((v42 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 16);
      v45 = *(_QWORD *)(v28 + 32);
      v43 = v29;
      v44 = v30;
    }
    else
    {
      sub_18EC1B578(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_18EC67AAC();
    sub_18EC6720C();
    result = sub_18EC67ADC();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = *(_QWORD *)(v7 + 56) + 40 * v14;
    v17 = v43;
    v18 = v44;
    *(_QWORD *)(v16 + 32) = v45;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v22 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18EC4B830(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B510);
  v6 = sub_18EC67728();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v23 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v24 = v23 | (v14 << 6);
      goto LABEL_22;
    }
    v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v11)
      break;
    v26 = (_QWORD *)(v5 + 64);
    v27 = *(_QWORD *)(v43 + 8 * v25);
    ++v14;
    if (!v27)
    {
      v14 = v25 + 1;
      if (v25 + 1 >= v11)
        goto LABEL_34;
      v27 = *(_QWORD *)(v43 + 8 * v14);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = *(_QWORD *)(v43 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v14 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v27 = *(_QWORD *)(v43 + 8 * v14);
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v14 = v28;
      }
    }
LABEL_21:
    v10 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v5 + 48) + 40 * v24;
    if ((a2 & 1) != 0)
    {
      v30 = *(_OWORD *)v29;
      v31 = *(_OWORD *)(v29 + 16);
      v49 = *(_QWORD *)(v29 + 32);
      v47 = v30;
      v48 = v31;
      v32 = *(_QWORD *)(v5 + 56) + 40 * v24;
      v33 = *(_QWORD *)(v32 + 32);
      v34 = *(_OWORD *)(v32 + 16);
      v44 = *(_OWORD *)v32;
      v45 = v34;
      v46 = v33;
    }
    else
    {
      sub_18EC1B578(v29, (uint64_t)&v47);
      sub_18EC1B578(*(_QWORD *)(v5 + 56) + 40 * v24, (uint64_t)&v44);
    }
    result = sub_18EC675C0();
    v35 = -1 << *(_BYTE *)(v7 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v12 + 8 * (v36 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v12 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v12 + 8 * v37);
      }
      while (v41 == -1);
      v15 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v7 + 48) + v16;
    v18 = v47;
    v19 = v48;
    *(_QWORD *)(v17 + 32) = v49;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    v20 = *(_QWORD *)(v7 + 56) + v16;
    v21 = v44;
    v22 = v45;
    *(_QWORD *)(v20 + 32) = v46;
    *(_OWORD *)v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v26 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v5 + 32);
  if (v42 >= 64)
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v42;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18EC4BB5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B508);
  v6 = sub_18EC67728();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v2;
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
      sub_18EC3FA60(v23, v34);
    else
      sub_18EC1B600((uint64_t)v23, (uint64_t)v34);
    sub_18EC67AAC();
    sub_18EC67068();
    result = sub_18EC67ADC();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_18EC3FA60(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18EC4BE48(uint64_t a1, char a2)
{
  return sub_18EC4C1C0(a1, a2, &qword_1EE13B500);
}

uint64_t sub_18EC4BE54(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  int v41;

  v3 = v2;
  v5 = sub_18EC66F00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B4F8);
  v41 = a2;
  v10 = sub_18EC67728();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v37 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v21 = v20 | (v18 << 6);
      }
      else
      {
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38)
          goto LABEL_34;
        v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          v18 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_34;
          v23 = v39[v18];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v41 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v9 + 32);
                if (v35 >= 64)
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v35;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v18 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v18 >= v38)
                  goto LABEL_34;
                v23 = v39[v18];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v18 = v24;
          }
        }
LABEL_21:
        v15 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      v25 = *(_QWORD *)(v6 + 72);
      v26 = *(_QWORD *)(v9 + 48) + v25 * v21;
      if ((v41 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
        swift_retain();
      }
      sub_18EC4E620();
      result = sub_18EC67134();
      v28 = -1 << *(_BYTE *)(v11 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v25 * v19, v8, v5);
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v27;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_18EC4C1C0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_18EC67728();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_18EC67AAC();
    sub_18EC6720C();
    result = sub_18EC67ADC();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_18EC4C4C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B4E8);
  v37 = a2;
  v6 = sub_18EC67728();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_18EC67AAC();
    sub_18EC6720C();
    result = sub_18EC67ADC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18EC4C7D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ACA0);
  v37 = a2;
  v6 = sub_18EC67728();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_18EC67AAC();
    sub_18EC6720C();
    result = sub_18EC67ADC();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_18EC4CAD4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _BYTE v29[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18EC67590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_18EC1B578(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v29);
        v11 = sub_18EC675C0();
        result = sub_18EC1B5B4((uint64_t)v29);
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = v15 + 40 * v3;
            v17 = (__int128 *)(v15 + 40 * v6);
            if (v3 != v6 || v16 >= (unint64_t)v17 + 40)
            {
              v18 = *v17;
              v19 = v17[1];
              *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
              *(_OWORD *)v16 = v18;
              *(_OWORD *)(v16 + 16) = v19;
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 40 * v3;
            v22 = (__int128 *)(v20 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              v9 = *v22;
              v10 = v22[1];
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
              *(_OWORD *)v21 = v9;
              *(_OWORD *)(v21 + 16) = v10;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18EC4CCA4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18EC67590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_18EC67AAC();
        sub_18EC67068();
        result = sub_18EC67ADC();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_QWORD *)(v11 + 8 * v3);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 32 * v3);
          v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 2))
          {
            v9 = v16[1];
            *v15 = *v16;
            v15[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18EC4CE5C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18EC67590();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_18EC67AAC();
        swift_bridgeObjectRetain();
        sub_18EC6720C();
        v9 = sub_18EC67ADC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_18EC4D030()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139248);
  v2 = *v0;
  v3 = sub_18EC6771C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v28 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_18EC1B578(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18EC4D224()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B510);
  v2 = *v0;
  v3 = sub_18EC6771C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_18EC1B578(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v28);
    result = (void *)sub_18EC1B578(*(_QWORD *)(v2 + 56) + v16, (uint64_t)v26);
    v17 = *(_QWORD *)(v4 + 48) + v16;
    v18 = v28[1];
    v19 = v28[0];
    *(_QWORD *)(v17 + 32) = v29;
    *(_OWORD *)v17 = v19;
    *(_OWORD *)(v17 + 16) = v18;
    v20 = *(_QWORD *)(v4 + 56) + v16;
    v21 = v27;
    v22 = v26[1];
    *(_OWORD *)v20 = v26[0];
    *(_OWORD *)(v20 + 16) = v22;
    *(_QWORD *)(v20 + 32) = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18EC4D404()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B508);
  v2 = *v0;
  v3 = sub_18EC6771C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_18EC1B600(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = sub_18EC3FA60(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18EC4D5C4()
{
  return sub_18EC4D800(&qword_1EE13B500);
}

void *sub_18EC4D5D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_18EC66F00();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B4F8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_18EC6771C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18EC4D800(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_18EC6771C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18EC4D9A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B4E8);
  v2 = *v0;
  v3 = sub_18EC6771C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v20) = (_DWORD)v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18EC4DB54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13ACA0);
  v2 = *v0;
  v3 = sub_18EC6771C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 4 * v15;
    v20 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int v20;
  int v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  unsigned int v53;
  char v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t *v72;
  uint64_t result;
  id v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;

  sub_18EC4E3F8(a2);
  v75 = a1;
  v3 = objc_msgSend(a1, sel_parameters);
  sub_18EC1A6F0(0, &qword_1EE13AC48);
  v4 = sub_18EC67110();

  v5 = 0;
  v77 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v79 = (unint64_t)(v6 + 63) >> 6;
  v81 = v4;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v5 << 6);
      goto LABEL_22;
    }
    v12 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_70;
    if (v12 >= v79)
      break;
    v13 = *(_QWORD *)(v77 + 8 * v12);
    ++v5;
    if (!v13)
    {
      v5 = v12 + 1;
      if (v12 + 1 >= v79)
        break;
      v13 = *(_QWORD *)(v77 + 8 * v5);
      if (!v13)
      {
        v5 = v12 + 2;
        if (v12 + 2 >= v79)
          break;
        v13 = *(_QWORD *)(v77 + 8 * v5);
        if (!v13)
        {
          v14 = v12 + 3;
          if (v14 >= v79)
            break;
          v13 = *(_QWORD *)(v77 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              v5 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_72;
              if (v5 >= v79)
                goto LABEL_33;
              v13 = *(_QWORD *)(v77 + 8 * v5);
              ++v14;
              if (v13)
                goto LABEL_21;
            }
          }
          v5 = v14;
        }
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v5 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v81 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(v81 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = v18;
    objc_msgSend(v19, sel_floatValue);
    v21 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_18EC1FB10(v17, v16);
    v25 = v9[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v28 = v23;
    if (v9[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_18EC4DB54();
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_18EC4C7D0(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_18EC1FB10(v17, v16);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_74;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        *(_DWORD *)(v9[7] + 4 * v24) = v21;
        goto LABEL_5;
      }
    }
    v9[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(v9[6] + 16 * v24);
    *v31 = v17;
    v31[1] = v16;
    *(_DWORD *)(v9[7] + 4 * v24) = v21;
    v32 = v9[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_68;
    v9[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_33:
  swift_release();
  v35 = objc_msgSend(v75, sel_properties);
  v36 = sub_18EC67110();

  v37 = 0;
  v76 = v36 + 64;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & *(_QWORD *)(v36 + 64);
  v78 = (unint64_t)(v38 + 63) >> 6;
  v80 = v36;
  v41 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (2)
  {
    if (v40)
    {
      v42 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v82 = v37;
      v43 = v42 | (v37 << 6);
      goto LABEL_54;
    }
    v44 = v37 + 1;
    if (__OFADD__(v37, 1))
      goto LABEL_71;
    if (v44 >= v78)
    {
LABEL_65:
      swift_release();
      v66 = objc_msgSend(v75, sel_identifier);
      sub_18EC66EE8();

      v67 = objc_msgSend(v75, sel_effectName);
      v68 = sub_18EC671A0();
      v70 = v69;

      LOBYTE(v67) = objc_msgSend(v75, sel_enabled);
      v71 = (int *)type metadata accessor for AudioEffectConfiguration();
      v72 = (uint64_t *)(a2 + v71[5]);
      *v72 = v68;
      v72[1] = v70;
      *(_QWORD *)(a2 + v71[6]) = v9;
      *(_BYTE *)(a2 + v71[8]) = (_BYTE)v67;
      *(_QWORD *)(a2 + v71[7]) = v41;
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v71 - 1) + 56))(a2, 0, 1, v71);
      return 1;
    }
    v45 = *(_QWORD *)(v76 + 8 * v44);
    v46 = v37 + 1;
    if (v45)
      goto LABEL_53;
    v46 = v37 + 2;
    if (v37 + 2 >= v78)
      goto LABEL_65;
    v45 = *(_QWORD *)(v76 + 8 * v46);
    if (v45)
      goto LABEL_53;
    v46 = v37 + 3;
    if (v37 + 3 >= v78)
      goto LABEL_65;
    v45 = *(_QWORD *)(v76 + 8 * v46);
    if (v45)
    {
LABEL_53:
      v40 = (v45 - 1) & v45;
      v82 = v46;
      v43 = __clz(__rbit64(v45)) + (v46 << 6);
LABEL_54:
      v48 = (uint64_t *)(*(_QWORD *)(v80 + 48) + 16 * v43);
      v50 = *v48;
      v49 = v48[1];
      v51 = *(void **)(*(_QWORD *)(v80 + 56) + 8 * v43);
      swift_bridgeObjectRetain();
      v52 = v51;
      v53 = objc_msgSend(v52, sel_unsignedIntValue);
      v54 = swift_isUniquelyReferenced_nonNull_native();
      v56 = sub_18EC1FB10(v50, v49);
      v57 = v41[2];
      v58 = (v55 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
        goto LABEL_67;
      v60 = v55;
      if (v41[3] < v59)
      {
        sub_18EC4C4C8(v59, v54);
        v61 = sub_18EC1FB10(v50, v49);
        if ((v60 & 1) != (v62 & 1))
          goto LABEL_74;
        v56 = v61;
        if ((v60 & 1) == 0)
          goto LABEL_61;
LABEL_36:
        *(_DWORD *)(v41[7] + 4 * v56) = v53;
LABEL_37:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v82;
        continue;
      }
      if ((v54 & 1) != 0)
      {
        if ((v55 & 1) != 0)
          goto LABEL_36;
      }
      else
      {
        sub_18EC4D9A8();
        if ((v60 & 1) != 0)
          goto LABEL_36;
      }
LABEL_61:
      v41[(v56 >> 6) + 8] |= 1 << v56;
      v63 = (uint64_t *)(v41[6] + 16 * v56);
      *v63 = v50;
      v63[1] = v49;
      *(_DWORD *)(v41[7] + 4 * v56) = v53;
      v64 = v41[2];
      v33 = __OFADD__(v64, 1);
      v65 = v64 + 1;
      if (v33)
        goto LABEL_69;
      v41[2] = v65;
      swift_bridgeObjectRetain();
      goto LABEL_37;
    }
    break;
  }
  v47 = v37 + 4;
  if (v37 + 4 >= v78)
    goto LABEL_65;
  v45 = *(_QWORD *)(v76 + 8 * v47);
  if (v45)
  {
    v46 = v37 + 4;
    goto LABEL_53;
  }
  while (1)
  {
    v46 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v46 >= v78)
      goto LABEL_65;
    v45 = *(_QWORD *)(v76 + 8 * v46);
    ++v47;
    if (v45)
      goto LABEL_53;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  result = sub_18EC67A64();
  __break(1u);
  return result;
}

uint64_t sub_18EC4E3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18EC4E3F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18EC4E438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

id sub_18EC4E488@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_identifier);
  *a2 = result;
  return result;
}

id sub_18EC4E4C0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIdentifier_, *a1);
}

char *keypath_get_selector_effectName()
{
  return sel_effectName;
}

void sub_18EC4E4E4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_18EC6717C();
  objc_msgSend(v2, sel_setEffectName_, v3);

}

char *keypath_get_selector_enabled()
{
  return sel_enabled;
}

id sub_18EC4E540@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_enabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_18EC4E570(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEnabled_, *a1);
}

char *keypath_get_selector_properties()
{
  return sel_properties;
}

void sub_18EC4E590(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18EC4B3A4(a1, (SEL *)&selRef_properties, a2);
}

void sub_18EC4E5AC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18EC4B420(a1, a2, a3, a4, (SEL *)&selRef_setProperties_);
}

char *keypath_get_selector_parameters()
{
  return sel_parameters;
}

void sub_18EC4E5D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18EC4B3A4(a1, (SEL *)&selRef_parameters, a2);
}

void sub_18EC4E5F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18EC4B420(a1, a2, a3, a4, (SEL *)&selRef_setParameters_);
}

uint64_t type metadata accessor for AXAudioEffectConfiguration(uint64_t a1)
{
  return sub_18EC1A6F0(a1, &qword_1EE13B4E0);
}

unint64_t sub_18EC4E620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE13AB40;
  if (!qword_1EE13AB40)
  {
    v1 = sub_18EC66F00();
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE13AB40);
  }
  return result;
}

const char *AccessibilityFeatureFlags.domain.getter()
{
  return "Accessibility";
}

const char *AccessibilityFeatureFlags.feature.getter()
{
  _BYTE *v0;
  const char *v1;

  v1 = "PersonalVoiceShortPhraseTraining";
  if (*v0 != 1)
    v1 = "PassthroughZoom";
  if (*v0)
    return v1;
  else
    return "PersonalVoiceForAssistiveTechnologies";
}

BOOL static AccessibilityFeatureFlags.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AccessibilityFeatureFlags.hash(into:)()
{
  return sub_18EC67AB8();
}

uint64_t AccessibilityFeatureFlags.hashValue.getter()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

unint64_t sub_18EC4E748()
{
  unint64_t result;

  result = qword_1EE13B518;
  if (!qword_1EE13B518)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AccessibilityFeatureFlags, &type metadata for AccessibilityFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1EE13B518);
  }
  return result;
}

const char *sub_18EC4E78C()
{
  return "Accessibility";
}

const char *sub_18EC4E7A0()
{
  _BYTE *v0;
  const char *v1;

  v1 = "PersonalVoiceShortPhraseTraining";
  if (*v0 != 1)
    v1 = "PassthroughZoom";
  if (*v0)
    return v1;
  else
    return "PersonalVoiceForAssistiveTechnologies";
}

uint64_t getEnumTagSinglePayload for AccessibilityFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18EC4E8C4 + 4 * byte_18EC6D0F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18EC4E8F8 + 4 * byte_18EC6D0F0[v4]))();
}

uint64_t sub_18EC4E8F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC4E900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18EC4E908);
  return result;
}

uint64_t sub_18EC4E914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18EC4E91CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18EC4E920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC4E928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityFeatureFlags()
{
  return &type metadata for AccessibilityFeatureFlags;
}

char *sub_18EC4E944(uint64_t a1, uint64_t a2)
{
  char *v3;

  v3 = (char *)(*(uint64_t (**)(void))(a2 + 32))();
  swift_bridgeObjectRetain();
  sub_18EC4F534(&v3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18EC4E9A8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_18EC4E944(a1, a2);
  v3 = *((_QWORD *)v2 + 2);
  if (v3)
    v4 = *(_QWORD *)&v2[24 * v3 + 8];
  else
    v4 = 0;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18EC4E9E8()
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3[2];
  uint64_t v4;
  id v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_18EC675D8();
  sub_18EC41B78();
  if (swift_dynamicCast())
  {

    return 1;
  }
  sub_18EC675D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_18EC675D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A48);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_18EC1B5E8(v3, (uint64_t)v6);
    v1 = v7;
    v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1) != 0)
    {
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 1;
    }
    sub_18EC1B8B8((uint64_t)v6, (uint64_t)v3);
    if (swift_dynamicCast())
    {

      goto LABEL_7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    v4 = 0;
    memset(v3, 0, sizeof(v3));
    sub_18EC4F054((uint64_t)v3);
  }
  return 0;
}

uint64_t AXMigration.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AXMigration.version.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AXMigration.version.modify())()
{
  return nullsub_1;
}

uint64_t sub_18EC4EB60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = sub_18EC4FFF4;
  *(_QWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t AXMigration.migrate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t AXMigration.migrate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AXMigration.migrate.modify())()
{
  return nullsub_1;
}

uint64_t AXMigration.init(version:migrate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

BOOL static AXCodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AXCodingError.hash(into:)()
{
  return sub_18EC67AB8();
}

uint64_t AXCodingError.hashValue.getter()
{
  sub_18EC67AAC();
  sub_18EC67AB8();
  return sub_18EC67ADC();
}

unint64_t sub_18EC4ECC4()
{
  unint64_t result;

  result = qword_1EE13B540;
  if (!qword_1EE13B540)
  {
    result = MEMORY[0x193FFA51C](&protocol conformance descriptor for AXCodingError, &type metadata for AXCodingError);
    atomic_store(result, (unint64_t *)&qword_1EE13B540);
  }
  return result;
}

BOOL sub_18EC4ED18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 48))(v4, 1);
  if (v5 != 1)
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5 == 1;
}

uint64_t sub_18EC4EDC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_18EC50034;
  a2[1] = v5;
  return swift_retain();
}

uint64_t dispatch thunk of static AXMigratable.typeKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static AXMigratable.migrations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t destroy for AXMigration()
{
  return swift_release();
}

_QWORD *_s15AXCoreUtilities11AXMigrationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AXMigration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AXMigration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMigration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXMigration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMigration()
{
  return &type metadata for AXMigration;
}

uint64_t storeEnumTagSinglePayload for AXCodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_18EC4EFD4 + 4 * byte_18EC6D1D5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_18EC4F008 + 4 * byte_18EC6D1D0[v4]))();
}

uint64_t sub_18EC4F008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC4F010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18EC4F018);
  return result;
}

uint64_t sub_18EC4F024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18EC4F02CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_18EC4F030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC4F038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AXCodingError()
{
  return &type metadata for AXCodingError;
}

uint64_t sub_18EC4F054(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_18EC4F094(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139250);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_18EC4F1AC(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AA18);
  v10 = *(_QWORD *)(sub_18EC66FCC() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(sub_18EC66FCC() - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_18EC4F320(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A078);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_18EC4F420(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_18EC4F534(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_18EC4FFBC((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_18EC4F59C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18EC4F59C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;

  v3 = a1[1];
  result = sub_18EC67800();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v85 = 0;
      v86 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(_QWORD *)(v86 + 24 * i);
        v89 = v85;
        do
        {
          v90 = v86 + v89;
          if (v88 >= *(_QWORD *)(v86 + v89))
            break;
          if (!v86)
            goto LABEL_141;
          v91 = v86 + v89;
          v92 = *(_OWORD *)(v86 + v89 + 32);
          *(_OWORD *)(v86 + v89 + 24) = *(_OWORD *)v90;
          *(_QWORD *)(v86 + v89 + 40) = *(_QWORD *)(v90 + 16);
          *(_QWORD *)v91 = v88;
          *(_OWORD *)(v91 + 8) = v92;
          v89 -= 24;
        }
        while (v89 != -24);
        v85 += 24;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v6 = result;
    v101 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      result = sub_18EC67314();
      *(_QWORD *)(result + 16) = v7;
      v103 = result;
      v107 = (char *)(result + 32);
LABEL_13:
      v9 = 0;
      v10 = *a1;
      v102 = *a1 + 48;
      v100 = *a1 - 24;
      v11 = MEMORY[0x1E0DEE9D8];
      v104 = v6;
      v105 = v3;
      v106 = v10;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(_QWORD *)(v10 + 24 * v9);
          v15 = *(_QWORD *)(v10 + 24 * v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = (uint64_t *)(v102 + 24 * v13);
            v17 = v14;
            while (1)
            {
              v19 = *v16;
              v16 += 3;
              v18 = v19;
              if (v14 < v15 == v19 >= v17)
                break;
              ++v9;
              v17 = v18;
              if (v3 == v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v20 = 24 * v9;
              v21 = 24 * v13;
              v22 = v9;
              v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10)
                    goto LABEL_144;
                  v24 = v10 + v21;
                  v25 = v10 + v20;
                  v26 = *(_QWORD *)(v10 + v21);
                  v27 = *(_OWORD *)(v10 + v21 + 8);
                  v28 = *(_OWORD *)(v10 + v20 - 24);
                  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v10 + v20 - 8);
                  *(_OWORD *)v24 = v28;
                  *(_QWORD *)(v25 - 24) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v23;
                v20 -= 24;
                v21 += 24;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_135;
          if (v9 - v13 < v6)
          {
            v29 = v13 + v6;
            if (__OFADD__(v13, v6))
              goto LABEL_139;
            if (v29 >= v3)
              v29 = v3;
            if (v29 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v29)
            {
              v30 = v100 + 24 * v9;
              do
              {
                v31 = *(_QWORD *)(v10 + 24 * v9);
                v32 = v13;
                v33 = v30;
                do
                {
                  if (v31 >= *(_QWORD *)v33)
                    break;
                  if (!v10)
                    goto LABEL_142;
                  v34 = *(_OWORD *)(v33 + 32);
                  *(_OWORD *)(v33 + 24) = *(_OWORD *)v33;
                  *(_QWORD *)(v33 + 40) = *(_QWORD *)(v33 + 16);
                  *(_QWORD *)v33 = v31;
                  *(_OWORD *)(v33 + 8) = v34;
                  v33 -= 24;
                  ++v32;
                }
                while (v9 != v32);
                ++v9;
                v30 += 24;
              }
              while (v9 != v29);
              v9 = v29;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_130;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_18EC4FEB0(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
          v11 = result;
        }
        v36 = *(_QWORD *)(v11 + 16);
        v35 = *(_QWORD *)(v11 + 24);
        v12 = v36 + 1;
        v10 = v106;
        if (v36 >= v35 >> 1)
        {
          result = (uint64_t)sub_18EC4FEB0((char *)(v35 > 1), v36 + 1, 1, (char *)v11);
          v10 = v106;
          v11 = result;
        }
        *(_QWORD *)(v11 + 16) = v12;
        v37 = v11 + 32;
        v38 = (uint64_t *)(v11 + 32 + 16 * v36);
        *v38 = v13;
        v38[1] = v9;
        if (v36)
        {
          while (1)
          {
            v39 = v12 - 1;
            if (v12 >= 4)
            {
              v44 = v37 + 16 * v12;
              v45 = *(_QWORD *)(v44 - 64);
              v46 = *(_QWORD *)(v44 - 56);
              v50 = __OFSUB__(v46, v45);
              v47 = v46 - v45;
              if (v50)
                goto LABEL_119;
              v49 = *(_QWORD *)(v44 - 48);
              v48 = *(_QWORD *)(v44 - 40);
              v50 = __OFSUB__(v48, v49);
              v42 = v48 - v49;
              v43 = v50;
              if (v50)
                goto LABEL_120;
              v51 = v12 - 2;
              v52 = (uint64_t *)(v37 + 16 * (v12 - 2));
              v54 = *v52;
              v53 = v52[1];
              v50 = __OFSUB__(v53, v54);
              v55 = v53 - v54;
              if (v50)
                goto LABEL_121;
              v50 = __OFADD__(v42, v55);
              v56 = v42 + v55;
              if (v50)
                goto LABEL_123;
              if (v56 >= v47)
              {
                v74 = (uint64_t *)(v37 + 16 * v39);
                v76 = *v74;
                v75 = v74[1];
                v50 = __OFSUB__(v75, v76);
                v77 = v75 - v76;
                if (v50)
                  goto LABEL_129;
                v67 = v42 < v77;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v68 = *(_QWORD *)(v11 + 32);
                v69 = *(_QWORD *)(v11 + 40);
                v50 = __OFSUB__(v69, v68);
                v61 = v69 - v68;
                v62 = v50;
                goto LABEL_77;
              }
              v41 = *(_QWORD *)(v11 + 32);
              v40 = *(_QWORD *)(v11 + 40);
              v50 = __OFSUB__(v40, v41);
              v42 = v40 - v41;
              v43 = v50;
            }
            if ((v43 & 1) != 0)
              goto LABEL_122;
            v51 = v12 - 2;
            v57 = (uint64_t *)(v37 + 16 * (v12 - 2));
            v59 = *v57;
            v58 = v57[1];
            v60 = __OFSUB__(v58, v59);
            v61 = v58 - v59;
            v62 = v60;
            if (v60)
              goto LABEL_124;
            v63 = (uint64_t *)(v37 + 16 * v39);
            v65 = *v63;
            v64 = v63[1];
            v50 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v50)
              goto LABEL_126;
            if (__OFADD__(v61, v66))
              goto LABEL_128;
            if (v61 + v66 >= v42)
            {
              v67 = v42 < v66;
LABEL_83:
              if (v67)
                v39 = v51;
              goto LABEL_85;
            }
LABEL_77:
            if ((v62 & 1) != 0)
              goto LABEL_125;
            v70 = (uint64_t *)(v37 + 16 * v39);
            v72 = *v70;
            v71 = v70[1];
            v50 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v50)
              goto LABEL_127;
            if (v73 < v61)
              goto LABEL_15;
LABEL_85:
            v78 = v39 - 1;
            if (v39 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10)
              goto LABEL_143;
            v79 = v11;
            v80 = (uint64_t *)(v37 + 16 * v78);
            v81 = *v80;
            v82 = (_QWORD *)(v37 + 16 * v39);
            v83 = v82[1];
            result = sub_18EC4FC6C((char *)(v10 + 24 * *v80), (char *)(v10 + 24 * *v82), v10 + 24 * v83, v107);
            if (v1)
              goto LABEL_93;
            if (v83 < v81)
              goto LABEL_116;
            if (v39 > *(_QWORD *)(v79 + 16))
              goto LABEL_117;
            *v80 = v81;
            *(_QWORD *)(v37 + 16 * v78 + 8) = v83;
            v84 = *(_QWORD *)(v79 + 16);
            if (v39 >= v84)
              goto LABEL_118;
            v11 = v79;
            v12 = v84 - 1;
            result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
            *(_QWORD *)(v79 + 16) = v84 - 1;
            v10 = v106;
            if (v84 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v6 = v104;
        v3 = v105;
        if (v9 >= v105)
        {
          v8 = v103;
          goto LABEL_102;
        }
      }
    }
    v8 = MEMORY[0x1E0DEE9D8];
    v107 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v103 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_102:
    result = v11;
    v103 = v8;
    if (v12 >= 2)
    {
      v93 = *v101;
      do
      {
        v94 = v12 - 2;
        if (v12 < 2)
          goto LABEL_131;
        if (!v93)
          goto LABEL_145;
        v95 = result;
        v96 = *(_QWORD *)(result + 32 + 16 * v94);
        v97 = *(_QWORD *)(result + 32 + 16 * (v12 - 1) + 8);
        result = sub_18EC4FC6C((char *)(v93 + 24 * v96), (char *)(v93 + 24 * *(_QWORD *)(result + 32 + 16 * (v12 - 1))), v93 + 24 * v97, v107);
        if (v1)
          break;
        if (v97 < v96)
          goto LABEL_132;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_18EC4FFA8(v95);
          v95 = result;
        }
        if (v94 >= *(_QWORD *)(v95 + 16))
          goto LABEL_133;
        v98 = (_QWORD *)(v95 + 32 + 16 * v94);
        *v98 = v96;
        v98[1] = v97;
        v99 = *(_QWORD *)(v95 + 16);
        if (v12 > v99)
          goto LABEL_134;
        memmove((void *)(v95 + 32 + 16 * (v12 - 1)), (const void *)(v95 + 32 + 16 * v12), 16 * (v99 - v12));
        result = v95;
        *(_QWORD *)(v95 + 16) = v99 - 1;
        v12 = v99 - 1;
      }
      while (v99 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v103 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18EC4FC6C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  __int128 v15;
  unint64_t v16;
  char *v17;
  char *v18;
  BOOL v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = (__src - __dst) / 24;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[24 * v11] <= a4)
      memmove(a4, __src, 24 * v11);
    v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24)
      goto LABEL_36;
    v16 = a3 - 24;
    while (1)
    {
      v17 = (char *)(v16 + 24);
      v18 = v6 - 24;
      if (*((_QWORD *)v12 - 3) >= *((_QWORD *)v6 - 3))
      {
        v18 = v12 - 24;
        if (v17 != v12)
        {
          v12 -= 24;
          goto LABEL_33;
        }
        v19 = v16 >= (unint64_t)v12;
        v12 -= 24;
        if (v19)
          goto LABEL_33;
      }
      else
      {
        if (v17 != v6)
        {
          v6 -= 24;
LABEL_33:
          v20 = *(_OWORD *)v18;
          *(_QWORD *)(v16 + 16) = *((_QWORD *)v18 + 2);
          *(_OWORD *)v16 = v20;
          goto LABEL_34;
        }
        v19 = v16 >= (unint64_t)v6;
        v6 -= 24;
        if (v19)
          goto LABEL_33;
      }
LABEL_34:
      if (v6 > v7)
      {
        v16 -= 24;
        if (v12 > v4)
          continue;
      }
      goto LABEL_36;
    }
  }
  if (a4 != __dst || &__dst[24 * v9] <= a4)
    memmove(a4, __dst, 24 * v9);
  v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (*(_QWORD *)v6 < *(_QWORD *)v4)
    {
      v13 = v6;
      v14 = v7 == v6;
      v6 += 24;
      if (!v14)
        goto LABEL_12;
LABEL_13:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_15;
    }
    v13 = v4;
    v14 = v7 == v4;
    v4 += 24;
    if (v14)
      goto LABEL_13;
LABEL_12:
    v15 = *(_OWORD *)v13;
    *((_QWORD *)v7 + 2) = *((_QWORD *)v13 + 2);
    *(_OWORD *)v7 = v15;
    goto LABEL_13;
  }
LABEL_15:
  v6 = v7;
LABEL_36:
  v21 = (unsigned __int128)((v12 - v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  v22 = (v21 >> 2) + ((unint64_t)v21 >> 63);
  if (v6 != v4 || v6 >= &v4[24 * v22])
    memmove(v6, v4, 24 * v22);
  return 1;
}

char *sub_18EC4FEB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B548);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18EC4FFA8(uint64_t a1)
{
  return sub_18EC4FEB0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_18EC4FFBC(uint64_t a1)
{
  return sub_18EC4F094(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18EC4FFD0()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_18EC4FFF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t *);
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v6 = a1;
  result = v3(&v5, &v6);
  if (!v2)
    return (_QWORD *)v5;
  return result;
}

uint64_t sub_18EC50034@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_18EC50068(_QWORD *a1)
{
  _OWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_18EC1B130(a1, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    v9 = v7;
    v1 = v8;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      LOBYTE(v1) = sub_18EC50708((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18EC1B5B4((uint64_t)v8);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v3 = 4;
    swift_willThrow();
  }
  return v1 & 1;
}

_OWORD *sub_18EC50178(_QWORD *a1)
{
  _OWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_18EC1B130(a1, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    v9 = v7;
    v1 = v8;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      v1 = (_OWORD *)sub_18EC509C0((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18EC1B5B4((uint64_t)v8);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v3 = 4;
    swift_willThrow();
  }
  return v1;
}

double sub_18EC50298(_QWORD *a1)
{
  double v1;
  _BYTE *v2;
  _BYTE *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_18EC1B130(a1, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    v9 = v7;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      v1 = sub_18EC50CB4((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18EC1B5B4((uint64_t)v8);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v3 = 4;
    swift_willThrow();
  }
  return v1;
}

float sub_18EC503B0(_QWORD *a1)
{
  float v1;
  _BYTE *v2;
  _BYTE *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_18EC1B130(a1, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    v9 = v7;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      v1 = sub_18EC50FE4((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18EC1B5B4((uint64_t)v8);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v5, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v3 = 4;
    swift_willThrow();
  }
  return v1;
}

_OWORD *sub_18EC504C8(_QWORD *a1, uint64_t (*a2)(__int128 *))
{
  _OWORD *v2;
  _BYTE *v4;
  _BYTE *v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  sub_18EC1B130(a1, (uint64_t)&v7);
  if (*((_QWORD *)&v8 + 1))
  {
    v10[0] = v7;
    v10[1] = v8;
    v11 = v9;
    v2 = v10;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v4 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      v2 = (_OWORD *)a2(&v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    sub_18EC1B5B4((uint64_t)v10);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v7, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 4;
    swift_willThrow();
  }
  return v2;
}

_OWORD *sub_18EC505E4(_QWORD *a1, uint64_t a2, uint64_t (*a3)(__int128 *, uint64_t))
{
  _OWORD *v3;
  _BYTE *v6;
  _BYTE *v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  sub_18EC1B130(a1, (uint64_t)&v9);
  if (*((_QWORD *)&v10 + 1))
  {
    v12[0] = v9;
    v12[1] = v10;
    v13 = v11;
    v3 = v12;
    if ((sub_18EC4E9E8() & 1) != 0)
    {
      sub_18EC1A5D0();
      swift_allocError();
      *v6 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18EC675D8();
      v3 = (_OWORD *)a3(&v9, a2);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    }
    sub_18EC1B5B4((uint64_t)v12);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v9, &qword_1EE139AA0);
    sub_18EC1A5D0();
    swift_allocError();
    *v7 = 4;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_18EC50708(uint64_t a1)
{
  char v1;
  _BYTE *v2;
  _BYTE v4[40];
  _BYTE v5[32];

  sub_18EC1B600(a1, (uint64_t)v5);
  v1 = MEMORY[0x1E0DEE9B8] + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = v4[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
    if (swift_dynamicCast())
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    if ((swift_dynamicCast() & 1) == 0
      && !swift_dynamicCast()
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0)
    {
      swift_dynamicCast();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    sub_18EC1A5D0();
    swift_allocError();
    *v2 = 3;
    swift_willThrow();
  }
  return v1 & 1;
}

uint64_t sub_18EC509C0(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD v4[4];
  __int128 v5;
  _BYTE v6[32];

  sub_18EC1B600(a1, (uint64_t)v6);
  v1 = MEMORY[0x1E0DEE9B8] + 8;
  if (swift_dynamicCast())
  {
    v1 = v5;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return v1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_18EC1B5E8(&v5, (uint64_t)v4);
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    v1 = sub_18EC6780C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0
    && !swift_dynamicCast()
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0)
  {
    swift_dynamicCast();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_18EC1A5D0();
  swift_allocError();
  *v2 = 3;
  swift_willThrow();
  return v1;
}

double sub_18EC50CB4(uint64_t a1)
{
  double v1;
  int16x4_t v2;
  unint64_t v3;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
    if ((swift_dynamicCast() & 1) != 0)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_6;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v1 = (double)SLOBYTE(v6[0]);
      goto LABEL_23;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2.i16[0] = LOWORD(v6[0]);
      v1 = (double)vmovl_s16(v2).i32[0];
      goto LABEL_23;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v1 = (double)SLODWORD(v6[0]);
      goto LABEL_23;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
LABEL_6:
      v1 = (double)*(uint64_t *)&v6[0];
      goto LABEL_23;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        LOBYTE(v3) = LOBYTE(v6[0]);
        goto LABEL_22;
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        LOWORD(v3) = LOWORD(v6[0]);
        goto LABEL_22;
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        LODWORD(v3) = LODWORD(v6[0]);
        goto LABEL_22;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v1 = *(float *)v6;
            goto LABEL_23;
          }
          if ((swift_dynamicCast() & 1) == 0 && (swift_dynamicCast() & 1) == 0)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
            sub_18EC1A5D0();
            swift_allocError();
            *v5 = 3;
            swift_willThrow();
            return v1;
          }
        }
        goto LABEL_2;
      }
    }
    v3 = *(_QWORD *)&v6[0];
LABEL_22:
    v1 = (double)v3;
    goto LABEL_23;
  }
LABEL_2:
  v1 = v6[0];
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v1;
}

float sub_18EC50FE4(uint64_t a1)
{
  float v1;
  int8x8_t v2;
  int16x4_t v3;
  unsigned int v4;
  unsigned int v5;
  _BYTE *v7;
  double v8[5];
  _BYTE v9[32];

  sub_18EC1B600(a1, (uint64_t)v9);
  if (swift_dynamicCast())
    goto LABEL_2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_6;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2.i8[0] = LOBYTE(v8[0]);
    v1 = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v2)).i32[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3.i16[0] = LOWORD(v8[0]);
    v1 = (float)vmovl_s16(v3).i32[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = (float)SLODWORD(v8[0]);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_6:
    v1 = (float)*(uint64_t *)&v8[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_15;
  if ((swift_dynamicCast() & 1) != 0)
  {
    LOBYTE(v4) = LOBYTE(v8[0]);
    v1 = (float)v4;
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    LOWORD(v5) = LOWORD(v8[0]);
    v1 = (float)v5;
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = (float)LODWORD(v8[0]);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_15:
    v1 = (float)*(unint64_t *)&v8[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_27:
    v1 = v8[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    if ((swift_dynamicCast() & 1) == 0 && (swift_dynamicCast() & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      sub_18EC1A5D0();
      swift_allocError();
      *v7 = 3;
      swift_willThrow();
      return v1;
    }
    goto LABEL_27;
  }
LABEL_2:
  v1 = *(float *)v8;
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v1;
}

uint64_t sub_18EC51320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
    goto LABEL_2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
LABEL_2:
      v2 = LOBYTE(v6[0]);
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      return v2;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = SLOWORD(v6[0]);
      if ((int)v2 < -128)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      if ((int)v2 <= 127)
        goto LABEL_8;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v2 = LODWORD(v6[0]);
      if (SLODWORD(v6[0]) < -128)
      {
        __break(1u);
        goto LABEL_63;
      }
      if (SLODWORD(v6[0]) <= 127)
        goto LABEL_8;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
LABEL_23:
      result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v2 = SLOBYTE(v6[0]);
          if ((v2 & 0x80000000) == 0)
            goto LABEL_8;
          __break(1u);
        }
        if ((swift_dynamicCast() & 1) != 0)
        {
          v2 = LOWORD(v6[0]);
          if (LOWORD(v6[0]) <= 0x7Fu)
            goto LABEL_8;
          __break(1u);
        }
        if ((swift_dynamicCast() & 1) != 0)
        {
          v2 = LODWORD(v6[0]);
          if (LODWORD(v6[0]) <= 0x7F)
            goto LABEL_8;
          __break(1u);
        }
        if ((swift_dynamicCast() & 1) != 0)
        {
          v2 = *(_QWORD *)&v6[0];
          if (*(_QWORD *)&v6[0] <= 0x7FuLL)
            goto LABEL_8;
          __break(1u);
        }
        result = swift_dynamicCast();
        if ((result & 1) == 0)
        {
          result = swift_dynamicCast();
          if ((result & 1) == 0)
            goto LABEL_50;
          if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
          {
            if (*(float *)v6 > -129.0)
            {
              if (*(float *)v6 < 128.0)
              {
                v2 = (int)*(float *)v6;
                goto LABEL_8;
              }
              goto LABEL_70;
            }
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        v4 = v6[0];
        if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -129.0)
          {
            if (v6[0] < 128.0)
              goto LABEL_42;
            goto LABEL_67;
          }
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      v2 = *(_QWORD *)&v6[0];
      if (*(_QWORD *)&v6[0] <= 0x7FuLL)
        goto LABEL_8;
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v2 = *(_QWORD *)&v6[0];
    if (*(uint64_t *)&v6[0] >= -128)
    {
      if (*(uint64_t *)&v6[0] <= 127)
        goto LABEL_8;
      __break(1u);
      goto LABEL_23;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v2 = *(_QWORD *)&v6[0];
  if (*(uint64_t *)&v6[0] < -128)
  {
    __break(1u);
  }
  else if (*(uint64_t *)&v6[0] <= 127)
  {
    goto LABEL_8;
  }
  __break(1u);
LABEL_50:
  v2 = v1 + 8;
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_55;
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    goto LABEL_71;
  if (v6[0] <= -129.0)
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v6[0] < 128.0)
    goto LABEL_42;
  __break(1u);
LABEL_55:
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_61:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    goto LABEL_73;
  if (v6[0] > -129.0)
  {
    if (v6[0] >= 128.0)
    {
      __break(1u);
      goto LABEL_60;
    }
LABEL_42:
    v2 = (int)v4;
    goto LABEL_8;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_18EC517B8(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(_QWORD *)&v2 = LOWORD(v6[0]);
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(_QWORD *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if (*(uint64_t *)&v6[0] < -32768)
    {
      __break(1u);
      goto LABEL_47;
    }
    if (*(uint64_t *)&v6[0] < 0x8000)
      goto LABEL_11;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = SLOBYTE(v6[0]);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_2;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_QWORD *)&v2 = LODWORD(v6[0]);
    if (SLODWORD(v6[0]) < -32768)
    {
      __break(1u);
      goto LABEL_59;
    }
    if (SLODWORD(v6[0]) < 0x8000)
      goto LABEL_11;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if (*(uint64_t *)&v6[0] >= -32768)
    {
      if (*(uint64_t *)&v6[0] < 0x8000)
        goto LABEL_11;
      __break(1u);
      goto LABEL_22;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_22:
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if (!(*(_QWORD *)&v6[0] >> 15))
      goto LABEL_11;
    goto LABEL_60;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LOBYTE(v6[0]);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = SLOWORD(v6[0]);
    if ((LODWORD(v2) & 0x80000000) == 0)
      goto LABEL_11;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LODWORD(v6[0]);
    if (!(LODWORD(v6[0]) >> 15))
      goto LABEL_11;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if (!(*(_QWORD *)&v6[0] >> 15))
      goto LABEL_11;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    if (v6[0] <= -32769.0)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v6[0] >= 32768.0)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
LABEL_40:
    *(_QWORD *)&v2 = (int)v4;
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -32769.0)
      {
        if (*(float *)v6 < 32768.0)
        {
          *(_QWORD *)&v2 = (int)*(float *)v6;
          goto LABEL_11;
        }
        goto LABEL_66;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_47:
  *(_QWORD *)&v2 = v1 + 8;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v6[0] <= -32769.0)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if (v6[0] < 32768.0)
      goto LABEL_40;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_57:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return *(_QWORD *)&v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v6[0] > -32769.0)
  {
    if (v6[0] < 32768.0)
      goto LABEL_40;
    __break(1u);
    goto LABEL_57;
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_18EC51C34(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(_QWORD *)&v2 = LODWORD(v6[0]);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(_QWORD *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if (*(uint64_t *)&v6[0] < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_43;
    }
    if (*(uint64_t *)&v6[0] <= 0x7FFFFFFF)
      goto LABEL_20;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = SLOBYTE(v6[0]);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = SLOWORD(v6[0]);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_2;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if (*(uint64_t *)&v6[0] < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (*(uint64_t *)&v6[0] <= 0x7FFFFFFF)
      goto LABEL_20;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if (!(*(_QWORD *)&v6[0] >> 31))
      goto LABEL_20;
    goto LABEL_55;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LOBYTE(v6[0]);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LOWORD(v6[0]);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LODWORD(v6[0]);
    if ((LODWORD(v6[0]) & 0x80000000) == 0)
      goto LABEL_20;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if (!(*(_QWORD *)&v6[0] >> 31))
      goto LABEL_20;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v6[0] <= -2147483650.0)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v6[0] >= 2147483650.0)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_36:
    *(_QWORD *)&v2 = (int)v4;
    goto LABEL_20;
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -2147500000.0)
      {
        if (*(float *)v6 < 2147500000.0)
        {
          *(_QWORD *)&v2 = (int)*(float *)v6;
          goto LABEL_20;
        }
        goto LABEL_61;
      }
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_43:
  *(_QWORD *)&v2 = v1 + 8;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v6[0] <= -2147483650.0)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v6[0] < 2147483650.0)
      goto LABEL_36;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_53:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return *(_QWORD *)&v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v6[0] > -2147483650.0)
  {
    if (v6[0] < 2147483650.0)
      goto LABEL_36;
    __break(1u);
    goto LABEL_53;
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_18EC520A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
    goto LABEL_5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_5;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = SLOBYTE(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = SLOWORD(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = SLODWORD(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_5:
    v2 = *(_QWORD *)&v6[0];
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v2;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)&v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
      goto LABEL_6;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = LOBYTE(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = LOWORD(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = LODWORD(v6[0]);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)&v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
      goto LABEL_6;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -9.22337204e18)
      {
        if (v6[0] < 9.22337204e18)
        {
LABEL_31:
          v2 = (uint64_t)v4;
          goto LABEL_6;
        }
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -9.2234e18)
      {
        if (*(float *)v6 < 9.2234e18)
        {
          v2 = (uint64_t)*(float *)v6;
          goto LABEL_6;
        }
        goto LABEL_53;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v2 = v1 + 8;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    if (v6[0] <= -9.22337204e18)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v6[0] < 9.22337204e18)
      goto LABEL_31;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_47:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v6[0] > -9.22337204e18)
  {
    if (v6[0] < 9.22337204e18)
      goto LABEL_31;
    __break(1u);
    goto LABEL_47;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_18EC524C4(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
    goto LABEL_2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_49;
    }
    if (*(_QWORD *)&v6[0] <= 0xFFuLL)
      goto LABEL_26;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = SLOBYTE(v6[0]);
    if ((LODWORD(v2) & 0x80000000) == 0)
      goto LABEL_26;
    __break(1u);
  }
  *(_QWORD *)&v2 = v1 + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (SLOWORD(v6[0]) < 0)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *(_QWORD *)&v2 = LOWORD(v6[0]);
    if (LOWORD(v6[0]) <= 0xFFu)
      goto LABEL_26;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_QWORD *)&v2 = LODWORD(v6[0]);
    if ((LODWORD(v6[0]) & 0x80000000) != 0)
    {
      __break(1u);
      goto LABEL_62;
    }
    if (LODWORD(v6[0]) <= 0xFF)
      goto LABEL_26;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)&v6[0] <= 0xFFuLL)
        goto LABEL_26;
      __break(1u);
      goto LABEL_24;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_24:
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v2 = v6[0];
    if (*(_QWORD *)&v6[0] <= 0xFFuLL)
      goto LABEL_26;
    goto LABEL_63;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_2:
    *(_QWORD *)&v2 = LOBYTE(v6[0]);
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(_QWORD *)&v2;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LOWORD(v6[0]);
    if (LOWORD(v6[0]) <= 0xFFu)
      goto LABEL_26;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v2 = LODWORD(v6[0]);
    if (LODWORD(v6[0]) <= 0xFF)
      goto LABEL_26;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if (*(_QWORD *)&v6[0] <= 0xFFuLL)
      goto LABEL_26;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v6[0] <= -1.0)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v6[0] >= 256.0)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_42:
    *(_QWORD *)&v2 = (int)v4;
    goto LABEL_26;
  }
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -1.0)
      {
        if (*(float *)v6 < 256.0)
        {
          *(_QWORD *)&v2 = (int)*(float *)v6;
          goto LABEL_26;
        }
        goto LABEL_69;
      }
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
LABEL_49:
  *(_QWORD *)&v2 = v1 + 8;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v6[0] <= -1.0)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v6[0] < 256.0)
      goto LABEL_42;
    __break(1u);
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_60:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return *(_QWORD *)&v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v6[0] > -1.0)
  {
    if (v6[0] < 256.0)
      goto LABEL_42;
    __break(1u);
    goto LABEL_59;
  }
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_18EC52934(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(_QWORD *)&v2 = LOWORD(v6[0]);
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(_QWORD *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  *(_QWORD *)&v2 = v1 + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_47;
    }
    if (!(*(_QWORD *)&v6[0] >> 16))
      goto LABEL_25;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_QWORD *)&v2 = SLOWORD(v6[0]);
      if ((LODWORD(v2) & 0x80000000) == 0)
        goto LABEL_25;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      *(_QWORD *)&v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) != 0)
      {
        __break(1u);
        goto LABEL_60;
      }
      if (!HIWORD(LODWORD(v6[0])))
        goto LABEL_25;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
LABEL_23:
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v2 = v6[0];
        if (!(*(_QWORD *)&v6[0] >> 16))
          goto LABEL_25;
        goto LABEL_61;
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)&v2 = LOBYTE(v6[0]);
        goto LABEL_25;
      }
      if ((swift_dynamicCast() & 1) != 0)
        goto LABEL_2;
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)&v2 = LODWORD(v6[0]);
        if (!HIWORD(LODWORD(v6[0])))
          goto LABEL_25;
        __break(1u);
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        v2 = v6[0];
        if (!(*(_QWORD *)&v6[0] >> 16))
          goto LABEL_25;
        __break(1u);
      }
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v4 = v6[0];
        if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -1.0)
          {
            if (v6[0] < 65536.0)
              goto LABEL_40;
            goto LABEL_64;
          }
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
        {
          if (*(float *)v6 > -1.0)
          {
            if (*(float *)v6 < 65536.0)
            {
              *(_QWORD *)&v2 = (int)*(float *)v6;
              goto LABEL_25;
            }
            goto LABEL_67;
          }
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
LABEL_47:
      *(_QWORD *)&v2 = v1 + 8;
      result = swift_dynamicCast();
      if ((result & 1) == 0)
        goto LABEL_53;
      v4 = v6[0];
      if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
      {
        if (v6[0] > -1.0)
        {
          if (v6[0] < 65536.0)
            goto LABEL_40;
          __break(1u);
          goto LABEL_52;
        }
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v2 = v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
    {
      if (!(*(_QWORD *)&v6[0] >> 16))
        goto LABEL_25;
      __break(1u);
      goto LABEL_23;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    *(_QWORD *)&v2 = LOBYTE(v6[0]);
    goto LABEL_25;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_58:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return *(_QWORD *)&v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    goto LABEL_70;
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 65536.0)
    {
      __break(1u);
      goto LABEL_58;
    }
LABEL_40:
    *(_QWORD *)&v2 = (int)v4;
    goto LABEL_25;
  }
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_18EC52D94(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(_QWORD *)&v2 = LODWORD(v6[0]);
LABEL_24:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(_QWORD *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  *(_QWORD *)&v2 = v1 + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_45;
    }
    if (!HIDWORD(*(_QWORD *)&v6[0]))
      goto LABEL_24;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)&v2 = v1 + 8;
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((SLOWORD(v6[0]) & 0x80000000) == 0)
      {
        *(_QWORD *)&v2 = LOWORD(v6[0]);
        goto LABEL_24;
      }
      goto LABEL_56;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_QWORD *)&v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) == 0)
        goto LABEL_24;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v2 = v6[0];
      if ((*(_QWORD *)&v6[0] & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if (!HIDWORD(*(_QWORD *)&v6[0]))
        goto LABEL_24;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v2 = v6[0];
      if (!HIDWORD(*(_QWORD *)&v6[0]))
        goto LABEL_24;
      goto LABEL_59;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_QWORD *)&v2 = LOBYTE(v6[0]);
      goto LABEL_24;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_QWORD *)&v2 = LOWORD(v6[0]);
      goto LABEL_24;
    }
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_2;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = v6[0];
      if (!HIDWORD(*(_QWORD *)&v6[0]))
        goto LABEL_24;
      __break(1u);
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v4 = v6[0];
      if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
      {
        if (v6[0] > -1.0)
        {
          if (v6[0] < 4294967300.0)
            goto LABEL_38;
          goto LABEL_62;
        }
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
      {
        if (*(float *)v6 > -1.0)
        {
          if (*(float *)v6 < 4295000000.0)
          {
            *(_QWORD *)&v2 = *(float *)v6;
            goto LABEL_24;
          }
          goto LABEL_65;
        }
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
LABEL_45:
    *(_QWORD *)&v2 = v1 + 8;
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      goto LABEL_51;
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -1.0)
      {
        if (v6[0] < 4294967300.0)
          goto LABEL_38;
        __break(1u);
        goto LABEL_50;
      }
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    *(_QWORD *)&v2 = LOBYTE(v6[0]);
    goto LABEL_24;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_57:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return *(_QWORD *)&v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    goto LABEL_68;
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 4294967300.0)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
LABEL_38:
    *(_QWORD *)&v2 = v4;
    goto LABEL_24;
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_18EC531E8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  double v4;
  _BYTE *v5;
  double v6[5];
  _BYTE v7[32];

  sub_18EC1B600(a1, (uint64_t)v7);
  v1 = MEMORY[0x1E0DEE9B8];
  if (swift_dynamicCast())
  {
LABEL_2:
    v2 = *(_QWORD *)&v6[0];
LABEL_38:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if ((swift_dynamicCast() & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  v2 = v1 + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)&v6[0];
    if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
      goto LABEL_38;
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    v2 = v1 + 8;
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((SLOWORD(v6[0]) & 0x80000000) == 0)
      {
        v2 = LOWORD(v6[0]);
        goto LABEL_38;
      }
      goto LABEL_51;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) == 0)
        goto LABEL_38;
      __break(1u);
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = *(_QWORD *)&v6[0];
      if ((*(_QWORD *)&v6[0] & 0x8000000000000000) == 0)
        goto LABEL_38;
      __break(1u);
    }
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_2;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = LOBYTE(v6[0]);
      goto LABEL_38;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = LOWORD(v6[0]);
      goto LABEL_38;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = LODWORD(v6[0]);
      goto LABEL_38;
    }
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_2;
    result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
      result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
        v2 = v1 + 8;
        result = swift_dynamicCast();
        if ((result & 1) == 0)
          goto LABEL_46;
        v4 = v6[0];
        if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -1.0)
          {
            if (v6[0] < 1.84467441e19)
              goto LABEL_32;
            __break(1u);
            goto LABEL_45;
          }
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
      {
        if (*(float *)v6 > -1.0)
        {
          if (*(float *)v6 < 1.8447e19)
          {
            v2 = (unint64_t)*(float *)v6;
            goto LABEL_38;
          }
          goto LABEL_58;
        }
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v4 = v6[0];
    if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -1.0)
      {
        if (v6[0] < 1.84467441e19)
          goto LABEL_32;
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    v2 = LOBYTE(v6[0]);
    goto LABEL_38;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_52:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18EC1A5D0();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
    return v2;
  }
  v4 = v6[0];
  if ((~*(_QWORD *)&v6[0] & 0x7FF0000000000000) == 0)
    goto LABEL_61;
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 1.84467441e19)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_32:
    v2 = (unint64_t)v4;
    goto LABEL_38;
  }
LABEL_62:
  __break(1u);
  return result;
}

_QWORD *AXMigratingDecoder.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  v0 = (_QWORD *)swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = sub_18EC585F0(v1);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  return v0;
}

uint64_t sub_18EC536C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC5371C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC53750(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC53794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC537F0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC53824(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18EC53868())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *sub_18EC538A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;

  v5 = MEMORY[0x1E0DEE9D8];
  v2[2] = MEMORY[0x1E0DEE9D8];
  v2[3] = sub_18EC585F0(v5);
  type metadata accessor for AXDataHolder();
  memset(v8, 0, sizeof(v8));
  v9 = 0;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v8, v6 + 16);
  swift_endAccess();
  v2[4] = v6;
  swift_beginAccess();
  v2[2] = a1;
  swift_bridgeObjectRelease();
  v2[4] = a2;
  swift_release();
  return v2;
}

_QWORD *AXMigratingDecoder.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  v1 = MEMORY[0x1E0DEE9D8];
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = sub_18EC585F0(v1);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  return v0;
}

uint64_t sub_18EC53A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;

  swift_beginAccess();
  v5 = *(_QWORD **)(v2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC1A9B8(a2, v5);
  swift_release();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    type metadata accessor for AXMigratingDecoder();
    sub_18EC53F54(&qword_1EE139A40, v7, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingDecoder, (uint64_t)&protocol conformance descriptor for AXMigratingDecoder);
    swift_retain();
    return sub_18EC674A0();
  }
  return result;
}

uint64_t type metadata accessor for AXMigratingDecoder()
{
  return objc_opt_self();
}

uint64_t sub_18EC53B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  sub_18EC1B578(a2, (uint64_t)v10);
  type metadata accessor for AXDataHolder();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v10, v6 + 16);
  swift_endAccess();
  *(_QWORD *)(v3 + 32) = v6;
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v7 = swift_bridgeObjectRelease();
  result = sub_18EC53A2C(v7, a3);
  if (!v4)
  {
    v9 = *(_QWORD *)(v3 + 32);
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    swift_beginAccess();
    swift_retain();
    sub_18EC1B9D8((uint64_t)v10, v9 + 16);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_18EC53C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for AXMigratingKeyedDecoding(0, a2, a3, a4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  MEMORY[0x193FFA51C](&unk_18EC6D6B8, v5);
  return sub_18EC677A0();
}

uint64_t type metadata accessor for AXMigratingKeyedDecoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXMigratingKeyedDecoding);
}

uint64_t sub_18EC53D54(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_18EC53D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = type metadata accessor for AXMigratingUnKeyedDecoding();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = xmmword_18EC6D300;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  a1[3] = v5;
  a1[4] = sub_18EC53F54((unint64_t *)&unk_1EE139A58, v7, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding, (uint64_t)&protocol conformance descriptor for AXMigratingUnKeyedDecoding);
  *a1 = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for AXMigratingUnKeyedDecoding()
{
  return objc_opt_self();
}

uint64_t sub_18EC53E74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = type metadata accessor for AXMigratingSingleValueDecoding();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  a1[3] = v5;
  a1[4] = sub_18EC53F54(&qword_1EE139A20, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingSingleValueDecoding, (uint64_t)&unk_18EC6D600);
  *a1 = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for AXMigratingSingleValueDecoding()
{
  return objc_opt_self();
}

uint64_t sub_18EC53F54(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x193FFA51C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AXMigratingDecoder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AXMigratingDecoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC53FF4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC54034()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC54074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC53C90(a1, a2, a3, a4);
}

uint64_t sub_18EC54094@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC53D90(a1);
}

uint64_t sub_18EC540B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = type metadata accessor for AXMigratingSingleValueDecoding();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v5;
  a1[3] = v6;
  a1[4] = sub_18EC53F54(&qword_1EE139A20, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingSingleValueDecoding, (uint64_t)&unk_18EC6D600);
  *a1 = v7;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_18EC54178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[5];

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  sub_18EC1B130(v0, (uint64_t)v5);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v5[3])
  {
    sub_18EC1E58C((uint64_t)v5, &qword_1EE139AA0);
    return sub_18EC67308();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
  v1 = swift_dynamicCast();
  if ((v1 & 1) == 0)
    return sub_18EC67308();
  v5[0] = v4;
  MEMORY[0x1E0C80A78](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B558);
  sub_18EC58354();
  v2 = sub_18EC6729C();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_18EC542B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _BOOL8 v8;
  _QWORD v10[5];

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  v10[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC1B130(v4, (uint64_t)v10);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = v10[3] != 0;
  sub_18EC1E58C((uint64_t)v10, &qword_1EE139AA0);
  return v8;
}

uint64_t sub_18EC543A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  char v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  *(_QWORD *)&v13[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC1B130(v4, (uint64_t)&v10);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v11 + 1))
  {
    v13[0] = v10;
    v13[1] = v11;
    v14 = v12;
    v8 = sub_18EC4E9E8();
    sub_18EC1B5B4((uint64_t)v13);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v10, &qword_1EE139AA0);
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_18EC544D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  LOBYTE(v4) = sub_18EC50068(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

_OWORD *sub_18EC545C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _OWORD *v8;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v8 = sub_18EC50178(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

double sub_18EC546B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  double v8;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v8 = sub_18EC50298(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

float sub_18EC547A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  float v8;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v8 = sub_18EC503B0(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

_OWORD *sub_18EC5489C(uint64_t a1)
{
  return sub_18EC54938(a1, MEMORY[0x1E0DEB418], (uint64_t (*)(__int128 *, uint64_t))sub_18EC520A4);
}

_OWORD *sub_18EC548C0(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC51320);
}

_OWORD *sub_18EC548DC(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC517B8);
}

_OWORD *sub_18EC548F8(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC51C34);
}

_OWORD *sub_18EC54914(uint64_t a1)
{
  return sub_18EC54938(a1, MEMORY[0x1E0DEDC60], (uint64_t (*)(__int128 *, uint64_t))sub_18EC520A4);
}

_OWORD *sub_18EC54938(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int128 *, uint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  _OWORD *v12;

  v7 = *v3;
  v8 = (_QWORD *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v10 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a1, v10);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = sub_18EC505E4(v8, a2, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v12;
}

_OWORD *sub_18EC54A3C(uint64_t a1)
{
  return sub_18EC54938(a1, MEMORY[0x1E0DEBB98], (uint64_t (*)(__int128 *, uint64_t))sub_18EC531E8);
}

_OWORD *sub_18EC54A60(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC524C4);
}

_OWORD *sub_18EC54A7C(uint64_t a1, uint64_t (*a2)(__int128 *))
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _OWORD *v10;

  v5 = *v2;
  v6 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v10 = sub_18EC504C8(v6, a2);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

_OWORD *sub_18EC54B70(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC52934);
}

_OWORD *sub_18EC54B8C(uint64_t a1)
{
  return sub_18EC54A7C(a1, (uint64_t (*)(__int128 *))sub_18EC52D94);
}

_OWORD *sub_18EC54BA8(uint64_t a1)
{
  return sub_18EC54938(a1, MEMORY[0x1E0DEE190], (uint64_t (*)(__int128 *, uint64_t))sub_18EC531E8);
}

uint64_t sub_18EC54BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  _QWORD *v13;

  v4 = v3;
  v7 = *v4;
  v8 = v4[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v10 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = v4[3];
  type metadata accessor for AXMigratingDecoder();
  swift_allocObject();
  swift_retain();
  v13 = sub_18EC538A4(v8, v12);
  sub_18EC53A2C((uint64_t)v13, a3);
  return swift_release();
}

uint64_t sub_18EC54CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  v7 = *v5;
  v8 = type metadata accessor for AXMigratingKeyedDecoding(0, a3, a4, a4);
  v9 = v5[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v11 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, a2, v11);
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v13 = v5[3];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  swift_retain();
  MEMORY[0x193FFA51C](&unk_18EC6D6B8, v8);
  return sub_18EC677A0();
}

uint64_t sub_18EC54E18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  v7 = v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v9 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v11 = v3[3];
  v12 = type metadata accessor for AXMigratingUnKeyedDecoding();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 32) = xmmword_18EC6D300;
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v11;
  a2[3] = v12;
  a2[4] = sub_18EC53F54((unint64_t *)&unk_1EE139A58, v14, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding, (uint64_t)&protocol conformance descriptor for AXMigratingUnKeyedDecoding);
  *a2 = v13;
  return swift_retain();
}

uint64_t sub_18EC54F38@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(v4 + 80);
  v6 = sub_18EC67524();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + 88);
  sub_18EC67B3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
    v15 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(inited + 56) = v5;
    *(_QWORD *)(inited + 64) = v13;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_0, v12, v5);
    v24 = v15;
    swift_bridgeObjectRetain();
    sub_18EC57D0C((_QWORD *)inited);
    v18 = v24;
    v19 = v2[3];
    v20 = type metadata accessor for AXMigratingDecoder();
    v21 = swift_allocObject();
    swift_retain();
    sub_18EC538A4(v18, v19);
    a1[3] = v20;
    a1[4] = sub_18EC53F54(&qword_1EE139A40, v22, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingDecoder, (uint64_t)&protocol conformance descriptor for AXMigratingDecoder);
    *a1 = v21;
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v5);
  }
  return result;
}

uint64_t sub_18EC5511C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v3 = v2;
  v6 = *v3;
  v7 = v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v9 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v11 = v7;
  v12 = v3[3];
  v13 = type metadata accessor for AXMigratingDecoder();
  v14 = swift_allocObject();
  swift_retain();
  sub_18EC538A4(v11, v12);
  a2[3] = v13;
  result = sub_18EC53F54(&qword_1EE139A40, v15, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingDecoder, (uint64_t)&protocol conformance descriptor for AXMigratingDecoder);
  a2[4] = result;
  *a2 = v14;
  return result;
}

uint64_t sub_18EC5523C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC55268()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC55274()
{
  return sub_18EC54178();
}

BOOL sub_18EC55294(uint64_t a1)
{
  return sub_18EC542B8(a1);
}

uint64_t sub_18EC552B8(uint64_t a1)
{
  return sub_18EC543A8(a1) & 1;
}

uint64_t sub_18EC552DC(uint64_t a1)
{
  return sub_18EC544D4(a1) & 1;
}

_OWORD *sub_18EC55300(uint64_t a1)
{
  return sub_18EC545C0(a1);
}

double sub_18EC55320(uint64_t a1)
{
  return sub_18EC546B4(a1);
}

float sub_18EC55340(uint64_t a1)
{
  return sub_18EC547A8(a1);
}

_OWORD *sub_18EC55360(uint64_t a1)
{
  return sub_18EC5489C(a1);
}

_OWORD *sub_18EC55380(uint64_t a1)
{
  return sub_18EC548C0(a1);
}

_OWORD *sub_18EC553A0(uint64_t a1)
{
  return sub_18EC548DC(a1);
}

_OWORD *sub_18EC553C0(uint64_t a1)
{
  return sub_18EC548F8(a1);
}

_OWORD *sub_18EC553E0(uint64_t a1)
{
  return sub_18EC54914(a1);
}

uint64_t sub_18EC55400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC554D8(a1, a2, a3, MEMORY[0x1E0DED858]);
}

_OWORD *sub_18EC5541C(uint64_t a1)
{
  return sub_18EC54A3C(a1);
}

_OWORD *sub_18EC5543C(uint64_t a1)
{
  return sub_18EC54A60(a1);
}

_OWORD *sub_18EC5545C(uint64_t a1)
{
  return sub_18EC54B70(a1);
}

_OWORD *sub_18EC5547C(uint64_t a1)
{
  return sub_18EC54B8C(a1);
}

_OWORD *sub_18EC5549C(uint64_t a1)
{
  return sub_18EC54BA8(a1);
}

uint64_t sub_18EC554BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC554D8(a1, a2, a3, MEMORY[0x1E0DED860]);
}

uint64_t sub_18EC554D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3);
}

uint64_t sub_18EC5552C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC54BCC(a1, a2, a3);
}

uint64_t sub_18EC5554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_18EC679F8();
}

uint64_t sub_18EC5559C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_18EC679EC();
}

uint64_t sub_18EC555EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55898(a1, a2, a3, MEMORY[0x1E0DED7E0]);
}

uint64_t sub_18EC55608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC5580C(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_18EC55624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55898(a1, a2, a3, MEMORY[0x1E0DED7F0]);
}

uint64_t sub_18EC55640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55704(a1, a2, a3, MEMORY[0x1E0DED808]);
}

uint64_t sub_18EC5565C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55788(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_18EC55678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC5580C(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_18EC55694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55898(a1, a2, a3, MEMORY[0x1E0DED820]);
}

uint64_t sub_18EC556B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55914(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_18EC556CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55898(a1, a2, a3, MEMORY[0x1E0DED7F8]);
}

uint64_t sub_18EC556E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55704(a1, a2, a3, MEMORY[0x1E0DED828]);
}

uint64_t sub_18EC55704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_18EC5576C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55788(a1, a2, a3, MEMORY[0x1E0DED838]);
}

uint64_t sub_18EC55788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3) & 0x1FFFF;
}

uint64_t sub_18EC557F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC5580C(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_18EC5580C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;

  v7 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_18EC5587C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55898(a1, a2, a3, MEMORY[0x1E0DED848]);
}

uint64_t sub_18EC55898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  result = a4(a1, v8, a3);
  if (v4)
    return v10;
  return result;
}

uint64_t sub_18EC558F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC55914(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_18EC55914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  result = a4(a1, v8, a3);
  if (v4)
    return v10;
  return result;
}

uint64_t sub_18EC55978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for AXMigratingKeyedDecoding(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_18EC67A04();
}

uint64_t sub_18EC559F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC54CEC(a1, a2, a3, a4);
}

uint64_t sub_18EC55A14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18EC54E18(a1, a2);
}

uint64_t sub_18EC55A34@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC54F38(a1);
}

uint64_t sub_18EC55A54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18EC5511C(a1, a2);
}

uint64_t AXMigratingUnKeyedDecoding.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC55A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = v1;
  if (v1 == 1)
  {
    v2 = sub_18EC55AD8(v0);
    v3 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v2;
    swift_bridgeObjectRetain();
    sub_18EC57E08(v3);
  }
  sub_18EC583A0(v1);
  return v2;
}

uint64_t sub_18EC55AD8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  v1 = *(_QWORD **)(a1 + 16);
  swift_retain();
  sub_18EC1B130(v1, (uint64_t)v11);
  swift_release();
  if (!v12)
  {
    sub_18EC1E58C((uint64_t)v11, &qword_1EE139AA0);
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A78);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    goto LABEL_7;
  }
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_7:
    sub_18EC1E58C((uint64_t)&v8, &qword_1EE13B568);
    return 0;
  }
  sub_18EC1B5E8(&v8, (uint64_t)v11);
  v2 = __swift_project_boxed_opaque_existential_1(v11, v12);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *))(v4 + 16))((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedTypeWitness();
  sub_18EC67344();
  v5 = sub_18EC676E0();
  swift_bridgeObjectRelease();
  v6 = sub_18EC55C88(v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v6;
}

uint64_t sub_18EC55C88(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[32];
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  sub_18EC201CC(0, v2, 0);
  v3 = v16;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_18EC1B600(i, (uint64_t)v15);
      if (!swift_dynamicCast())
        break;
      v9 = v12;
      v10 = v13;
      v11 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_18EC201CC(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v16;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_18EC201CC((char *)(v5 > 1), v6 + 1, 1);
        v3 = v16;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 40 * v6;
      *(_QWORD *)(v7 + 64) = v11;
      *(_OWORD *)(v7 + 32) = v9;
      *(_OWORD *)(v7 + 48) = v10;
      if (!--v2)
        return v3;
    }
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    swift_release();
    sub_18EC1E58C((uint64_t)&v12, &qword_1EE139AA0);
    return 0;
  }
  return v3;
}

uint64_t sub_18EC55DF0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_18EC55A7C();
  if (!v0)
    return 0;
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18EC55E34()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_18EC55E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_18EC55EA0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18EC55EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = sub_18EC55A7C();
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (v1 == v3)
      return 1;
  }
  if (!sub_18EC55A7C())
    return 1;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18EC55F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v2 = sub_18EC55A7C();
  if (!v2)
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    goto LABEL_6;
  }
  v1 = v2;
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= *(_QWORD *)(v1 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v1 + 40 * v4 + 32, (uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v8 = 2;
    swift_willThrow();
    return v1;
  }
  v1 = v9;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (!v6)
  {
    *(_QWORD *)(v0 + 40) = v7;
    return v1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC5607C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _BYTE *v8;
  _OWORD v9[2];
  uint64_t v10;

  v1 = sub_18EC55A7C();
  if (!v1)
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    goto LABEL_6;
  }
  v2 = v1;
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 >= *(_QWORD *)(v2 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_18EC1B578(v2 + 40 * v4 + 32, (uint64_t)v9);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v8 = 2;
    return swift_willThrow();
  }
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (!v6)
  {
    *(_QWORD *)(v0 + 40) = v7;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_18EC561A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _BYTE *v8;
  _OWORD v9[2];
  uint64_t v10;

  v1 = sub_18EC55A7C();
  if (!v1)
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    goto LABEL_6;
  }
  v2 = v1;
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 >= *(_QWORD *)(v2 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_18EC1B578(v2 + 40 * v4 + 32, (uint64_t)v9);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v8 = 2;
    return swift_willThrow();
  }
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (!v6)
  {
    *(_QWORD *)(v0 + 40) = v7;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_18EC562D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _BYTE *v10;
  _OWORD v11[2];
  uint64_t v12;
  unsigned __int8 v13;

  v3 = sub_18EC55A7C();
  if (!v3)
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  v4 = v3;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(_QWORD *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 40);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC56400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _BYTE *v10;
  _OWORD v11[2];
  uint64_t v12;
  unsigned __int16 v13;

  v3 = sub_18EC55A7C();
  if (!v3)
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  v4 = v3;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(_QWORD *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 40);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC5652C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _BYTE *v10;
  _OWORD v11[2];
  uint64_t v12;
  unsigned int v13;

  v3 = sub_18EC55A7C();
  if (!v3)
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  v4 = v3;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(_QWORD *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 40);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC56658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v3 = sub_18EC55A7C();
  if (!v3)
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    goto LABEL_6;
  }
  v4 = v3;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(_QWORD *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v4 + 40 * v6 + 32, (uint64_t)v12);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v11;
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 40);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC56784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE *v9;
  _OWORD v10[2];
  uint64_t v11;
  char v12;

  v1 = sub_18EC55A7C();
  if (!v1)
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    goto LABEL_6;
  }
  v2 = v1;
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= *(_QWORD *)(v2 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18EC1B578(v2 + 40 * v4 + 32, (uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AA0);
  if (!swift_dynamicCast())
  {
    sub_18EC1A5D0();
    swift_allocError();
    *v9 = 2;
    swift_willThrow();
    return v8 & 1;
  }
  v5 = v12;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 40);
  v7 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    v8 = v5 & 1;
    *(_QWORD *)(v0 + 40) = v7;
    return v8 & 1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18EC568B4()
{
  return sub_18EC55F4C();
}

uint64_t sub_18EC568C8()
{
  return sub_18EC5607C();
}

uint64_t sub_18EC568DC()
{
  return sub_18EC561A8();
}

uint64_t sub_18EC568F0()
{
  return sub_18EC56658(MEMORY[0x1E0DEB418]);
}

uint64_t sub_18EC5690C()
{
  return sub_18EC562D4(MEMORY[0x1E0DEDA70]);
}

uint64_t sub_18EC56928()
{
  return sub_18EC56400(MEMORY[0x1E0DEDB58]);
}

uint64_t sub_18EC56944()
{
  return sub_18EC5652C(MEMORY[0x1E0DEDBC8]);
}

uint64_t sub_18EC56960()
{
  return sub_18EC56658(MEMORY[0x1E0DEDC60]);
}

uint64_t sub_18EC5697C()
{
  return sub_18EC56658(MEMORY[0x1E0DEBB98]);
}

uint64_t sub_18EC56998()
{
  return sub_18EC562D4(MEMORY[0x1E0DEDE70]);
}

uint64_t sub_18EC569B4()
{
  return sub_18EC56400(MEMORY[0x1E0DEE068]);
}

uint64_t sub_18EC569D0()
{
  return sub_18EC5652C(MEMORY[0x1E0DEE0F8]);
}

uint64_t sub_18EC569EC()
{
  return sub_18EC56658(MEMORY[0x1E0DEE190]);
}

uint64_t sub_18EC56A08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v3 = v2;
  swift_beginAccess();
  v5 = v2[5];
  sub_18EC56B84();
  result = sub_18EC67560();
  v8 = v2[5];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    v11 = result;
    v12 = v7;
    v3[5] = v10;
    v13 = v3[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v15 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(v15 + 16) = v5;
    *(_BYTE *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    swift_bridgeObjectRetain();
    sub_18EC57D0C((_QWORD *)inited);
    v16 = v3[3];
    type metadata accessor for AXMigratingDecoder();
    swift_allocObject();
    swift_retain();
    v17 = sub_18EC538A4(v13, v16);
    sub_18EC53A2C((uint64_t)v17, a2);
    return swift_release();
  }
  return result;
}

unint64_t sub_18EC56B84()
{
  unint64_t result;

  result = qword_1EE139A10;
  if (!qword_1EE139A10)
  {
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE139A10);
  }
  return result;
}

uint64_t sub_18EC56BC8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18EC56BEC()
{
  return sub_18EC56784() & 1;
}

uint64_t sub_18EC56C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v1 = sub_18EC55A7C();
  if (!v1)
  {
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    goto LABEL_6;
  }
  result = swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 40);
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < *(_QWORD *)(v1 + 16))
  {
    sub_18EC1B578(v1 + 40 * v3 + 32, (uint64_t)v7);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_18EC1E58C((uint64_t)v7, &qword_1EE139AA0);
    result = swift_beginAccess();
    v4 = *(_QWORD *)(v0 + 40);
    v5 = __OFADD__(v4, 1);
    v6 = v4 + 1;
    if (!v5)
    {
      result = v1 == 0;
      *(_QWORD *)(v0 + 40) = v6;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_18EC56CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  swift_beginAccess();
  v7 = v3[5];
  sub_18EC56B84();
  result = sub_18EC67560();
  v10 = v3[5];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    v13 = result;
    v14 = v9;
    v4[5] = v12;
    v15 = a3;
    v16 = v4[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v7;
    *(_BYTE *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = v13;
    *(_QWORD *)(v18 + 40) = v14;
    swift_bridgeObjectRetain();
    sub_18EC57D0C((_QWORD *)inited);
    v20 = type metadata accessor for AXMigratingKeyedDecoding(0, a2, v15, v19);
    v21 = v4[3];
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v16;
    *(_QWORD *)(v22 + 24) = v21;
    swift_retain();
    MEMORY[0x193FFA51C](&unk_18EC6D6B8, v20);
    return sub_18EC677A0();
  }
  return result;
}

uint64_t sub_18EC56E68@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  swift_beginAccess();
  v4 = v1[5];
  sub_18EC56B84();
  result = sub_18EC67560();
  v7 = v1[5];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    v2[5] = v9;
    v12 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v14 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(v14 + 16) = v4;
    *(_BYTE *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_18EC57D0C((_QWORD *)inited);
    v15 = v12;
    v16 = v2[3];
    v17 = type metadata accessor for AXMigratingUnKeyedDecoding();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 32) = xmmword_18EC6D300;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v16;
    a1[3] = v17;
    a1[4] = sub_18EC53F54((unint64_t *)&unk_1EE139A58, v19, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding, (uint64_t)&protocol conformance descriptor for AXMigratingUnKeyedDecoding);
    *a1 = v18;
    return swift_retain();
  }
  return result;
}

uint64_t sub_18EC56FDC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  swift_beginAccess();
  v4 = v1[5];
  sub_18EC56B84();
  result = sub_18EC67560();
  v7 = v1[5];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    v2[5] = v9;
    v12 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v14 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(v14 + 16) = v4;
    *(_BYTE *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_18EC57D0C((_QWORD *)inited);
    v15 = v2[3];
    v16 = type metadata accessor for AXMigratingDecoder();
    v17 = swift_allocObject();
    swift_retain();
    sub_18EC538A4(v12, v15);
    a1[3] = v16;
    result = sub_18EC53F54(&qword_1EE139A40, v18, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingDecoder, (uint64_t)&protocol conformance descriptor for AXMigratingDecoder);
    a1[4] = result;
    *a1 = v17;
  }
  return result;
}

uint64_t AXMigratingUnKeyedDecoding.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_18EC57E08(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t AXMigratingUnKeyedDecoding.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_18EC57E08(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_18EC571B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_18EC55A7C();
  if (!v0)
    return 0;
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18EC571F8()
{
  return sub_18EC55EDC() & 1;
}

uint64_t sub_18EC5721C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 40);
}

uint64_t sub_18EC57258()
{
  return sub_18EC56C04() & 1;
}

uint64_t sub_18EC5727C()
{
  return sub_18EC56784() & 1;
}

uint64_t sub_18EC572A0()
{
  return sub_18EC55F4C();
}

uint64_t sub_18EC572C0()
{
  return sub_18EC5607C();
}

uint64_t sub_18EC572E0()
{
  return sub_18EC561A8();
}

uint64_t sub_18EC57300()
{
  return sub_18EC56658(MEMORY[0x1E0DEB418]);
}

uint64_t sub_18EC57328()
{
  return sub_18EC562D4(MEMORY[0x1E0DEDA70]);
}

uint64_t sub_18EC57350()
{
  return sub_18EC56400(MEMORY[0x1E0DEDB58]);
}

uint64_t sub_18EC57378()
{
  return sub_18EC5652C(MEMORY[0x1E0DEDBC8]);
}

uint64_t sub_18EC573A0()
{
  return sub_18EC56658(MEMORY[0x1E0DEDC60]);
}

uint64_t sub_18EC573C8()
{
  return sub_18EC67878();
}

uint64_t sub_18EC573DC()
{
  return sub_18EC56658(MEMORY[0x1E0DEBB98]);
}

uint64_t sub_18EC57404()
{
  return sub_18EC562D4(MEMORY[0x1E0DEDE70]);
}

uint64_t sub_18EC5742C()
{
  return sub_18EC56400(MEMORY[0x1E0DEE068]);
}

uint64_t sub_18EC57454()
{
  return sub_18EC5652C(MEMORY[0x1E0DEE0F8]);
}

uint64_t sub_18EC5747C()
{
  return sub_18EC56658(MEMORY[0x1E0DEE190]);
}

uint64_t sub_18EC574A4()
{
  return sub_18EC67884();
}

uint64_t sub_18EC574B8(uint64_t a1, uint64_t a2)
{
  return sub_18EC56A08(a1, a2);
}

uint64_t sub_18EC574D8()
{
  return sub_18EC67824();
}

uint64_t sub_18EC574EC()
{
  return sub_18EC67818();
}

uint64_t sub_18EC57500()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_18EC67830();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_18EC57520(uint64_t a1, uint64_t a2)
{
  return sub_18EC576B0(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_18EC5753C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_18EC6783C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_18EC5755C(uint64_t a1, uint64_t a2)
{
  return sub_18EC57628(a1, a2, MEMORY[0x1E0DED300]);
}

uint64_t sub_18EC57578(uint64_t a1, uint64_t a2)
{
  return sub_18EC5766C(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_18EC57594(uint64_t a1, uint64_t a2)
{
  return sub_18EC576B0(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_18EC575B0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_18EC67860();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_18EC575D0(uint64_t a1, uint64_t a2)
{
  return sub_18EC5771C(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_18EC575EC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_18EC67848();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_18EC5760C(uint64_t a1, uint64_t a2)
{
  return sub_18EC57628(a1, a2, MEMORY[0x1E0DED320]);
}

uint64_t sub_18EC57628(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_18EC57650(uint64_t a1, uint64_t a2)
{
  return sub_18EC5766C(a1, a2, MEMORY[0x1E0DED330]);
}

uint64_t sub_18EC5766C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_18EC57694(uint64_t a1, uint64_t a2)
{
  return sub_18EC576B0(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_18EC576B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_18EC576E0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_18EC6786C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_18EC57700(uint64_t a1, uint64_t a2)
{
  return sub_18EC5771C(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_18EC5771C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_18EC57740()
{
  return sub_18EC67854();
}

uint64_t sub_18EC57768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC56CE0(a1, a2, a3);
}

uint64_t sub_18EC57788@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC56E68(a1);
}

uint64_t sub_18EC577A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC56FDC(a1);
}

uint64_t sub_18EC577C8()
{
  _QWORD *v0;
  char v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  sub_18EC1B130(v0, (uint64_t)&v3);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v4 + 1))
  {
    v6[0] = v3;
    v6[1] = v4;
    v7 = v5;
    v1 = sub_18EC4E9E8();
    sub_18EC1B5B4((uint64_t)v6);
  }
  else
  {
    sub_18EC1E58C((uint64_t)&v3, &qword_1EE139AA0);
    v1 = 1;
  }
  return v1 & 1;
}

uint64_t sub_18EC5786C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  type metadata accessor for AXMigratingDecoder();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = sub_18EC538A4(v5, v4);
  sub_18EC53A2C((uint64_t)v6, a2);
  return swift_release();
}

uint64_t sub_18EC57908()
{
  return sub_18EC577C8() & 1;
}

uint64_t sub_18EC5792C()
{
  _QWORD *v0;
  char v1;

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  v1 = sub_18EC50068(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

_OWORD *sub_18EC57988()
{
  _QWORD *v0;
  _OWORD *v1;

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  v1 = sub_18EC50178(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

double sub_18EC579F4()
{
  _QWORD *v0;
  double v1;

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  v1 = sub_18EC50298(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

float sub_18EC57A58()
{
  _QWORD *v0;
  float v1;

  swift_retain();
  v0 = (_QWORD *)swift_bridgeObjectRetain();
  v1 = sub_18EC503B0(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

_OWORD *sub_18EC57ABC(uint64_t a1, uint64_t a2)
{
  return sub_18EC57B58(a1, a2, MEMORY[0x1E0DEB418], (uint64_t (*)(__int128 *, uint64_t))sub_18EC520A4);
}

_OWORD *sub_18EC57AE0(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC51320);
}

_OWORD *sub_18EC57AFC(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC517B8);
}

_OWORD *sub_18EC57B18(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC51C34);
}

_OWORD *sub_18EC57B34(uint64_t a1, uint64_t a2)
{
  return sub_18EC57B58(a1, a2, MEMORY[0x1E0DEDC60], (uint64_t (*)(__int128 *, uint64_t))sub_18EC520A4);
}

_OWORD *sub_18EC57B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *, uint64_t))
{
  _QWORD *v6;
  _OWORD *v7;

  swift_retain();
  v6 = (_QWORD *)swift_bridgeObjectRetain();
  v7 = sub_18EC505E4(v6, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_18EC57BC4()
{
  return sub_18EC679BC();
}

_OWORD *sub_18EC57BD8(uint64_t a1, uint64_t a2)
{
  return sub_18EC57B58(a1, a2, MEMORY[0x1E0DEBB98], (uint64_t (*)(__int128 *, uint64_t))sub_18EC531E8);
}

_OWORD *sub_18EC57BFC(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC524C4);
}

_OWORD *sub_18EC57C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int128 *))
{
  _QWORD *v4;
  _OWORD *v5;

  swift_retain();
  v4 = (_QWORD *)swift_bridgeObjectRetain();
  v5 = sub_18EC504C8(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *sub_18EC57C7C(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC52934);
}

_OWORD *sub_18EC57C98(uint64_t a1, uint64_t a2)
{
  return sub_18EC57C18(a1, a2, (uint64_t (*)(__int128 *))sub_18EC52D94);
}

_OWORD *sub_18EC57CB4(uint64_t a1, uint64_t a2)
{
  return sub_18EC57B58(a1, a2, MEMORY[0x1E0DEE190], (uint64_t (*)(__int128 *, uint64_t))sub_18EC531E8);
}

uint64_t sub_18EC57CD8()
{
  return sub_18EC679C8();
}

uint64_t sub_18EC57CEC(uint64_t a1, uint64_t a2)
{
  return sub_18EC5786C(a1, a2);
}

_QWORD *sub_18EC57D0C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = result[2];
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = sub_18EC234E8(result, v10, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE139AB8);
  result = (_QWORD *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v7 = v3[2];
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_18EC57E08(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_18EC57E18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC57E64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC57EB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return result;
}

uint64_t sub_18EC57EF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t method lookup function for AXMigratingDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AXMigratingDecoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of AXMigratingDecoder.decode<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingDecoder.decode<A>(_:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingDecoder.container<A>(keyedBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AXMigratingDecoder.unkeyedContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of AXMigratingDecoder.singleValueContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_18EC5801C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AXMigratingUnKeyedDecoding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.count.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.isAtEnd.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decode(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))() & 1;
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decode<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decodeNil()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))() & 1;
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.nestedContainer<A>(keyedBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.nestedUnkeyedContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.superDecoder()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t sub_18EC582EC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_18EC582F4()
{
  swift_bridgeObjectRetain();
  return sub_18EC67B3C();
}

unint64_t sub_18EC58354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE13B560;
  if (!qword_1EE13B560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE13B558);
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DE9ED0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE13B560);
  }
  return result;
}

uint64_t sub_18EC583A0(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_18EC583B8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A070);
  v2 = (_QWORD *)sub_18EC67734();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_18EC1FB10(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18EC584D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B578);
  v2 = (_QWORD *)sub_18EC67734();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_18EC1FB10(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18EC585F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A18);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B570);
  v6 = sub_18EC67734();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_18EC4A1B0(v12, (uint64_t)v5, &qword_1EE139A18);
    result = sub_18EC1FB74((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_18EC676EC();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_18EC3FA60(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18EC5878C(uint64_t a1)
{
  return sub_18EC587A4(a1, &qword_1EE13B500);
}

unint64_t sub_18EC58798(uint64_t a1)
{
  return sub_18EC587A4(a1, &qword_1EE13B4F0);
}

unint64_t sub_18EC587A4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_18EC67734();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_18EC1FB10(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *AXMigratingEncoder.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  v0 = (_QWORD *)swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  v0[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  v0[2] = v1;
  return v0;
}

_QWORD *AXMigratingEncoder.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  v1 = MEMORY[0x1E0DEE9D8];
  v0[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  v0[2] = v1;
  return v0;
}

uint64_t sub_18EC58A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for AXMigratingKeyedEncoding(0, a2, a3, a4);
  swift_beginAccess();
  v6 = *(_QWORD **)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18EC5CFC0(v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  MEMORY[0x193FFA51C](&unk_18EC6DC14, v5);
  return sub_18EC677F4();
}

uint64_t type metadata accessor for AXMigratingKeyedEncoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXMigratingKeyedEncoding);
}

uint64_t sub_18EC58AE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  _BYTE v8[40];

  swift_beginAccess();
  v3 = *(_QWORD **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = type metadata accessor for AXMigratingUnKeyedEncoding();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v3;
  v6[3] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRelease();
  v6[4] = v4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A88);
  sub_18EC1B938(&qword_1EE139A90, &qword_1EE139A88, MEMORY[0x1E0DEAF18]);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v8, v3);
  swift_bridgeObjectRelease();
  swift_release();
  sub_18EC1B4F4((uint64_t)v8);
  a1[3] = v5;
  result = sub_18EC53F54(&qword_1EE139230, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding, (uint64_t)&unk_18EC6DAAC);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_18EC58C28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  v5 = type metadata accessor for AXMigratingSingleValueEncoding();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = v5;
  result = sub_18EC53F54(&qword_1EE139238, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingSingleValueEncoding, (uint64_t)&unk_18EC6D9F4);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_18EC58CE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v6 = *(_QWORD *)(v2 + 32);
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  swift_beginAccess();
  swift_retain();
  sub_18EC1B9D8((uint64_t)&v10, v6 + 16);
  swift_endAccess();
  swift_release();
  *((_QWORD *)&v11 + 1) = type metadata accessor for AXMigratingEncoder();
  v12 = sub_18EC53F54(&qword_1EE139240, v7, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
  *(_QWORD *)&v10 = v2;
  swift_retain();
  sub_18EC67128();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  if (!v3)
  {
    swift_retain();
    sub_18EC1A770(a1, MEMORY[0x1E0DEE9D8]);
    swift_release();
    v9 = *(_QWORD *)(v2 + 32);
    swift_beginAccess();
    sub_18EC4A1B0(v9 + 16, a2, &qword_1EE139AA0);
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    swift_beginAccess();
    swift_retain();
    sub_18EC1B9D8((uint64_t)&v10, v9 + 16);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t AXMigratingEncoder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AXMigratingEncoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC58EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC58A1C(a1, a2, a3, a4);
}

uint64_t sub_18EC58EFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_18EC58AE8(a1);
}

uint64_t sub_18EC58F1C@<X0>(uint64_t *a1@<X8>)
{
  return sub_18EC58C28(a1);
}

uint64_t sub_18EC58F3C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC58FC8()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59060()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC590EC()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59178()
{
  return sub_18EC5949C();
}

uint64_t sub_18EC5919C()
{
  return sub_18EC59274();
}

uint64_t sub_18EC591C0()
{
  return sub_18EC5932C();
}

uint64_t sub_18EC591E4()
{
  return sub_18EC593E4();
}

uint64_t sub_18EC59208()
{
  return sub_18EC5949C();
}

uint64_t sub_18EC5922C()
{
  return sub_18EC5949C();
}

uint64_t sub_18EC59250()
{
  return sub_18EC59274();
}

uint64_t sub_18EC59274()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59308()
{
  return sub_18EC5932C();
}

uint64_t sub_18EC5932C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC593C0()
{
  return sub_18EC593E4();
}

uint64_t sub_18EC593E4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59478()
{
  return sub_18EC5949C();
}

uint64_t sub_18EC5949C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[40];

  v1 = *(_QWORD **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v11;
  _QWORD v12[5];

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = type metadata accessor for AXMigratingEncoder();
  v8 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v8[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  v8[4] = v5;
  v8[2] = v6;
  v12[3] = v7;
  v12[4] = sub_18EC53F54(&qword_1EE139240, v9, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
  v12[0] = v8;
  swift_retain();
  sub_18EC67128();
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v11 = *(_QWORD **)(v2 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_18EC1A770(a2, v11);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_18EC59670()
{
  return sub_18EC5C68C((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_18EC59684()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC59690()
{
  uint64_t v0;
  _QWORD *v1;
  _OWORD v3[2];
  uint64_t v4;

  v1 = *(_QWORD **)(*(_QWORD *)v0 + 24);
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC1AC5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18EC59708()
{
  return sub_18EC58F3C();
}

uint64_t sub_18EC59728()
{
  return sub_18EC58FC8();
}

uint64_t sub_18EC59748()
{
  return sub_18EC59060();
}

uint64_t sub_18EC59768()
{
  return sub_18EC590EC();
}

uint64_t sub_18EC59788()
{
  return sub_18EC59178();
}

uint64_t sub_18EC597A8()
{
  return sub_18EC5919C();
}

uint64_t sub_18EC597C8()
{
  return sub_18EC591C0();
}

uint64_t sub_18EC597E8()
{
  return sub_18EC591E4();
}

uint64_t sub_18EC59808()
{
  return sub_18EC59208();
}

uint64_t sub_18EC59828()
{
  return sub_18EC679D4();
}

uint64_t sub_18EC5983C()
{
  return sub_18EC5922C();
}

uint64_t sub_18EC5985C()
{
  return sub_18EC59250();
}

uint64_t sub_18EC5987C()
{
  return sub_18EC59308();
}

uint64_t sub_18EC5989C()
{
  return sub_18EC593C0();
}

uint64_t sub_18EC598BC()
{
  return sub_18EC59478();
}

uint64_t sub_18EC598DC()
{
  return sub_18EC679E0();
}

uint64_t sub_18EC598F0(uint64_t a1, uint64_t a2)
{
  return sub_18EC59530(a1, a2);
}

uint64_t sub_18EC59910()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_18EC5993C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a3 = xmmword_18EC6C3F0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  return result;
}

uint64_t sub_18EC59950()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_18EC5995C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  sub_18EC56B84();
  result = sub_18EC67560();
  *a2 = a1;
  a2[1] = 0;
  a2[2] = result;
  a2[3] = v5;
  return result;
}

uint64_t sub_18EC599B0()
{
  sub_18EC1B684();
  return sub_18EC67B54();
}

uint64_t sub_18EC599D8()
{
  sub_18EC1B684();
  return sub_18EC67B60();
}

uint64_t sub_18EC59A00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v1 = v0;
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC59B40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC59C94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC59DF4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC59F48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC5A09C()
{
  return sub_18EC5A600();
}

uint64_t sub_18EC5A0C0()
{
  return sub_18EC5A198();
}

uint64_t sub_18EC5A0E4()
{
  return sub_18EC5A310();
}

uint64_t sub_18EC5A108()
{
  return sub_18EC5A488();
}

uint64_t sub_18EC5A12C()
{
  return sub_18EC5A600();
}

uint64_t sub_18EC5A150()
{
  return sub_18EC5A600();
}

uint64_t sub_18EC5A174()
{
  return sub_18EC5A198();
}

uint64_t sub_18EC5A198()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC5A2EC()
{
  return sub_18EC5A310();
}

uint64_t sub_18EC5A310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC5A464()
{
  return sub_18EC5A488();
}

uint64_t sub_18EC5A488()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC5A5DC()
{
  return sub_18EC5A600();
}

uint64_t sub_18EC5A600()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v1 = v0;
  swift_retain();
  sub_18EC675E4();
  v2 = *(_QWORD **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v4 = *(_QWORD *)(v0 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    *(_QWORD *)(v1 + 24) = v9;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v12 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_BYTE *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    sub_18EC57D0C((_QWORD *)inited);
    sub_18EC1AC5C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18EC1B4F4((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18EC5A754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[16];

  v3 = v2;
  v5 = *(_QWORD **)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v7 = *(_QWORD *)(v2 + 24);
  v20[0] = v7;
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v10 = *(_QWORD *)(v2 + 24);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    v13 = result;
    v14 = v9;
    *(_QWORD *)(v3 + 24) = v12;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v15 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(v15 + 16) = v7;
    *(_BYTE *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 32) = v13;
    *(_QWORD *)(v15 + 40) = v14;
    v20[0] = v5;
    sub_18EC57D0C((_QWORD *)inited);
    v16 = *(_QWORD *)(v3 + 32);
    v17 = type metadata accessor for AXMigratingEncoder();
    v18 = (_QWORD *)swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v18[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
    v18[4] = v16;
    v18[2] = v5;
    v20[3] = v17;
    v20[4] = sub_18EC53F54(&qword_1EE139240, v19, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
    v20[0] = v18;
    swift_retain();
    sub_18EC67128();
    if (v20[15])
    {
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      swift_retain();
      sub_18EC1A770(a2, v5);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_18EC5A958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v4;
  v6 = type metadata accessor for AXMigratingKeyedEncoding(0, a2, a3, a4);
  v7 = *(_QWORD **)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v9 = *(_QWORD *)(v4 + 24);
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v12 = *(_QWORD *)(v4 + 24);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    v15 = result;
    v16 = v11;
    *(_QWORD *)(v5 + 24) = v14;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v17 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(v17 + 16) = v9;
    *(_BYTE *)(v17 + 24) = 0;
    *(_QWORD *)(v17 + 32) = v15;
    *(_QWORD *)(v17 + 40) = v16;
    sub_18EC57D0C((_QWORD *)inited);
    v18 = *(_QWORD *)(v5 + 32);
    swift_retain();
    sub_18EC5CFC0(v7, v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_release();
    MEMORY[0x193FFA51C](&unk_18EC6DC14, v6);
    return sub_18EC677F4();
  }
  return result;
}

uint64_t sub_18EC5AAC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[5];

  v2 = v1;
  v4 = *(_QWORD **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v1 + 24);
  v19[0] = v6;
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v9 = *(_QWORD *)(v1 + 24);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v12 = result;
    v13 = v8;
    *(_QWORD *)(v2 + 24) = v11;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v14 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(v14 + 16) = v6;
    *(_BYTE *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = v12;
    *(_QWORD *)(v14 + 40) = v13;
    v19[0] = v4;
    sub_18EC57D0C((_QWORD *)inited);
    v15 = v4;
    v16 = *(_QWORD *)(v2 + 32);
    v17 = type metadata accessor for AXMigratingUnKeyedEncoding();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v15;
    v18[3] = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18[4] = v16;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A88);
    sub_18EC1B938(&qword_1EE139A90, &qword_1EE139A88, MEMORY[0x1E0DEAF18]);
    sub_18EC675E4();
    sub_18EC1AC5C((uint64_t)v19, v15);
    swift_bridgeObjectRelease();
    swift_release();
    sub_18EC1B4F4((uint64_t)v19);
    a1[3] = v17;
    result = sub_18EC53F54(&qword_1EE139230, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding, (uint64_t)&unk_18EC6DAAC);
    a1[4] = result;
    *a1 = v18;
  }
  return result;
}

uint64_t sub_18EC5ACAC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for AXMigratingEncoder();
  v5 = (_QWORD *)swift_allocObject();
  v6 = MEMORY[0x1E0DEE9D8];
  v5[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v21, 0, sizeof(v21));
  v22 = 0;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 32) = 0u;
  *(_QWORD *)(v7 + 48) = 0;
  *(_OWORD *)(v7 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v21, v7 + 16);
  swift_endAccess();
  v5[4] = v7;
  v5[2] = v6;
  v8 = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v10 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)&v21[0] = v10;
  sub_18EC56B84();
  swift_bridgeObjectRetain();
  result = sub_18EC67560();
  v13 = *(_QWORD *)(v2 + 24);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    v16 = result;
    v17 = v12;
    *(_QWORD *)(v2 + 24) = v15;
    *(_QWORD *)(inited + 56) = &type metadata for AXCodingKey;
    *(_QWORD *)(inited + 64) = sub_18EC1B684();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v10;
    *(_BYTE *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = v16;
    *(_QWORD *)(v18 + 40) = v17;
    *(_QWORD *)&v21[0] = v8;
    sub_18EC57D0C((_QWORD *)inited);
    v19 = *(_QWORD *)&v21[0];
    swift_beginAccess();
    v5[2] = v19;
    swift_bridgeObjectRelease();
    a1[3] = v4;
    result = sub_18EC53F54(&qword_1EE139240, v20, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
    a1[4] = result;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_18EC5AE90()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC5AEBC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_18EC5AEC8()
{
  return sub_18EC59A00();
}

uint64_t sub_18EC5AEE8()
{
  return sub_18EC59B40();
}

uint64_t sub_18EC5AF08()
{
  return sub_18EC59C94();
}

uint64_t sub_18EC5AF28()
{
  return sub_18EC59DF4();
}

uint64_t sub_18EC5AF48()
{
  return sub_18EC59F48();
}

uint64_t sub_18EC5AF68()
{
  return sub_18EC5A09C();
}

uint64_t sub_18EC5AF88()
{
  return sub_18EC5A0C0();
}

uint64_t sub_18EC5AFA8()
{
  return sub_18EC5A0E4();
}

uint64_t sub_18EC5AFC8()
{
  return sub_18EC5A108();
}

uint64_t sub_18EC5AFE8()
{
  return sub_18EC5A12C();
}

uint64_t sub_18EC5B008()
{
  return sub_18EC67968();
}

uint64_t sub_18EC5B01C()
{
  return sub_18EC5A150();
}

uint64_t sub_18EC5B03C()
{
  return sub_18EC5A174();
}

uint64_t sub_18EC5B05C()
{
  return sub_18EC5A2EC();
}

uint64_t sub_18EC5B07C()
{
  return sub_18EC5A464();
}

uint64_t sub_18EC5B09C()
{
  return sub_18EC5A5DC();
}

uint64_t sub_18EC5B0BC()
{
  return sub_18EC67974();
}

uint64_t sub_18EC5B0D0(uint64_t a1, uint64_t a2)
{
  return sub_18EC5A754(a1, a2);
}

uint64_t sub_18EC5B0F0()
{
  return sub_18EC67890();
}

uint64_t sub_18EC5B118()
{
  return sub_18EC678B4();
}

uint64_t sub_18EC5B140()
{
  return sub_18EC678A8();
}

uint64_t sub_18EC5B168()
{
  return sub_18EC678C0();
}

uint64_t sub_18EC5B190()
{
  return sub_18EC678CC();
}

uint64_t sub_18EC5B1B8()
{
  return sub_18EC678D8();
}

uint64_t sub_18EC5B1E0()
{
  return sub_18EC678F0();
}

uint64_t sub_18EC5B208()
{
  return sub_18EC678FC();
}

uint64_t sub_18EC5B230()
{
  return sub_18EC67908();
}

uint64_t sub_18EC5B258()
{
  return sub_18EC67914();
}

uint64_t sub_18EC5B280()
{
  return sub_18EC6792C();
}

uint64_t sub_18EC5B2A8()
{
  return sub_18EC678E4();
}

uint64_t sub_18EC5B2D0()
{
  return sub_18EC67920();
}

uint64_t sub_18EC5B2F8()
{
  return sub_18EC67938();
}

uint64_t sub_18EC5B320()
{
  return sub_18EC67944();
}

uint64_t sub_18EC5B348()
{
  return sub_18EC67950();
}

uint64_t sub_18EC5B370()
{
  return sub_18EC6795C();
}

uint64_t sub_18EC5B398()
{
  return sub_18EC6789C();
}

uint64_t sub_18EC5B3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5A958(a1, a2, a3, a4);
}

uint64_t sub_18EC5B3E8@<X0>(_QWORD *a1@<X8>)
{
  return sub_18EC5AAC8(a1);
}

uint64_t sub_18EC5B408@<X0>(_QWORD *a1@<X8>)
{
  return sub_18EC5ACAC(a1);
}

uint64_t sub_18EC5B428(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _OWORD v9[2];
  uint64_t v10;

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_18EC1AC5C((uint64_t)v9, v4);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v9);
  return swift_release();
}

uint64_t sub_18EC5B51C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v10[5];

  v4 = *v2;
  v5 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v7 = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v4 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_0, a2, v7);
  v10[0] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v10, v5);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v10);
  return swift_release();
}

uint64_t sub_18EC5B628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v11[5];

  v5 = *v3;
  v6 = (_QWORD *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a3, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  swift_bridgeObjectRetain();
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18EC5B748(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v9[5];

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  v9[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v9, v4);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v9);
  return swift_release();
}

uint64_t sub_18EC5B85C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v9[5];

  v3 = *v1;
  v4 = (_QWORD *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v6 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  v9[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v9, v4);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v9);
  return swift_release();
}

uint64_t sub_18EC5B970(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BE14(a1, a2);
}

uint64_t sub_18EC5B994(char a1, uint64_t a2)
{
  return sub_18EC5BA6C(a1, a2);
}

uint64_t sub_18EC5B9B8(__int16 a1, uint64_t a2)
{
  return sub_18EC5BBA4(a1, a2);
}

uint64_t sub_18EC5B9DC(int a1, uint64_t a2)
{
  return sub_18EC5BCDC(a1, a2);
}

uint64_t sub_18EC5BA00(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BE14(a1, a2);
}

uint64_t sub_18EC5BA24(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BE14(a1, a2);
}

uint64_t sub_18EC5BA48(char a1, uint64_t a2)
{
  return sub_18EC5BA6C(a1, a2);
}

uint64_t sub_18EC5BA6C(char a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v11[5];
  char v12;

  v5 = *v2;
  v6 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = a1;
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18EC5BB80(__int16 a1, uint64_t a2)
{
  return sub_18EC5BBA4(a1, a2);
}

uint64_t sub_18EC5BBA4(__int16 a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v11[5];
  __int16 v12;

  v5 = *v2;
  v6 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = a1;
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18EC5BCB8(int a1, uint64_t a2)
{
  return sub_18EC5BCDC(a1, a2);
}

uint64_t sub_18EC5BCDC(int a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v11[5];
  int v12;

  v5 = *v2;
  v6 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = a1;
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18EC5BDF0(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BE14(a1, a2);
}

uint64_t sub_18EC5BE14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v11[16];

  v5 = *v2;
  v6 = (_QWORD *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v8 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v11[15] = a1;
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18EC1B4F4((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18EC5BF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v17[16];

  v4 = v3;
  v7 = *v4;
  v8 = (_QWORD *)v4[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v10 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  v17[0] = v8;
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v12 = v4[3];
  v13 = type metadata accessor for AXMigratingEncoder();
  v14 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v14[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  v14[4] = v12;
  v14[2] = v8;
  v17[3] = v13;
  v17[4] = sub_18EC53F54(&qword_1EE139240, v15, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
  v17[0] = v14;
  swift_retain();
  sub_18EC67128();
  if (v17[15])
  {
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    swift_retain();
    sub_18EC1A770(a3, v8);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_18EC5C0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v4;
  v7 = *v5;
  v8 = type metadata accessor for AXMigratingKeyedEncoding(0, a3, a4, a4);
  v9 = (_QWORD *)v5[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v11 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, a2, v11);
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v13 = v5[3];
  swift_retain();
  sub_18EC5CFC0(v9, v13, v14, v15);
  swift_bridgeObjectRelease();
  swift_release();
  MEMORY[0x193FFA51C](&unk_18EC6DC14, v8);
  return sub_18EC677F4();
}

uint64_t sub_18EC5C21C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  _QWORD v16[5];

  v3 = v2;
  v6 = *v3;
  v7 = (_QWORD *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v9 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  v16[0] = v7;
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v11 = v7;
  v12 = v3[3];
  v13 = type metadata accessor for AXMigratingUnKeyedEncoding();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = v12;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A88);
  sub_18EC1B938(&qword_1EE139A90, &qword_1EE139A88, MEMORY[0x1E0DEAF18]);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v16, v11);
  swift_bridgeObjectRelease();
  swift_release();
  sub_18EC1B4F4((uint64_t)v16);
  a2[3] = v13;
  result = sub_18EC53F54(&qword_1EE139230, 255, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding, (uint64_t)&unk_18EC6DAAC);
  a2[4] = result;
  *a2 = v14;
  return result;
}

uint64_t sub_18EC5C3BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_18EC67524();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC67B3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_18EC5C4D8((uint64_t)v10, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_18EC5C4D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _OWORD v17[2];
  uint64_t v18;

  v5 = *v2;
  v6 = type metadata accessor for AXMigratingEncoder();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DEE9D8];
  v7[3] = sub_18EC585F0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for AXDataHolder();
  memset(v17, 0, sizeof(v17));
  v18 = 0;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 32) = 0u;
  *(_QWORD *)(v9 + 48) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  swift_beginAccess();
  sub_18EC1B9D8((uint64_t)v17, v9 + 16);
  swift_endAccess();
  v7[4] = v9;
  v7[2] = v8;
  v10 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18EC6BB40;
  v12 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_0, a1, v12);
  *(_QWORD *)&v17[0] = v10;
  swift_bridgeObjectRetain();
  sub_18EC57D0C((_QWORD *)inited);
  v14 = *(_QWORD *)&v17[0];
  swift_beginAccess();
  v7[2] = v14;
  swift_bridgeObjectRelease();
  a2[3] = v6;
  result = sub_18EC53F54(&qword_1EE139240, v15, (uint64_t (*)(uint64_t))type metadata accessor for AXMigratingEncoder, (uint64_t)&protocol conformance descriptor for AXMigratingEncoder);
  a2[4] = result;
  *a2 = v7;
  return result;
}

uint64_t sub_18EC5C678()
{
  return sub_18EC5C68C((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_18EC5C68C(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocClassInstance();
}

uint64_t sub_18EC5C6C8(uint64_t a1)
{
  return sub_18EC5B428(a1);
}

uint64_t sub_18EC5C6E8(uint64_t a1, uint64_t a2)
{
  return sub_18EC5B51C(a1, a2);
}

uint64_t sub_18EC5C708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC5B628(a1, a2, a3);
}

uint64_t sub_18EC5C728(uint64_t a1)
{
  return sub_18EC5B748(a1);
}

uint64_t sub_18EC5C748(uint64_t a1)
{
  return sub_18EC5B85C(a1);
}

uint64_t sub_18EC5C768(uint64_t a1, uint64_t a2)
{
  return sub_18EC5B970(a1, a2);
}

uint64_t sub_18EC5C788(char a1, uint64_t a2)
{
  return sub_18EC5B994(a1, a2);
}

uint64_t sub_18EC5C7A8(__int16 a1, uint64_t a2)
{
  return sub_18EC5B9B8(a1, a2);
}

uint64_t sub_18EC5C7C8(int a1, uint64_t a2)
{
  return sub_18EC5B9DC(a1, a2);
}

uint64_t sub_18EC5C7E8(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BA00(a1, a2);
}

uint64_t sub_18EC5C808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5C8E0(a1, a2, a3, a4, a5, MEMORY[0x1E0DED960]);
}

uint64_t sub_18EC5C824(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BA24(a1, a2);
}

uint64_t sub_18EC5C844(char a1, uint64_t a2)
{
  return sub_18EC5BA48(a1, a2);
}

uint64_t sub_18EC5C864(__int16 a1, uint64_t a2)
{
  return sub_18EC5BB80(a1, a2);
}

uint64_t sub_18EC5C884(int a1, uint64_t a2)
{
  return sub_18EC5BCB8(a1, a2);
}

uint64_t sub_18EC5C8A4(uint64_t a1, uint64_t a2)
{
  return sub_18EC5BDF0(a1, a2);
}

uint64_t sub_18EC5C8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5C8E0(a1, a2, a3, a4, a5, MEMORY[0x1E0DED968]);
}

uint64_t sub_18EC5C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_18EC5C948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18EC5BF28(a1, a2, a3);
}

uint64_t sub_18EC5C968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_18EC67A34();
}

uint64_t sub_18EC5C9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return sub_18EC67A1C();
}

uint64_t sub_18EC5CA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return sub_18EC67A10();
}

uint64_t sub_18EC5CA8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5CD20(a1, a2, a3, a4, a5, MEMORY[0x1E0DED8E0]);
}

uint64_t sub_18EC5CAA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CC9C(a1, a2, a3, a4, MEMORY[0x1E0DED8E8]);
}

uint64_t sub_18EC5CAC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5CD20(a1, a2, a3, a4, a5, MEMORY[0x1E0DED8F0]);
}

uint64_t sub_18EC5CAE0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CBA4(a1, a2, a3, a4, MEMORY[0x1E0DED908]);
}

uint64_t sub_18EC5CAFC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CC20(a1, a2, a3, a4, MEMORY[0x1E0DED910]);
}

uint64_t sub_18EC5CB18(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CC9C(a1, a2, a3, a4, MEMORY[0x1E0DED918]);
}

uint64_t sub_18EC5CB34(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5CD20(a1, a2, a3, a4, a5, MEMORY[0x1E0DED920]);
}

uint64_t sub_18EC5CB50(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18EC5CDA8(a1, a2, a3, a4, a5, a6, MEMORY[0x1E0DED930]);
}

uint64_t sub_18EC5CB6C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5CD20(a1, a2, a3, a4, a5, MEMORY[0x1E0DED8F8]);
}

uint64_t sub_18EC5CB88(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CBA4(a1, a2, a3, a4, MEMORY[0x1E0DED928]);
}

uint64_t sub_18EC5CBA4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_18EC5CC04(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CC20(a1, a2, a3, a4, MEMORY[0x1E0DED938]);
}

uint64_t sub_18EC5CC20(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_18EC5CC80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5CC9C(a1, a2, a3, a4, MEMORY[0x1E0DED940]);
}

uint64_t sub_18EC5CC9C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_18EC5CD04(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18EC5CD20(a1, a2, a3, a4, a5, MEMORY[0x1E0DED948]);
}

uint64_t sub_18EC5CD20(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;

  v10 = a2 & 1;
  v11 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_18EC5CD8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18EC5CDA8(a1, a2, a3, a4, a5, a6, MEMORY[0x1E0DED950]);
}

uint64_t sub_18EC5CDA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;

  v12 = a3 & 1;
  v13 = type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_18EC5CE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_18EC67A28();
}

uint64_t sub_18EC5CE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5C0E8(a1, a2, a3, a4);
}

uint64_t sub_18EC5CEB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_18EC5C21C(a1, a2);
}

uint64_t sub_18EC5CED0@<X0>(_QWORD *a1@<X8>)
{
  return sub_18EC5C3BC(a1);
}

uint64_t sub_18EC5CEF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_18EC5C4D8(a1, a2);
}

uint64_t sub_18EC5CF10(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[40];

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139A68);
  sub_18EC1B938((unint64_t *)&qword_1EE139A70, &qword_1EE139A68, MEMORY[0x1E0DEA0C0]);
  sub_18EC675E4();
  sub_18EC1AC5C((uint64_t)v5, a1);
  sub_18EC1B4F4((uint64_t)v5);
  return v2;
}

uint64_t sub_18EC5CFC0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for AXMigratingKeyedEncoding(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject();
  return sub_18EC5CF10(a1, a2);
}

uint64_t type metadata accessor for AXMigratingUnKeyedEncoding()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AXMigratingSingleValueEncoding()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AXMigratingEncoder()
{
  return objc_opt_self();
}

uint64_t sub_18EC5D070@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18EC5D0BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for AXMigratingEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AXMigratingEncoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AXMigratingEncoder.container<A>(keyedBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingEncoder.unkeyedContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingEncoder.singleValueContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AXMigratingEncoder.encode<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t destroy for AXCodingKey()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AXCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AXCodingKey(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AXCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AXCodingKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXCodingKey()
{
  return &type metadata for AXCodingKey;
}

unint64_t sub_18EC5D314()
{
  unint64_t result;

  result = qword_1EE139A38;
  if (!qword_1EE139A38)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6D9A4, &type metadata for AXCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE139A38);
  }
  return result;
}

unint64_t sub_18EC5D35C()
{
  unint64_t result;

  result = qword_1EE139A30;
  if (!qword_1EE139A30)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6D9CC, &type metadata for AXCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE139A30);
  }
  return result;
}

uint64_t sub_18EC5D3A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18EC5D3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_18EC673C8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_18EC673BC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_18EC1CDB0(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18EC67350();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t AsyncSequence.assign<A>(to:on:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5DAFC(a1, a2, a3, a4, (uint64_t)&unk_1E28C8460, (uint64_t)&unk_1EE13B588);
}

{
  return sub_18EC5DAFC(a1, a2, a3, a4, (uint64_t)&unk_1E28C8488, (uint64_t)&unk_1EE13B598);
}

uint64_t sub_18EC5D504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v10 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a6 + 8);
  v8[7] = v10;
  v8[8] = *(_QWORD *)(v10 - 8);
  v8[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  sub_18EC67524();
  v8[14] = swift_task_alloc();
  v8[15] = *(_QWORD *)(a7 - 8);
  v8[16] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC5D664()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 16))(v0[16], v0[2], v0[5]);
  sub_18EC67488();
  v0[20] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_18EC5D728;
  return sub_18EC6738C();
}

uint64_t sub_18EC5D728()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5D78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 72), v1, v2);
    swift_setAtReferenceWritableKeyPath();
    *(_QWORD *)(v0 + 160) = swift_getAssociatedConformanceWitness();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v5;
    *v5 = v0;
    v5[1] = sub_18EC5D728;
    return sub_18EC6738C();
  }
}

uint64_t sub_18EC5D8E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 32);
  v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  swift_getAssociatedConformanceWitness();
  v2 = sub_18EC67980();
  v3 = *(_QWORD *)(v0 + 96);
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80);
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC5DA14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[6];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v1[5] - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v1[2];
  v11 = v1[3];
  v12 = (uint64_t)v1 + v7;
  v13 = (uint64_t)v1 + v9;
  v14 = *(_QWORD **)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_18EC19738;
  return sub_18EC5D504(a1, v10, v11, v12, v13, v14, v4, v5);
}

uint64_t sub_18EC5DAFC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v31 = a1;
  v32 = a6;
  v29 = a5;
  v30 = a4;
  v7 = v6;
  v28 = a2;
  v9 = *(_QWORD *)(*a1 + *MEMORY[0x1E0DED210]);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v27 - v13;
  v27 = (char *)&v27 - v13;
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v12);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_18EC673C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v7, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v28, v9);
  v23 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = (v17 + v23 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = 0;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = a3;
  *((_QWORD *)v25 + 5) = v9;
  *((_QWORD *)v25 + 6) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v25[v23], v18, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v25[v24], v27, v9);
  *(_QWORD *)&v25[(v11 + v24 + 7) & 0xFFFFFFFFFFFFFFF8] = v31;
  swift_retain();
  return sub_18EC5D3C4((uint64_t)v21, v32, (uint64_t)v25);
}

uint64_t sub_18EC5DCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v10 = *a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[7] = AssociatedTypeWitness;
  v8[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  v8[11] = *(_QWORD *)(*MEMORY[0x1E0DED210] + v10 + 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  v8[14] = *(_QWORD *)(a7 - 8);
  v8[15] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v8[16] = v12;
  v8[17] = *(_QWORD *)(v12 - 8);
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC5DE20()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 16))(v0[15], v0[2], v0[5]);
  sub_18EC67488();
  v0[19] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_18EC5DEE8;
  return sub_18EC6738C();
}

uint64_t sub_18EC5DEE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5DF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v2);
    swift_setAtReferenceWritableKeyPath();
    *(_QWORD *)(v0 + 152) = swift_getAssociatedConformanceWitness();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v6;
    *v6 = v0;
    v6[1] = sub_18EC5DEE8;
    return sub_18EC6738C();
  }
}

uint64_t sub_18EC5E0C4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 32);
  v1(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  swift_getAssociatedConformanceWitness();
  v2 = sub_18EC67980();
  v3 = *(_QWORD *)(v0 + 72);
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 56);
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC5E2B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[6];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v1[5] - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v1[2];
  v11 = v1[3];
  v12 = (uint64_t)v1 + v7;
  v13 = (uint64_t)v1 + v9;
  v14 = *(uint64_t **)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_18EC19738;
  return sub_18EC5DCD8(a1, v10, v11, v12, v13, v14, v4, v5);
}

uint64_t AsyncSequence.assignObject<A>(to:on:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v23 = *a1;
  v24 = a4;
  v22 = a1;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18EC673C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v4, a3);
  sub_18EC673A4();
  swift_retain();
  swift_retain();
  v14 = sub_18EC67398();
  v15 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (char *)swift_allocObject();
  v18 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v17 + 2) = v14;
  *((_QWORD *)v17 + 3) = v18;
  *((_QWORD *)v17 + 4) = a3;
  v19 = v24;
  *((_QWORD *)v17 + 5) = *(_QWORD *)(v23 + *MEMORY[0x1E0DED210]);
  *((_QWORD *)v17 + 6) = v19;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v17[v15], v8, a3);
  *(_QWORD *)&v17[v16] = v13;
  *(_QWORD *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = v22;
  swift_release();
  return sub_18EC5D3C4((uint64_t)v11, (uint64_t)&unk_1EE13B5A8, (uint64_t)v17);
}

uint64_t sub_18EC5E560()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18EC5E584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;

  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  v10 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DED210] + *a6 + 8) + 16);
  v8[11] = v10;
  v8[12] = *(_QWORD *)(v10 - 8);
  v8[13] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  v8[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = *(_QWORD *)(a7 - 8);
  v8[21] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v8[22] = v12;
  v8[23] = *(_QWORD *)(v12 - 8);
  v8[24] = swift_task_alloc();
  v8[25] = sub_18EC673A4();
  v8[26] = sub_18EC67398();
  v8[27] = sub_18EC67350();
  v8[28] = v13;
  return swift_task_switch();
}

uint64_t sub_18EC5E724()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 16))(v0[21], v0[6], v0[9]);
  sub_18EC67488();
  swift_beginAccess();
  v0[29] = sub_18EC67398();
  v0[30] = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[31] = v1;
  *v1 = v0;
  v1[1] = sub_18EC5E830;
  return sub_18EC6738C();
}

uint64_t sub_18EC5E830()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_18EC5E894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    swift_release();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 56) + 16;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 104), v1, v2);
    v5 = MEMORY[0x193FFA69C](v4);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 104);
      v10 = *(_QWORD *)(v0 + 88);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v10);
      *(_QWORD *)(v0 + 40) = v6;
      swift_unknownObjectRetain();
      swift_setAtReferenceWritableKeyPath();
      swift_unknownObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      *(_QWORD *)(v0 + 232) = sub_18EC67398();
      *(_QWORD *)(v0 + 240) = swift_getAssociatedConformanceWitness();
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v11;
      *v11 = v0;
      v11[1] = sub_18EC5E830;
      return sub_18EC6738C();
    }
    v14 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 88);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC5EAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  swift_getAssociatedConformanceWitness();
  v6 = sub_18EC67980();
  v7 = *(_QWORD *)(v0 + 128);
  if (v6)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 112);
    swift_allocError();
    v5(v9, v7, v8);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC5EC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC5ECC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v5 = v1[3];
  v4 = v1[4];
  v6 = v1[6];
  v7 = *(_QWORD *)(v4 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v1[2];
  v11 = (uint64_t)v1 + v8;
  v12 = *(_QWORD *)((char *)v1 + v9);
  v13 = *(_QWORD **)((char *)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_18EC18E18;
  return sub_18EC5E584(a1, v10, v5, v11, v12, v13, v4, v6);
}

uint64_t AsyncStream.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5FA50(a1, a2, a3, a4);
}

uint64_t sub_18EC5ED90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a6;
  v40 = a3;
  v41 = a4;
  v37 = a2;
  v38 = a1;
  v8 = sub_18EC6741C();
  v9 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v35 = a5;
  v36 = (char *)&v32 - v11;
  v12 = a5;
  v13 = sub_18EC6744C();
  v14 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_18EC673C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v37, v13);
  v22 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v36, a1, v8);
  v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (v15 + *(unsigned __int8 *)(v9 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = 0;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = v12;
  v26 = v39;
  *((_QWORD *)v25 + 5) = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v25[v23], v17, v33);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v25[v24], v22, v34);
  v27 = &v25[(v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8];
  v28 = v41;
  *(_QWORD *)v27 = v40;
  *((_QWORD *)v27 + 1) = v28;
  swift_retain();
  v29 = sub_18EC1BFF0((uint64_t)v20, (uint64_t)&unk_1EE13B600, (uint64_t)v25);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = v35;
  v30[3] = v26;
  v30[4] = v29;
  return sub_18EC673EC();
}

uint64_t sub_18EC5EFD4(uint64_t a1)
{
  return sub_18EC5FD58(a1, sub_18EC5ED90);
}

uint64_t sub_18EC5EFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v8[8] = swift_task_alloc();
  v10 = sub_18EC673E0();
  v8[9] = v10;
  v8[10] = *(_QWORD *)(v10 - 8);
  v8[11] = swift_task_alloc();
  v8[12] = *(_QWORD *)(a8 - 8);
  v8[13] = swift_task_alloc();
  sub_18EC67524();
  v8[14] = swift_task_alloc();
  v11 = sub_18EC67440();
  v8[15] = v11;
  v8[16] = *(_QWORD *)(v11 - 8);
  v8[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC5F0DC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_18EC6744C();
  sub_18EC67428();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_18EC5F154;
  return sub_18EC67434();
}

uint64_t sub_18EC5F154()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5F1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  int *v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(int **)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 104), v1, v3);
    v7 = (int *)((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_18EC5F2BC;
    return ((uint64_t (*)(_QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_18EC5F2BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5F310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[12];
  v1 = v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[9];
  v6 = v0[6];
  sub_18EC6741C();
  sub_18EC67404();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_18EC5F154;
  return sub_18EC67434();
}

uint64_t AsyncStream.asyncMap<A>(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v4 = sub_18EC673F8();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v8[-v5];
  v9 = v1;
  v10 = a1;
  nullsub_1(v3);
  sub_18EC1899C((uint64_t)v6);
  return sub_18EC67458();
}

uint64_t sub_18EC5F490(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v34 = a3;
  v31 = a2;
  v32 = a1;
  v4 = (uint64_t *)(*a3 + *MEMORY[0x1E0DEE2A8]);
  v33 = v4[1];
  v5 = sub_18EC6741C();
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v29 = *v4;
  v8 = v29;
  v30 = (char *)&v27 - v9;
  v10 = sub_18EC6744C();
  v11 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_18EC673C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v31, v10);
  v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, a1, v5);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + *(unsigned __int8 *)(v6 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = v8;
  v23 = v33;
  *((_QWORD *)v22 + 5) = v33;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v22[v20], v14, v27);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v19, v28);
  *(_QWORD *)&v22[(v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8] = v34;
  swift_retain();
  v24 = sub_18EC1BFF0((uint64_t)v17, (uint64_t)&unk_1EE13B5F0, (uint64_t)v22);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v29;
  v25[3] = v23;
  v25[4] = v24;
  return sub_18EC673EC();
}

uint64_t sub_18EC5F6E0(uint64_t a1)
{
  uint64_t v1;

  return sub_18EC5F490(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_18EC5F6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = (uint64_t *)(*a6 + *MEMORY[0x1E0DEE2A8]);
  v6[5] = v7[1];
  v6[6] = swift_task_alloc();
  v8 = *v7;
  v6[7] = v8;
  v6[8] = *(_QWORD *)(v8 - 8);
  v6[9] = swift_task_alloc();
  v9 = sub_18EC673E0();
  v6[10] = v9;
  v6[11] = *(_QWORD *)(v9 - 8);
  v6[12] = swift_task_alloc();
  sub_18EC67524();
  v6[13] = swift_task_alloc();
  v10 = sub_18EC67440();
  v6[14] = v10;
  v6[15] = *(_QWORD *)(v10 - 8);
  v6[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC5F7F8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_18EC6744C();
  sub_18EC67428();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_18EC5F870;
  return sub_18EC67434();
}

uint64_t sub_18EC5F870()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5F8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    swift_getAtKeyPath();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    sub_18EC6741C();
    sub_18EC67404();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v9);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v7;
    *v7 = v0;
    v7[1] = sub_18EC5F870;
    return sub_18EC67434();
  }
}

uint64_t AsyncStream.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18EC5FA50(a1, a2, a3, a4);
}

uint64_t sub_18EC5FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v9 = sub_18EC673F8();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v13[-v10];
  v14 = *(_QWORD *)(a3 + 16);
  v15 = a4;
  v16 = v4;
  v17 = a1;
  v18 = a2;
  nullsub_1(a4);
  sub_18EC1899C((uint64_t)v11);
  return sub_18EC67458();
}

uint64_t sub_18EC5FB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a5;
  v38 = a6;
  v39 = a3;
  v40 = a4;
  v35 = a2;
  v36 = a1;
  v7 = sub_18EC6741C();
  v8 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - v9;
  v34 = (char *)&v31 - v9;
  v11 = sub_18EC6744C();
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13A068);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_18EC673C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v35, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v8 + 80) + v21 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  v24 = v37;
  v25 = v38;
  *((_QWORD *)v23 + 4) = v37;
  *((_QWORD *)v23 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v23[v20], v15, v32);
  v26 = &v23[v21];
  v27 = v40;
  *(_QWORD *)v26 = v39;
  *((_QWORD *)v26 + 1) = v27;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v22], v34, v33);
  swift_retain();
  v28 = sub_18EC1BFF0((uint64_t)v18, (uint64_t)&unk_1EE13B5E0, (uint64_t)v23);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v24;
  v29[3] = v25;
  v29[4] = v28;
  return sub_18EC673EC();
}

uint64_t sub_18EC5FD4C(uint64_t a1)
{
  return sub_18EC5FD58(a1, sub_18EC5FB18);
}

uint64_t sub_18EC5FD58(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_18EC5FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[6] = a8;
  v8[7] = v14;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v10 = sub_18EC673E0();
  v8[8] = v10;
  v8[9] = *(_QWORD *)(v10 - 8);
  v8[10] = swift_task_alloc();
  v11 = sub_18EC67524();
  v8[11] = v11;
  v8[12] = *(_QWORD *)(v11 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(_QWORD *)(v14 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v8[17] = *(_QWORD *)(a8 - 8);
  v8[18] = swift_task_alloc();
  sub_18EC67524();
  v8[19] = swift_task_alloc();
  v12 = sub_18EC67440();
  v8[20] = v12;
  v8[21] = *(_QWORD *)(v12 - 8);
  v8[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18EC5FEA8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_18EC6744C();
  sub_18EC67428();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v1;
  *v1 = v0;
  v1[1] = sub_18EC5FF20;
  return sub_18EC67434();
}

uint64_t sub_18EC5FF20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC5FF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  int *v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 144), v1, v3);
    v7 = (int *)((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v6;
    *v6 = v0;
    v6[1] = sub_18EC600A8;
    return ((uint64_t (*)(_QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 144));
  }
}

uint64_t sub_18EC600A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18EC600FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[7];
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3);
  v6 = v0[17];
  v5 = v0[18];
  if (v4 == 1)
  {
    v8 = v0[11];
    v7 = v0[12];
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(v0[18], v0[6]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v8);
  }
  else
  {
    v10 = v0[15];
    v9 = v0[16];
    v11 = v0[10];
    v14 = v0[9];
    v15 = v0[8];
    v16 = v0[6];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v9, v2, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v9, v3);
    sub_18EC6741C();
    sub_18EC67404();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v15);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v16);
  }
  v12 = (_QWORD *)swift_task_alloc();
  v0[23] = v12;
  *v12 = v0;
  v12[1] = sub_18EC5FF20;
  return sub_18EC67434();
}

uint64_t AsyncStream.first()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_18EC6026C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v1 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  MEMORY[0x193FFA51C](MEMORY[0x1E0DF0848], v1);
  *v3 = v0;
  v3[1] = sub_18EC60304;
  return sub_18EC67494();
}

uint64_t sub_18EC60304()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18EC60354()
{
  uint64_t v0;

  return sub_18EC60658(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_18EC60368()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_18EC603B4;
  return sub_18EC603B4(1);
}

uint64_t sub_18EC603B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t AsyncStream.subscript.getter(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD **)(a2 + 16);
  v4 = v3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = v4;
  *((_QWORD *)v9 + 3) = v3[3];
  *((_QWORD *)v9 + 4) = v3[4];
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], v7, v4);
  v10 = sub_18EC67524();
  AsyncStream.asyncMap<A>(_:)((uint64_t)&unk_1EE13B5D0, (uint64_t)v9, a2, v10);
  return swift_release();
}

uint64_t sub_18EC6050C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a4;
  v6[5] = a5;
  v6[2] = a1;
  v6[3] = a3;
  v7 = *a2;
  v6[6] = a6;
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_18EC60530()
{
  uint64_t v0;

  MEMORY[0x193FF8D34](*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18EC60568()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_18EC605C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(v2 + 32);
  v7 = swift_task_alloc();
  v8 = *(_OWORD *)(v2 + 16);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80);
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_18EC19738;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v2 + ((v9 + 40) & ~v9);
  v10 = *a2;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v10;
  return swift_task_switch();
}

uint64_t sub_18EC60658(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_18EC6066C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18EC6744C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_18EC6741C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_18EC60748(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = v1[4];
  v5 = *(_QWORD *)(sub_18EC6744C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_18EC6741C() - 8) + 80);
  v9 = (v7 + v8 + 16) & ~v8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = (uint64_t)v1 + v6;
  v13 = (char *)v1 + v7;
  v14 = *(_QWORD *)((char *)v1 + v7);
  v15 = *((_QWORD *)v13 + 1);
  v16 = (uint64_t)v1 + v9;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_18EC18E18;
  return sub_18EC5FD6C(a1, v10, v11, v12, v14, v15, v16, v4);
}

uint64_t sub_18EC6083C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC60860()
{
  return sub_18EC67464();
}

uint64_t sub_18EC60884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18EC6744C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_18EC6741C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC6095C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_18EC6744C() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_18EC6741C() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = *(_QWORD **)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_18EC19738;
  return sub_18EC5F6E8(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_18EC60A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18EC6744C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_18EC6741C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18EC60B0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = v1[4];
  v5 = *(_QWORD *)(sub_18EC6744C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_18EC6741C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v1[2];
  v11 = v1[3];
  v12 = (uint64_t)v1 + v6;
  v13 = (uint64_t)v1 + v9;
  v14 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_18EC19738;
  return sub_18EC5EFE0(a1, v10, v11, v12, v13, v15, v16, v4);
}

uint64_t AXThreadLocal.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)v2;
  sub_18EC66EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), a1);
  return v2;
}

uint64_t sub_18EC60C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
}

uint64_t *AXThreadLocal.init(wrappedValue:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_18EC66EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 88), a1);
  return v1;
}

uint64_t sub_18EC60CF0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v18[2];
  _QWORD v19[4];

  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_currentThread);
  v6 = objc_msgSend(v5, sel_threadDictionary);

  v19[0] = sub_18EC66EC4();
  v19[1] = v7;
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_18EC67A4C());
  swift_unknownObjectRelease();

  if (v8)
  {
    sub_18EC6756C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_18EC4943C((uint64_t)v18, (uint64_t)v19);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_currentThread);
  v10 = objc_msgSend(v9, sel_threadDictionary);

  v11 = sub_18EC66EC4();
  v13 = v12;
  v14 = sub_18EC67998();
  *(_QWORD *)&v18[0] = v11;
  *((_QWORD *)&v18[0] + 1) = v13;
  swift_bridgeObjectRetain();
  objc_msgSend(v10, sel___swift_setObject_forKeyedSubscript_, v14, sub_18EC67A4C());
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  v15 = swift_unknownObjectRelease();
  a2(v15);
  sub_18EC60EE4(v3, (uint64_t)v19);
  return sub_18EC1A590((uint64_t)v19);
}

uint64_t sub_18EC60EE4(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  v3 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  v4 = objc_msgSend(v3, sel_threadDictionary);

  v5 = sub_18EC66EC4();
  v7 = v6;
  sub_18EC613BC(a2, (uint64_t)v15);
  v8 = v16;
  if (v16)
  {
    v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v10 = *(_QWORD *)(v8 - 8);
    MEMORY[0x1E0C80A78](v9);
    v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    v13 = sub_18EC67998();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    v13 = 0;
  }
  v15[0] = v5;
  v15[1] = v7;
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v13, sub_18EC67A4C());
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18EC61068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v17[2];
  _OWORD v18[2];

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = sub_18EC67524();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  v10 = objc_msgSend(v9, sel_threadDictionary);

  *(_QWORD *)&v18[0] = sub_18EC66EC4();
  *((_QWORD *)&v18[0] + 1) = v11;
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_18EC67A4C());
  swift_unknownObjectRelease();

  if (v12)
  {
    sub_18EC6756C();
    swift_unknownObjectRelease();
    sub_18EC3FA60(v17, v18);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  v13 = swift_dynamicCast();
  v14 = *(_QWORD *)(v4 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v13)
  {
    v15(v8, 0, 1, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v8, v4);
  }
  else
  {
    v15(v8, 1, 1, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 16))(a1, v2 + *(_QWORD *)(*(_QWORD *)v2 + 88));
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18EC61264()
{
  return swift_retain();
}

uint64_t AXThreadLocal.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AXThreadLocal.__deallocating_deinit()
{
  AXThreadLocal.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18EC612EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_18EC66F00();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AXThreadLocal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AXThreadLocal);
}

uint64_t method lookup function for AXThreadLocal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AXThreadLocal.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AXThreadLocal.withValue<A>(_:operation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AXThreadLocal.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AXThreadLocal.projectedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_18EC613BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE139AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

int *AudioEffectConfiguration.init(id:effect:parameters:properties:enabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *result;
  _QWORD *v16;

  v14 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  result = (int *)type metadata accessor for AudioEffectConfiguration();
  v16 = (_QWORD *)(a7 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  *(_QWORD *)(a7 + result[6]) = a4;
  *(_BYTE *)(a7 + result[8]) = a6;
  *(_QWORD *)(a7 + result[7]) = a5;
  return result;
}

uint64_t type metadata accessor for AudioEffectConfiguration()
{
  uint64_t result;

  result = qword_1EE13B6A8;
  if (!qword_1EE13B6A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AudioEffectConfiguration.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_18EC66F00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AudioEffectConfiguration.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_18EC66F00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEffectConfiguration.id.modify())()
{
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.effect.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEffectConfiguration.effect.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AudioEffectConfiguration.effect.modify())(_QWORD)
{
  type metadata accessor for AudioEffectConfiguration();
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.parameters.getter()
{
  type metadata accessor for AudioEffectConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEffectConfiguration.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for AudioEffectConfiguration() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AudioEffectConfiguration.parameters.modify())(_QWORD)
{
  type metadata accessor for AudioEffectConfiguration();
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.properties.getter()
{
  type metadata accessor for AudioEffectConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEffectConfiguration.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for AudioEffectConfiguration() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AudioEffectConfiguration.properties.modify())(_QWORD)
{
  type metadata accessor for AudioEffectConfiguration();
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32));
}

uint64_t AudioEffectConfiguration.enabled.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32)) = a1;
  return sub_18EC61754();
}

uint64_t sub_18EC61754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for AudioEffectConfiguration();
  v3 = *(int *)(v2 + 28);
  v4 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 32));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v1 + v3);
  *(_QWORD *)(v1 + v3) = 0x8000000000000000;
  sub_18EC62BB4(v4 != 1, 0x737361707962, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + v3) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t (*AudioEffectConfiguration.enabled.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  type metadata accessor for AudioEffectConfiguration();
  return sub_18EC61828;
}

uint64_t sub_18EC61828(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return sub_18EC61754();
  return result;
}

uint64_t AudioEffectConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_18EC66F00();
  sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_18EC67140();
  v3 = type metadata accessor for AudioEffectConfiguration();
  swift_bridgeObjectRetain();
  sub_18EC6720C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_18EC276D4(a1, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  sub_18EC27534(a1, v5);
  swift_bridgeObjectRelease();
  return sub_18EC67AC4();
}

uint64_t sub_18EC61944(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(float *)(*(_QWORD *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_18EC1FB10(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(float *)(*(_QWORD *)(a2 + 56) + 4 * v19) != v18)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_18EC61AF4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_DWORD *)(*(_QWORD *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_18EC1FB10(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_DWORD *)(*(_QWORD *)(a2 + 56) + 4 * v19) != v18)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_18EC61C9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18EC61CC0 + 4 * byte_18EC6DE10[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_18EC61CC0()
{
  return 0x746365666665;
}

uint64_t sub_18EC61CD4()
{
  return 0x6574656D61726170;
}

uint64_t sub_18EC61CF4()
{
  return 0x69747265706F7270;
}

uint64_t sub_18EC61D10()
{
  return 0x64656C62616E65;
}

uint64_t sub_18EC61D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18EC637AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_18EC61D4C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_18EC61D58()
{
  sub_18EC62EBC();
  return sub_18EC67B54();
}

uint64_t sub_18EC61D80()
{
  sub_18EC62EBC();
  return sub_18EC67B60();
}

uint64_t AudioEffectConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B608);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18EC62EBC();
  sub_18EC67B18();
  LOBYTE(v12) = 0;
  sub_18EC66F00();
  sub_18EC19538(&qword_1EE13B618, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_18EC677E8();
  if (!v2)
  {
    v9 = type metadata accessor for AudioEffectConfiguration();
    LOBYTE(v12) = 1;
    sub_18EC677D0();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC60);
    sub_18EC62F00(&qword_1EE13ACD0, &qword_1EE13AC60, MEMORY[0x1E0DEB198]);
    sub_18EC677E8();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B620);
    sub_18EC62F00(&qword_1EE13B628, &qword_1EE13B620, MEMORY[0x1E0DEE100]);
    sub_18EC677E8();
    LOBYTE(v12) = 4;
    sub_18EC677DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AudioEffectConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  sub_18EC67AAC();
  sub_18EC66F00();
  sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_18EC67140();
  v1 = type metadata accessor for AudioEffectConfiguration();
  swift_bridgeObjectRetain();
  sub_18EC6720C();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  swift_bridgeObjectRetain();
  sub_18EC276D4((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + *(int *)(v1 + 28));
  swift_bridgeObjectRetain();
  sub_18EC27534((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  sub_18EC67AC4();
  return sub_18EC67ADC();
}

uint64_t AudioEffectConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;

  v22 = a2;
  v26 = sub_18EC66F00();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B630);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for AudioEffectConfiguration();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18EC62EBC();
  v25 = v7;
  v11 = (uint64_t)v27;
  sub_18EC67B0C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v5;
  v27 = a1;
  v12 = (uint64_t)v10;
  LOBYTE(v29) = 0;
  sub_18EC19538(&qword_1EE13B638, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = v23;
  v14 = v26;
  sub_18EC67794();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v13, v14);
  LOBYTE(v29) = 1;
  v15 = sub_18EC6777C();
  v16 = (uint64_t *)(v12 + v8[5]);
  *v16 = v15;
  v16[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13AC60);
  v28 = 2;
  sub_18EC62F5C(&qword_1EE13ACF0, &qword_1EE13AC60, MEMORY[0x1E0DEB1C0]);
  sub_18EC67794();
  *(_QWORD *)(v12 + v8[6]) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B620);
  v28 = 3;
  sub_18EC62F5C(&qword_1EE13B640, &qword_1EE13B620, MEMORY[0x1E0DEE128]);
  sub_18EC67794();
  *(_QWORD *)(v12 + v8[7]) = v29;
  LOBYTE(v29) = 4;
  v18 = v24;
  v19 = sub_18EC67788();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v18);
  *(_BYTE *)(v12 + v8[8]) = v19 & 1;
  sub_18EC2856C(v12, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_18EC285B0(v12);
}

uint64_t sub_18EC6251C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  sub_18EC67AAC();
  sub_18EC66F00();
  sub_18EC19538((unint64_t *)&qword_1EE13AB40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_18EC67140();
  swift_bridgeObjectRetain();
  sub_18EC6720C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_18EC276D4((uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 + *(int *)(a2 + 28));
  swift_bridgeObjectRetain();
  sub_18EC27534((uint64_t)v7, v5);
  swift_bridgeObjectRelease();
  sub_18EC67AC4();
  return sub_18EC67ADC();
}

uint64_t sub_18EC62614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_18EC66F00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_18EC6264C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEffectConfiguration.init(from:)(a1, a2);
}

uint64_t sub_18EC62660(_QWORD *a1)
{
  return AudioEffectConfiguration.encode(to:)(a1);
}

uint64_t sub_18EC62678(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18EC1FB10(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18EC4D030();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_18EC45474(a1, v18[7] + 40 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 40 * v12;
    v24 = *(_OWORD *)a1;
    v25 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18EC4B4FC(v15, a4 & 1);
  v20 = sub_18EC1FB10(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_18EC45474(a1, v18[7] + 40 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_18EC67A64();
  __break(1u);
  return result;
}

_OWORD *sub_18EC627E4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_18EC1FBF4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_18EC3FA60(a1, v17);
      }
      return sub_18EC62D04(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_18EC4D404();
      goto LABEL_7;
    }
    sub_18EC4BB5C(v13, a3 & 1);
    v19 = sub_18EC1FBF4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_18EC62D04(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_18EC67A64();
  __break(1u);
  return result;
}

void sub_18EC628FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18EC1FB10(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18EC4D5C4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_18EC4BE48(v15, a4 & 1);
  v20 = sub_18EC1FB10(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_18EC67A64();
  __break(1u);
}

uint64_t sub_18EC62A58(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_18EC66F00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_18EC1FC4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_18EC4D5D0();
    goto LABEL_7;
  }
  sub_18EC4BE54(v17, a3 & 1);
  v23 = sub_18EC1FC4C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_18EC67A64();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_18EC62D68(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_18EC62BB4(int a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18EC1FB10(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_18EC4D9A8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_DWORD *)(v18[7] + 4 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_DWORD *)(v18[7] + 4 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18EC4C4C8(result, a4 & 1);
  result = sub_18EC1FB10(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_18EC67A64();
  __break(1u);
  return result;
}

_OWORD *sub_18EC62D04(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_18EC3FA60(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_18EC62D68(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_18EC66F00();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t _s15AXCoreUtilities24AudioEffectConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  char v11;

  if ((sub_18EC66EDC() & 1) == 0)
    goto LABEL_10;
  v4 = (int *)type metadata accessor for AudioEffectConfiguration();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_18EC679A4(), v11 = 0, (v10 & 1) != 0))
  {
    if ((sub_18EC61944(*(_QWORD *)(a1 + v4[6]), *(_QWORD *)(a2 + v4[6])) & 1) != 0
      && (sub_18EC61AF4(*(_QWORD *)(a1 + v4[7]), *(_QWORD *)(a2 + v4[7])) & 1) != 0)
    {
      v11 = *(_BYTE *)(a1 + v4[8]) ^ *(_BYTE *)(a2 + v4[8]) ^ 1;
      return v11 & 1;
    }
LABEL_10:
    v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_18EC62EBC()
{
  unint64_t result;

  result = qword_1EE13B610;
  if (!qword_1EE13B610)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6E054, &type metadata for AudioEffectConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13B610);
  }
  return result;
}

uint64_t sub_18EC62F00(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x1E0DEA970];
    v7[1] = a3;
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEA0B8], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC62F5C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x1E0DEA9A0];
    v7[1] = a3;
    result = MEMORY[0x193FFA51C](MEMORY[0x1E0DEA0D8], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18EC62FB8()
{
  return sub_18EC19538(&qword_1EE13B648, (uint64_t (*)(uint64_t))type metadata accessor for AudioEffectConfiguration, (uint64_t)&protocol conformance descriptor for AudioEffectConfiguration);
}

uint64_t sub_18EC62FE4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for AudioEffectConfiguration();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_18EC63018(char *a1, uint64_t a2)
{
  char v2;

  v2 = *a1;
  *(_BYTE *)(a2 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32)) = v2;
  return sub_18EC61754();
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEffectConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_18EC66F00();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEffectConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_18EC66F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEffectConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18EC633E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_18EC66F00();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEffectConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18EC63470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_18EC66F00();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_18EC634EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18EC66F00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEffectConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEffectConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_18EC63654 + 4 * byte_18EC6DE1A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_18EC63688 + 4 * byte_18EC6DE15[v4]))();
}

uint64_t sub_18EC63688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC63690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18EC63698);
  return result;
}

uint64_t sub_18EC636A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18EC636ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_18EC636B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC636B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEffectConfiguration.CodingKeys()
{
  return &type metadata for AudioEffectConfiguration.CodingKeys;
}

unint64_t sub_18EC636D8()
{
  unint64_t result;

  result = qword_1EE13B6F0;
  if (!qword_1EE13B6F0)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6E02C, &type metadata for AudioEffectConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13B6F0);
  }
  return result;
}

unint64_t sub_18EC63720()
{
  unint64_t result;

  result = qword_1EE13B6F8;
  if (!qword_1EE13B6F8)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6DF9C, &type metadata for AudioEffectConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13B6F8);
  }
  return result;
}

unint64_t sub_18EC63768()
{
  unint64_t result;

  result = qword_1EE13B700;
  if (!qword_1EE13B700)
  {
    result = MEMORY[0x193FFA51C](&unk_18EC6DFC4, &type metadata for AudioEffectConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE13B700);
  }
  return result;
}

uint64_t sub_18EC637AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746365666665 && a2 == 0xE600000000000000 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_18EC679A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_18EC679A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SmartForceCast<A>(value:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  double v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unsigned int v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v20;
  double v21;
  _BYTE *v22;
  _QWORD v23[2];
  _QWORD v24[4];
  __int128 v25;
  _BYTE v26[32];

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18EC1B600(v7, (uint64_t)v26);
  v10 = MEMORY[0x1E0DEE9B8];
  v11 = MEMORY[0x1E0DEE9B8] + 8;
  if (swift_dynamicCast())
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v9, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE13B550);
  if (swift_dynamicCast())
  {
    sub_18EC1B5E8(&v25, (uint64_t)v24);
    if (swift_dynamicCastMetatype())
    {
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      v23[0] = sub_18EC6780C();
      v23[1] = v12;
      swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  if (swift_dynamicCast())
  {
    v13 = v25;
    if (swift_dynamicCastMetatype())
    {
LABEL_9:
      v24[0] = v13;
LABEL_92:
      swift_dynamicCast();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    if (swift_dynamicCastMetatype())
    {
      if (v13 < -128)
      {
        __break(1u);
      }
      else if (v13 <= 127)
      {
LABEL_25:
        LOBYTE(v24[0]) = v13;
        goto LABEL_92;
      }
      __break(1u);
LABEL_240:
      if (swift_dynamicCastMetatype())
      {
        if ((unint64_t)v13 >> 31)
        {
          __break(1u);
LABEL_243:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              v15 = (unsigned __int16)v13;
LABEL_246:
              LODWORD(v25) = v15;
              goto LABEL_92;
            }
            goto LABEL_551;
          }
LABEL_287:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
              goto LABEL_289;
            goto LABEL_576;
          }
LABEL_316:
          if (swift_dynamicCastMetatype())
          {
            v16 = (double)(int)v13;
LABEL_318:
            *(double *)&v25 = v16;
            goto LABEL_92;
          }
          if (swift_dynamicCastMetatype())
          {
            v17 = (float)(int)v13;
LABEL_321:
            *(float *)&v25 = v17;
            goto LABEL_92;
          }
          if (swift_dynamicCastMetatype())
          {
            v21 = (double)(int)v13;
LABEL_372:
            *(double *)&v25 = v21;
            goto LABEL_92;
          }
          goto LABEL_598;
        }
LABEL_50:
        LODWORD(v24[0]) = v13;
        goto LABEL_92;
      }
LABEL_284:
      if (swift_dynamicCastMetatype())
      {
        if (v13 < 0)
        {
          __break(1u);
          goto LABEL_287;
        }
LABEL_65:
        v24[0] = v13;
        goto LABEL_92;
      }
LABEL_333:
      if (!swift_dynamicCastMetatype())
      {
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 > 0xFF)
          {
            __break(1u);
LABEL_337:
            if (swift_dynamicCastMetatype())
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
              {
                if (v3 > -2147483650.0)
                {
                  if (v3 >= 2147483650.0)
                  {
                    __break(1u);
LABEL_342:
                    if (swift_dynamicCastMetatype())
                    {
                      if (HIDWORD(v13))
                      {
                        __break(1u);
                        goto LABEL_345;
                      }
LABEL_181:
                      LODWORD(v24[0]) = v13;
                      goto LABEL_92;
                    }
LABEL_444:
                    if (!swift_dynamicCastMetatype())
                    {
                      if (swift_dynamicCastMetatype())
                      {
                        v18 = (double)(unint64_t)v13;
                        goto LABEL_355;
                      }
                      if (swift_dynamicCastMetatype())
                      {
                        v19 = (float)(unint64_t)v13;
                        goto LABEL_358;
                      }
                      goto LABEL_478;
                    }
LABEL_228:
                    v24[0] = v13;
                    goto LABEL_92;
                  }
LABEL_273:
                  LODWORD(v24[0]) = (int)v3;
                  goto LABEL_92;
                }
LABEL_595:
                __break(1u);
                goto LABEL_596;
              }
LABEL_594:
              __break(1u);
              goto LABEL_595;
            }
LABEL_382:
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_607:
                __break(1u);
                goto LABEL_608;
              }
              if (v3 <= -9.22337204e18)
              {
LABEL_608:
                __break(1u);
                goto LABEL_609;
              }
              if (v3 >= 9.22337204e18)
              {
                __break(1u);
LABEL_387:
                if (!swift_dynamicCastMetatype())
                  goto LABEL_390;
                if (WORD1(v13))
                {
                  __break(1u);
                  goto LABEL_390;
                }
                goto LABEL_237;
              }
LABEL_312:
              v24[0] = (uint64_t)v3;
              goto LABEL_92;
            }
LABEL_418:
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_616:
                __break(1u);
                goto LABEL_617;
              }
              if (v3 <= -1.0)
              {
LABEL_617:
                __break(1u);
                goto LABEL_618;
              }
              if (v3 >= 1.84467441e19)
              {
                __break(1u);
LABEL_423:
                result = swift_dynamicCastMetatype();
                if (result)
                {
                  if ((~LODWORD(v3) & 0x7F800000) != 0)
                  {
                    if (*(float *)&v3 > -1.0)
                    {
                      if (*(float *)&v3 < 256.0)
                      {
                        LOBYTE(v25) = (int)*(float *)&v3;
                        goto LABEL_92;
                      }
                      goto LABEL_620;
                    }
LABEL_619:
                    __break(1u);
LABEL_620:
                    __break(1u);
                    goto LABEL_621;
                  }
LABEL_618:
                  __break(1u);
                  goto LABEL_619;
                }
                goto LABEL_455;
              }
LABEL_369:
              v24[0] = (unint64_t)v3;
              goto LABEL_92;
            }
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_626:
                __break(1u);
                goto LABEL_627;
              }
              if (v3 <= -1.0)
              {
LABEL_627:
                __break(1u);
                goto LABEL_628;
              }
              if (v3 >= 256.0)
              {
                __break(1u);
                goto LABEL_454;
              }
LABEL_469:
              LOBYTE(v24[0]) = (int)v3;
              goto LABEL_92;
            }
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_636:
                __break(1u);
                goto LABEL_637;
              }
              if (v3 <= -1.0)
              {
LABEL_637:
                __break(1u);
                goto LABEL_638;
              }
              if (v3 >= 65536.0)
              {
                __break(1u);
                goto LABEL_485;
              }
LABEL_433:
              LOWORD(v24[0]) = (int)v3;
              goto LABEL_92;
            }
LABEL_515:
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_646:
                __break(1u);
                goto LABEL_647;
              }
              if (v3 <= -1.0)
              {
LABEL_647:
                __break(1u);
                goto LABEL_648;
              }
              if (v3 >= 4294967300.0)
              {
                __break(1u);
                goto LABEL_520;
              }
LABEL_538:
              LODWORD(v24[0]) = v3;
              goto LABEL_92;
            }
LABEL_546:
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_654:
                __break(1u);
                goto LABEL_655;
              }
              if (v3 <= -1.0)
              {
LABEL_655:
                __break(1u);
                goto LABEL_656;
              }
              if (v3 >= 1.84467441e19)
              {
                __break(1u);
LABEL_551:
                __break(1u);
                goto LABEL_552;
              }
              goto LABEL_501;
            }
            goto LABEL_565;
          }
LABEL_108:
          LOBYTE(v24[0]) = v13;
          goto LABEL_92;
        }
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 >> 16)
          {
            __break(1u);
LABEL_417:
            __break(1u);
            goto LABEL_418;
          }
LABEL_138:
          LOWORD(v24[0]) = v13;
          goto LABEL_92;
        }
LABEL_441:
        if (swift_dynamicCastMetatype())
        {
          if (!HIDWORD(v13))
            goto LABEL_181;
          __break(1u);
        }
        goto LABEL_444;
      }
LABEL_89:
      v24[0] = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
      if (v13 < -32768)
      {
        __break(1u);
      }
      else if (v13 < 0x8000)
      {
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_284;
    }
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v13 = SLOBYTE(v24[0]);
    if (swift_dynamicCastMetatype())
    {
LABEL_21:
      *(_QWORD *)&v25 = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
LABEL_54:
      LOBYTE(v25) = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
      goto LABEL_69;
    if (swift_dynamicCastMetatype())
      goto LABEL_91;
    if (swift_dynamicCastMetatype())
      goto LABEL_58;
    v11 = v13;
    if (!swift_dynamicCastMetatype())
      goto LABEL_125;
    if ((v13 & 0x80000000) == 0)
    {
LABEL_121:
      *(_QWORD *)&v25 = v11;
      goto LABEL_92;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    v13 = SLOWORD(v24[0]);
    if (swift_dynamicCastMetatype())
      goto LABEL_21;
  }
  else
  {
    if (swift_dynamicCast())
    {
      v13 = LODWORD(v24[0]);
      v11 = SLODWORD(v24[0]);
      if (swift_dynamicCastMetatype())
        goto LABEL_28;
      if (swift_dynamicCastMetatype())
      {
        if ((int)v13 < -128)
        {
          __break(1u);
        }
        else if ((int)v13 <= 127)
        {
          goto LABEL_54;
        }
        __break(1u);
        goto LABEL_333;
      }
      if (swift_dynamicCastMetatype())
      {
        if ((int)v13 < -32768)
        {
          __break(1u);
        }
        else if ((int)v13 < 0x8000)
        {
          goto LABEL_69;
        }
        __break(1u);
        goto LABEL_382;
      }
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
              goto LABEL_147;
LABEL_477:
            __break(1u);
LABEL_478:
            if (!swift_dynamicCastMetatype())
              goto LABEL_598;
            v20 = (double)(unint64_t)v13;
            goto LABEL_361;
          }
LABEL_187:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              if (v13 <= 0xFF)
                goto LABEL_190;
LABEL_514:
              __break(1u);
              goto LABEL_515;
            }
LABEL_513:
            __break(1u);
            goto LABEL_514;
          }
LABEL_234:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              if (!WORD1(v13))
                goto LABEL_237;
              goto LABEL_543;
            }
LABEL_542:
            __break(1u);
LABEL_543:
            __break(1u);
            goto LABEL_544;
          }
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype())
              goto LABEL_316;
            if ((v13 & 0x80000000) == 0)
              goto LABEL_315;
            goto LABEL_590;
          }
          if ((v13 & 0x80000000) == 0)
            goto LABEL_276;
          goto LABEL_572;
        }
        goto LABEL_110;
      }
      goto LABEL_91;
    }
    if (!swift_dynamicCast())
      goto LABEL_43;
    v13 = v25;
    if (swift_dynamicCastMetatype())
      goto LABEL_9;
    if (!swift_dynamicCastMetatype())
    {
LABEL_78:
      if (!swift_dynamicCastMetatype())
        goto LABEL_101;
      if (v13 < -32768)
      {
        __break(1u);
LABEL_400:
        result = swift_dynamicCastMetatype();
        if (!result)
        {
LABEL_429:
          result = swift_dynamicCastMetatype();
          if (result)
          {
            if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
            {
LABEL_621:
              __break(1u);
              goto LABEL_622;
            }
            if (v3 <= -1.0)
            {
LABEL_622:
              __break(1u);
              goto LABEL_623;
            }
            if (v3 >= 65536.0)
            {
LABEL_623:
              __break(1u);
              goto LABEL_624;
            }
            goto LABEL_433;
          }
          result = swift_dynamicCastMetatype();
          if (!result)
          {
LABEL_497:
            result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_641:
                __break(1u);
                goto LABEL_642;
              }
              if (v3 <= -1.0)
              {
LABEL_642:
                __break(1u);
                goto LABEL_643;
              }
              if (v3 >= 1.84467441e19)
              {
LABEL_643:
                __break(1u);
                goto LABEL_644;
              }
LABEL_501:
              v24[0] = (unint64_t)v3;
              goto LABEL_92;
            }
            goto LABEL_565;
          }
          if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_631:
            __break(1u);
            goto LABEL_632;
          }
          if (v3 <= -1.0)
          {
LABEL_632:
            __break(1u);
            goto LABEL_633;
          }
          if (v3 < 4294967300.0)
            goto LABEL_538;
          __break(1u);
          goto LABEL_465;
        }
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_612:
          __break(1u);
          goto LABEL_613;
        }
        if (v3 <= -1.0)
        {
LABEL_613:
          __break(1u);
          goto LABEL_614;
        }
        if (v3 < 256.0)
          goto LABEL_469;
        __break(1u);
LABEL_405:
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_614:
            __break(1u);
            goto LABEL_615;
          }
          if (v3 <= -9.22337204e18)
          {
LABEL_615:
            __break(1u);
            goto LABEL_616;
          }
          if (v3 < 9.22337204e18)
            goto LABEL_312;
          __break(1u);
LABEL_410:
          __break(1u);
          goto LABEL_411;
        }
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_624:
            __break(1u);
            goto LABEL_625;
          }
          if (v3 <= -1.0)
          {
LABEL_625:
            __break(1u);
            goto LABEL_626;
          }
          if (v3 < 1.84467441e19)
            goto LABEL_369;
          __break(1u);
          goto LABEL_439;
        }
LABEL_465:
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_633:
            __break(1u);
            goto LABEL_634;
          }
          if (v3 <= -1.0)
          {
LABEL_634:
            __break(1u);
            goto LABEL_635;
          }
          if (v3 >= 256.0)
          {
LABEL_635:
            __break(1u);
            goto LABEL_636;
          }
          goto LABEL_469;
        }
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_644:
            __break(1u);
            goto LABEL_645;
          }
          if (v3 <= -1.0)
          {
LABEL_645:
            __break(1u);
            goto LABEL_646;
          }
          if (v3 < 65536.0)
            goto LABEL_433;
          __break(1u);
          goto LABEL_507;
        }
        goto LABEL_534;
      }
      if (v13 < 0x8000)
        goto LABEL_32;
      __break(1u);
      goto LABEL_82;
    }
    if (v13 < -128)
    {
      __break(1u);
LABEL_365:
      result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_602:
          __break(1u);
          goto LABEL_603;
        }
        if (v3 <= -1.0)
        {
LABEL_603:
          __break(1u);
          goto LABEL_604;
        }
        if (v3 >= 1.84467441e19)
        {
LABEL_604:
          __break(1u);
          goto LABEL_605;
        }
        goto LABEL_369;
      }
      goto LABEL_400;
    }
    if (v13 <= 127)
      goto LABEL_25;
    __break(1u);
  }
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype())
      goto LABEL_69;
    if (!swift_dynamicCastMetatype())
    {
      if (swift_dynamicCastMetatype())
        goto LABEL_58;
      v11 = (unsigned __int16)v13;
      if (!swift_dynamicCastMetatype())
        goto LABEL_153;
      if ((v13 & 0x80000000) != 0)
      {
LABEL_454:
        __break(1u);
LABEL_455:
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~LODWORD(v3) & 0x7F800000) != 0)
          {
            if (*(float *)&v3 > -1.0)
            {
              if (*(float *)&v3 < 65536.0)
              {
                LOWORD(v25) = (int)*(float *)&v3;
                goto LABEL_92;
              }
              goto LABEL_630;
            }
LABEL_629:
            __break(1u);
LABEL_630:
            __break(1u);
            goto LABEL_631;
          }
LABEL_628:
          __break(1u);
          goto LABEL_629;
        }
        goto LABEL_488;
      }
      goto LABEL_121;
    }
LABEL_91:
    LODWORD(v25) = v13;
    goto LABEL_92;
  }
  if ((int)v13 < -128)
  {
LABEL_298:
    __break(1u);
    goto LABEL_299;
  }
  if ((int)v13 <= 127)
    goto LABEL_54;
  __break(1u);
LABEL_43:
  if (swift_dynamicCast())
  {
    v13 = v25;
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0)
        goto LABEL_9;
      __break(1u);
LABEL_47:
      if (swift_dynamicCastMetatype())
      {
        if (v13 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v13 <= 0x7FFFFFFF)
        {
          goto LABEL_50;
        }
        __break(1u);
        goto LABEL_329;
      }
      if (swift_dynamicCastMetatype())
        goto LABEL_65;
LABEL_87:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0)
          goto LABEL_89;
        goto LABEL_410;
      }
LABEL_105:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v13 <= 0xFF)
            goto LABEL_108;
          goto LABEL_440;
        }
LABEL_439:
        __break(1u);
LABEL_440:
        __break(1u);
        goto LABEL_441;
      }
      goto LABEL_135;
    }
LABEL_75:
    if (swift_dynamicCastMetatype())
    {
      if ((unint64_t)v13 <= 0x7F)
        goto LABEL_25;
      __break(1u);
      goto LABEL_78;
    }
    if (swift_dynamicCastMetatype())
    {
      if (!((unint64_t)v13 >> 15))
        goto LABEL_32;
      __break(1u);
      goto LABEL_97;
    }
    if (!swift_dynamicCastMetatype())
      goto LABEL_157;
    if (!((unint64_t)v13 >> 31))
      goto LABEL_50;
    __break(1u);
LABEL_125:
    if (!swift_dynamicCastMetatype())
      goto LABEL_163;
    if ((v13 & 0x80000000) == 0)
    {
LABEL_190:
      LOBYTE(v25) = v13;
      goto LABEL_92;
    }
    __break(1u);
LABEL_128:
    if (swift_dynamicCastMetatype())
      goto LABEL_65;
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0)
        goto LABEL_89;
      __break(1u);
      goto LABEL_132;
    }
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v13 <= 0xFF)
          goto LABEL_108;
        __break(1u);
        goto LABEL_226;
      }
      goto LABEL_533;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
      {
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x8000000000000000) == 0)
            goto LABEL_228;
          __break(1u);
        }
        goto LABEL_353;
      }
      if (v13 < 0)
        goto LABEL_586;
      if (!HIDWORD(v13))
        goto LABEL_181;
      __break(1u);
LABEL_308:
      if (swift_dynamicCastMetatype())
      {
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 < 9.22337204e18)
              goto LABEL_312;
            goto LABEL_589;
          }
LABEL_588:
          __break(1u);
LABEL_589:
          __break(1u);
LABEL_590:
          __break(1u);
          goto LABEL_591;
        }
LABEL_587:
        __break(1u);
        goto LABEL_588;
      }
      goto LABEL_365;
    }
    if (v13 < 0)
    {
LABEL_559:
      __break(1u);
      goto LABEL_560;
    }
    if (!((unint64_t)v13 >> 16))
      goto LABEL_138;
    __break(1u);
LABEL_269:
    if (swift_dynamicCastMetatype())
    {
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -2147483650.0)
        {
          if (v3 < 2147483650.0)
            goto LABEL_273;
          goto LABEL_571;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_571:
      __break(1u);
LABEL_572:
      __break(1u);
      goto LABEL_573;
    }
    goto LABEL_308;
  }
  if (swift_dynamicCast())
  {
    v11 = LOBYTE(v24[0]);
    if (!swift_dynamicCastMetatype())
    {
      LODWORD(v13) = (char)v11;
      if (swift_dynamicCastMetatype())
      {
        if (((char)v11 & 0x80000000) == 0)
        {
          LOBYTE(v25) = v11;
          goto LABEL_92;
        }
        goto LABEL_417;
      }
      if (swift_dynamicCastMetatype())
      {
        LOWORD(v25) = v11;
        goto LABEL_92;
      }
      if (swift_dynamicCastMetatype())
      {
        LODWORD(v25) = v11;
        goto LABEL_92;
      }
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype())
          {
            LOBYTE(v25) = v11;
            goto LABEL_92;
          }
LABEL_329:
          if (swift_dynamicCastMetatype())
          {
            LOWORD(v25) = v11;
            goto LABEL_92;
          }
LABEL_378:
          if (swift_dynamicCastMetatype())
          {
            LODWORD(v25) = v11;
            goto LABEL_92;
          }
LABEL_411:
          if (swift_dynamicCastMetatype())
            goto LABEL_289;
          if (swift_dynamicCastMetatype())
          {
            v16 = (double)v13;
            goto LABEL_318;
          }
LABEL_472:
          if (swift_dynamicCastMetatype())
          {
            v17 = (float)v13;
            goto LABEL_321;
          }
LABEL_509:
          if (swift_dynamicCastMetatype())
          {
            v21 = (double)v13;
            goto LABEL_372;
          }
LABEL_598:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
          sub_18EC1A5D0();
          swift_allocError();
          *v22 = 3;
          return swift_willThrow();
        }
        goto LABEL_121;
      }
LABEL_110:
      *(_QWORD *)&v25 = v11;
      goto LABEL_92;
    }
LABEL_28:
    *(_QWORD *)&v25 = v11;
    goto LABEL_92;
  }
  if (swift_dynamicCast())
  {
    v13 = LOWORD(v24[0]);
    if (swift_dynamicCastMetatype())
      goto LABEL_21;
    if (!swift_dynamicCastMetatype())
    {
LABEL_132:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000) != 0)
        {
          __break(1u);
LABEL_135:
          if (swift_dynamicCastMetatype())
          {
            if (v13 < 0)
            {
              __break(1u);
            }
            else if (!((unint64_t)v13 >> 16))
            {
              goto LABEL_138;
            }
            __break(1u);
            goto LABEL_472;
          }
LABEL_178:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x8000000000000000) == 0)
            {
              if (!HIDWORD(v13))
                goto LABEL_181;
              goto LABEL_508;
            }
LABEL_507:
            __break(1u);
LABEL_508:
            __break(1u);
            goto LABEL_509;
          }
LABEL_226:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x8000000000000000) == 0)
              goto LABEL_228;
            __break(1u);
            goto LABEL_540;
          }
LABEL_353:
          if (swift_dynamicCastMetatype())
          {
            v18 = (double)v13;
LABEL_355:
            *(double *)v24 = v18;
            goto LABEL_92;
          }
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype())
              goto LABEL_598;
            v20 = (double)v13;
LABEL_361:
            *(double *)v24 = v20;
            goto LABEL_92;
          }
          v19 = (float)v13;
LABEL_358:
          *(float *)v24 = v19;
          goto LABEL_92;
        }
        goto LABEL_69;
      }
LABEL_172:
      if (swift_dynamicCastMetatype())
        goto LABEL_91;
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype())
            {
LABEL_390:
              if (!swift_dynamicCastMetatype())
              {
                if (!swift_dynamicCastMetatype())
                {
                  if (swift_dynamicCastMetatype())
                  {
                    v16 = (double)v13;
                    goto LABEL_318;
                  }
LABEL_485:
                  if (swift_dynamicCastMetatype())
                  {
                    v17 = (float)v13;
                    goto LABEL_321;
                  }
LABEL_520:
                  if (swift_dynamicCastMetatype())
                  {
                    v21 = (double)v13;
                    goto LABEL_372;
                  }
                  goto LABEL_598;
                }
LABEL_315:
                *(_QWORD *)&v25 = v13;
                goto LABEL_92;
              }
LABEL_276:
              LODWORD(v25) = v13;
              goto LABEL_92;
            }
LABEL_237:
            LOWORD(v25) = v13;
            goto LABEL_92;
          }
          if (v13 > 0xFF)
          {
            __break(1u);
            goto LABEL_178;
          }
          goto LABEL_190;
        }
        goto LABEL_147;
      }
LABEL_58:
      *(_QWORD *)&v25 = v13;
      goto LABEL_92;
    }
    if (v13 <= 0x7F)
      goto LABEL_54;
    __break(1u);
    goto LABEL_75;
  }
LABEL_82:
  if (swift_dynamicCast())
  {
    v13 = LODWORD(v24[0]);
    if (swift_dynamicCastMetatype())
      goto LABEL_21;
    if (swift_dynamicCastMetatype())
    {
      if (v13 > 0x7F)
      {
        __break(1u);
        goto LABEL_87;
      }
      goto LABEL_54;
    }
LABEL_160:
    if (swift_dynamicCastMetatype())
    {
      if (v13 >> 15)
      {
        __break(1u);
LABEL_163:
        LODWORD(v10) = v13;
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x80000000) == 0)
          {
            LOWORD(v25) = v13;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_494;
        }
LABEL_214:
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x80000000) == 0)
          {
            LODWORD(v25) = v10;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_530;
        }
        goto LABEL_257;
      }
LABEL_69:
      LOWORD(v25) = v13;
      goto LABEL_92;
    }
LABEL_211:
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x80000000) != 0)
      {
        __break(1u);
        goto LABEL_214;
      }
      goto LABEL_91;
    }
LABEL_252:
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
          goto LABEL_387;
        if (v13 > 0xFF)
        {
          __break(1u);
LABEL_257:
          if (!swift_dynamicCastMetatype())
            goto LABEL_316;
          if ((v13 & 0x80000000) == 0)
          {
LABEL_289:
            *(_QWORD *)&v25 = v11;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_260;
        }
        goto LABEL_190;
      }
LABEL_147:
      *(_QWORD *)&v25 = v13;
      goto LABEL_92;
    }
    goto LABEL_58;
  }
LABEL_97:
  if (swift_dynamicCast())
  {
    v13 = v25;
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0)
        goto LABEL_9;
      __break(1u);
LABEL_101:
      if (swift_dynamicCastMetatype())
      {
        if (v13 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v13 <= 0x7FFFFFFF)
            goto LABEL_50;
          __break(1u);
          goto LABEL_105;
        }
        __break(1u);
        goto LABEL_429;
      }
      goto LABEL_128;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
        goto LABEL_240;
      if (!((unint64_t)v13 >> 15))
      {
LABEL_32:
        LOWORD(v24[0]) = v13;
        goto LABEL_92;
      }
      __break(1u);
LABEL_198:
      if (!swift_dynamicCastMetatype())
        goto LABEL_243;
      if ((v13 & 0x80000000) == 0)
        goto LABEL_237;
      __break(1u);
      goto LABEL_201;
    }
    if ((unint64_t)v13 <= 0x7F)
      goto LABEL_25;
    __break(1u);
LABEL_153:
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x80000000) != 0)
      {
        __break(1u);
LABEL_488:
        result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~LODWORD(v3) & 0x7F800000) != 0)
          {
            if (*(float *)&v3 > -1.0)
            {
              if (*(float *)&v3 < 4295000000.0)
              {
                v15 = *(float *)&v3;
                goto LABEL_246;
              }
              goto LABEL_640;
            }
LABEL_639:
            __break(1u);
LABEL_640:
            __break(1u);
            goto LABEL_641;
          }
LABEL_638:
          __break(1u);
          goto LABEL_639;
        }
LABEL_524:
        result = swift_dynamicCastMetatype();
        if (!result)
        {
LABEL_554:
          if (swift_dynamicCastMetatype())
          {
            v16 = *(float *)&v3;
            goto LABEL_318;
          }
          if (swift_dynamicCastMetatype())
          {
            LODWORD(v25) = LODWORD(v3);
            goto LABEL_92;
          }
LABEL_596:
          if (swift_dynamicCastMetatype())
          {
            v21 = *(float *)&v3;
            goto LABEL_372;
          }
          goto LABEL_598;
        }
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -1.0)
          {
            if (*(float *)&v3 < 1.8447e19)
            {
              *(_QWORD *)&v25 = (unint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_650;
          }
LABEL_649:
          __break(1u);
LABEL_650:
          __break(1u);
          goto LABEL_651;
        }
LABEL_648:
        __break(1u);
        goto LABEL_649;
      }
      if (v13 <= 0xFF)
        goto LABEL_190;
      __break(1u);
LABEL_157:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0)
          goto LABEL_65;
        __break(1u);
        goto LABEL_160;
      }
      goto LABEL_207;
    }
    goto LABEL_198;
  }
  v13 = v10 + 8;
  if (swift_dynamicCast())
  {
    v3 = *(double *)&v25;
    if (swift_dynamicCastMetatype())
    {
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -9.22337204e18)
        {
          if (v3 < 9.22337204e18)
            goto LABEL_118;
          goto LABEL_476;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_476:
      __break(1u);
      goto LABEL_477;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
        goto LABEL_269;
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_540:
        __break(1u);
        goto LABEL_541;
      }
      if (v3 <= -32769.0)
      {
LABEL_541:
        __break(1u);
        goto LABEL_542;
      }
      if (v3 < 32768.0)
        goto LABEL_326;
      __break(1u);
      goto LABEL_234;
    }
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -129.0)
      {
        if (v3 < 128.0)
          goto LABEL_281;
        __break(1u);
        goto LABEL_187;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_513;
  }
  if (!swift_dynamicCast())
  {
    v13 = v10 + 8;
    if (swift_dynamicCast())
    {
      v3 = *(double *)&v25;
      if (swift_dynamicCastMetatype())
      {
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 >= 9.22337204e18)
            {
              __break(1u);
              goto LABEL_172;
            }
            goto LABEL_118;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_524;
      }
      if (swift_dynamicCastMetatype())
      {
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_552:
          __break(1u);
          goto LABEL_553;
        }
        if (v3 <= -129.0)
        {
LABEL_553:
          __break(1u);
          goto LABEL_554;
        }
        if (v3 >= 128.0)
        {
          __break(1u);
          goto LABEL_252;
        }
        goto LABEL_281;
      }
      if (!swift_dynamicCastMetatype())
        goto LABEL_337;
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_577:
        __break(1u);
        goto LABEL_578;
      }
      if (v3 <= -32769.0)
      {
LABEL_578:
        __break(1u);
LABEL_579:
        if (swift_dynamicCastMetatype())
        {
          *(double *)v24 = v3;
          goto LABEL_92;
        }
        goto LABEL_598;
      }
      if (v3 >= 32768.0)
      {
        __break(1u);
LABEL_295:
        if (!swift_dynamicCastMetatype())
          goto LABEL_342;
        if (!((unint64_t)v13 >> 16))
          goto LABEL_138;
        __break(1u);
        goto LABEL_298;
      }
LABEL_326:
      LOWORD(v24[0]) = (int)v3;
      goto LABEL_92;
    }
LABEL_201:
    if (!swift_dynamicCast())
      goto LABEL_598;
    v3 = *(double *)&v25;
    if (swift_dynamicCastMetatype())
    {
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_544:
        __break(1u);
        goto LABEL_545;
      }
      if (v3 <= -9.22337204e18)
      {
LABEL_545:
        __break(1u);
        goto LABEL_546;
      }
      if (v3 >= 9.22337204e18)
      {
        __break(1u);
LABEL_207:
        if (swift_dynamicCastMetatype())
          goto LABEL_89;
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 <= 0xFF)
            goto LABEL_108;
          __break(1u);
          goto LABEL_211;
        }
        goto LABEL_295;
      }
LABEL_118:
      v24[0] = (uint64_t)v3;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
      if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_573:
        __break(1u);
        goto LABEL_574;
      }
      if (v3 <= -129.0)
      {
LABEL_574:
        __break(1u);
        goto LABEL_575;
      }
      if (v3 >= 128.0)
      {
LABEL_575:
        __break(1u);
LABEL_576:
        __break(1u);
        goto LABEL_577;
      }
LABEL_281:
      LOBYTE(v24[0]) = (int)v3;
      goto LABEL_92;
    }
    if (!swift_dynamicCastMetatype())
    {
      result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_605:
          __break(1u);
          goto LABEL_606;
        }
        if (v3 <= -2147483650.0)
        {
LABEL_606:
          __break(1u);
          goto LABEL_607;
        }
        if (v3 < 2147483650.0)
          goto LABEL_273;
        __break(1u);
        goto LABEL_378;
      }
      goto LABEL_405;
    }
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
    {
LABEL_591:
      __break(1u);
      goto LABEL_592;
    }
    if (v3 <= -32769.0)
    {
LABEL_592:
      __break(1u);
      goto LABEL_593;
    }
    if (v3 >= 32768.0)
    {
LABEL_593:
      __break(1u);
      goto LABEL_594;
    }
    goto LABEL_326;
  }
  LODWORD(v3) = v24[0];
  if (swift_dynamicCastMetatype())
  {
    if ((~LODWORD(v3) & 0x7F800000) != 0)
    {
      if (*(float *)&v3 > -9.2234e18)
      {
        if (*(float *)&v3 < 9.2234e18)
        {
          *(_QWORD *)&v25 = (uint64_t)*(float *)&v3;
          goto LABEL_92;
        }
        goto LABEL_496;
      }
LABEL_495:
      __break(1u);
LABEL_496:
      __break(1u);
      goto LABEL_497;
    }
LABEL_494:
    __break(1u);
    goto LABEL_495;
  }
  if (!swift_dynamicCastMetatype())
  {
LABEL_260:
    if (swift_dynamicCastMetatype())
    {
      if ((~LODWORD(v3) & 0x7F800000) != 0)
      {
        if (*(float *)&v3 > -32769.0)
        {
          if (*(float *)&v3 < 32768.0)
          {
            LOWORD(v25) = (int)*(float *)&v3;
            goto LABEL_92;
          }
          goto LABEL_558;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_558:
      __break(1u);
      goto LABEL_559;
    }
LABEL_299:
    if (!swift_dynamicCastMetatype())
    {
LABEL_345:
      result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -9.2234e18)
          {
            if (*(float *)&v3 < 9.2234e18)
            {
              *(_QWORD *)&v25 = (uint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_601;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_601:
        __break(1u);
        goto LABEL_602;
      }
      result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -1.0)
          {
            if (*(float *)&v3 < 1.8447e19)
            {
              *(_QWORD *)&v25 = (unint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_611;
          }
LABEL_610:
          __break(1u);
LABEL_611:
          __break(1u);
          goto LABEL_612;
        }
LABEL_609:
        __break(1u);
        goto LABEL_610;
      }
      goto LABEL_423;
    }
    if ((~LODWORD(v3) & 0x7F800000) != 0)
    {
      if (*(float *)&v3 > -2147500000.0)
      {
        if (*(float *)&v3 < 2147500000.0)
        {
          LODWORD(v25) = (int)*(float *)&v3;
          goto LABEL_92;
        }
        goto LABEL_585;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_585:
    __break(1u);
LABEL_586:
    __break(1u);
    goto LABEL_587;
  }
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
LABEL_530:
    __break(1u);
    goto LABEL_531;
  }
  if (*(float *)&v3 > -129.0)
  {
    if (*(float *)&v3 < 128.0)
    {
      LOBYTE(v25) = (int)*(float *)&v3;
      goto LABEL_92;
    }
    goto LABEL_532;
  }
LABEL_531:
  __break(1u);
LABEL_532:
  __break(1u);
LABEL_533:
  __break(1u);
LABEL_534:
  result = swift_dynamicCastMetatype();
  if (result)
  {
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
    {
LABEL_651:
      __break(1u);
      goto LABEL_652;
    }
    if (v3 <= -1.0)
    {
LABEL_652:
      __break(1u);
      goto LABEL_653;
    }
    if (v3 >= 4294967300.0)
    {
LABEL_653:
      __break(1u);
      goto LABEL_654;
    }
    goto LABEL_538;
  }
LABEL_560:
  result = swift_dynamicCastMetatype();
  if (!result)
  {
LABEL_565:
    if (swift_dynamicCastMetatype())
    {
      *(double *)v24 = v3;
      goto LABEL_92;
    }
    if (!swift_dynamicCastMetatype())
      goto LABEL_579;
    v19 = v3;
    goto LABEL_358;
  }
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_656:
    __break(1u);
    goto LABEL_657;
  }
  if (v3 > -1.0)
  {
    if (v3 < 1.84467441e19)
      goto LABEL_501;
    __break(1u);
    goto LABEL_565;
  }
LABEL_657:
  __break(1u);
  return result;
}

uint64_t __getAXSettingsClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __73__AXAccessQueueTimer__afterDelay_processBlock_shouldTreatAsWritingBlock___block_invoke_cold_1(v0);
}

void AXAppNameForBundleId_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_0_0(&dword_18EBEC000, v2, v3, "Error in getting app name: %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_1_0();
}

void soft_AXSettingsLocalizedStringForKey_cold_1()
{
  void *v0;

  dlerror();
  v0 = (void *)abort_report_np();
  AXIsHiddenAppWithBundleId_cold_1(v0);
}

void AXIsHiddenAppWithBundleId_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_0_0(&dword_18EBEC000, v2, v3, "Error in getting protection mode: %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_1_0();
}

uint64_t __getCSLPRFApplicationLibraryClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[AXIndexMap _initAndDeepCopyIndexMap:].cold.1(v0);
}

void UIAXAppendValidationError_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_18EBEC000, log, OS_LOG_TYPE_ERROR, "%@ : %@", (uint8_t *)&v3, 0x16u);
}

void __UIAccessibilityHandleValidationErrorWithDescription_cold_1(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_18EBEC000, a2, OS_LOG_TYPE_ERROR, "validation error: %{public}@", (uint8_t *)&v2, 0xCu);
}

uint64_t __getCLFSystemShellSwitcherClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return UIAccessibilitySymbolWithName_cold_1(v0);
}

void UIAccessibilitySymbolWithName_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138543362;
  v4 = a1;
  OUTLINED_FUNCTION_2_1(&dword_18EBEC000, a2, a3, "Error locating symbol %{public}@", (uint8_t *)&v3);
}

void AXPerformSafeBlockWithErrorHandler_cold_1(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138543362;
  *(_QWORD *)(buf + 4) = a1;
  _os_log_fault_impl(&dword_18EBEC000, log, OS_LOG_TYPE_FAULT, "%{public}@", buf, 0xCu);

}

void AXPerformSafeBlockWithErrorHandler_cold_2(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138543362;
  *(_QWORD *)(a2 + 4) = a1;
  OUTLINED_FUNCTION_2_1(&dword_18EBEC000, a3, (uint64_t)a3, "%{public}@", (uint8_t *)a2);

}

void _AXAssert_cold_1()
{
  objc_msgSend(MEMORY[0x1E0CB3978], "sleepForTimeInterval:", 1.0);
  abort();
}

void _AXAssertIsMainThread_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_4(&dword_18EBEC000, a1, a3, "Expected to be called on the main thread", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_1_4();
}

void _AXAssertIsThread_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_4(&dword_18EBEC000, a1, a3, "Executing on unexpected thread", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_1_4();
}

uint64_t sub_18EC66E58()
{
  return MEMORY[0x1E0CAE440]();
}

uint64_t sub_18EC66E64()
{
  return MEMORY[0x1E0CAE450]();
}

uint64_t sub_18EC66E70()
{
  return MEMORY[0x1E0CAE458]();
}

uint64_t sub_18EC66E7C()
{
  return MEMORY[0x1E0CAE460]();
}

uint64_t sub_18EC66E88()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_18EC66E94()
{
  return MEMORY[0x1E0CAE4A8]();
}

uint64_t sub_18EC66EA0()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_18EC66EAC()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_18EC66EB8()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_18EC66EC4()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_18EC66ED0()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_18EC66EDC()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_18EC66EE8()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_18EC66EF4()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_18EC66F00()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_18EC66F0C()
{
  return MEMORY[0x1E0CB0A08]();
}

uint64_t sub_18EC66F18()
{
  return MEMORY[0x1E0CB0A10]();
}

uint64_t sub_18EC66F24()
{
  return MEMORY[0x1E0CB0A20]();
}

uint64_t sub_18EC66F30()
{
  return MEMORY[0x1E0CB0A60]();
}

uint64_t sub_18EC66F3C()
{
  return MEMORY[0x1E0CB0A70]();
}

uint64_t sub_18EC66F48()
{
  return MEMORY[0x1E0CB0A90]();
}

uint64_t _s10Foundation6LocaleV12LanguageCodeV15AXCoreUtilitiesE11descriptionSSvg_0()
{
  return MEMORY[0x1E0CB0AA0]();
}

uint64_t sub_18EC66F60()
{
  return MEMORY[0x1E0CB0AA8]();
}

uint64_t sub_18EC66F6C()
{
  return MEMORY[0x1E0CB0AB8]();
}

uint64_t sub_18EC66F78()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_18EC66F84()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_18EC66F90()
{
  return MEMORY[0x1E0CB0B18]();
}

uint64_t sub_18EC66F9C()
{
  return MEMORY[0x1E0CB0BF8]();
}

uint64_t sub_18EC66FA8()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_18EC66FB4()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_18EC66FC0()
{
  return MEMORY[0x1E0CB0C78]();
}

uint64_t sub_18EC66FCC()
{
  return MEMORY[0x1E0CB0C88]();
}

uint64_t sub_18EC66FD8()
{
  return MEMORY[0x1E0CB0CA8]();
}

uint64_t sub_18EC66FE4()
{
  return MEMORY[0x1E0CB0CB0]();
}

uint64_t sub_18EC66FF0()
{
  return MEMORY[0x1E0CB0D28]();
}

uint64_t sub_18EC66FFC()
{
  return MEMORY[0x1E0CB0D30]();
}

uint64_t sub_18EC67008()
{
  return MEMORY[0x1E0CB0D58]();
}

uint64_t sub_18EC67014()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_18EC67020()
{
  return MEMORY[0x1E0CB0DA8]();
}

uint64_t sub_18EC6702C()
{
  return MEMORY[0x1E0CB0DB0]();
}

uint64_t sub_18EC67038()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_18EC67044()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_18EC67050()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_18EC6705C()
{
  return MEMORY[0x1E0DEFCA8]();
}

uint64_t sub_18EC67068()
{
  return MEMORY[0x1E0DEFCB0]();
}

uint64_t sub_18EC67074()
{
  return MEMORY[0x1E0DEFCD0]();
}

uint64_t sub_18EC67080()
{
  return MEMORY[0x1E0DEFD18]();
}

uint64_t sub_18EC6708C()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t sub_18EC67098()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t sub_18EC670A4()
{
  return MEMORY[0x1E0DEFD68]();
}

uint64_t sub_18EC670B0()
{
  return MEMORY[0x1E0DEFD70]();
}

uint64_t sub_18EC670BC()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t sub_18EC670C8()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t sub_18EC670D4()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_18EC670E0()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_18EC670EC()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_18EC670F8()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_18EC67104()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_18EC67110()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_18EC6711C()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_18EC67128()
{
  return MEMORY[0x1E0DEA0F0]();
}

uint64_t sub_18EC67134()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_18EC67140()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_18EC6714C()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_18EC67158()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_18EC67164()
{
  return MEMORY[0x1E0CB1850]();
}

uint64_t sub_18EC67170()
{
  return MEMORY[0x1E0CB1868]();
}

uint64_t sub_18EC6717C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_18EC67188()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_18EC67194()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_18EC671A0()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_18EC671AC()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_18EC671B8()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_18EC671C4()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_18EC671D0()
{
  return MEMORY[0x1E0DEA628]();
}

uint64_t sub_18EC671DC()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_18EC671E8()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_18EC671F4()
{
  return MEMORY[0x1E0DEA668]();
}

uint64_t sub_18EC67200()
{
  return MEMORY[0x1E0DEA678]();
}

uint64_t sub_18EC6720C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_18EC67218()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_18EC67224()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_18EC67230()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_18EC6723C()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_18EC67248()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_18EC67254()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_18EC67260()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_18EC6726C()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_18EC67278()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_18EC67284()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_18EC67290()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_18EC6729C()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_18EC672A8()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_18EC672B4()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_18EC672C0()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_18EC672CC()
{
  return MEMORY[0x1E0DEACC0]();
}

uint64_t sub_18EC672D8()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_18EC672E4()
{
  return MEMORY[0x1E0DEAD38]();
}

uint64_t sub_18EC672F0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_18EC672FC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_18EC67308()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_18EC67314()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_18EC67320()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_18EC6732C()
{
  return MEMORY[0x1E0DEAEB8]();
}

uint64_t sub_18EC67338()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_18EC67344()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_18EC67350()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_18EC6735C()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_18EC67368()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_18EC67374()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_18EC67380()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_18EC6738C()
{
  return MEMORY[0x1E0DF0698]();
}

uint64_t sub_18EC67398()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_18EC673A4()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_18EC673B0()
{
  return MEMORY[0x1E0DF0730]();
}

uint64_t sub_18EC673BC()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_18EC673C8()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_18EC673D4()
{
  return MEMORY[0x1E0DF0770]();
}

uint64_t sub_18EC673E0()
{
  return MEMORY[0x1E0DF0790]();
}

uint64_t sub_18EC673EC()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_18EC673F8()
{
  return MEMORY[0x1E0DF07C0]();
}

uint64_t sub_18EC67404()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_18EC67410()
{
  return MEMORY[0x1E0DF07E0]();
}

uint64_t sub_18EC6741C()
{
  return MEMORY[0x1E0DF07E8]();
}

uint64_t sub_18EC67428()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_18EC67434()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_18EC67440()
{
  return MEMORY[0x1E0DF0820]();
}

uint64_t sub_18EC6744C()
{
  return MEMORY[0x1E0DF0838]();
}

uint64_t sub_18EC67458()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_18EC67464()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_18EC67470()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_18EC6747C()
{
  return MEMORY[0x1E0DF08E0]();
}

uint64_t sub_18EC67488()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_18EC67494()
{
  return MEMORY[0x1E0DF09F8]();
}

uint64_t sub_18EC674A0()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_18EC674AC()
{
  return MEMORY[0x1E0CB1B98]();
}

uint64_t sub_18EC674B8()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_18EC674C4()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_18EC674D0()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_18EC674DC()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_18EC674E8()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_18EC674F4()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_18EC67500()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_18EC6750C()
{
  return MEMORY[0x1E0CB2068]();
}

uint64_t sub_18EC67518()
{
  return MEMORY[0x1E0DEB938]();
}

uint64_t sub_18EC67524()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_18EC67530()
{
  return MEMORY[0x1E0DEBA10]();
}

uint64_t sub_18EC6753C()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_18EC67548()
{
  return MEMORY[0x1E0CB2428]();
}

uint64_t sub_18EC67554()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_18EC67560()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_18EC6756C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_18EC67578()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_18EC67584()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_18EC67590()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_18EC6759C()
{
  return MEMORY[0x1E0CB25C8]();
}

uint64_t sub_18EC675A8()
{
  return MEMORY[0x1E0CB25D0]();
}

uint64_t sub_18EC675B4()
{
  return MEMORY[0x1E0DEC160]();
}

uint64_t sub_18EC675C0()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_18EC675CC()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_18EC675D8()
{
  return MEMORY[0x1E0DEC180]();
}

uint64_t sub_18EC675E4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_18EC675F0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_18EC675FC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_18EC67608()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_18EC67614()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_18EC67620()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_18EC6762C()
{
  return MEMORY[0x1E0DEC2C0]();
}

uint64_t sub_18EC67638()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_18EC67644()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_18EC67650()
{
  return MEMORY[0x1E0DEC598]();
}

uint64_t sub_18EC6765C()
{
  return MEMORY[0x1E0DEC608]();
}

uint64_t sub_18EC67668()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_18EC67674()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_18EC67680()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_18EC6768C()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_18EC67698()
{
  return MEMORY[0x1E0DF0BB8]();
}

uint64_t sub_18EC676A4()
{
  return MEMORY[0x1E0DF0BC0]();
}

uint64_t sub_18EC676B0()
{
  return MEMORY[0x1E0DF0BD0]();
}

uint64_t sub_18EC676BC()
{
  return MEMORY[0x1E0DF0BD8]();
}

uint64_t sub_18EC676C8()
{
  return MEMORY[0x1E0DF0BE8]();
}

uint64_t sub_18EC676D4()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_18EC676E0()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t sub_18EC676EC()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_18EC676F8()
{
  return MEMORY[0x1E0DECAB8]();
}

uint64_t sub_18EC67704()
{
  return MEMORY[0x1E0DECAC8]();
}

uint64_t sub_18EC67710()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_18EC6771C()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_18EC67728()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_18EC67734()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_18EC67740()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_18EC6774C()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_18EC67758()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_18EC67764()
{
  return MEMORY[0x1E0DECF70]();
}

uint64_t sub_18EC67770()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_18EC6777C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_18EC67788()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_18EC67794()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_18EC677A0()
{
  return MEMORY[0x1E0DED058]();
}

uint64_t sub_18EC677AC()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_18EC677B8()
{
  return MEMORY[0x1E0DED0A8]();
}

uint64_t sub_18EC677C4()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_18EC677D0()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_18EC677DC()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_18EC677E8()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_18EC677F4()
{
  return MEMORY[0x1E0DED180]();
}

uint64_t sub_18EC67800()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_18EC6780C()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_18EC67818()
{
  return MEMORY[0x1E0DED2C8]();
}

uint64_t sub_18EC67824()
{
  return MEMORY[0x1E0DED2D0]();
}

uint64_t sub_18EC67830()
{
  return MEMORY[0x1E0DED2D8]();
}

uint64_t sub_18EC6783C()
{
  return MEMORY[0x1E0DED2E8]();
}

uint64_t sub_18EC67848()
{
  return MEMORY[0x1E0DED2F0]();
}

uint64_t sub_18EC67854()
{
  return MEMORY[0x1E0DED2F8]();
}

uint64_t sub_18EC67860()
{
  return MEMORY[0x1E0DED318]();
}

uint64_t sub_18EC6786C()
{
  return MEMORY[0x1E0DED340]();
}

uint64_t sub_18EC67878()
{
  return MEMORY[0x1E0DED350]();
}

uint64_t sub_18EC67884()
{
  return MEMORY[0x1E0DED358]();
}

uint64_t sub_18EC67890()
{
  return MEMORY[0x1E0DED400]();
}

uint64_t sub_18EC6789C()
{
  return MEMORY[0x1E0DED408]();
}

uint64_t sub_18EC678A8()
{
  return MEMORY[0x1E0DED410]();
}

uint64_t sub_18EC678B4()
{
  return MEMORY[0x1E0DED418]();
}

uint64_t sub_18EC678C0()
{
  return MEMORY[0x1E0DED420]();
}

uint64_t sub_18EC678CC()
{
  return MEMORY[0x1E0DED428]();
}

uint64_t sub_18EC678D8()
{
  return MEMORY[0x1E0DED430]();
}

uint64_t sub_18EC678E4()
{
  return MEMORY[0x1E0DED438]();
}

uint64_t sub_18EC678F0()
{
  return MEMORY[0x1E0DED440]();
}

uint64_t sub_18EC678FC()
{
  return MEMORY[0x1E0DED448]();
}

uint64_t sub_18EC67908()
{
  return MEMORY[0x1E0DED450]();
}

uint64_t sub_18EC67914()
{
  return MEMORY[0x1E0DED458]();
}

uint64_t sub_18EC67920()
{
  return MEMORY[0x1E0DED460]();
}

uint64_t sub_18EC6792C()
{
  return MEMORY[0x1E0DED468]();
}

uint64_t sub_18EC67938()
{
  return MEMORY[0x1E0DED470]();
}

uint64_t sub_18EC67944()
{
  return MEMORY[0x1E0DED478]();
}

uint64_t sub_18EC67950()
{
  return MEMORY[0x1E0DED480]();
}

uint64_t sub_18EC6795C()
{
  return MEMORY[0x1E0DED488]();
}

uint64_t sub_18EC67968()
{
  return MEMORY[0x1E0DED490]();
}

uint64_t sub_18EC67974()
{
  return MEMORY[0x1E0DED498]();
}

uint64_t sub_18EC67980()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_18EC6798C()
{
  return MEMORY[0x1E0DED5A8]();
}

uint64_t sub_18EC67998()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_18EC679A4()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_18EC679B0()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t sub_18EC679BC()
{
  return MEMORY[0x1E0DED698]();
}

uint64_t sub_18EC679C8()
{
  return MEMORY[0x1E0DED6A0]();
}

uint64_t sub_18EC679D4()
{
  return MEMORY[0x1E0DED748]();
}

uint64_t sub_18EC679E0()
{
  return MEMORY[0x1E0DED750]();
}

uint64_t sub_18EC679EC()
{
  return MEMORY[0x1E0DED7D0]();
}

uint64_t sub_18EC679F8()
{
  return MEMORY[0x1E0DED7D8]();
}

uint64_t sub_18EC67A04()
{
  return MEMORY[0x1E0DED800]();
}

uint64_t sub_18EC67A10()
{
  return MEMORY[0x1E0DED8D0]();
}

uint64_t sub_18EC67A1C()
{
  return MEMORY[0x1E0DED8D8]();
}

uint64_t sub_18EC67A28()
{
  return MEMORY[0x1E0DED900]();
}

uint64_t sub_18EC67A34()
{
  return MEMORY[0x1E0DED958]();
}

uint64_t sub_18EC67A40()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_18EC67A4C()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_18EC67A58()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_18EC67A64()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_18EC67A70()
{
  return MEMORY[0x1E0DF0F18]();
}

uint64_t sub_18EC67A7C()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_18EC67A88()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_18EC67A94()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_18EC67AA0()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_18EC67AAC()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_18EC67AB8()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_18EC67AC4()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_18EC67AD0()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_18EC67ADC()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_18EC67AE8()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_18EC67AF4()
{
  return MEMORY[0x1E0DEDFF8]();
}

uint64_t sub_18EC67B00()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_18EC67B0C()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_18EC67B18()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_18EC67B24()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t sub_18EC67B30()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_18EC67B3C()
{
  return MEMORY[0x1E0DEE8C8]();
}

uint64_t sub_18EC67B48()
{
  return MEMORY[0x1E0DEE8D0]();
}

uint64_t sub_18EC67B54()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_18EC67B60()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_18EC67B6C()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AGTypeApplyEnumData()
{
  return MEMORY[0x1E0CFEEF8]();
}

uint64_t AGTypeApplyFields2()
{
  return MEMORY[0x1E0CFEF00]();
}

uint64_t AGTypeGetKind()
{
  return MEMORY[0x1E0CFEF08]();
}

uint64_t AXCPCopySharedResourcesPreferencesDomainForDomain()
{
  return MEMORY[0x1E0DDD458]();
}

uint64_t AXSetUIAXReportSenderErrorLoggerFunction()
{
  return MEMORY[0x1E0DDD430]();
}

uint64_t AXSetValidationErrorLoggingFunction()
{
  return MEMORY[0x1E0DDD438]();
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98558](allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1E0C98570](theDict);
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
  MEMORY[0x1E0C985A0](theDict, keys, values);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1E0C985A8]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
  MEMORY[0x1E0C985D8](theDict);
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
  MEMORY[0x1E0C985E8](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFArrayRef CFLocaleCopyPreferredLanguages(void)
{
  return (CFArrayRef)MEMORY[0x1E0C98790]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
  MEMORY[0x1E0C98A80](key, value, applicationID);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B28]();
}

uint64_t MKBUserSessionIsLoginWindow()
{
  return MEMORY[0x1E0D4E578]();
}

uint64_t MKBUserTypeDeviceMode()
{
  return MEMORY[0x1E0D4E580]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x1E0CB3118](namestr);
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1E0CB3158]();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1E0CB3218](proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t _AXSInUnitTestMode()
{
  return MEMORY[0x1E0DDD978]();
}

uint64_t _AXSMossdeepEnabled()
{
  return MEMORY[0x1E0DDDA60]();
}

uint64_t _AXSReportValidationErrors()
{
  return MEMORY[0x1E0DDDB50]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x1E0C9A498]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x1E0C9A4B0]();
}

uint64_t _CFXPCCreateCFObjectFromXPCMessage()
{
  return MEMORY[0x1E0C9A7F0]();
}

uint64_t _CFXPCCreateXPCMessageWithCFObject()
{
  return MEMORY[0x1E0C9A808]();
}

uint64_t _NSDefaultFileSystemEncoding()
{
  return MEMORY[0x1E0CB3BC0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

float __exp10f(float a1)
{
  float result;

  MEMORY[0x1E0C80AD0](a1);
  return result;
}

const char *__cdecl _dyld_get_image_name(uint32_t image_index)
{
  return (const char *)MEMORY[0x1E0C80E68](*(_QWORD *)&image_index);
}

uint32_t _dyld_image_count(void)
{
  return MEMORY[0x1E0C80EB8]();
}

void _dyld_register_func_for_add_image(void (__cdecl *func)(const mach_header *, intptr_t))
{
  MEMORY[0x1E0C80F58](func);
}

uint64_t _get_cpu_capabilities()
{
  return MEMORY[0x1E0C80F88]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

uint64_t class_addMethodsBulk()
{
  return MEMORY[0x1E0DE7A58]();
}

BOOL class_conformsToProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1E0DE7A68](cls, protocol);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return (Method *)MEMORY[0x1E0DE7A78](cls, outCount);
}

Method class_getClassMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7A98](cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7AA8](cls, name);
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return (Ivar)MEMORY[0x1E0DE7AB8](cls, name);
}

const char *__cdecl class_getName(Class cls)
{
  return (const char *)MEMORY[0x1E0DE7AC8](cls);
}

objc_property_t class_getProperty(Class cls, const char *name)
{
  return (objc_property_t)MEMORY[0x1E0DE7AD0](cls, name);
}

Class class_getSuperclass(Class cls)
{
  return (Class)MEMORY[0x1E0DE7AD8](cls);
}

BOOL class_isMetaClass(Class cls)
{
  return MEMORY[0x1E0DE7AE8](cls);
}

IMP class_replaceMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return (IMP)MEMORY[0x1E0DE7AF0](cls, name, imp, types);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x1E0C82D08](key);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x1E0C82E58](queue);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
  MEMORY[0x1E0C82E80](queue, key, context, destructor);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
  MEMORY[0x1E0C82F40](source, value);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x1E0C82FC8](when, delta);
}

int dlclose(void *__handle)
{
  return MEMORY[0x1E0C83030](__handle);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

uint64_t dyld_image_path_containing_address()
{
  return MEMORY[0x1E0C83100]();
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1E0C83668]();
}

passwd *__cdecl getpwnam(const char *a1)
{
  return (passwd *)MEMORY[0x1E0C83790](a1);
}

passwd *__cdecl getpwuid(uid_t a1)
{
  return (passwd *)MEMORY[0x1E0C837A0](*(_QWORD *)&a1);
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1E0DE7B10](block);
}

ptrdiff_t ivar_getOffset(Ivar v)
{
  return MEMORY[0x1E0DE7B30](v);
}

const char *__cdecl ivar_getTypeEncoding(Ivar v)
{
  return (const char *)MEMORY[0x1E0DE7B38](v);
}

launch_data_t launch_data_alloc(launch_data_type_t type)
{
  return (launch_data_t)MEMORY[0x1E0C83AA0](*(_QWORD *)&type);
}

BOOL launch_data_dict_insert(launch_data_t ldict, const launch_data_t lval, const char *key)
{
  return MEMORY[0x1E0C83AA8](ldict, lval, key);
}

launch_data_t launch_data_dict_lookup(const launch_data_t ldict, const char *key)
{
  return (launch_data_t)MEMORY[0x1E0C83AB0](ldict, key);
}

void launch_data_free(launch_data_t ld)
{
  MEMORY[0x1E0C83AB8](ld);
}

uint64_t launch_data_get_integer(const launch_data_t ld)
{
  return MEMORY[0x1E0C83AC0](ld);
}

launch_data_type_t launch_data_get_type(const launch_data_t ld)
{
  return MEMORY[0x1E0C83AC8](ld);
}

launch_data_t launch_data_new_string(const char *val)
{
  return (launch_data_t)MEMORY[0x1E0C83AD0](val);
}

launch_data_t launch_msg(const launch_data_t request)
{
  return (launch_data_t)MEMORY[0x1E0C83B00](request);
}

float log10f(float a1)
{
  float result;

  MEMORY[0x1E0C83BC8](a1);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1E0C83DB8](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F10](ptr, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

char *__cdecl method_copyArgumentType(Method m, unsigned int index)
{
  return (char *)MEMORY[0x1E0DE7B40](m, *(_QWORD *)&index);
}

char *__cdecl method_copyReturnType(Method m)
{
  return (char *)MEMORY[0x1E0DE7B48](m);
}

IMP method_getImplementation(Method m)
{
  return (IMP)MEMORY[0x1E0DE7B68](m);
}

SEL method_getName(Method m)
{
  return (SEL)MEMORY[0x1E0DE7B70](m);
}

unsigned int method_getNumberOfArguments(Method m)
{
  return MEMORY[0x1E0DE7B78](m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return (const char *)MEMORY[0x1E0DE7B88](m);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

int objc_getClassList(Class *buffer, int bufferCount)
{
  return MEMORY[0x1E0DE7CB8](buffer, *(_QWORD *)&bufferCount);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1E0DE7FF8](a1);
}

id object_getIvar(id a1, Ivar a2)
{
  return (id)MEMORY[0x1E0DE8018](a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_log_with_args()
{
  return MEMORY[0x1E0C84790]();
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t pc_session_add_metric()
{
  return MEMORY[0x1E0DE8150]();
}

uint64_t pc_session_begin()
{
  return MEMORY[0x1E0DE8158]();
}

uint64_t pc_session_create()
{
  return MEMORY[0x1E0DE8170]();
}

uint64_t pc_session_destroy()
{
  return MEMORY[0x1E0DE8178]();
}

uint64_t pc_session_end()
{
  return MEMORY[0x1E0DE8188]();
}

uint64_t pc_session_get_value()
{
  return MEMORY[0x1E0DE81A8]();
}

uint64_t pc_session_set_procpid()
{
  return MEMORY[0x1E0DE81C0]();
}

int posix_spawn(pid_t *a1, const char *a2, const posix_spawn_file_actions_t *a3, const posix_spawnattr_t *a4, char *const __argv[], char *const __envp[])
{
  return MEMORY[0x1E0C84B38](a1, a2, a3, a4, __argv, __envp);
}

char *__cdecl property_copyAttributeValue(objc_property_t property, const char *attributeName)
{
  return (char *)MEMORY[0x1E0DE8060](property, attributeName);
}

BOOL protocol_conformsToProtocol(Protocol *proto, Protocol *other)
{
  return MEMORY[0x1E0DE8080](proto, other);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  const char *v4;
  char *v5;
  objc_method_description result;

  v4 = (const char *)MEMORY[0x1E0DE80A8](p, aSel, isRequiredMethod, isInstanceMethod);
  result.types = v5;
  result.name = v4;
  return result;
}

int pthread_getschedparam(pthread_t a1, int *a2, sched_param *a3)
{
  return MEMORY[0x1E0C84DB8](a1, a2, a3);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x1E0C84ED8]();
}

int pthread_setschedparam(pthread_t a1, int a2, const sched_param *a3)
{
  return MEMORY[0x1E0C84F10](a1, *(_QWORD *)&a2, a3);
}

void qsort_b(void *__base, size_t __nel, size_t __width, void *__compar)
{
  MEMORY[0x1E0C84F90](__base, __nel, __width, __compar);
}

const char *__cdecl sel_getName(SEL sel)
{
  return (const char *)MEMORY[0x1E0DE80C8](sel);
}

int seteuid(uid_t a1)
{
  return MEMORY[0x1E0C85330](*(_QWORD *)&a1);
}

int setgid(gid_t a1)
{
  return MEMORY[0x1E0C85338](*(_QWORD *)&a1);
}

int setuid(uid_t a1)
{
  return MEMORY[0x1E0C85390](*(_QWORD *)&a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1E0C85540](__s1);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1E0C85570](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_EnumCaseName()
{
  return MEMORY[0x1E0DEEA90]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isOptionalType()
{
  return MEMORY[0x1E0DEEDA0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_reflectionMirror_count()
{
  return MEMORY[0x1E0DEEE18]();
}

uint64_t swift_reflectionMirror_normalizedType()
{
  return MEMORY[0x1E0DEEE20]();
}

uint64_t swift_reflectionMirror_subscript()
{
  return MEMORY[0x1E0DEEE28]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x1E0DEEE60]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t uldn_close()
{
  return MEMORY[0x1E0DE6300]();
}

uint64_t uldn_languageDisplayName()
{
  return MEMORY[0x1E0DE6310]();
}

uint64_t uldn_localeDisplayName()
{
  return MEMORY[0x1E0DE6318]();
}

uint64_t uldn_open()
{
  return MEMORY[0x1E0DE6320]();
}

uint64_t uldn_regionDisplayName()
{
  return MEMORY[0x1E0DE6330]();
}

uint64_t uldn_variantDisplayName()
{
  return MEMORY[0x1E0DE6340]();
}

uint64_t ulocdata_close()
{
  return MEMORY[0x1E0DE6488]();
}

uint64_t ulocdata_getExemplarSet()
{
  return MEMORY[0x1E0DE64A0]();
}

uint64_t ulocdata_open()
{
  return MEMORY[0x1E0DE64B0]();
}

uint64_t uscript_getScriptExtensions()
{
  return MEMORY[0x1E0DE68A0]();
}

uint64_t uscript_getShortName()
{
  return MEMORY[0x1E0DE68A8]();
}

uint64_t uset_clear()
{
  return MEMORY[0x1E0DE6970]();
}

uint64_t uset_close()
{
  return MEMORY[0x1E0DE6988]();
}

uint64_t uset_getItem()
{
  return MEMORY[0x1E0DE69B0]();
}

uint64_t uset_getItemCount()
{
  return MEMORY[0x1E0DE69B8]();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

